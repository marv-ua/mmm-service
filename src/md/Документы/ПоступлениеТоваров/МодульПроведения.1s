////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем СчетРасчетовСПоставщиком;
Перем СчетАвансовВыданных;
Перем ОплатаДоговора;
Перем ЦеныВДоговоре;
Перем ВестиУчетРасчетовУЕ;
Перем Валюта;
Перем Кратность;
Перем СуммаПоступления;
Перем АвансПоДоговору;
Перем АвансБезДоговора;
Перем АвансПоДоговоруРуб;
Перем АвансБезДоговораРуб;
Перем БезДоговора;
Перем ПродажаОблагаласьЕНВД;
Перем КодВидаПоступления; 
Перем ЗадолженностьПоРасчетамВУЕРуб, ЗадолженностьПоРасчетамВУЕВал;
Перем НПРКурсоваяРазница;

// используемые налоговые счета
Перем СчН02_02, СчН02_03, СчН02_07, СчН02_04_1, СчН02_04_2, СчН02_04_3, СчН06_01, СчН06_04, СчН07_01, СчН07_05;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ЗаполнитьТаблицуДокумента();
//                                                    
Процедура ЗаполнитьТаблицуДокумента(ТаблицаДокумента);		
	ВыгрузитьТабличнуюЧасть(ТаблицаДокумента, "Товар,Количество,НДС,НП,Всего");
	ТаблицаДокумента.НоваяКолонка("ВидНоменклатуры");
	ТаблицаДокумента.НоваяКолонка("СтавкаНДСЭлемент");
	ТаблицаДокумента.НоваяКолонка("СтавкаНДС");
	ТаблицаДокумента.НоваяКолонка("СтавкаНП");
	ТаблицаДокумента.НоваяКолонка("СуммаРуб", "Число");
	ТаблицаДокумента.НоваяКолонка("НДСРуб", "Число");
	ВыбратьСтроки();
	УдаленоСтрок = 0;
	Пока ПолучитьСтроку() = 1 Цикл
		ТаблицаДокумента.ПолучитьСтрокуПоНомеру(НомерСтроки - УдаленоСтрок);
		
		ТаблицаДокумента.ВидНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
		
		Если (КодВидаПоступления = 4) и (ВариантОтраженияВозврата = 1) Тогда
			ТаблицаДокумента.СтавкаНДС = глСтавкаНалога(Контекст, "НДС").Ставка;
			ТаблицаДокумента.СтавкаНП = глСтавкаНалога(Контекст, "НП").Ставка;  
			ТаблицаДокумента.СтавкаНДСЭлемент = глСтавкаНалога(Контекст, "НДС");
		Иначе
			ТаблицаДокумента.СтавкаНДС = глСтавкаНалога(Контекст, "НДС");
			ТаблицаДокумента.СтавкаНП = глСтавкаНалога(Контекст, "НП");
			ТаблицаДокумента.СтавкаНДСЭлемент = глСтавкаНалога(Контекст, "НДС");
		КонецЕсли;
		
		Если ЦеныВДоговоре = 2 Тогда
			ТаблицаДокумента.Всего  = ТаблицаДокумента.Всего * Курс / Кратность;
			ТаблицаДокумента.НДС  = ТаблицаДокумента.НДС * Курс / Кратность;
		КонецЕсли;  
		
		ТаблицаДокумента.СуммаРуб = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС;
		ТаблицаДокумента.НДСРуб = ТаблицаДокумента.НДС;
		
		Если (ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		и (ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
			ТаблицаДокумента.УдалитьСтроку(); // для товаров на комиссии проводок не формируем
			УдаленоСтрок = УдаленоСтрок + 1;
		КонецЕсли; 
		
	КонецЦикла;
КонецПроцедуры //ЗаполнитьТаблицуДокумента

//******************************************************************************
// ПолучитьКодВидаДвижения();
//                                                    
Функция ПолучитьКодВидаПоступления() 
	
	ПромежуточныйКод = 0;
	Если ВидПоступления = 12 Тогда  // возврат товаров отгруженных (счет 45)
		ПромежуточныйКод = 3;
		
	Иначе
		
		Если ВидПоступления = 11 Тогда // поступление от поставщика
		    ПромежуточныйКод = 1;
			
		ИначеЕсли ВидПоступления = 13 Тогда  // возврат от покупателя
		    ПромежуточныйКод = 4;
		КонецЕсли;
		
		Если МестоХранения.ТипСклада = Перечисление.ТипыСкладов.Розничный Тогда
	        ПромежуточныйКод = ПромежуточныйКод + 1;
		КонецЕсли;
	
	КонецЕсли; 
	
	Возврат ПромежуточныйКод;
	
КонецФункции

//******************************************************************************
// РассчитатьСтоимостьТоваров()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Рассчитывается стоимость возвращаемых товаров. 
//
Процедура РассчитатьСтоимостьТоваров(ТаблицаОстатков)
	                                                    
	СписокТоваров = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокТоваров, "Товар");
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры, Договор, 2);
	БухИт.ВыполнитьЗапрос(, ТекущийДокумент(), "45",,,,,"СК");
	
	БухИтНУ = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНУ.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтНУ.Опции(1,);
	БухИтНУ.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	
	Если Константа.РассчитыватьВНалоговомУчетеСреднююСтоимостьОтгруженныхТоваровВРазрезеДоговоров.Получить(ДатаДок)=Да Тогда
		БухИтНУ.ИспользоватьСубконто(ВидыСубконто.Основание, Договор);
	КонецЕсли;

	БухИтНУ.ВыполнитьЗапрос(, ТекущийДокумент(), "Н02.04.1, Н02.04.2, Н02.04.3",,,,,"СК");
	
	БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКМС.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтКМС.Опции(1,);
	БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комитентами,, 1);
	БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комиссионерами, Договор, 2);
	БухИтКМС.ВыполнитьЗапрос(, ТекущийДокумент(), "КМС",,,,,"СК");
	
	ТаблицаОстатков.ВыбратьСтроки();
	Пока ТаблицаОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблицаОстатков.Количество <= 0 Тогда
	        Продолжить;
		КонецЕсли;                                                                        
		КоличествоПоДокументу = ТаблицаОстатков.Количество;
		    
		КоличествоОтгруженныхТоваров = 0;
		СуммаОтгруженныхТоваров = 0;
		
		Если (ТаблицаОстатков.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		   и (ТаблицаОстатков.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
			Если БухИтКМС.ПолучитьСубконто(ВидыСубконто.Номенклатура,, ТаблицаОстатков.Товар) = 1 Тогда
				КоличествоОтгруженныхТоваров = БухИтКМС.СКД("К");
				
				ТаблицаСКомиссионнымиТоварами = СоздатьОбъект("ТаблицаЗначений");
				ТаблицаСКомиссионнымиТоварами.НоваяКолонка("Сумма", "Число");
				ТаблицаСКомиссионнымиТоварами.НоваяКолонка("Количество", "Число");
				ТаблицаСКомиссионнымиТоварами.НоваяКолонка("ДоговорКомиссии");
				                                          
				УчтенноеКоличество = 0;
				
				БухИтКМС.ВыбратьСубконто(ВидыСубконто.ДоговорыС_Комитентами);
				Пока (БухИтКМС.ПолучитьСубконто(ВидыСубконто.ДоговорыС_Комитентами) = 1) и (УчтенноеКоличество <= КоличествоПоДокументу) Цикл
					ТаблицаСКомиссионнымиТоварами.НоваяСтрока();
					ТаблицаСКомиссионнымиТоварами.Сумма = БухИтКМС.СКД("С");
					ТаблицаСКомиссионнымиТоварами.Количество = БухИтКМС.СКД("К");
					ТаблицаСКомиссионнымиТоварами.ДоговорКомиссии = БухИтКМС.Субконто(ВидыСубконто.ДоговорыС_Комитентами);
					УчтенноеКоличество = УчтенноеКоличество + ТаблицаСКомиссионнымиТоварами.Количество;
				КонецЦикла;
				ТаблицаОстатков.КомиссионныеТовары = ТаблицаСКомиссионнымиТоварами;
			КонецЕсли;    
			
		ИначеЕсли БухИт.ПолучитьСубконто(ВидыСубконто.Номенклатура,, ТаблицаОстатков.Товар) = 1 Тогда
			КоличествоОтгруженныхТоваров = БухИт.СКД("К");
			СуммаОтгруженныхТоваров = БухИт.СКД("С");
		КонецЕсли;
		
		Если КоличествоОтгруженныхТоваров < КоличествоПоДокументу Тогда
			
			ТекстСообщения = "Ранее отгружено "+КоличествоОтгруженныхТоваров+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+
				" из необходимых "+КоличествоПоДокументу+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+" товара "+ТаблицаОстатков.Товар;
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаОстатков.Количество = КоличествоОтгруженныхТоваров;
		ТаблицаОстатков.Всего      = СуммаОтгруженныхТоваров;
		
		// Заполним таблицу по данным налогового учета.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			Если (ТаблицаОстатков.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		       и (ТаблицаОстатков.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
			   	Продолжить;
			КонецЕсли;
		   	
			КоличествоОтгруженныхТоваров = 0;
			СуммаОтгруженныхТоваров      = 0;
			Если БухИтНУ.ПолучитьСубконто(ВидыСубконто.Номенклатура,, ТаблицаОстатков.Товар) = 1 Тогда
				
				Если Константа.РассчитыватьВНалоговомУчетеСреднююСтоимостьОтгруженныхТоваровВРазрезеДоговоров.Получить(ДатаДок)=Да Тогда
					БухИтНУ.ПолучитьСубконто(ВидыСубконто.Основание,, Договор);
				КонецЕсли;

				КоличествоОтгруженныхТоваров = БухИтНУ.СКД("К");
				СуммаОтгруженныхТоваров = БухИтНУ.СКД("С");
			КонецЕсли;
			
			Если КоличествоОтгруженныхТоваров < КоличествоПоДокументу Тогда
				ТекстСообщения = "По данным налогового учета ранее отгружено "+КоличествоОтгруженныхТоваров+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+
				" из необходимых "+КоличествоПоДокументу+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+" товара "+ТаблицаОстатков.Товар;
				Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
					
				Иначе
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
				КонецЕсли;
			КонецЕсли;
			ТаблицаОстатков.КоличествоНУ = КоличествоОтгруженныхТоваров;
			ТаблицаОстатков.ВсегоНУ = СуммаОтгруженныхТоваров;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // РассчитатьСтоимостьТоваров()

//******************************************************************************
// РассчитатьСуммуАванса()
//
Процедура РассчитатьСуммуАванса()
	
	АвансБезДоговора = 0;
	АвансБезДоговораРуб = 0;
	АвансПоДоговору = 0;
	АвансПоДоговоруРуб = 0;
	
	Если ЗачитыватьАванс <> 1 Тогда //Зачитывать аванс
		СписокДоговоров = СоздатьОбъект("СписокЗначений");
		СписокДоговоров.ДобавитьЗначение(Договор);
		БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Контрагент);
		Если (ЗачитыватьАванс = 0) и (ПустоеЗначение(БезДоговора) = 0) Тогда //Зачитывать аванс без договора
			СписокДоговоров.ДобавитьЗначение(БезДоговора);
		КонецЕсли;                                  
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры, СписокДоговоров, 2);
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда	
				БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"60.22",,Валюта,,,"СВ");
			Иначе
				БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"60.22",,Валюта,,,"В");
			КонецЕсли;

		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
		    БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"60.7",,Валюта,,,"СВ");
			
		Иначе
			БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"60.2",,,,,"С");
		КонецЕсли;

		Если БухИт.ПолучитьСубконто(ВидыСубконто.Договоры,, БезДоговора) = 1 Тогда
			Если ОплатаДоговора = 2 Тогда
			    АвансБезДоговора = БухИт.СКД("В");
				Если ДатаДок >= '01.01.2008' Тогда	
					АвансБезДоговораРуб = БухИт.СКД("С");
				КонецЕсли;
				
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				АвансБезДоговора = БухИт.СКД("В");
				АвансБезДоговораРуб = БухИт.СКД("С");
				
			Иначе
				АвансБезДоговора = БухИт.СКД("С");
			КонецЕсли;
		КонецЕсли;
		
		Если БухИт.ПолучитьСубконто(ВидыСубконто.Договоры,, Договор) = 1 Тогда
			Если ОплатаДоговора = 2 Тогда
			    АвансПоДоговору = БухИт.СКД("В"); 
				Если ДатаДок >= '01.01.2008' Тогда	
					АвансПоДоговоруРуб = БухИт.СКД("С");
				КонецЕсли;
				
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				АвансПоДоговору = БухИт.СКД("В");
				АвансПоДоговоруРуб = БухИт.СКД("С");
				
			Иначе
				АвансПоДоговору = БухИт.СКД("С");
			КонецЕсли;
		КонецЕсли;
		
		АвансБезДоговора = Макс(АвансБезДоговора, 0);
		АвансБезДоговораРуб = Макс(АвансБезДоговораРуб, 0);
		АвансПоДоговору = Макс(АвансПоДоговору, 0);
		АвансПоДоговоруРуб = Макс(АвансПоДоговоруРуб, 0);
	КонецЕсли;
	
КонецПроцедуры // РассчитатьСуммуАванса()

//*****************************************************************************
// ЗачестьАванс(ЗачетАванса, ДоговорАванса)
//
Процедура ЗачестьАванс(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
	
	Если ЗачетАванса > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ТВ";
		Операция.СодержаниеПроводки = "Зачтен аванс";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетРасчетовСПоставщиком;
		Операция.Дебет.Контрагенты = Контрагент;
		Операция.Дебет.Договоры = Договор;
		Операция.Кредит.Счет = СчетАвансовВыданных;
		Операция.Кредит.Контрагенты = Контрагент;
		Операция.Кредит.Договоры = ДоговорАванса;
        
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Если (АвансПоДоговору + АвансБезДоговора) = ЗачетАванса Тогда
					ЗачетАвансаРуб = АвансПоДоговоруРуб + АвансБезДоговораРуб;
				Иначе
					КурсЗачетаАванса = Окр((АвансПоДоговоруРуб + АвансБезДоговораРуб)/(АвансПоДоговору + АвансБезДоговора), 4, 1);
					ЗачетАвансаРуб = ЗачетАванса*КурсЗачетаАванса;
				КонецЕсли;
			Иначе
				ЗачетАвансаРуб = ЗачетАванса*Курс/Кратность;
			КонецЕсли;
			Операция.Сумма = ЗачетАвансаРуб;
		    Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса;
			
		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
			Операция.Сумма = ЗачетАвансаРуб;
			Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса; 
			
			ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб - Операция.Сумма;
			ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал - Операция.ВалСумма;
			
		Иначе
			Операция.Сумма = ЗачетАванса;
		КонецЕсли;  
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ВЛ";
				Операция.СодержаниеПроводки = "Зачтена предоплата";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = СчетПоКоду("ВАЛ.60");
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = ДоговорАванса;
				Операция.Сумма = ЗачетАванса*Курс/Кратность;
				Операция.Валюта = Валюта;
				Операция.ВалСумма = ЗачетАванса;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗачестьАванс()

//******************************************************************************
// СформироватьПроводкиДляЦелейНалоговогоУчета()
//
Процедура СформироватьПроводкиДляЦелейНалоговогоУчета(Знач СтоимостьТоваров, ТаблицаОстатков)
	
	Если КодВидаПоступления <= 2 Тогда // поступление от поставщика
		Если (СтоимостьТоваров > 0) или (Количество <> 0) Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		    Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Поступили товары";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчН02_02;
			Операция.Дебет.Номенклатура = Товар;
			Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
			Операция.Дебет.Основание = Договор;
			Операция.Сумма = СтоимостьТоваров;
			Операция.Количество = Количество;
		КонецЕсли;
		                                                         
	// иначе отражается возврат
	ИначеЕсли Количество <> 0 Тогда
		Если Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			СчетУчетаНУ = СчН02_03;
			СчетУчетаОтгрузкиНУ = СчН02_04_2;
			СчетСписанияНУ = СчН07_01;
			СчетВыручкиНУ = СчН06_01;
			
		ИначеЕсли Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
			СчетУчетаНУ = СчН02_07;
			СчетУчетаОтгрузкиНУ = СчН02_04_3;
			СчетСписанияНУ = СчН07_01;
			СчетВыручкиНУ = СчН06_01;
			
		Иначе //товары
			СчетУчетаНУ = СчН02_02;
			СчетУчетаОтгрузкиНУ = СчН02_04_1;
			СчетСписанияНУ = СчН07_05;
			СчетВыручкиНУ = СчН06_04;
		КонецЕсли;
		    
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	    Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Возврат";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Количество = -Количество;
		Операция.Кредит.Счет = СчетУчетаНУ;
		Операция.Кредит.Номенклатура = Товар;
		Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат;
		Операция.Кредит.Основание = Договор;
		Если КодВидаПоступления = 3 Тогда // возврат товаров отгруженных
			Операция.Дебет.Счет = СчетУчетаОтгрузкиНУ;
			Операция.Дебет.Номенклатура = Товар;
			Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат;
			Операция.Дебет.Основание = Договор;
			
			// Определим стоимость возвращаемого товара по данным налогового учета.
			Если Количество >= ТаблицаОстатков.КоличествоНУ Тогда
				СтоимостьТоваров = ТаблицаОстатков.ВсегоНУ;
				
			Иначе
				СтоимостьТоваров = Окр(Количество*(ТаблицаОстатков.ВсегоНУ/ТаблицаОстатков.КоличествоНУ), 2, 1);
			КонецЕсли;
	
			// Уменьшим в таблице остаток товаров.
			ТаблицаОстатков.ВсегоНУ      = ТаблицаОстатков.ВсегоНУ - СтоимостьТоваров;
			ТаблицаОстатков.КоличествоНУ = ТаблицаОстатков.КоличествоНУ - Количество;
			
			Операция.Сумма = -СтоимостьТоваров;
			
		Иначе // возврат реализованных товаров
			
			СтоимостьТоваров = ВсегоСтоимостьНУ;
			
			Операция.Сумма = -СтоимостьТоваров;
			
			// При продаже товара, облагаемой ЕНВД, стоимость товаров,
			// и выручка не участвуют в формировании налоговой базы,
			// следовательно это необходимо учесть.
			ПродажаОблагаласьЕНВД = 0;
			Если ДокументОснование.Вид() = "ПродажаВРозницу" Тогда
			    Если ДокументОснование.ПродажаОблагаетсяЕНВД = 1 Тогда 
			        ПродажаОблагаласьЕНВД = 1;
			    КонецЕсли;
			КонецЕсли;
			Если ПродажаОблагаласьЕНВД = 0 Тогда
				Операция.Дебет.Счет = СчетСписанияНУ;
				
				// Состорнируем выручку
				ВыручкаБезНалогов = Всего - НДС - НП;
				Если ЦеныВДоговоре = 2 Тогда
					ВыручкаБезНалогов = ВыручкаБезНалогов*Курс/Кратность;
				КонецЕсли;
		
				Если ВыручкаБезНалогов > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				    Операция.НомерЖурнала = "НУ";
					Операция.СодержаниеПроводки = "Сторнирование выручки";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчетВыручкиНУ;
					Операция.Кредит.Номенклатура = Товар;
					Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат;
					Операция.Кредит.Основание = Договор;
					Операция.Сумма = -ВыручкаБезНалогов;
					Операция.Количество = -Количество;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводкиДляЦелейНалоговогоУчета()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Сч19_3 = СчетПоКоду("19.3");
	Сч21   = СчетПоКоду("21");
	Сч41_1 = СчетПоКоду("41.1");
	Сч41_2 = СчетПоКоду("41.2");
	Сч41_3 = СчетПоКоду("41.3");
	Сч41_4 = СчетПоКоду("41.4");
	Сч43   = СчетПоКоду("43");
	Сч45   = СчетПоКоду("45");
	Сч60_1 = СчетПоКоду("60.1");
	Сч60_2 = СчетПоКоду("60.2");
	Сч60_6 = СчетПоКоду("60.6");
	Сч60_7 = СчетПоКоду("60.7");
	Сч60_11 = СчетПоКоду("60.11");
	Сч60_22 = СчетПоКоду("60.22");
	Сч62_1  = СчетПоКоду("62.1");
	Сч62_2  = СчетПоКоду("62.2");
	Сч62_6  = СчетПоКоду("62.6");
	Сч62_7  = СчетПоКоду("62.7");
	Сч62_11 = СчетПоКоду("62.11");
	Сч62_22 = СчетПоКоду("62.22");
	Сч62_4  = СчетПоКоду("62.4");
	Сч62_8  = СчетПоКоду("62.8");
	Сч62_44 = СчетПоКоду("62.44");
	Сч68_2  = СчетПоКоду("68.2");
	Сч68_5  = СчетПоКоду("68.5");
	Сч76_5  = СчетПоКоду("76.5");
	Сч76_6	= СчетПоКоду("76.6");
	Сч76_55 = СчетПоКоду("76.55");
	Сч90_6  = СчетПоКоду("90.6");
	Сч004 = СчетПоКоду("004");
	СчГТД = СчетПоКоду("ГТД");
	СчКМС = СчетПоКоду("КМС");
	СчКТР = СчетПоКоду("КТР");  
	
	СчУЕ_60 = СчетПоКоду("УЕ.60");
	СчУЕ_62 = СчетПоКоду("УЕ.62"); 
	
	СчВАЛ_60 = СчетПоКоду("ВАЛ.60");
	СчВАЛ_62 = СчетПоКоду("ВАЛ.62");
	СчНПР = СчетПоКоду("НПР.41");
    
	// Налоговые счета.
	СчН02_02 = СчетПоКоду("Н02.02.1");
	СчН02_03 = СчетПоКоду("Н02.03");
	СчН02_07 = СчетПоКоду("Н02.07");
	СчН02_04_1 = СчетПоКоду("Н02.04.1");
	СчН02_04_2 = СчетПоКоду("Н02.04.2");
	СчН02_04_3 = СчетПоКоду("Н02.04.3");
	СчН06_01 = СчетПоКоду("Н06.01");
	СчН06_04 = СчетПоКоду("Н06.04");
	СчН07_01 = СчетПоКоду("Н07.01");
	СчН07_05 = СчетПоКоду("Н07.05"); 
	
	ЗадолженностьПоРасчетамВУЕРуб = 0;
	ЗадолженностьПоРасчетамВУЕВал = 0;
	
	ЦеныВДоговоре = 1; // в рублях
	ВестиУчетРасчетовУЕ = 0;
	
	Если ВидПоступления = 5 Тогда // возврат товара, реализованного в розницу
	ИначеЕсли Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
		ВалютаДоговора = Договор.ВалютаДоговора;
		ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
		ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
	КонецЕсли;
	
	Если ЦеныВДоговоре = 2 Тогда
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
		
		Если Курс = 0 Тогда
			ТекстСообщения = "Не указан курс валюты";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидПоступления > 10 Тогда
		Если (МестоХранения.Выбран() = 0) Тогда
			ТекстСообщения = "Не выбран склад";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;    
		Если (МестоХранения.ТипСклада.Выбран() = 0) Тогда
			ТекстСообщения = "Для склада не установлен тип";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		КодВидаПоступления = ПолучитьКодВидаПоступления();
	Иначе
		КодВидаПоступления = ВидПоступления;
	КонецЕсли;
	
	// Если ведется раздельный учет товаров в рознице и в опте,
	// то необходимо учесть, что товары в рознице учитываются
	// на счете Н02.02.2.
	Если КодВидаПоступления <> 3 Тогда
		Если МестоХранения.ТипСклада = Перечисление.ТипыСкладов.Розничный Тогда
	        Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
				СчН02_02 = СчетПоКоду("Н02.02.2");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаДоговора = 2 Тогда
		СчетРасчетовСПоставщиком         = Сч60_11;
		СчетАвансовВыданных              = Сч60_22;
		СчетРасчетовСПокупателем         = Сч62_11;
		СчетАвансовПолученных            = Сч62_22;
		СчетРасчетовЗаКомиссионныеТовары = Сч62_44;
		СчетРасчетовСКомитентом          = Сч76_55;
		Если ДатаДок >= '01.01.2008' Тогда
			СчетАвансовВыданныхПереоценка = СчВАЛ_60;
		Иначе
			СчетАвансовВыданныхПереоценка = Сч60_22;
		КонецЕсли;
		
		глТаблицаСчетов.УдалитьСтроки();

		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = Сч60_11;
		глТаблицаСчетов.Субконто1 = Контрагент;
		глТаблицаСчетов.Субконто2 = Договор;
		глТаблицаСчетов.Субконто3 = "";
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.Курс = Курс;
		
		Если ЗачитыватьАванс = 1 Тогда
		ИначеЕсли КодВидаПоступления > 2 Тогда
		Иначе
			глТаблицаСчетов.НоваяСтрока();
			глТаблицаСчетов.Счет = СчетАвансовВыданныхПереоценка;
			глТаблицаСчетов.Субконто1 = Контрагент;
			глТаблицаСчетов.Субконто2 = Договор;
			глТаблицаСчетов.Субконто3 = "";
			глТаблицаСчетов.Валюта = Валюта;
			глТаблицаСчетов.Курс = Курс;
			Если ЗачитыватьАванс = 0 Тогда
				БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Контрагент);
				Если ПустоеЗначение(БезДоговора) = 0 Тогда
					глТаблицаСчетов.НоваяСтрока();
					глТаблицаСчетов.Счет = СчетАвансовВыданныхПереоценка;
					глТаблицаСчетов.Субконто1 = Контрагент;
					глТаблицаСчетов.Субконто2 = БезДоговора;
					глТаблицаСчетов.Субконто3 = "";
					глТаблицаСчетов.Валюта = Валюта;
					глТаблицаСчетов.Курс = Курс;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		глПереоценкаСчетов(Контекст, глТаблицаСчетов,, 0);
		
	ИначеЕсли ВестиУчетРасчетовУЕ = 0 Тогда
	    СчетРасчетовСПоставщиком = Сч60_1;
		СчетАвансовВыданных = Сч60_2;
		СчетРасчетовСПокупателем = Сч62_1;
		СчетАвансовПолученных    = Сч62_2;
		СчетРасчетовЗаКомиссионныеТовары = Сч62_4;
		СчетРасчетовСКомитентом = Сч76_5;
		
	Иначе 
		СчетРасчетовСПоставщиком = Сч60_6;
		СчетАвансовВыданных = Сч60_7;
		СчетРасчетовСПокупателем = Сч62_6;
		СчетАвансовПолученных    = Сч62_7;
		СчетРасчетовЗаКомиссионныеТовары = Сч62_8;
		СчетРасчетовСКомитентом = Сч76_6;
	КонецЕсли;
    
	СуммаПоступления = 0;
	СуммаЗачтенногоАванса = 0;
	СуммаЗачтенногоАвансаРуб = 0;
	КурсАванса = 0;
	ВыделенныйНДС = 0;
	ВыделенныйНДСРуб = 0;
	СуммоваяРазницаДляНДС = 0;
	СуммоваяРазницаДляНП = 0;
	СуммоваяРазницаДляСтоимости = 0;
	КолСтрокДокумента = КоличествоСтрок();
	
	// Подготовим предварительные данные для дальнейшего расчета
	// в зависимости от типа поступления (от покупателя или возврат).
	Если КодВидаПоступления <= 2 Тогда // поступление от поставшика
		СуммаПоступления = Итог("Всего");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
		    Если Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
				ТекстСообщения = "Номенклатурная единица "+Товар+" не является товаром.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
	
			Если Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				СуммаПоступления = СуммаПоступления - Всего;
				КолСтрокДокумента = КолСтрокДокумента - 1;
			КонецЕсли;
		КонецЦикла;
		
		Если (ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 0) Тогда
			Если ОплатаДоговора = 2 Тогда
			    СуммаВал = СуммаПоступления;
			
			Иначе
				СуммаВал = Окр(СуммаПоступления * Курс / Кратность, 2, 1);
			КонецЕсли;
			
		Иначе
			СуммаВал = СуммаПоступления;
		КонецЕсли;
	
		// Заранее расчитаем сумму зачтенного аванса.
		РассчитатьСуммуАванса();
		
		ЗачетАвансаПоДоговору  = 0;
		ЗачетАвансаБезДоговора = 0;
		ЗачетАвансаПоДоговоруРуб  = 0;
		ЗачетАвансаБезДоговораРуб = 0;
		
		Если (ВестиУчетРасчетовУЕ = 1)
		или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')) Тогда
			ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, СуммаВал);
			ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, СуммаВал - ЗачетАвансаПоДоговору);
			
			Аванс = АвансПоДоговору + АвансБезДоговора;
			ЗачетАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
			
			Если ЗачетАванса = Аванс Тогда
			    ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
				ЗачетАвансаБезДоговораРуб = АвансБезДоговораРуб;
				
			ИначеЕсли ЗачетАванса > АвансПоДоговору Тогда
				ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
				ЗачетАвансаБезДоговораРуб = Окр(ЗачетАвансаБезДоговора * Окр(АвансБезДоговораРуб / ?(АвансБезДоговора = 0, 1, АвансБезДоговора), 4, 1), 2, 1);
				
			Иначе
				ЗачетАвансаПоДоговоруРуб = Окр(ЗачетАвансаПоДоговору * Окр(АвансПоДоговоруРуб / ?(АвансПоДоговору = 0, 1, АвансПоДоговору), 4, 1), 2, 1);
				ЗачетАвансаБезДоговораРуб = 0;
			КонецЕсли;
			
			// Запомним сумму зачет для дальнейшего определения рублевой стоимости товара.
			СуммаЗачтенногоАванса = ЗачетАванса;
			СуммаЗачтенногоАвансаРуб = ЗачетАвансаБезДоговораРуб + ЗачетАвансаПоДоговоруРуб;
			КурсАванса = ?(СуммаЗачтенногоАванса = 0, 0, Окр(СуммаЗачтенногоАвансаРуб / СуммаЗачтенногоАванса, 4, 1));
		
		Иначе
			ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, СуммаВал);
			ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, СуммаВал - ЗачетАвансаПоДоговору);
		КонецЕсли;
	    
	ИначеЕсли КодВидаПоступления = 3 Тогда // возврат отгруженного товара
		ТаблицаОстатков = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТаблицаОстатков, "Товар, Количество");
		ТаблицаОстатков.Свернуть("Товар", "Количество");
		ТаблицаОстатков.НоваяКолонка("Всего", "Число");
		ТаблицаОстатков.НоваяКолонка("КоличествоНУ", "Число");
		ТаблицаОстатков.НоваяКолонка("ВсегоНУ", "Число");
		ТаблицаОстатков.НоваяКолонка("КомиссионныеТовары");
		
		РассчитатьСтоимостьТоваров(ТаблицаОстатков);
		Если СтатусВозврата() = 0 Тогда // при заполнении таблицы выяснилось, что не хватает товара.
			Возврат    
		КонецЕсли;
		
	Иначе //возврат реализованных товара
		
		// Определим облагалась ли продажа ЕНВД
		СчетРасходов90 = СчетПоКоду("90.2.1");
		СчетВыручки90 = СчетПоКоду("90.1.1");
		Если ДокументОснование.Вид() = "ПродажаВРозницу" Тогда
		    Если ДокументОснование.ПродажаОблагаетсяЕНВД = 1 Тогда 
		        СчетРасходов90 = СчетПоКоду("90.2.2");
				СчетВыручки90 = СчетПоКоду("90.1.2");
		    КонецЕсли;
		КонецЕсли;
		
		// Для того, чтобы отсторнировать выручку и НП,
		// необходимо сгруппировать выручку по видам номенклатуры,
		// для этого заведем дополнительную таблицу.
		ТаблицаВыручки = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаВыручки.НоваяКолонка("ВидНоменклатуры");
		ТаблицаВыручки.НоваяКолонка("СтавкаНП");
		ТаблицаВыручки.НоваяКолонка("СтавкаНДС");
		ТаблицаВыручки.НоваяКолонка("НП", "Число");
		ТаблицаВыручки.НоваяКолонка("Всего", "Число");
		ТаблицаВыручки.НоваяКолонка("Аванс", "Число");
		ТаблицаВыручки.НоваяКолонка("Стоимость", "Стоимость");
		
		// для комиссионных товаров
		ТаблицаРасчетовСКомитентом = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаРасчетовСКомитентом.НоваяКолонка("Комитент");
		ТаблицаРасчетовСКомитентом.НоваяКолонка("ДоговорКомиссии");
		ТаблицаРасчетовСКомитентом.НоваяКолонка("НП", "Число");
		ТаблицаРасчетовСКомитентом.НоваяКолонка("Всего", "Число");
		                              
	КонецЕсли;
	
	РаспределеноАванса = 0;
	РаспределеноАвансаРуб = 0;
	
	ТаблицаОплатыТоваров = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаОплатыТоваров.НоваяКолонка("Товар");
	ТаблицаОплатыТоваров.НоваяКолонка("СтавкаНДС", "Число");
	ТаблицаОплатыТоваров.НоваяКолонка("Сумма", "Число");
	ТаблицаОплатыТоваров.НоваяКолонка("Всего", "Число");
	ТаблицаОплатыТоваров.НоваяКолонка("НДС", "Число");
	ТаблицаОплатыТоваров.НоваяКолонка("СуммаРуб", "Число");
	ТаблицаОплатыТоваров.НоваяКолонка("ВсегоРуб", "Число");
	ТаблицаОплатыТоваров.НоваяКолонка("НДСРуб", "Число");
	
	К = СуммаЗачтенногоАванса / ?(СуммаПоступления = 0, 1, СуммаПоступления);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Если Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				СчетУчета = Сч004;
			
			ИначеЕсли Товар.ТипТовара = Перечисление.ТипыТоваров.Тара Тогда
				СчетУчета = Сч41_3;
			
			ИначеЕсли Товар.ТипТовара = Перечисление.ТипыТоваров.ПокупныеИзделия Тогда
				СчетУчета = Сч41_4;
			
			Иначе //Если Товар.ТипТовара = Перечисление.ТипыТоваров.Собственный Тогда
				Если (КодВидаПоступления = 2) или (КодВидаПоступления = 5) Тогда //розница
					СчетУчета = Сч41_2;
				Иначе //Если КодВидаПоступления = 1 Тогда опт
					СчетУчета = Сч41_1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			СчетУчета = Сч43;
			
		Иначе // полуфабрикат
			СчетУчета = Сч21;
		КонецЕсли;
		
		Если КодВидаПоступления <= 2 Тогда // поступление от поставщика
			// Определим долю зачтенного аванса, приходящуюся на эту строку.
			Если ((ВестиУчетРасчетовУЕ = 1)
			или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')))
			и (СчетУчета <> Сч004) Тогда
				ЧастьСуммыЗачтенногоАванса = Окр(К * Всего, 2, 1);
				ЧастьСуммыЗачтенногоАвансаРуб = Окр(К * Всего * КурсАванса, 2, 1);
				
				РаспределеноАванса = РаспределеноАванса + ЧастьСуммыЗачтенногоАванса;
				РаспределеноАвансаРуб = РаспределеноАвансаРуб + ЧастьСуммыЗачтенногоАвансаРуб;
				
				Если КолСтрокДокумента = НомерСтроки Тогда
					Если РаспределеноАванса <> СуммаЗачтенногоАванса Тогда
						ЧастьСуммыЗачтенногоАванса = ЧастьСуммыЗачтенногоАванса + СуммаЗачтенногоАванса - РаспределеноАванса;
					КонецЕсли;
					
					Если РаспределеноАвансаРуб <> СуммаЗачтенногоАвансаРуб Тогда
						ЧастьСуммыЗачтенногоАвансаРуб = ЧастьСуммыЗачтенногоАвансаРуб + СуммаЗачтенногоАвансаРуб - РаспределеноАвансаРуб;
					КонецЕсли;
				КонецЕсли;
				
				ВсегоРубПоКурсуОтгрузки = Окр(Всего * Курс / Кратность, 2, 1);
				ОплаченоПоКурсуОтгрузки = Окр(К * ВсегоРубПоКурсуОтгрузки, 2, 1);
			    ВсегоРуб = ВсегоРубПоКурсуОтгрузки + ЧастьСуммыЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
				
				Если НДСвключатьВСтоимость = 1 Тогда
					ОплаченоНДСПоКурсуОтгрузки   = 0;
					НДСвЧастиЗачтенногоАвансаРуб = 0;
					НДСРуб                       = 0;
					
				Иначе
					НДСРубПоКурсуОтгрузки = Окр(НДС * Курс / Кратность, 2, 1);
					ОплаченоНДСПоКурсуОтгрузки = Окр(К * НДСРубПоКурсуОтгрузки, 2, 1);
					Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
						НДСвЧастиЗачтенногоАвансаРуб = Окр(К * НДС * Курс / Кратность, 2, 1);
					Иначе
						НДСвЧастиЗачтенногоАвансаРуб = Окр(К * НДС * КурсАванса, 2, 1);
					КонецЕсли;
					НДСРуб = НДСРубПоКурсуОтгрузки + НДСвЧастиЗачтенногоАвансаРуб - ОплаченоНДСПоКурсуОтгрузки;
				КонецЕсли;
				
				НПРубПоКурсуОтгрузки = Окр(НП * Курс / Кратность, 2, 1);
				ОплаченоНППоКурсуОтгрузки = Окр(К * НПРубПоКурсуОтгрузки, 2, 1);
				НПвЧастиЗачтенногоАвансаРуб = Окр(К * НП * КурсАванса, 2, 1);
				НПРуб = НПРубПоКурсуОтгрузки + НПвЧастиЗачтенногоАвансаРуб - ОплаченоНППоКурсуОтгрузки;
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					СуммоваяРазницаДляВсего = 0;
					ТекСуммоваяРазницаДляНДС = 0;
					СуммоваяРазницаДляНП = 0;
					СуммоваяРазницаДляСтоимости = 0;
				Иначе
					
					Если (Договор.ОтражатьСуммовуюРазницуПриЗачетеАванса = 1) и (ВестиУчетРасчетовУЕ = 1)  Тогда
						СуммоваяРазницаДляВсего = ЧастьСуммыЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
						ТекСуммоваяРазницаДляНДС = НДСвЧастиЗачтенногоАвансаРуб - ОплаченоНДСПоКурсуОтгрузки;
						СуммоваяРазницаДляНП = НПвЧастиЗачтенногоАвансаРуб - ОплаченоНППоКурсуОтгрузки;
						СуммоваяРазницаДляСтоимости = СуммоваяРазницаДляВсего - ТекСуммоваяРазницаДляНДС;
						
					Иначе
						СуммоваяРазницаДляВсего = 0;
						ТекСуммоваяРазницаДляНДС = 0;
						СуммоваяРазницаДляНП = 0;
						СуммоваяРазницаДляСтоимости = 0;
					КонецЕсли;
					
					СуммоваяРазницаДляНДС = СуммоваяРазницаДляНДС + ТекСуммоваяРазницаДляНДС;
				КонецЕсли;
				
			ИначеЕсли (ЦеныВДоговоре = 2) и (ОплатаДоговора = 1) Тогда
				ВсегоРуб = Окр(Всего * Курс / Кратность, 2, 1);
				НДСРуб = Окр(НДС * Курс / Кратность, 2, 1);
				
			Иначе
				ВсегоРуб = Всего;
				НДСРуб = НДС;
			КонецЕсли;
		
			Если СчетУчета <> Сч004 Тогда
				ТаблицаОплатыТоваров.НоваяСтрока();
				ТаблицаОплатыТоваров.Товар = Товар;
				ТаблицаОплатыТоваров.Всего = Всего;
				ТаблицаОплатыТоваров.Сумма = Всего - НДС - НП;
				ТаблицаОплатыТоваров.НДС = НДС;
				ТаблицаОплатыТоваров.ВсегоРуб = ВсегоРуб;
				ТаблицаОплатыТоваров.СуммаРуб = ВсегоРуб - НДСРуб - НПРуб;
				ТаблицаОплатыТоваров.НДСРуб = НДСРуб;
			КонецЕсли;
		
			Если (НДСвключатьВСтоимость <> 1) и (СчетУчета <> Сч004) Тогда
				СтоимостьТоваров = Всего - НДС;
				ВыделенныйНДС = ВыделенныйНДС + НДС;
				
				Если (ВестиУчетРасчетовУЕ = 1)
				или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')) Тогда
					СтоимостьТоваровРуб = ВсегоРуб - НДСРуб;
					ВыделенныйНДСРуб = ВыделенныйНДСРуб + НДСРуб;
				КонецЕсли;
					
			Иначе 
				СтоимостьТоваров = Всего;
				
				Если (ВестиУчетРасчетовУЕ = 1)
				или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')) Тогда
					СтоимостьТоваровРуб = ВсегоРуб;
				КонецЕсли;
			КонецЕсли;
			
		Иначе //возврат
			СтоимостьТоваров = ВсегоСтоимость;
		КонецЕсли;
		
		// Не формируем проводки, если отражается поступление от поставщика,
		// при этом в строке не указано количество и сумма.
		Если (СтоимостьТоваров <> 0) или (Количество <> 0) Тогда 
			Если КодВидаПоступления <= 2 Тогда // поступление от поставщика
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Поступили товары";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			  	Операция.Дебет.Счет = СчетУчета;
			  	Операция.Дебет.Номенклатура = Товар;
				Если СчетУчета = Сч004 Тогда
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
				Иначе
					Операция.Дебет.МестаХранения = МестоХранения;
					Операция.Кредит.Счет = СчетРасчетовСПоставщиком;
					Операция.Кредит.Контрагенты = Контрагент;
					Операция.Кредит.Договоры = Договор;
				КонецЕсли;
				
				// Рассчитаем сумму проводки
			    Если ЦеныВДоговоре = 2 Тогда
					Если (ВестиУчетРасчетовУЕ = 1) и (СчетУчета <> Сч004) Тогда
						Операция.Сумма = СтоимостьТоваровРуб - СуммоваяРазницаДляСтоимости;
						
					ИначеЕсли (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') и (СчетУчета <> Сч004) Тогда
						Операция.Сумма = СтоимостьТоваровРуб;
					Иначе
						Операция.Сумма = СтоимостьТоваров*Курс/Кратность;
					КонецЕсли;
					
					Если ((ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1)) и (СчетУчета <> Сч004) Тогда
						Операция.Валюта = Валюта;
						Операция.ВалСумма = СтоимостьТоваров;
					КонецЕсли;
					
					Если (ВестиУчетРасчетовУЕ = 1) и (СчетУчета <> Сч004) Тогда
						ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
						ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал + Операция.ВалСумма;
					КонецЕсли;
										
				Иначе
					Операция.Сумма = СтоимостьТоваров;
				КонецЕсли;
				Операция.Количество = Количество;
				
				Если (СуммоваяРазницаДляСтоимости <> 0) и (СчетУчета <> Сч004) Тогда
				    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Суммовая разница";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				  	Операция.Дебет.Счет = СчетУчета;
				  	Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.МестаХранения = МестоХранения;
					Операция.Кредит.Счет = СчетРасчетовСПоставщиком;
					Операция.Кредит.Контрагенты = Контрагент;
					Операция.Кредит.Договоры = Договор;
					Операция.Сумма = СуммоваяРазницаДляСтоимости;
					Операция.Валюта = Валюта; 
					
					ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
					
				КонецЕсли;
				
				Если (КодВидаПоступления = 2) и (СчетУчета = Сч004) Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Поступили товары";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = СчКТР;
					Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.МестаХранения = МестоХранения;
					Операция.Дебет.Договоры = Договор;
					
					// Рассчитаем сумму проводки
					Если ЦеныВДоговоре = 2 Тогда
						Если ВестиУчетРасчетовУЕ = 1 Тогда
							Операция.Сумма = СтоимостьТоваровРуб;
							
						Иначе
							Операция.Сумма = СтоимостьТоваров*Курс/Кратность;
						КонецЕсли;
						
					Иначе
						Операция.Сумма = СтоимостьТоваров;
					КонецЕсли;
					Операция.Количество = Количество;
				КонецЕсли;
				
			ИначеЕсли КодВидаПоступления = 3 Тогда // возврат товаров отгруженных
				
				// Определим стоимость возвращаемого товара и запишем эту стоимость
				// в реквизит "Всего" (для отражения суммы в журнале документов).
				НомСтроки = "";
				ТаблицаОстатков.НайтиЗначение(Товар, НомСтроки, "Товар");
				ТаблицаОстатков.ПолучитьСтрокуПоНомеру(НомСтроки);
				
				Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		           и (Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
				   	                                          
				   	УчтенноеКоличество = 0;
				   	УчтенаСтоимость    = 0;
				   	
				   	ТаблицаСКомиссионнымиТоварами = ТаблицаОстатков.КомиссионныеТовары;
				   	ТаблицаСКомиссионнымиТоварами.ВыбратьСтроки();
				   	Пока (ТаблицаСКомиссионнымиТоварами.ПолучитьСтроку() = 1)
				   	   и (УчтенноеКоличество < Количество) Цикл
				   	   	
				   	   	Если ПустоеЗначение(ДоговорКомиссии) = 0 Тогда
				   	   		Если ТаблицаСКомиссионнымиТоварами.ДоговорКомиссии <> ДоговорКомиссии Тогда
				   	   		    Продолжить;
				   	   		КонецЕсли;
				   	   		
				   	   	ИначеЕсли ПустоеЗначение(Комитент) = 0 Тогда
				   	   		Если ТаблицаСКомиссионнымиТоварами.ДоговорКомиссии.Владелец <> Комитент Тогда
				   	   		    Продолжить;
				   	   		КонецЕсли;
				   	   	КонецЕсли;
				   	   	
						КоличествоТоваров = Мин(ТаблицаСКомиссионнымиТоварами.Количество, Количество - УчтенноеКоличество);
						Если КоличествоТоваров = ТаблицаСКомиссионнымиТоварами.Количество Тогда
							СтоимостьТоваров = ТаблицаСКомиссионнымиТоварами.Сумма;
							
						Иначе
							СтоимостьТоваров = Окр(КоличествоТоваров*(ТаблицаСКомиссионнымиТоварами.Сумма/ТаблицаСКомиссионнымиТоварами.Количество), 2, 1);
						КонецЕсли;
						УчтенноеКоличество = УчтенноеКоличество + КоличествоТоваров;
						УчтенаСтоимость    = УчтенаСтоимость    + СтоимостьТоваров;
				   	    
						// Уменьшим в таблице остаток товаров.
						ТаблицаСКомиссионнымиТоварами.Сумма = ТаблицаСКомиссионнымиТоварами.Сумма - СтоимостьТоваров;
						ТаблицаСКомиссионнымиТоварами.Количество = ТаблицаСКомиссионнымиТоварами.Количество - КоличествоТоваров;
						
						Если (СтоимостьТоваров <> 0) или (КоличествоТоваров <> 0) Тогда
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "ТВ";
							Операция.СодержаниеПроводки = "Возврат";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						    Операция.Дебет.Счет = СчКМС;
							Операция.Дебет.Номенклатура = Товар;
							Операция.Дебет.ДоговорыС_Комиссионерами = Договор;
							Операция.Дебет.ДоговорыС_Комитентами = ТаблицаСКомиссионнымиТоварами.ДоговорКомиссии;
							Операция.Сумма = -СтоимостьТоваров;
							Операция.Количество = -КоличествоТоваров;
						КонецЕсли;
					КонецЦикла;
					
					Если УчтенноеКоличество < Количество Тогда
						ТекстСообщения = "Не хватает  "+(Количество - УчтенноеКоличество)+" "+Товар.ЕдиницаИзмерения+
							" ранее отгруженных комиссионных товаров "+ТаблицаОстатков.Товар;
						глНеПроводить(Контекст, ТекстСообщения);
						Возврат;
					КонецЕсли;
					
					Всего = УчтенаСтоимость;
					
				Иначе // поступление не комиссионного товара
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Возврат";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчетУчета;
					Операция.Кредит.Номенклатура = Товар;
					Операция.Кредит.МестаХранения = МестоХранения;
					Операция.Дебет.Счет = Сч45;
					Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					Если Количество >= ТаблицаОстатков.Количество Тогда
						СтоимостьТоваров = ТаблицаОстатков.Всего;
						
					Иначе
						СтоимостьТоваров = Количество*(ТаблицаОстатков.Всего/ТаблицаОстатков.Количество);
					КонецЕсли;
			
					// Уменьшим в таблице остаток товаров.
					ТаблицаОстатков.Всего = ТаблицаОстатков.Всего - СтоимостьТоваров;
					ТаблицаОстатков.Количество = ТаблицаОстатков.Количество - Количество;
					
					Операция.Сумма = -СтоимостьТоваров;
					Операция.Количество = -Количество;
					
				КонецЕсли;                                                                                 
					
			Иначе // возврат реализованных товаров
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Возврат";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = СчетУчета;
				Операция.Кредит.Номенклатура = Товар;
				Если СчетУчета = Сч004 Тогда
					Если ПустоеЗначение(Комитент) = 1 Тогда
						ТекстСообщения = "Для комиссионного товара из строки "+НомерСтроки+" не указан комитент.";
						глНеПроводить(Контекст, ТекстСообщения);
						Возврат;
						
					ИначеЕсли ПустоеЗначение(ДоговорКомиссии) = 1 Тогда
						ТекстСообщения = "Для комиссионного товара из строки "+НомерСтроки+" не указан договор комиссии.";
						глНеПроводить(Контекст, ТекстСообщения);
						Возврат;
					КонецЕсли;
					Операция.Кредит.Контрагенты = Комитент;
					Операция.Кредит.Договоры = ДоговорКомиссии;
					
				Иначе
					Операция.Кредит.МестаХранения = МестоХранения;
					Операция.Дебет.Счет = СчетРасходов90;
					Операция.Дебет.ВидыНоменклатуры = Товар.ВидНоменклатуры;
				КонецЕсли;
				Операция.Сумма = -СтоимостьТоваров;
				Операция.Количество = -Количество;
				
				Если (КодВидаПоступления = 5) и (СчетУчета = Сч004) Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Возврат";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчКТР;
					Операция.Кредит.Номенклатура = Товар;
					Операция.Кредит.МестаХранения = МестоХранения;
					Операция.Кредит.Договоры = ДоговорКомиссии;
					Операция.Сумма = -СтоимостьТоваров;
					Операция.Количество = -Количество;
				КонецЕсли;
				
				// Для того, чтобы отсторнировать выручку и НП,
				// заполняем дополнительную таблицу.
				Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		           и (Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
				   	ТаблицаРасчетовСКомитентом.НоваяСтрока();
				   	ТаблицаРасчетовСКомитентом.Комитент        = Комитент;
				   	ТаблицаРасчетовСКомитентом.ДоговорКомиссии = ДоговорКомиссии;
				   	ТаблицаРасчетовСКомитентом.НП              = НП;
					ТаблицаРасчетовСКомитентом.Всего           = Всего;
					
				Иначе
					ТаблицаВыручки.НоваяСтрока();
					ТаблицаВыручки.ВидНоменклатуры = Товар.ВидНоменклатуры;
					ТаблицаВыручки.СтавкаНДС = глСтавкаНалога(Контекст, "НДС");
					ТаблицаВыручки.СтавкаНП  = глСтавкаНалога(Контекст, "НП");
					ТаблицаВыручки.НП        = НП;
					ТаблицаВыручки.Всего     = Всего;
				КонецЕсли;
			КонецЕсли;
			
			// Отражение в налоговом учете поступления товаров.
			Если СчетУчета <> Сч004 Тогда // не комиссионный товар
			    Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
					Если ЦеныВДоговоре = 2 Тогда
						Если ВестиУчетРасчетовУЕ = 1 Тогда
						    СтоимостьТоваровДляНалоговогоУчета = СтоимостьТоваровРуб - СуммоваяРазницаДляСтоимости;
							
						Иначе
							СтоимостьТоваровДляНалоговогоУчета = СтоимостьТоваров*Курс/Кратность;
							Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
								НПРКурсоваяРазница =  Окр(СтоимостьТоваровРуб, 2) - Окр(СтоимостьТоваровДляНалоговогоУчета, 2);
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						СтоимостьТоваровДляНалоговогоУчета = СтоимостьТоваров;
					КонецЕсли;    
					
					СформироватьПроводкиДляЦелейНалоговогоУчета(СтоимостьТоваровДляНалоговогоУчета, ТаблицаОстатков);
					глОтражениеСуммовыхРазницВНаловомУчете(Контекст, -СуммоваяРазницаДляСтоимости, 0);
					
					//********************************************************************
					//Проводки по расчетам в вал.
					Если (Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да) Тогда
						Если КодВидаПоступления <= 2 Тогда // поступление от поставщика
							Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
								Если НПРКурсоваяРазница <> 0 Тогда
									Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
									Операция.НомерЖурнала = "НУ";
									Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
									Операция.Дебет.Счет = СчНПР;
									Операция.Дебет.Субконто(1, Товар);
									Операция.Сумма = НПРКурсоваяРазница;
									Операция.СодержаниеПроводки = "Разница в оценке товаров"; 
								КонецЕсли;	
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;
					//********************************************************************
				КонецЕсли;
			КонецЕсли; 
			
		КонецЕсли;
	КонецЦикла;
	
	Если КодВидаПоступления <= 2 Тогда // поступление от поставщика
		Если ВерсияОбъекта < "7.70.421" Тогда
			// Документы, созданные в редакции 4.0 не формируют проводок
			// по НДС для неотфактурованных поставок.
			Если ПустоеЗначение(ДатаНомерСчетаФактуры) = 1 Тогда
				ВыделенныйНДС = 0;
			КонецЕсли;
		КонецЕсли;
	
		Если ВыделенныйНДС <> 0 Тогда
		    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Выделен НДС";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = Сч19_3;
			Операция.Дебет.Субконто(1, Контрагент);
			
			Если ПустоеЗначение(ДатаНомерСчетаФактуры) = 0 Тогда
				Операция.Дебет.Субконто(2, ТекущийДокумент());
			КонецЕсли;
				
			Операция.Кредит.Счет = СчетРасчетовСПоставщиком;
			Операция.Кредит.Контрагенты = Контрагент;
			Операция.Кредит.Договоры = Договор;
			
			Если ЦеныВДоговоре = 2 Тогда
				Если ВестиУчетРасчетовУЕ = 1 Тогда
					Операция.Сумма = ВыделенныйНДСРуб - СуммоваяРазницаДляНДС;
					
				Иначе
					Операция.Сумма = ВыделенныйНДС*Курс/Кратность;
				КонецЕсли;
				
				Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
					Операция.Валюта = Валюта;
					Операция.ВалСумма = ВыделенныйНДС; 					
				КонецЕсли; 
				
				Если ВестиУчетРасчетовУЕ = 1 Тогда					
					ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
					ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал + Операция.ВалСумма;
				КонецЕсли; 
					
			Иначе
				Операция.Сумма = ВыделенныйНДС;
			КонецЕсли;
			
			Если СуммоваяРазницаДляНДС <> 0  Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Суммовая разница";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч19_3;
				Операция.Дебет.Субконто(1, Контрагент);
				
				Если ПустоеЗначение(ДатаНомерСчетаФактуры) = 0 Тогда
					Операция.Дебет.Субконто(2, ТекущийДокумент());
				КонецЕсли;
					
				Операция.Кредит.Счет = СчетРасчетовСПоставщиком;
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;
				Операция.Сумма = СуммоваяРазницаДляНДС;
				Операция.Валюта = Валюта;   
				
				ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
				
			КонецЕсли;
			
			Если Договор.Выбран() = 1 Тогда
				Если (Договор.АвтоОбработкаНДС = 0) и (ВключатьВКнигуПокупок = 1) Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "НДС принят к зачету";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					
					Операция.Дебет.Счет = Сч68_2;
					Операция.Дебет.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
					
					Операция.Кредит.Счет = Сч19_3;
					Операция.Кредит.Контрагенты = Контрагент;
					Операция.Кредит.СчетаФактурыПолученные = ТекущийДокумент();
					
					Если ЦеныВДоговоре = 2 Тогда
						Если ВестиУчетРасчетовУЕ = 1 Тогда
							Операция.Сумма = ВыделенныйНДСРуб;
							
						Иначе
							Операция.Сумма = ВыделенныйНДС*Курс/Кратность;
						КонецЕсли;
						
					Иначе
						Операция.Сумма = ВыделенныйНДС;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	
	    // Отразим зачет аванса.
		ЗачетАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
		Если ЗачетАванса <> 0 Тогда
			
			ЗачестьАванс(ЗачетАвансаПоДоговору, ЗачетАвансаПоДоговоруРуб, Договор);
			ЗачестьАванс(ЗачетАвансаБезДоговора, ЗачетАвансаБезДоговораРуб, БезДоговора);
			
			Если (АвансПоДоговору + АвансБезДоговора) <> 0 Тогда
				ТекстСообщения = "=> Зачет аванса:" + РазделительСтрок
				               + "   поступило на сумму: "+СуммаВал+", зачтен аванс в размере: "+ЗачетАванса + РазделительСтрок
							   + "   - определен аванс по договору "+Договор+" в сумме: "+АвансПоДоговору+", зачтен аванс в размере: "+ЗачетАвансаПоДоговору + РазделительСтрок;
				
				Если ЗачитыватьАванс = 0 Тогда
					ТекстСообщения = ТекстСообщения
								   + "   - определен аванс без указания договора в сумме: "+АвансБезДоговора+", зачтен аванс в размере: "+ЗачетАвансаБезДоговора;
				Иначе
					ТекстСообщения = ТекстСообщения
					               + "   - аванс без указания договора не учтен";
				КонецЕсли;
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
			КонецЕсли;
		КонецЕсли;
		        
		Если ПустоеЗначение(ДатаНомерСчетаФактуры) = 0 Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Если ПустоеЗначение(ГТД) = 0 Тогда
					ТекстСообщения = ""+НомерСтроки+". Товар "+Товар+" определен как импортный." + РазделительСтрок
					               + "    Поступление товара учтено по забалансовому счету ГТД.";
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Поступил импортный товар";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = СчГТД;
					Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.ГТД = ГТД;
					Операция.Количество = Количество;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли КодВидаПоступления >= 4 Тогда // возврат реализованных товаров
		
		// Необходимо отразить сторнирование выручки и НП (НДС
		// сторнируется записью книги продаж)
		
		// При сторнировании выручки, в том случае если задолженность
		// покупателя меньше чем сумма сторнируемой выручки, то часть
		// выручки относим на счет 62.2 (аванс). Для этой цели рассчитаем
		// сумму задолженности контрагента.
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры, Договор);
		Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
			БухИт.ВыполнитьЗапрос(, ТекущийДокумент(), СчетРасчетовСПокупателем,, Валюта,,,"В");
			ЗадолженностьПокупателя = Макс(БухИт.СКД("В"), 0);
			
		Иначе
			БухИт.ВыполнитьЗапрос(, ТекущийДокумент(), СчетРасчетовСПокупателем,,,,,"С");
			ЗадолженностьПокупателя = Макс(БухИт.СКД("С"), 0);
		КонецЕсли;
		
		// Сторнируем выручку.
		Если КодВидаПоступления = 4 Тогда // возврат товара на оптовый склад
			ТаблицаВыручки.Свернуть("ВидНоменклатуры, СтавкаНДС,СтавкаНП", "НП, Всего");
			ТаблицаВыручки.ВыбратьСтроки();
			Пока ТаблицаВыручки.ПолучитьСтроку() = 1 Цикл
				
				Выручка = ТаблицаВыручки.Всего;
				Аванс   = 0;
				Если Выручка > 0 Тогда
					
					Если (ЦеныВДоговоре = 2) и (ОплатаДоговора = 1) и (ВестиУчетРасчетовУЕ = 0) Тогда //УЕ-договор (оплата в рублях)
						Выручка = Окр(Выручка*Курс/Кратность, 2, 1);
					КонецЕсли;
					
					Аванс = Макс(Выручка - ЗадолженностьПокупателя, 0);
					СуммаПогашеннойЗадолженности = Выручка - Аванс;
					ЗадолженностьПокупателя = ЗадолженностьПокупателя - СуммаПогашеннойЗадолженности;
					Если СуммаПогашеннойЗадолженности > 0 Тогда
					
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.СодержаниеПроводки = "Сторнируем выручку";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчетРасчетовСПокупателем;
						Операция.Дебет.Контрагенты = Контрагент;
						Операция.Дебет.Договоры = Договор;
						Операция.Кредит.Счет = СчетВыручки90;
						Операция.Кредит.Субконто(1, ТаблицаВыручки.ВидНоменклатуры);
						Операция.Кредит.Субконто(2, ТаблицаВыручки.СтавкаНДС);
						Операция.Кредит.Субконто(3, ТаблицаВыручки.СтавкаНП);
						
						Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
							Операция.Сумма = -СуммаПогашеннойЗадолженности*Курс/Кратность;
							Операция.Валюта = Валюта;
							Операция.ВалСумма = -СуммаПогашеннойЗадолженности;
							
							Если ВестиУчетРасчетовУЕ = 1 Тогда					
								ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
								ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал + Операция.ВалСумма;
							КонецЕсли; 
							
						Иначе
							Операция.Сумма = -СуммаПогашеннойЗадолженности;
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
				
				// Если задолженность покупателя меньше чем возврат, то сформируем проводки по авансу.
				Если Аванс > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Образование аванса при возврате товара";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = СчетАвансовПолученных;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					Операция.Кредит.Счет = СчетВыручки90;
					Операция.Кредит.Субконто(1, ТаблицаВыручки.ВидНоменклатуры);
					Операция.Кредит.Субконто(2, ТаблицаВыручки.СтавкаНДС);
					Операция.Кредит.Субконто(3, ТаблицаВыручки.СтавкаНП);
					
					Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
					    Операция.Сумма = -Аванс*Курс/Кратность;
					    Операция.Валюта = Валюта;
						Операция.ВалСумма = -Аванс;
					Иначе
						Операция.Сумма = -Аванс;
					КонецЕсли; 
					
					Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда            
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ВЛ";
						Операция.СодержаниеПроводки = "Авансы в валюте";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчВАЛ_62;
						Операция.Дебет.Контрагенты = Контрагент;
						Операция.Дебет.Договоры = Договор;						
						Операция.Сумма = -Аванс*Курс/Кратность;
					    Операция.Валюта = Валюта;
						Операция.ВалСумма = -Аванс;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла; 
			
		Иначе // возврат товара проданого в розницу
			
			ТаблицаВыручки.Свернуть("ВидНоменклатуры, СтавкаНДС, СтавкаНП", "НП, Всего");
			ТаблицаВыручки.ВыбратьСтроки();
			Пока ТаблицаВыручки.ПолучитьСтроку() = 1 Цикл
				
				Выручка = ТаблицаВыручки.Всего;
				Если Выручка > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Сторнируем выручку";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = ?(ВестиУчетРасчетовУЕ = 1, Сч76_6, Сч76_5);
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					Операция.Кредит.Счет = СчетВыручки90;
					Операция.Кредит.Субконто(1, ТаблицаВыручки.ВидНоменклатуры);
					Операция.Кредит.Субконто(2, ТаблицаВыручки.СтавкаНДС);
					Операция.Кредит.Субконто(3, ТаблицаВыручки.СтавкаНП);
					
					// Рассчитаем сумму проводки
				    Если ЦеныВДоговоре = 2 Тогда
						Операция.Сумма = -Окр(Выручка*Курс/Кратность, 2, 1);
						Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
							Операция.Валюта = Валюта;
							Операция.ВалСумма = -Выручка;
						КонецЕсли;
					Иначе
						Операция.Сумма = -Выручка;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		        
		//Стронирование вырчки от реализации комиссионных товаров.
		ТаблицаРасчетовСКомитентом.Свернуть("Комитент, ДоговорКомиссии", "НП, Всего");
		ТаблицаРасчетовСКомитентом.ВыбратьСтроки();
		Пока ТаблицаРасчетовСКомитентом.ПолучитьСтроку() = 1 Цикл
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Сторнирование выручки за комисс.товар";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Если КодВидаПоступления = 4 Тогда // возврат товара проданого не в розницу
				Операция.Дебет.Счет = СчетРасчетовЗакомиссионныеТовары;
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
				
			Иначе // возврат товара проданого в розницу
				Операция.Дебет.Счет = ?(ВестиУчетРасчетовУЕ = 1, Сч76_6, Сч76_5);
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
			КонецЕсли;
			
			Операция.Кредит.Счет = СчетРасчетовСКомитентом;
			Операция.Кредит.Контрагенты = ТаблицаРасчетовСКомитентом.Комитент;
			Операция.Кредит.Договоры = ТаблицаРасчетовСКомитентом.ДоговорКомиссии;
			
			// Рассчитаем сумму проводки
		    Если ЦеныВДоговоре = 2 Тогда
				Операция.Сумма = -Окр(ТаблицаРасчетовСКомитентом.Всего*Курс/Кратность, 2, 1);
				Если (ОплатаДоговора = 2) или (ВестиУчетРасчетовУЕ = 1) Тогда
					Операция.Валюта = Валюта;
					Операция.ВалСумма = -ТаблицаРасчетовСКомитентом.Всего;
				КонецЕсли;
			Иначе
				Операция.Сумма = -ТаблицаРасчетовСКомитентом.Всего;
			КонецЕсли;
		КонецЦикла;
		
		// Сторнируем начисленный НП.
		ТаблицаВыручки.Свернуть("ВидНоменклатуры, СтавкаНП", "НП");
		ТаблицаВыручки.ВыбратьСтроки();
		Пока ТаблицаВыручки.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаВыручки.НП <> 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Сторнирован НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч90_6;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаВыручки.ВидНоменклатуры;
				Операция.Дебет.СтавкиНП = ТаблицаВыручки.СтавкаНП;
				Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = -ТаблицаВыручки.НП;
			КонецЕсли;
		КонецЦикла;
		
		// Сторнируем начисленный НП по комиссионным товарам.
		ТаблицаРасчетовСКомитентом.Свернуть("Комитент, ДоговорКомиссии", "НП");
		ТаблицаРасчетовСКомитентом.ВыбратьСтроки();
		Пока ТаблицаРасчетовСКомитентом.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаРасчетовСКомитентом.НП <> 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Сторнирован НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетРасчетовСКомитентом;
				Операция.Дебет.Контрагенты = ТаблицаРасчетовСКомитентом.Комитент;
				Операция.Дебет.Договоры = ТаблицаРасчетовСКомитентом.ДоговорКомиссии;
				Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = -ТаблицаРасчетовСКомитентом.НП;
			КонецЕсли;
		КонецЦикла;
		
		// Если способ опредедления выручки - по оплате, то уменьшим
		МетодОпределенияВыручки = Константа.МетодОпределенияВыручки.Получить(ДатаДок);
		
		// Если оформлен возврат импортного товара,
		// то необходимо отразить это на счете ГТД.
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ГТД) = 0 Тогда
				ТекстСообщения = ""+НомерСтроки+". Товар "+Товар+" определен как импортный." + РазделительСтрок
					               + "    Возврат товара учтен по забалансовому счету ГТД.";
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Возврат импортного товара";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = СчГТД;
				Операция.Кредит.Номенклатура = Товар;
				Операция.Кредит.ГТД = ГТД;
				Операция.Количество = -Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
    
	Если (ПустоеЗначение(ДатаНомерСчетаФактуры) = 0)и(Договор.АвтоОбработкаНДС=1)и(КодВидаПоступления<3) Тогда
	    глДляЗаполненияКнигиПокупок(Контекст, ТаблицаОплатыТоваров);
	КонецЕсли; 
			
	Если (КодВидаПоступления >= 3) и 
	(Договор.АвтоОбработкаНДС=1) и
	(НДСвключатьВСтоимость = 0) и
	(ДокументОснование.Выбран()=1) Тогда
	//	и
	//((ВариантОтраженияВозврата = 0) или 
	//((ВариантОтраженияВозврата = 1) и (ПустоеЗначение(ДатаНомерСчетаФактуры) = 0) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 1)) или
	//((ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 0))) Тогда 
		
		ТаблицаДокумента = СоздатьОбъект("ТаблицаЗначений");
		                                                    
		ЗаполнитьТаблицуДокумента(ТаблицаДокумента);

		СчетФактура=СоздатьОбъект("Документ");
		Выбран = 0;
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			СчетФактура.ВыбратьПодчиненныеДокументы(ДокументОснование.ДатаДок,ДатаДок,ДокументОснование);
			Пока СчетФактура.ПолучитьДокумент()=1 Цикл
				Если СчетФактура.Вид()="СчетФактура" Тогда
					Выбран = 1;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Если (Выбран =1) Тогда
			Если (Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате) или
			(Константа.МетодОпределенияВыручки.Получить(СчетФактура.ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате) или
			(СчетФактура.ДатаДок >= '01.01.2006') Тогда  
				
				ВариантПроведения = 1;
				Если (КодВидаПоступления >= 3) и (ВариантОтраженияВозврата = 0) Тогда
					ВариантПроведения = 1;
				ИначеЕсли (КодВидаПоступления = 4) и (ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 1) и (ПустоеЗначение(ДатаНомерСчетаФактуры) = 0) Тогда
					ВариантПроведения = 2;
				ИначеЕсли (КодВидаПоступления = 4) и (ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 1) и (ПустоеЗначение(ДатаНомерСчетаФактуры) = 1) Тогда   
					ВариантПроведения = 3;
				ИначеЕсли (КодВидаПоступления = 4) и (ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 0) Тогда
					ВариантПроведения = 4;
				КонецЕсли;
							
				Если ВариантПроведения <> 1 Тогда
					ТаблицаСторноВыручки = СоздатьОбъект ("ТаблицаЗначений");
					ТаблицаДокумента.Выгрузить(ТаблицаСторноВыручки);
					ТаблицаСторноВыручки.Свернуть("ВидНоменклатуры,СтавкаНДСЭлемент","НДСРуб");
					ТаблицаСторноВыручки.ВыбратьСтроки();					
					Пока ТаблицаСторноВыручки.ПолучитьСтроку()=1 Цикл
						Если ТаблицаСторноВыручки.НДСРуб<>0 Тогда
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "ТВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = СчетПоКоду("90.3");
							Операция.Дебет.Субконто(1,ТаблицаСторноВыручки.ВидНоменклатуры);					
							Операция.Дебет.Субконто(2,ТаблицаСторноВыручки.СтавкаНДСЭлемент);					
							Операция.Кредит.Счет = Сч19_3;
							Операция.Кредит.Субконто(1,Контрагент);
							Если ВариантПроведения <> 3 Тогда
								Операция.Кредит.Субконто(2,ТекущийДокумент());							
							КонецЕсли;								
							Операция.Сумма = -ТаблицаСторноВыручки.НДСРуб;
							Операция.СодержаниеПроводки = "Выделен НДС";
						КонецЕсли;
					КонецЦикла;
					           
					Если ВариантПроведения <> 3 Тогда                        
						глДляЗаполненияКнигиПокупок(Контекст, ТаблицаДокумента); 
					КонецЕсли;
					
				ИначеЕсли ВариантПроведения = 1 Тогда
					
					ТаблицаДокумента.Свернуть("СтавкаНДС","НДС,Всего");
					ТаблицаДокумента.ВыбратьСтроки();
					Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл
						Если ТаблицаДокумента.СтавкаНДС.Ставка > 17 Тогда
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "АВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = СчетПоКоду("ЗПР.20.Б");
							Операция.Дебет.Субконто(1,Контрагент);
							Операция.Дебет.Субконто(2,Договор);                    
							Операция.Дебет.Субконто(3,СчетФактура.ТекущийДокумент());
							Операция.Сумма = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС;
							Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
							
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "АВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = СчетПоКоду("ЗПР.20.Н");
							Операция.Дебет.Субконто(1,Контрагент);
							Операция.Дебет.Субконто(2,Договор);
							Операция.Дебет.Субконто(3,СчетФактура.ТекущийДокумент());
							Операция.Сумма = ТаблицаДокумента.НДС;
							Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
						КонецЕсли;
						
						Если ТаблицаДокумента.СтавкаНДС.Ставка=10 Тогда
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "АВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = СчетПоКоду("ЗПР.10.Б");
							Операция.Дебет.Субконто(1,Контрагент);
							Операция.Дебет.Субконто(2,Договор);
							Операция.Дебет.Субконто(3,СчетФактура.ТекущийДокумент());
							Операция.Сумма = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС;
							Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
							
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "АВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = СчетПоКоду("ЗПР.10.Н");
							Операция.Дебет.Субконто(1,Контрагент);
							Операция.Дебет.Субконто(2,Договор);
							Операция.Дебет.Субконто(3,СчетФактура.ТекущийДокумент());
							Операция.Сумма = ТаблицаДокумента.НДС;
							Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
						КонецЕсли;
						
						Если ТаблицаДокумента.СтавкаНДС.Ставка=0 Тогда
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "АВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = СчетПоКоду("ЗПР.БН");
							Операция.Дебет.Субконто(1,Контрагент);
							Операция.Дебет.Субконто(2,Договор);
							Операция.Дебет.Субконто(3,СчетФактура.ТекущийДокумент());
							Операция.Сумма = ТаблицаДокумента.Всего;
							Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	
	ИначеЕсли (КодВидаПоступления = 4) и 
	(Договор.АвтоОбработкаНДС=0) и
	(НДСвключатьВСтоимость = 0) и	
	(ВариантОтраженияВозврата = 1) Тогда 
		
		ТаблицаДокумента = СоздатьОбъект("ТаблицаЗначений");
		
		ЗаполнитьТаблицуДокумента(ТаблицаДокумента);
		
		СчетФактура=СоздатьОбъект("Документ");
		Выбран = 0;
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			СчетФактура.ВыбратьПодчиненныеДокументы(ДокументОснование.ДатаДок,ДатаДок,ДокументОснование);
			Пока СчетФактура.ПолучитьДокумент()=1 Цикл
				Если СчетФактура.Вид()="СчетФактура" Тогда
					Выбран = 1;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли; 
		           
		Если (Выбран =1) Тогда
			Если (Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате) или
			(Константа.МетодОпределенияВыручки.Получить(СчетФактура.ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате) или
			(СчетФактура.ДатаДок >= '01.01.2006') Тогда 
				
				Если (ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 0) Тогда
					ВариантПроведения = 1;
				ИначеЕсли (ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 1)  и (ПустоеЗначение(ДатаНомерСчетаФактуры) = 1) Тогда
					ВариантПроведения = 2;
				ИначеЕсли (ВариантОтраженияВозврата = 1) и (ПокупателемВыставляетсяСчетФактураНаВозврат = 1)  и (ПустоеЗначение(ДатаНомерСчетаФактуры) = 0) Тогда
					ВариантПроведения = 3;
				КонецЕсли;  
				
				ТаблицаДокумента.Свернуть("ВидНоменклатуры,СтавкаНДСЭлемент","НДСРуб");
				ТаблицаДокумента.ВыбратьСтроки();
				
				Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл
					Если ТаблицаДокумента.НДСРуб<>0 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчетПоКоду("90.3");
						Операция.Дебет.Субконто(1,ТаблицаДокумента.ВидНоменклатуры);					
						Операция.Дебет.Субконто(2,ТаблицаДокумента.СтавкаНДСЭлемент);					
						Операция.Кредит.Счет = Сч19_3;
						Операция.Кредит.Субконто(1,Контрагент);					
						Если ВариантПроведения <> 2 Тогда
							Если ВариантПроведения = 1 Тогда
								Операция.Кредит.Субконто(2,СчетФактура.ТекущийДокумент());						
							Иначе
								Операция.Кредит.Субконто(2,ТекущийДокумент());													    
							КонецЕсли;							
						КонецЕсли;							
						Операция.Сумма = -ТаблицаДокумента.НДСРуб;
						Операция.СодержаниеПроводки = "Выделен НДС";
					КонецЕсли;
				КонецЦикла;
				
				Если  (ВариантПроведения = 1) или  (ВариантПроведения = 3) Тогда
					
					Если ВключатьВКнигуПокупок = 1 Тогда
						Если ТаблицаДокумента.Итог("НДСРуб")<>0 Тогда
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "ТВ";
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = Сч68_2;
							Операция.Дебет.Субконто(1,Перечисление.ВидыПлатежейВБюджет.Налог);					
							Операция.Кредит.Счет = Сч19_3;
							Операция.Кредит.Субконто(1,Контрагент);					
							Если ВариантПроведения = 3 Тогда			
								Операция.Кредит.Субконто(2,ТекущийДокумент());
							ИначеЕсли ВариантПроведения = 1 Тогда
								Операция.Кредит.Субконто(2,СчетФактура.ТекущийДокумент());					
							КонецЕсли;                                                    				
							Операция.Сумма = ТаблицаДокумента.Итог("НДСРуб");
							Операция.СодержаниеПроводки = "НДС принят к зачету";
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если ТаблицаДокумента.Итог("НДСРуб") <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("90.3");
				Операция.Кредит.Счет = Сч19_3;
				Операция.Кредит.Субконто(1,Контрагент);
				Операция.Сумма = -ТаблицаДокумента.Итог("НДСРуб");
				Операция.СодержаниеПроводки = "Выделен НДС"; 
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	//********************************************************************
	//Проводки по расчетам в у.е.
	Если ДатаДок >= '01.01.2007' Тогда
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Если (ЗадолженностьПоРасчетамВУЕРуб + ЗадолженностьПоРасчетамВУЕВал) <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "УЕ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				
				Если КодВидаПоступления <> 4 Тогда
					
					Операция.Кредит.Счет = СчУЕ_60;
					Операция.Кредит.Субконто(1, Контрагент);
					Операция.Кредит.Субконто(2, Договор);								
					Операция.СодержаниеПроводки = "Задолженность по приобретению в у.е.";
					
				Иначе 
					
					Операция.Дебет.Счет = СчУЕ_62;
					Операция.Дебет.Субконто(1, Контрагент);
					Операция.Дебет.Субконто(2, Договор);			
					Операция.СодержаниеПроводки = "Задолженность по реализации в у.е."; 
					
				КонецЕсли;
				
				Операция.Валюта = Валюта;
				Операция.Сумма = ЗадолженностьПоРасчетамВУЕРуб;
				Операция.ВалСумма = ЗадолженностьПоРасчетамВУЕВал;
				
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	//********************************************************************

	Операция.Записать();   

	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()
