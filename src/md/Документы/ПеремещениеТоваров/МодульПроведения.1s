Перем КодВидаПеремещения;

//******************************************************************************
// ПолучитьКодВидаДвижения();
//
Функция ПолучитьКодВидаДвижения()
	Если (Склад.Выбран() = 0) или (СкладПолучатель.Выбран() =0) Тогда
	    Возврат 0;
	КонецЕсли;    
	Если (Склад.ТипСклада.Выбран() = 0) или (СкладПолучатель.ТипСклада.Выбран() =0) Тогда
	    Возврат 0;
	КонецЕсли;
	Если Склад.ТипСклада = Перечисление.ТипыСкладов.Оптовый Тогда
		Если СкладПолучатель.ТипСклада = Перечисление.ТипыСкладов.Розничный Тогда
		    Возврат 1;
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Если СкладПолучатель.ТипСклада = Перечисление.ТипыСкладов.Розничный Тогда
		    Возврат 2;
		Иначе
			Возврат 3;
		КонецЕсли;
	КонецЕсли;
КонецФункции

//******************************************************************************
// СформироватьПроводкиДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьПроводкиДляЦелейНалоговогоУчета(ТаблицаОстатков)
	
	СчН02_02_1 = СчетПоКоду("Н02.02.1");
	СчН02_02_2 = СчетПоКоду("Н02.02.2");
	
	ВыделенНДСНУ = 0;
	Если (НДС <> 0) и (НДСВключатьВСтоимость = 1) Тогда
		Если КодВидаПеремещения = 3 Тогда
			ВыделенНДСНУ = НДС;
		КонецЕсли;
	КонецЕсли;
	
	Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	Операция.НомерЖурнала = "ТВ";
	Операция.СодержаниеПроводки = "Перемещение товара";
	Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
	Операция.Дебет.Счет = ?(КодВидаПеремещения = 3, СчН02_02_1, СчН02_02_2);
	Операция.Дебет.Номенклатура = Товар;
	Операция.Кредит.Счет = ?(КодВидаПеремещения = 3, СчН02_02_2, СчН02_02_1);
	Операция.Кредит.Номенклатура = Товар;
	Операция.Количество = Количество;
	
	Если Количество >= ТаблицаОстатков.КоличествоНаСкладахНУ Тогда
		ВсегоНУ = ТаблицаОстатков.СуммаНаСкладахНУ;
		
	Иначе
		ВсегоНУ = Окр(Количество*(ТаблицаОстатков.СредняяСтоимостьНУ), 2, 1);
	КонецЕсли;
	Операция.Сумма = ВсегоНУ - ВыделенНДСНУ;
	
	ТаблицаОстатков.СуммаНаСкладахНУ = ТаблицаОстатков.СуммаНаСкладахНУ - ВсегоНУ;
	ТаблицаОстатков.КоличествоНаСкладах = ТаблицаОстатков.КоличествоНаСкладахНУ - Количество;
	
	Если ВыделенНДСНУ >0 Тогда
		Если КодВидаПеремещения = 3 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Выделен НДС";
			Операция.Кредит.Счет = ?(КодВидаПеремещения = 3, СчН02_02_2, СчН02_02_1);
			Операция.Кредит.Номенклатура = Товар;
			Операция.Сумма = ВыделенНДСНУ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводкиДляЦелейНалоговогоУчета()
////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения(ВидыДвижений)
	
	Сч19_3 = СчетПоКоду("19.3");
	Сч41_1 = СчетПоКоду("41.1");
	Сч41_2 = СчетПоКоду("41.2");
	Сч41_3 = СчетПоКоду("41.3");
	Сч41_4 = СчетПоКоду("41.4");
	Сч004  = СчетПоКоду("004");
	СчКМС  = СчетПоКоду("КМС");
	СчКТР  = СчетПоКоду("КТР");
	
	Если ВидПеремещения = 9 Тогда
		Если Склад.Выбран() = 0 Тогда
			ТекстСообщения = "Не выбран склад отправитель";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		ИначеЕсли Склад.ТипСклада.Выбран() = 0 Тогда
			ТекстСообщения = "Для склада отправителя не установлен тип";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		Если СкладПолучатель.Выбран() = 0 Тогда
			ТекстСообщения = "Не выбран склад получатель";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		ИначеЕсли СкладПолучатель.ТипСклада.Выбран() = 0 Тогда
			ТекстСообщения = "Для склада получателя не установлен тип";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		КодВидаПеремещения = ПолучитьКодВидаДвижения();
	Иначе
		КодВидаПеремещения = ВидПеремещения;
	КонецЕсли;
	
	СписокТоваров = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокТоваров, "Товар");
	
	БухИтКТР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКТР.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКМС.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт004 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт004.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ВключатьСубсчета(1);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	БухИт.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БухИт.ВыполнитьЗапрос(, ТекущийДокумент(), "41");
	
	// Если ведется раздельный учет товаров в рознице и в опте,
	// то необходимо отражать перемещение товаров из опта в розницу и наборот
	ОтражатьПеремещениеВНУ = 0;
	Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
		Если (КодВидаПеремещения = 1) или (КодВидаПеремещения = 3) Тогда
			Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
				ОтражатьПеремещениеВНУ = 1;
				
				БухИтНУ = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНУ.ИспользоватьРазделительУчета(ЮрЛицо);
				БухИтНУ.ВключатьСубсчета(1);
				БухИтНУ.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
				БухИтНУ.ВыполнитьЗапрос(, ТекущийДокумент(), ?(КодВидаПеремещения = 3, "Н02.02.2", "Н02.02.1"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаОстатков = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблицаОстатков);
	ТаблицаОстатков.Свернуть("Товар, Комитент, ДоговорКомиссии", "Количество");
	ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладах", "Число");
	ТаблицаОстатков.НоваяКолонка("СуммаНаСкладах", "Число");
	ТаблицаОстатков.НоваяКолонка("СредняяСтоимость", "Число");
	ТаблицаОстатков.НоваяКолонка("СчетУчета");
	ТаблицаОстатков.НоваяКолонка("НовыйСчет");
	Если ОтражатьПеремещениеВНУ = 1 Тогда
	    ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладахНУ", "Число");
		ТаблицаОстатков.НоваяКолонка("СуммаНаСкладахНУ", "Число");
		ТаблицаОстатков.НоваяКолонка("СредняяСтоимостьНУ", "Число");
	КонецЕсли;
	
	ТаблицаОстатков.ВыбратьСтроки();
	Пока ТаблицаОстатков.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаОстатков.Товар.ТипНоменклатуры.Выбран() = 0 Тогда
			ТекстСообщения = "Не указан тип номенклатуры для товара: "+ТаблицаОстатков.Товар;
			глНеПроводить(Контекст, ТекстСообщения, ТаблицаОстатков.Товар.ТекущийЭлемент());
			Возврат;
			
		ИначеЕсли ТаблицаОстатков.Количество = 0 Тогда
			ТекстСообщения = "Не указано количество товара: "+ТаблицаОстатков.Товар;
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ТаблицаОстатков.СчетУчета = "";
		ТаблицаОстатков.НовыйСчет = СоздатьОбъект("Счет.Основной");
		
		Если ТаблицаОстатков.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Если ТаблицаОстатков.Товар.ТипТовара = Перечисление.ТипыТоваров.Тара Тогда
				ТаблицаОстатков.СчетУчета = Сч41_3;
				ТаблицаОстатков.НовыйСчет = Сч41_3;
				
			ИначеЕсли ТаблицаОстатков.Товар.ТипТовара = Перечисление.ТипыТоваров.ПокупныеИзделия Тогда
				ТаблицаОстатков.СчетУчета = Сч41_4;
				ТаблицаОстатков.НовыйСчет = Сч41_4;
				
			ИначеЕсли ТаблицаОстатков.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				Если КодВидаПеремещения = 0 Тогда
					ТекстСообщения = "Нельзя перемещать товары принятые на комиссию: "+ТаблицаОстатков.Товар;
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат; 

				ИначеЕсли КодВидаПеремещения = 1 Тогда
					ТаблицаОстатков.СчетУчета = Сч004;
					ТаблицаОстатков.НовыйСчет = СчКТР;
					
				ИначеЕсли КодВидаПеремещения = 2 Тогда
				    ТаблицаОстатков.СчетУчета = СчКТР;
					ТаблицаОстатков.НовыйСчет = СчКТР;
					
				ИначеЕсли КодВидаПеремещения = 3 Тогда
				    ТаблицаОстатков.СчетУчета = СчКТР;
					ТаблицаОстатков.НовыйСчет = "";
				КонецЕсли;
				
			Иначе // покупной товар				
				Если КодВидаПеремещения = 0 Тогда
					ТаблицаОстатков.СчетУчета = Сч41_1;
					ТаблицаОстатков.НовыйСчет = Сч41_1;
					
				ИначеЕсли КодВидаПеремещения = 1 Тогда
					ТаблицаОстатков.СчетУчета = Сч41_1;
					ТаблицаОстатков.НовыйСчет = Сч41_2;
					
				ИначеЕсли КодВидаПеремещения = 2 Тогда
				    ТаблицаОстатков.СчетУчета = Сч41_2;
					ТаблицаОстатков.НовыйСчет = Сч41_2;
					
				ИначеЕсли КодВидаПеремещения = 3 Тогда
				    ТаблицаОстатков.СчетУчета = Сч41_2;
					ТаблицаОстатков.НовыйСчет = Сч41_1	;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СуммаНаСкладах = 0;
        КоличествоНаСкладах = 0;
        КоличествоНаСкладе = 0;
		ПереданоНаСубкомиссию = 0;
		
		Если ТаблицаОстатков.СчетУчета = Сч004 Тогда
			
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаОстатков.Товар, 2);
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Контрагенты, ТаблицаОстатков.Комитент, ?(ТаблицаОстатков.Комитент.Выбран()=1,2,1));
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Договоры, ТаблицаОстатков.ДоговорКомиссии, ?(ТаблицаОстатков.ДоговорКомиссии.Выбран()=1,2,1));
			БухИт004.ВыполнитьЗапрос(,ТекущийДокумент(),"004",,,,,"СК");
			
			БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаОстатков.Товар, 2);
			БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комитентами, ТаблицаОстатков.ДоговорКомиссии, ?(ТаблицаОстатков.ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКМС.ВыполнитьЗапрос(,ТекущийДокумент(),"КМС",,,,,"СК"); 
			
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаОстатков.Товар, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, ТаблицаОстатков.ДоговорКомиссии, ?(ТаблицаОстатков.ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
			
			КоличествоНаСкладе = БухИт004.СКД("К") - БухИтКТР.СКД("К") - БухИтКМС.СКД("К"); // количество по счету 004 бех учета переданного на субкомиссию
		
		ИначеЕсли ТаблицаОстатков.СчетУчета = СчКТР Тогда
			
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаОстатков.Товар, 2); 
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.МестаХранения, Склад, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, ТаблицаОстатков.ДоговорКомиссии, ?(ТаблицаОстатков.ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
			
			КоличествоНаСкладе = БухИтКТР.СКД("К"); // количество по счету 004 бех учета переданного на субкомиссию
			
		ИначеЕсли БухИт.ПолучитьСчет(, ТаблицаОстатков.СчетУчета) = 1 Тогда
			Если БухИт.ПолучитьСубконто(ВидыСубконто.Номенклатура,, ТаблицаОстатков.Товар) = 1 Тогда
				ТаблицаОстатков.СуммаНаСкладах = Макс(БухИт.СКД("С"), 0);
				ТаблицаОстатков.КоличествоНаСкладах = БухИт.СКД("К");
				Если БухИт.ПолучитьСубконто(ВидыСубконто.МестаХранения,, Склад) = 1 Тогда
					Если ТаблицаОстатков.СчетУчета = Сч41_2 Тогда
					    ТаблицаОстатков.СуммаНаСкладах = Макс(БухИт.СКД("С"), 0);
						ТаблицаОстатков.КоличествоНаСкладах = БухИт.СКД("К");
					КонецЕсли;
					КоличествоНаСкладе = БухИт.СКД("К");
				КонецЕсли;
				Если ТаблицаОстатков.КоличествоНаСкладах <> 0 Тогда
					ТаблицаОстатков.СредняяСтоимость = ТаблицаОстатков.СуммаНаСкладах/ТаблицаОстатков.КоличествоНаСкладах;    
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если КоличествоНаСкладе < ТаблицаОстатков.Количество Тогда
			ТекстСообщения = "На складе "+КоличествоНаСкладе+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+
							" из необходимых "+ТаблицаОстатков.Количество+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+" "+
							ТаблицаОстатков.Товар + " ("+ТаблицаОстатков.СчетУчета+")";
			
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;	
		КонецЕсли;
		
		
		Если (ОтражатьПеремещениеВНУ = 1)
		   и (ТаблицаОстатков.СчетУчета <> Сч004)
		   и (ТаблицаОстатков.СчетУчета <> СчКТР)
		   и ((ТаблицаОстатков.СчетУчета = Сч41_1) или (ТаблицаОстатков.СчетУчета = Сч41_2)) Тогда
		
			Если БухИтНУ.ПолучитьСубконто(ВидыСубконто.Номенклатура,, ТаблицаОстатков.Товар) = 1 Тогда
				ТаблицаОстатков.СуммаНаСкладахНУ = Макс(БухИтНУ.СКД("С"), 0);
				ТаблицаОстатков.КоличествоНаСкладахНУ = БухИтНУ.СКД("К");
				
				Если ТаблицаОстатков.КоличествоНаСкладахНУ <> 0 Тогда
					ТаблицаОстатков.СредняяСтоимостьНУ = ТаблицаОстатков.СуммаНаСкладахНУ/ТаблицаОстатков.КоличествоНаСкладахНУ;
				КонецЕсли;
			КонецЕсли;
		
			Если ТаблицаОстатков.КоличествоНаСкладахНУ < ТаблицаОстатков.Количество Тогда
				ТекстСообщения = "По данным налогового учета на складах "+ТаблицаОстатков.КоличествоНаСкладахНУ+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+
							  	    " из необходимых "+ТаблицаОстатков.Количество+" "+ТаблицаОстатков.Товар.ЕдиницаИзмерения+" товара "+ТаблицаОстатков.Товар;
				Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
					
				Иначе
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Количество = 0 Тогда
			ТекстСообщения = "Строка " + НомерСтроки + ", не указано количество товара """ + Товар + ".";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
			
		ИначеЕсли Товар.Выбран() = 0 Тогда
			ТекстСообщения = "Строка " + НомерСтроки + ", не указано товар.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;                                         
		
		НомСтроки = 0;
		ТаблицаОстатков.НайтиЗначение(Товар, НомСтроки, "Товар");
		ТаблицаОстатков.ПолучитьСтрокуПоНомеру(НомСтроки);
		
		Если ТаблицаОстатков.СчетУчета = Сч004 Тогда
			
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Номенклатура, Товар, 2);
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Комитент, ?(Комитент.Выбран()=1,2,1));
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Договоры, ДоговорКомиссии, ?(ДоговорКомиссии.Выбран()=1,2,1));
			БухИт004.ВыполнитьЗапрос(,ТекущийДокумент(),"004",,,,,"СК");
			
			БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура, Товар, 2);
			БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комитентами, ДоговорКомиссии, ?(ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКМС.ВыполнитьЗапрос(,ТекущийДокумент(),"КМС",,,,,"СК"); 
			
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, Товар, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, ДоговорКомиссии, ?(ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
			
			КоличествоНаСкладе = БухИт004.СКД("К") - БухИтКТР.СКД("К") - БухИтКМС.СКД("К"); // количество по счету 004 бех учета переданного на субкомиссию
			ПереданоНаСубкомиссию = БухИтКМС.СКД("К");
			
			ВсегоКоличество = Количество;
			РаспределеноКоличество = 0;
			РаспределеноВсего      = 0;
			РаспределеноНП         = 0;
			СуммаВсего			   = 0;
			
			БухИт004.ВыбратьСубконто(ВидыСубконто.Контрагенты);
			Пока (БухИт004.ПолучитьСубконто(ВидыСубконто.Контрагенты) = 1) и (ВсегоКоличество > РаспределеноКоличество) Цикл
				БухИт004.ВыбратьСубконто(ВидыСубконто.Договоры);
				Пока (БухИт004.ПолучитьСубконто(ВидыСубконто.Договоры) = 1) и (ВсегоКоличество > РаспределеноКоличество) Цикл
					
					КоличествоПоДоговору = БухИт004.СКД("К");
					СуммаПоДоговору = БухИт004.СКД("С");
					Если БухИтКМС.ПолучитьСубконто(ВидыСубконто.ДоговорыС_Комитентами,, БухИт004.Субконто(ВидыСубконто.Договоры)) = 1 Тогда
					    КоличествоПоДоговору = КоличествоПоДоговору - БухИтКМС.СКД("К");
						СуммаПоДоговору      = СуммаПоДоговору      - БухИтКМС.СКД("С");
					КонецЕсли;
					Если БухИтКТР.ПолучитьСубконто(ВидыСубконто.Договоры,, БухИт004.Субконто(ВидыСубконто.Договоры)) = 1 Тогда
					    КоличествоПоДоговору = КоличествоПоДоговору - БухИтКТР.СКД("К");
						СуммаПоДоговору      = СуммаПоДоговору      - БухИтКТР.СКД("С");
					КонецЕсли;
					Если КоличествоПоДоговору <= 0 Тогда
						Продолжить;
					КонецЕсли;
					КоличествоОтгрузки = Мин(ВсегоКоличество - РаспределеноКоличество, КоличествоПоДоговору);
					Если КоличествоОтгрузки = КоличествоПоДоговору Тогда
						СуммаОтгрузки = СуммаПоДоговору;
					Иначе
						СуммаОтгрузки = КоличествоОтгрузки*(СуммаПоДоговору/КоличествоПоДоговору);
					КонецЕсли;
                    
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Перемещение товара";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = СчКТР;
					Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.МестаХранения = СкладПолучатель;
					Операция.Дебет.Договоры = БухИт004.Субконто(ВидыСубконто.Договоры);
					Операция.Количество = КоличествоОтгрузки;
					Операция.Сумма = СуммаОтгрузки; // в рублях
					
					РаспределеноКоличество = РаспределеноКоличество + КоличествоОтгрузки;
					СуммаВсего = СуммаВсего + СуммаОтгрузки;
				КонецЦикла;
			КонецЦикла;
			Всего = СуммаВсего;
			
		ИначеЕсли ТаблицаОстатков.СчетУчета = СчКТР Тогда
			
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, Товар, 2); 
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.МестаХранения, Склад, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, ДоговорКомиссии, ?(ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
			
			КоличествоНаСкладе = БухИтКТР.СКД("К");
			ВсегоКоличество = Количество;
			РаспределеноКоличество = 0;
			РаспределеноВсего      = 0;
			РаспределеноНП         = 0;
			СуммаВсего			   = 0;
			
			БухИтКТР.ВыбратьСубконто(ВидыСубконто.Договоры);
			Пока (БухИтКТР.ПолучитьСубконто(ВидыСубконто.Договоры) = 1) и (ВсегоКоличество > РаспределеноКоличество) Цикл
				Если (Комитент.Выбран() = 1) и (БухИтКТР.Субконто(ВидыСубконто.Договоры).Владелец <> Комитент) Тогда
					Продолжить;
				КонецЕсли;
				КоличествоПоДоговору = БухИтКТР.СКД("К");
				СуммаПоДоговору = БухИтКТР.СКД("С");
				Если КоличествоПоДоговору <= 0 Тогда
					Продолжить;
				КонецЕсли;
				КоличествоОтгрузки = Мин(ВсегоКоличество - РаспределеноКоличество, КоличествоПоДоговору);
				Если КоличествоОтгрузки = КоличествоПоДоговору Тогда
					СуммаОтгрузки = СуммаПоДоговору;
				Иначе
					СуммаОтгрузки = КоличествоОтгрузки*(СуммаПоДоговору/КоличествоПоДоговору);
				КонецЕсли;
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Перемещение товара";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Если КодВидаПеремещения = 2 Тогда
					Операция.Дебет.Счет = СчКТР;
					Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.МестаХранения = СкладПолучатель;
					Операция.Дебет.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
				КонецЕсли;
				Операция.Кредит.Счет = СчКТР;
				Операция.Кредит.Номенклатура = Товар;
				Операция.Кредит.МестаХранения = Склад;
				Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
				Операция.Количество = КоличествоОтгрузки;
				Операция.Сумма = СуммаОтгрузки; // в рублях
				
				РаспределеноКоличество = РаспределеноКоличество + КоличествоОтгрузки;
				СуммаВсего = СуммаВсего + СуммаОтгрузки;
			КонецЦикла;
			Всего = СуммаВсего;
			
		Иначе
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Перемещение товара";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = ТаблицаОстатков.НовыйСчет.ТекущийСчет();
			Операция.Дебет.Номенклатура = Товар;
			Операция.Дебет.МестаХранения = СкладПолучатель;
			Операция.Кредит.Счет = ТаблицаОстатков.СчетУчета;
			Операция.Кредит.Номенклатура = Товар;
			Операция.Кредит.МестаХранения = Склад;
			Операция.Количество = Количество;
			
			Если Количество >= ТаблицаОстатков.КоличествоНаСкладах Тогда
				Всего = ТаблицаОстатков.СуммаНаСкладах;
				
			Иначе
				Всего = Окр(Количество*ТаблицаОстатков.СредняяСтоимость, 2, 1);
			КонецЕсли;
			
			ТаблицаОстатков.СуммаНаСкладах = ТаблицаОстатков.СуммаНаСкладах - Всего;
			ТаблицаОстатков.КоличествоНаСкладах = ТаблицаОстатков.КоличествоНаСкладах - Количество;
			
			Если (ТаблицаОстатков.СчетУчета = Сч41_3) или (ТаблицаОстатков.СчетУчета = Сч41_4) Тогда		    
				Продолжить;
				
			ИначеЕсли (КодВидаПеремещения = 1) или (КодВидаПеремещения = 2) Тогда
				Операция.Сумма = Всего;
				
			ИначеЕсли КодВидаПеремещения = 3 Тогда
				Если НДСВключатьВСтоимость = 1 Тогда
					Операция.Сумма = Всего - НДС;
					
				Иначе
					Операция.Сумма = Всего;
				КонецЕсли;
			КонецЕсли;
			
			Если (НДС <> 0) и (НДСВключатьВСтоимость = 1) Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Если КодВидаПеремещения = 1 Тогда
					Операция.СодержаниеПроводки = "НДС вкл. в стоимость";
					Операция.Дебет.Счет = ТаблицаОстатков.НовыйСчет.ТекущийСчет();
					Операция.Дебет.Номенклатура = Товар;
					Операция.Дебет.МестаХранения = СкладПолучатель;
					Операция.Кредит.Счет = Сч19_3;
					Операция.Кредит.Контрагенты = Контрагент;
					Операция.Кредит.СчетаФактурыПолученные = СчетФактура;
					Если СчетФактура.Выбран()=1 Тогда
						Если СчетФактура.Договор.АвтоОбработкаНДС = 1 Тогда
							ТекстСообщения = "Включение НДС в стоимость не может обрабатываться автоматически.";
							глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
						КонецЕсли;
					КонецЕсли;
					
				Иначе //Если КодВидаПеремещения = 3 Тогда
					Операция.СодержаниеПроводки = "Выделен НДС";
					Операция.Дебет.Счет = Сч19_3;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.СчетаФактурыПолученные = СчетФактура;
					Операция.Кредит.Счет = ТаблицаОстатков.СчетУчета;
					Операция.Кредит.Номенклатура = Товар;
					Операция.Кредит.МестаХранения = Склад;
					Если СчетФактура.Выбран()=1 Тогда
						Если СчетФактура.Договор.АвтоОбработкаНДС = 1 Тогда
							ТекстСообщения = "Выделенный НДС не может обрабатываться автоматически.";
							глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Операция.Сумма = НДС;
			КонецЕсли;
			
			Если ОтражатьПеремещениеВНУ = 1 Тогда
				СформироватьПроводкиДляЦелейНалоговогоУчета(ТаблицаОстатков);    
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаУдаленияПроведения()
	
	Если ВыбратьСтроки() = 1 Тогда
		Пока ПолучитьСтроку() = 1 Цикл
			Всего = 0;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()