////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
Перем СписокВидовРасходов;
Перем СписокЭлементовРасхода;
Перем ВидимостьЭлементов;

//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует строку, содержащую итоговые суммы документа.
//
Функция ИтоговаяСтрока()
	
	Если БалансоваяСтоимость = 0 Тогда
	    ИтСтр = "";
	Иначе
		ИтСтр = "Итого объем вложений во внеоборотные активы: " + 
				СокрЛ(Формат(БалансоваяСтоимость*КоличествоСтрок(),"Ч20.2-,"));
	КонецЕсли;
	
	Возврат ИтСтр;
	
КонецФункции // ИтоговаяСтрока()

//******************************************************************************
// ПриВыбореПорядкаНачисленияАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореПорядкаНачисленияАмортизации()
	
	Если ПодлежитАмортизации = 1 Тогда
		Форма.НачислятьАмортизацию.Заголовок("Начислять амортизацию");
		Форма.НачислятьАмортизацию.Видимость(1);
	Иначе 
		Если ДатаДок>='01.01.2006' Тогда
			Форма.НачислятьАмортизацию.Видимость(0);
		Иначе
			Форма.НачислятьАмортизацию.Видимость(1);
			Форма.НачислятьАмортизацию.Заголовок("Начислять износ"); 			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПриВыбореПорядкаНачисленияАмортизации()

//_____________________________________________________________________________
//ПриВыбореСписанияОС()
//В зависимости от даты прячет реквизиты начисления амортизации 
//и указания счета списания
//
Процедура ПриВыбореСписанияОС(Очистить=0)
	Если ДатаДок>='01.01.2006' Тогда
		Если СписатьНаЗатраты=1 Тогда
			ВидимостьЭлементов=0;
			Если Очистить=1 тогда
				СтавкаНалогаНаИмущество=0;
				СрокПолезногоИспользования=0;
				НачислятьАмортизацию=0;
				СчетЗатрат="";
				НазначитьТип("Субконто1","Справочник.Материалы");
				НазначитьТип("Субконто2","Справочник.МестаХранения");
				Субконто2 = ?(ПустоеЗначение(Субконто2)=1,глЗначениеПоУмолчанию("ОсновнойСклад"),Субконто2);
				Субконто3="";
			КонецЕсли;
		Иначе
			ВидимостьЭлементов=1; 
		КонецЕсли;
	Иначе
		ВидимостьЭлементов=1;
	КонецЕсли; 
    	
	Форма.кнВыбПечать.Доступность(ВидимостьЭлементов);
	Форма.кнПечать.Доступность(ВидимостьЭлементов);	

	Если Очистить=1 тогда
		Форма.НачислятьАмортизацию.Доступность(ВидимостьЭлементов);
		Форма.СтавкаНалогаНаИмущество.Доступность(ВидимостьЭлементов);
		Форма.НачислятьАмортизацию.Заголовок(?(ПодлежитАмортизации=0,"Начислять износ","Начислять амортизацию")); 
	КонецЕсли;

	Если (СписатьНаЗатраты=0) и (Очистить=1) и (ДатаДок>='01.01.2006') Тогда
		СтавкаНалогаНаИмущество = ?(ПустоеЗначение(СтавкаНалогаНаИмущество)=1,глПолучитьСтавкуНалога("Имущество", ДатаДок),СтавкаНалогаНаИмущество);
		Субконто1="";
		Субконто2="";
	ИначеЕсли (Очистить=1) и (ДатаДок<'01.01.2006') и  (ПустоеЗначение(СтавкаНалогаНаИмущество)=1) Тогда
		СтавкаНалогаНаИмущество = глПолучитьСтавкуНалога("Имущество", ДатаДок);
	КонецЕсли;

КонецПроцедуры
//	
//******************************************************************************
// ПриВыбореСпособаНачисленияАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореСпособаНачисленияАмортизации()
	
	Если СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
        Форма.ИспользоватьСлой("Износ", 0);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 1);
		
	ИначеЕсли СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукцииРабот Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 1);
        Форма.ИспользоватьСлой("Износ", 0);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 0);
		
	ИначеЕсли СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоЕдинымНормам Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
		Форма.ИспользоватьСлой("Износ", 1);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 0);
	Иначе
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
		Форма.ИспользоватьСлой("Износ", 0);               
		Форма.ИспользоватьСлой("КоэффициентУскорения", 0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСпособаНачисленияАмортизации()

//******************************************************************************
// ПриВыбореСчета()
// 
// Вызывается из формул элементов диалога:
//  Счет, Расходы.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета()
	
	Если Форма.АктивныйЭлемент() = "СчетЗатрат" Тогда
		Если СчетЗатрат.Забалансовый = 1 Тогда
		    Предупреждение("Счет отнесения затрат должен быть балансовым.");
		КонецЕсли;
	КонецЕсли;
	
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто" + А, СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
	
КонецПроцедуры // ПриВыбореСчета()

//******************************************************************************
// ПриВыбореВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Переключатель "Для целей налогового учета".
//
// Описание:
//
Процедура ПриВыбореВидаРасхода()
              
	Если ПринятьК_НалоговомуУчету = 1 Тогда // включить в состав амортизируемого имущества
		Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
		 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
		    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.Амортизация;
		КонецЕсли;
		
	ИначеЕсли ПринятьК_НалоговомуУчету = 2 Тогда // включить в состав расходов
		Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
		 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
		    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.МатериальныеРасходы;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //ПриВыбореВидаРасхода

//******************************************************************************
//
// ПриИзмененииВидаРасхода(ВызовПроцедурыПриОткрытииДокумента)
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Графа "Вид расхода".
//
// Описание:
//  Осуществляется управление реквизитов "объект" и "элемент расхода"
//  в зависимости от выбранного вида расхода.
//
Процедура ПриИзмененииВидаРасхода(ВызовПроцедурыПриОткрытииДокумента = 0)
	
	ТипЭлементаРасхода = "";
	ВидыОбъекта = "";
	Если ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеТоваров Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеМатериалов Тогда
		ВидыОбъекта = "Материалы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства,Оборудование";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.СтроительствоОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг Тогда
		ВидыОбъекта = "ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеПрав Тогда
		ВидыОбъекта = "Договоры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.НИОКР Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов Тогда
		ВидыОбъекта = "РасходыБудущихПериодов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		ВидыОбъекта = "ВидыНоменклатуры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВнереализационныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ВнереализационныеРасходы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияОсновныхСредств Тогда
		ВидыОбъекта = "ОсновныеСредства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияПрочегоИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОбъектыСтроительства,ЦенныеБумаги";
	КонецЕсли;
	
	Если ВызовПроцедурыПриОткрытииДокумента = 0 Тогда
		НазначитьТип("ЭлементРасхода", ТипЭлементаРасхода);
	КонецЕсли;
	
	Если ПустоеЗначение(ВидыОбъекта) = 0 Тогда
		Если Найти("," + ВидыОбъекта + ",", "," + Объект.Вид() + ",") = 0 Тогда
			Если ПустоеЗначение(Объект) = 0 Тогда
				Объект = "";    
			КонецЕсли;
		КонецЕсли;
		Объект.ВидыДляВыбора(ВидыОбъекта);
		Форма.Объект.Доступность(1);
		
	Иначе
		Если ПустоеЗначение(Объект) = 0 Тогда
			Объект = "";    
		КонецЕсли;
		Форма.Объект.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииВидаРасхода()

//******************************************************************************
// РассчитатьСтоимость(Учет)
//
// Параметры:
//  Учет - Строка - если "Б", то рассчет для бух. учета, иначе, если "Н", то для налогового.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура РассчитатьСтоимость(Учет)
	
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
		    |Расчет итогов выполняется в режиме
		    |""Операции - Управление бухгалтерскими итогами"".");
		
	ИначеЕсли (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения суммы первоначальной стоимости по данным
					   |бухгалтерского или налогового учета документ
					   |необходимо записать."); 
			
	ИначеЕсли ОбъектВнеоборотныхАктивов.Выбран() = 0 Тогда
		Предупреждение("Не выбран объект внеоборотных активов.");
		
	Иначе
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.ОбъектыСтроительства, ОбъектВнеоборотныхАктивов, 2);
		Если Учет = "Б" Тогда
			СчетИсточникаПоступления = СписокВидовВложений.ПолучитьЗначение(ВидВложений);
			БухИт.ВыполнитьЗапрос(ТекущийДокумент(),, СчетИсточникаПоступления);
			Если ВидВложений = 4 Тогда                                                              
				Если ВерсияОбъекта >= "7.70.421" Тогда
				    КоличествоПоСчету = БухИт.СНД("К");
				Иначе
					КоличествоПоСчету = 1;
				КонецЕсли;
				
				Если КоличествоСтрок() > КоличествоПоСчету  Тогда
					Предупреждение("Количество основных средств превышает количество 
								   |выбранного внеоборотного актива.");
					Возврат;
				КонецЕсли;
				
			Иначе
				КоличествоПоСчету = 1;
			КонецЕсли;
	
			Если КоличествоПоСчету > 0 Тогда
			    СтоимостьОбъектовВнеоборотныхАктивов = Цел(БухИт.СНД("С") / КоличествоПоСчету * 100) / 100;
			КонецЕсли;
			БалансоваяСтоимость = СтоимостьОбъектовВнеоборотныхАктивов;
			
		Иначе // Учет = "Н"
			КоличествоПоСчету = 1;
			Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				
				Если ВидВложений = 4 Тогда
					БухИт.ВыполнитьЗапрос(ТекущийДокумент(),, "Н01.01");
					КоличествоПоСчету = БухИт.СНД("К");
				Иначе
					БухИт.ВыполнитьЗапрос(ТекущийДокумент(),, "Н01.09");
				КонецЕсли;
				
				Если КоличествоСтрок() > КоличествоПоСчету  Тогда
					Предупреждение("Количество основных средств превышает количество 
								   |выбранного внеоборотного актива.");
					Возврат;
				КонецЕсли;
			Иначе
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),, "Н01.01");
				Если ВидВложений = 4 Тогда
					Если ВерсияОбъекта >= "7.70.421" Тогда
						СчетИсточникаПоступления = СписокВидовВложений.ПолучитьЗначение(ВидВложений);
						БухИтКоличество = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКоличество.ИспользоватьРазделительУчета(ЮрЛицо);
						БухИтКоличество.ИспользоватьСубконто(ВидыСубконто.ОбъектыСтроительства, ОбъектВнеоборотныхАктивов, 2);
						БухИтКоличество.ВыполнитьЗапрос(ТекущийДокумент(),, СчетИсточникаПоступления,,,,, "К");
					    КоличествоПоСчету = БухИтКоличество.СНД("К");
					КонецЕсли;
					Если КоличествоСтрок() > КоличествоПоСчету  Тогда
						Предупреждение("Количество основных средств превышает количество 
									   |выбранного внеоборотного актива.");
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если КоличествоПоСчету > 0 Тогда
			    ПервоначальнаяСтоимостьН = Цел(БухИт.СНД("С") / КоличествоПоСчету * 100) / 100;
			КонецЕсли;
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры // РассчитатьСтоимость()

//******************************************************************************
// Печать()
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаПечать".
//
// Описание:
//  Формирует акт приемки-передачи ОС по форме ОС-1.
//
Процедура Печать()
	
	Если ДатаДок<Дата("23.03.2003") Тогда
		
		ИнвентарныеНомера = "";
		ОбъектОС = ПолучитьПустоеЗначение("Справочник.ОсновныеСредства");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = 1 Тогда
				ОбъектОС = ОсновноеСредство;
			КонецЕсли;
			ИнвентарныеНомера = ?(ИнвентарныеНомера = "", "", ИнвентарныеНомера + "; " + РазделительСтрок);
			ИнвентарныеНомера = ИнвентарныеНомера + СокрЛ(ОсновноеСредство.Код);
		КонецЦикла;
		
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("ОС-1_97");
		Сдатчик = "";
		Получатель = Подразделение;
		Если (СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
		или (СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		или (СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет) Тогда
			СрокИспользования = ""+СрокПолезногоИспользования+" мес";
		Иначе
			СрокИспользования = "";
		КонецЕсли;
		
		НормаАмортизации = "";
		КодНормы = "";
		Если (ПодлежитАмортизации = 0)
		или (СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоЕдинымНормам) Тогда
			НормаАмортизации = КоэффициентАмортизации;
			Если ШифрПоЕНАОФ.Выбран() = 1 Тогда
				КодНормы = ШифрПоЕНАОФ.Код;
			КонецЕсли;
		КонецЕсли;
		
		НачисленнаяАмортизация = 0;
		
		ДатаВводаВЭксплуатацию = ДатаДок;
		ПредставлениеГода = Лев(ДатаГод(ДатаДок),2);
		
		Таб.Вывести();
		Таб.ТолькоПросмотр(1);
		Таб.ПараметрыСтраницы(2,,, 10, 0, 0, 0,,,,,);
		Таб.Опции(0,0,0,0,"ОпцииПечатиОС1","ОкноОС1");
		Таб.Показать();
		
	Иначе
		
		//Реквизиты заполняемые только при передаче ОС
		РукСдатчика			= "";
		ДолжностьРукСдатчика= "";
		НаимСдатчика 		= "";
		АдресСдатчика 		= "";
		РеквСдатчика 		= "";
		ПодрСдатчика 		= "";
		ДоговорПередачи 	= "";
		ДатаПередачи 		= "";
		СрокЭкспл 			= "";
		НачАмортизация 		= "";
		ОстСтоимость 		= "";
		ЦенаПродажи 		= "";
		ИтогЦенаПрдажи 		= "";
		ГлавБухСдатчика 	= "";
		СрокПолезнИспПриПеред = "";
		//Реквизиты заполняемые при вводе в эксплуатацию ОС
		ОКОФ = СтрЗаменить(КодПоОКОФ,"_"," ");
		НаимПолучателя      = СокрЛП(Константа.НазваниеОрганизации);
		АдресПолучателя     = глПредставлениеАдреса(Константа.АдресОрганизации);
		глДобавитьРеквизит(АдресПолучателя, ", тел. : ", Константа.ТелефоныОрганизации);
		РеквПолучателя      = "";
		Если РасчетныйСчет.Выбран() = 1 Тогда
			глДобавитьРеквизит(РеквПолучателя, "р/с ", СокрЛП(РасчетныйСчет.Номер) + " в " + РасчетныйСчет.БанкОрганизации);
			глДобавитьРеквизит(РеквПолучателя, ", БИК ", СокрЛП(РасчетныйСчет.БанкОрганизации.Код));
			глДобавитьРеквизит(РеквПолучателя, ", корр/с ", РасчетныйСчет.БанкОрганизации.КоррСчет);
		КонецЕсли;
		ДатаВвода           = "";
		ДатаАктаВВода		= ДатаДок;
		НомерГруппы         = Формат(АмортизационнаяГруппа.ПорядковыйНомер(),"Ч05");
		РукПолучателя       = "("+ФИО(Константа.Руководитель.Получить(ДатаДок))+")";
		ДолжностьРукПолучателя = Константа.Руководитель.Получить(ДатаДок).Должность;
		ПодрПолучателя      = Подразделение;
		НачСтоимость        = Формат(БалансоваяСтоимость,"Ч015.2");
		СрокПолезнИспПриПост = Формат(СрокПолезногоИспользования,"Ч05");                       
		СпособАморт         = СпособНачисленияАмортизации;
		Если (ПодлежитАмортизации = 0)
		или (СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоЕдинымНормам) Тогда
			НормаАморт = Формат(КоэффициентАмортизации,"Ч05.2");
		КонецЕсли;
		ГлавБухПолучателя   = "("+ФИО(Константа.ГлБухгалтер.Получить(ДатаДок))+")";
		
		ВыбратьСтроки();
		Если (Группа = Перечисление.ГруппыОС.Здания) или (Группа = Перечисление.ГруппыОС.Сооружения) Тогда
			Если КоличествоСтрок()>1 Тогда
				Пока ПолучитьСтроку()=1 Цикл
					Таб = СоздатьОбъект("Таблица");
					Таб.ИсходнаяТаблица("ОС-1а");
					НомерАкта 	= НомерДок+"/"+НомерСтроки;
					ИнвНомер 	= ОсновноеСредство.Код;
					НаимОС 		= ОсновноеСредство.Наименование; 
					Таб.Вывести();
					Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1а","ОкноОС_1а");
					Таб.ТолькоПросмотр(1);
					Таб.ПараметрыСтраницы(2);
					
					Таб.Показать("Акт ОС-1а");
				КонецЦикла;
			Иначе
				Таб = СоздатьОбъект("Таблица");
				Таб.ИсходнаяТаблица("ОС-1а");
				НомерАкта 	= НомерДок;
				ПолучитьСтроку();
				ИнвНомер 	= ОсновноеСредство.Код;
				НаимОС 		= ОсновноеСредство.Наименование; 
				Таб.Вывести();
				Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1а","ОкноОС_1а");
				Таб.ТолькоПросмотр(1);
				Таб.ПараметрыСтраницы(2);
				
				Таб.Показать("Акт ОС-1а");
			КонецЕсли; 
		Иначе
			Таб = СоздатьОбъект("Таблица");
			НомерАкта 	= НомерДок;
			Если КоличествоСтрок()>1 Тогда
				Таб.ИсходнаяТаблица("ОС-1б");
				ИтогНачСтоимость = КоличествоСтрок()*БалансоваяСтоимость;
				Таб.ВывестиСекцию("Шапка1");
				Таб.ВывестиСекцию("Шапка2");
				Пока ПолучитьСтроку()=1 Цикл
					Нс = НомерСтроки;
					ИнвНомер 	= ОсновноеСредство.Код;
					НаимОС 		= ОсновноеСредство.Наименование;
					Таб.ВывестиСекцию("Строка2");
				КонецЦикла;
				Если КоличествоСтрок()<25 Тогда
					Для х=КоличествоСтрок()+1 по 25 Цикл
						Таб.ВывестиСекцию("Строка2П");	
					КонецЦикла;
				КонецЕсли; 
				Таб.ВывестиСекцию("Подвал2");
				Таб.ВывестиСекцию("Шапка3");
				ВыбратьСтроки();
				Пока ПолучитьСтроку()=1 Цикл
					Таб.ВывестиСекцию("Строка3");
				КонецЦикла;
				Если КоличествоСтрок()<25 Тогда
					Для х=КоличествоСтрок()+1 по 25 Цикл
						Таб.ВывестиСекцию("Строка3П");	
					КонецЦикла;
				КонецЕсли; 
				Таб.ВывестиСекцию("Подвал3");
				Таб.НоваяСтраница();
				Таб.ВывестиСекцию("Шапка4");
				Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1б","ОкноОС_1б");
				Таб.ТолькоПросмотр(1);
				Таб.ПараметрыСтраницы(1);
				
				Таб.Показать("Акт ОС-1б");
			Иначе
				ПолучитьСтроку();
				ИнвНомер 	= ОсновноеСредство.Код;
				НаимОС 		= ОсновноеСредство.Наименование; 
				Таб.ИсходнаяТаблица("ОС-1");
				Таб.Вывести();
				Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1","ОкноОС_1");
				Таб.ТолькоПросмотр(1);
				Таб.ПараметрыСтраницы(2);
				
				Таб.Показать("Акт ОС-1");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Печать

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
// ПриВыбореШифраЕНАОФ()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореШифраЕНАОФ()
	
	Если ШифрПоЕНАОФ.Выбран() = 1 Тогда
	    КоэффициентАмортизации = ШифрПоЕНАОФ.НормаАморт;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореШифраЕНАОФ()    

//******************************************************************************
// ПриУстановкеВключитьКапительныеВложенияВРасходы()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриУстановкеВключитьКапительныеВложенияВРасходы()
	
	Если (ВключитьКапитальныеВложенияВРасходы = 1) И 
	((СписатьНаЗатраты = 0)	или (ДатаДок>='01.01.2006'))
	И (ПринятьК_НалоговомуУчету = 1) Тогда 
		ВидимостьРеквизитов = 1;
	Иначе
		ВидимостьРеквизитов = 0;
		Если КапитальныеВложенияВключенныеВРасходы <> 0 Тогда
			КапитальныеВложенияВключенныеВРасходы = 0;           
		КонецЕсли;
	КонецЕсли;
	
	Форма.КапитальныеВложенияВключенныеВРасходы.Доступность(ВидимостьРеквизитов);
	Форма.ПодписьВРазмере.Доступность(ВидимостьРеквизитов); 
	  
КонецПроцедуры

//******************************************************************************
// ПриВыбореВидаВложений()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореВидаВложений()

	ВидВложений = СписокВидовВложений.ТекущаяСтрока();

КонецПроцедуры //ПриВыбореВидаВложений() 

//******************************************************************************
Процедура Подбор()
	
	ОткрытьПодбор("Справочник.ОсновныеСредства","Поступление");
	
КонецПроцедуры  

//******************************************************************************
Процедура ОбработкаПодбора(ВыбрОС)
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Код = ВыбрОС.Код Тогда
	        Предупреждение("Основное средство уже выбрано", 10);
			Возврат;
	    КонецЕсли;
	КонецЦикла;
	НоваяСтрока();
	ОсновноеСредство = ВыбрОС;
	АктивизироватьСтроку();
КонецПроцедуры 

//******************************************************************************
Процедура Заполнить()  
	НачОС = "";                            
	СписокКодов = СоздатьОбъект("СписокЗначений");
    Если КоличествоСтрок() = 0 Тогда
        ВвестиЗначение(НачОС,"Выберите элемент, входящий в группу однотипных основных средств","Справочник.ОсновныеСредства");
		Если ПустоеЗначение(НачОС) = 1 Тогда
		    Возврат;
		Иначе
			НоваяСтрока();
			ОсновноеСредство = НачОС;
		КонецЕсли;
	КонецЕсли;
	ВыбратьСтроки();
	ПолучитьСтроку();
	НаимОС = ОсновноеСредство.Наименование;       
	СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	ОСРодитель = ОсновноеСредство.Родитель;
	КС = КоличествоСтрок();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Наименование <> НаимОС Тогда
	        Предупреждение("В табличной части указаны объекты с разными наименованиями."+
			РазделительСтрок+"Заполнение отменено",60);
			Возврат;
		Иначе
			СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	    КонецЕсли;
	КонецЦикла;
	Спр = СоздатьОбъект("Справочник.ОсновныеСредства");
	Спр.ИспользоватьРодителя(ОСРодитель);
	Спр.ВыбратьЭлементы(1);
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Если Спр.ЭтоГруппа() = 1 Тогда
		    Продолжить;
		КонецЕсли;
		Если Спр.Наименование <> НаимОС Тогда
		    Продолжить;
		КонецЕсли;
	    Если СписокКодов.НайтиЗначение(Спр.Код) = 0 Тогда
	        НоваяСтрока();
			ОсновноеСредство = Спр.ТекущийЭлемент();
	    КонецЕсли;
	КонецЦикла;
	Если КС = КоличествоСтрок() Тогда
	    Предупреждение("Других объектов с указанным наименованием не найдено",60);
	КонецЕсли;
КонецПроцедуры
	
//******************************************************************************
// ИнформационнаяСтрока(Учет)
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция ИнформационнаяСтрока(Учет)

	Стр = "";
	Если Учет = "Б" Тогда
		Если СписатьНаЗатраты = 1 Тогда
			Если ДатаДок>='01.01.2006' Тогда
				Стр = "При вводе в эксплуатацию основное средство отражается в составе материально-производственных запасов.";    
				Форма.СтатикДанныеПоНачислениюАмортизации.Видимость(0);
			Иначе
				Стр = "При вводе в эксплуатацию основное средство списывается на затраты на производство (расходы на продажу).";
			КонецЕсли;

		ИначеЕсли ПодлежитАмортизации = 0 Тогда
			Если ДатаДок>='01.01.2006' Тогда
				Стр = "Основное средство не подлежит амортизации."
			Иначе
				Стр = "Основное средство не подлежит амортизации. Начисление износа производится по установленным нормам амортизационных отчислений.";
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Учет = "Н" Тогда
		Если ПринятьК_НалоговомуУчету = 3 Тогда
		    Стр = "Основное средство не принимается к налоговому учету.";

		ИначеЕсли ПринятьК_НалоговомуУчету = 2 Тогда
		    Стр = "При вводе в эксплуатацию основное средство включается в состав расходов.";

		ИначеЕсли ПодлежитАмортизации = 0 Тогда
		    Стр = "Основное средство не подлежит амортизации.";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции // ИнформационнаяСтрока()

//******************************************************************************
// ПриВыбореОКОФ()   
//
//Устанавливается значение реквизита "Амортизационная группа" в соответствии
//со значением соответствующего реквизита справочника ОКОФ
//
Процедура ПриВыбореОКОФ()
	Если ПустоеЗначение(АмортизационнаяГруппа)=1 Тогда
		АмортизационнаяГруппа=КодПоОКОФ.АмортизационнаяГруппа;
	КонецЕсли;
КонецПроцедуры   

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер,Значение)
	
	Если Значение = "Основные средства" Тогда
	    Форма.ИспользоватьСлой("Основной, ОсновныеСредства", 2);
		
	ИначеЕсли Значение = "Общие сведения" Тогда
		Форма.ИспользоватьСлой("Основной, ОбщиеСведения", 2);
		Если ДатаДок>='01.01.2006' Тогда
			Форма.СписатьНаЗатраты.Заголовок("Отразить в составе материально-");
			Форма.СтатикСписатьНаЗатраты.Заголовок("производственных запасов");
			Форма.РамкаНачислениеАмортизации.Заголовок("Начисление амортизации");			
		Иначе
			Форма.СписатьНаЗатраты.Заголовок("Списать на затраты на производство");
			Форма.СтатикСписатьНаЗатраты.Заголовок("(расходы на продажу)"); 
			Форма.РамкаНачислениеАмортизации.Заголовок("Начисление амортизации (износа)");			
		КонецЕсли;
		ПриВыбореСписанияОС();
		Форма.НачислятьАмортизацию.Доступность(ВидимостьЭлементов);
		Форма.СтавкаНалогаНаИмущество.Доступность(ВидимостьЭлементов);
		ПриВыбореПорядкаНачисленияАмортизации();
	ИначеЕсли Значение = "Бухгалтерский учет" Тогда 
		Если ДатаДок>='01.01.2006' Тогда
			Форма.СтатикДанныеПоНачислениюАмортизации.Заголовок("Данные по начислению амортизации для целей бухгалтерского учета");
		Иначе
			Форма.СтатикДанныеПоНачислениюАмортизации.Заголовок("Данные по начислению амортизации (износа) для целей бухгалтерского учета");
		КонецЕсли;
		ПриВыбореСписанияОС();
		Форма.ИспользоватьСлой("Основной, БухгалтерскийУчет", 2);
	
		Если ВидимостьЭлементов=1 Тогда
			Если СписатьНаЗатраты = 1 Тогда
				Форма.РамкаСчетаЗатрат.Заголовок("Счет отнесения затрат на производство (расходы на продажу)");
				Форма.ИспользоватьСлой("СчетЗатрат,СрокПолезногоИспользования", 1);
				
			ИначеЕсли ПодлежитАмортизации = 1 Тогда
				Форма.РамкаСчетаЗатрат.Заголовок("Счет отнесения затрат по начисленной амортизации");
				Форма.ИспользоватьСлой("Амортизация,СрокПолезногоИспользования", 1);
				Форма.ИспользоватьСлой("СчетЗатрат", 1);
				ПриВыбореСпособаНачисленияАмортизации();
				
			Иначе
				Если ДатаДок<'01.01.2006' Тогда
					Форма.ИспользоватьСлой("Износ,СрокПолезногоИспользования", 1);  
				КонецЕсли;
			КонецЕсли; 
		Иначе
			Форма.РамкаСчетаЗатрат.Заголовок("Материал и место хранения");
			Форма.ИспользоватьСлой("СчетЗатрат", 1);
			Форма.СтатикСчет.Видимость(0);
			Форма.СчетЗатрат.Видимость(0);
			Форма.Субконто3.Видимость(0);
		КонецЕсли;
		
	ИначеЕсли Значение = "Налоговый учет" Тогда
		Форма.ИспользоватьСлой("Основной, НалоговыйУчет", 2);
		Форма.ИспользоватьСлой("ПервоначальнаяСтоимостьН", 1);
		Если ПринятьК_НалоговомуУчету = 1 Тогда
			Форма.СтоимостьН.Заголовок("Первонач. стоимость:");
			Если ПодлежитАмортизации = 1 Тогда
				Форма.РамкаСчетаЗатратН.Заголовок("Отнесение расходов по начисленной амортизации");
				Форма.ИспользоватьСлой("АмортизацияН", 1);
				Форма.ИспользоватьСлой("ВидРасхода", 1);
			КонецЕсли;

		ИначеЕсли ПринятьК_НалоговомуУчету = 2 Тогда
			Форма.СтоимостьН.Заголовок("Сумма расходов:");
			Форма.РамкаСчетаЗатратН.Заголовок("Отнесение расходов");
			Форма.ИспользоватьСлой("ВидРасхода", 1);
		КонецЕсли;
		ПриУстановкеВключитьКапительныеВложенияВРасходы();
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВидРасхода" Тогда
		Флаг = 0;
		Позиция = СписокВидовРасходов.НайтиЗначение(ВидРасхода);
		ВыбранныйВидРасхода = ВидРасхода;
		Если СписокВидовРасходов.ВыбратьЗначение(ВыбранныйВидРасхода,, Позиция,, 2) = 1 Тогда
			Если ВидРасхода <> ВыбранныйВидРасхода Тогда
				ВидРасхода = ВыбранныйВидРасхода;
			    ПриИзмененииВидаРасхода();
				ПриВыбореВидаРасхода();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ЭлементРасхода" Тогда
		Если ТипЗначения(ЭлементРасхода) = 0 Тогда
			Флаг = 0;
			
		ИначеЕсли ЭлементРасхода.Вид() = "ГруппыВидыРасходов" Тогда
			Флаг = 0;
			Если ПринятьК_НалоговомуУчету <> 1 Тогда
				Позиция = СписокЭлементовРасхода.НайтиЗначение(ЭлементРасхода);
				СписокЭлементовРасхода.ВыбратьЗначение(ЭлементРасхода,, Позиция,, 2);    
			КонецЕсли;
		КонецЕсли; 
	ИначеЕсли (ЭлементДиалога="Субконто1") И (Форма.СчетЗатрат.Видимость()=0) Тогда
		Флаг=0;
		ОткрытьФорму("Справочник.Материалы.ДляВыбора", СчетПоКоду("10.9")); 

	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;
    
	РасчетныйСчет = Константа.ОсновнойБанковскийСчет;
	ВидВложений = 4;
	ПодлежитАмортизации = 1;
	ПринятьК_НалоговомуУчету = 1;
	СпециальныйКоэффициент = 1;
	НачислятьАмортизацию = 1;
	КоэффициентУскорения = 1;
	СтавкаНалогаНаИмущество = глПолучитьСтавкуНалога("Имущество", ДатаДок);
КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаОбъемаВложений.Доступность(0);
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;

	Сч08_1 = СчетПоКоду("08.1");
	Сч08_2 = СчетПоКоду("08.2");
	Сч08_3 = СчетПоКоду("08.3");
	Сч08_4 = СчетПоКоду("08.4");
	СписокВидовВложений.ДобавитьЗначение(Сч08_1,Сч08_1.Код+" ("+Сч08_1.ПолнНаименование+")");
	СписокВидовВложений.ДобавитьЗначение(Сч08_2,Сч08_2.Код+" ("+Сч08_2.ПолнНаименование+")");
	СписокВидовВложений.ДобавитьЗначение(Сч08_3,Сч08_3.Код+" ("+Сч08_3.ПолнНаименование+")");
	СписокВидовВложений.ДобавитьЗначение(Сч08_4,Сч08_4.Код+" ("+Сч08_4.ПолнНаименование+")");
	СписокВидовВложений.ТекущаяСтрока(ВидВложений);
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основные средства");
	Форма.Закладки.ДобавитьЗначение("Общие сведения");
	Форма.Закладки.ДобавитьЗначение("Бухгалтерский учет");
	Форма.Закладки.ДобавитьЗначение("Налоговый учет");
	ПриВыбореЗакладки(, "Основные средства");
	
	СписокВидовРасходов = СоздатьОбъект("СписокЗначений");
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.КосвенныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПрямыеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеТоваров);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеМатериалов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.СтроительствоОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеПрав);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ТранспортныеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПредставительскиеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РасходыНаРекламу);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НИОКР);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ВнереализационныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияПрочегоИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.БезвозмезднаяПередачаИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НеПринимаемые);
	
	СписокЭлементовРасхода = СоздатьОбъект("СписокЗначений");
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.МатериальныеРасходы);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РасходыНаРекламуБезНорм);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ИзучениеКонъюнктурыРынка);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РемонтОсновныхСредств);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ОхранаИмущества);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.УслугиПоУправлению);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.СоциальнаяЗащитаИнвалидов);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
	
	ПриИзмененииВидаРасхода(1); 
	ПриВыбореСписанияОС();
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
КонецПроцедуры //ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	
    Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если (ДатаДок>='01.01.2006') и (СписатьНаЗатраты=1) Тогда
		Операция.Содержание = "Отражение ОС в составе МПЗ";	
	Иначе
		Операция.Содержание = "Ввод в эксплуатацию ОС";
	КонецЕсли;

	Операция.СуммаОперации = БалансоваяСтоимость*КоличествоСтрок();
	ВсегоБалансоваяСтоимость = БалансоваяСтоимость*КоличествоСтрок();
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()    

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Акт ОС-1";
ТаблицаПечФорм.Кнопка       = "Акт ОС-1";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");