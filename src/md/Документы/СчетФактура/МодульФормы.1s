////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем КонтекстФормыПодбора;
Перем Новый;
Перем СписокДействий;
Перем СтарыйДоговор;
Перем СтарыйКурс;
Перем ТекДоговор;
Перем СтарыйВидОперации;

Процедура ПроверитьДоговор() Далее
Процедура УправлениеКурсом(ИзменитьКурс=0) Далее
Процедура ПриВыбореСтавкеНольПроцентов() Далее
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ОпределитьСтатьюПрочихДоходовИРасходов()
//
// Описание:
//  Определяет статью прочих доходов и расходов на которую относим курсовые разниы
//   
Функция ОпределитьСтатьюПрочихДоходовИРасходов()
	СпрПрочиеДоходыИРасходы = СоздатьОбъект("Справочник.ПрочиеДоходыИРасходы");
	СпрПрочиеДоходыИРасходы.ВыбратьЭлементыПоРеквизиту("ВидПрочихДоходовИРасходов", Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы,,);
	Аналитика91 = "";
	
	НаименованиеВидаПрочихДоходовИРасходов = "Курсовые разницы по расчетам в у.е.";
	
	Пока (СпрПрочиеДоходыИРасходы.ПолучитьЭлемент() = 1) и (ПустоеЗначение(Аналитика91) = 1) Цикл
		Если СокрЛП(СпрПрочиеДоходыИРасходы.Наименование) = НаименованиеВидаПрочихДоходовИРасходов Тогда
			Аналитика91 = СпрПрочиеДоходыИРасходы.ТекущийЭлемент();
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначение(Аналитика91) = 1 Тогда
		СпрПрочиеДоходыИРасходы.Новый();
		СпрПрочиеДоходыИРасходы.Наименование = НаименованиеВидаПрочихДоходовИРасходов;
		СпрПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
		СпрПрочиеДоходыИРасходы.Записать();    
		Аналитика91 = СпрПрочиеДоходыИРасходы.ТекущийЭлемент();				
	КонецЕсли;                             
	Возврат (Аналитика91 );
КонецФункции //ОпределитьСтатьюПрочихДоходовИРасходов

//******************************************************************************
// ПриИзмененииДаты()
//
// Описание:
//  При изменении даты на более позднюю, чем 31.12.2005, делает недоступным
// переключатель "Счет учета НДС" и переводит его в положение "68.2".
//
Процедура ПриИзмененииДаты()
	
	Если ДатаДок >= '01.01.2006' Тогда
		СчетНДС = 1;
	КонецЕсли;
	
	УправлениеКурсом();
	
КонецПроцедуры // ПриИзмененииДаты()

//******************************************************************************
// УстановкаФлажкаВключитьВКнигуПродаж()
//
Процедура УстановкаФлажкаВключитьВКнигуПродаж()
	Если Форма.ВключатьВКнигуПродаж.Видимость()=1 Тогда
		Если Аванс = 1 Тогда
			ВключатьВКнигуПродаж = 1;
			
		ИначеЕсли НДСпоСтавкеНольПроцентов = 1 Тогда
			ВключатьВКнигуПродаж = 0;
			
		Иначе
			Если (Договор.Выбран() = 1) и (Договор.АвтоОбработкаНДС = 0) Тогда
				ВключатьВКнигуПродаж = 1;
				
			Иначе
				ВключатьВКнигуПродаж = 0;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ВключатьВКнигуПродаж = 0;
	КонецЕсли;
КонецПроцедуры // УстановкаФлажкаВключитьВКнигуПродаж()

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	Стр = "";
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Стр = "Валюта договора: " + Договор.ВалютаДоговора;
			Если Договор.ОплатаДоговора = 1 Тогда
				Стр = Стр + ", валюта оплаты: рубли" + РазделительСтрок;
				Если (ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) и (ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс) Тогда
					Стр = Стр + "Суммы в документе указаны в " + Договор.ВалютаДоговора;
					
				Иначе
					Стр = Стр + "Суммы в документе указаны в рублях";
				КонецЕсли;
				
			Иначе
				Стр = Стр + ", валюта оплаты: " + Договор.ВалютаДоговора + РазделительСтрок;
				Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница Тогда
					Стр = Стр + "Суммы в документе указаны в рублях";
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//******************************************************************************
// УправлениеКурсом(ИзменитьКурс)
//
// Параметры:
//  ИзменитьКурс - Число. 1 - установить новый курс валюты, 0 - не изменять.
//
// Описание:
//  При выбранной иностранной валюте делает видимым поле "Курс" и записывает
// в него значение из справочника.
//
Процедура УправлениеКурсом(ИзменитьКурс=0)
	
	ВидимостьКурса = Договор.ВалютаДоговора.Выбран();
	Форма.ПодписьКурса.Видимость(ВидимостьКурса);
	Форма.Курс.Видимость(ВидимостьКурса);
	СтарыйКурс = ?(Курс = 0, 1, Курс);
	Если ИзменитьКурс = 1 Тогда
		Если ВидимостьКурса = 1 Тогда
			Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
			Если ДокументОснование.Выбран() = 1 Тогда
			    Если Метаданные.Документ(ДокументОснование.Вид()).РеквизитШапки("Курс").Выбран() = 1 Тогда
				    Если ДокументОснование.Курс > 0 Тогда
				        Курс = ДокументОснование.Курс;
				    КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Курс = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаДок < '01.01.2006' Тогда
		ВидимостьФлагаЗКП = 0;
	Иначе	
		ВидимостьФлагаЗКП = ?((Договор.Выбран() = 1) и (Договор.АвтоОбработкаНДС = 0), 1, 0);
		ВидимостьФлагаЗКП = ?(Аванс = 1, 1, ВидимостьФлагаЗКП);
		ВидимостьФлагаЗКП = ?(НДСпоСтавкеНольПроцентов = 1, 0, ВидимостьФлагаЗКП);
	КонецЕсли;
	Форма.ВключатьВКнигуПродаж.Видимость(ВидимостьФлагаЗКП);                    	
	
КонецПроцедуры // УправлениеКурсом()

//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()

	глПриВыбореДоговора(Контрагент, Договор, Аванс);
	УправлениеКурсом(1);
	ПроверитьДоговор();
	
	Если Договор <> ТекДоговор Тогда
		УстановкаФлажкаВключитьВКнигуПродаж();
	КонецЕсли;
	
	ТекДоговор = Договор;
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	Если Строка(Грузополучатель) = "" Тогда
		Грузополучатель = Контрагент;
	КонецЕсли;

	глПриВыбореКонтрагента(Контрагент, Договор, ДокументОснование);
	ПриВыбореДоговора();
	
КонецПроцедуры // ПриВыбореКонтрагента()

//*****************************************************************************
// ВидимостьГТД()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  1 - в табличной части документа есть импортные товары.
//  2 - в табличной части документа нет импортных товаров.
//
// Описание:
//  Определяет есть ли в табличной части документа импортные товары.
//
//Функция ВидимостьГТД()
//
//	Т = СоздатьОбъект("ТаблицаЗначений");
//	ВыгрузитьТабличнуюЧасть(Т, "Товар");
//	Т.ВыбратьСтроки();
//	Пока Т.ПолучитьСтроку() = 1 Цикл
//		Если ТипЗначенияСтр(Т.Товар) = "Справочник" Тогда
//			Если Т.Товар.Вид() = "Номенклатура" Тогда
//				Если (Т.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) и 
//					(Т.Товар.СтранаПроисхожд = 0) Тогда
//					Возврат 1;
//				КонецЕсли;
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//	
//	Возврат 0;
//	
//КонецФункции // ВидимостьГТД()

//*****************************************************************************
// ПриВыбореСчета()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Счет".
// 
// Описание:
//  Устанавливает типы субконто счета в табличной части документа и
// в определенных случаях устанавливает их значения.
//
Процедура ПриВыбореСчета()
	
	НазначитьТип("Субконто1", Счет.ВидСубконто(1));
	НазначитьТип("Субконто2", Счет.ВидСубконто(2));
	НазначитьТип("Субконто3", Счет.ВидСубконто(3));
	Если Счет = СчетПоКоду("91.2") Тогда
		Если ДокументОснование.Выбран() = 1 Тогда
			Если (ДокументОснование.Вид() = "ПередачаОС") или
				 (ДокументОснование.Вид() = "ПередачаНМА") или
				 (ДокументОснование.Вид() = "ОтпускМатериаловНаСторону") Тогда
				Субконто1 = ДокументОснование.СтатьяПрочихДоходовИРасходов;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Счет = СчетПоКоду("90.3") Тогда
		Если ТипЗначения(Товар) <> 2 Тогда
			Если (Товар.Вид() = "Номенклатура") и (Товар.Выбран() = 1) Тогда
				Субконто1 = Товар.ВидНоменклатуры;
				Если ВерсияОбъекта >= "7.70.421" Тогда
					Если СтавкаНДС.Выбран() = 1 Тогда
					    Субконто2 = СтавкаНДС;
					Иначе
						Субконто2 = Товар.СтавкаНДС.Получить(ДатаДок);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Счет = СчетПоКоду("76.2") Тогда
		Субконто1 = Контрагент;
		Субконто2 = Договор;		
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСчета()

//*****************************************************************************
// ПересчитатьПоВариантуОтпускныхЦен(Док, ОтпускнаяЦена, Количесто)
//
// Параметры:
//  Док          - Документ. Документ отгрузки.
//  ОтпускаяЦена - Число. Цена или сумма товара по документу отгрузки.
//  Количество   - Число. Количество отгружаемого товара.
//
// Возвращаемое значение:
//  Число - цена или сумма товара по счету-фактуре.
//
// Описание:
//  Пересчитывает отпускную цену расходного документа, согласно указанного 
// варианта отпускной цены.
//
Функция ПересчитатьПоВариантуОтпускныхЦен(Док, ОтпускнаяЦена, Количесто)
	
	Если (Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка) или
		 (Док.ВариантРасчетаНалогов.СуммаВключаетНДС = 0) Тогда
	    СуммаНДС = Док.НДС;
	Иначе
		СуммаНДС = 0;
	КонецЕсли;

	Если Док.ВариантРасчетаНалогов.СуммаВключаетНП = 0 Тогда
	    СуммаНП = Док.НП;
	Иначе
		СуммаНП = 0;
	КонецЕсли;
	
	Если Количество = 0 Тогда
	    Возврат 0;
		
	Иначе
	    Возврат ОтпускнаяЦена - (СуммаНДС + СуммаНП)/Количесто;
	КонецЕсли;
	
КонецФункции // ПересчитатьПоВариантуОтпускныхЦен()

//*****************************************************************************
// Заполнить(ДокОсн)
//
// Параметры:
//  ДокОсн - Документ, на основании которого будут заполнены 
//           реквизиты счета-фактуры.
//
// Описание:
//  Заполняет счет-фактуру на основании документа отгрузки или аванса.
//
Функция Заполнить(ДокОсн)
	
	СчетАкциза = 1;
	ВариантОтправки = 1;
	Грузоотправитель = ПолучитьПустоеЗначение();
	ЕстьСуммоваяРазница = 0;
	
	// Если основание - это документ отгрузки, то введем 
	// значения реквизитов счета-фактуры на основании данного документа.
	Если ДокОсн.Вид()="ПередачаОС" Тогда
		УдалитьСтроки();
		Если Константа.МетодОпределенияВыручки.Получить(ДатаДок) = глПоОтгрузке Тогда
			СчетНДС = 1;
		Иначе
			СчетНДС = 2;
		КонецЕсли;
	    Договор = ДокОсн.Договор;
		ПриВыбореДоговора();
		Грузополучатель=ДокОсн.Контрагент;
	    Контрагент=ДокОсн.Контрагент;
		Аванс = 0; 
		ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Реализация;
		
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
		    НоваяСтрока();
			НазначитьТип("Товар", "Справочник.ОсновныеСредства");
			Товар=ДокОсн.ОсновноеСредство;
			Количество=1;
			СтавкаНДС = глСтавкаНалога(ДокОсн, "НДС");
			Если (Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка) или
				 (ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0) Тогда
			    Цена = ДокОсн.Стоимость - ДокОсн.НДС - ДокОсн.НП;
			Иначе
				Цена = ДокОсн.Стоимость - ДокОсн.НП;
			КонецЕсли;
			НДС=ДокОсн.НДС;
			Сумма = Цена;
			Счет = СчетПоКоду("91.2");
			ПриВыбореСчета();
			Субконто1 = ДокОсн.СтатьяПрочихДоходовИРасходов;
		    Всего=Сумма+НДС;
		КонецЦикла;
		
	ИначеЕсли ДокОсн.Вид()="ПередачаНМА" Тогда
		УдалитьСтроки();
		Если Константа.МетодОпределенияВыручки.Получить(ДатаДок) = глПоОтгрузке Тогда
			СчетНДС = 1;
		Иначе
			СчетНДС = 2;
		КонецЕсли;
	    Договор = ДокОсн.Договор;
		ПриВыбореДоговора();
		Грузополучатель=ДокОсн.Контрагент;
	    Контрагент=ДокОсн.Контрагент;
		Аванс = 0; 
		ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Реализация;

		НоваяСтрока();
	    НазначитьТип("Товар", "Справочник.НематериальныеАктивы");
		Товар=ДокОсн.НМА;
		Количество=1;
		СтавкаНДС = глСтавкаНалога(ДокОсн, "НДС");
		Если (Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка) или
			 (ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0) Тогда
		    Цена = ДокОсн.Стоимость - ДокОсн.НДС - ДокОсн.НП;
		Иначе
			Цена = ДокОсн.Стоимость - ДокОсн.НП;
		КонецЕсли;
		Сумма = Цена;
		НДС=ДокОсн.НДС;
		Счет = СчетПоКоду("91.2");
		ПриВыбореСчета();
		Субконто1 = ДокОсн.СтатьяПрочихДоходовИРасходов;
	    Всего=Сумма+НДС;

	ИначеЕсли ДокОсн.Вид()="ОтпускМатериаловНаСторону" Тогда
		
		Если (ДокОсн.ВидОтпуска = 2) и (ДокОсн.ПоставщикуВыставляетсяСчетФактураНаВозврат = 0) Тогда
			Предупреждение("По указанному документу возврата
			|счет-фактура не выставляется.");
			Возврат 0;
		КонецЕсли;
		
		УдалитьСтроки();
		Если Константа.МетодОпределенияВыручки.Получить(ДатаДок) = глПоОтгрузке Тогда
			СчетНДС = 1;
		Иначе
			СчетНДС = 2;
		КонецЕсли;
		Договор = ДокОсн.Договор;
		ПриВыбореДоговора();
	    Грузополучатель=ДокОсн.Контрагент;
	    Контрагент=ДокОсн.Контрагент;
		Аванс = 0;

		Если (ДокОсн.ВидОтпуска = 2) и (ДокОсн.ПоставщикуВыставляетсяСчетФактураНаВозврат = 1) Тогда
		    ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Возврат;
		Иначе			
			ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Реализация;
		КонецЕсли;
			
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			НазначитьТип("Товар", "Справочник.Материалы");
			Товар=ДокОсн.Материал;
			Количество=ДокОсн.КоличествоОтпущено;
		    СтавкаНДС = глСтавкаНалога(ДокОсн, "НДС");
			Кол = ?(Количество = 0, 1, Количество);
			Если (Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка) или
				 (ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0) Тогда
				 	
				Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНП = 1 Тогда
					Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0 Тогда
					    Цена = (ДокОсн.Всего - ДокОсн.НП)/Кол;
						
					Иначе
						Цена = (ДокОсн.Всего - ДокОсн.НДС - ДокОсн.НП)/Кол;
					КонецЕсли;
					
				Иначе
					Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0 Тогда
						Цена = ДокОсн.Цена;
						
					Иначе
						Цена = (ДокОсн.Всего - ДокОсн.НДС)/Кол;
					КонецЕсли;
				КонецЕсли;
			    
				Сумма = ДокОсн.Всего - ДокОсн.НДС - ДокОсн.НП;
			Иначе
				Цена = (ДокОсн.Всего - ДокОсн.НП)/Кол;
				Сумма = ДокОсн.Всего - ДокОсн.НП;
			КонецЕсли;
			НДС=ДокОсн.НДС;			
			Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Возврат Тогда
				Счет = СчетПоКоду("76.2"); 
				ПриВыбореСчета();
			Иначе
				Счет=СчетПоКоду("91.2");
				ПриВыбореСчета();
				Субконто1 = ДокОсн.СтатьяПрочихДоходовИРасходов;
			КонецЕсли; 			                                			
		    Если Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка Тогда
			    Всего=Сумма+НДС;
			Иначе
				Всего=Сумма;
			КонецЕсли;
		КонецЦикла;
    
	ИначеЕсли (ДокОсн.Вид()="ОказаниеУслуг") или
			  (ДокОсн.Вид()="РасходнаяНакладная") или
			  (ДокОсн.Вид()="РеализацияОтгруженнойПродукции") или
		      (ДокОсн.Вид()="ВыполнениеЭтапаРабот") Тогда   
			  	
	  	Если  (ДокОсн.Вид()="РасходнаяНакладная") Тогда
	  		Если (ДокОсн.ВидОтгрузки = 13) и (ДокОсн.ПоставщикуВыставляетсяСчетФактураНаВозврат = 0) Тогда
			Предупреждение("По указанному документу возврата
							|счет-фактура не выставляется.");
	  			Возврат 0;
	  		КонецЕсли;
	  	КонецЕсли;
		
		УдалитьСтроки();
		Если Константа.МетодОпределенияВыручки.Получить(ДатаДок) = глПоОтгрузке Тогда
			СчетНДС = 1;
		Иначе
			СчетНДС = 2;
			Если ДокОсн.Вид() = "ОказаниеУслуг" Тогда
			    Если (ДокОсн.ТипУслуги = 2) и (ДокОсн.ЗачетТребований = 1) Тогда
			        СчетНДС = 1;
			    КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Договор = ДокОсн.Договор;
		ПриВыбореДоговора();
		Контрагент=ДокОсн.Контрагент;
		ТипЦен = ДокОсн.ТипЦен;
		// Заполнение грузополучателя и грузоотправителя
		Грузополучатель=ДокОсн.Контрагент;
		Если  (ДокОсн.Вид()="РасходнаяНакладная") или
			  (ДокОсн.Вид()="РеализацияОтгруженнойПродукции") Тогда
			
		  	Если ПустоеЗначение(ДокОсн.Грузополучатель) = 0 Тогда
				Грузополучатель = ДокОсн.Грузополучатель;
			КонецЕсли;
			
		  	Если ПустоеЗначение(ДокОсн.Грузоотправитель) = 0 Тогда
			    ВариантОтправки  = 0;
				Грузоотправитель = ДокОсн.Грузоотправитель;
			КонецЕсли;
			
		КонецЕсли;
			  	
		Аванс = 0;
		
		ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Реализация;
		
		Если  (ДокОсн.Вид()="РасходнаяНакладная") Тогда
			Если ДокОсн.ВидОтгрузки = 13 Тогда
				ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Возврат;				
			КонецЕсли;
		КонецЕсли;
		
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			НазначитьТип("Товар", "Справочник.Номенклатура");
			Если ( ДокОсн.Вид()="ОказаниеУслуг" ) Тогда
				Товар=ДокОсн.Услуга;
			ИначеЕсли ( ДокОсн.Вид()="ВыполнениеЭтапаРабот" ) Тогда
				Товар=ДокОсн.Работа;
			Иначе
				Товар=ДокОсн.Товар;
			КонецЕсли;
			//СтранаПроисхождения = Товар.СтранаПроисхождения;
			Количество=ДокОсн.Количество;
			СтавкаНДС = глСтавкаНалога(ДокОсн, "НДС");
			Кол = ?(Количество = 0, 1, Количество);
			Если (Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка) или
				 (ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0) Тогда
				 	
				Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНП = 1 Тогда
					Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0 Тогда
					    Цена = (ДокОсн.Всего - ДокОсн.НП)/Кол;
						
					Иначе
						Цена = (ДокОсн.Всего - ДокОсн.НДС - ДокОсн.НП)/Кол;
					КонецЕсли;
					
				Иначе
					Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 0 Тогда
						Цена = ДокОсн.Цена;
						
					Иначе
						Цена = (ДокОсн.Всего - ДокОсн.НДС)/Кол;
					КонецЕсли;
				КонецЕсли;
				
				Сумма = ДокОсн.Всего - ДокОсн.НДС - ДокОсн.НП;
			Иначе
				Цена = (ДокОсн.Всего - ДокОсн.НП)/Кол;
				Сумма = ДокОсн.Всего - ДокОсн.НП;
			КонецЕсли;
			НДС=ДокОсн.НДС; 
			Счет = СчетПоКоду("90.3");
			Если ДокОсн.Вид() = "РасходнаяНакладная" Тогда
				Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Возврат Тогда
					Счет = СчетПоКоду("76.2");
				КонецЕсли;
			КонецЕсли;			
			ПриВыбореСчета();
			Если ДокОсн.Вид() = "ОказаниеУслуг" Тогда
			    Если ДокОсн.ТипУслуги = 3 Тогда
			        Счет = СчетПоКоду("91.2");
					ПриВыбореСчета(); 
					Субконто1 = ДокОсн.СтатьяПрочихДоходовИРасходов;
			    КонецЕсли;
			КонецЕсли;
			Если Цел(СтавкаНДС.Ставка) = СтавкаНДС.Ставка Тогда
			    Всего=Сумма+НДС;
			Иначе
				Всего=Сумма;
			КонецЕсли;
    	КонецЦикла;

	// На основании документов Выписка или ПриходныйОрдер вводятся
	// счета-фактуры на аванс.
	ИначеЕсли (ДокОсн.Вид() = "Выписка") или (ДокОсн.Вид() = "ПриходныйОрдер") Тогда
		Если ДокОсн.Проведен() = 0 Тогда
		    Предупреждение("Счет-фактура на аванс вводится только
						   |на основании проведенного документа 
						   |""" + ?(ДокОсн.Вид() = "Выписка", "Выписка", 
						   		    "Приходный кассовый ордер") + """.");
			Возврат 0;
		КонецЕсли;
		
		// Если аванс проведен выпиской, то заполним реквизиты на 
		// основании операции документа.
		Опер = СоздатьОбъект("Операция");
		Если ДокОсн.Вид() = "Выписка" Тогда
			
			// Соберем проводки Выписки по полученным авансам в таблицу значений.
			Авансы = СоздатьОбъект("ТаблицаЗначений");
			Авансы.НоваяКолонка("Контрагент", "Справочник",,, "Контрагент", 20);
			Авансы.НоваяКолонка("Договор", "Справочник",,, "Договор", 12);
			Авансы.НоваяКолонка("ПервичныйДокумент",  "Строка");
			Авансы.НоваяКолонка("Сумма",,,, "Сумма аванса", 15);
			Авансы.НоваяКолонка("СуммаВВалютеДоговора", "Число");
			Авансы.НоваяКолонка("Тип",,,,"Тип записи", 21);
			Авансы.НоваяКолонка("Строка",,,,, 6);
			Авансы.НоваяКолонка("НомерСтрокиДокумента","Число");
			
			Авансы.ВидимостьКолонки("Строка",0,); 									
			Авансы.ВидимостьКолонки("ПервичныйДокумент", 0);
			Авансы.ВидимостьКолонки("СуммаВВалютеДоговора", 0);
	
			Опер.НайтиОперацию(ДокОсн);
			СписокПроводок =    "51,62.2;
								|51,62.7;
								|52,62.22;";
			Опер.ВыбратьОперацииСПроводками(ДокОсн, ДокОсн, СписокПроводок);
			Пока Опер.ПолучитьПроводку() = 1 Цикл
			    Авансы.НоваяСтрока();
				Если (Опер.Дебет.Счет = СчетПокоду("62.2")) или (Опер.Дебет.Счет = СчетПокоду("62.7")) или (Опер.Дебет.Счет = СчетПокоду("62.22")) Тогда
					Авансы.Контрагент = Опер.Дебет.Контрагенты;
					Авансы.Договор = Опер.Дебет.Договоры;
				Иначе
					Авансы.Контрагент = Опер.Кредит.Контрагенты;
					Авансы.Договор = Опер.Кредит.Договоры;
				КонецЕсли;
				
				Если (Опер.Дебет.Счет = СчетПокоду("62.7")) или (Опер.Кредит.Счет = СчетПокоду("62.7")) Тогда
					Авансы.Сумма = Опер.Сумма;
				    Авансы.СуммаВВалютеДоговора = Опер.Сумма;
					
				Иначе
					Авансы.Сумма = ?(Опер.ВалСумма=0, Опер.Сумма, Опер.ВалСумма);
					
					Если (Опер.Валюта.Выбран() = 1) и (Авансы.Договор.ВалютаДоговора <> Опер.Валюта) Тогда
						Авансы.СуммаВВалютеДоговора = Опер.Сумма;
						
					Иначе
						Авансы.СуммаВВалютеДоговора = Авансы.Сумма;
					КонецЕсли;
				КонецЕсли;
				
				Авансы.ПервичныйДокумент = СокРЛП(Опер.ПервичныйДокумент);
				Авансы.НомерСтрокиДокумента = Опер.НомерСтрокиДокумента();
				Авансы.Тип = "Аванс";
				
			КонецЦикла; 
			
			//*****************************************
			//Блок формирование списка суммовых разниц 
			Если Константа.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы.Получить(ДатаДок) = Перечисление.Булево.Да Тогда 
				
				ТаблицаОплаты = СоздатьОбъект("ТаблицаЗначений");
								
				ДокОсн.ВыгрузитьТабличнуюЧасть(ТаблицаОплаты);
				Сч62_2 = СчетПоКоду("62.2");
				Сч62_7 = СчетПоКоду("62.7");
				Сч62_22 = СчетПоКоду("62.22");
				Сч62_11 = СчетПоКоду("62.11");
				Сч62_8 = СчетПоКоду("62.8");
				
				ТаблицаОплаты.ВыбратьСтроки();
				Пока ТаблицаОплаты.ПолучитьСтроку() = 1 Цикл
					Если ТаблицаОплаты.Приход = 0 Тогда
						Продолжить;
					КонецЕсли;
					Если (ПустоеЗначение(ТаблицаОплаты.ДокументПоставки)=0) Тогда
						Если ТаблицаОплаты.ДокументПоставки.Вид() = "Счет" Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					Если (ТаблицаОплаты.КоррСчет = Сч62_2) или
					(ТаблицаОплаты.КоррСчет = Сч62_7) или
					(ТаблицаОплаты.КоррСчет = Сч62_22) или
					(ТаблицаОплаты.КоррСчет = Сч62_11) или
					(ТаблицаОплаты.КоррСчет = Сч62_8) или
					(ДокОсн.БанковскийСчет.ТипСчета = Перечисление.ТипыБанковскихСчетов.Валютный) Тогда
					ИначеЕсли (ТипЗначенияСтр(ТаблицаОплаты.Субконто1) = "Справочник") и
					(ТипЗначенияСтр(ТаблицаОплаты.Субконто2) = "Справочник") Тогда
						Если (ТаблицаОплаты.Субконто1.Вид() = "Контрагенты") и 
						(ТаблицаОплаты.Субконто2.Вид() = "Договоры") Тогда
							
							Если ТаблицаОплаты.Субконто2.Выбран() = 1 Тогда
								Если ПустоеЗначение(ТаблицаОплаты.Субконто2.ВалютаДоговора) = 0 Тогда
									Если ТаблицаОплаты.Субконто2.ОплатаДоговора = 2 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;								
							КонецЕсли;							
							
						
							Авансы.НоваяСтрока();
							Если (ПустоеЗначение(ТаблицаОплаты.ДокументПоставки)=0)и
							(ТаблицаОплаты.КурсОплаты>0)и
							(Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОтгрузке) Тогда
								Если (ТаблицаОплаты.ДокументПоставки.Курс > ТаблицаОплаты.КурсОплаты) Тогда
									Авансы.УдалитьСтроку();
									Продолжить;
								КонецЕсли;									
								Авансы.Строка = ТаблицаОплаты.НомерСтроки;
								Авансы.Контрагент = ТаблицаОплаты.Субконто1;
								Авансы.Договор = ТаблицаОплаты.Субконто2;
								Авансы.Тип = "Суммовая разница";
								Авансы.Сумма = "(расчет)";
								Авансы.ПервичныйДокумент = СокРЛП(Опер.ПервичныйДокумент);
							Иначе
								Авансы.УдалитьСтроку();
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;									
			КонецЕсли;
			
			Аналитика91 = ОпределитьСтатьюПрочихДоходовИРасходов();
			
			//*****************************************
			
	
			Если Авансы.КоличествоСтрок() = 0  Тогда
				Если Константа.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы.Получить(ДатаДок) = Перечисление.Булево.Да Тогда 
					Предупреждение("Документ "+глПредставлениеДокумента(ДокОсн)+"
					|не содержит авансов и положительных суммовых разниц,
					|по расчетам с покупателями.");
					Возврат 0;
				Иначе
					Предупреждение("Документ "+глПредставлениеДокумента(ДокОсн)+"
					|не содержит авансов.");
					Возврат 0;
				КонецЕсли;
				
			// Если Выпиской проведено более одного аванса, предложим
			// пользователю выбрать один их них.
			ИначеЕсли Авансы.КоличествоСтрок() = 1 Тогда
				Стр = 1;
			Иначе
				Стр = 0;
				Если Авансы.ВыбратьСтроку(Стр, "Выберите контрагента документа оплаты") = 0 Тогда
					Возврат 0;
				КонецЕсли;
				Если Стр = 0 Тогда
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
			
			// Введем значения реквизитов счета-фактуры на основании
			// выбранного аванса.
			УдалитьСтроки();
			Авансы.ПолучитьСтрокуПоНомеру(Стр);                     
			Если СокрЛП(Авансы.Тип) = "Аванс" Тогда
				Аванс = 1; 
				ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс;
				СуммаНДСопределяетсяРасчетнымМетодом = 1;
				Авансы.ПолучитьСтрокуПоНомеру(Стр);
				Контрагент = Авансы.Контрагент;
				Договор = Авансы.Договор;
				ПриВыбореДоговора();
				
				// Заполнение реквизитов платежно-расчетного документа
				ПлатежныйДокумент = Авансы.ПервичныйДокумент;
				ПозицияНомера = Найти(ПлатежныйДокумент,"№");
				НомерПлатРасчДок  = СокрЛП(Сред(ПлатежныйДокумент,(ПозицияНомера + 1), СтрДлина(ПлатежныйДокумент) - ПозицияНомера));
				ДатаПлатРасчДок   = Дата(Лев(ПлатежныйДокумент, (ПозицияНомера - 2)));
				
				ЗаполнятьПоСчету = 0;
				ДокОсн.ПолучитьСтрокуПоНомеру(Авансы.НомерСтрокиДокумента);
				Если ПустоеЗначение(ДокОсн.ДокументПоставки) = 0 Тогда
					Если ДокОсн.ДокументПоставки.Вид() = "Счет" Тогда
						ЗаполнятьПоСчету = 1;
					КонецЕсли;
				КонецЕсли;
				
				Если (ДатаДок >= '01.01.2009') И (ЗаполнятьПоСчету = 1) Тогда
										
					СтавкиНДС = СоздатьОбъект("Справочник.СтавкиНДС");
					СтавкиНДС.ВыбратьЭлементы();
					Пока СтавкиНДС.ПолучитьЭлемент() = 1 Цикл
						Если СтавкиНДС.Ставка = 18 Тогда
							Ставка20 = СтавкиНДС.ТекущийЭлемент();
						ИначеЕсли СтавкиНДС.Ставка = 10 Тогда
							Ставка10 = СтавкиНДС.ТекущийЭлемент();
						ИначеЕсли СтавкиНДС.Ставка = 0 Тогда
							СтавкаБезНДС = СтавкиНДС.ТекущийЭлемент();
						КонецЕсли;
					КонецЦикла;
										
					ДокументСчет = ДокОсн.ДокументПоставки.ТекущийДокумент();
					
					КоэффициентАванса = Авансы.СуммаВВалютеДоговора/ДокументСчет.Итог("Всего");
					
					ДокументСчет.ВыбратьСтроки();
					Пока ДокументСчет.ПолучитьСтроку() = 1 Цикл
						НоваяСтрока();
						НазначитьТип("Товар", "Справочник.Номенклатура");
						Товар = ДокументСчет.Товар;
						СтранаПроисхождения = "";
						ГТД = "";
						Всего = ДокументСчет.Всего*КоэффициентАванса;						
						НДС = ДокументСчет.НДС*КоэффициентАванса;
						Сумма = ДокументСчет.Всего*КоэффициентАванса;
						Цена = ДокументСчет.Всего*КоэффициентАванса;
						
						СтавкаНДС = "";
						Если (Всего - НДС) <> 0 Тогда
							РасчСтавкаНДС = НДС / (Всего - НДС) * 100;
							Если РасчСтавкаНДС > 10.5 Тогда
								СтавкаНДС = Ставка20;
							ИначеЕсли РасчСтавкаНДС > 0 Тогда
								СтавкаНДС = Ставка10;
							ИначеЕсли РасчСтавкаНДС = 0 Тогда
								СтавкаНДС = СтавкаБезНДС;
							КонецЕсли;
						КонецЕсли;
						СтавкаНДС = ?(ПустоеЗначение(СтавкаНДС) = 0, СтавкаНДС, глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС"));
						
						Если ДокументСчет.НомерСтроки = ДокументСчет.КоличествоСтрок() Тогда
							Если Итог("Всего") <> Авансы.СуммаВВалютеДоговора Тогда
								Разница = Итог("Всего") - Авансы.СуммаВВалютеДоговора;
								Всего = Всего - Разница;						
								НДС = НДС - Разница;						
								Сумма = Сумма - Разница;						
								Цена = Цена - Разница;						
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					НоваяСтрока();
					НазначитьТип("Товар", "Строка", 22);
					Товар = ?(ДатаДок < '01.01.2006', "Аванс (предв. оплата)", "Предварительная оплата");
					СтранаПроисхождения = "";
					ГТД = "";
					Всего = Авансы.СуммаВВалютеДоговора;
					СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
					НДС = Окр(Авансы.СуммаВВалютеДоговора*глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС").Ставка/(100+глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС").Ставка) ,2,1);
					Сумма = Всего;
					Цена = Всего;
				КонецЕсли;
			ИначеЕсли ПустоеЗначение(СокрЛП(Авансы.Тип)) = 0 Тогда
				ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница;
				ТаблицаОплаты.ПолучитьСтрокуПоНомеру(Авансы.Строка);
				КоличествоСчетовФактур = 0;
				СФНайденный = "";
				СчетФактура = СоздатьОбъект("Документ");
				СчетФактура.ВыбратьПодчиненныеДокументы(,,ТаблицаОплаты.ДокументПоставки);
				Пока СчетФактура.ПолучитьДокумент() = 1 Цикл
					Если (СчетФактура.ПометкаУдаления() = 0) и (СчетФактура.Вид() = "СчетФактура") Тогда
						СФНайденный = СчетФактура.ТекущийДокумент();
						КоличествоСчетовФактур = КоличествоСчетовФактур + 1;
					КонецЕсли;
				КонецЦикла;
				Если КоличествоСчетовФактур = 0 Тогда
					Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаОплаты.ДокументПоставки) + " не выписан счет-фактура");					
					Возврат(0);
					
				ИначеЕсли КоличествоСчетовФактур > 1 Тогда
					Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаОплаты.ДокументПоставки) + " обнаружено более 
					|одного счет-фактуры");
					Возврат(0);
					
				Иначе   					
					СуммаНДСопределяетсяРасчетнымМетодом = 1;										
					Кратность = ТаблицаОплаты.ДокументПоставки.Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
					Кратность = ?(Кратность = 0, 1, Кратность);
					Контрагент = Авансы.Контрагент;
					Договор = Авансы.Договор;
					ПриВыбореДоговора();     
					Курс = ТаблицаОплаты.КурсОплаты;	
					
					СуммаОтгрузкиВсего = ТаблицаОплаты.ДокументПоставки.Итог("Всего")*Курс/Кратность;
					Если СуммаОтгрузкиВсего = 0 Тогда
					Иначе					
						КоэффициентЧастичнойОплаты = МИН(ТаблицаОплаты.Приход,СуммаОтгрузкиВсего)/СуммаОтгрузкиВсего;
						КурсОтгр = ТаблицаОплаты.ДокументПоставки.Курс;
						КратностьОтгр = ТаблицаОплаты.ДокументПоставки.Договор.ВалютаДоговора.Кратность.Получить(ТаблицаОплаты.ДокументПоставки.ДатаДок);
						КратностьОтгр = ?(КратностьОтгр = 0, 1, КратностьОтгр);  
						// Заполнение реквизитов платежно-расчетного документа
						ПлатежныйДокумент = Авансы.ПервичныйДокумент;
						ПозицияНомера = Найти(ПлатежныйДокумент,"№");
						НомерПлатРасчДок  = СокрЛП(Сред(ПлатежныйДокумент,(ПозицияНомера + 1), СтрДлина(ПлатежныйДокумент) - ПозицияНомера));
						ДатаПлатРасчДок   = Дата(Лев(ПлатежныйДокумент, (ПозицияНомера - 2)));
																		
						ТаблицаСчетаФактуры = СоздатьОбъект("ТаблицаЗначений");
						СФНайденный.ВыгрузитьТабличнуюЧасть(ТаблицаСчетаФактуры);
						ТаблицаСчетаФактуры.Свернуть("СтавкаНДС", "Сумма,НДС,Всего");
						ТаблицаСчетаФактуры.ВыбратьСтроки();
						
						Пока ТаблицаСчетаФактуры.ПолучитьСтроку() = 1 Цикл						
							НоваяСтрока();
							НазначитьТип("Товар", "Строка", 22);
							Товар = "Суммовая разница";
							СтранаПроисхождения = "";
							ГТД = "";
							Всего = 
							КоэффициентЧастичнойОплаты *
							(Курс/Кратность - КурсОтгр/КратностьОтгр)*
							ТаблицаСчетаФактуры.Всего;
							НДС   = 
							КоэффициентЧастичнойОплаты*
							(Курс/Кратность - КурсОтгр/КратностьОтгр)*
							ТаблицаСчетаФактуры.НДС;
							Сумма = 
							КоэффициентЧастичнойОплаты*
							(Курс/Кратность - КурсОтгр/КратностьОтгр)*
							ТаблицаСчетаФактуры.Сумма;
							СтавкаНДС = ТаблицаСчетаФактуры.СтавкаНДС;
							Цена = Всего;
							Счет = СчетПоКоду("91.2");
							ПриВыбореСчета(); 
							Субконто1 = Аналитика91;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			// Введем значения реквизитов счета-фактуры на основании
			// аванса, проведенного ПКО. 
			//*****************************************
			//Блок формирование списка суммовых разниц 
			Если Константа.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы.Получить(ДатаДок) = Перечисление.Булево.Да Тогда 
				
				ДокументВВалюте = 0;
				ЕстьСуммоваяРазница = 0;
				
				Сч62_2 = СчетПоКоду("62.2");
				Сч62_7 = СчетПоКоду("62.7");
				Сч62_22 = СчетПоКоду("62.22");
				Сч62_11 = СчетПоКоду("62.11");
				
				Если (ДокОсн.КоррСчет = Сч62_2) или
				(ДокОсн.КоррСчет = Сч62_7) или
				(ДокОсн.КоррСчет = Сч62_11) или
				(ДокОсн.КоррСчет = Сч62_22) или
				(ДокОсн.Валютный = 2) Тогда
				ИначеЕсли (ТипЗначенияСтр(ДокОсн.Субконто1) = "Справочник") и
				(ТипЗначенияСтр(ДокОсн.Субконто2) = "Справочник") Тогда
					Если (ДокОсн.Субконто1.Вид() = "Контрагенты") и 
					(ДокОсн.Субконто2.Вид() = "Договоры") Тогда							
						
						Если ДокОсн.Субконто2.Выбран() = 1 Тогда
							Если ПустоеЗначение(ДокОсн.Субконто2.ВалютаДоговора) = 0 Тогда
								Если ДокОсн.Субконто2.ОплатаДоговора = 2 Тогда
									ДокументВВалюте = 1;
									ЕстьСуммоваяРазница = 0;
								КонецЕсли;
							КонецЕсли;								
						КонецЕсли;							
						
						Если ДокументВВалюте = 0 Тогда
							Если (ПустоеЗначение(ДокОсн.ДокументПоставки)=0)и
							(ДокОсн.КурсОплаты>0)и
							(Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОтгрузке) Тогда
								Если (ДокОсн.ДокументПоставки.Курс > ДокОсн.КурсОплаты) Тогда
									ЕстьСуммоваяРазница = 0;
								КонецЕсли;
								ЕстьСуммоваяРазница = 1;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если (ПустоеЗначение(ДокОсн.ДокументПоставки)=0) Тогда
					Если ДокОсн.ДокументПоставки.Вид() = "Счет" Тогда
						ЕстьСуммоваяРазница = 0;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			Аналитика91 = ОпределитьСтатьюПрочихДоходовИРасходов();
			
			//*****************************************
	
			Если Константа.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы.Получить(ДатаДок) = Перечисление.Булево.Да Тогда 
				Если ((ДокОсн.КоррСчет <> СчетПоКоду("62.2")) и (ДокОсн.КоррСчет <> СчетПоКоду("62.7")) и (ДокОсн.КоррСчет <> СчетПоКоду("62.22"))) и (ЕстьСуммоваяРазница = 0) Тогда
					Предупреждение("Документ "+глПредставлениеДокумента(ДокОсн)+"
					|не содержит авансов и положительных суммовых разниц,
					|по расчетам с покупателями.");
					Возврат 0;
				КонецЕсли;
			Иначе
				Если ((ДокОсн.КоррСчет <> СчетПоКоду("62.2")) и (ДокОсн.КоррСчет <> СчетПоКоду("62.7")) и (ДокОсн.КоррСчет <> СчетПоКоду("62.22"))) Тогда
					Предупреждение("Документ "+глПредставлениеДокумента(ДокОсн)+"
					|не содержит авансов.");
					Возврат 0;
				КонецЕсли;
			КонецЕсли; 
			
			УдалитьСтроки();
			Если ЕстьСуммоваяРазница = 0 Тогда
				Аванс = 1;
				ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс;
				Контрагент = ДокОсн.Субконто1;
				Договор = ДокОсн.Субконто2;
				ПриВыбореДоговора();
				СуммаНДСопределяетсяРасчетнымМетодом = 1;
				СуммаДокументаОснования = ДокОсн.Сумма - ДокОсн.НП;
				Если (ДокОсн.Валюта.Выбран() = 1) и (Договор.ВалютаДоговора <> ДокОсн.Валюта) Тогда
					КурсПересчета = ДокОсн.Валюта.Курс.Получить(ДокОсн.ДатаДок);
					Кратность = ДокОсн.Валюта.Кратность.Получить(ДокОсн.ДатаДок);
					Кратность = ?(Кратность = 0, 1, Кратность);
					СуммаВВалютеДоговора = СуммаДокументаОснования * КурсПересчета / Кратность;	
					
				Иначе
					СуммаВВалютеДоговора = СуммаДокументаОснования;
				КонецЕсли;
				
				ЗаполнятьПоСчету = 0;
				Если ПустоеЗначение(ДокОсн.ДокументПоставки) = 0 Тогда
					Если ДокОсн.ДокументПоставки.Вид() = "Счет" Тогда
						ЗаполнятьПоСчету = 1;
					КонецЕсли;
				КонецЕсли;
				
				Если (ДатаДок >= '01.01.2009') И (ЗаполнятьПоСчету = 1) Тогда
					
					СтавкиНДС = СоздатьОбъект("Справочник.СтавкиНДС");
					СтавкиНДС.ВыбратьЭлементы();
					Пока СтавкиНДС.ПолучитьЭлемент() = 1 Цикл
						Если СтавкиНДС.Ставка = 18 Тогда
							Ставка20 = СтавкиНДС.ТекущийЭлемент();
						ИначеЕсли СтавкиНДС.Ставка = 10 Тогда
							Ставка10 = СтавкиНДС.ТекущийЭлемент();
						ИначеЕсли СтавкиНДС.Ставка = 0 Тогда
							СтавкаБезНДС = СтавкиНДС.ТекущийЭлемент();
						КонецЕсли;
					КонецЦикла;
					
					ДокументСчет = ДокОсн.ДокументПоставки.ТекущийДокумент();
					
					КоэффициентАванса = СуммаВВалютеДоговора/ДокументСчет.Итог("Всего");
					
					ДокументСчет.ВыбратьСтроки();
					Пока ДокументСчет.ПолучитьСтроку() = 1 Цикл
						НоваяСтрока();
						НазначитьТип("Товар", "Справочник.Номенклатура");
						Товар = ДокументСчет.Товар;
						СтранаПроисхождения = "";
						ГТД = "";
						Всего = ДокументСчет.Всего*КоэффициентАванса;						
						НДС = ДокументСчет.НДС*КоэффициентАванса;
						Сумма = ДокументСчет.Всего*КоэффициентАванса;
						Цена = ДокументСчет.Всего*КоэффициентАванса;
						
						СтавкаНДС = "";
						Если (Всего - НДС) <> 0 Тогда
							РасчСтавкаНДС = НДС / (Всего - НДС) * 100;
							Если РасчСтавкаНДС > 10.5 Тогда
								СтавкаНДС = Ставка20;
							ИначеЕсли РасчСтавкаНДС > 0 Тогда
								СтавкаНДС = Ставка10;
							ИначеЕсли РасчСтавкаНДС = 0 Тогда
								СтавкаНДС = СтавкаБезНДС;
							КонецЕсли;
						КонецЕсли;
						СтавкаНДС = ?(ПустоеЗначение(СтавкаНДС) = 0, СтавкаНДС, глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС"));
						
						Если ДокументСчет.НомерСтроки = ДокументСчет.КоличествоСтрок() Тогда
							Если Итог("Всего") <> СуммаВВалютеДоговора Тогда
								Разница = Итог("Всего") - СуммаВВалютеДоговора;
								Всего = Всего - Разница;						
								НДС = НДС - Разница;						
								Сумма = Сумма - Разница;						
								Цена = Цена - Разница;						
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе 
					
					НоваяСтрока();
					НазначитьТип("Товар", "Строка", 22);
					Товар = ?(ДатаДок < '01.01.2006', "Аванс (предв. оплата)", "Предварительная оплата");
					СтранаПроисхождения = "";
					ГТД = "";
					Всего = СуммаВВалютеДоговора;
					Сумма = СуммаВВалютеДоговора;
					СтавкаНДС = ДокОсн.СтавкаНДС;
					НДС = Окр(Всего*ДокОсн.СтавкаНДС.Ставка/(100+ДокОсн.СтавкаНДС.Ставка),2,1);
					Цена = Всего;
				КонецЕсли;
			Иначе 
				ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница;
				КоличествоСчетовФактур = 0;
				СФНайденный = "";
				СчетФактура = СоздатьОбъект("Документ");
				СчетФактура.ВыбратьПодчиненныеДокументы(,,ДокОсн.ДокументПоставки);
				Пока СчетФактура.ПолучитьДокумент() = 1 Цикл
					Если (СчетФактура.ПометкаУдаления() = 0) и (СчетФактура.Вид() = "СчетФактура") Тогда
						СФНайденный = СчетФактура.ТекущийДокумент();
						КоличествоСчетовФактур = КоличествоСчетовФактур + 1;
					КонецЕсли;
				КонецЦикла;
				Если КоличествоСчетовФактур = 0 Тогда
					Предупреждение("По документу " + глПредставлениеДокумента(ДокОсн.ДокументПоставки) + " не выписан счет-фактура");					
					Возврат(0);
					
				ИначеЕсли КоличествоСчетовФактур > 1 Тогда
					Предупреждение("По документу " + глПредставлениеДокумента(ДокОсн.ДокументПоставки) + " обнаружено более 
					|одного счет-фактуры");
					Возврат(0);
					
				Иначе   					
					СуммаНДСопределяетсяРасчетнымМетодом = 1;					
					Курс = ДокОсн.КурсОплаты;	
					Кратность = ДокОсн.ДокументПоставки.Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
					Кратность = ?(Кратность = 0, 1, Кратность);
					Контрагент = ДокОсн.Субконто1;
					Договор = ДокОсн.Субконто2;
					ПриВыбореДоговора();
					
					СуммаОтгрузкиВсего = ДокОсн.ДокументПоставки.Итог("Всего")*Курс/Кратность;
					Если СуммаОтгрузкиВсего = 0 Тогда
					Иначе					
						КоэффициентЧастичнойОплаты = МИН(ДокОсн.Сумма,СуммаОтгрузкиВсего)/СуммаОтгрузкиВсего;
						КурсОтгр = ДокОсн.ДокументПоставки.Курс;
						КратностьОтгр = ДокОсн.ДокументПоставки.Договор.ВалютаДоговора.Кратность.Получить(ДокОсн.ДокументПоставки.ДатаДок);
						КратностьОтгр = ?(КратностьОтгр = 0, 1, КратностьОтгр);  						
						НомерПлатРасчДок  = ДокОсн.НомерДок;
						ДатаПлатРасчДок   = ДокОсн.ДатаДок;
						
						ТаблицаСчетаФактуры = СоздатьОбъект("ТаблицаЗначений");
						СФНайденный.ВыгрузитьТабличнуюЧасть(ТаблицаСчетаФактуры);
						ТаблицаСчетаФактуры.Свернуть("СтавкаНДС", "Сумма,НДС,Всего");
						ТаблицаСчетаФактуры.ВыбратьСтроки();
						
						Пока ТаблицаСчетаФактуры.ПолучитьСтроку() = 1 Цикл						
							НоваяСтрока();
							НазначитьТип("Товар", "Строка", 22);
							Товар = "Суммовая разница";
							СтранаПроисхождения = "";
							ГТД = "";
							Всего = 
							КоэффициентЧастичнойОплаты *
							(Курс/Кратность - КурсОтгр/КратностьОтгр)*
							ТаблицаСчетаФактуры.Всего;						
							СтавкаНДС = ТаблицаСчетаФактуры.СтавкаНДС;
							
							НДС   = 
							КоэффициентЧастичнойОплаты*
							(Курс/Кратность - КурсОтгр/КратностьОтгр)*
							ТаблицаСчетаФактуры.НДС;
							Сумма = Всего;
							Цена = Всего;
							Счет = СчетПоКоду("91.2");
							ПриВыбореСчета(); 
							Субконто1 = Аналитика91;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		НДСпоСтавкеНольПроцентов = 0;
		СчетНДС = 1;
		ОтключитьНП = 1;
		ОтключитьАкциз = 1;
		ДатаОплаты = ?(СокрЛП(ДатаОплаты) = "", Формат(ДокОсн.ДатаДок, "Д"), ДатаОплаты);
		
	КонецЕсли;
	
	ДокументОснование = ДокОсн;
	ПриИзмененииДаты();
	
	Возврат 1;
	
КонецФункции // Заполнить()

//*****************************************************************************
// ОтключитьУправлениеСчетами()
//
// Вызывается из формул элементов диалога:
//  Флаг ОтключитьНДС,
//  Флаг ОтключитьАкциз.
//
// Описание:
//  Делает недоступными для редактирования переключатели, управляющие выбором
// счета расчетов по НДС и акцизу.
//
Процедура ОтключитьУправлениеСчетами()
	
	Форма.ОтключитьАкциз.Доступность(1-Аванс);
	Форма.СчетНДС.Доступность(Мин(1-ОтключитьНДС, 1-Аванс));
	Форма.СчетАкциза.Доступность(Мин(1-ОтключитьАкциз, 1-Аванс));
	Форма.клСчетНДС.Доступность(Мин(1-ОтключитьНДС, 1-Аванс));
	Форма.клСчетАкциза.Доступность(Мин(1-ОтключитьАкциз, 1-Аванс));
	
КонецПроцедуры // ОтключитьУправлениеСчетами()

//*****************************************************************************
// УправлениеДиалогом(УстановитьРеквизиты)
//
// Параметры:
//  УстановитьРеквизиты - Число. 1 - изменить реквизиты документа. 
//								 0 - не изменять.
//
// Вызывается из формул элементов диалога:
//  Флаг "Счет-фактура на аванс",
//  Поле ввода "Документ основание".
//
// Описание:
//  Делает недоступными для редактирования переключатели, управляющие выбором
// счета расчетов по НДС и акцизу. Удаляет закладку, на которой выполняется
// выбор ГТД и корреспондирующего счета.
//
Процедура УправлениеДиалогом(УстановитьРеквизиты=0)
	
	Форма.Закладки.УдалитьВсе();
	Форма.Закладки.ДобавитьЗначение(1, "Шапка");
	Форма.Закладки.ДобавитьЗначение(2, "Табличная часть");
	Если (Аванс = 0) Тогда
		Форма.Закладки.ДобавитьЗначение(3, "Корр. счет и номер ГТД");
	КонецЕсли;
	Форма.ИспользоватьСлой("Основной, Шапка", 2);
	
	// Форма.Грузоотправитель.Видимость(?(ВариантОтправки=1,0,1));
	Форма.ИспользоватьСлой("Грузоотправитель", ?(ВариантОтправки=1,0,1));
	Форма.кнПодбор.Видимость(0);
	
	УправлениеКурсом(УстановитьРеквизиты);

	Если УстановитьРеквизиты = 1 Тогда
		СчетНДС = ?(Аванс=1, 1, СчетНДС);
		СуммаНДСопределяетсяРасчетнымМетодом = ?((ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс) или (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница), 1, 0);
		ОтключитьАкциз = ?((ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс) или (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница), 1, 0);
		УстановкаФлажкаВключитьВКнигуПродаж();
	КонецЕсли;
	
	ОтключитьУправлениеСчетами();
	Позиция = Форма.Закладки.НайтиЗначение(3);
	Если Аванс = 1 Тогда
		Если Позиция > 0 Тогда
			Форма.Закладки.УдалитьЗначение(3);
		КонецЕсли;
		
	Иначе
		Если Позиция = 0 Тогда
			Форма.Закладки.ДобавитьЗначение(3, "Корр. счет и номер ГТД");
		КонецЕсли;
		
		глПриВыбореДоговора(Контрагент, Договор, Аванс);
	КонецЕсли;
	
	Если ВерсияОбъекта < "7.70.421" Тогда
	    Форма.Закладки.ДобавитьЗначение(4, "Дополнительно");
	КонецЕсли;
	
КонецПроцедуры // УправлениеДиалогом()

//*****************************************************************************
// ЗаполнитьНаОсновании(ДокОсн)
//
// Параметры:
//  ДокОсн - Документ. Документ-основание.
//
// Возвращаемое значение:
//  Число  - 1 - реквизиты заполнены, 0 - не заполнены.
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаЗаполнить".
//
// Описание:
//  Устанавливает значения реквизитов документа в зависимости от значений
// реквизитов документа основания.
//
Функция ЗаполнитьНаОсновании(ДокОсн="")
	
	Если ДокОсн = "" Тогда
	    ДокОсн = ДокументОснование;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокОсн) = 1 Тогда
	    Предупреждение("Выберите документ-основание!");
		Возврат 0;
	КонецЕсли;
	
	Если Вопрос("Счет-фактура будет заполнен на основании
				|выбранного документа. Продолжить?", "Да+Нет" ) = "Да" Тогда
		Док = СоздатьОбъект("Документ");
		Док.НайтиДокумент(ДокОсн);
	    Если Заполнить(Док.ТекущийДокумент()) = 1 Тогда
			ПриВыбореСтавкеНольПроцентов();
	        УправлениеДиалогом(1);
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции // ЗаполнитьНаОсновании()

//*****************************************************************************
// ПересчетСуммыНДСиСуммыВсего()
//
Процедура ПересчетСуммыНДСиСуммыВсего()
	
	Если НДСпоСтавкеНольПроцентов = 0 Тогда
	    СтНДС = СтавкаНДС.Ставка;
		Если (СуммаНДСопределяетсяРасчетнымМетодом = 0) и ((СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0)) Тогда
			НДС = Окр(Сумма * СтНДС / 100, 2, 1);
			Всего = Сумма + НДС;
			
		ИначеЕсли СуммаНДСопределяетсяРасчетнымМетодом = 1 Тогда
			НДС = Окр(Сумма * СтНДС / (100 + СтНДС), 2, 1);
			Всего = Сумма;
			
		Иначе
			НДС = Окр(Сумма * СтНДС / 100, 2, 1);
			Всего = Сумма;
		КонецЕсли;
		
	Иначе
		НДС = 0;
		Всего = Сумма;
	КонецЕсли;
	
КонецПроцедуры // ПересчетСуммыНДСиСуммыВсего()

//*****************************************************************************
// Пересчет(Подбор)
//
// Параметры:
//  Подбор - Число. 0 - строка редактируется в документе, 1 - строка 
//           добавлена из подбора.
//
// Описание:
//  При изменении какого-либо реквизита табличной части рассчитывает значения
// численных реквизитов табличной части.
//
Процедура Пересчет(ИмяРеквизита="",Подбор=0)
	
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;
	
	Если ((ИмяРеквизита = "Товар") или (Подбор = 1)) Тогда
		Если ТипЗначения(Товар) = 2 Тогда // аванс
			Возврат;	
		ИначеЕсли Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// По умолчанию количество ставим равным 1
		Количество = ?(Количество=0,1,Количество);
		Если Товар.Вид() = "Номенклатура" Тогда
			Счет = СчетПоКоду("90.3"); // укажем корреспондирующий счет
			ПриВыбореСчета();
            
			// Получим ставку НДС.
			Если (Товар.СтавкаНДС.Получить(ДатаДок).Выбран() = 1) Тогда
				СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
				СтавкаНП = Товар.СтавкаНП.Получить(ДатаДок);
			КонецЕсли;
			СтНДС = СтавкаНДС.Ставка;
			СтНП = СтавкаНП.Ставка;
			
			// Рассчитаем учетную цену по справочнику "Номенклатура" в рублях.
			Цена = глПолучитьЦену(Контекст,Товар,ТипЦен,ДатаДок,Договор.ВалютаДоговора);
			Если Количество <> 0 Тогда
				Сумма = Окр(?(Количество=0,1,Количество)*Цена,2,1);
			КонецЕсли;
			
		Иначе // ОС, НМА, материалы
			
			Счет = СчетПоКоду("91.2");
			ПриВыбореСчета();
			СтранаПроисхождения = "";
			ГТД = "";
			СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
			// Цену реализации мы не знаем.
		КонецЕсли;
		
		ПересчетСуммыНДСиСуммыВсего();
		
	ИначеЕсли (ИмяРеквизита = "Количество") или (ИмяРеквизита = "Цена") Тогда
		Сумма = Окр(?(Количество=0,1,Количество)*Цена,2,1);
		ПересчетСуммыНДСиСуммыВсего();

	ИначеЕсли ИмяРеквизита = "Сумма" Тогда
		Цена  = Окр(Сумма/?(Количество=0,1,Количество),2,1);
		ПересчетСуммыНДСиСуммыВсего();
		
	ИначеЕсли ИмяРеквизита = "СтавкаНДС" Тогда
		Если Счет = СчетПоКоду("90.3") Тогда
			Если ВерсияОбъекта >= "7.70.421" Тогда
		    	Субконто2 = СтавкаНДС;
			КонецЕсли;
		КонецЕсли;
		ПересчетСуммыНДСиСуммыВсего();
	
	ИначеЕсли ИмяРеквизита = "НДС" Тогда
		СтНДС = СтавкаНДС.Ставка;
	    Если (СуммаНДСопределяетсяРасчетнымМетодом = 0) и ((СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0)) Тогда
			Всего = Сумма + НДС;
			
		Иначе
			Всего = Сумма;
		КонецЕсли;
	КонецЕсли;

	Если (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) или (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс) Тогда
		Количество = 0;
		Цена = Сумма;
		Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница Тогда
			Если ИмяРеквизита <> "Сумма" Тогда
				Сумма = Всего - НДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Пересчет()

//******************************************************************************
Процедура ПересчитатьЦены()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Пересчет("Товар",1);
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************   
// ПриВыбореТипаЦен()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Тип цен"
// 
// Описание:
//  Проверяет соответствие типа цен.
//
Процедура ПриВыбореТипаЦен()
	Если (Аванс = 1) Тогда
	    Возврат;
	Иначе
		ВыбратьСтроки();
		ЕстьТовар = 0;
		Пока ПолучитьСтроку() = 1 Цикл
		    Если ТипЗначенияСтр(Товар) = "Справочник" Тогда
				Если Товар.Вид() = "Номенклатура" Тогда
				    ЕстьТовар = 1;
					Прервать;
				КонецЕсли;
		    КонецЕсли;
		КонецЦикла;
		Если ЕстьТовар = 0 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	Если (ТипЦен.Выбран()=1)и(КоличествоСтрок()>0) Тогда
		Если Вопрос("Перезаполнить цены номенклатуры в документе?","Да+Нет",60) = "Да" Тогда
			ПересчитатьЦены();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////*****************************************************************************
//
Процедура ПриИзмененииВариантаРасчетаНалогов()
	Ответ = Вопрос("Пересчитать суммы в существующих строках
	|табличной части (суммы будут обновлены
	|в соответствии с выбранным вариантом)?", "Да+Нет+Отмена");
	Если Ответ = "Да" Тогда
		ОбщееКоличество = КоличествоСтрок();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			//Пересчет("Сумма");
			Если СуммаНДСопределяетсяРасчетнымМетодом = 1 Тогда
			    Сумма = Всего;
				Цена  = Окр(Сумма/?(Количество=0,1,Количество),2,1);
			Иначе
				Сумма = Всего - НДС;
				Цена  = Окр(Сумма/?(Количество=0,1,Количество),2,1);
			КонецЕсли;
			Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
		КонецЦикла;
		
	ИначеЕсли Ответ = "Отмена" Тогда
		СуммаНДСопределяетсяРасчетнымМетодом = ?(СуммаНДСопределяетсяРасчетнымМетодом = 0, 1, 0);
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************   
// ПроверитьДоговор()
//
Процедура ПроверитьДоговор()
	
	
	СтараяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	НоваяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");;
	НовыйКурс = ?(Курс = 0, 1, Курс);
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;  
	
	Если ПустоеЗначение(СтарыйДоговор) = 1 Тогда
		СтараяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Иначе
		СтараяВалюта = СтарыйДоговор.ВалютаДоговора;
	КонецЕсли;
	
	Если ПустоеЗначение(Договор) = 1 Тогда
		НоваяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Иначе
		НоваяВалюта = Договор.ВалютаДоговора;
	КонецЕсли;
	
	Если СтараяВалюта <> НоваяВалюта Тогда
		Если Вопрос("Изменена валюта договора."+РазделительСтрок+"Пересчитать цены в документе?","Да+Нет",30) = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Цена = глПересчет(Цена,СтараяВалюта,СтарыйКурс,НоваяВалюта,НовыйКурс);
				Пересчет("Цена");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует текстовую строку, содержащую итоговые суммы колонок табличной 
// части документа.
//
Функция ИтоговаяСтрока()
	
	ИтСтр = "Сумма: " + СокрЛ(ФорматС(Итог("Сумма")));
	ИтСтр = ?(Итог("АкцизСумма") = 0, ИтСтр, ИтСтр + ", в т.ч. акциз: " + СокрЛ(ФорматС(Итог("АкцизСумма"))));
	ИтСтр = ?(Итог("НДС") = 0, ИтСтр, ИтСтр + ", Сумма НДС: " + СокрЛ(ФорматС(Итог("НДС"))));
	ИтСтр = ИтСтр + ", Всего: " + СокрЛ(ФорматС(Итог("Всего")));

	Возврат ИтСтр;
	
КонецФункции // ИтоговаяСтрока()

//*****************************************************************************
// Печать()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Печать".
//
// Описание:
//  Формирует и таблицу печатной формы документа.
//
Процедура Печать()

	НомерДокПечатнойФормы = глПреобразоватьНомерДок(НомерДок, 0, 0);

	// В зависимости от даты документа используются разные шаблоны печатной формы.
	// При наличии в каталоге информационной базы файла с именем
	// "ExtForms\PrnForms\1cbsf*.mxl", будет использоваться шаблон печатной формы
	// размещенный в данном файле.
	Таб = СоздатьОбъект("Таблица");
	Если ДатаДок >= '26.05.2009' Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ() + "ExtForms\PrnForms\1cbsf451.mxl";
	    ИмяТаблицы = "СФ451";
	ИначеЕсли ДатаДок >= '30.05.2006' Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ() + "ExtForms\PrnForms\1csf283_.mxl";
	    ИмяТаблицы = "СФ283";
	ИначеЕсли ДатаДок >= '30.07.2002' Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ() + "ExtForms\PrnForms\1cbsf84.mxl";
	    ИмяТаблицы = "СФ84";
		
	ИначеЕсли ДатаДок >= '21.03.2001' Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ() + "ExtForms\PrnForms\1cbsf189.mxl";
		ИмяТаблицы = "СФ189";
		
	Иначе
		ИмяФайлаПечатнойФормы = КаталогИБ() + "ExtForms\PrnForms\1cbsf.mxl";
		ИмяТаблицы = "Таблица";
	КонецЕсли;
	
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
	Иначе
		Таб.ИсходнаяТаблица(ИмяТаблицы);
	КонецЕсли;
	
	Если ДатаДок < '09.06.2009' Тогда
		Продавец = СокрЛП(Константа.НазваниеОрганизации);
	Иначе	
		Продавец = СокрЛП(Константа.ОфициальноеНазваниеОрганизации) + " (" + СокрЛП(Константа.НазваниеОрганизации) + ")";
	КонецЕсли;
	
	Если ВариантОтправки=1 Тогда
		ПечГрузоотправитель = "-----";
		ПечГрузополучатель = "-----"; 
		
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Если ТипЗначенияСтр(Товар) = "Справочник" Тогда
					Если Товар.Вид() = "Номенклатура" Тогда
						Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга) или
						(Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Работа) или
						(Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга) или 
						(Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД) Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					Если ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс Тогда
						ПечГрузоотправитель = "Он же";
						ПечГрузополучатель = СокрП(Грузополучатель.ПолнНаименование)+", "+СокрП(Грузополучатель.ПочтовыйАдрес);
					КонецЕсли;					
					Прервать;
				КонецЕсли;
			КонецЦикла;		
	Иначе
		ПечГрузополучатель = СокрП(Грузополучатель.ПолнНаименование)+", "+СокрП(Грузополучатель.ПочтовыйАдрес);
		ПечГрузоотправитель = СокрП(Грузоотправитель.ПолнНаименование)+", "+СокрП(Грузоотправитель.ПочтовыйАдрес);
	КонецЕсли;
	
	// Определим валюту оплаты.
	ВалютаПечати = ?(Договор.ВалютаДоговора.Выбран() = 1, Договор.ВалютаДоговора, "руб.");
	Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
			ВалютаПечати = ?(Договор.ОплатаДоговора <> 1, Договор.ВалютаДоговора, "руб.");
		Иначе
			ВалютаПечати = "руб.";
		КонецЕсли;                		
	ИначеЕсли ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница Тогда
		ВалютаПечати = "руб.";
	КонецЕсли;   
	
	// Выгрузим табличную часть документа в таблицу значений.
	ТабДок = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТабДок);
	
	//**************************************************
	//Печатаем сч-ф по договору у.е. в рублях
	ТекстПредупреждения = "";
	ЦеныВДоговоре = 1; // в рублях
	ОплатаДоговора = 1; // в рублях
	СчетФактураВУЕ = 0;
	Если Договор.Выбран() = 1 Тогда
		Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
			ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
			Если ОплатаДоговора = 1 Тогда
				СчетФактураВУЕ = 1; 
				ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	

	Если (Константа.ФормироватьСчетФактуруПоУЕвРублях.Получить(ДатаДок) = Да)
	и (СчетФактураВУЕ = 1) Тогда
	ВалютаПечати = "руб.";	
		Опер = СоздатьОбъект("Операция");
		//Предварительно получим сумму НДС, если документ проведен
		Сч68_2 = СчетПоКоду("68.2");
		СуммаНДСДокументаРуб = 0;
		Если Проведен() = 1 Тогда
			Если Опер.НайтиОперацию(ТекущийДокумент()) = 1 Тогда
				Опер.ВыбратьПроводки();
				Пока Опер.ПолучитьПроводку() = 1 Цикл
					Если Опер.Кредит.Счет = Сч68_2 Тогда
						СуммаНДСДокументаРуб = СуммаНДСДокументаРуб + Опер.Сумма;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;

		Сч62_6 = СчетПоКоду("62.6");
		Сч62_7 = СчетПоКоду("62.7");
		СчВР_6 = СчетПоКоду("ВР.6");
		
		СуммаЗачетаВал = 0;
		СуммаЗачетаРуб = 0;
		ЗадолженностьВал = 0;
		ЗадолженностьРуб = 0;
		
		Если ДокументОснование.Выбран() = 1 Тогда // поиск зачтенного аванса		    
			Если Опер.НайтиОперацию(ДокументОснование) = 1 Тогда
				Опер.ВыбратьПроводки();
				Пока Опер.ПолучитьПроводку() = 1 Цикл
					Если Опер.Дебет.Счет = СчВР_6 Тогда
						СуммаЗачетаВал = СуммаЗачетаВал + Опер.ВалСумма;
						СуммаЗачетаРуб = СуммаЗачетаРуб + Опер.Сумма;
						ЗадолженностьВал = ЗадолженностьВал + Опер.ВалСумма;
						ЗадолженностьРуб = ЗадолженностьРуб + Опер.Сумма;
						
					Иначе
						Если (Опер.Дебет.Счет = Сч62_7) и (Опер.Кредит.Счет = Сч62_6) Тогда
							СуммаЗачетаВал = СуммаЗачетаВал + Опер.ВалСумма;
							СуммаЗачетаРуб = СуммаЗачетаРуб + Опер.Сумма;
						КонецЕсли;
						
						Если Опер.Дебет.Счет = Сч62_6 Тогда
							ЗадолженностьВал = ЗадолженностьВал + Опер.ВалСумма;
							ЗадолженностьРуб = ЗадолженностьРуб + Опер.Сумма;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ВерсияОбъекта < "7.70.421" Тогда
			Если Валюта.Выбран() = 1 Тогда
				ЦеныВДоговоре = 2;
				КурсДок = Валюта.Курс.Получить(ДатаДок);
			КонецЕсли;
		Иначе
			ВалютаДок = Договор.ВалютаДоговора;
		КонецЕсли;
		
		Если ЦеныВДоговоре = 2 Тогда
			Кратность = ВалютаДок.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
				Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
			КонецЕсли;
		КонецЕсли;
		
		ДоляОплаченнойОтгрузки = ?(ЗадолженностьВал = 0, 0, СуммаЗачетаВал / ЗадолженностьВал);
		КурсОплаты = ?(СуммаЗачетаВал = 0, 0, Окр(СуммаЗачетаРуб / СуммаЗачетаВал, 4, 1));
		КурсСФ = ?(((ЦеныВДоговоре = 2) и (Аванс = 0)) или (ОплатаДоговора = 2), Курс / Кратность, 1);
		
		Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница Тогда
			КурсСФ = 1;
		КонецЕсли;
		
		Если (ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) и (ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс) Тогда
			ТабДок.ВыбратьСтроки();
			Пока ТабДок.ПолучитьСтроку()= 1 Цикл
				
				ОплСумма = ТабДок.Сумма * ДоляОплаченнойОтгрузки;
				ТабДок.Сумма = Окр(ОплСумма * КурсОплаты + (ТабДок.Сумма - ОплСумма) * КурсСФ, 2, 1);
				
				ОплНДС = ТабДок.НДС * ДоляОплаченнойОтгрузки;
				ТабДок.НДС = Окр(ОплНДС * КурсОплаты + (ТабДок.НДС - ОплНДС) * КурсСФ, 2, 1);
				
				ОплНП = ТабДок.НП * ДоляОплаченнойОтгрузки;
				ТабДок.НП = Окр(ОплНП * КурсОплаты + (ТабДок.НП - ОплНП) * КурсСФ, 2, 1);
				
				ОплАкцизСумма = ТабДок.АкцизСумма * ДоляОплаченнойОтгрузки;
				ТабДок.АкцизСумма = Окр(ОплАкцизСумма * КурсОплаты + (ТабДок.АкцизСумма - ОплАкцизСумма) * КурсСФ, 2, 1);
				
				ОплЦена = ТабДок.Цена * ДоляОплаченнойОтгрузки;
				ТабДок.Цена = Окр(ОплЦена * КурсОплаты + (ТабДок.Цена - ОплЦена) * КурсСФ, 2, 1);
				
				ОплВсего = ТабДок.Всего * ДоляОплаченнойОтгрузки;
				ТабДок.Всего  = Окр(ОплВсего * КурсОплаты + (ТабДок.Всего  - ОплВсего) * КурсСФ, 2, 1);
				
			КонецЦикла;
			
			Если Проведен() = 1 Тогда
				Если (СуммаНДСДокументаРуб <> ТабДок.Итог("НДС")) и (ДоляОплаченнойОтгрузки <> 0) Тогда
					ТекстПредупреждения = "Внимание! Сумма НДС в счете-фактуре отличается от суммы НДС отраженной в бухгалтерском учете. Возможно следует перепровести документ.";
					Таб.ВывестиСекцию("ТекстПредупреждения");
				Иначе
					ТекстПредупреждения = "";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;  
		
	Таб.ВывестиСекцию("Шапка"); 
		
	// Печать строк документа.
	ТабДок.ВыбратьСтроки();
	Ном=0;
	Пока ТабДок.ПолучитьСтроку()=1 Цикл
		Ном=Ном+1;
		Если ТипЗначения(ТабДок.Товар) = 2 Тогда
			Наименование = ТабДок.Товар;
			ЕдиницаИзмерения = "";
			
		ИначеЕсли ТабДок.Товар.Вид() = "Номенклатура" Тогда
			Наименование = ?(ПустаяСтрока(ТабДок.Товар.ПолнНаименование)=1, ТабДок.Товар.Наименование, ТабДок.Товар.ПолнНаименование);
			ЕдиницаИзмерения = ТабДок.Товар.ЕдиницаИзмерения;
			
		ИначеЕсли ТабДок.Товар.Вид() = "ОсновныеСредства" Тогда
			Наименование = ТабДок.Товар.Наименование;
			ЕдиницаИзмерения = "";
			
		ИначеЕсли ТабДок.Товар.Вид() = "НематериальныеАктивы" Тогда
			Наименование = ТабДок.Товар.Наименование;
			ЕдиницаИзмерения = "";
			
		ИначеЕсли ТабДок.Товар.Вид() = "Материалы" Тогда
			Наименование = ТабДок.Товар.Наименование;
			ЕдиницаИзмерения = ТабДок.Товар.ЕдиницаИзмерения;
		КонецЕсли;
		Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс Тогда
			ЕдиницаИзмерения = "";
		КонецЕсли;
		Если ПустоеЗначение(ЕдиницаИзмерения) = 1 Тогда
			ЕдиницаИзмерения = "-----";
		КонецЕсли;		
		Если ПустоеЗначение(ТабДок.ГТД) = 1 Тогда
			НомерГТД_Н = "-----";
			СтранаН = "-----";
		Иначе
			НомерГТД_Н = ТабДок.ГТД;
			Если ПустаяСтрока(ТабДок.ГТД.СтранаПроисхождения) = 1 Тогда
				СтранаН = "-----";
			Иначе
				СтранаН = ТабДок.ГТД.СтранаПроисхождения;
			КонецЕсли;
		КонецЕсли;
		Если НДСпоСтавкеНольПроцентов = 1 Тогда
			ПредставлениеСтавкиНДС = "0%";
		Иначе
			Если (ТабДок.СтавкаНДС.Выбран() = 1) и (ТабДок.СтавкаНДС.Ставка > 0) Тогда
				ПредставлениеСтавкиНДС = "" + ТабДок.СтавкаНДС.Ставка + "%";
				
				Если СуммаНДСопределяетсяРасчетнымМетодом = 1 Тогда
					ПредставлениеСтавкиНДС = ПредставлениеСтавкиНДС + " / 1" + ТабДок.СтавкаНДС.Ставка + "%";
				КонецЕсли;
			    
			Иначе
				ПредставлениеСтавкиНДС = "Без НДС";
			КонецЕсли;
		КонецЕсли;
		Если ТабДок.Количество = 0 Тогда
			ПечКоличество = "-----";
			ПечЦена		  = "-----";
		ИначеЕсли (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс)
		ИЛИ (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) 
		ИЛИ (Аванс = 1) Тогда
			ПечКоличество = "-----";
			ПечЦена		  = "-----";
		Иначе                 
			ПечКоличество = Формат(ТабДок.Количество, "Ч015.3");
			Если ТабДок.Цена = 0 Тогда
				ПечЦена		  = "-----";
			Иначе				
				ПечЦена = Формат(ТабДок.Цена, "Ч15.2-");
			КонецЕсли;
		КонецЕсли;
		Если (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс)
		ИЛИ (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) 
		ИЛИ (Аванс = 1) Тогда
			ПечСумма = "-----";
		ИначеЕсли ТабДок.Сумма = 0 Тогда
			ПечСумма = "-----";
		Иначе                  
			ПечСумма = Формат(ТабДок.Сумма, "Ч15.2-");
		КонецЕсли;

		ПечАкциз = ?(ТабДок.АкцизСумма=0, "-----", Формат(ТабДок.АкцизСумма,"Ч15.2-"));
				
		ПечНДС = ?(ТабДок.НДС=0,"-----", Формат(ТабДок.НДС,"Ч15.2-"));
		ПечВсего = ?(ТабДок.Всего=0,"-----", Формат(ТабДок.Всего,"Ч15.2-"));
		ПечИтогНДС = ?(ТабДок.Итог("НДС")=0,"-----", Формат(ТабДок.Итог("НДС"),"Ч15.2-"));
		печИтогВсего = ?(ТабДок.Итог("Всего")=0,"-----", Формат(ТабДок.Итог("Всего"),"Ч15.2-"));

		
		
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	Таб.ВывестиСекцию("Подвал");

	Таб.Опции(0, 0, 0, 0, "ОпцииПечатиСчетаФактуры", "ОкноСчетаФактуры");
	
	Если ПустоеЗначение(ТекстПредупреждения) = 1 Тогда
		Таб.ОбластьПечати(1,,,);
	Иначе
		Таб.ОбластьПечати(2,,,);
	КонецЕсли;
	
	Таб.ПовторятьПриПечатиСтроки( 15, 15 );
	Таб.ТолькоПросмотр(1);
	Таб.ПараметрыСтраницы(2,,,,,,,,,1,,);
	Таб.Показать("Печать счета-фактуры","");
	
КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//*****************************************************************************
// Подбор()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Подбор".
//
// Описание:
//  Открывает форму справочника для подбора элементов и заполнения ими
// табличной части документа.
//
Процедура Подбор()
	
	Перем ВыбСправочник;
	
	// Вид справочника, открываемого для подбора, выберем из списка.
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Номенклатура", Метаданные.Справочник("Номенклатура").Представление());
	Меню.ДобавитьЗначение("Материалы", Метаданные.Справочник("Материалы").Представление());
	Меню.ДобавитьЗначение("ОсновныеСредства", Метаданные.Справочник("ОсновныеСредства").Представление());
	Меню.ДобавитьЗначение("НематериальныеАктивы", Метаданные.Справочник("НематериальныеАктивы").Представление());
	Если Меню.ВыбратьЗначение(ВыбСправочник, "Выберите вид МПЗ", , , 1) = 1 Тогда
		КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
		КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
		ОткрытьПодбор("Справочник."+ВыбСправочник, "ДляПодбора", КонтекстФормыПодбора);
	КонецЕсли;
	
	ПредыдущийТовар = ПолучитьПустоеЗначение(); // для того, чтобы при установке видимости колонки ГТД и Страна происхождения не перебиралась вся табличная часть
	
КонецПроцедуры // Подбор()

//*****************************************************************************
// ПриВыбореСтавкеНольПроцентов()
//
// Вызывается из формул элементов диалога:
//  Флаг "Облагается НДС по ставке 0%".
//
// Описание:
//  Устанавливает суммы НДС в строках документа равными нулю.
//
Процедура ПриВыбореСтавкеНольПроцентов()
	
	Если НДСпоСтавкеНольПроцентов = 1 Тогда
	    ВыбратьСтроки();
	    Пока ПолучитьСтроку() = 1 Цикл
	        НДС = 0;
			Всего = Сумма;
		КонецЦикла;
	КонецЕсли;
	
	УправлениеКурсом();
	
КонецПроцедуры // ПриВыбореСтавкеНольПроцентов()    

//*****************************************************************************
Процедура ПриВыбореВидаОперации() 
	
	Если ВидОперации = СтарыйВидОперации Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс Тогда
		Аванс = 1;
		УправлениеДиалогом(1);
	Иначе                     
		Аванс = 0;
		УправлениеДиалогом(1); 
		
		Если КоличествоСтрок() <> 0 Тогда
			Если Вопрос("Изменился вид операции. Изменить корреспондирующий 
			|счет в соответствии с выбранным видом операции?", "Да+Нет") = "Нет" Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;
		
		Если ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Возврат Тогда			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Счет = СчетПоКоду("76.2");
				ПриВыбореСчета(); 
			КонецЦикла;
		ИначеЕсли ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Реализация Тогда				
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл 
				Счет = СчетПоКоду("90.3"); 
				Если ДокументОснование.Вид() = "ОказаниеУслуг" Тогда
					Если ДокументОснование.ТипУслуги = 3 Тогда
						Счет = СчетПоКоду("91.2");
						ПриВыбореСчета(); 
						Субконто1 = ДокументОснование.СтатьяПрочихДоходовИРасходов;
					КонецЕсли;
				Иначе
					ПриВыбореСчета(); 
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница Тогда	
			Аналитика91 = ОпределитьСтатьюПрочихДоходовИРасходов();			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Счет = СчетПоКоду("91.2"); 
				ПриВыбореСчета(); 
				Субконто1 = Аналитика91;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаОперации()    

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Устанавливает значения реквизитов документа при создании нового документа.
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    Контрагент = Форма.Параметр.Получить("Контрагент");
	КонецЕсли;
	ВариантОтправки = 1;
	Если Константа.МетодопределенияВыручки.Получить(ДатаДок) = глПоОтгрузке Тогда
		СчетНДС = 1;
	Иначе
		СчетНДС = 2;
	КонецЕсли;
	СчетАкциза = 2;
	Если Константа.ОсновнойСклад.Выбран() = 1 Тогда
	    ТипЦен = Константа.ОсновнойСклад.ТипЦен;
	КонецЕсли;  
	ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Реализация;
	ПриИзмененииДаты();
	
КонецПроцедуры // ВводНового()

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Устанавливает значения реквизитов документа при создании нового документа
// в режиме ввода на основании другого документа.
//
Процедура ВводНаОсновании(ДокОсн)
	
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Заполнить(ДокОсн) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	УправлениеКурсом(1);
	Комментарий = "Введен на основании: "+ГлПредставлениеДокумента(ДокОсн);
	
КонецПроцедуры // ВводНаОсновании()

//*****************************************************************************
// Предопределенна процедура
//
// Описание:
//  Устанавливает видимость реквизитов документа в диалоге формы при 
// переключении закладок.
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если НомерЗакладки = 1 Тогда
		Форма.ИспользоватьСлой("Основной, Шапка", 2);
		// Форма.Грузоотправитель.Видимость(?(ВариантОтправки=1,0,1));
		Форма.ИспользоватьСлой("Грузоотправитель", ?(ВариантОтправки=1,0,1));
		Если ПустоеЗначение(Договор.ВалютаДоговора) = 1 Тогда
		    Форма.Курс.Видимость(0);
			Форма.ПодписьКурса.Видимость(0);
		КонецЕсли;
        УправлениеКурсом();
	ИначеЕсли НомерЗакладки = 2 Тогда
		
		Форма.ИспользоватьСлой("Основной, ИнформацияОШапке, Спецификация", 2);
		Если Константа.ИспользоватьТипыЦен = Нет Тогда
			Форма.ПодписьТипаЦен.Видимость(0);
			Форма.ТипЦен.Видимость(0);
		Иначе
			Форма.ПодписьТипаЦен.Видимость(1);
			Форма.ТипЦен.Видимость(1);
		КонецЕсли;
		Форма.ВидСубконто1.Видимость(0);
		Форма.ВидСубконто2.Видимость(0);
		Форма.ВидСубконто3.Видимость(0);
		Форма.Субконто1.Видимость(0);
		Форма.Субконто2.Видимость(0);
		Форма.Субконто3.Видимость(0);
		Форма.ГТД.Видимость(0);
		Форма.Страна.Видимость(0);
		Форма.Счет.Видимость(0);
		
		Форма.СтавкаНДС.Видимость(1);
		Форма.НДС.Видимость(1);
		Форма.Цена.Видимость(1);
		Форма.Количество.Видимость(1);
		Форма.Сумма.Видимость(1);
		Форма.Всего.Видимость(1);
		
		Активизировать("НомерСтроки");
		Если Аванс = 1 Тогда
		    Форма.кнПодбор.Видимость(0);
			Форма.АкцизЦена.Видимость(0);
			Форма.АкцизСумма.Видимость(0);
		Иначе
			Форма.АкцизЦена.Видимость(1);
			Форма.АкцизСумма.Видимость(1);
		КонецЕсли;
		
		Форма.СтавкаНП.Видимость(0);
		Форма.НП.Видимость(0);
		Форма.КомиссионноеВознаграждение.Видимость(0);
		Форма.НДС_Вознаграждения.Видимость(0);
		Форма.Комитент.Видимость(0);
		
	ИначеЕсли (НомерЗакладки = 3) и (Аванс = 0) Тогда
		Форма.ИспользоватьСлой("Основной, ИнформацияОШапке, Спецификация", 2); 
		Если Константа.ИспользоватьТипыЦен = Нет Тогда
			Форма.ПодписьТипаЦен.Видимость(0);
			Форма.ТипЦен.Видимость(0);
		Иначе
			Форма.ПодписьТипаЦен.Видимость(1);
			Форма.ТипЦен.Видимость(1);
		КонецЕсли;
		Форма.ВидСубконто1.Видимость(1);
		Форма.ВидСубконто2.Видимость(1);
		Форма.ВидСубконто3.Видимость(1);
		Форма.Субконто1.Видимость(1);
		Форма.Субконто2.Видимость(1);
		Форма.Субконто3.Видимость(1);
		//ВидимостьКолонок = ВидимостьГТД();
		Форма.Страна.Видимость(1);
		Форма.ГТД.Видимость(1);
		Форма.Счет.Видимость(1);
		Форма.АкцизЦена.Видимость(0);
		Форма.АкцизСумма.Видимость(0);
		Форма.СтавкаНДС.Видимость(0);
		Форма.НДС.Видимость(0);
		Форма.Цена.Видимость(0);
		Форма.Количество.Видимость(0);
		Форма.Сумма.Видимость(0);
		Форма.Всего.Видимость(0);
		
		Форма.СтавкаНП.Видимость(0);
		Форма.НП.Видимость(0);
		Форма.КомиссионноеВознаграждение.Видимость(0);
		Форма.НДС_Вознаграждения.Видимость(0);
		Форма.Комитент.Видимость(0);
		
		Активизировать("НомерСтроки");
		
	ИначеЕсли (НомерЗакладки = 4) или ((НомерЗакладки = 3) и (Аванс = 1)) Тогда
		Форма.ИспользоватьСлой("Основной, Редакция_4_0, Спецификация", 2);
		Форма.ВидСубконто1.Видимость(0);
		Форма.ВидСубконто2.Видимость(0);
		Форма.ВидСубконто3.Видимость(0);
		Форма.Субконто1.Видимость(0);
		Форма.Субконто2.Видимость(0);
		Форма.Субконто3.Видимость(0);
		Форма.Страна.Видимость(0);
		Форма.ГТД.Видимость(0);
		Форма.Счет.Видимость(0);
		Форма.АкцизЦена.Видимость(0);
		Форма.АкцизСумма.Видимость(0);
		Форма.СтавкаНДС.Видимость(0);
		Форма.НДС.Видимость(0);
		Форма.Цена.Видимость(0);
		Форма.Количество.Видимость(0);
		Форма.Сумма.Видимость(0);
		Форма.Всего.Видимость(0);
		
		Форма.СтавкаНП.Видимость(1);
		Форма.НП.Видимость(1);
		Форма.КомиссионноеВознаграждение.Видимость(1);
		Форма.НДС_Вознаграждения.Видимость(1);
		Форма.Комитент.Видимость(1);
		
		Активизировать("НомерСтроки");
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()  

//*****************************************************************************
// Предопределенна процедура
//
// Описание:
//  Устанавливает видимость элементов диалога при открытии формы.
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаполнить.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.кнОчиститьОснование.Доступность(0);
	КонецЕсли;
	НачальнаяДатаДокумента = ДатаДок;
	
	Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Количество.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Цена.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Сумма.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Всего.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.СтавкаНДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ГТД.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Счет.ВыполнятьФормулуТолькоПриИзменении(1);
	
	Форма.ИспользоватьЗакладки(1);
	УправлениеДиалогом(0);
	Активизировать("НомерДок",);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
	ТекДоговор = Договор;
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенна процедура
//
// Описание:
//  Заполняет строку табличной части при выборе товара в форме списка,
// открытой для подбора.
//
Процедура ОбработкаПодбора(ВыбЗначение, Конт)
	
	Если ТипЗначенияСтр(ВыбЗначение) = "Справочник" Тогда
		Кол = 1;
		Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
			Возврат;
		ИначеЕсли Кол = 0 Тогда
			Возврат;
		КонецЕсли;
	
		НоваяСтрока();
		НазначитьТип("Товар", "Справочник."+ВыбЗначение.Вид());
		Товар = ВыбЗначение;
		Количество = Кол;
		АктивизироватьСтроку();
		Пересчет("Товар", 1);
		Если ВыбЗначение.Вид() = "Номенклатура" Тогда
			Счет = СчетПоКоду("90.3");
			Если Константа.ИспользоватьТипыЦен = Нет Тогда
			Иначе
				Цена = глПолучитьЦену(Контекст,Товар,Конт.ТипЦен,ДатаДок,Договор.ВалютаДоговора);
				Пересчет("Цена");
			КонецЕсли;
		Иначе
			Счет = СчетПоКоду("91.2");
		КонецЕсли;
		ПриВыбореСчета();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПодбора()

//*****************************************************************************
// Предопределенна процедура
//
// Описание:
//  "Перехватывает" стандартный системный выбор значений для некоторых
// элементов диалога.
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	
	// При выборе ставки НДС, если сумма НДС исчисляется расчетным методом,
	// то следует запретить выбирать "старые" расчетные ставки: 9.09 и 16.67
	Если (ИдентЭлемДиалога = "СтавкаНДС") и (СуммаНДСопределяетсяРасчетнымМетодом = 1) Тогда
		ПредыдущееЗначение = СтавкаНДС;
		Значение = "";
		Меню = СоздатьОбъект("СписокЗначений");
		Спр = СоздатьОбъект("Справочник.СтавкиНДС");
		Спр.ПорядокКодов();
		Спр.ВыбратьЭлементы();
		Пока Спр.ПолучитьЭлемент() = 1 Цикл
			Если Цел(Спр.Ставка) = Спр.Ставка Тогда
			    Меню.ДобавитьЗначение(Спр.ТекущийЭлемент(), СокрП(Спр.Наименование));
			КонецЕсли;
		КонецЦикла;
		Если Меню.ВыбратьЗначение(Значение,,,, 2) = 1 Тогда
			Если Значение <> ПредыдущееЗначение Тогда
			    СтавкаНДС = Значение;
				Пересчет("СтавкаНДС");
			КонецЕсли;
		КонецЕсли;
		ФлагСтандОбр = 0;
	
	// При выборе ГТД в форму справочника передается параметр для отбора
	// значений ГТД, соответствующих данному товару.
	ИначеЕсли ИдентЭлемДиалога = "ГТД" Тогда
		КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
		КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
		КонтекстФормыПодбора.ДобавитьЗначение(Товар, "Товар");
		ОткрытьФорму("Справочник.ГТД.ДляПодбора", КонтекстФормыПодбора);
		ФлагСтандОбр = 0;
	
	// При выборе товара сначала предлагается указать вид справочника, из 
	// которого требуется выбрать МПЗ, затем открывается форма выбранного 
	// справочника.
	ИначеЕсли ИдентЭлемДиалога = "Товар" Тогда
		Если (Аванс = 0) или ((Аванс = 1) И (ДатаДок >= '01.01.2009')) Тогда
			
			ПредыдущийТовар = Товар;
			Значение = "";
			Меню = СоздатьОбъект("СписокЗначений");
			Меню.ДобавитьЗначение("Номенклатура", Метаданные.Справочник("Номенклатура").Представление());
			Меню.ДобавитьЗначение("Материалы", Метаданные.Справочник("Материалы").Представление());
			Меню.ДобавитьЗначение("ОсновныеСредства", Метаданные.Справочник("ОсновныеСредства").Представление());
			Меню.ДобавитьЗначение("НематериальныеАктивы", Метаданные.Справочник("НематериальныеАктивы").Представление());
			Если Меню.ВыбратьЗначение(Значение,,,, 2) = 1 Тогда
				НазначитьТип("Товар", "Справочник."+Значение);
			Иначе
				ФлагСтандОбр = 0;
			КонецЕсли;
		КонецЕсли;
		
	// При выборе документа-основания предлагается указать вид документа основания,
	// затем открывается форма журнала для выбора документов, выбранного вида.
	ИначеЕсли ИдентЭлемДиалога = "ДокументОснование" Тогда
		ФлагСтандОбр = 0;
		Меню = СоздатьОбъект("СписокЗначений");
		Для А = 1 По Метаданные.Документ() Цикл
			Для Б = 1 По Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Количество() Цикл
				Если Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Получить(Б).Идентификатор = "СчетФактура" Тогда
					Меню.ДобавитьЗначение(Метаданные.Документ(А).Идентификатор, Строка(Метаданные.Документ(А)));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	    ВидДок = ДокументОснование.Вид();
		Если Меню.ВыбратьЗначение(ВидДок,,,,2) = 1 Тогда
			Конт = ПолучитьПустоеЗначение("");
			ОткрытьФорму("Журнал.Общий", Конт);
			Конт.УстановитьОтбор(ВидДок);
			Конт.АктивизироватьОбъект(ДокументОснование);
		КонецЕсли;
		
	ИначеЕсли ИдентЭлемДиалога = "ДатаОплаты" Тогда
		ВыбранноеЗначение = ?(ПустоеЗначение(Дата(СокрЛП(ДатаОплаты))) = 1, ДатаДок, Дата(СокрЛП(ДатаОплаты)));
		Если ВвестиЗначение(ВыбранноеЗначение, "Укажите дату оплаты счета-фактуры", "Дата") = 1 Тогда
			ДатаОплаты = ?(ПустоеЗначение(ВыбранноеЗначение)=1, "", Формат(ВыбранноеЗначение, "Д"));
		КонецЕсли;              
		
	ИначеЕсли (ИдентЭлемДиалога = "Договор")или(ИдентЭлемДиалога = "Контрагент") Тогда
		СтарыйДоговор = Договор;  
		
	ИначеЕсли ИдентЭлемДиалога = "ВидОперации" Тогда
		СтарыйВидОперации = ВидОперации;
	
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗначение, ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "Счет" Тогда
	    Если ВыбЗначение = СчетПоКоду("76.АВ") Тогда
			Предупреждение("Для ввода счета-фактуры на аванс установите
						   |соответствующий флажок на закладке ""Шапка""");
	        Флаг = 0;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ДокументОснование" Тогда
		Флаг = ЗаполнитьНаОсновании(ВыбЗначение);
		
	КонецЕсли;

КонецПроцедуры // ОбработкаВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриРедактированииНовойСтроки()
	Если (ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс) И (ДатаДок < '01.01.2009') Тогда
		НазначитьТип("Товар", "Строка", 22);
		Товар = ?(ДатаДок < '01.01.2006', "Аванс (предв. оплата)", "Предварительная оплата");
	ИначеЕсли ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница Тогда
		НазначитьТип("Товар", "Строка", 22);
		Товар = "Суммовая разница";
		Счет = СчетПоКоду("91.2");
		ПриВыбореСчета();
		Субконто1 = ОпределитьСтатьюПрочихДоходовИРасходов();
		СтранаПроисхождения = "";
		ГТД = "";                            
		Форма.ГТД.Доступность(0);
		Форма.Страна.Доступность(0);
		СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
	Иначе		
		НазначитьТип("Товар", "Справочник");
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
// Предопределенна процедура
//
Процедура ПриНачалеРедактированияСтроки()
	
	ДоступностьГТД = 0;
	Если ТипЗначенияСтр(Товар) = "Справочник" Тогда
		Если (Товар.Выбран() = 1) и (Товар.Вид() = "Номенклатура") Тогда
			Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) и (Товар.СтранаПроисхожд = 0) Тогда
				ДоступностьГТД = 1;
			КонецЕсли;
		ИначеЕсли (Товар.Выбран() = 1) и (Товар.Вид() = "Материалы") Тогда
			ДоступностьГТД = 1;
		КонецЕсли;
	КонецЕсли;
	Форма.ГТД.Доступность(ДоступностьГТД);
	Форма.Страна.Доступность(ДоступностьГТД);
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи() 
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Операция.СуммаОперации = Итог("Всего");
	Операция.Содержание = "Сч.-факт. покупателю: "+Контрагент;
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		КонтекстЖурнала = Форма.Параметр.Получить("КонтекстЖурнала");
		Если ПустоеЗначение(КонтекстЖурнала) = 0 Тогда
			КонтекстЖурнала.Активизировать(КонтекстЖурнала.Форма.ТекущаяКолонка(), 0);
			
		Иначе
			глОткрытьЖурнал(Контекст, Новый);
		КонецЕсли;
		
	Иначе
		глОткрытьЖурнал(Контекст, Новый);
	КонецЕсли;	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Счет-фактура";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");