////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
Перем СписокВидовРасходов;
Перем СписокЭлементовРасхода;

//******************************************************************************
// ПриВыбореСчета()
// 
// Вызывается из формул элементов диалога:
//  Счет, Расходы.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета(Учет = "")
	
	Если (Форма.АктивныйЭлемент() = "СчетЗатрат") или (Учет = "Б") Тогда
		Если СчетЗатрат.Забалансовый = 1 Тогда
		    Предупреждение("Счет отнесения затрат должен быть балансовым.");
		КонецЕсли;
	КонецЕсли;
	
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто" + А, СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
	
КонецПроцедуры // ПриВыбореСчета()

//******************************************************************************
Процедура РассчитатьСтоимость(Учет)
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
		    |Расчет итогов выполняется в режиме
		    |""Операции - Управление бухгалтерскими итогами"".");
		
	ИначеЕсли (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения суммы первоначальной стоимости по данным
					   |бухгалтерского учета документ необходимо записать."); 
			
	ИначеЕсли ОбъектВнеоборотныхАктивов.Выбран() = 0 Тогда
		Предупреждение("Не выбран объект внеоборотных активов.");
		
	Иначе
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.ОбъектыСтроительства, ОбъектВнеоборотныхАктивов, 2);
		Если Учет = "Б" Тогда
			Если ВидОбъектаУчета = 1 Тогда
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"08.8");
			Иначе
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"08.5");
			КонецЕсли;
			
			БалансоваяСтоимость = БухИт.СНД();
			
		Иначе // Учет = "Н"
			Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				Если ВидОбъектаУчета = 1 Тогда
					БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"Н01.03");
				Иначе
					БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"Н01.08");
				КонецЕсли;
			Иначе
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"Н01.01");
			КонецЕсли;
			ПервоначальнаяСтоимостьН = БухИт.СНД();
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры //РассчитатьБалансовуюСтоимость

//******************************************************************************
// ПриВыбореСпособаНачисленияАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореСпособаНачисленияАмортизации()
	
	Если СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукцииРабот Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 1);

	Иначе
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
	КонецЕсли;  
	
	Если СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка Тогда
		Если ДатаДок >= '01.01.2008' Тогда
		    Форма.ИспользоватьСлой("Коэффициент",1);
		Иначе
			Форма.ИспользоватьСлой("Коэффициент",0);
		КонецЕсли;		
	Иначе
		Форма.ИспользоватьСлой("Коэффициент",0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСпособаНачисленияАмортизации()

//******************************************************************************
// УстановитьСтатикиНалоговыйУчетДляНМА()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура УстановитьСтатикиНалоговыйУчетДляНМА()
	
	Если ВидОбъектаУчета <> 1 Тогда // НМА
		Если ВключитьВСоставРасходов = 1 Тогда
			Форма.СтатикПервоначальнаяСтоимостьН.Заголовок("Первонач. стоимость:");
			Форма.РамкаСчетаЗатратН.Заголовок("Отнесение расходов по начисленной амортизации");
	        
		ИначеЕсли ВключитьВСоставРасходов = 2 Тогда                 
			Форма.СтатикПервоначальнаяСтоимостьН.Заголовок("Сумма расходов:");
			Форма.РамкаСчетаЗатратН.Заголовок("Отнесение расходов");
			
		Иначе
			Форма.СтатикПервоначальнаяСтоимостьН.Заголовок("Стоимость внеоб.акт.:");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УстановитьСтатикиНалоговыйУчетДляНМА()

//******************************************************************************
// ПриВыбореВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Переключатель "Для целей налогового учета".
//
// Описание:
//
Процедура ПриВыбореВидаРасхода()
	
	Если ВидОбъектаУчета = 1 Тогда // НИОКР
		Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
			 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
		    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.НИОКР;
		КонецЕсли;
		
	Иначе  // НМА
		Если ВключитьВСоставРасходов = 1 Тогда // включить в состав амортизируемого имущества
			Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
			 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
			    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.Амортизация;
			КонецЕсли;
			
		ИначеЕсли ВключитьВСоставРасходов = 2 Тогда // включить в состав расходов
			Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
			 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
			    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.МатериальныеРасходы;
			КонецЕсли;
		КонецЕсли;
		УстановитьСтатикиНалоговыйУчетДляНМА();
	КонецЕсли;
	
КонецПроцедуры //ПриВыбореВидаРасхода

//******************************************************************************
//
// ПриИзмененииВидаРасхода(ВызовПроцедурыПриОткрытииДокумента)
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Графа "Вид расхода".
//
// Описание:
//  Осуществляется управление реквизитов "объект" и "элемент расхода"
//  в зависимости от выбранного вида расхода.
//
Процедура ПриИзмененииВидаРасхода(ВызовПроцедурыПриОткрытииДокумента = 0)
	
	ТипЭлементаРасхода = "";
	ВидыОбъекта = "";
	Если ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеТоваров Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеМатериалов Тогда
		ВидыОбъекта = "Материалы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства,Оборудование";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.СтроительствоОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеНематериальныхАктивов Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг Тогда
		ВидыОбъекта = "ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеПрав Тогда
		ВидыОбъекта = "Договоры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.НИОКР Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов Тогда
		ВидыОбъекта = "РасходыБудущихПериодов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		ВидыОбъекта = "ВидыНоменклатуры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВнереализационныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ВнереализационныеРасходы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияОсновныхСредств Тогда
		ВидыОбъекта = "ОсновныеСредства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияПрочегоИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОбъектыСтроительства,ЦенныеБумаги";
	КонецЕсли;
	
	Если ВызовПроцедурыПриОткрытииДокумента = 0 Тогда
		НазначитьТип("ЭлементРасхода", ТипЭлементаРасхода);
	КонецЕсли;
	
	Если ПустоеЗначение(ВидыОбъекта) = 0 Тогда
		Если Найти("," + ВидыОбъекта + ",", "," + Объект.Вид() + ",") = 0 Тогда
			Если ПустоеЗначение(Объект) = 0 Тогда
				Объект = "";    
			КонецЕсли;
		КонецЕсли;
		Объект.ВидыДляВыбора(ВидыОбъекта);
		Форма.Объект.Доступность(1);
		
	Иначе
		Если ПустоеЗначение(Объект) = 0 Тогда
			Объект = "";    
		КонецЕсли;
		Форма.Объект.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииВидаРасхода()

//******************************************************************************
// ИнформационнаяСтрока(Учет)
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция ИнформационнаяСтрока(Учет)

	Стр = "";
	Если Учет = "Б" Тогда
		Если ВидОбъектаУчета <> 1 Тогда
			Если ПорядокНачисленияАмортизации = 1 Тогда
			    Стр = "Нематериальный актив не подлежит амортизации.";
			КонецЕсли;    
		КонецЕсли;

	ИначеЕсли Учет = "Н" Тогда
		Если ВидОбъектаУчета <> 1 Тогда
			Если ВключитьВСоставРасходов = 3 Тогда
			    Стр = "Нематериальный актив не принимается к налоговому учету.";
	
			ИначеЕсли ВключитьВСоставРасходов = 2 Тогда
			    Стр = "При принятии к учету нематериальный актив включается в состав расходов.";
	
			ИначеЕсли ПорядокНачисленияАмортизации = 1 Тогда
			    Стр = "Нематериальный актив не подлежит амортизации.";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции // ИнформационнаяСтрока()

//******************************************************************************
// УправлениеСтатикамиНаЗакладках()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура УправлениеСтатикамиЭлементовДиалога()
	
	Если ВидОбъектаУчета = 1 Тогда // НИОКР
		
		// Закладка "Общие сведения"
		Форма.СтатикВидАктива.Заголовок("НИОКР:");
		Форма.СтатикПервоначальнаяСтоимость.Заголовок("Cовокупность расходов:");
		Форма.РамкаНачислятьАмортизацию.Заголовок("Списание расходов по НИОКР со счета 04.2");
		Форма.ПорядокНачисленияАмортизации.Заголовок("Не списывать расходы");
		Форма.ПорядокНачисленияАмортизации05.Заголовок("Списывать расходы");
		Форма.РамкаПрочиеСведения.Заголовок("Прочие сведения о расходах на НИОКР");
		
		// Закладка "Бухгалтерский учет"
		Форма.ДанныеПоНачислениюАмортизации.Заголовок("Данные по списанию расходов для целей бухгалтерского учета");
		Форма.СтатикСрокПолезногоИспользования.Заголовок("Срок списания (в месяцах):");
		Форма.СтатикСпособНачисленияАморизации.Заголовок("Способ списания расходов:");
		Форма.РамкаСчетИАналитика.Заголовок("Счет и аналитика по списанию на расходы");
		
		// Закладка "Налоговый учет"
		Форма.ДанныеПоНачислениюАмортизацииН.Заголовок("Данные по списанию расходов для целей налогового учета учета");
		Форма.СтатикПервоначальнаяСтоимостьН.Заголовок("Cовокуп-сть расходов:");
		Форма.СтатикСрокПолезногоИспользованияН.Заголовок("Срок списания (в месяцах):");
		Форма.РамкаСчетаЗатратН.Заголовок("Отнесение расходов");
		
	Иначе // НМА
		
		// Закладка "Общие сведения"
		Форма.СтатикВидАктива.Заголовок("Нематериальный актив:");
		Форма.СтатикПервоначальнаяСтоимость.Заголовок("Первонач. стоимость:");
		Форма.РамкаНачислятьАмортизацию.Заголовок("Начисление амортизации");
		Форма.ПорядокНачисленияАмортизации.Заголовок("Не подлежит начислению амортизации");
		Форма.ПорядокНачисленияАмортизации05.Заголовок("Начислять амортизацию по кредиту счета 05");
		Форма.РамкаПрочиеСведения.Заголовок("Прочие сведения о нематериальном активе");
		
		// Закладка "Бухгалтерский учет"
		Форма.СтатикСрокПолезногоИспользования.Заголовок("Срок полезного использ. (в месяцах):");
		Форма.ДанныеПоНачислениюАмортизации.Заголовок("Данные по начислению амортизации для целей бухгалтерского учета");
		Форма.СтатикСпособНачисленияАморизации.Заголовок("Способ начисления амортизации:");
		Форма.РамкаСчетИАналитика.Заголовок("Счет отнесения затрат по начисленной амортизации");
		
		// Закладка "Налоговый учет"
		УстановитьСтатикиНалоговыйУчетДляНМА();
		Форма.ДанныеПоНачислениюАмортизацииН.Заголовок("Данные по начислению амортизации для целей налогового учета");
		Форма.СтатикСрокПолезногоИспользованияН.Заголовок("Срок полезного использ. (в месяцах):");
		
	КонецЕсли;
	
КонецПроцедуры // УправлениеСтатикамиНаЗакладках()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер, Значение)
	
	Если Значение = "Общие сведения" Тогда
		Форма.ИспользоватьСлой("Основной, ОбщиеСведения, ОбщиеСведения_2", 2);
		Если ВидОбъектаУчета = 1 Тогда
		    Форма.ИспользоватьСлой("ОбщиеСведения_НИОКР", 1);
			Если ПолученыПоложительныеРезультаты = 0 Тогда
			    Форма.ИспользоватьСлой("ОбщиеСведения_2", 0);
			КонецЕсли;
		Иначе
			Форма.ИспользоватьСлой("ОбщиеСведения_НМА", 1);
		КонецЕсли;

	ИначеЕсли Значение = "Бухгалтерский учет" Тогда
		Форма.ИспользоватьСлой("Основной, БухгалтерскийУчет, СрокИспользования, СпособНачисленияАмортизации", 2);
		Если ВидОбъектаУчета = 1 Тогда
			Форма.ИспользоватьСлой("Амортизация", 1);
			Если ПолученыПоложительныеРезультаты = 0 Тогда
				Форма.ИспользоватьСлой("СпособНачисленияАмортизации", 0);
				Форма.ИспользоватьСлой("СрокИспользования", 0);
			Иначе
				ПриВыбореСпособаНачисленияАмортизации();
			КонецЕсли;
			
		Иначе
			Если ПорядокНачисленияАмортизации <> 1 Тогда
				Форма.ИспользоватьСлой("Амортизация", 1);
				ПриВыбореСпособаНачисленияАмортизации();
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли Значение = "Налоговый учет" Тогда
		Форма.ИспользоватьСлой("Основной, НалоговыйУчет", 2);
		Форма.ИспользоватьСлой("ПервоначальнаяСтоимостьН", 1);
		
		Если ВидОбъектаУчета = 1 Тогда //НИОКР
			Форма.ИспользоватьСлой("АмортизацияН", 1);
			Форма.ИспользоватьСлой("ВидРасхода", 1);
			Форма.ИспользоватьСлой("РБП_НИОКР", 1);
			
		Иначе // НМА
			Если ВключитьВСоставРасходов = 1 Тогда
				Если ПорядокНачисленияАмортизации <> 1 Тогда
					Форма.ИспользоватьСлой("АмортизацияН", 1);
					Форма.ИспользоватьСлой("АмортизацияН_НМА", 1);
					Форма.ИспользоватьСлой("ВидРасхода", 1);
				КонецЕсли;
	            
			ИначеЕсли ВключитьВСоставРасходов = 2 Тогда                 
				Форма.ИспользоватьСлой("ПервоначальнаяСтоимостьН", 1);
				Форма.ИспользоватьСлой("ВидРасхода", 1);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//******************************************************************************
// ПриВыбореРезультатаОтНИОКР()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореРезультатаОтНИОКР()
	
	// Если НИОКР не дали положительного результата,
	// то необходимо расходы в бух. учете относятся на счет 91.2.
	Если ВидОбъектаУчета = 1 Тогда
		Если ПолученыПоложительныеРезультаты = 0 Тогда
		    СчетЗатрат = СчетПоКоду("91.2");
			Форма.СчетЗатрат.Доступность(0);
			ПриВыбореСчета();
		    Форма.ИспользоватьСлой("ОбщиеСведения_2", 0);
			
			Если (ПустоеЗначение(Субконто1) = 0) 
			и (Субконто1.ВидПрочихДоходовИРасходов <> Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения) Тогда
				Субконто1 = "";
			КонецЕсли;

		Иначе
			Форма.ИспользоватьСлой("ОбщиеСведения_2", 1);
			Форма.СчетЗатрат.Доступность(1);
		КонецЕсли;
		
	Иначе
		Форма.СчетЗатрат.Доступность(1);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореРезультатаОтНИОКР()

//******************************************************************************
// ПриВыбореВидаОбъектаУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  СписокВидовОбъекта.
//
// Описание:
//  Обрабатывается ситуция перевыбора вида объекта учета (НМА или НИОКР).
//
Процедура ПриВыбореВидаОбъектаУчета()
	
	Если СписокВидовОбъекта.НайтиЗначение(ВидОбъектаУчета) <> СписокВидовОбъекта.ТекущаяСтрока() Тогда
	    ВидОбъектаУчета = СписокВидовОбъекта.ПолучитьЗначение(СписокВидовОбъекта.ТекущаяСтрока());
		УправлениеСтатикамиЭлементовДиалога();
		ПриВыбореЗакладки(, "Общие сведения");
		
		// Если вид выбранного в документе объекта (НМА или НИОКР)
		// не соответствует утановленному, то очистим в документе
		// поле в котором указывается объект.
		Если НМА.Выбран() = 1 Тогда
		    Если НМА.ВидОбъектаУчета <> ВидОбъектаУчета Тогда
		        НМА = 0;
		    КонецЕсли;
		КонецЕсли;
		                                  
		Если ВидОбъектаУчета = 1 Тогда // НИОКР
			        
			ПриВыбореРезультатаОтНИОКР();
			
			Если СрокПолезногоИспользованияН = 0 Тогда
				Если ДатаДок < '01.01.2006' Тогда
					СрокПолезногоИспользованияН = 36; // согласно п.2 ст. 262 НК РФ   
				Иначе
					
					СрокПолезногоИспользованияН = 24; // согласно изменениям в  п.2 ст. 262 НК РФ (Федеральный закон от 6.06.2005 № 58-ФЗ)
				КонецЕсли;
			КонецЕсли;
			
			// Для НИОКР в списке косвенных расходов должен быть элемент "НИОКР";
			СписокЭлементовРасхода.ВставитьЗначение(1,Перечисление.ГруппыВидыРасходов.НИОКР);
			
			// Вид расхода установим по умолчанию.
		    ВидРасхода    = Перечисление.ВидыРасходов.КосвенныеРасходы;
			ПриИзмененииВидаРасхода();
			ЭлементРасхода = Перечисление.ГруппыВидыРасходов.НИОКР;
		
		Иначе
			// Для НМА в списке косвенных расходов не должен присутствавать элемент "НИОКР"
			Позиция = СписокЭлементовРасхода.НайтиЗначение(Перечисление.ГруппыВидыРасходов.НИОКР);
			Если Позиция <> 0 Тогда
			    СписокЭлементовРасхода.УдалитьЗначение(Позиция);
			КонецЕсли;
			
			// Если в качестве элемента расхода выбран НИОКР, то необходимо очистить элемент расхода.
			Если ЭлементРасхода = Перечисление.ГруппыВидыРасходов.НИОКР Тогда
			    ЭлементРасхода = 0;
			КонецЕсли;
			                               
			ПриВыбореВидаРасхода();
			Форма.СчетЗатрат.Доступность(1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаОбъектаУчета()

//******************************************************************************
Процедура ПриВыбореОбъекта()
	Если НМА.Выбран() = 1 Тогда
		Если ВидОбъектаУчета = 1 Тогда
			Если Вопрос("Заполнить реквизиты документа на
						|основании выбранного объекта НИОКР","Да+Нет") = "Нет" Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Если Вопрос("Заполнить реквизиты документа на
						|основании выбранного нематериального актива","Да+Нет") = "Нет" Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Группа = НМА.Группа;
		МОЛ = НМА.МОЛ.Получить(ДатаДок);
		ПорядокНачисленияАмортизации = ?(НМА.ПорядокНачисленияАмортизации > 0, НМА.ПорядокНачисленияАмортизации, 2);
		ПрочиеСведения = НМА.ПрочиеСведения;
		СпособНачисленияАмортизации = НМА.СпособНачисленияАмортизации;
		СрокПолезногоИспользования = НМА.СрокПолезногоИспользования;
		ОбщийОбъемПродукцииРабот = НМА.ОбщийОбъемПродукцииРабот;
		СчетЗатрат = НМА.СчетЗатрат.Получить(ДатаДок);
		ПриВыбореСчета("Б");
		Субконто1 = НМА.Субконто1.Получить(ДатаДок);
		Субконто2 = НМА.Субконто2.Получить(ДатаДок);
		Субконто3 = НМА.Субконто3.Получить(ДатаДок);
		АмортизационнаяГруппа = НМА.АмортизационнаяГруппа;
		МетодНачисленияАмортизации = НМА.МетодНачисленияАмортизации;
		
		Если ВидОбъектаУчета <> 1 Тогда // НМА
			СрокПолезногоИспользованияН = НМА.СрокПолезногоИспользованияН;
			ВидРасхода = НМА.ВидРасхода.Получить(ДатаДок);
			ПриИзмененииВидаРасхода();
			ЭлементРасхода = НМА.ЭлементРасхода.Получить(ДатаДок);
			Объект = НМА.Объект.Получить(ДатаДок);
		КонецЕсли;
		
		ПриВыбореРезультатаОтНИОКР();
	КонецЕсли;
КонецПроцедуры //ПриВыбореОбъекта

//******************************************************************************
// ПриВыбореСтатьиРБП()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореСтатьиРБП()
	
	Если РБП.Выбран() = 1 Тогда
		Если Вопрос("Заполнить реквизиты документа на
					|основании выбранной статьи РБП","Да+Нет") = "Нет" Тогда
			Возврат;
		КонецЕсли;
		
		ВидРасхода     = РБП.ВидРасхода;
		ПриИзмененииВидаРасхода();
		ЭлементРасхода = РБП.ЭлементРасхода;
		Объект         = РБП.Объект;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСтатьиРБП()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВидРасхода" Тогда
		Флаг = 0;
		Позиция = СписокВидовРасходов.НайтиЗначение(ВидРасхода);
		ВыбранныйВидРасхода = ВидРасхода;
		Если СписокВидовРасходов.ВыбратьЗначение(ВыбранныйВидРасхода,, Позиция,, 2) = 1 Тогда
			Если ВидРасхода <> ВыбранныйВидРасхода Тогда
				ВидРасхода = ВыбранныйВидРасхода;
			    ПриИзмененииВидаРасхода();
				ПриВыбореВидаРасхода();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ЭлементРасхода" Тогда
		
		Если ТипЗначения(ЭлементРасхода) = 0 Тогда
			Флаг = 0;
			
		ИначеЕсли ЭлементРасхода.Вид() = "ГруппыВидыРасходов" Тогда
			Флаг = 0;
			Если ВидОбъектаУчета = 1 Тогда // НИОКР
				Позиция = СписокЭлементовРасхода.НайтиЗначение(ЭлементРасхода);
				СписокЭлементовРасхода.ВыбратьЗначение(ЭлементРасхода,, Позиция,, 2);
				
			Иначе // НМА
				Если ВключитьВСоставРасходов <> 1 Тогда
					Позиция = СписокЭлементовРасхода.НайтиЗначение(ЭлементРасхода);
					СписокЭлементовРасхода.ВыбратьЗначение(ЭлементРасхода,, Позиция,, 2);    
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "НМА" Тогда
		Если ВидОбъектаУчета = 1 Тогда // НИОКР
			ОткрытьФорму("Справочник.НематериальныеАктивы.Поступление", "НИОКР");
		Иначе
			ОткрытьФорму("Справочник.НематериальныеАктивы.Поступление", "НМА");
		КонецЕсли;
	    
		Флаг = 0;
		
	ИначеЕсли ЭлементДиалога = "СпособНачисленияАмортизации" Тогда
		Если ВидОбъектаУчета = 1 Тогда // НИОКР
			Флаг = 0;
			СписокСпособовНачисленияАмортизации = СоздатьОбъект("СписокЗначений");
			СписокСпособовНачисленияАмортизации.ДобавитьЗначение(Перечисление.СпособыНачисленияАмортизацииНМА.Линейный);
			СписокСпособовНачисленияАмортизации.ДобавитьЗначение(Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукцииРабот);
			СписокСпособовНачисленияАмортизации.ВыбратьЗначение(СпособНачисленияАмортизации,,,, 2);
			ПриВыбореСпособаНачисленияАмортизации();
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "Субконто1" Тогда
		Если ВидОбъектаУчета = 1 Тогда // НИОКР
			Если ПолученыПоложительныеРезультаты = 0 Тогда // НИОКР не дали положит. рез.
				Если СчетЗатрат.Код = "91.2" Тогда
					Флаг = 0;
				    ОткрытьФорму("Справочник.ПрочиеДоходыИРасходы", Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()
//_____________________________________________________________________________
Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ПорядокНачисленияАмортизации = 2;
	ВключитьВСоставРасходов = 1;
	СпециальныйКоэффициент = 1;
	ПолученыПоложительныеРезультаты = 1; 
	Коэффициент = 1;
КонецПроцедуры //ВводНового

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаОбъемаВложений.Доступность(0);
	КонецЕсли;

	НачальнаяДатаДокумента = ДатаДок;
    
	СписокВидовОбъекта.ДобавитьЗначение(0, "Нематериальный актив");
	СписокВидовОбъекта.ДобавитьЗначение(1, "Расходы на НИОКР");
	СписокВидовОбъекта.ТекущаяСтрока(СписокВидовОбъекта.НайтиЗначение(ВидОбъектаУчета));
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Общие сведения");
	Форма.Закладки.ДобавитьЗначение("Бухгалтерский учет");
	Форма.Закладки.ДобавитьЗначение("Налоговый учет");
	УправлениеСтатикамиЭлементовДиалога();
	ПриВыбореЗакладки(, "Общие сведения");
	
	СписокВидовРасходов = СоздатьОбъект("СписокЗначений");
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.КосвенныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПрямыеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеТоваров);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеМатериалов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.СтроительствоОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеНематериальныхАктивов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеПрав);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ТранспортныеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПредставительскиеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РасходыНаРекламу);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НИОКР);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ВнереализационныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияПрочегоИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.БезвозмезднаяПередачаИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НеПринимаемые);
	
	СписокЭлементовРасхода = СоздатьОбъект("СписокЗначений");
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.МатериальныеРасходы);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РасходыНаРекламуБезНорм);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ИзучениеКонъюнктурыРынка);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РемонтОсновныхСредств);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ОхранаИмущества);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.УслугиПоУправлению);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.СоциальнаяЗащитаИнвалидов);
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
	
	ПриИзмененииВидаРасхода(1);
	
	Если ВидОбъектаУчета = 1 Тогда // НИОКР
		ПриВыбореРезультатаОтНИОКР();
		СписокЭлементовРасхода.ВставитьЗначение(1,Перечисление.ГруппыВидыРасходов.НИОКР);
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
    
	Если (ВидОбъектаУчета = 1) и (ПолученыПоложительныеРезультаты = 0) Тогда // НИОКР не дал положительного результата
	Иначе
		Если НМА.Выбран() = 0 Тогда
			Если Вопрос("Не выбран объект для принятия к учету.
						|Вернуться к редактированию документа?","Да+Нет") = "Да" Тогда
				Активизировать("НМА");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Операция.Содержание = "Принятие к учету НМА";
	Операция.СуммаОперации = БалансоваяСтоимость;
	
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");