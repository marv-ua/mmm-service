////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем ТекущийВариантРасчетаНалогов;
Перем Новый;
Перем СписокДействий;
Перем ТекДоговор;

//******************************************************************************
// УправлениеКурсом(ИзменитьКурс)
//
// Параметры:
//  ИзменитьКурс - Число. Определяет должна ли процедура установить новый курс.
//
// Описание:
//  Управлет видимостью поля "Курс".
//
Процедура УправлениеКурсом(ИзменитьКурс=0)
	
	Если ИзменитьКурс<>2 Тогда
		ВидимостьЭлементовДляПоступления = ?(ВидПоступления = 0,1,0);
		ВидимостьКурса = Договор.ВалютаДоговора.Выбран() * ВидимостьЭлементовДляПоступления;
		Форма.ПодписьКурса.Видимость(ВидимостьКурса);
		Форма.Курс.Видимость(ВидимостьКурса);
		
		Если ИзменитьКурс = 1 Тогда
			Если ВидимостьКурса = 1 Тогда
				Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
				
			Иначе
				Курс = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидПоступления = 0 Тогда
		ВидимостьФлагаЗКП = ?((Договор.Выбран() = 1) и (Договор.АвтоОбработкаНДС = 0) и (СчетФактураПредъявлен = 1) и (ДатаДок>='01.01.2006'), 1, 0);
		Форма.ВключатьВКнигуПокупок.Видимость(ВидимостьФлагаЗКП);
		
	Иначе
		Если ИзменитьКурс = 2 Тогда	
			ВключатьВКнигуПокупок = 0;	
		КонецЕсли;
		Форма.ВключатьВКнигуПокупок.Видимость(0);
	КонецЕсли;
	
КонецПроцедуры // УправлениеКурсом()

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 

	Стр = "";
	Если (Договор.Выбран() = 1) и (?(ВидПоступления = 0,1,0) = 1) Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Стр = "Валюта договора: " + Договор.ВалютаДоговора;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()
    
	глПриВыбореДоговора(Контрагент, Договор);
	УправлениеКурсом(1); // при изменении договора могла измениться валюта
	
	Если Договор <> ТекДоговор Тогда
		Если (Договор.Выбран() = 1) и (Договор.АвтоОбработкаНДС = 0) и (СчетФактураПредъявлен = 1) и (ДатаДок>='01.01.2006') Тогда
		    ВключатьВКнигуПокупок = 1;
			
		Иначе
			ВключатьВКнигуПокупок = 0;
		КонецЕсли;
	Иначе
		
		Если (Договор.АвтоОбработкаНДС = 1) и (ВключатьВКнигуПокупок = 1) Тогда
			ВключатьВКнигуПокупок = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекДоговор = Договор;
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Контрагент, Договор);
	ПриВыбореДоговора();
	
КонецПроцедуры // ПриВыбореКонтрагента()

//_____________________________________________________________________________
Функция ИтоговаяСтрока()
	Стр = "";
	ВидимостьЭлементовДляПоступления = ?(ВидПоступления = 0,1,0);
	Если 	ВидимостьЭлементовДляПоступления = 1 Тогда
		Стр = "Итого без налогов: " + СокрЛП(Формат((Итог("Всего")-Итог("НДС")-Итог("НП")),"Ч20.2-'"));
		Если Итог("НДС") = 0 Тогда
			Стр = Стр + ", без НДС";
		Иначе
			Стр = Стр + ", НДС: " + СокрЛП(Формат(Итог("НДС"),"Ч20.2-'"));
		КонецЕсли;
		Если Итог("НП") <> 0 Тогда
			Стр = Стр + ", НП: " + СокрЛП(Формат(Итог("НП"),"Ч20.2-'"));
		КонецЕсли;
		Стр = Стр + ", Всего: " + СокрЛП(Формат(Итог("Всего"),"Ч20.2-'"));
	КонецЕсли;
	Возврат Стр;
КонецФункции // ИтоговаяСтрока
//_____________________________________________________________________________
Процедура РассчитатьНалоги()
	НДС = глПоказательДокумента(Контекст, "НДС");
	НП = глПоказательДокумента(Контекст, "НП");
	Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП"));
КонецПроцедуры // РассчитатьНалоги
//_____________________________________________________________________________
Процедура Пересчет(ИмяРеквизита)
	Если ВидПоступления = 0 Тогда
		Если Материал.Выбран() = 1 Тогда
			Если (ИмяРеквизита = "Материал") Тогда
				Цена = глСуммаДокумента(Контекст, Материал, Материал.Цена);
				Если Количество <> 0 Тогда
					Пересчет("Цена")
				КонецЕсли;
			ИначеЕсли (ИмяРеквизита = "Количество") Тогда
				Если Сумма  = 0 Тогда
					Сумма = Цена*Количество;
					РассчитатьНалоги();
				Иначе
					Если Константа.ПриИзмененииКоличестваВПриходныхДокументах = 1 Тогда // пересчитывать сумму
						Сумма = Цена*Количество;
						РассчитатьНалоги();
					Иначе // пересчитывать цену
						Цена = ?(Количество = 0, Сумма, Сумма/Количество);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли (ИмяРеквизита = "Цена") Тогда
				Сумма = Цена*Количество;
				РассчитатьНалоги();
			ИначеЕсли (ИмяРеквизита = "Сумма") Тогда
				РассчитатьНалоги();
				Цена = ?(Количество = 0, Сумма, Сумма/Количество);
			ИначеЕсли (ИмяРеквизита = "НДС") или (ИмяРеквизита = "НП") Тогда
				Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Пересчет

//*****************************************************************************
// ПриВыбореВариантаРасчетаНалогов()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "ВариантРасчетаНалогов".
//
// Описание:
//  Пересчитывает суммы в документе при смене варианта расчета налогов.
//
Процедура ПриВыбореВариантаРасчетаНалогов()
	
	Если ВариантРасчетаНалогов = ТекущийВариантРасчетаНалогов Тогда
		Возврат
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
		Ответ = Вопрос("Пересчитать суммы налогов в существующих строках
		            |табличной части (суммы налогов будут
		            |обновлены в соответствии с выбранным вариантом)?", "Да+Нет+Отмена");
		Если Ответ = "Да" Тогда
			ОбщееКоличество = КоличествоСтрок();
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				РассчитатьНалоги();
				Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
			КонецЦикла;
			
		ИначеЕсли Ответ = "Отмена" Тогда
			ВариантРасчетаНалогов = ТекущийВариантРасчетаНалогов;
		КонецЕсли;
	КонецЕсли;
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		НДС = ?(УчитыватьНДС = 0, 0, НДС);
		НП = ?(УчитыватьНП = 0, 0, НП);
	КонецЦикла;
	ВидимостьЭлементовДляПоступления = ?(ВидПоступления = 0,1,0);
	Форма.НДС.Видимость(УчитыватьНДС  * ВидимостьЭлементовДляПоступления);
	Форма.НП.Видимость(УчитыватьНП * ВидимостьЭлементовДляПоступления);
	
КонецПроцедуры // ПриВыбореВариантаРасчетаНалогов()

//_____________________________________________________________________________
Функция ВариантРасчетаБезНалогов()
	СпрВарНал = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
	Если СпрВарНал.НайтиПоНаименованию("Без налогов") = 0 Тогда
		СпрВарНал.Новый();
		СпрВарНал.СуммаВключаетНДС = 0;
		СпрВарНал.СуммаВключаетНП = 0;
		СпрВарНал.СтавкаНДС = глБезНалога("НДС");
		СпрВарНал.СтавкаНП = глБезНалога("НП");
		СпрВарНал.Наименование = "Без налогов";
		СпрВарНал.Записать();
	КонецЕсли;
	Возврат СпрВарНал.ТекущийЭлемент();
КонецФункции
//_____________________________________________________________________________
Процедура ПриВыбореВариантаЗачетаАванса()
	ЗачитыватьАванс = ВариантЗачетаАванса.ПолучитьЗначение(ВариантЗачетаАванса.ТекущаяСтрока());
КонецПроцедуры //ПриВыбореВариантаЗачетаАванса
//_____________________________________________________________________________
Процедура ПриВыбореСчетаЗатрат()
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто"+А,СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
КонецПроцедуры //ПриВыбореСчета
//_____________________________________________________________________________
Процедура Подбор()
	ОткрытьПодбор("Справочник.Материалы");
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриПредъявленииСчетаФактуры()
	Если СчетФактураПредъявлен = 1 Тогда
		Форма.ДатаНомерСчетаФактуры.Доступность(1);
	Иначе
		Форма.ДатаНомерСчетаФактуры.Доступность(0);
		ДатаНомерСчетаФактуры = "";
	КонецЕсли; 
	
	Если (Договор.Выбран() = 1) и (Договор.АвтоОбработкаНДС = 0) и (СчетФактураПредъявлен = 1) и (ДатаДок>='01.01.2006') Тогда
		ВключатьВКнигуПокупок = 1;
		Форма.ВключатьВКнигуПокупок.Видимость(1);
	Иначе
		ВключатьВКнигуПокупок = 0;
		Форма.ВключатьВКнигуПокупок.Видимость(0);
	КонецЕсли;

КонецПроцедуры
//_____________________________________________________________________________
Процедура ОбработкаПодбора(ВыбрМатериал)
	Кол = 1;
	Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
		Возврат;
	ИначеЕсли Кол = 0 Тогда
		Возврат;
	КонецЕсли;
	Сум = 0;
	Если ВидПоступления = 0 Тогда // не возврат из переработки
		Сум = глСуммаДокумента(Контекст, ВыбрМатериал, ВыбрМатериал.Цена, Кол);
		Если ВвестиЧисло(Сум, "Введите сумму", 15, 2) = 0 Тогда
			Возврат;
		ИначеЕсли Сум = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	НоваяСтрока();
	Материал = ВыбрМатериал;
	Количество = Кол;
	Сумма = Сум;
	АктивизироватьСтроку();
	Пересчет("Сумма");
КонецПроцедуры
//_____________________________________________________________________________
Процедура Печать()
	// инициализация таблицы
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("М-4");
	Если ВидПоступления <> 0 Тогда
		Если Проведен() = 0 Тогда
			ТекстПредупреждения = "Для непроведенного документа графы ""Цена"" и ""Сумма"" не заполняются.";
			Таб.ВывестиСекцию("Предупреждение");
		ИначеЕсли Модифицированность() = 1 Тогда
			Предупреждение("Для печати документ необходимо перепровести.");
			Возврат;
		КонецЕсли;   
	КонецЕсли;
	
	// Для документов в валюте определим коэффициент пересчета в рубли - "К".
	Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
		Кратность = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
		Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
	    К = Курс/?(Кратность = 0, 1, Кратность);
		
	Иначе
		К = 1;
	КонецЕсли;
	
	// Выгрузим табличную часть документа в таблицу значений.
	ТабДок = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТабДок); 
	
	//************************************************************************************
	//Для документов в у.е и валюте
	Если ВидПоступления = 0 Тогда
		ТекстПредупреждения = "";
		ДокументВУЕ = 0; 
		ДокументВВАЛ = 0; 
		
		ЦеныВДоговоре = 1; // в рублях
		ОплатаДоговора = 1; // в рублях
		
		Если Договор.Выбран() = 1 Тогда
			Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
				ЦеныВДоговоре = 2; // в валюте
				ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
				Если ОплатаДоговора = 1 Тогда
					ДокументВУЕ = 1; 
					ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;				
				Иначе
					ДокументВВАЛ = 1; 
					ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если (ДокументВУЕ = 1)
		ИЛИ ((ДокументВВАЛ = 1) И (ДатаДок >= '01.01.2008')) Тогда
			К = 1;
			Опер = СоздатьОбъект("Операция");
			Если ДокументВУЕ = 1 Тогда
				Сч60_6 = СчетПоКоду("60.6");
				Сч60_7 = СчетПоКоду("60.7");
			Иначе
				Сч60_6 = СчетПоКоду("60.11");
				Сч60_7 = СчетПоКоду("60.22");
			КонецЕсли;
			
			
			СуммаЗачетаВал = 0;
			СуммаЗачетаРуб = 0;
			ЗадолженностьВал = 0;
			ЗадолженностьРуб = 0;
			
			Если Опер.НайтиОперацию(ТекущийДокумент()) = 1 Тогда
				Опер.ВыбратьПроводки();
				Пока Опер.ПолучитьПроводку() = 1 Цикл
					Если (Опер.Дебет.Счет = Сч60_6) и (Опер.Кредит.Счет = Сч60_7) Тогда
						СуммаЗачетаВал = СуммаЗачетаВал + Опер.ВалСумма;
						СуммаЗачетаРуб = СуммаЗачетаРуб + Опер.Сумма;
					КонецЕсли;
					
					Если Опер.Кредит.Счет = Сч60_6 Тогда
						ЗадолженностьВал = ЗадолженностьВал + Опер.ВалСумма;
						ЗадолженностьРуб = ЗадолженностьРуб + Опер.Сумма;						
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ЗадолженностьПоДокументуРуб = ЗадолженностьРуб;

			ВалютаДок = Договор.ВалютаДоговора;
			
			Если ВерсияОбъекта < "7.70.421" Тогда
				ЦеныВДоговоре = 2;
				КурсДок = ВалютаДок.Курс.Получить(ДатаДок);
			КонецЕсли;
			
			Если ЦеныВДоговоре = 2 Тогда
				Кратность = ВалютаДок.Кратность.Получить(ДатаДок);
				Кратность = ?(Кратность=0, 1, Кратность);
				Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
					Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
				КонецЕсли;
			КонецЕсли;
			
			ДоляОплаченнойОтгрузки = ?(ЗадолженностьВал = 0, 0, СуммаЗачетаВал / ЗадолженностьВал);
			КурсОплаты = ?(СуммаЗачетаВал = 0, 0, Окр(СуммаЗачетаРуб / СуммаЗачетаВал, 4, 1));
			КурсСФ = Курс / Кратность;
			
			ТабДок.ВыбратьСтроки();
			Пока ТабДок.ПолучитьСтроку()= 1 Цикл
				
				ОплСумма = ТабДок.Сумма * ДоляОплаченнойОтгрузки;
				ТабДок.Сумма = Окр(ОплСумма * КурсОплаты + (ТабДок.Сумма - ОплСумма) * КурсСФ, 2, 1);
				
				ОплНДС = ТабДок.НДС * ДоляОплаченнойОтгрузки;
				Если ДокументВВАЛ = 1 Тогда
					ТабДок.НДС = Окр(ТабДок.НДС * КурсСФ, 2, 1);
				Иначе
					ТабДок.НДС = Окр(ОплНДС * КурсОплаты + (ТабДок.НДС - ОплНДС) * КурсСФ, 2, 1);
				КонецЕсли;
				
				ОплНП = ТабДок.НП * ДоляОплаченнойОтгрузки;
				ТабДок.НП = Окр(ОплНП * КурсОплаты + (ТабДок.НП - ОплНП) * КурсСФ, 2, 1);
				
				ОплЦена = ТабДок.Цена * ДоляОплаченнойОтгрузки;
				Если ДокументВВАЛ = 1 Тогда
					ТабДок.Цена = Окр(ТабДок.Сумма / ?(ТабДок.Количество = 0, 1, ТабДок.Количество), 2, 1);
				Иначе
					ТабДок.Цена = Окр(ОплЦена * КурсОплаты + (ТабДок.Цена - ОплЦена) * КурсСФ, 2, 1);
				КонецЕсли;
				
				ОплВсего = ТабДок.Всего * ДоляОплаченнойОтгрузки;
				ТабДок.Всего  = Окр(ОплВсего * КурсОплаты + (ТабДок.Всего  - ОплВсего) * КурсСФ, 2, 1);
				
			КонецЦикла;
			
			Если Проведен() = 1 Тогда
				Если (ЗадолженностьПоДокументуРуб <> ТабДок.Итог("Всего")) и (ДоляОплаченнойОтгрузки <> 0) Тогда
					ТекстПредупреждения = "Внимание! Сумма документа отличается от суммы отраженной в бухгалтерском учете. Возможно следует перепровести документ.";
					Таб.ВывестиСекцию("Предупреждение");					
				Иначе
					ТекстПредупреждения = "";
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	//*****************************************************************************
	// формирование шапки
	СекцияШапка = Таб.ПолучитьСекцию("Шапка");
	СекцияШапка.Номер                    = СокрЛП(НомерДок);
	СекцияШапка.ДатаСоставления          = Формат(ДатаДок, "Д (0)ДДММГГГГ");
	СекцияШапка.Организация              = "Организация: " + Константа.НазваниеОрганизации;
	СекцияШапка.КодОКПО                  = СокрЛП(Константа.КодОКПО);
	Если ВидПоступления = 0 Тогда
		СекцияШапка.МестоХранения            = МестоХранения;
		СекцияШапка.СтруктурноеПодразделение = "Структурное подразделение: " + МестоХранения;
	Иначе
		СекцияШапка.МестоХранения            = "";
		СекцияШапка.СтруктурноеПодразделение = "Структурное подразделение: ";
	КонецЕсли;
	СекцияШапка.Поставщик                = СокрП(Контрагент.ПолнНаименование);
	СекцияШапка.КодПоставщика            = Контрагент.Код;
	Если ВидПоступления = 0 Тогда
		СекцияШапка.КорСчет                  = "60.1";
	Иначе
		СекцияШапка.КорСчет                  = "10.7";
	КонецЕсли;
	Таб.ВывестиСекцию(СекцияШапка);

	// формирование строк
	СекцияСтрока = Таб.ПолучитьСекцию("Строка");
	ТабДок.ВыбратьСтроки();
	Пока ТабДок.ПолучитьСтроку() = 1 Цикл
		СекцияСтрока.Материал            = ТабДок.Материал;
		СекцияСтрока.НоменклатурныйНомер = ТабДок.Материал.Код;
		СекцияСтрока.КодЕдиницыИзмерения = ТабДок.Материал.ЕдиницаИзмерения.Код;
		СекцияСтрока.ЕдиницаИзмерения    = ТабДок.Материал.ЕдиницаИзмерения;
		СекцияСтрока.Принято             = СокрЛ(Формат(ТабДок.Количество, "Ч 15.3."));
		Если ВидПоступления = 0 Тогда
			СумБезНДС = ТабДок.Всего - ТабДок.НДС;
			СекцияСтрока.Цена                = СокрЛ(Формат((?(ТабДок.Количество = 0, 0, К*СумБезНДС/ТабДок.Количество)), "Ч 15.2.,"));
			СекцияСтрока.Сумма               = СокрЛ(Формат((К*СумБезНДС), "Ч 15.2.,"));
			СекцияСтрока.НДС                 = СокрЛ(Формат(К*ТабДок.НДС, "Ч 15.2.,"));
			СекцияСтрока.Всего               = СокрЛ(Формат(К*ТабДок.Всего, "Ч 15.2.,"));
			Таб.ВывестиСекцию(СекцияСтрока);
		ИначеЕсли Проведен() = 0 Тогда
			СекцияСтрока.Цена                = СокрЛ(Формат(0, "Ч 15.2.,"));
			СекцияСтрока.Сумма               = СокрЛ(Формат(0, "Ч 15.2.,"));
			СекцияСтрока.НДС                 = СокрЛ(Формат(0, "Ч 15.2.,"));
			СекцияСтрока.Всего               = СокрЛ(Формат(0, "Ч 15.2.,"));
			Таб.ВывестиСекцию(СекцияСтрока);
		Иначе
			СекцияСтрока.Цена                = СокрЛ(Формат((?(ТабДок.Количество = 0, 0, К*ТабДок.Сумма/ТабДок.Количество)), "Ч 15.2.,"));
			СекцияСтрока.Сумма               = СокрЛ(Формат((К*ТабДок.Сумма), "Ч 15.2.,"));
			СекцияСтрока.НДС                 = СокрЛ(Формат(0, "Ч 15.2.,"));
			СекцияСтрока.Всего               = СокрЛ(Формат(К*ТабДок.Всего, "Ч 15.2.,"));
			Таб.ВывестиСекцию(СекцияСтрока);
		КонецЕсли;
		Состояние("Выведено строк: " + НомерСтроки);
	КонецЦикла;

	// формирование подвала
	СекцияПодвал = Таб.ПолучитьСекцию("Подвал");
	Если ВидПоступления = 0 Тогда
		СекцияПодвал.ИтогоКоличество = СокрЛ(Формат(ТабДок.Итог("Количество"), "Ч 15.3."));
		СекцияПодвал.ИтогоСумма      = СокрЛ(Формат((К*ТабДок.Итог("Всего") - К*ТабДок.Итог("НДС")), "Ч 15.2.,"));
		СекцияПодвал.ИтогоНДС        = СокрЛ(Формат(К*ТабДок.Итог("НДС"), "Ч 15.2.,"));
		СекцияПодвал.ИтогоВсего      = СокрЛ(Формат(К*ТабДок.Итог("Всего"), "Ч 15.2.,"));
		Таб.ВывестиСекцию(СекцияПодвал);
	ИначеЕсли Проведен() = 0 Тогда
		СекцияПодвал.ИтогоКоличество = СокрЛ(Формат(0, "Ч 15.3."));
		СекцияПодвал.ИтогоСумма      = СокрЛ(Формат(0, "Ч 15.2.,"));
		СекцияПодвал.ИтогоНДС        = СокрЛ(Формат(0, "Ч 15.2.,"));
		СекцияПодвал.ИтогоВсего      = СокрЛ(Формат(0, "Ч 15.2.,"));
		Таб.ВывестиСекцию(СекцияПодвал);
	Иначе
		СекцияПодвал.ИтогоКоличество = СокрЛ(Формат(ТабДок.Итог("Количество"), "Ч 15.3."));
		СекцияПодвал.ИтогоСумма      = СокрЛ(Формат(К*(ТабДок.Итог("Сумма")), "Ч 15.2.,"));
		СекцияПодвал.ИтогоНДС        = СокрЛ(Формат(0, "Ч 15.2.,"));
		СекцияПодвал.ИтогоВсего      = СокрЛ(Формат(К*ТабДок.Итог("Всего"), "Ч 15.2.,"));
		Таб.ВывестиСекцию(СекцияПодвал);
	КонецЕсли;

	// вывод результирующей таблицы на экран
	Таб.ПовторятьПриПечатиСтроки(15, 15);
	Если ВидПоступления = 0 Тогда
		Таб.Опции(0,0,0,0,"ОпцииПечатиМ4","ОкноМ4");
		Таб.ОбластьПечати(?(ПустоеЗначение(ТекстПредупреждения) = 0, 2, 1), 2,,);
	Иначе
		Таб.Опции(0,0,?(Проведен() = 0, 1, 0),0,"ОпцииПечатиМ4","ОкноМ4");
		Таб.ОбластьПечати(?(Проведен() = 0, 2, 1), 2,,);
	КонецЕсли;
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать приходного ордера форма №М-4","");
КонецПроцедуры // Печать

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура УправлениеВидимостьюРеквизитов()
	Если Форма.ИспользоватьЗакладки() = 1 Тогда
		Если Форма.Закладки.ТекущаяСтрока() <> 1 Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	ВидимостьЭлементовДляПоступления = ?(ВидПоступления = 0,1,0);
	Форма.ВариантЗачетаАванса.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.ТекстВариантЗачетаАванса.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.МестоХранения.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.ТекстМестоХранения.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.ВариантРасчетаНалогов.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.ТекстВариантРасчетаНалогов.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.НДСВключатьВСтоимость.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.СчетФактураПредъявлен.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.ДатаНомерСчетаФактуры.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.Цена.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.Сумма.Видимость(ВидимостьЭлементовДляПоступления);
	Форма.Всего.Видимость(ВидимостьЭлементовДляПоступления);

	УправлениеКурсом();	

	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
 	Форма.НДС.Видимость(УчитыватьНДС  * ВидимостьЭлементовДляПоступления);
	Форма.НП.Видимость(УчитыватьНП * ВидимостьЭлементовДляПоступления);
	
	Стр = ?(ВидПоступления = 0, "Поставщик:", "Подрядчик:");
	Форма.ТекстКонтрагента.Заголовок(Стр);
	
КонецПроцедуры // УправлениеВидимостьюРеквизитов
//_____________________________________________________________________________
Процедура УправлениеЗакладками()
	Если ВидПоступления = 1 Тогда
		Форма.ИспользоватьЗакладки(1);
		Форма.Закладки.УдалитьВсе();
		Форма.Закладки.ДобавитьЗначение("Поступление");
		Форма.Закладки.ДобавитьЗначение("Счет затрат");
	Иначе
		Форма.ИспользоватьЗакладки(0);
	КонецЕсли;	
КонецПроцедуры // УправлениеЗакладками
//_____________________________________________________________________________
Процедура УправлениеДиалогом()
	УправлениеЗакладками();
	УправлениеВидимостьюРеквизитов();
	ОбщееКоличество = КоличествоСтрок();
	Если ВидПоступления = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Пересчет("Сумма");
			Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // УправлениеДиалогом

//_____________________________________________________________________________
Процедура ПриВыбореВидаОперации()
	
	ВидПоступления = ВидПоступленияМатериалов.ТекущаяСтрока() - 1;
	
	Если ВидПоступления <> 0 Тогда
		ВключатьВКнигуПокупок = 0;
	
	Иначе
	    Если (Договор.Выбран() = 1) и (Договор.АвтоОбработкаНДС = 0) и (СчетФактураПредъявлен = 1) и (ДатаДок>='01.01.2006') Тогда
		    ВключатьВКнигуПокупок = 1;
			
		Иначе
			ВключатьВКнигуПокупок = 0;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриВыбореВидаОперации()

//_____________________________________________________________________________
//
// Продопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки,ЗначениеЗакладки)
	Если НомерЗакладки = 1 Тогда
	    Форма.ИспользоватьСлой("Основной,Поступление",2);
	Иначе
	    Форма.ИспользоватьСлой("Основной, СчетЗатрат",2);
	КонецЕсли;
	УправлениеВидимостьюРеквизитов();
КонецПроцедуры
//_____________________________________________________________________________
Процедура ВводНового(Копирование) // Предопределенная процедура
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;
    Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    Контрагент = Форма.Параметр.Получить("Контрагент");
	КонецЕсли;
	МестоХранения = глЗначениеПоУмолчанию("ОсновнойСклад");
	ЗачитыватьАванс = 0;
	ВариантРасчетаНалогов = Константа.ОсновнойВариантРасчетаНалогов;
	Если Константа.ОрганизацияЯвляетсяПлательщикомНДС = Нет Тогда
		НДСвключатьВСтоимость = 1;
	КонецЕсли;
//	СчетФактураПредъявлен = 1;
КонецПроцедуры // ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии() // Предопределенная процедура
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);

	Форма.ИспользоватьСлой("Основной, Поступление");
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПодбор.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
	КонецЕсли;
	Если (ПустоеЗначение(ДатаНомерСчетаФактуры) = 1) и (Выбран() = 1) Тогда
		СчетФактураПредъявлен = 0;
		Форма.ДатаНомерСчетаФактуры.Доступность(0);
	Иначе
	//	СчетФактураПредъявлен = 1;
		Форма.ДатаНомерСчетаФактуры.Доступность(1);
	КонецЕсли;
	
	ВариантЗачетаАванса.ДобавитьЗначение(1, "не зачитывать");
	ВариантЗачетаАванса.ДобавитьЗначение(2, "только по договору");
	ВариантЗачетаАванса.ДобавитьЗначение(0, "без указания договора");
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));

	ВидПоступленияМатериалов.ДобавитьЗначение("Поступление от поставщика");
	ВидПоступленияМатериалов.ДобавитьЗначение("Поступление из переработки");
	ВидПоступленияМатериалов.ТекущаяСтрока(ВидПоступления+1);
	Стр = ?(ВидПоступления = 0, "Поставщик:", "Подрядчик:");
	Форма.ТекстКонтрагента.Заголовок(Стр);

	Форма.Материал.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Количество.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Цена.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Сумма.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НП.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Всего.ВыполнятьФормулуТолькоПриИзменении(1);
	
	НачальнаяДатаДокумента = ДатаДок;
	
	УправлениеЗакладками();
	Если Форма.ИспользоватьЗакладки() = 1 Тогда
	    Форма.Закладки.ТекущаяСтрока(1);
	КонецЕсли;
	УправлениеВидимостьюРеквизитов();
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	ТекДоговор = Договор;

КонецПроцедуры // ПриОткрытии

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВариантРасчетаНалогов" Тогда
		ТекущийВариантРасчетаНалогов = ВариантРасчетаНалогов;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//_____________________________________________________________________________
Процедура ПриЗаписи() // Предопределенная процедура
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли (СокрЛП(ДатаНомерСчетаФактуры) = "") и (СчетФактураПредъявлен = 1) и (ВидПоступления = 0) Тогда
		Предупреждение("Введите данные о документе поставщика
					   |или поставьте переключатель в положение
					   |""Счет-фактура поставщиком не предъявлен""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ВидПоступления = 0 Тогда
		ЦеныВДоговоре = 1; //в рублях
		Если Договор.Выбран() = 1 Тогда
		    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
				ЦеныВДоговоре = 2; //в валюте
			КонецЕсли;
		КонецЕсли;
		
		Если ЦеныВДоговоре = 2 Тогда
			Валюта = Договор.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
				Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
			КонецЕсли;
			Операция.СуммаОперации = Окр(Итог("Всего")*Курс/Кратность, 2, 1);
		Иначе
			Операция.СуммаОперации = Итог("Всего");
		КонецЕсли;
	КонецЕсли;
	
	Операция.Содержание = "Поступление материалов";
	
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		КонтекстЖурнала = Форма.Параметр.Получить("КонтекстЖурнала");
		Если ПустоеЗначение(КонтекстЖурнала) = 0 Тогда
			КонтекстЖурнала.Активизировать(КонтекстЖурнала.Форма.ТекущаяКолонка(), 0);
			
		Иначе
			глОткрытьЖурнал(Контекст, Новый);
		КонецЕсли;
		
	Иначе
		глОткрытьЖурнал(Контекст, Новый);
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Приходный ордер";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
