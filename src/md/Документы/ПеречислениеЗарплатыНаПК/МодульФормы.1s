Перем гФайлДанных;

Процедура ПечатьПеречисляемыхСумм()
	
	ТСотрудников 	 = СоздатьОбъект("ТаблицаЗначений");
	ВременнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПлатежнаяВедомость.ВыгрузитьТабличнуюЧасть(ВременнаяТаблица);
		Если ТСотрудников.КоличествоКолонок() = 0 тогда                   
			ВременнаяТаблица.Выгрузить(ТСотрудников);
		Иначе
			глПереписатьИзТаблицыВТаблицу(ВременнаяТаблица, ТСотрудников);
		КонецЕсли;
	КонецЦикла;
	
	Таблица = СоздатьОбъект("Таблица");
	Таблица.ИсходнаяТаблица("ВБанк");
	Таблица.ВывестиСекцию("Шапка");
	СуммаИтого = 0;
	НомерПП = 0;
	ТСотрудников.ВыбратьСтроки();
	Пока ТСотрудников.ПолучитьСтроку()=1 Цикл
		НомерПП = НомерПП+1;
		Таблица.ВывестиСекцию("Строка");
		СуммаИтого = СуммаИтого + ТСотрудников.КВыдаче;
	КонецЦикла;
	Таблица.ВывестиСекцию("Подвал");
	Таблица.ТолькоПросмотр(1);
	Таблица.Опции(0,0,0,0,"_ПАРАМЕТРЫ_ПЕЧАТИ_В_Банк_");
	Таблица.ПараметрыСтраницы(1,,,5,5,0,0);
	//Если СохранятьОтчетыНаДиске = 1 Тогда
	//	Таблица.Записать(КаталогПользователя()+"Перечень перечисляемых в банк сумм №"+СокрЛП(НомерДок)+" за "+СокрЛП(ЖрнЗарплата.ОписательПериода(ДатаПериода)));
	//КонецЕсли;
	Таблица.Показать("Перечень перечисляемых сумм");
		
КонецПроцедуры
		
Процедура ПриВыбореКаталога()
	Форма.кнПечать.Доступность(ФС.СуществуетФайл(ПутьКФайлу + ИмяФайла))
КонецПроцедуры

Процедура Печать()
	
	ТабПечатиЛС = СоздатьОбъект("Таблица");
	ТабПечатиЛС.ИсходнаяТаблица("ПечатьЛС");
	глОбработатьXMLФайл("ПечатьПеречисленияЗарплаты", ИмяФайла, , ТабПечатиЛС);
	
КонецПроцедуры

Процедура ОткрытьФайлДляПросмотра(ИмяФайлаДляПросмотра)
	
	Если ФС.СуществуетФайл(ИмяФайлаДляПросмотра) = 1 Тогда 
		ЗапуститьПриложение(ИмяФайлаДляПросмотра);
	Иначе 
		Предупреждение("Файл с таким именем не существует!");					
	КонецЕсли;    
	
КонецПроцедуры

Процедура Подбор()
	
	Если Форма.МодальныйРежим() = 0 тогда
		ОткрытьПодбор("Документ.ВыплатаЗПКасса","ДляВыбора",,1);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	
	НоваяСтрока();
	ПлатежнаяВедомость = Элемент;
	
КонецПроцедуры

Функция НайтиПервыйСуществующийФайл(СписокВозможныхМест)
	
	Для Сч = 1 По СписокВозможныхМест.РазмерСписка() Цикл
		ПолноеИмя = СписокВозможныхМест.ПолучитьЗначение(Сч);
		Если Фс.СуществуетФайл(ПолноеИмя) = 1 Тогда	Возврат(ПолноеИмя)	КонецЕсли;
	КонецЦикла;
	
	Возврат("");
	
КонецФункции		//	НайтиПервыйСуществующийФайл()

Процедура ВводНового(Копирование, Объект)
	глЗаполнитьШапку(Контекст, Копирование);
	СпрВалюты = СоздатьОбъект("Справочник.Валюты");
	СпрВалюты.НайтиПоКоду("810");
	ВалютаРубли = СпрВалюты.ТекущийЭлемент();
	Валюта = ВалютаРубли;
КонецПроцедуры

Процедура ПриОткрытии()
	
	////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Поиск внешней компоненты V7Plus.dll
	
	СписокВозможныхМест	=	СоздатьОбъект("СписокЗначений");
	СписокВозможныхМест.ДобавитьЗначение(КаталогИБ()		+	"v7plus.dll"	);
	СписокВозможныхМест.ДобавитьЗначение(КаталогПрограммы()	+	"v7plus.dll"	);
	СписокВозможныхМест.ДобавитьЗначение(КаталогИБ()		+	"ExtForms\"	+	"v7plus.dll"	);
	
	гПутьОбъекта_КомпонентаV7plus = НайтиПервыйСуществующийФайл(СписокВозможныхМест);
	
	Если ЗагрузитьВнешнююКомпоненту(гПутьОбъекта_КомпонентаV7plus) <> 1	Тогда
		Предупреждение("Компонента v7plus.dll не найдена!");
		СтатусВозврата(0);	Возврат;
	КонецЕсли;
	ПутьКФайлу = КаталогПользователя();
	ПриВыбореКаталога();

	ПриЗаписиПерепроводить(1);
	
КонецПроцедуры

Процедура СформироватьФайлНаПеречислениеЗарплаты()
	
	ТСотрудников 	 = СоздатьОбъект("ТаблицаЗначений");
	ВременнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПлатежнаяВедомость.ВыгрузитьТабличнуюЧасть(ВременнаяТаблица);
		Если ТСотрудников.КоличествоКолонок() = 0 тогда                   
			ВременнаяТаблица.Выгрузить(ТСотрудников);
		Иначе
			глПереписатьИзТаблицыВТаблицу(ВременнаяТаблица, ТСотрудников);
		КонецЕсли;
	КонецЦикла;
	
	// инициализация обработчика сообщений
	ОбработчикСообщений = глСоздатьТрассировку("Формирование файла:");
	НеФормироватьФайл = 0;
	
	гФайлДанных = глСоздатьВыходнойXMLФайл();
	
	ПолученноеИмяФайла = глПолучитьИмяXMLФайла(ОтделениеБанка, НомерДок, "z");
	
	Если СокрЛП(ИмяФайла) <> СокрЛП(ПолученноеИмяФайла) тогда
		ИмяФайла = ПолученноеИмяФайла;
	КонецЕсли;
	
	Корень		= гФайлДанных;
	ЭлСчетаПК 	= глСоздатьЭлементСчетаПК(Корень, НомерДоговора, РасчетныйСчет, ОбработчикСообщений, НеФормироватьФайл);
	
	ЭлОткрытиеСчетов = ЭлСчетаПК.СоздатьПодчиненныйЭлемент("ЗачислениеЗарплаты");
	
	КоличествоЗаписей = 0;
	СуммаИтого = 0;
	
	ВсегоСотрудников = ТСотрудников.КоличествоСтрок();
	Для индСотрудника = 1 по ВсегоСотрудников Цикл
		ТСотрудников.ПолучитьСтрокуПоНомеру(индСотрудника);
		ЭлСотрудник = глСоздатьЭлементСотрудник(ЭлОткрытиеСчетов, индСотрудника, ТСотрудников, ОтделениеБанка, ФилиалОтделенияБанка);
		
		Если ПустоеЗначение(ТСотрудников.Сотрудник.НомерЗарплатногоСчета) = 0 тогда
			ЭлЛицевойСчет = ЭлСотрудник.СоздатьПодчиненныйЭлемент("ЛицевойСчет");
			ЭлЛицевойСчет.Значение = ТСотрудников.Сотрудник.НомерЗарплатногоСчета;
		Иначе
			спр = СоздатьОбъект("Справочник.Сотрудники");
			спр.НайтиЭлемент(ТСотрудников.Сотрудник);
			глСообщениеТрассировки(ОбработчикСообщений, "У сотрудника " + глФамилияИмяОтчество(ТСотрудников.Сотрудник) + " не указан лицевой счет",,,,,,,,,,, ТСотрудников.Сотрудник);
			НеФормироватьФайл = 1;
		КонецЕсли;
		
		Если ПустоеЗначение(ТСотрудников.КВыдаче) = 0 тогда
			ЭлСумма = ЭлСотрудник.СоздатьПодчиненныйЭлемент("Сумма");
			ЭлСумма.Значение = ТСотрудников.КВыдаче;
		Иначе
			глСообщениеТрассировки(ОбработчикСообщений, "У сотрудника " + глФамилияИмяОтчество(ТСотрудников.Сотрудник) + " не указана сумма, перечисляемая на лицевой счет",,,,,,,,,,, ТСотрудников.Сотрудник.ТекущийЭлемент());
			НеФормироватьФайл = 1;
		КонецЕсли;
		
		//ЭлКодВалюты = ЭлСотрудник.СоздатьПодчиненныйЭлемент("КодВалюты");
		//ЭлКодВалюты.Значение = Валюта.Код;
		
		КоличествоЗаписей = КоличествоЗаписей + 1;
		СуммаИтого = СуммаИтого + ТСотрудников.КВыдаче;
		
	КонецЦикла;
	
	глСоздатьЭлементКонтрольныеСуммы(ЭлСчетаПК, КоличествоЗаписей, СуммаИтого);
	
	Если НеФормироватьФайл = 1 тогда
		глСообщениеТрассировки(ОбработчикСообщений, "Файл не сформирован!");
		глПоказатьТрассировку(ОбработчикСообщений);
		гФайлДанных = "";
	Иначе
		гФайлДанных.Записать(ПутьКФайлу+ИмяФайла);
		глСообщениеТрассировки(ОбработчикСообщений, "Формирование файла " + ИмяФайла + " завершено", 0);
		глПоказатьТрассировку(ОбработчикСообщений);
	КонецЕсли;
	
КонецПроцедуры


Процедура ВыборКаталога(ИмяКаталога)
	
	//Каталог = "";
	//Стр = "Файл настройки (*." + Фильтр + ")|*." + Фильтр + "";

	Если ФС.ВыбратьКаталог(ИмяКаталога, "Выберите каталог") = 1 Тогда
	    ПутьКФайлу = ИмяКаталога;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдЭлементаДиалога, Фл)
    
	Если ИдЭлементаДиалога = "ПутьКФайлу" Тогда
	         
		ВыборКаталога(ПутьКФайлу);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи()
	Если Константа.ВсеДокументыВЖурналОпераций = Да Тогда
		СуществуетОперация(1); 
		Операция.СуммаОперации = 0;
		Операция.Содержание = "Перечисление зарплаты на пластиковые карты";
	Иначе
		СуществуетОперация(0);
	КонецЕсли;
КонецПроцедуры
