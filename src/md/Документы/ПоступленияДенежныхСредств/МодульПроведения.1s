//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
		Предупреждение("Документ не формирует проводок, т.к. установлен способ ведения
					   |налогового учета - ""Одновременно с бухгалтерским учетом"" !");
		Возврат;
	КонецЕсли;
	
	СписокКонтрагентов = СоздатьОбъект("СписокЗначений");
	СписокДоговоровКонтрагентов = СоздатьОбъект("СписокЗначений");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.ПрочиеПоступленияСвязанныеСВозникновениемЗадолженности Тогда
			СписокКонтрагентов.ДобавитьЗначение(Контрагент);
			СписокДоговоровКонтрагентов.ДобавитьЗначение(Договор);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокКонтрагентов.РазмерСписка() > 0 Тогда
		БИН13 = СоздатьОбъект("БухгалтерскиеИтоги"); БИН13.ИспользоватьРазделительУчета(ЮрЛицо);
		БИН13.ИспользоватьСубконто(ВидыСубконто.Контрагенты, СписокКонтрагентов, 2);
		БИН13.ИспользоватьСубконто(ВидыСубконто.Договоры, СписокДоговоровКонтрагентов, 2);
		БИН13.ВыполнитьЗапрос(ДатаДок, ДатаДок, "Н13.01");
	КонецЕсли;
	

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(УсловиеИлиВидПоступления) = 1 Тогда
			ТекстСообщения = "В строке №" + НомерСтроки + " не указано условие поступления.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ПривязыватьСтроку(НомерСтроки);
		
		Если УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.Оплата Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.СодержаниеПроводки = НаименованиеОперации;
			Операция.НомерЖурнала = "НУ";
			Операция.Сумма = Сумма;
			Операция.Кредит.Счет = СчетПоКоду("Н13.01");
			Операция.Кредит.Контрагенты = Контрагент;
			Операция.Кредит.Договоры = Договор;
			
		ИначеЕсли УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.Аванс Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.СодержаниеПроводки = НаименованиеОперации;
			Операция.НомерЖурнала = "НУ";
			Операция.Сумма = Сумма;
			Операция.Кредит.Счет = СчетПоКоду("Н13.02");
			Операция.Кредит.Контрагенты = Контрагент;
			Операция.Кредит.Договоры = Договор;
			
			Если НДС <> 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.СодержаниеПроводки = НаименованиеОперации;
				Операция.НомерЖурнала = "НУ";
				Операция.Сумма = НДС;
				Операция.Кредит.Счет = СчетПоКоду("Н13.03");
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;
			КонецЕсли;

		ИначеЕсли УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.ПолучениеСредствПереданныхРанееНаУсловияхВозврата Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.СодержаниеПроводки = НаименованиеОперации;
			Операция.НомерЖурнала = "НУ";
			Операция.Сумма = Сумма;
			Операция.Кредит.Счет = СчетПоКоду("Н13.01");
			Операция.Кредит.Контрагенты = Контрагент;
			Операция.Кредит.Договоры = Договор;
			
		ИначеЕсли УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.ЦелевоеФинансирование Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.СодержаниеПроводки = НаименованиеОперации;
			Операция.НомерЖурнала = "НУ";
			Операция.Сумма = Сумма;
   			Операция.Кредит.Счет = СчетПоКоду("Н12");
			
		ИначеЕсли УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.БезвозмездноеПолучение Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.СодержаниеПроводки = НаименованиеОперации;
			Операция.НомерЖурнала = "НУ";
			Операция.Сумма = Сумма;
			Операция.Кредит.Счет = СчетПоКоду("Н08");
			Операция.Кредит.ВнереализационныеДоходы = Перечисление.ВнереализационныеДоходы.ПрочиеВнереализационныеДоходы;
			
		ИначеЕсли УсловиеИлиВидПоступления = Перечисление.УсловияИлиВидыПоступлений.ПрочиеПоступленияСвязанныеСВозникновениемЗадолженности Тогда
			
		    // Если на момент проведения документа по данному договору существовала дебиторская задолженность,
			// то в первую очерь гасим ее, а только после это увеличиваем кредиторскую.
			СуммаДебиторскойЗадолженности = 0;
			Если (БИН13.ПолучитьСубконто(ВидыСубконто.Контрагенты,, Контрагент) = 1) Тогда
				Если (БИН13.ПолучитьСубконто(ВидыСубконто.Договоры,, Договор) = 1) Тогда
					СуммаДебиторскойЗадолженности = Макс(БИН13.СКД(), 0);
				КонецЕсли;
			КонецЕсли;
			                
			СуммаСписываемойДебиторскойЗадолженности = Мин(СуммаДебиторскойЗадолженности, Сумма);
			СуммаВозникшейКредиторскойЗадолженности  = Сумма - СуммаСписываемойДебиторскойЗадолженности;
			СуммаНДСКредиторскойЗадолженности        = ?(Сумма = 0, 0, НДС * (СуммаВозникшейКредиторскойЗадолженности / Сумма));
			
			Если СуммаВозникшейКредиторскойЗадолженности <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.СодержаниеПроводки = НаименованиеОперации;
				Операция.НомерЖурнала = "НУ";
				Операция.Сумма = СуммаВозникшейКредиторскойЗадолженности;
				Операция.Кредит.Счет = СчетПоКоду("Н13.02");
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;
			
				Если СуммаНДСКредиторскойЗадолженности <> 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.СодержаниеПроводки = НаименованиеОперации;
					Операция.НомерЖурнала = "НУ";
					Операция.Сумма = СуммаНДСКредиторскойЗадолженности;
					Операция.Кредит.Счет = СчетПоКоду("Н13.03");
					Операция.Кредит.Контрагенты = Контрагент;
					Операция.Кредит.Договоры = Договор;
				КонецЕсли;    
			КонецЕсли;
			
			Если СуммаСписываемойДебиторскойЗадолженности <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.СодержаниеПроводки = НаименованиеОперации;
				Операция.НомерЖурнала = "НУ";
				Операция.Сумма = СуммаСписываемойДебиторскойЗадолженности;
				Операция.Кредит.Счет = СчетПоКоду("Н13.01");
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;    
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);

КонецПроцедуры // ОбработкаПроведения()
