Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;
//_____________________________________________________________________________
Процедура ПриВыбореВариантаЗачетаАванса()
	ЗачитыватьАванс = ВариантЗачетаАванса.ПолучитьЗначение(ВариантЗачетаАванса.ТекущаяСтрока());
КонецПроцедуры //ПриВыбореВариантаЗачетаАванса
//_____________________________________________________________________________
Процедура Заполнить()
	Если Контрагент.Выбран() = 0 Тогда
		Предупреждение("Не выбран контрагент.
						|Заполнение табличной части документа невозможно.");
		Активизировать("Контрагент");

	Иначе
		Если ВыбратьСтроки() = 1 Тогда
			Если Вопрос("Перед заполнением таблица будет очищена,"+РазделительСтрок+"а существующие строки удалены. Продолжать?","ОК+Отмена") = "ОК" Тогда
				УдалитьСтроки();
			КонецЕсли;
		КонецЕсли;
		Если КоличествоСтрок() = 0 Тогда
			ДокВыполненияЭтапа = СоздатьОбъект("Документ");
			ДокЗавершенияРабот = СоздатьОбъект("Документ");
			ДокВыполненияЭтапа.ВыбратьПоЗначению(,ДатаДок, "Контрагент", Контрагент);
			Пока ДокВыполненияЭтапа.ПолучитьДокумент() = 1 Цикл
				Если ДокВыполненияЭтапа.Вид() <> "ВыполнениеЭтапаРабот" Тогда
					Продолжить;
				ИначеЕсли ДокВыполненияЭтапа.Проведен() = 0 Тогда
					Продолжить;
				ИначеЕсли ДокВыполненияЭтапа.ЗавершитьРаботы = 3 Тогда
					Продолжить;
				КонецЕсли;

				РаботаЗавершена = 0;
				ДокЗавершенияРабот.ВыбратьПодчиненныеДокументы(,ДатаДок,ДокВыполненияЭтапа);
				Пока (ДокЗавершенияРабот.ПолучитьДокумент() = 1) и (РаботаЗавершена = 0) Цикл
					Если ДокЗавершенияРабот.Вид() <> "ЗавершениеРабот" Тогда
						Продолжить;
					КонецЕсли;

					Если ДокЗавершенияРабот.ТекущийДокумент() <> ТекущийДокумент() Тогда
						РаботаЗавершена = 1;
					КонецЕсли;
				КонецЦикла;

				Если РаботаЗавершена = 0 Тогда
					НоваяСтрока();
					ДокументВыполненияЭтапаРабот = ДокВыполненияЭтапа.ТекущийДокумент();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если КоличествоСтрок() = 0 Тогда
			Предупреждение("Не обнаружено ни одного проведенного акта о выполнении этапа
							|по незавершенным работам для заказчика "+СокрП(Контрагент)+".");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Заполнить
//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;
	ЗачитыватьАванс = 0;
КонецПроцедуры //ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаполнить.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли;

	ВариантЗачетаАванса.ДобавитьЗначение(1, "не зачитывать");
	ВариантЗачетаАванса.ДобавитьЗначение(2, "только по договору");
	ВариантЗачетаАванса.ДобавитьЗначение(0, "без указания договора");
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));
	НачальнаяДатаДокумента = ДатаДок;
КонецПроцедуры //ПриОткрытии
//_____________________________________________________________________________
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога,ФлагСтандОбр)
	Если ИдентЭлемДиалога = "Работа" Тогда
		ОтборНоменклатуры = Перечисление.ТипыНоменклатуры.Работа;
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.Содержание = "Завершение работ";
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");