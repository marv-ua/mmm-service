////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем СчетРасчетовСПокупателем;
Перем СчетАвансовПолученных;
Перем ОплатаДоговора;
Перем ЦеныВДоговоре;
Перем ВестиУчетРасчетовУЕ;
Перем Валюта;
Перем Кратность;
Перем АвансПоДоговору;
Перем АвансБезДоговора;
Перем АвансПоДоговоруРуб;
Перем АвансБезДоговораРуб;
Перем БезДоговора;
Перем ЗадолженностьПоРасчетамВУЕРуб, ЗадолженностьПоРасчетамВУЕВал;
Перем НПРКурсоваяРазница;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// РассчитатьСуммуАванса()
//
// Описание:
//  Выполняет расчет бухгалтерских итогов и определяет текущую сумму аванса.
//
Процедура РассчитатьСуммуАванса()
	
	АвансБезДоговора = 0;
	АвансБезДоговораРуб = 0;
	АвансПоДоговору = 0;
	АвансПоДоговоруРуб = 0;
	
	Если ЗачитыватьАванс <> 1 Тогда //Зачитывать аванс
		СписокДоговоров = СоздатьОбъект("СписокЗначений");
		СписокДоговоров.ДобавитьЗначение(Договор);
		БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Контрагент);
		Если (ЗачитыватьАванс = 0) и (ПустоеЗначение(БезДоговора) = 0) Тогда //Зачитывать аванс без договора
			СписокДоговоров.ДобавитьЗначение(БезДоговора);
		КонецЕсли;                                  
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры, СписокДоговоров, 2);
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда	
				БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.22",,Валюта,,,"СВ");
			Иначе
				БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.22",,Валюта,,,"В");
			КонецЕсли;
			
		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
		    БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.7",,Валюта,,,"СВ");
			
		Иначе
			БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.2",,,,,"С");
		КонецЕсли;

		Если БухИт.ПолучитьСубконто(ВидыСубконто.Договоры,, БезДоговора) = 1 Тогда
			Если ОплатаДоговора = 2 Тогда
			    АвансБезДоговора = БухИт.СКК("В");
				Если ДатаДок >= '01.01.2008' Тогда	
					АвансБезДоговораРуб = БухИт.СКК("С");
				КонецЕсли;
				
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				АвансБезДоговора = БухИт.СКК("В");
				АвансБезДоговораРуб = БухИт.СКК("С");
				
			Иначе
				АвансБезДоговора = БухИт.СКК("С");
			КонецЕсли;
		КонецЕсли;
		
		Если БухИт.ПолучитьСубконто(ВидыСубконто.Договоры,, Договор) = 1 Тогда
			Если ОплатаДоговора = 2 Тогда
			    АвансПоДоговору = БухИт.СКК("В");
				Если ДатаДок >= '01.01.2008' Тогда	
					АвансПоДоговоруРуб = БухИт.СКК("С");
				КонецЕсли;
				
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				АвансПоДоговору = БухИт.СКК("В");
				АвансПоДоговоруРуб = БухИт.СКК("С");
				
			Иначе
				АвансПоДоговору = БухИт.СКК("С");
			КонецЕсли;
		КонецЕсли;
		
		АвансБезДоговора = Макс(АвансБезДоговора, 0);
		АвансБезДоговораРуб = Макс(АвансБезДоговораРуб, 0);
		АвансПоДоговору = Макс(АвансПоДоговору, 0);
		АвансПоДоговоруРуб = Макс(АвансПоДоговоруРуб, 0);
	КонецЕсли;
	
КонецПроцедуры // РассчитатьСуммуАванса()

//*****************************************************************************
// ЗачестьАванс(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
//
Процедура ЗачестьАванс(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
	
	Если ЗачетАванса > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Зачтена предоплата";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетАвансовПолученных;
		Операция.Дебет.Контрагенты = Контрагент;
		Операция.Дебет.Договоры = ДоговорАванса;
		Операция.Кредит.Счет = СчетРасчетовСПокупателем;
		Операция.Кредит.Контрагенты = Контрагент;
		Операция.Кредит.Договоры = Договор;
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Если (АвансПоДоговору + АвансБезДоговора) = ЗачетАванса Тогда
					ЗачетАвансаРуб = АвансПоДоговоруРуб + АвансБезДоговораРуб;
				Иначе
					КурсЗачетаАванса = Окр((АвансПоДоговоруРуб + АвансБезДоговораРуб)/(АвансПоДоговору + АвансБезДоговора), 4, 1);
					ЗачетАвансаРуб = ЗачетАванса*КурсЗачетаАванса;
				КонецЕсли;
			Иначе
				ЗачетАвансаРуб = ЗачетАванса*Курс/Кратность;
			КонецЕсли;
			Операция.Сумма = ЗачетАвансаРуб;
		    Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса;
			
		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
			Операция.Сумма = ЗачетАвансаРуб;
			Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса;
			
			ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб - Операция.Сумма;
			ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал - Операция.ВалСумма;
			
		Иначе
			Операция.Сумма = ЗачетАванса;
		КонецЕсли; 
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ВЛ";
				Операция.СодержаниеПроводки = "Зачтена предоплата";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ВАЛ.62");
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = ДоговорАванса;
				Операция.Сумма = ЗачетАванса*Курс/Кратность;
				Операция.Валюта = Валюта;
				Операция.ВалСумма = ЗачетАванса;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗачетАванса()

//******************************************************************************
// ДоначислениеАмортизацииДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ДоначислениеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте)
	
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог");
	
	Если РассчитаннаяАмортизация <> 0  Тогда
		СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(ОсновноеСредство.ВидРасхода.Получить(ДатаДок), ОсновноеСредство.ЭлементРасхода.Получить(ДатаДок), ОсновноеСредство.Объект.Получить(ДатаДок), ДатаДок);
		СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		Если ПустоеЗначение(СчетРасходов) = 1 Тогда
			ТекстСообщения = "На закладке ""Налоговый учет"" неверно указано направление отнесения расходов по начисленной амортизации для объекта: "
							+ ОсновноеСредство.Наименование + ", инв.№" + ОсновноеСредство.Код + ".";
			глНеПроводить(Контекст, ТекстСообщения, ОсновноеСредство.ТекущийЭлемент());
			Возврат;
		КонецЕсли;
		СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, ОсновноеСредство.СчетЗатрат.Получить(ДатаДок), ОсновноеСредство.Субконто1.Получить(ДатаДок), СчетРасходов);
		
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПустоеЗначение(СчетРасходов) = 0 Тогда
		    Операция.Дебет.Счет = СчетРасходов;
			Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
			Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
			Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
		КонецЕсли;
		Операция.Кредит.Счет = СчетПоКоду("Н05.02");
		Операция.Кредит.Субконто(1, ОсновноеСредство);
		Операция.Сумма = РассчитаннаяАмортизация;
	КонецЕсли;
	
КонецПроцедуры // ДоначислениеАмортизацииДляЦелейНалоговогоУчета()

//******************************************************************************
// СписаниеАмортизацииДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте)
	
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог");
	НачисленнаяАмортизацияНУ = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалогКон");
	Если НачисленнаяАмортизацияНУ <> 0  Тогда
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Списана амортизация";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н05.02");
		Операция.Дебет.Субконто(1, ОсновноеСредство);
		Операция.Кредит.Счет = СчетПоКоду("Н05.01");
		Операция.Кредит.Субконто(1, ОсновноеСредство);
		Операция.Сумма = НачисленнаяАмортизацияНУ;
	КонецЕсли;
	
КонецПроцедуры // СписаниеАмортизацииДляЦелейНалоговогоУчета()

//******************************************************************************
// ВыбытиеОСДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ВыбытиеОСДляЦелейНалоговогоУчета(СведенияОбОбъекте, Знач ВыручкаБезНалогов)
	
	// Отразим списание остаточной стоимости объекта ОС.
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог"); 
	Если ДокументПодготовкаКПередаче.Выбран() = 0 Тогда
		КапВложенияНаправленныеНаРасходы = СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходы");  
	Иначе
		КапВложенияНаправленныеНаРасходы = 0;
	КонецЕсли;
	НачисленнаяАмортизацияНУ = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалогКон");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизацияНУ - КапВложенияНаправленныеНаРасходы;
	
	Если ОстаточнаяСтоимость <> 0 Тогда
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Списание остаточной стоимости";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
			Операция.Дебет.Счет = СчетПоКоду("Н07.07");
			Операция.Дебет.ОсновныеСредства = ОсновноеСредство;          
			
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача Тогда
			Операция.Дебет.Счет = СчетПоКоду("Н09");
			Операция.Дебет.ВнереализационныеРасходы = Перечисление.ВнереализационныеРасходы.НеПринимаемые;
			
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
			Операция.Дебет.Счет = СчетПоКоду("Н02.08");
			Операция.Дебет.Контрагенты = Контрагент;
		КонецЕсли;
		Операция.Кредит.Счет = СчетПоКоду("Н05.01");
		Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
		Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача Тогда
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Безвозмездно;
			
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ВкладВУставныйКапитал;
			
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества Тогда
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ВкладВПростоеТоварищество;
			
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление Тогда
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие ;
			
		Иначе     
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
		КонецЕсли;
		Операция.Кредит.Основание = Договор;
		Операция.Сумма = ОстаточнаяСтоимость;
	КонецЕсли; 
	
	Если КапВложенияНаправленныеНаРасходы <> 0 Тогда 
		
		ВариантУчетаРасходовПоАмортизационнойПремии = Константа.ВариантУчетаРасходовПоАмортизационнойПремии.Получить(ДатаДок);
		Если ВариантУчетаРасходовПоАмортизационнойПремии = Перечисление.ВариантыУчетаРасходовПоАмортизационнойПремии.ВСоставеКосвенныхРасходов Тогда
			СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(Перечисление.ВидыРасходов.КосвенныеРасходы, Перечисление.ГруппыВидыРасходов.АмортизационнаяПремия, "");
			СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		Иначе
			СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(ОсновноеСредство.ВидРасхода.Получить(ДатаДок), ОсновноеСредство.ЭлементРасхода.Получить(ДатаДок), ОсновноеСредство.Объект.Получить(ДатаДок), ДатаДок);
			СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		КонецЕсли;           
		
		СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, ОсновноеСредство.СчетЗатрат.Получить(ДатаДок), ОсновноеСредство.Субконто1.Получить(ДатаДок), СчетРасходов);

		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Включение кап.вложений в расходы";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПустоеЗначение(СчетРасходов) = 0 Тогда
			Операция.Дебет.Счет = СчетРасходов;
			Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
			Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
			Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
		КонецЕсли;
		Операция.Кредит.Счет = СчетПоКоду("Н05.01");
		Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
		Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие;
		Операция.Сумма = КапВложенияНаправленныеНаРасходы; 
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Включение кап.вложений в расходы";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчетПоКоду("Н05.КВ");
		Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
		Операция.Сумма = КапВложенияНаправленныеНаРасходы;
	КонецЕсли;		
	
	КапВложенияНаправленныеНаРасходыОстаток = СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходыОстаток") - КапВложенияНаправленныеНаРасходы;
	Если КапВложенияНаправленныеНаРасходыОстаток <> 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Списание суммы кап.вложений";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н05.КВ");
		Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
		Операция.Сумма = -КапВложенияНаправленныеНаРасходыОстаток;
		СведенияОбОбъекте.Установить("КапВложенияНаправленныеНаРасходыОстаток",0); 		
	КонецЕсли;
	
КонецПроцедуры // ВыбытиеОСДляЦелейНалоговогоУчета()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Сч01_1 = СчетПоКоду("01.1");
	Сч01_2 = СчетПоКоду("01.2");
	Сч58_1_1 = СчетПоКоду("58.1.1");
	Сч58_4 = СчетПоКоду("58.4");
	Сч79_3 = СчетПоКоду("79.3");
	
	Сч91_1 = СчетПоКоду("91.1");
	Сч91_2 = СчетПоКоду("91.2");
	Сч62_2 = СчетПоКоду("62.2");
	Сч62_1 = СчетПоКоду("62.1");
	Сч62_6 = СчетПоКоду("62.6");
	Сч62_7 = СчетПоКоду("62.7");
	Сч62_22 = СчетПоКоду("62.22");
	Сч62_11 = СчетПоКоду("62.11");
	
	Сч68_5 = СчетПоКоду("68.5");
	Сч76_Н_4 = СчетПоКоду("76.Н.4");
	
	Сч83_1 = СчетПоКоду("83.1");
	Сч84_1 = СчетПоКоду("84.1");
	
	СчМЦ_01 = СчетПоКоду("МЦ.01");
	
	СчУЕ_62 = СчетПоКоду("УЕ.62");
	СчВАЛ_62 = СчетПоКоду("ВАЛ.62");
	                               
	ЗадолженностьПоРасчетамВУЕРуб = 0;
	ЗадолженностьПоРасчетамВУЕВал = 0;
	НПРКурсоваяРазница = 0;
	
	БухИтНПР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНПР.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтНПР.ПериодМ(ДатаДок);
    
	СписокОС = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокОС);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства, СписокОС, 2);
	БухИт.ВыполнитьЗапрос(, ТекущийДокумент(),"83.1, МЦ.01");
	
	ЦеныВДоговоре = 1; // в рублях
	ВестиУчетРасчетовУЕ = 0;
	
	Если Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
		ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
		ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
	КонецЕсли;
	
	Если ЦеныВДоговоре = 2 Тогда
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
			
		Если Курс = 0 Тогда
			ТекстСообщения = "Не указан курс валюты";
			глНеПроводить(Контекст, ТекстСообщения, ОС.ТекущийЭлемент());
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаДоговора = 2 Тогда
		глТаблицаСчетов.УдалитьСтроки();
		
		СчетРасчетовСПокупателем = Сч62_11;
		СчетАвансовПолученных = Сч62_22;
		Если ДатаДок >= '01.01.2008' Тогда
			СчетАвансовПолученныхПереоценка = СчВАЛ_62;
		Иначе
			СчетАвансовПолученныхПереоценка = Сч62_22;
		КонецЕсли;

		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = Сч62_11;
		глТаблицаСчетов.Субконто1 = Контрагент;
		глТаблицаСчетов.Субконто2 = Договор;
		глТаблицаСчетов.Субконто3 = "";
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.Курс = Курс;
		
		Если ЗачитыватьАванс <> 1 Тогда
			глТаблицаСчетов.НоваяСтрока();
			глТаблицаСчетов.Счет = СчетАвансовПолученныхПереоценка;
			глТаблицаСчетов.Субконто1 = Контрагент;
			глТаблицаСчетов.Субконто2 = Договор;
			глТаблицаСчетов.Субконто3 = "";
			глТаблицаСчетов.Валюта = Валюта;
			глТаблицаСчетов.Курс = Курс;
			Если ЗачитыватьАванс = 0 Тогда
				БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Контрагент);
				Если ПустоеЗначение(БезДоговора) = 0 Тогда
					глТаблицаСчетов.НоваяСтрока();
					глТаблицаСчетов.Счет = СчетАвансовПолученныхПереоценка;
					глТаблицаСчетов.Субконто1 = Контрагент;
					глТаблицаСчетов.Субконто2 = БезДоговора;
					глТаблицаСчетов.Субконто3 = "";
					глТаблицаСчетов.Валюта = Валюта;
					глТаблицаСчетов.Курс = Курс;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		глПереоценкаСчетов(Контекст, глТаблицаСчетов,, 0);
		
	ИначеЕсли ВестиУчетРасчетовУЕ = 0 Тогда
	    СчетРасчетовСПокупателем = Сч62_1;
		СчетАвансовПолученных = Сч62_2;
		
	Иначе
		СчетРасчетовСПокупателем = Сч62_6;
		СчетАвансовПолученных = Сч62_7;
	КонецЕсли;
    
	ВсегоОстаточнаяСтоимость = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СведенияОбОС = глРасчетАмортизацииОС(ОсновноеСредство, ДатаДок);
		СведенияОбОС.Установить("КапВложенияНаправленныеНаРасходыОстаток",БухИтНПР.СКД("Н05.КВ",,, ОсновноеСредство)); 

		СчетНачисленияАмортизации = СведенияОбОС.Получить("СчетНачисленияАмортизации");
		СписаноПостоянныхРазниц = 0;
		
		// Если не было подготовки к передаче, то необходимо
		// списать балансовую стоимость, доначислить и списать амортизацию.
		Если ДокументПодготовкаКПередаче.Выбран() = 0 Тогда
			НачисленнаяАмортизацияНач = СведенияОбОС.Получить("НачисленнаяАмортизацияКон");
			ДоначисленнаяАмортизация = НачисленнаяАмортизация - НачисленнаяАмортизацияНач;
			Если (ДоначисленнаяАмортизация <> 0) и (ПустоеЗначение(СчетНачисленияАмортизации) = 0) Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = ДоначисленнаяАмортизация;
				
				Если СчетНачисленияАмортизации.Забалансовый = 1 Тогда
					Операция.СодержаниеПроводки = "Износ за "+Формат(ДатаДок,"Д ММММГГГГ");
					Операция.Дебет.Счет = СчетНачисленияАмортизации;
					Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
					
				Иначе
					Если ОсновноеСредство.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
						ТекстСообщения = "Не указан счет отнесения затрат по начисленной амортизации для ОС: "+ОсновноеСредство.Наименование+", инв.№"+ОсновноеСредство.Код+".";
						глНеПроводить(Контекст, ТекстСообщения, ОсновноеСредство.ТекущийЭлемент());
						Возврат;
					КонецЕсли;
					Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
					
					Операция.Дебет.Счет = ОсновноеСредство.СчетЗатрат.Получить(ДатаДок);
					Операция.Дебет.Субконто(1, ОсновноеСредство.Субконто1.Получить(ДатаДок));
					Операция.Дебет.Субконто(2, ОсновноеСредство.Субконто2.Получить(ДатаДок));
					Операция.Дебет.Субконто(3, ОсновноеСредство.Субконто3.Получить(ДатаДок));
					Операция.Кредит.Счет = СчетНачисленияАмортизации;
					Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				КонецЕсли;
			КонецЕсли;
			
			// Списание постоянных разниц
			Если СчетНачисленияАмортизации.Забалансовый <> 1 Тогда
				Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
					ВсегоПостоянныхРазниц = БухИтНПР.СНД("НПР.01",,, ОсновноеСредство);
					Если ВсегоПостоянныхРазниц <> 0 Тогда
	                    БалансоваяСтоимостьНач			= СведенияОбОС.Получить("БалансоваяСтоимостьНач");
						НачисленнаяАмортизацияНач   = СведенияОбОС.Получить("НачисленнаяАмортизацияНач");
						ОстаточнаяСтоимостьНаНачало = БалансоваяСтоимостьНач - НачисленнаяАмортизацияНач;
						Если ОстаточнаяСтоимостьНаНачало <> 0 Тогда
						    СписатьПостоянныхРазниц = ВсегоПостоянныхРазниц * (ДоначисленнаяАмортизация / ОстаточнаяСтоимостьНаНачало);
							Если СписатьПостоянныхРазниц <> 0 Тогда
								СчетДт = ОсновноеСредство.СчетЗатрат.Получить(ДатаДок);
								СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, ОсновноеСредство.Субконто1.Получить(ДатаДок));
								
								Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
								Операция.НомерЖурнала = "ПР";
								Операция.СодержаниеПроводки = "Списание постоянных разниц";
								Если ПустоеЗначение(СчетНПР) = 0 Тогда
									Операция.Дебет.Счет = СчетНПР;
									Операция.Дебет.Субконто(1, ОсновноеСредство.Субконто1.Получить(ДатаДок));
									Операция.Дебет.Субконто(2, ОсновноеСредство.Субконто2.Получить(ДатаДок));
									Операция.Дебет.Субконто(3, ОсновноеСредство.Субконто3.Получить(ДатаДок));
								КонецЕсли;
								Операция.Кредит.Счет = СчетПоКоду("НПР.01");
								Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
								Операция.Сумма = СписатьПостоянныхРазниц;
								
								СписаноПостоянныхРазниц = СписатьПостоянныхРазниц;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			// Доначислим амортизацию для целей налогового учета.
			Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				ДоначислениеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОС);
				
				// Если невозможно определить счет отнесения амортизации для целей налогового учета.
				Если СтатусВозврата() = 0 Тогда 
				    Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если (НачисленнаяАмортизация <> 0) и (ПустоеЗначение(СчетНачисленияАмортизации) = 0) Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = НачисленнаяАмортизация;
				
				Если СчетНачисленияАмортизации.Забалансовый = 1 Тогда
					Операция.СодержаниеПроводки = "Списан износ";
					Операция.Кредит.Счет = СчетНачисленияАмортизации;
					Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
					
				Иначе
					Операция.СодержаниеПроводки = "Списана амортизация";
					Операция.Дебет.Счет = СчетНачисленияАмортизации;
					Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
					
					Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление Тогда
						Операция.Кредит.Счет = Сч79_3;
						Операция.Кредит.Контрагенты = Контрагент;
						Операция.Кредит.Договоры = Договор;
						
					ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) и (ДатаДок >= '01.01.2004') Тогда
						Операция.Кредит.Счет = Сч58_4;
						Операция.Кредит.Контрагенты = Контрагент;
						Операция.Кредит.Договоры = Договор;
						
					Иначе
						Операция.Кредит.Счет = Сч01_2;
						Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			          
			// Списание амортизации для целей налогового учета.
			Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОС);
			КонецЕсли;
			
			Если БалансоваяСтоимость <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Списана баланс.ст-ть";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = БалансоваяСтоимость;
				Операция.Кредит.Счет = Сч01_1;
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				
				Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление Тогда
					Операция.Дебет.Счет = Сч79_3;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					
				ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) и (ДатаДок >= '01.01.2004') Тогда
					Операция.Дебет.Счет = Сч58_4;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					
				Иначе
					Операция.Дебет.Счет = Сч01_2;
					Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
				КонецЕсли;
			КонецЕсли;
			
		Иначе // Если выбытие производится с подготовкой, то доначисление
			  // амортизации должно было произведено документом "Подготовка к передаче",
			  // а списание аморизации необходимо выполнить в данном документе.
			  
			// Списание амортизации для целей налогового учета.
			Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОС);
			КонецЕсли;
		КонецЕсли;
	    
		// Списание остаточной стоимости основного средства.
		Если (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление)
		   и (ДокументПодготовкаКПередаче.Выбран() = 0) Тогда
		   	
		ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества)
		   		и (ДокументПодготовкаКПередаче.Выбран() = 0)
		   		и (ДатаДок >= '01.01.2004') Тогда
		   			
		Иначе
			ОстаточнаяСтоимость = ?(СчетНачисленияАмортизации.Забалансовый = 1, БалансоваяСтоимость, БалансоваяСтоимость - НачисленнаяАмортизация);
			Если ОстаточнаяСтоимость <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = ?(СчетНачисленияАмортизации.Забалансовый = 1, "Списана баланс.ст-ть", "Списана остат.ст-ть");
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Если (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление)
				   и (ДокументПодготовкаКПередаче.Выбран() = 1) Тогда
					Операция.Дебет.Счет = Сч79_3;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
				ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
					Операция.Дебет.Счет = Сч58_1_1;
					Операция.Дебет.Контрагенты = Контрагент;
					
				ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества Тогда
				    Операция.Дебет.Счет = Сч58_4;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					
				Иначе
					Операция.Дебет.Счет = Сч91_2;
					Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
				КонецЕсли;
				
				Операция.Кредит.Счет = Сч01_2;
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				Операция.Сумма = ОстаточнаяСтоимость;
				
				ВсегоОстаточнаяСтоимость = ВсегоОстаточнаяСтоимость + ОстаточнаяСтоимость;
			КонецЕсли;
		КонецЕсли;
		
		// Списание суммы переоценки.
		Если БухИт.ПолучитьСчет(, Сч83_1) = 1 Тогда
			Если БухИт.ПолучитьСубконто(,, ОсновноеСредство) = 1 Тогда
				Если БухИт.СКК("С") > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ОС";
					Операция.СодержаниеПроводки = "Сумма дооценки включена в состав нераспр. прибыли";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст); 
					Операция.Дебет.Счет = Сч83_1;
					Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
					Операция.Кредит.Счет = Сч84_1;
					Операция.Сумма = БухИт.СКК("С");
				КонецЕсли;	    
			КонецЕсли;
		КонецЕсли;
		
		// Если основное средство учитывается на забалансовом счете МЦ.01,
		// то необходимо списать его с этого счета.
		Если БухИт.ПолучитьСчет(, СчМЦ_01) = 1 Тогда
			Если БухИт.ПолучитьСубконто(, , ОсновноеСредство) = 1 Тогда
				Если БухИт.СКД("С") > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ОС";
					Операция.СодержаниеПроводки = "Списана первоначальная стоимость";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст); 
					Операция.Кредит.Счет = СчМЦ_01;
					Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
					Операция.Сумма = БухИт.СКД("С");
				КонецЕсли;	    
			КонецЕсли;
		КонецЕсли;
	
		// Списание постоянных разниц
		Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
			СписатьПостоянныхРазниц = БухИтНПР.СКД("НПР.01",,, ОсновноеСредство) - СписаноПостоянныхРазниц;
			Если СписатьПостоянныхРазниц <> 0 Тогда
				СчетДт = ПолучитьПустоеЗначение("Счет");
				Если (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление)
				   и (ДокументПодготовкаКПередаче.Выбран() = 1) Тогда
					СчетДт = Сч79_3;
				ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
					СчетДт = Сч58_1_1;
					
				ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества Тогда
					СчетДт = Сч58_4;
					
				Иначе
					СчетДт = Сч91_2;
				КонецЕсли;
				СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, СтатьяПрочихДоходовИРасходов);
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ПР";
				Операция.СодержаниеПроводки = "Списание постоянных разниц";
				Если ПустоеЗначение(СчетНПР) = 0 Тогда
					Операция.Дебет.Счет = СчетНПР;
					Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
						Операция.Дебет.Контрагенты = Контрагент;
					КонецЕсли;
				КонецЕсли;
				Операция.Кредит.Счет = СчетПоКоду("НПР.01");
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				Операция.Сумма = СписатьПостоянныхРазниц;
			КонецЕсли;
		КонецЕсли;
		
		// Списание остаточной стоимости ОС для целей налогообложения.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			ВыбытиеОСДляЦелейНалоговогоУчета(СведенияОбОС, Стоимость - НДС - НП);
		КонецЕсли;
		
		// Списание амортизации для целей налогообложения.
		Если ДатаДок < '01.01.2002' Тогда // по счету АОС
			РассчитаннаяАмортизацияНалог = СведенияОбОС.Получить("РассчитаннаяАмортизацияНалог");
			НачисленнаяАмортизацияНалог = СведенияОбОС.Получить("НачисленнаяАмортизацияНалог");
			Если РассчитаннаяАмортизацияНалог <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Начислена амортизация";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = РассчитаннаяАмортизацияНалог;
				Операция.Кредит.Счет = СчетПоКоду("АОС");
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
			КонецЕсли;
			Если НачисленнаяАмортизацияНалог + РассчитаннаяАмортизацияНалог <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Списана амортизация";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = НачисленнаяАмортизацияНалог + РассчитаннаяАмортизацияНалог;
				Операция.Дебет.Счет = СчетПоКоду("АОС");
				Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
			КонецЕсли;
		КонецЕсли;
		
		СпрОС = СоздатьОбъект("Справочник.ОсновныеСредства");
		Если СпрОС.НайтиЭлемент(ОсновноеСредство) = 0 Тогда
		    СтатусВозврата(0); Возврат;
		КонецЕсли;
	
		СпрОС.ДатаВыбытия = ДатаДок;
		СпрОС.ПричинаВыбытия = ПричинаВыбытия;
		СпрОС.Записать();
		
		УстановитьРеквизитСправочника(ОсновноеСредство, "НачислятьАмортизацию", 0, ДатаДок);
		УстановитьРеквизитСправочника(ОсновноеСредство, "Состояние", Перечисление.СостоянияОС.Выбыло, ДатаДок);
		
		ТекстСообщения = "В справочнике ""Основные средства"" отражено выбытие основного средства "+ОсновноеСредство;
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,, ОсновноеСредство.ТекущийЭлемент());
	КонецЦикла;
	
	// Взаиморасчеты с контрагентами.
	Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
		ЗачетАвансаПоДоговору = 0;
		ЗачетАвансаБезДоговора = 0;
		ЗачетАвансаПоДоговоруРуб = 0;
		ЗачетАвансаБезДоговораРуб = 0;
		РассчитатьСуммуАванса(); // расчет итогов по авансам
		
		СуммаЗачтенногоАванса = 0;
		СуммаЗачтенногоАвансаРуб = 0;
		КурсАванса = 0;
		
		СуммаЗачета = 0;
		ПечЗачетАванса = 0;
		ПечЗачетАвансаПоДоговору = 0;
		ПечЗачетАвансаБезДоговора = 0;
		
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			ПечАвансПоДоговору = Окр(АвансПоДоговоруРуб, 2, 1);
			ПечАвансБезДоговора = Окр(АвансБезДоговораРуб, 2, 1);
				
		Иначе
			ПечАвансПоДоговору = Окр(АвансПоДоговору, 2, 1);
			ПечАвансБезДоговора = Окр(АвансБезДоговора, 2, 1);
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (ЗачитыватьАванс <> 1) и (Стоимость <> 0) Тогда //Зачитывать аванс
			    Если (ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 0) Тогда
					Если ОплатаДоговора = 2 Тогда
					    ВсегоОтгружено = Стоимость;
					
					Иначе
						ВсегоОтгружено = Окр(Стоимость * Курс / Кратность, 2, 1);
					КонецЕсли;
					
				Иначе
					ВсегоОтгружено = Стоимость;
				КонецЕсли;
				
				Если ВестиУчетРасчетовУЕ = 1 Тогда
					ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, ВсегоОтгружено);
					ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, ВсегоОтгружено - ЗачетАвансаПоДоговору);
					
					Аванс = АвансПоДоговору + АвансБезДоговора;
					ЗачетАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
					
					Если ЗачетАванса = Аванс Тогда
					    ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
						ЗачетАвансаБезДоговораРуб = АвансБезДоговораРуб;
						
					ИначеЕсли ЗачетАванса > АвансПоДоговору Тогда
						ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
						ЗачетАвансаБезДоговораРуб = Окр(ЗачетАвансаБезДоговора * Окр(АвансБезДоговораРуб / ?(АвансБезДоговора = 0, 1, АвансБезДоговора), 4, 1), 2, 1);
						
					Иначе
						ЗачетАвансаПоДоговоруРуб = Окр(ЗачетАвансаПоДоговору * Окр(АвансПоДоговоруРуб / ?(АвансПоДоговору = 0, 1, АвансПоДоговору), 4, 1), 2, 1);
						ЗачетАвансаБезДоговораРуб = 0;
					КонецЕсли;
				
				Иначе
					ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, ВсегоОтгружено);
					ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, ВсегоОтгружено - ЗачетАвансаПоДоговору);
				КонецЕсли;
			    
				ЗачестьАванс(ЗачетАвансаПоДоговору, ЗачетАвансаПоДоговоруРуб, Договор);
				ЗачестьАванс(ЗачетАвансаБезДоговора, ЗачетАвансаБезДоговораРуб, БезДоговора);
				
				СуммаЗачтенногоАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
				СуммаЗачета = СуммаЗачета + СуммаЗачтенногоАванса;
				
				Если ВестиУчетРасчетовУЕ = 1 Тогда
					СуммаЗачтенногоАвансаРуб = ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб;
					
					ПечЗачетАванса = ПечЗачетАванса + Окр(ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб, 2, 1);
					ПечЗачетАвансаПоДоговору = ПечЗачетАвансаПоДоговору + Окр(ЗачетАвансаПоДоговоруРуб, 2, 1);
					ПечЗачетАвансаБезДоговора = ПечЗачетАвансаБезДоговора + Окр(ЗачетАвансаБезДоговораРуб, 2, 1);
					
				Иначе
					Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
						СуммаЗачтенногоАвансаРуб = ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб;				
					КонецЕсли;
					ПечЗачетАванса = ПечЗачетАванса + Окр(ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора, 2, 1);
					ПечЗачетАвансаПоДоговору = ПечЗачетАвансаПоДоговору + Окр(ЗачетАвансаПоДоговору, 2, 1);
					ПечЗачетАвансаБезДоговора = ПечЗачетАвансаБезДоговора + Окр(ЗачетАвансаБезДоговора, 2, 1);
				КонецЕсли;
				
				АвансПоДоговору = АвансПоДоговору - ЗачетАвансаПоДоговору;
				АвансБезДоговора = АвансБезДоговора - ЗачетАвансаБезДоговора;
				АвансПоДоговоруРуб = АвансПоДоговоруРуб - ЗачетАвансаПоДоговоруРуб;
				АвансБезДоговораРуб = АвансБезДоговораРуб - ЗачетАвансаБезДоговораРуб;
			КонецЕсли;
			
			ВсегоВыручкаРуб = 0;
			ВсегоСуммоваяРазница = 0;
			КурсАванса = ?(СуммаЗачтенногоАванса = 0, 0, Окр(СуммаЗачтенногоАвансаРуб / СуммаЗачтенногоАванса, 4, 1));
			
			Если ((ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 1))
				или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')) Тогда
				К = СуммаЗачтенногоАванса / Стоимость;
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					НДСвЧастиЗачтенногоАвансаРуб = Окр(К * НДС * Курс / Кратность, 2, 1);
					НПвЧастиЗачтенногоАвансаРуб = Окр(К * НП * Курс / Кратность, 2, 1);
				Иначе
					НДСвЧастиЗачтенногоАвансаРуб = Окр(К * НДС * КурсАванса, 2, 1);
					НПвЧастиЗачтенногоАвансаРуб = Окр(К * НП * КурсАванса, 2, 1);
				КонецЕсли;
				
				ВсегоРубПоКурсуОтгрузки = Окр(Стоимость * Курс / Кратность, 2, 1);
				ОплаченоПоКурсуОтгрузки = Окр(К * ВсегоРубПоКурсуОтгрузки, 2, 1);
			    ВыручкаРуб = ВсегоРубПоКурсуОтгрузки + СуммаЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
				
				НДСРубПоКурсуОтгрузки = Окр(НДС * Курс / Кратность, 2, 1);
				ОплаченоНДСПоКурсуОтгрузки = Окр(К * НДСРубПоКурсуОтгрузки, 2, 1);
				СуммаНДС = НДСРубПоКурсуОтгрузки + НДСвЧастиЗачтенногоАвансаРуб - ОплаченоНДСПоКурсуОтгрузки;
				
				НПРубПоКурсуОтгрузки = Окр(НП * Курс / Кратность, 2, 1);
				ОплаченоНППоКурсуОтгрузки = Окр(К * НПРубПоКурсуОтгрузки, 2, 1);				
				СуммаНП = НПРубПоКурсуОтгрузки + НПвЧастиЗачтенногоАвансаРуб - ОплаченоНППоКурсуОтгрузки;
				
				ВыручкаБезНалогов = ВыручкаРуб - СуммаНДС - СуммаНП;
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					СуммоваяРазница = 0;
					НПРКурсоваяРазница = Окр(НПРКурсоваяРазница, 2) - Окр(СуммаНДС, 2);
				Иначе
					Если (Договор.ОтражатьСуммовуюРазницуПриЗачетеАванса = 1) и (ВестиУчетРасчетовУЕ = 1) Тогда
						СуммоваяРазница = СуммаЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
					КонецЕсли;
				КонецЕсли;
				
				ВсегоВыручкаРуб = ВсегоВыручкаРуб + ВыручкаРуб;
				ВсегоСуммоваяРазница = ВсегоСуммоваяРазница + СуммоваяРазница;
				
			ИначеЕсли ЦеныВДоговоре = 2 Тогда
			    ВыручкаБезНалогов = Окр((Стоимость - НДС - НП)*Курс/Кратность, 2, 1);
				
			Иначе
				ВыручкаБезНалогов = Стоимость - НДС - НП;
			КонецЕсли;
			
			// Отразим в налоговом учете выручку (минус налоги), при этом учитывается аванс.
			// Если отгрузка без перехода права собственности,то не отражается выручка по товарам и продукции
			Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				Если (Договор.ОтражатьСуммовуюРазницуПриЗачетеАванса = 1) и (ВестиУчетРасчетовУЕ = 1) Тогда
					ПоКурсуОтгрузки = ОплаченоПоКурсуОтгрузки - ОплаченоНДСПоКурсуОтгрузки - ОплаченоНППоКурсуОтгрузки;
					ПоКурсуОплаты = СуммаЗачтенногоАвансаРуб - НДСвЧастиЗачтенногоАвансаРуб - НПвЧастиЗачтенногоАвансаРуб;
					СуммоваяРазница = ПоКурсуОплаты - ПоКурсуОтгрузки;
					
				Иначе
					СуммоваяРазница = 0; 
				КонецЕсли;
					
				Если ВыручкаБезНалогов > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "НУ";
					Операция.СодержаниеПроводки = "Учтена выручка";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Если СведенияОбОС.Получить("БалансоваяСтоимостьНалогКон") = 0 Тогда
						Операция.Кредит.Счет = СчетПоКоду("Н06.03");	
					Иначе
						Операция.Кредит.Счет = СчетПоКоду("Н06.05");
						Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
					КонецЕсли;
					Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
					Операция.Кредит.Основание = Договор;
					Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
						Операция.Сумма = Окр((Стоимость - НДС - НП)*Курс/Кратность, 2, 1);
						НПРКурсоваяРазница = Окр(НПРКурсоваяРазница, 2) - Окр(Операция.Сумма, 2);
					Иначе
						Операция.Сумма = ВыручкаБезНалогов - СуммоваяРазница;
					КонецЕсли;
					
					глОтражениеСуммовыхРазницВНаловомУчете(Контекст, СуммоваяРазница, 0);
				КонецЕсли;
			КонецЕсли;
		
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.СодержаниеПроводки = "Учтена выручка";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетРасчетовСПокупателем;
			Операция.Дебет.Контрагенты = Контрагент;
			Операция.Дебет.Договоры = Договор;
			Операция.Кредит.Счет = Сч91_1;
			Операция.Кредит.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
			Если ЦеныВДоговоре = 2 Тогда
				Если ОплатаДОговора = 2 Тогда
					Операция.Валюта = Валюта;
					Операция.ВалСумма = Стоимость;
					Если ДатаДок >= '01.01.2008' Тогда
						Операция.Сумма = ВсегоВыручкаРуб;
						НПРКурсоваяРазница = Окр(НПРКурсоваяРазница, 2) + Окр(Операция.Сумма, 2);
					Иначе
						Операция.Сумма = Стоимость*Курс/Кратность;
					КонецЕсли;
				КонецЕсли;
				
				Если ВестиУчетРасчетовУЕ = 1 Тогда
					Операция.Сумма = ВсегоВыручкаРуб - ВсегоСуммоваяРазница;
					Операция.Валюта = Валюта;
					Операция.ВалСумма = Стоимость;
					
					ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
					ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал + Операция.ВалСумма;
					
				ИначеЕсли ОплатаДОговора <> 2 Тогда
					Операция.Сумма = Стоимость*Курс/Кратность;
				КонецЕсли;
					
			Иначе
				Операция.Сумма = Стоимость;
			КонецЕсли;
			
			Если ВсегоСуммоваяРазница <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Суммовая разница";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетРасчетовСПокупателем;
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
				Операция.Кредит.Счет = Сч91_1;
				Операция.Кредит.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
				Операция.Валюта = Валюта;
				Операция.Сумма = ВсегоСуммоваяРазница;
				
				ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
				
			КонецЕсли;
			
			СуммаРеализации = Стоимость;
			
			Если (СуммаРеализации > 0) и (ВерсияОбъекта >= "7.70.421") и (НП > 0) Тогда
				К = (ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора) / СуммаРеализации;
				НПкУплате = К*НП*КоличествоСтрок();
				ОтложеноНП = НП*КоличествоСтрок() - НПкУплате;
				Если НПкУплате > 0 Тогда // был зачет аванса
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Начислен НП";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = Сч91_2;
					Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
					Операция.Кредит.Счет = Сч68_5;
					Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
					Если ЦеныВДоговоре = 2 Тогда
						Операция.Сумма = НПкУплате*Курс/Кратность;
					Иначе
						Операция.Сумма = НПкУплате;
					КонецЕсли;
				КонецЕсли;
				
				Если ОтложеноНП > 0 Тогда
				    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.СодержаниеПроводки = "Начислен НП";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.НомерЖурнала = "ТВ";
					Операция.Дебет.Счет = Сч91_2;
					Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
					Операция.Кредит.Счет = Сч76_Н_4;
					Операция.Кредит.Контрагенты = Контрагент;
					Операция.Кредит.Договоры = Договор;
					Если ЦеныВДоговоре = 2 Тогда
					    Операция.Сумма = ОтложеноНП*Курс/Кратность;
					Иначе
						Операция.Сумма = ОтложеноНП;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаЗачета <> 0 Тогда
		    ТекстСообщения = "=> Зачет аванса:" + РазделительСтрок
			+ "   отгружено на сумму: "+(ВсегоОтгружено*КоличествоСтрок())+", зачтен аванс в размере: "+ПечЗачетАванса + РазделительСтрок
			+ "   - определен аванс по договору "+Договор+" в сумме: "+ПечАвансПоДоговору+", зачтен аванс в размере: "+ПечЗачетАвансаПоДоговору + РазделительСтрок;
			
			Если ЗачитыватьАванс = 0 Тогда
				ТекстСообщения = ТекстСообщения
				+ "   - определен аванс без указания договора в сумме: "+ПечАвансБезДоговора+", зачтен аванс в размере: "+ПечЗачетАвансаБезДоговора;
			Иначе
				ТекстСообщения = ТекстСообщения
				+ "   - аванс без указания договора не учтен";
			КонецЕсли;
			
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		КонецЕсли;
						
	ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
		СуммаРеализации = Цена*КоличествоСтрок();
		СуммаДоходов    = СуммаРеализации - ВсегоОстаточнаяСтоимость;
		
		Если СуммаДоходов > 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.СодержаниеПроводки = "Разница между остаточной и оценочной стоим.";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = Сч58_1_1;
			Операция.Дебет.Контрагенты = Контрагент;
			Операция.Кредит.Счет = Сч91_1;
			Операция.Кредит.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;    
			Операция.Сумма = СуммаДоходов;
			
		ИначеЕсли СуммаДоходов < 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.СодержаниеПроводки = "Разница между остаточной и оценочной стоим.";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = Сч58_1_1;
			Операция.Кредит.Контрагенты = Контрагент;
			Операция.Дебет.Счет = Сч91_2;
			Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;    
			Операция.Сумма = -СуммаДоходов;
		КонецЕсли;
		
	ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества Тогда
		Если ДатаДок < '01.01.2004' Тогда
			СуммаРеализации = Цена*КоличествоСтрок();
			Если ЦеныВДоговоре = 2 Тогда
				СуммаРеализации = СуммаРеализации*Курс/Кратность;
			КонецЕсли;
			СуммаДоходов    = СуммаРеализации - ВсегоОстаточнаяСтоимость;
			
			Если СуммаДоходов > 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Разница между остаточной и оценочной стоим.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч58_4;
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
				Операция.Кредит.Счет = Сч91_1;
				Операция.Кредит.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
				Операция.Сумма = СуммаДоходов;
				
			ИначеЕсли СуммаДоходов < 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Разница между остаточной и оценочной стоим.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = Сч58_4;
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;
				Операция.Дебет.Счет = Сч91_2;
				Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
				Операция.Сумма = -СуммаДоходов;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
	//********************************************************************
	//Проводки по расчетам в у.е. 
	Если ДатаДок >= '01.01.2007' Тогда
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Если (ЗадолженностьПоРасчетамВУЕРуб + ЗадолженностьПоРасчетамВУЕВал) <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "УЕ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчУЕ_62;
				Операция.Дебет.Субконто(1, Контрагент);
				Операция.Дебет.Субконто(2, Договор);			
				Операция.Валюта = Валюта;
				Операция.Сумма = ЗадолженностьПоРасчетамВУЕРуб;
				Операция.ВалСумма = ЗадолженностьПоРасчетамВУЕВал;
				Операция.СодержаниеПроводки = "Задолженность по реализации в у.е."; 
			КонецЕсли;	
		КонецЕсли; 
		
	КонецЕсли;	
	//********************************************************************
	
	//********************************************************************
	//Проводки по расчетам в вал.
	Если (Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да) Тогда
		Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
			Если НПРКурсоваяРазница <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "НУ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("НПР.99");
				Операция.Сумма = -НПРКурсоваяРазница;
				Операция.СодержаниеПроводки = "Разница в оценке дохода"; 
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	//********************************************************************
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаУдаленияПроведения()
	Пока ПолучитьСтроку() = 1 Цикл
		СпрОС = СоздатьОбъект("Справочник.ОсновныеСредства");
		Если СпрОС.НайтиЭлемент(ОсновноеСредство) = 0 Тогда
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		СпрОС.ДатаВыбытия = "";
		СпрОС.Записать();
	КонецЦикла;	
КонецПроцедуры
