////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Сч01, Сч02, Сч010, Сч012 ;
Перем ТекстЦены;
Перем ТекстКонтрагента;
Перем Новый;
Перем СписокДействий;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
Процедура Подбор()
	
	ОткрытьПодбор("Справочник.ОсновныеСредства","ДляВыбора");
	
КонецПроцедуры  

//******************************************************************************
Процедура ОбработкаПодбора(ВыбрОС)
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Код = ВыбрОС.Код Тогда
	        Предупреждение("Основное средство уже выбрано", 10);
			Возврат;
	    КонецЕсли;
	КонецЦикла;
	НоваяСтрока();
	ОсновноеСредство = ВыбрОС;
	АктивизироватьСтроку();
КонецПроцедуры 

//******************************************************************************
Процедура Заполнить()  
	НачОС = "";                            
	СписокКодов = СоздатьОбъект("СписокЗначений");
    Если КоличествоСтрок() = 0 Тогда
        ВвестиЗначение(НачОС,"Выберите элемент, входящий в группу однотипных основных средств","Справочник.ОсновныеСредства");
		Если ПустоеЗначение(НачОС) = 1 Тогда
		    Возврат;
		Иначе
			НоваяСтрока();
			ОсновноеСредство = НачОС;
		КонецЕсли;
	КонецЕсли;
	ВыбратьСтроки();
	ПолучитьСтроку();
	НаимОС = ОсновноеСредство.Наименование;       
	СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	ОСРодитель = ОсновноеСредство.Родитель;
	КС = КоличествоСтрок();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Наименование <> НаимОС Тогда
	        Предупреждение("В табличной части указаны объекты с разными наименованиями."+
			РазделительСтрок+"                Заполнение отменено",60);
			Возврат;
		Иначе
			СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	    КонецЕсли;
	КонецЦикла;
	Спр = СоздатьОбъект("Справочник.ОсновныеСредства");
	Спр.ИспользоватьРодителя(ОСРодитель);
	Спр.ВыбратьЭлементы(1);
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Если Спр.ЭтоГруппа() = 1 Тогда
		    Продолжить;
		КонецЕсли;
		Если Спр.Наименование <> НаимОС Тогда
		    Продолжить;
		КонецЕсли;
	    Если СписокКодов.НайтиЗначение(Спр.Код) = 0 Тогда
	        НоваяСтрока();
			ОсновноеСредство = Спр.ТекущийЭлемент();
	    КонецЕсли;
	КонецЦикла;
	Если КС = КоличествоСтрок() Тогда
	    Предупреждение("Других объектов с указанным наименованием не найдено",60);
	КонецЕсли;
КонецПроцедуры
	
//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует строку, содержащую итоговые суммы документа.
//
Функция ИтоговаяСтрока()
	
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда
		Если БалансоваяСтоимость = 0 Тогда
		    ИтСтр = "";
		Иначе
			ИтСтр = "Итого балансовая стоимость: " + 
					СокрЛ(Формат(БалансоваяСтоимость*КоличествоСтрок(),"Ч20.2-,"));
		КонецЕсли;
		
		Если НачисленнаяАмортизация = 0 Тогда
		Иначе
			ИтСтр = ?(ИтСтр = "", "", ИтСтр + ", ");
			ИтСтр = ИтСтр + 
					"Итого начисленная амортизация: " + 
					СокрЛ(Формат(НачисленнаяАмортизация*КоличествоСтрок(),"Ч20.2-,"));
		КонецЕсли;
	
	ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
		ИтСтр = "Всего: " + СокрЛ(Формат(Стоимость*КоличествоСтрок(),"Ч20.2-,")) + ", "+
				"в т.ч. НДС: " + СокрЛ(Формат(НДС*КоличествоСтрок(),"Ч20.2-,"));
		Если Итог("НП") > 0 Тогда
			ИтСтр = ИтСтр + ", НП: " + СокрЛ(Формат(НП*КоличествоСтрок(),"Ч20.2-,"));
		КонецЕсли;
		ИтСтр = ИтСтр + ", без налогов: " + СокрЛ(Формат(Цена*КоличествоСтрок(),"Ч20.2-,"));
		
	ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал) или
			  ((ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) и (ДатаДок < '01.01.2004')) Тогда
		ИтСтр = "Всего: " + СокрЛ(Формат(Цена*КоличествоСтрок(),"Ч20.2-,"));
		
	Иначе
		ИтСтр = "";
	КонецЕсли;
	
	Возврат ИтСтр;
	
КонецФункции // ИтоговаяСтрока()

//******************************************************************************
// РассчитатьНалоги()
//
// Описание:
//  Пересчитывает значение стоимости выбытия и налогов.
//
Процедура РассчитатьНалоги()
	
	НДС = глПоказательДокумента(Контекст, "НДС");
	Если НДСВозмещен = 0 Тогда
		ВклНДС = ВариантРасчетаНалогов.СуммаВключаетНДС;
		ВклНП  = ВариантРасчетаНалогов.СуммаВключаетНП;
		ОстаточнаяСтоимость = БалансоваяСтоимость - НачисленнаяАмортизация;
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
			ЦеныВДоговоре = 2;
			Кратность = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			Если Курс = 0 Тогда
			Иначе
				ОстаточнаяСтоимость = ОстаточнаяСтоимость/Курс*Кратность;
			КонецЕсли;
		КонецЕсли;
		Если ВклНП = 1 Тогда
			СуммаНП = глПоказательДокумента(Контекст, "НП");
		Иначе
			СуммаНП = 0;
		КонецЕсли;
		Если ВариантРасчетаНалогов.СуммаВключаетНДС = 1 Тогда
		    НалоговаяБаза = Цена - СуммаНП - ОстаточнаяСтоимость;
		Иначе
			НалоговаяБаза = Цена - СуммаНП + НДС - ОстаточнаяСтоимость;
		КонецЕсли;
		НалоговаяБаза = Макс(НалоговаяБаза, 0);
		СтНДС = глСтавкаНалога(Контекст, "НДС").Ставка;
		НДС = НалоговаяБаза*СтНДС/(100+СтНДС); 
		
		Если ВклНДС = 1 Тогда
			БазаНП = Цена;
		Иначе
			БазаНП = Цена + НДС;
		КонецЕсли;
		
		СтНП = глСтавкаНалога(Контекст, "НП").Ставка;
		Если ВклНП = 1 Тогда
			НП = БазаНП*СтНП/(100 + СтНП);
		Иначе
			НП = БазаНП*СтНП/100;
		КонецЕсли;
		
	Иначе
		НП = глПоказательДокумента(Контекст, "НП");
	КонецЕсли;
	Стоимость = глПоказательДокумента(Контекст, "СуммаСНалогами");
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	Форма.НДС.Доступность(УчитыватьНДС);
	Форма.НП.Доступность(УчитыватьНП);
	Форма.ПодписьСтавкиНДС.Доступность(УчитыватьНДС);
	Форма.ПодписьСтавкиНП.Доступность(УчитыватьНП);
	
КонецПроцедуры // РассчитатьНалоги()

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	Стр = "";
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Стр = "Валюта договора: " + Договор.ВалютаДоговора;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//******************************************************************************
// УправлениеКурсом(ИзменитьКурс)
//
// Параметры:
//  ИзменитьКурс - Число. 1 - установить новый курс валюты, 0 - не изменять.
//
// Описание:
//  При выбранной иностранной валюте делает видимым поле "Курс" и записывает
// в него значение из справочника.
//
Процедура УправлениеКурсом(ИзменитьКурс=0)
	
	Если (Договор.ВалютаДоговора.Выбран() = 1) и
		 (Форма.Договор.Видимость() = 1) Тогда
		ВидимостьКурса = 1;
	Иначе
		ВидимостьКурса = 0;
	КонецЕсли;
	Форма.ПодписьКурса.Видимость(ВидимостьКурса);
	Форма.Курс.Видимость(ВидимостьКурса);
	
	Если ИзменитьКурс = 1 Тогда
		Если ВидимостьКурса = 1 Тогда
		    Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
			
		Иначе
			Курс = 0;
		КонецЕсли;
		РассчитатьНалоги();
	КонецЕсли;
	
КонецПроцедуры // УправлениеКурсом()

//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()

	глПриВыбореДоговора(Контрагент, Договор);
	УправлениеКурсом(1); // при изменении договора могла измениться валюта
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Контрагент, Договор);
	УправлениеКурсом(1);
	
КонецПроцедуры // ПриВыбореКонтрагента()
//_____________________________________________________________________________
Процедура СуммыИзПодготовкиКПередаче()
	
	Если ДокументПодготовкаКПередаче.Выбран() = 1 Тогда
		Если ДокументПодготовкаКПередаче.БалансоваяСтоимость <> БалансоваяСтоимость Тогда
			БалансоваяСтоимость = ДокументПодготовкаКПередаче.БалансоваяСтоимость ;
		КонецЕсли;
		Если ДокументПодготовкаКПередаче.НачисленнаяАмортизация <> НачисленнаяАмортизация Тогда
			НачисленнаяАмортизация = ДокументПодготовкаКПередаче.НачисленнаяАмортизация ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //СуммыИзПодготовкиКПередаче
//_____________________________________________________________________________
Процедура ПриВыбореДокумента()
	
	Если ДокументПодготовкаКПередаче.Выбран() = 1 Тогда
		УдалитьСтроки();
		ДокументПодготовкаКПередаче.ВыбратьСтроки();
		Пока ДокументПодготовкаКПередаче.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
		    ОсновноеСредство = ДокументПодготовкаКПередаче.ОсновноеСредство;
		КонецЦикла;
		СуммыИзПодготовкиКПередаче();
	КонецЕсли;
	
КонецПроцедуры //ПриВыбореДокумента
//_____________________________________________________________________________
Процедура ПриВыбореПодготовкиПередачи()
	
	Если ПодготовкаПроизведена = 1 Тогда
		Форма.БалансоваяСтоимость.Доступность(0);
		Форма.НачисленнаяАмортизация.Доступность(0);
		Форма.ДокументПодготовкаКПередаче.Доступность(1);
	Иначе
		Форма.БалансоваяСтоимость.Доступность(1);
		Форма.НачисленнаяАмортизация.Доступность(1);
		Форма.ДокументПодготовкаКПередаче.Доступность(0);
		Если ДокументПодготовкаКПередаче.Выбран() = 1 Тогда
			ДокументПодготовкаКПередаче = 0;
		КонецЕсли;
	КонецЕсли;
	СуммыИзПодготовкиКПередаче();
	
КонецПроцедуры //ПриВыбореПодготовкиПередачи
//_____________________________________________________________________________
Процедура РассчитатьБалансовуюСтоимость()
	
	Если ДокументПодготовкаКПередаче.Выбран() = 1 Тогда
		СуммыИзПодготовкиКПередаче();
		
	ИначеЕсли ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
		    |Расчет итогов выполняется в режиме
		    |""Операции - Управление бухгалтерскими итогами"".");
		
	ИначеЕсли (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения суммы первоначальной стоимости по данным
					   |бухгалтерского учета документ необходимо записать."); 
			
	ИначеЕсли ОсновноеСредство.Выбран() = 0 Тогда
		Предупреждение("Не выбрано основное средство.");
		
	ИначеЕсли Проведен() = 1 Тогда
		Предупреждение("Для получения балансовой стоимости и начисленной 
						|амортизации сделайте документ непроведенным.");
		
	Иначе
		СведенияОбОС = глРасчетАмортизацииОС(ОсновноеСредство, ДатаДок);
		БалансоваяСтоимость        = СведенияОбОС.Получить("БалансоваяСтоимостьКон");
		РассчитаннаяАмортизация    = СведенияОбОС.Получить("РассчитаннаяАмортизацияБух");
		НачисленнаяАмортизацияКон  = СведенияОбОС.Получить("НачисленнаяАмортизацияКон");
		НачисленнаяАмортизация     = РассчитаннаяАмортизация + НачисленнаяАмортизацияКон;
	КонецЕсли;
	
КонецПроцедуры //РассчитатьБалансовуюСтоимость
//_____________________________________________________________________________
Процедура ПриВыбореПричиныВыбытия()
	
	Если Форма.Закладки.ТекущаяСтрока() = 2 Тогда
		Форма.ИспользоватьСлой("Причина, Основной",2);

		Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
			Форма.ИспользоватьСлой("Статья, Контрагент, Цена",1);
			ТекстЦены = "Оценочная стоимость:";
			ТекстКонтрагента = "Получатель:";
			Если (СтатьяПрочихДоходовИРасходов.ВидПрочихДоходовИРасходов <> Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы) Тогда
			   //или (СтатьяПрочихДоходовИРасходов.ВидПрочихДоходовИРасходов <> Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения) Тогда
			    СтатьяПрочихДоходовИРасходов = ПолучитьПустоеЗначение();
			КонецЕсли;
	
		ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) и (ДатаДок < '01.01.2004') Тогда
		    Форма.ИспользоватьСлой("Статья, Контрагент, Договор, Цена",1);
			ТекстЦены = "Оценочная стоимость:";
			ТекстКонтрагента = "Получатель:";
			Если СтатьяПрочихДоходовИРасходов.ВидПрочихДоходовИРасходов <> Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения Тогда
			    СтатьяПрочихДоходовИРасходов = ПолучитьПустоеЗначение();
			КонецЕсли;
	
		ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление) или
				  ((ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) и (ДатаДок >= '01.01.2004')) Тогда
		    Форма.ИспользоватьСлой("Контрагент, Договор",1);
			ТекстКонтрагента = "Получатель:";
			СтатьяПрочихДоходовИРасходов = ПолучитьПустоеЗначение();
	
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача Тогда
		    Форма.ИспользоватьСлой("Статья",1);
			Если СтатьяПрочихДоходовИРасходов.ВидПрочихДоходовИРасходов <> Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения Тогда
			    СтатьяПрочихДоходовИРасходов = ПолучитьПустоеЗначение();
			КонецЕсли;
	
		Иначе //Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
		    Форма.ИспользоватьСлой("Статья, Контрагент, Договор, Цена, Продажа, СтоимостьПродажи",1);
			ТекстЦены = "Цена реализации:";
			ТекстКонтрагента = "Покупатель:";
			Если СтатьяПрочихДоходовИРасходов.ВидПрочихДоходовИРасходов <> Перечисление.ВидыПрочихДоходовИРасходов.ВыбытиеОС Тогда
			    СтатьяПрочихДоходовИРасходов = ПолучитьПустоеЗначение();
			КонецЕсли;
		КонецЕсли;
		УправлениеКурсом();
	КонецЕсли;
	
КонецПроцедуры //ПриВыбореПричиныВыбытия
//_____________________________________________________________________________
Процедура ПриВыбореВариантаЗачетаАванса()
	ЗачитыватьАванс = ВариантЗачетаАванса.ПолучитьЗначение(ВариантЗачетаАванса.ТекущаяСтрока());
КонецПроцедуры //ПриВыбореВариантаЗачетаАванса



//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
//
// Вызывается из формул элементов диалога:
//  Колонка "Цена",
//  Колонка "НДС",
//  Колонка "НП".
//
// Описание:
//  Пересчитывает значение стоимости выбытия и налогов.
//
Процедура Пересчет(ИмяРеквизита="")
	
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.АктивныйЭлемент();
	КонецЕсли;
	
	Если (Форма.АктивныйЭлемент() = "Цена") Тогда
		РассчитатьНалоги();
		
	ИначеЕсли (Форма.АктивныйЭлемент() = "НДС") или (Форма.АктивныйЭлемент() = "НП") Тогда
		Стоимость = глПоказательДокумента(Контекст, "СуммаСНалогами");
	КонецЕсли;
	
КонецПроцедуры // Пересчет()

//*****************************************************************************
// ПриВыбореВариантаРасчетаНалогов()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "ВариантРасчетаНалогов".
//
// Описание:
//  Пересчитывает суммы в документе при смене варианта расчета налогов.
//
Процедура ПриВыбореВариантаРасчетаНалогов()
	
	РассчитатьНалоги();
	
КонецПроцедуры // ПриВыбореВариантаРасчетаНалогов()

//_____________________________________________________________________________
Процедура Печать()
	
	Если ДатаДок<Дата("23.03.2003") Тогда
		ИнвентарныеНомера = "";
		ОбъектОС = ПолучитьПустоеЗначение("Справочник.ОсновныеСредства");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = 1 Тогда
				ОбъектОС = ОсновноеСредство;
			КонецЕсли;
			ИнвентарныеНомера = ?(ИнвентарныеНомера = "", "", ИнвентарныеНомера + "; " + РазделительСтрок);
			ИнвентарныеНомера = ИнвентарныеНомера + СокрЛ(ОсновноеСредство.Код);
		КонецЦикла;
		
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("ОС-1_97");
		Сдатчик = ОбъектОС.Подразделение.Получить(ДатаДок);
		Получатель = Контрагент;
		Если (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
		или (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		или (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет) Тогда
			СрокИспользования = ""+ОбъектОС.СрокПолезногоИспользования.Получить(ДатаДок)+" мес";
		Иначе
			СрокИспользования = "";
		КонецЕсли;
		
		НормаАмортизации = "";
		КодНормы = "";
		Если (ОбъектОС.ПодлежитАмортизации = 0)
		или (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоЕдинымНормам) Тогда
			НормаАмортизации = ОбъектОС.КоэффициентАмортизации.Получить(ДатаДок);
			Если ОбъектОС.ШифрПоЕНАОФ.Выбран() = 1 Тогда
				КодНормы = ОбъектОС.ШифрПоЕНАОФ.Код;
			КонецЕсли;
		КонецЕсли;
		
		Если ОбъектОС.ДатаВводаВЭксплуатацию <> Дата(0) Тогда
			ДатаВводаВЭксплуатацию = ОбъектОС.ДатаВводаВЭксплуатацию;
		Иначе
			ДатаВводаВЭксплуатацию = "";
		КонецЕсли;    
		
		ПредставлениеГода = Лев(ДатаГод(ДатаДок),2);
		Таб.Вывести();
		Таб.ТолькоПросмотр(1);
		Таб.ПараметрыСтраницы(2,,, 10, 0, 0, 0,,,,,);
		Таб.Опции(0,0,0,0,"ОпцииПечатиОС1","ОкноОС1");
		Таб.Показать();
		
	Иначе
		
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    ЦеныВДоговоре = 2;
			Кратность = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
				Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
			КонецЕсли;
		Иначе
			ЦеныВДоговоре = 1;
		КонецЕсли;
	    
		ДатаАктаВВода		= ОсновноеСредство.ДатаВводаВЭксплуатацию;
		
		//Реквизиты заполняемые только при вводе в эксплуатацию ОС
		РукПолучателя       = "";
		ДолжностьРукПолучателя = "";
		ПодрПолучателя      = "";
		НачСтоимость        = "";
		СрокПолезнИспПриПост ="";                
		СпособАморт         = "";
		НормаАморт 			= "";
		ГлавБухПолучателя   = "";
		ИтогНачСтоимость	= ""; 
		
		//Реквизиты заполняемые при передаче ОС
		РукСдатчика			= "("+ФИО(Константа.Руководитель.Получить(ДатаДок))+")";
		ДолжностьРукСдатчика = Константа.Руководитель.Получить(ДатаДок).Должность;
		НаимСдатчика 		= СокрЛП(Константа.НазваниеОрганизации);
		АдресСдатчика 		= глПредставлениеАдреса(Константа.АдресОрганизации);
		глДобавитьРеквизит(АдресСдатчика, ", тел. : ", Константа.ТелефоныОрганизации);
		РеквСдатчика 		= "";
		Если РасчетныйСчет.Выбран() = 1 Тогда
			глДобавитьРеквизит(РеквСдатчика, "р/с ", СокрЛП(РасчетныйСчет.Номер) + " в " + РасчетныйСчет.БанкОрганизации);
			глДобавитьРеквизит(РеквСдатчика, ", БИК ", СокрЛП(РасчетныйСчет.БанкОрганизации.Код));
			глДобавитьРеквизит(РеквСдатчика, ", корр/с ", РасчетныйСчет.БанкОрганизации.КоррСчет);
		КонецЕсли;
		ПодрСдатчика 		= "";
		ДоговорПередачи 	= Договор;
		ДатаПередачи 		= ДатаДок;
		Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
		    ЦенаПродажи 		= Стоимость;
		ИначеЕсли (ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал) или
				  ((ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) и (ДатаДок < '01.01.2004')) Тогда	  
			ЦенаПродажи 		= Цена; 
		Иначе
			ЦенаПродажи 		= 0;
		КонецЕсли;
		ИтогЦенаПрдажи 		= ЦенаПродажи*КоличествоСтрок();
		
		Если ЦеныВДоговоре = 2 Тогда
			ЦенаПродажи = ЦенаПродажи*Курс/Кратность;
			ИтогЦенаПрдажи = ИтогЦенаПрдажи*Курс/Кратность;
		КонецЕсли;
		ЦенаПродажи    = Формат(ЦенаПродажи, "Ч015.2"); 
		ИтогЦенаПрдажи = Формат(ИтогЦенаПрдажи, "Ч015.2");
		
		ГлавБухСдатчика 	= "("+ФИО(Константа.ГлБухгалтер.Получить(ДатаДок))+")";
		НаимПолучателя      = СокрЛП(Контрагент.ПолнНаименование);
		АдресПолучателя     = СокрЛП(Контрагент.ЮридическийАдрес)+", тел: "+СокрЛП(Контрагент.Телефоны);
		РеквПолучателя      = "";
		Если Контрагент.ОсновнойСчет.Выбран() = 1 Тогда
			глДобавитьРеквизит(РеквПолучателя, "р/с ", СокрЛП(Контрагент.ОсновнойСчет.Номер) + " в " + Контрагент.ОсновнойСчет.БанкОрганизации);
			глДобавитьРеквизит(РеквПолучателя, ", БИК ", СокрЛП(Контрагент.ОсновнойСчет.БанкОрганизации.Код));
			глДобавитьРеквизит(РеквПолучателя, ", корр/с ", Контрагент.ОсновнойСчет.БанкОрганизации.КоррСчет);
		КонецЕсли;
		
		ВыбратьСтроки();
		ПолучитьСтроку();
		ПодрСдатчика 		= ОсновноеСредство.Подразделение.Получить(ДатаДок);
		ДатаВвода  			= ОсновноеСредство.ДатаВводаВЭксплуатацию;
		Если (ОсновноеСредство.Группа = Перечисление.ГруппыОС.Здания) или (ОсновноеСредство.Группа = Перечисление.ГруппыОС.Сооружения) Тогда
			Здания = 1;
		КонецЕсли;
		
		ОКОФ = СтрЗаменить(ОсновноеСредство.КодПоОКОФ,"_"," ");
		
		ВыбратьСтроки();
		Если Здания = 1 Тогда
			Если КоличествоСтрок()>1 Тогда
				Пока ПолучитьСтроку()=1 Цикл
					Таб = СоздатьОбъект("Таблица");
					Таб.ИсходнаяТаблица("ОС-1а");
					НомерАкта 	= НомерДок+"/"+НомерСтроки;
					ИнвНомер 	= ОсновноеСредство.Код;
					НаимОС 		= ОсновноеСредство.Наименование;
					НомерГруппы = Формат(ОсновноеСредство.АмортизационнаяГруппа.ПорядковыйНомер(),"Ч05");
					СрокПолезнИспПриПеред = Формат(ОсновноеСредство.СрокПолезногоИспользования.Получить(ДатаДок),"Ч05");
					ДатаВвода  			= ОсновноеСредство.ДатаВводаВЭксплуатацию;
					НачАмортизация = Формат(НачисленнаяАмортизация,"Ч015.2");
					ОстСтоимость = Формат(БалансоваяСтоимость - НачисленнаяАмортизация,"Ч015.2"); 
					
					Экспл = СоздатьОбъект("Периодический");
					Экспл.ИспользоватьОбъект("Состояние", ОсновноеСредство);
					СрокЭкспл=0;
					НачалоЭкспл =0;
					Экспл.ВыбратьЗначения(ДатаВвода, ДатаДок-1);
					Пока Экспл.ПолучитьЗначение() = 1 Цикл
					    Если (Экспл.Значение = Перечисление.СостоянияОС.В_Эксплуатации)
						ИЛИ (Экспл.Значение = Перечисление.СостоянияОС.ПереданоВТекущуюАренду) Тогда
					        СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
							НачалоЭкспл = Экспл.ДатаЗнач;
						Иначе
							СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
							НачалоЭкспл = 0;
					    КонецЕсли;
					КонецЦикла;
					СрокЭкспл = СрокЭкспл + ?(НачалоЭкспл=0,0,ДатаДок - НачалоЭкспл);
					СрокЭкспл = ?(Окр(СрокЭкспл/30.5,0,1)>0,Строка(Окр(СрокЭкспл/30.5,0,1))+" мес.","");
					
					Таб.Вывести();
					Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1а","ОкноОС_1а");
					Таб.ТолькоПросмотр(1);
					Таб.ПараметрыСтраницы(2);
					
					Таб.Показать("Акт ОС-1а");
				КонецЦикла;
			Иначе
				Таб = СоздатьОбъект("Таблица");
				Таб.ИсходнаяТаблица("ОС-1а");
				НомерАкта 	= НомерДок;
				ПолучитьСтроку();
				ИнвНомер 	= ОсновноеСредство.Код;
				НаимОС 		= ОсновноеСредство.Наименование;
				НомерГруппы = Формат(ОсновноеСредство.АмортизационнаяГруппа.ПорядковыйНомер(),"Ч05");
				СрокПолезнИспПриПеред = Формат(ОсновноеСредство.СрокПолезногоИспользования.Получить(ДатаДок),"Ч05");
				
				НачАмортизация = Формат(НачисленнаяАмортизация,"Ч015.2");
				ОстСтоимость = Формат(БалансоваяСтоимость - НачисленнаяАмортизация,"Ч015.2"); 
				
				Экспл = СоздатьОбъект("Периодический");
				Экспл.ИспользоватьОбъект("Состояние", ОсновноеСредство);
				СрокЭкспл=0;
				НачалоЭкспл =0;
				Экспл.ВыбратьЗначения(ДатаВвода, ДатаДок-1);
				Пока Экспл.ПолучитьЗначение() = 1 Цикл
					Если (Экспл.Значение = Перечисление.СостоянияОС.В_Эксплуатации)
						ИЛИ (Экспл.Значение = Перечисление.СостоянияОС.ПереданоВТекущуюАренду) Тогда
						СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
						НачалоЭкспл = Экспл.ДатаЗнач;
					Иначе
						СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
						НачалоЭкспл = 0;
					КонецЕсли;
				КонецЦикла;
				СрокЭкспл = СрокЭкспл + ?(НачалоЭкспл=0,0,ДатаДок - НачалоЭкспл);
				СрокЭкспл = ?(Окр(СрокЭкспл/30.5,0,1)>0,Строка(Окр(СрокЭкспл/30.5,0,1))+" мес.","");
				Таб.Вывести();
				Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1а","ОкноОС_1а");
				Таб.ТолькоПросмотр(1);
				Таб.ПараметрыСтраницы(2);
				
				Таб.Показать("Акт ОС-1а");
			КонецЕсли; 
		Иначе
			Таб = СоздатьОбъект("Таблица");
			НомерАкта 	= НомерДок;
			Если КоличествоСтрок()>1 Тогда
				Таб.ИсходнаяТаблица("ОС-1б");
				СрокПолезнИспПриПеред = "";
				
				Таб.ВывестиСекцию("Шапка1");
				Таб.ВывестиСекцию("Шапка2");
				Пока ПолучитьСтроку()=1 Цикл
					Нс = НомерСтроки;
					ИнвНомер 	= ОсновноеСредство.Код;
					НаимОС 		= ОсновноеСредство.Наименование;
					НомерГруппы = Формат(ОсновноеСредство.АмортизационнаяГруппа.ПорядковыйНомер(),"Ч05");
					ДатаВвода  			= ОсновноеСредство.ДатаВводаВЭксплуатацию;
					Таб.ВывестиСекцию("Строка2");
				КонецЦикла;
				Если КоличествоСтрок()<25 Тогда
					Для х=КоличествоСтрок()+1 по 25 Цикл
						Таб.ВывестиСекцию("Строка2П");	
					КонецЦикла;
				КонецЕсли; 
				Таб.ВывестиСекцию("Подвал2");
				Таб.ВывестиСекцию("Шапка3");
				ВыбратьСтроки();
				Пока ПолучитьСтроку()=1 Цикл
					НачАмортизация = Формат(НачисленнаяАмортизация,"Ч015.2");
					ОстСтоимость = Формат(БалансоваяСтоимость - НачисленнаяАмортизация,"Ч015.2"); 
					ДатаВвода  			= ОсновноеСредство.ДатаВводаВЭксплуатацию;
					Экспл = СоздатьОбъект("Периодический");
					Экспл.ИспользоватьОбъект("Состояние", ОсновноеСредство);
					СрокЭкспл=0;
					НачалоЭкспл =0;
					Экспл.ВыбратьЗначения(ДатаВвода, ДатаДок-1);
					Пока Экспл.ПолучитьЗначение() = 1 Цикл
					    Если (Экспл.Значение = Перечисление.СостоянияОС.В_Эксплуатации)
						ИЛИ (Экспл.Значение = Перечисление.СостоянияОС.ПереданоВТекущуюАренду) Тогда
							СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
							НачалоЭкспл = Экспл.ДатаЗнач;
						Иначе
							СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
							НачалоЭкспл = 0;
						КонецЕсли;
					КонецЦикла;
					СрокЭкспл = СрокЭкспл + ?(НачалоЭкспл=0,0,ДатаДок - НачалоЭкспл);
					СрокЭкспл = ?(Окр(СрокЭкспл/30.5,0,1)>0,Строка(Окр(СрокЭкспл/30.5,0,1))+" мес.","");
					Таб.ВывестиСекцию("Строка3");
				КонецЦикла;
				Если КоличествоСтрок()<25 Тогда
					Для х=КоличествоСтрок()+1 по 25 Цикл
						Таб.ВывестиСекцию("Строка3П");	
					КонецЦикла;
				КонецЕсли; 
				Таб.ВывестиСекцию("Подвал3");
				Таб.НоваяСтраница();
				Таб.ВывестиСекцию("Шапка4");
				Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1б","ОкноОС_1б");
				Таб.ТолькоПросмотр(1);
				Таб.ПараметрыСтраницы(1);
				
				Таб.Показать("Акт ОС-1б");
			Иначе
				ПолучитьСтроку();
				
				ИнвНомер 	= ОсновноеСредство.Код;
				НаимОС 		= ОсновноеСредство.Наименование;
				НомерГруппы = Формат(ОсновноеСредство.АмортизационнаяГруппа.ПорядковыйНомер(),"Ч05");
				СрокПолезнИспПриПеред = Формат(ОсновноеСредство.СрокПолезногоИспользования.Получить(ДатаДок),"Ч05");
				
				НачАмортизация = Формат(НачисленнаяАмортизация,"Ч015.2");
				ОстСтоимость = Формат(БалансоваяСтоимость - НачисленнаяАмортизация,"Ч015.2"); 
				Экспл = СоздатьОбъект("Периодический");
				Экспл.ИспользоватьОбъект("Состояние", ОсновноеСредство);
				СрокЭкспл=0;
				НачалоЭкспл =0;
				Экспл.ВыбратьЗначения(ДатаВвода, ДатаДок-1);
				Пока Экспл.ПолучитьЗначение() = 1 Цикл
					Если (Экспл.Значение = Перечисление.СостоянияОС.В_Эксплуатации)
					ИЛИ (Экспл.Значение = Перечисление.СостоянияОС.ПереданоВТекущуюАренду) Тогда
						СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
						НачалоЭкспл = Экспл.ДатаЗнач;
					Иначе
						СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0,0,Экспл.ДатаЗнач - НачалоЭкспл);
						НачалоЭкспл = 0;
					КонецЕсли;
				КонецЦикла;
				СрокЭкспл = СрокЭкспл + ?(НачалоЭкспл=0,0,ДатаДок - НачалоЭкспл);
				СрокЭкспл = ?(Окр(СрокЭкспл/30.5,0,1)>0,Строка(Окр(СрокЭкспл/30.5,0,1))+" мес.","");
				
				Таб.ИсходнаяТаблица("ОС-1");
				Таб.Вывести();
				Таб.Опции(0,0,0,0,"ОпцииПечатиОС_1","ОкноОС_1");
				Таб.ТолькоПросмотр(1);
				Таб.ПараметрыСтраницы(2);
				
				Таб.Показать("Акт ОС-1");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;
    
	РасчетныйСчет = Константа.ОсновнойБанковскийСчет;
	ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа;
	СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
	СтавкаНП = глБезНалога("НП");
	НДСВозмещен = 1;
	ЗачитыватьАванс = 0;
	ПодготовкаПроизведена = 2;
	ВРН = Константа.ОсновнойВариантРасчетаНалоговОтгрузки;
	Если (ВРН.СтавкаНП.Выбран() = 1) и
		 (ВРН.СтавкаНДС.Выбран() = 1) Тогда
		ВариантРасчетаНалогов = ВРН;
		
	Иначе // попробуем найти подходящий из существующих вариантов расчета налогов
		СтНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС").Ставка;
		СтНП  = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП").Ставка;
		
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			
			Если ((ВРН.СтавкаНДС.Выбран() = 1)
			    и (СпрВариант.СтавкаНДС = ВРН.СтавкаНДС)
			    и (СпрВариант.СуммаВключаетНДС = ВРН.СуммаВключаетНДС))
				
			 или ((ВРН.СтавкаНДС.Выбран() = 0)
				и (СпрВариант.СтавкаНДС.Ставка = СтНДС)
			    и (СпрВариант.СуммаВключаетНДС = ВРН.СуммаВключаетНДС)) Тогда
					
				Если ((ВРН.СтавкаНП.Выбран() = 1)
				    и (СпрВариант.СтавкаНП = ВРН.СтавкаНП)
				    и (СпрВариант.СуммаВключаетНП = ВРН.СуммаВключаетНП))
					
				 или ((ВРН.СтавкаНП.Выбран() = 0)
					и (СпрВариант.СтавкаНП.Ставка  = СтНП)
				    и (СпрВариант.СуммаВключаетНП = ВРН.СуммаВключаетНП)) Тогда
		
					ВариантРасчетаНалогов = СпрВариант.ТекущийЭлемент();
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПоказать.Доступность(0);
		Форма.кнОчиститьОснование.Доступность(0);
	КонецЕсли;
	Если ДокументПодготовкаКПередаче.Выбран() = 1 Тогда
		ПодготовкаПроизведена = 1;
	Иначе
		ПодготовкаПроизведена = 2;
	КонецЕсли;
	Сч01 = СчетПоКоду("01.1");
	Сч012 = СчетПоКоду("01.2");
	Сч02 = СчетПоКоду("02.1");
	Сч010 = СчетПоКоду("010");

	СписокПричинВыбытия.ДобавитьЗначение(Перечисление.ПричиныВыбытияОС.Продажа);
	СписокПричинВыбытия.ДобавитьЗначение(Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача);
	СписокПричинВыбытия.ДобавитьЗначение(Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал);
	СписокПричинВыбытия.ДобавитьЗначение(Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества);
	СписокПричинВыбытия.ДобавитьЗначение(Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление);
	СписокПричинВыбытия.ТекущаяСтрока(СписокПричинВыбытия.НайтиЗначение(ПричинаВыбытия));
	
    Форма.ИспользоватьЗакладки(1);
    Форма.Закладки.ДобавитьЗначение("ОС", "Подготовка к передаче");
	Форма.Закладки.ДобавитьЗначение("Покупатель", "Передача");
	Форма.ИспользоватьСлой("ОбщиеСведения, Основной, ОсновныеСредства", 2);
	
	ПриВыбореПодготовкиПередачи();
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	Форма.НДС.Доступность(УчитыватьНДС);
	Форма.НП.Доступность(УчитыватьНП);
	Форма.ПодписьСтавкиНДС.Доступность(УчитыватьНДС);
	Форма.ПодписьСтавкиНП.Доступность(УчитыватьНП);
	
	ВариантЗачетаАванса.ДобавитьЗначение(1, "не зачитывать");
	ВариантЗачетаАванса.ДобавитьЗначение(2, "только по договору");
	ВариантЗачетаАванса.ДобавитьЗначение(0, "без указания договора");
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));
	НачальнаяДатаДокумента = ДатаДок;
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если НомерЗакладки = 2 Тогда
		Форма.ИспользоватьСлой("ОбщиеСведения, ОсновныеСредства",0);
	    ПриВыбореПричиныВыбытия();
	
	Иначе
		Форма.ИспользоватьСлой("ОбщиеСведения, ОсновныеСредства",1);
	    Форма.ИспользоватьСлой("Статья, Контрагент, Договор, Цена, Продажа, " +
							   "СтоимостьПродажи, Причина", 0);
		ПриВыбореПодготовкиПередачи();
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "СтатьяПрочихДоходовИРасходов" Тогда
		Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
			ОткрытьФорму("Справочник.ПрочиеДоходыИРасходы", Перечисление.ВидыПрочихДоходовИРасходов.ВыбытиеОС);
		
		ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
			ОткрытьФорму("Справочник.ПрочиеДоходыИРасходы", Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы);
			
		Иначе
			ОткрытьФорму("Справочник.ПрочиеДоходыИРасходы", Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения);
		КонецЕсли;
		Флаг = 0;
	
	ИначеЕсли ЭлементДиалога = "ВариантРасчетаНалогов" Тогда
		Флаг = 0;
		СписокВариантов = СоздатьОбъект("СписокЗначений");
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			Если (СпрВариант.СтавкаНП.Выбран() = 1) и
				 (СпрВариант.СтавкаНДС.Выбран() = 1) Тогда
				СписокВариантов.ДобавитьЗначение(СпрВариант.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;
		Значение = ВариантРасчетаНалогов;
		Если СписокВариантов.ВыбратьЗначение(Значение, , , , 2) = 0 Тогда
			Возврат;
		КонецЕсли;
		ВариантРасчетаНалогов = Значение;
		ПриВыбореВариантаРасчетаНалогов();
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли (ПодготовкаПроизведена = 1) и (ДокументПодготовкаКПередаче.Выбран() = 0) Тогда
		Предупреждение("Введите данные о документе подготовка к передаче
					   |или поставьте переключатель ""Подготовка к передаче основного средства""
					   |в положение ""Производится одновременно с выбытием""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
		Если Вопрос("Не выбрано выбывающее основное средство.
					|Вернуться к редактированию документа?","Да+Нет") = "Да" Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЦеныВДоговоре = 1; // в рублях
	Если Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
	КонецЕсли;
	
	Если ЦеныВДоговоре = 2 Тогда
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
		
		Операция.СуммаОперации = Окр(Стоимость*КоличествоСтрок()*Курс/Кратность, 2, 1);
				
	Иначе
		Операция.СуммаОперации = Стоимость*КоличествоСтрок();
	КонецЕсли;    
	
	Если ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
		//Ничего не меняем		
	ИначеЕсли ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
		Операция.СуммаОперации = Окр(Цена*КоличествоСтрок(), 2, 1);
	Иначе
		Операция.СуммаОперации = Окр(БалансоваяСтоимость*КоличествоСтрок(), 2, 1);
	КонецЕсли;
		
	Операция.Содержание = "Выбытие ОС: "+ПричинаВыбытия;
	ВсегоСтоимость = Операция.СуммаОперации; 
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Акт приемки-передачи ОС-1";
ТаблицаПечФорм.Кнопка       = "Акт ОС-1";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");