Перем ТекстДляОСВСоставеМПЗ,СпрОС;
//******************************************************************************
// ДоначислениеАмортизацииДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ДоначислениеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте, СписыватьВНУ = 1)
	
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог"); 
	НачисленнаяАмортизацияНУ = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалогКон");
	КапВложенияНаправленныеНаРасходы =СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходы");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизацияНУ - КапВложенияНаправленныеНаРасходы;
	
	Если СписыватьВНУ = 0 Тогда
		Если ОстаточнаяСтоимость <> 0 Тогда
			Возврат;
		КонецЕсли;                                                   
	КонецЕсли;                                                   
	
	Если РассчитаннаяАмортизация <> 0  Тогда
		СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(ОсновноеСредство.ВидРасхода.Получить(ДатаДок), ОсновноеСредство.ЭлементРасхода.Получить(ДатаДок), ОсновноеСредство.Объект.Получить(ДатаДок), ДатаДок);
		СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		Если ПустоеЗначение(СчетРасходов) = 1 Тогда
			ТекстСообщения = "На закладке ""Налоговый учет"" неверно указано направление отнесения расходов по начисленной амортизации для объекта: "
							+ ОсновноеСредство.Наименование + ", инв.№" + ОсновноеСредство.Код + ".";
			глНеПроводить(Контекст, ТекстСообщения, ОсновноеСредство.ТекущийЭлемент());
			Возврат;
		КонецЕсли;
		СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, ОсновноеСредство.СчетЗатрат.Получить(ДатаДок), ОсновноеСредство.Субконто1.Получить(ДатаДок), СчетРасходов);
		
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПустоеЗначение(СчетРасходов) = 0 Тогда
			Операция.Дебет.Счет = СчетРасходов;
			Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
			Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
			Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
		КонецЕсли;
		Операция.Кредит.Счет = СчетПоКоду("Н05.02");
		Операция.Кредит.Субконто(1, ОсновноеСредство);
		Операция.Сумма = РассчитаннаяАмортизация;
	КонецЕсли;
	
КонецПроцедуры // ДоначислениеАмортизацииДляЦелейНалоговогоУчета()

//******************************************************************************
// СписаниеАмортизацииДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте, СписыватьВНУ = 1)
	                                                                                     
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог");
	НачисленнаяАмортизацияНУ = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалогКон");
	КапВложенияНаправленныеНаРасходы =СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходы");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизацияНУ - КапВложенияНаправленныеНаРасходы;
	
	Если СписыватьВНУ = 0 Тогда
		Если ОстаточнаяСтоимость <> 0 Тогда
			Возврат;
		КонецЕсли;                                                   
	КонецЕсли;                                                   
	
	Если НачисленнаяАмортизацияНУ <> 0  Тогда
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Списана амортизация";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н05.02");
		Операция.Дебет.Субконто(1, ОсновноеСредство);
		Если (ДатаДок>='01.01.2006') И (ПустоеЗначение(ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ)=0) Тогда
			Операция.Кредит.Счет = СчетПоКоду("Н05.МЦ");    
		Иначе
			Операция.Кредит.Счет = СчетПоКоду("Н05.01");
		КонецЕсли;
		Операция.Кредит.Субконто(1, ОсновноеСредство);
		Операция.Сумма = НачисленнаяАмортизацияНУ;
	КонецЕсли;
	
КонецПроцедуры // СписаниеАмортизацииДляЦелейНалоговогоУчета()

//******************************************************************************
// ВыбытиеОСДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ВыбытиеОСДляЦелейНалоговогоУчета(СведенияОбОбъекте, СписыватьВНУ = 1)
	
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог"); 
	КапВложенияНаправленныеНаРасходы =СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходы");
	НачисленнаяАмортизацияНУ = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалогКон");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизацияНУ - КапВложенияНаправленныеНаРасходы;
	                 
	Если ОстаточнаяСтоимость <> 0 Тогда
		Если СписыватьВНУ = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Списание остаточной стоимости";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н09");
		Операция.Дебет.ВнереализационныеРасходы = Перечисление.ВнереализационныеРасходы.ПрочиеВнереализационныеРасходы;
		Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.СписаниеИмущества;
		Если (ДатаДок>='01.01.2006') И (ПустоеЗначение(ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ)=0) Тогда
			Операция.Кредит.Счет = СчетПоКоду("Н05.МЦ");    
		Иначе
			Операция.Кредит.Счет = СчетПоКоду("Н05.01");
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.СписаниеИмущества;
		КонецЕсли;
		Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
		Операция.Сумма = ОстаточнаяСтоимость;		
	
	КонецЕсли;                               
	
	ТекстДляОСВСоставеМПЗ="";
	Если (ДатаДок>='01.01.2006') И (ПустоеЗначение(ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ)=0) Тогда
		Если ПустоеЗначение(ОсновноеСредство.ДатаВводаВЭксплуатацию)=1 Тогда
			СпрОС.ДатаВводаВЭксплуатацию = ДатаДок;
			СпрОС.Записать();
		КонецЕсли;
		ТекстДляОСВСоставеМПЗ="Внимание! Указанные ОС могли быть отражены в бухгалтерском учете в составе МПЗ.
							  |Возможно, следует отразить в бухгалтерском учете списание материалов: "+ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ+" - код: "+ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ.Код+".";
	КонецЕсли;	

	
КонецПроцедуры // ВыбытиеОСДляЦелейНалоговогоУчета()    

//******************************************************************************
//  ВключениеКапитальныхВложенийВРасходы()
//
// Описание:
// Включение не более 10% от капитальных вложений в состав расходов.
//
Процедура ВключениеКапитальныхВложенийВРасходы(СведенияОбОбъекте)
		
	КапВложенияНаправленныеНаРасходы = СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходы");  	

	Если КапВложенияНаправленныеНаРасходы <> 0 Тогда 
		
		ВариантУчетаРасходовПоАмортизационнойПремии = Константа.ВариантУчетаРасходовПоАмортизационнойПремии.Получить(ДатаДок);
		Если ВариантУчетаРасходовПоАмортизационнойПремии = Перечисление.ВариантыУчетаРасходовПоАмортизационнойПремии.ВСоставеКосвенныхРасходов Тогда
			СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(Перечисление.ВидыРасходов.КосвенныеРасходы, Перечисление.ГруппыВидыРасходов.АмортизационнаяПремия, "");
			СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		Иначе
			СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(ОсновноеСредство.ВидРасхода.Получить(ДатаДок), ОсновноеСредство.ЭлементРасхода.Получить(ДатаДок), ОсновноеСредство.Объект.Получить(ДатаДок), ДатаДок);
			СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		КонецЕсли;  
		
		СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, ОсновноеСредство.СчетЗатрат.Получить(ДатаДок), ОсновноеСредство.Субконто1.Получить(ДатаДок), СчетРасходов);
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Включение кап.вложений в расходы";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПустоеЗначение(СчетРасходов) = 0 Тогда
			Операция.Дебет.Счет = СчетРасходов;
			Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
			Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
			Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
		КонецЕсли;

		Если (ДатаДок>='01.01.2006') И (ПустоеЗначение(ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ)=0) Тогда
			Операция.Кредит.Счет = СчетПоКоду("Н05.МЦ");
		Иначе
			Операция.Кредит.Счет = СчетПоКоду("Н05.01");
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие;
		КонецЕсли;
	
		Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
		Операция.Сумма = КапВложенияНаправленныеНаРасходы; 
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Включение кап.вложений в расходы";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчетПоКоду("Н05.КВ");
		Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
		Операция.Сумма = КапВложенияНаправленныеНаРасходы;
	КонецЕсли;		                                      

	КапВложенияНаправленныеНаРасходыОстаток = СведенияОбОбъекте.Получить("КапВложенияНаправленныеНаРасходыОстаток") - КапВложенияНаправленныеНаРасходы;
	Если КапВложенияНаправленныеНаРасходыОстаток <> 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Списание суммы кап.вложений";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н05.КВ");
		Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
		Операция.Сумма = -КапВложенияНаправленныеНаРасходыОстаток;
		СведенияОбОбъекте.Установить("КапВложенияНаправленныеНаРасходыОстаток",0); 		
	КонецЕсли;

КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Сч01_1 = СчетПоКоду("01.1");
	Сч01_2 = СчетПоКоду("01.2");
	Сч83_1 = СчетПоКоду("83.1");
	Сч84_1 = СчетПоКоду("84.1");
	Сч91_2 = СчетПоКоду("91.2");
	Сч99_1 = СчетПоКоду("99.1");
	СчМЦ_01= СчетПоКоду("МЦ.01");

	БухИтНПР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНПР.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтНПР.ПериодМ(ДатаДок);
	                        
	СписокОС = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокОС);
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства, СписокОС, 2);
	БухИт.ВыполнитьЗапрос(, ТекущийДокумент(),"83.1, МЦ.01");
		
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл 		
		СведенияОбОС = глРасчетАмортизацииОС(ОсновноеСредство, ДатаДок);		
		СведенияОбОС.Установить("КапВложенияНаправленныеНаРасходыОстаток",БухИтНПР.СКД("Н05.КВ",,, ОсновноеСредство)); 
		НачисленнаяАмортизацияНач = СведенияОбОС.Получить("НачисленнаяАмортизацияКон");
		СчетНачисленияАмортизации = СведенияОбОС.Получить("СчетНачисленияАмортизации");
		
		СписаноПостоянныхРазниц = 0;
		
		ДоначисленнаяАмортизация = НачисленнаяАмортизация - НачисленнаяАмортизацияНач;
		Если (ДоначисленнаяАмортизация <> 0) и (ПустоеЗначение(СчетНачисленияАмортизации) = 0) Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Сумма = ДоначисленнаяАмортизация;
			
			Если СчетНачисленияАмортизации.Забалансовый = 1 Тогда
				Операция.СодержаниеПроводки = "Износ за "+Формат(ДатаДок,"Д ММММГГГГ");
				Операция.Дебет.Счет = СчетНачисленияАмортизации;
				Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
				
			Иначе
				Если ОсновноеСредство.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
					ТекстСообщения = "Не указан счет отнесения затрат по начисленной амортизации для ОС: "+ОсновноеСредство.Наименование+", инв.№"+ОсновноеСредство.Код+".";
					глНеПроводить(Контекст, ТекстСообщения, ОсновноеСредство.ТекущийЭлемент());
					Возврат;
				КонецЕсли;
				Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
				
				Операция.Дебет.Счет = ОсновноеСредство.СчетЗатрат.Получить(ДатаДок);
				Операция.Дебет.Субконто(1, ОсновноеСредство.Субконто1.Получить(ДатаДок));
				Операция.Дебет.Субконто(2, ОсновноеСредство.Субконто2.Получить(ДатаДок));
				Операция.Дебет.Субконто(3, ОсновноеСредство.Субконто3.Получить(ДатаДок));
				Операция.Кредит.Счет = СчетНачисленияАмортизации;
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
			КонецЕсли;
			
			// Списание постоянных разниц
			Если СчетНачисленияАмортизации.Забалансовый <> 1 Тогда
				Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
					ВсегоПостоянныхРазниц = БухИтНПР.СНД("НПР.01",,, ОсновноеСредство);
					Если ВсегоПостоянныхРазниц <> 0 Тогда
						БалансоваяСтоимостьНач		= СведенияОбОС.Получить("БалансоваяСтоимостьНач");
						НачисленнаяАмортизацияНач   = СведенияОбОС.Получить("НачисленнаяАмортизацияНач");
						ОстаточнаяСтоимостьНаНачало = БалансоваяСтоимостьНач - НачисленнаяАмортизацияНач;
						Если ОстаточнаяСтоимостьНаНачало <> 0 Тогда
							СписатьПостоянныхРазниц = Окр(ВсегоПостоянныхРазниц * (ДоначисленнаяАмортизация / ОстаточнаяСтоимостьНаНачало), 2);
							Если СписатьПостоянныхРазниц <> 0 Тогда
								СчетДт = ОсновноеСредство.СчетЗатрат.Получить(ДатаДок);
								СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, ОсновноеСредство.Субконто1.Получить(ДатаДок));
								
								Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
								Операция.НомерЖурнала = "ПР";
								Операция.СодержаниеПроводки = "Списание постоянных разниц";
								Если ПустоеЗначение(СчетНПР) = 0 Тогда
									Операция.Дебет.Счет = СчетНПР;
									Операция.Дебет.Субконто(1, ОсновноеСредство.Субконто1.Получить(ДатаДок));
									Операция.Дебет.Субконто(2, ОсновноеСредство.Субконто2.Получить(ДатаДок));
									Операция.Дебет.Субконто(3, ОсновноеСредство.Субконто3.Получить(ДатаДок));
								КонецЕсли;
								Операция.Кредит.Счет = СчетПоКоду("НПР.01");
								Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
								Операция.Сумма = СписатьПостоянныхРазниц;
								
								СписаноПостоянныхРазниц = СписатьПостоянныхРазниц;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		СписыватьВНУ = 1;
		Если ДатаДок >= '01.01.2009' Тогда
			Если (Константа.МетодНачисленияАмортизацииНУ.Получить(ДатаДок) = Перечисление.МетодыНачисленияАмортизации.Линейный)
			ИЛИ (((ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
			ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
			ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа)) 
			И ((ОсновноеСредство.Группа = Перечисление.ГруппыОС.Здания) ИЛИ (ОсновноеСредство.Группа = Перечисление.ГруппыОС.Сооружения) ИЛИ (ОсновноеСредство.Группа = Перечисление.ГруппыОС.ПередаточныеУстройства)))
			ИЛИ ((ОсновноеСредство.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный) И (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа)) Тогда
				СписыватьВНУ = 1;
			Иначе
				СписыватьВНУ = 0;
			КонецЕсли;
		КонецЕсли;
		
		// Доначислим амортизацию для целей налогового учета.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			ДоначислениеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОС, СписыватьВНУ);
			
			// Если невозможно определить счет отнесения амортизации для целей налогового учета.
			Если СтатусВозврата() = 0 Тогда 
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если (НачисленнаяАмортизация <> 0) и (ПустоеЗначение(СчетНачисленияАмортизации) = 0) Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Сумма = НачисленнаяАмортизация;
			
			Если СчетНачисленияАмортизации.Забалансовый = 1 Тогда
				Операция.СодержаниеПроводки = "Списан износ";
				Операция.Кредит.Счет = СчетНачисленияАмортизации;
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				
			Иначе
				Операция.СодержаниеПроводки = "Списана амортизация";
				Операция.Кредит.Счет = Сч01_2;
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				Операция.Дебет.Счет = СчетНачисленияАмортизации;
				Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
			КонецЕсли;
		КонецЕсли;
		
		// Списание амортизации для целей налогового учета.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда			
			СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОС, СписыватьВНУ);
		КонецЕсли;
		
		Если БалансоваяСтоимость <> 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.СодержаниеПроводки = "Списана баланс.ст-ть";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Сумма = БалансоваяСтоимость;
			Операция.Кредит.Счет = Сч01_1;
			Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
			Операция.Дебет.Счет = Сч01_2;
			Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
		КонецЕсли;
		
		ОстаточнаяСтоимость = ?(СчетНачисленияАмортизации.Забалансовый = 1, БалансоваяСтоимость, БалансоваяСтоимость - НачисленнаяАмортизация);
		Если ОстаточнаяСтоимость <> 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ОС";
			Операция.СодержаниеПроводки = ?(СчетНачисленияАмортизации.Забалансовый = 1, "Списана баланс.ст-ть", "Списана остат.ст-ть");
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Если ТипСписания = 1 Тогда
				Операция.Дебет.Счет = Сч99_1;
				Операция.Дебет.ПрибылиИУбытки = Перечисление.ПрибылиИУбытки.ЧрезвычайныеРасходы;
				
			Иначе
				Операция.Дебет.Счет = Сч91_2;
				Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
			КонецЕсли;
			
			Операция.Кредит.Счет = Сч01_2;
			Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
			Операция.Сумма = ОстаточнаяСтоимость;    
		КонецЕсли;
		
		// Списание суммы переоценки.
		Если БухИт.ПолучитьСчет(, Сч83_1) = 1 Тогда
			Если БухИт.ПолучитьСубконто(,, ОсновноеСредство) = 1 Тогда
				Если БухИт.СКК("С") > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ОС";
					Операция.СодержаниеПроводки = "Сумма дооценки включена в состав нераспр. прибыли";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст); 
					Операция.Дебет.Счет = Сч83_1;
					Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
					Операция.Кредит.Счет = Сч84_1;
					Операция.Сумма = БухИт.СКК("С");
				КонецЕсли;	    
			КонецЕсли;
		КонецЕсли;
		
		// Если основное средство учитывается на забалансовом счете МЦ.01,
		// то необходимо списать его с этого счета.
		Если БухИт.ПолучитьСчет(, СчМЦ_01) = 1 Тогда
			Если БухИт.ПолучитьСубконто(, , ОсновноеСредство) = 1 Тогда
				Если БухИт.СКД("С") > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ОС";
					Операция.СодержаниеПроводки = "Списана первоначальная стоимость";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст); 
					Операция.Кредит.Счет = СчМЦ_01;
					Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
					Операция.Сумма = БухИт.СКД("С");
				КонецЕсли;	    
			КонецЕсли;
		КонецЕсли;
		
		// Списание постоянных разниц
		Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
			СписатьПостоянныхРазниц = БухИтНПР.СКД("НПР.01",,, ОсновноеСредство) - СписаноПостоянныхРазниц;
			Если СписатьПостоянныхРазниц <> 0 Тогда
				СчетДт = ПолучитьПустоеЗначение("Счет");
				Если ТипСписания = 1 Тогда
					СчетДт = Сч99_1;
					Субконто1 = Перечисление.ПрибылиИУбытки.ЧрезвычайныеРасходы;
					
				Иначе
					СчетДт = Сч91_2;
					Субконто1 = СтатьяПрочихДоходовИРасходов;
				КонецЕсли;
				СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, Субконто1);
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ПР";
				Операция.СодержаниеПроводки = "Списание постоянных разниц";
				Если ПустоеЗначение(СчетНПР) = 0 Тогда
					Операция.Дебет.Счет = СчетНПР;
				КонецЕсли;
				Операция.Кредит.Счет = СчетПоКоду("НПР.01");
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
				Операция.Сумма = СписатьПостоянныхРазниц;
			КонецЕсли;
		КонецЕсли;
		
		СпрОС = СоздатьОбъект("Справочник.ОсновныеСредства");
		Если СпрОС.НайтиЭлемент(ОсновноеСредство) = 0 Тогда
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		
		// Списание остаточной стоимости ОС для целей налогообложения.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			ВыбытиеОСДляЦелейНалоговогоУчета(СведенияОбОС, СписыватьВНУ); 
			Если СтатусВозврата() = 0 Тогда 
				Возврат;
			КонецЕсли;	
			ВключениеКапитальныхВложенийВРасходы(СведенияОбОС);
		КонецЕсли;
		
		Если ДатаДок < '01.01.2002' Тогда
			РассчитаннаяАмортизацияНалог = СведенияОбОС.Получить("РассчитаннаяАмортизацияНалог");
			НачисленнаяАмортизацияНалог = СведенияОбОС.Получить("НачисленнаяАмортизацияНалог");
			Если РассчитаннаяАмортизацияНалог <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.СодержаниеПроводки = "Начислена амортизация";
				Операция.Сумма = РассчитаннаяАмортизацияНалог;
				Операция.Кредит.Счет = СчетПоКоду("АОС");
				Операция.Кредит.ОсновныеСредства = ОсновноеСредство;
			КонецЕсли;
			
			Если НачисленнаяАмортизацияНалог + РассчитаннаяАмортизацияНалог <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ОС";
				Операция.СодержаниеПроводки = "Списана амортизация";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = НачисленнаяАмортизацияНалог + РассчитаннаяАмортизацияНалог;
				Операция.Дебет.Счет = СчетПоКоду("АОС");
				Операция.Дебет.ОсновныеСредства = ОсновноеСредство;
			КонецЕсли;
		КонецЕсли; 
		
		//СпрОС = СоздатьОбъект("Справочник.ОсновныеСредства");
		//Если СпрОС.НайтиЭлемент(ОсновноеСредство) = 0 Тогда
		//	СтатусВозврата(0); Возврат;
		//КонецЕсли;
		
		СпрОС.ДатаВыбытия = ДатаДок;
		Если ТипСписания = 1 Тогда
			СпрОС.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Иная;
			
		Иначе
			СпрОС.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Списание;
		КонецЕсли;
		СпрОС.Записать();
		
		УстановитьРеквизитСправочника(ОсновноеСредство, "НачислятьАмортизацию", 0, ДатаДок);
		УстановитьРеквизитСправочника(ОсновноеСредство, "Состояние", Перечисление.СостоянияОС.Выбыло, ДатаДок);
		
		ТекстСообщения = "В справочнике ""Основные средства"" отражено выбытие основного средства "+ОсновноеСредство;
					
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		
		Если ПустоеЗначение(ТекстДляОСВСоставеМПЗ) = 0 Тогда
			глСообщениеПроведения(ТекстДляОСВСоставеМПЗ, ТекущийДокумент(), -1);
		КонецЕсли;		
		
	КонецЦикла;
	Операция.Записать();
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаУдаленияПроведения()
	Пока ПолучитьСтроку() = 1 Цикл
		СпрОС = СоздатьОбъект("Справочник.ОсновныеСредства");
		Если СпрОС.НайтиЭлемент(ОсновноеСредство) = 0 Тогда
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		СпрОС.ДатаВыбытия = "";
		СпрОС.Записать();
	КонецЦикла;	
КонецПроцедуры
