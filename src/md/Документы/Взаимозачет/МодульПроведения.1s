//******************************************************************************
// Предопределенная процедура
// 
Процедура ОбработкаПроведения()
              
	Сч63 = СчетПоКоду("63");
	Сч91_1 = СчетПоКоду("91.1");
	Сч91_2 = СчетПоКоду("91.2");
	СчН03_08 = СчетПоКоду("Н03.08");
	СчН08 = СчетПоКоду("Н08");
	СчН09 = СчетПоКоду("Н09");

	Если ВидКорректировки = 0 Тогда //Взаимозачет
		Если ПустоеЗначение(Дебитор) = 1 Тогда
			ТекстСообщения = "Не указан дебитор.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;

		ИначеЕсли ПустоеЗначение(Кредитор) = 1 Тогда
			ТекстСообщения = "Не указан кредитор.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;

		ИначеЕсли (ИспользоватьВспомогательныйСчет = 1) и (ПустоеЗначение(СчетСписания) = 1) Тогда
			ТекстСообщения = "Не указан вспомогательный счет.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
			
		ИначеЕсли Итог("СуммаДеб") <> Итог("СуммаКред") Тогда
			ТекстСообщения = "Не совпадают суммы дебиторской и кредиторской задолженности.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ТабПроводокКред = СоздатьОбъект("ТаблицаЗначений");
		ТабПроводокКред.НоваяКолонка("КорСчет");
		ТабПроводокКред.НоваяКолонка("Субконто1");
		ТабПроводокКред.НоваяКолонка("Субконто2");
		ТабПроводокКред.НоваяКолонка("Субконто3");
		ТабПроводокКред.НоваяКолонка("Сумма");
	
		ТабПроводокДеб = СоздатьОбъект("ТаблицаЗначений");
		ТабПроводокДеб.НоваяКолонка("КорСчет");
		ТабПроводокДеб.НоваяКолонка("Субконто1");
		ТабПроводокДеб.НоваяКолонка("Субконто2");
		ТабПроводокДеб.НоваяКолонка("Субконто3");
		ТабПроводокДеб.НоваяКолонка("Сумма");
		                                     
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(Счет) = 1 Тогда
				ТекстСообщения = "В строке " + НомерСтроки + " не указан счет учета задолженности.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
		    
			Если СокрЛП(ВидЗадолженности) = "Кредиторская" Тогда
				Если СуммаКред <> 0 Тогда
					ТабПроводокКред.НоваяСтрока();
				    ТабПроводокКред.КорСчет   = Счет;
					ТабПроводокКред.Субконто1 = Кредитор;
					ТабПроводокКред.Субконто2 = Договор;
					ТабПроводокКред.Субконто3 = ВидРасчетов;
					ТабПроводокКред.Сумма     = СуммаКред;
				КонецЕсли;
		
			ИначеЕсли СокрЛП(ВидЗадолженности) = "Дебиторская" Тогда
				Если СуммаДеб <> 0 Тогда
					ТабПроводокДеб.НоваяСтрока();
				    ТабПроводокДеб.КорСчет   = Счет;
					ТабПроводокДеб.Субконто1 = Дебитор;
					ТабПроводокДеб.Субконто2 = Договор;
					ТабПроводокДеб.Субконто3 = ВидРасчетов;
					ТабПроводокДеб.Сумма     = СуммаДеб;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ТабПроводокКред.Свернуть("КорСчет, Субконто1, Субконто2, Субконто3", "Сумма");
		ТабПроводокДеб.Свернуть("КорСчет, Субконто1, Субконто2, Субконто3", "Сумма");
		
		Если ИспользоватьВспомогательныйСчет = 0 Тогда
			ТабПроводокДеб.ВыбратьСтроки();
			Пока ТабПроводокДеб.ПолучитьСтроку() = 1 Цикл
				
				ТабПроводокКред.ВыбратьСтроки();
				Пока ТабПроводокКред.ПолучитьСтроку() = 1 Цикл
					
					Если ТабПроводокКред.Сумма = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Если ТабПроводокДеб.Сумма > ТабПроводокКред.Сумма Тогда
						СуммаПроводки = ТабПроводокКред.Сумма;
					Иначе
						СуммаПроводки = ТабПроводокДеб.Сумма;
					КонецЕсли;
					
					Если СуммаПроводки <> 0 Тогда
					    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "БУ";
						Операция.СодержаниеПроводки = "Взаимозачет";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					  	Операция.Дебет.Счет = ТабПроводокКред.КорСчет;
					  	Операция.Дебет.Субконто(1, ТабПроводокКред.Субконто1);
					  	Операция.Дебет.Субконто(2, ТабПроводокКред.Субконто2);
					  	Операция.Дебет.Субконто(3, ТабПроводокКред.Субконто3);
					  	Операция.Кредит.Счет = ТабПроводокДеб.КорСчет;
					  	Операция.Кредит.Субконто(1, ТабПроводокДеб.Субконто1);
					  	Операция.Кредит.Субконто(2, ТабПроводокДеб.Субконто2);
					  	Операция.Кредит.Субконто(3, ТабПроводокДеб.Субконто3);
					  	Операция.Сумма = СуммаПроводки;
					КонецЕсли;
					
					ТабПроводокДеб.Сумма = ТабПроводокДеб.Сумма - СуммаПроводки;
					ТабПроводокКред.Сумма = ТабПроводокКред.Сумма - СуммаПроводки;
				КонецЦикла;
			КонецЦикла;
			
		Иначе	// Если ИспользоватьВспомогательныйСчет = 1
			ТабПроводокКред.ВыбратьСтроки();
			Пока ТабПроводокКред.ПолучитьСтроку() = 1 Цикл
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Взаимозачет";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			  	Операция.Дебет.Счет = ТабПроводокКред.КорСчет;
			  	Операция.Дебет.Субконто(1, ТабПроводокКред.Субконто1);
			  	Операция.Дебет.Субконто(2, ТабПроводокКред.Субконто2);
			  	Операция.Дебет.Субконто(3, ТабПроводокКред.Субконто3);
			  	Операция.Кредит.Счет = СчетСписания;
			  	Операция.Кредит.Субконто(1, Субконто1);
			  	Операция.Кредит.Субконто(2, Субконто2);
			  	Операция.Кредит.Субконто(3, Субконто3);
			  	Операция.Сумма = ТабПроводокКред.Сумма;
			КонецЦикла;
			
			ТабПроводокДеб.ВыбратьСтроки();
			Пока ТабПроводокДеб.ПолучитьСтроку() = 1 Цикл
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Взаимозачет";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			  	Операция.Дебет.Счет = СчетСписания;
			  	Операция.Дебет.Субконто(1, Субконто1);
			  	Операция.Дебет.Субконто(2, Субконто2);
			  	Операция.Дебет.Субконто(3, Субконто3);
			  	Операция.Кредит.Счет = ТабПроводокДеб.КорСчет;
			  	Операция.Кредит.Субконто(1, ТабПроводокДеб.Субконто1);
			  	Операция.Кредит.Субконто(2, ТабПроводокДеб.Субконто2);
			  	Операция.Кредит.Субконто(3, ТабПроводокДеб.Субконто3);
			  	Операция.Сумма = ТабПроводокДеб.Сумма;
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли ВидКорректировки = 1 Тогда //Перенос дебиторской задолж.
		Если ПустоеЗначение(Дебитор) = 1 Тогда
			ТекстСообщения = "Не указан дебитор.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;

		ИначеЕсли ПустоеЗначение(СчетСписания) = 1 Тогда
			ТекстСообщения = "Не указан счет переноса задолженности.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		                                     
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(Счет) = 1 Тогда
				ТекстСообщения = "В строке " + НомерСтроки + " не указан счет учета задолженности.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
		    
			Если СуммаДеб <> 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Перенос дебиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			  	Операция.Дебет.Счет = СчетСписания;
			  	Операция.Дебет.Субконто(1, Субконто1);
			  	Операция.Дебет.Субконто(2, Субконто2);
			  	Операция.Дебет.Субконто(3, Субконто3);
			  	Операция.Кредит.Счет = Счет;
			  	Операция.Кредит.Субконто(1, Дебитор);
			  	Операция.Кредит.Субконто(2, Договор);
			  	Операция.Кредит.Субконто(3, ВидРасчетов);
			  	Операция.Сумма = СуммаДеб;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидКорректировки = 2 Тогда //Перенос кредиторской задолж.
		Если ПустоеЗначение(Кредитор) = 1 Тогда
			ТекстСообщения = "Не указан кредитор.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;

		ИначеЕсли ПустоеЗначение(СчетСписания) = 1 Тогда
			ТекстСообщения = "Не указан счет переноса задолженности.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		                                     
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(Счет) = 1 Тогда
				ТекстСообщения = "В строке " + НомерСтроки + " не указан счет учета задолженности.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
		    
			Если СуммаКред <> 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Перенос кредиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			  	Операция.Дебет.Счет = Счет;
			  	Операция.Дебет.Субконто(1, Кредитор);
			  	Операция.Дебет.Субконто(2, Договор);
			  	Операция.Дебет.Субконто(3, ВидРасчетов);
				Операция.Кредит.Счет = СчетСписания;
			  	Операция.Кредит.Субконто(1, Субконто1);
			  	Операция.Кредит.Субконто(2, Субконто2);
			  	Операция.Кредит.Субконто(3, Субконто3);
			  	Операция.Сумма = СуммаКред;
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли ВидКорректировки = 3 Тогда //Списание дебиторской задолж.
		Если ПустоеЗначение(Дебитор) = 1 Тогда
			ТекстСообщения = "Не указан дебитор.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;

		БухИт63 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт63.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт63.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Дебитор); 
		БухИт63.ИспользоватьСубконто(ВидыСубконто.Договоры); 
		БухИт63.ВыполнитьЗапрос(, ТекущийДокумент(), "63",,, 1,, "С");
		
		БухИтН03 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтН03.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИтН03.ВыполнитьЗапрос(, ТекущийДокумент(), "Н03.08",,, 1,, "С");
		РезервНУ = БухИтН03.СКК();

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если БухИт63.ПолучитьСубконто(ВидыСубконто.Договоры,, Договор) = 1 Тогда
				РезервБУ = БухИт63.СКК();
			Иначе
				РезервБУ = 0;
			КонецЕсли;
			
			СписаниеЗаСчетРезерваБУ = Мин(РезервБУ, СуммаДеб);
			Если СписаниеЗаСчетРезерваБУ > 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Списание дебиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч63;
			  	Операция.Дебет.Субконто(1, Дебитор);
			  	Операция.Дебет.Субконто(2, Договор);
			  	Операция.Кредит.Счет = Счет;
			  	Операция.Кредит.Субконто(1, Дебитор);
			  	Операция.Кредит.Субконто(2, Договор);
			  	Операция.Кредит.Субконто(3, ВидРасчетов);
			  	Операция.Сумма = СписаниеЗаСчетРезерваБУ;
			КонецЕсли;
			
			УбыткиБУ = СуммаДеб - СписаниеЗаСчетРезерваБУ;
			Если УбыткиБУ > 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Списание дебиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч91_2;
			  	Операция.Дебет.Субконто(1, Субконто1);
			  	Операция.Кредит.Счет = Счет;
			  	Операция.Кредит.Субконто(1, Дебитор);
			  	Операция.Кредит.Субконто(2, Договор);
			  	Операция.Кредит.Субконто(3, ВидРасчетов);
			  	Операция.Сумма = УбыткиБУ;
			КонецЕсли;
			  
			СписаниеЗаСчетРезерваНУ = Мин(РезервНУ, СуммаНУ);
			Если СписаниеЗаСчетРезерваНУ > 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Списание дебиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчН03_08;
			  	Операция.Сумма = СписаниеЗаСчетРезерваНУ;
			  	
			  	РезервНУ = РезервНУ - СписаниеЗаСчетРезерваНУ;
			КонецЕсли;
			  
			РасходыНУ = СуммаНУ - СписаниеЗаСчетРезерваНУ;
			Если РасходыНУ > 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Списание дебиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчН09;
				Операция.Дебет.Субконто(1, Перечисление.ВнереализационныеРасходы.ДолгиНереальныеКВзысканию);
				Операция.Дебет.Субконто(3, Договор);
			  	Операция.Сумма = РасходыНУ;
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли ВидКорректировки = 4 Тогда //Списание кредиторской задолж.
		Если ПустоеЗначение(Кредитор) = 1 Тогда
			ТекстСообщения = "Не указан кредитор.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;

		БухИтНДС19 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНДС19.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИтНДС19.ИспользоватьПланСчетов(ОсновнойПланСчетов());
		БухИтНДС19.ИспользоватьСубконто(,, 1);
		БухИтНДС19.ИспользоватьСубконто(,, 1);
		БухИтНДС19.ВыполнитьЗапрос(, ТекущийДокумент(), "19.1,19.2,19.3,19.4",,, 1,, "С");
	
		БухИтНДС76 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНДС76.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИтНДС76.ИспользоватьПланСчетов(ОсновнойПланСчетов());
		БухИтНДС76.ИспользоватьСубконто(,, 1);
		БухИтНДС76.ИспользоватьСубконто(,, 1);
		БухИтНДС76.ВыполнитьЗапрос(, ТекущийДокумент(), "76.АВ",,, 1,, "С"); 
		
		БухИтЗПК = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтЗПК.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИтЗПК.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
		БухИтЗПК.ИспользоватьСубконто(ВидыСубконто.Договоры);
		БухИтЗПК.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);
		БухИтЗПК.ВключатьСубсчета(1,);
		БухИтЗПК.ВыполнитьЗапрос(,ТекущийДокумент(),"ЗПК",,,,,"С"); 
	
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			// Формируем бухгалтерские проводки
			Если СуммаКред <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Списание кредиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Счет;
			  	Операция.Дебет.Субконто(1, Кредитор);
			  	Операция.Дебет.Субконто(2, Договор);
			  	Операция.Дебет.Субконто(3, ВидРасчетов);
				Операция.Кредит.Счет = Сч91_1;
				Операция.Кредит.Субконто(1, Субконто1);
				Операция.Сумма = СуммаКред;
			КонецЕсли;
	
			Если СуммаНДС <> 0 Тогда
				// Распределение суммы НДС по субсчетам 19 или 76.АВ
				Если Счет = СчетПоКоду("62.2") Тогда
					БухИтНДС = БухИтНДС76;
				Иначе
					БухИтНДС = БухИтНДС19;
				КонецЕсли;
				
				СписаноНДС = 0;
				
				БухИтНДС.ВыбратьСчета();
				Пока БухИтНДС.ПолучитьСчет() = 1 Цикл
					Если БухИтНДС.ПолучитьСубконто(1,, Кредитор) = 1 Тогда
						БухИтНДС.ВыбратьСубконто(2);
						Пока БухИтНДС.ПолучитьСубконто(2) = 1 Цикл
							Если (ТипЗначенияСтр(БухИтНДС.Субконто(2)) = "Документ") и (ПустоеЗначение(БухИтНДС.Субконто(2)) = 0) Тогда
								Если Метаданные.Документ(БухИтНДС.Субконто(2).Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
									Если БухИтНДС.Субконто(2).Договор = Договор Тогда
										// найден кредитовый незакрытый НДС по соответствующим счетам - фактурам
										СуммаПроводки = Мин((СуммаНДС - СписаноНДС), БухИтНДС.СКД());
	
										Если СуммаПроводки <> 0 Тогда
											Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
											Операция.НомерЖурнала = "БУ";
											Операция.СодержаниеПроводки = "Списание НДС по кредиторской задолж.";
											Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
											Операция.Сумма = СуммаПроводки;
											Операция.Дебет.Счет = Сч91_2;
											Операция.Дебет.Субконто(1, Субконто1);
											Операция.Кредит.Счет = БухИтНДС.Счет;
											Операция.Кредит.Субконто(1, Кредитор);
											Операция.Кредит.Субконто(2, БухИтНДС.Субконто(2)); 
											СписаноНДС = СписаноНДС + СуммаПроводки;
										КонецЕсли;
																			
									КонецЕсли;							    
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
				
				Если СписаноНДС <> СуммаНДС Тогда
					ТекстСообщения = "Невозможно списать НДС! Сумма НДС, указанная к списанию в строке: "+ НомерСтроки + " документа
									  |не соответствует реальному остатку НДС, отраженному в бухгалтерском учете по данному договору.
									  |Документ не проводится.";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			// Формируем налоговые проводки
			Если СуммаНУ <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "НУ";
				Операция.СодержаниеПроводки = "Списание кредиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = СчН08;
				Операция.Кредит.Субконто(1, Перечисление.ВнереализационныеДоходы.ПрочиеВнереализационныеДоходы);
				Операция.Кредит.Субконто(2, Договор);
				Операция.Сумма = СуммаНУ;
			КонецЕсли;
			
			Если СуммаНДСНУ <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "НУ";
				Операция.СодержаниеПроводки = "Списание НДС по кредиторской задолж.";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчН09;
				Операция.Дебет.Субконто(1, Перечисление.ВнереализационныеРасходы.НДС_ПоСписаннойКредиторскойЗадолженности);
				Операция.Дебет.Субконто(3, Договор);
				Операция.Сумма = СуммаНДСНУ;
			КонецЕсли;
	
		КонецЦикла;
	КонецЕсли;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()
