////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем Новый;
Перем СписокДействий;
Перем НачальнаяДатаДокумента;

Перем СписокВидовДляВыбора;

//******************************************************************************
Функция МОЛ()
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
		Форма.ПодписьТипаЦен.Видимость(0);
	ИначеЕсли (Форма.Закладки.ТекущаяСтрока() = 1) и (ВидТМЦ = 3) Тогда
		Форма.ПодписьТипаЦен.Видимость(1);
	КонецЕсли;
	Если РозничныйСклад.Выбран()=1 Тогда
		Возврат РозничныйСклад.МОЛ;
	Иначе
		Возврат "Не выбран розничный склад";
	КонецЕсли;
КонецФункции    

//******************************************************************************
Функция ТипЦен()
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
		Возврат "";
	КонецЕсли;
	
	Если РозничныйСклад.Выбран()=1 Тогда
		Возврат РозничныйСклад.ТипЦен;
	Иначе
		Возврат "Не выбран розничный склад";
	КонецЕсли;
КонецФункции    

//*****************************************************************************
// ПоказатьОтклонение()
//
// Параметры:
//
// Возвращаемое значение:
//
Функция РассчитатьВыручку()                                                                 
	Если ВидТМЦ<>3 Тогда 
		Возврат ""; 
	КонецЕсли;
	Продано = Итог("СуммаПродажи");
	Если Выручка<Продано Тогда
		Форма.ОстатокРВ.Цвет(124);
		Текст = "Сумма продаж превышает выручку на "+(Продано-Выручка)+" руб.";
	Иначе
		Форма.ОстатокРВ.Цвет(0);
		Текст = ""+Выручка+ " ,продано по документу: "+Продано+" ,остаток: "+(Выручка-Продано);
	КонецЕсли;
	
    Возврат Текст;
КонецФункции

//*****************************************************************************
// ПоказатьОтклонение()
//
// Параметры:
//
// Возвращаемое значение:
//
Процедура РассчитатьОстатокРВ();
	Если ВидТМЦ<>3 Тогда 
		Возврат; 
	КонецЕсли;
	
	БИ_РВ = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_РВ.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ_РВ.ИспользоватьСубконто(ВидыСубконто.МестаХранения, РозничныйСклад,2);
	БИ_РВ.ВыполнитьЗапрос(ТекущийДокумент(),,"РВ");
	Выручка = БИ_РВ.СНД("С");
	
КонецПроцедуры

//*****************************************************************************
// ПоказатьОтклонение()
//
// Параметры:
//
// Возвращаемое значение:
//
Функция ПоказатьОтклонение()
	Возврат Формат(?(ВидТМЦ = 3, КоличествоУчет + ОтклНедостача - Количество, Количество - КоличествоУчет),"Ч17.3");
КонецФункции // ПоказатьОтклонение()


//******************************************************************************
// ЗаполнитьТаблицуМПЗ(ВыборВидаМПЗ, ВидСубконто1, ВидСубконто2, ЗначСубконто2)
// 
// Параметры:
//  ВыборВидаМПЗ - СписокЗначений - Список счетов для формирования запроса к
//                 бухгалтерским итогам.
//  ВидСубконто1
//  ВидСубконто2 - ВидыСубконто - Виды субконто для формирования запроса к
//                 бухгалтерским итогам. Первое субконто - это вид объектов 
//                 учета (номенклатура, основные средства и т.д.) Второе 
//                 субконто - место хранения или контрагент (арендодатель 
//                 основных средств). Второе субконто используется при 
//                 установленном фильтре по определенному месту хранения или 
//				   арендодателю.
//  Субконто2    - Справочник - Значение второго субконто.
//
// Возвращаемое значение:
//  1 - В таблицу добавлены строки.
//  0 - В таблицу не добавлено ни одной строки.
//
// Описание:
//  Формирует запрос к бухгалтерским итогам по пересчитываемым объектам учета и
// по его результатам заполняет табличную часть документа. При этом 
// учитываются условия, заданные пользователем.
//
Функция ЗаполнитьТаблицуМПЗ(ВыборВидаМПЗ, ВидСубконто1, ВидСубконто2, Субконто2, Режим, ОбъектыВключаемыеВЗапрос);
	
	// Формирование запроса к бухгалтерским итогам.
	БИ = СоздатьОбъект("БухгалтерскиеИтоги"); БИ.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ.Опции(1,);
	БИ.ВключатьСубсчета(-1);
	БИ.ИспользоватьСубконто(ВидСубконто1, ОбъектыВключаемыеВЗапрос);
	Если ПустоеЗначение(ВидСубконто2) = 0 Тогда
		БИ.ИспользоватьСубконто(ВидСубконто2);
	КонецЕсли;
	ИспользоватьСчета = СоздатьОбъект("СписокЗначений");
	Если Режим = 1 Тогда
		Для Б = 1 По ВыборВидаМПЗ.РазмерСписка() Цикл
			Если ВыборВидаМПЗ.Пометка(Б) = 1 Тогда             
				В = ВыборВидаМПЗ.ПолучитьЗначение(Б, "");
				ИспользоватьСчета.ДобавитьЗначение(СчетПоКоду(В));
			КонецЕсли;
		КонецЦикла;
		
	Иначе                        
		ВыгрузитьТабличнуюЧасть(ИспользоватьСчета, "Счет");
	КонецЕсли;
	
	Если ИспользоватьСчета.РазмерСписка() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	БИ.ВыполнитьЗапрос(ТекущийДокумент(), , ИспользоватьСчета);
	
	// Заполнение итоговой таблицы значений МПЗ
	БИ.ВыбратьСубконто(1);
	Пока БИ.ПолучитьСубконто(1) = 1 Цикл
		УчЦена = ?(БИ.СНД("К")=0, БИ.СНД(), (БИ.СНД()/БИ.СНД("К")) );
		Если ПустоеЗначение(ВидСубконто2) = 0 Тогда
			Если БИ.ПолучитьСубконто(2,, Субконто2) = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		                   
		Если (БИ.СНД("К")=0) и (БИ.СНД("С")=0) Тогда
			Продолжить;
		КонецЕсли;

		Если ВидТМЦ = 2 Тогда // инвентаризация ОС
			Если (Подразделение <> БИ.Субконто(1).Подразделение.Получить(ДатаДок)) и
				      (Подразделение.Выбран() = 1) Тогда
				Продолжить;
				
			ИначеЕсли БИ.Субконто(1).Состояние.Получить(ДатаДок) =
					  Перечисление.СостоянияОС.Выбыло Тогда
			    Продолжить;
				
			ИначеЕсли (ВыбМОЛ.Выбран() = 1) и 
					  (БИ.Субконто(1).МОЛ.Получить(ДатаДок) <> ВыбМОЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			// Стоимость ОС может учитываться в разрезе арендодателей,
			// поэтому пересчитаем цену.
			УчЦена = ?(БИ.СНД("К")=0, БИ.СНД(), (БИ.СНД()/БИ.СНД("К")) );
		КонецЕсли;
		
		БИ.ВыбратьСчета();
		Пока БИ.ПолучитьСчет() = 1 Цикл
			
			ВыбранныйСчет = БИ.Счет;
			ВыбранныйМПЗ = БИ.Субконто(1);
			
			Если Режим = 1 Тогда
				НоваяСтрока();
			Иначе
				ВыбраннаяСтрока = 0;
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 Цикл
				    Если (МПЗ = ВыбранныйМПЗ) и (Счет = ВыбранныйСчет) Тогда
				        ВыбраннаяСтрока = НомерСтроки;
						Прервать;
				    КонецЕсли;
				КонецЦикла;
				Если ВыбраннаяСтрока = 0 Тогда
				    Продолжить;
					
				Иначе
					ПолучитьСтрокуПоНомеру(ВыбраннаяСтрока);
				КонецЕсли;
			КонецЕсли;
			
			Если ВыбранныйМПЗ.Вид() = "ОсновныеСредства" Тогда
				КоличествоУчет = 1;
				
			ИначеЕсли (ВыбранныйМПЗ.Вид() = "ОбъектыСтроительства") или
					  (ВыбранныйМПЗ.Вид() = "Оборудование") Тогда
				КоличествоУчет = БИ.СНД("К");
			Иначе             
				КоличествоУчет = БИ.СНД("К");
				Если (ВидТМЦ = 1) и (ВыбранныйСчет = СчетПоКоду("41.2")) Тогда
				    УчЦена = ?(БИ.СНД("К")=0, БИ.СНД(), (БИ.СНД()/БИ.СНД("К")) );
				КонецЕсли;
			КонецЕсли;
			
			Если ВидТМЦ = 3 Тогда
			    Цена = глПолучитьЦену(Контекст,ВыбранныйМПЗ,?(РозничныйСклад.Выбран()=1,РозничныйСклад.ТипЦен,""),ДатаДок,,1);
				СуммаПродажи = -(Количество - КоличествоУчет - ОтклНедостача)*Цена;
				Если (ВыбранныйМПЗ.Вид() = "Номенклатура") Тогда
					Если (ОблагаетсяЕНВД = 1) и (ВыбранныйМПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) Тогда
						Если ВыбранныйМПЗ.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
							НП = глПоказательДокумента(Контекст, "НП");
						КонецЕсли;	
					Иначе
						НДС = глПоказательДокумента(Контекст, "НДС");
						НП = глПоказательДокумента(Контекст, "НП");
					КонецЕсли;
				КонецЕсли;
			Иначе
				СуммаУчет = УчЦена*КоличествоУчет;
			КонецЕсли;
			
			
			Если Режим = 1 Тогда
			    
				МПЗ = ВыбранныйМПЗ;
				Если ПустоеЗначение(МПЗ) = 0 Тогда
				    Если МПЗ.Вид() = "Номенклатура" Тогда
						Если МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
							ВидМПЗ = "Продукция";
							
						ИначеЕсли МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
							ВидМПЗ = "Полуфабрикат";
							
						Иначе
							ВидМПЗ = "Товар";
						КонецЕсли;
						
					ИначеЕсли МПЗ.Вид() ="Материалы" Тогда
				        ВидМПЗ = "Материал";
						
					ИначеЕсли МПЗ.Вид() ="Оборудование" Тогда
				        ВидМПЗ = "Оборудование";
						
					ИначеЕсли МПЗ.Вид() ="ОбъектыСтроительства" Тогда
				        ВидМПЗ = "Внеоборотный актив";
				    КонецЕсли;
				КонецЕсли;
				
				Количество = КоличествоУчет;
				Счет = ВыбранныйСчет;
				Если ВидТМЦ = 3 Тогда
					Цена = глПолучитьЦену(Контекст,ВыбранныйМПЗ,?(РозничныйСклад.Выбран()=1,РозничныйСклад.ТипЦен,""),ДатаДок,,1);
					СуммаПродажи = -(Количество - КоличествоУчет - ОтклНедостача)*Цена;
					Если (ВыбранныйМПЗ.Вид() = "Номенклатура") Тогда
						Если (ОблагаетсяЕНВД = 1) и (ВыбранныйМПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) Тогда
							Если ВыбранныйМПЗ.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
								НП = глПоказательДокумента(Контекст, "НП");
							КонецЕсли;	
						Иначе
							НДС = глПоказательДокумента(Контекст, "НДС");
							НП = глПоказательДокумента(Контекст, "НП");
						КонецЕсли;
					КонецЕсли;
				Иначе
					Сумма     = СуммаУчет;
					ФормироватьПроводку = "Да";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;

	Возврат 1;
	
КонецФункции // ЗаполнитьТаблицуМПЗ()

//*****************************************************************************
// Заполнить()
//
// Параметры:
//
// Возвращаемое значение:
//	нет.
//
// Описание:
//
Процедура Заполнить()
	    
	Если Выбран() = 0 Тогда
	    Предупреждение("Перед заполнением документ необходимо записать!", 60);
		Возврат;
	КонецЕсли;
	
	Если (Форма.Закладки.ТекущаяСтрока() = 2) и (КоличествоСтрок() > 0) Тогда
	    Меню = СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение(1,"По остаткам на складе (перезаполнить)");
		Меню.ДобавитьЗначение(2,"Обновить учетное количество и сумму");
		РежимЗаполнения = 1;
		Если Меню.ВыбратьЗначение(РежимЗаполнения,,,,1) = 1 Тогда
			
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		РежимЗаполнения = 1;
	КонецЕсли;
	
	ОбъектыВключаемыеВЗапрос = СоздатьОбъект("СписокЗначений");
	
	Если РежимЗаполнения = 1 Тогда
		
		Если  КоличествоСтрок() > 0 Тогда
			Если
				Вопрос("Таблица будет очищена, а существующие строки удалены.
						|Продолжить?","Да+Нет") <> "Да" Тогда
							
				Возврат;
			КонецЕсли;
			
			УдалитьСтроки();
		КонецЕсли;
		
	Иначе
		// Очистим учетное количество и сумму.
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
		    КоличествоУчет = 0;
			СуммаУчет = 0;
			Если ВидТМЦ = 3 Тогда
				СуммаПРодажи =0;
				Цена = 0;
			КонецЕсли;
		КонецЦикла;
		
		ВыгрузитьТабличнуюЧасть(ОбъектыВключаемыеВЗапрос, "МПЗ");
	КонецЕсли;
	
	Если ВидТМЦ = 1 Тогда
		ВыбСклад = "";
		ВидСубконто = "";
		Если МестоХранения.Выбран() = 1 Тогда
			ВыбСклад = МестоХранения;
			ВидСубконто = ВидыСубконто.МестаХранения;
			
		ИначеЕсли ВыбМОЛСклада.Выбран() = 1 Тогда
			Склады = СоздатьОбъект("Справочник.МестаХранения");
			Склады.ВыбратьЭлементы();
			Пока Склады.ПолучитьЭлемент() = 1 Цикл
			    Если Склады.МОЛ = ВыбМОЛСклада Тогда
					ВыбСклад = Склады.ТекущийЭлемент();
					ВидСубконто = ВидыСубконто.МестаХранения;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ЗаполнитьТаблицуМПЗ(Товар, ВидыСубконто.Материалы, ВидСубконто, ВыбСклад, РежимЗаполнения, ОбъектыВключаемыеВЗапрос);
		ЗаполнитьТаблицуМПЗ(Товар, ВидыСубконто.Номенклатура, ВидСубконто, ВыбСклад, РежимЗаполнения, ОбъектыВключаемыеВЗапрос);
		ЗаполнитьТаблицуМПЗ(Товар, ВидыСубконто.Оборудование, ВидСубконто, ВыбСклад, РежимЗаполнения, ОбъектыВключаемыеВЗапрос);
	    ЗаполнитьТаблицуМПЗ(Товар, ВидыСубконто.ОбъектыСтроительства, "", "", РежимЗаполнения, ОбъектыВключаемыеВЗапрос);    
		
	ИначеЕсли ВидТМЦ = 2 Тогда
		Если ((ОС.Пометка(1) = 1) или (ОС.Пометка(2) = 1) или (ОС.Пометка(3) = 1) или
			 (ОС.Пометка(4) = 1) или (ОС.Пометка(5) = 1) или (ОС.Пометка(7) = 1) или  (ОС.Пометка(8) = 1)) и 
			 (ПустоеЗначение(Контрагент) = 0) Тогда
			Предупреждение("Для собственных основных средств нельзя 
						   |применить фильтр ""Арендодатель""");
			Возврат;
		КонецЕсли;
		
		Если Контрагент.Выбран() = 1 Тогда  
		    ЗаполнитьТаблицуМПЗ(ОС, ВидыСубконто.ОсновныеСредства,
			      					  ВидыСубконто.Контрагенты, Контрагент, РежимЗаполнения, ОбъектыВключаемыеВЗапрос);
		Иначе
			ЗаполнитьТаблицуМПЗ(ОС, ВидыСубконто.ОсновныеСредства, "", "", РежимЗаполнения, ОбъектыВключаемыеВЗапрос);
		КонецЕсли;
		
	ИначеЕсли ВидТМЦ = 3 Тогда
		ВыбСклад = "";
		ВидСубконто = "";
		Если РозничныйСклад.Выбран() = 1 Тогда
			ВыбСклад = РозничныйСклад;
			ВидСубконто = ВидыСубконто.МестаХранения;
			
		Иначе
			Предупреждение("Не выбран розничный склад");
			Возврат;
		КонецЕсли;
		РассчитатьОстатокРВ();
		ЗаполнитьТаблицуМПЗ(Розница, ВидыСубконто.Номенклатура, ВидСубконто, ВыбСклад, РежимЗаполнения, ОбъектыВключаемыеВЗапрос);
	
	КонецЕсли;
	
	//  Переход на закладку с табличной частью
	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Таблица", 2);
	Форма.ВидМПЗ.Видимость(?(ВидТМЦ = 1, 1, 0));
	Форма.ФормироватьПроводку.Видимость(?(ВидТМЦ = 1, 1, 0));
	
	Форма.ОтклНедостача.Видимость(?(ВидТМЦ = 3, 1, 0));
	Форма.Цена.Видимость(?(ВидТМЦ = 3, 1, 0));
	Форма.НДС.Видимость(?(ВидТМЦ = 3, 1, 0));
	Форма.НП.Видимость(?(ВидТМЦ = 3, 1, 0));
	Форма.СуммаПродажи.Видимость(?(ВидТМЦ = 3, 1, 0));
	Форма.КнопкаРВ.Видимость(?(ВидТМЦ = 3, 1, 0));
	
	Форма.Сумма.Видимость(?(ВидТМЦ = 3, 0, 1));
	Форма.СуммаУчет.Видимость(?(ВидТМЦ = 3, 0, 1));
	Форма.Откл.Заголовок(?(ВидТМЦ = 3, "Продано", "Отклонение"));
	
	Форма.СтатикВидТМЦ.Видимость(0);
	Форма.СписокВидовТМЦ.Видимость(0);
	
КонецПроцедуры //Заполнить()

//******************************************************************************
// ПометитьЭлементыСписка(Действие, СписокСчетов = "")
//
// Параметры:
//  СписокСчетов - Строка - Коды счетов из трех символов (напрмер: "41.10.010").
//                 Если не указывается, то обрабатывается весь список.
// 
// Вызывается из формул элементов диалога:
//  Кнопка "Материалы"
//  Кнопка "Продукция"
//  Кнопка "Товары"
//  Кнопка "Собственные"
//  Кнопка "Арендованные"
//
// Описание:
//  Помечает определенные значения в списке счетов учета ТМЦ или списке счетов 
// учета основных средств (в зависимости от текущей закладки.
//
Процедура ПометитьЭлементыСписка(Действие, СписокСчетов = "")
	
	Если ВидТМЦ = 2 Тогда 
		СписокТМЦ = ОС;
	ИначеЕсли ВидТМЦ = 1 Тогда
		СписокТМЦ = Товар;   
	ИначеЕсли ВидТМЦ = 3 Тогда
		СписокТМЦ = Розница;
	КонецЕсли;
	
	Для А = 1 По СписокТМЦ.РазмерСписка() Цикл
		Если (СписокСчетов = "") или
			 (Найти(СписокСчетов, Лев(СписокТМЦ.ПолучитьЗначение(А),3)) > 0) Тогда
			СписокТМЦ.Пометка(А, Действие);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ПометитьЭлементыСписка()

//*****************************************************************************
// Пересчет()
//
// Параметры:
//	Нет.
//
// Вызывается из формул элементов диалога:
//	- графа "Количество".
//
// Описание:
//	Пересчитывает Сумма.
//
Процедура Пересчет()
	Сумма = ?(КоличествоУчет <> 0 ,Количество*СуммаУчет/КоличествоУчет,0);
	СуммаПродажи = -(Количество - КоличествоУчет - ОтклНедостача)*Цена; 
	Если (МПЗ.Вид() = "Номенклатура") Тогда
		Если (ОблагаетсяЕНВД = 1) и (МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) Тогда
			Если МПЗ.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				НП = глПоказательДокумента(Контекст, "НП");
			КонецЕсли;	
		Иначе
			НДС = глПоказательДокумента(Контекст, "НДС");
			НП = глПоказательДокумента(Контекст, "НП");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Пересчет()

//******************************************************************************
// ПриВыбореВидаТМЦ()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  поле со списком - СписокВидовТМЦ.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореВидаТМЦ()
	         
	Если ВидТМЦ <> СписокВидовТМЦ.ТекущаяСтрока() Тогда 
		Если КоличествоСтрок() > 0 Тогда
	        Если Вопрос("Таблица будет очищена, а существующие строки удалены.
					|Продолжить?","Да+Нет") = "Да" Тогда
				УдалитьСтроки(); 
				
			Иначе
				СписокВидовТМЦ.ТекущаяСтрока(ВидТМЦ);
				Возврат;
			КонецЕсли;
	    КонецЕсли;
		
		ВидТМЦ = СписокВидовТМЦ.ТекущаяСтрока();
	КонецЕсли;
		        
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда
		Если ВидТМЦ = 1 Тогда // ТМЦ на местах хранения 
			Форма.ИспользоватьСлой("Склад", 1);
			Форма.ИспользоватьСлой("ОсновныеСредства, Розница", 0);
			
			ТаблицаПечФорм.УстановитьЗначение(1 , "Название", "Инвентаризационная опись ИНВ-3");
			ТаблицаПечФорм.УстановитьЗначение(1 , "Кнопка", "ИНВ-3");
			
		ИначеЕсли ВидТМЦ = 2 Тогда // основные средства
		    Форма.ИспользоватьСлой("Склад, Розница", 0);
			Форма.ИспользоватьСлой("ОсновныеСредства", 1);
			
			ТаблицаПечФорм.УстановитьЗначение(1 , "Название", "Инвентаризационная опись ИНВ-1");
			ТаблицаПечФорм.УстановитьЗначение(1 , "Кнопка", "ИНВ-1");
			
		ИначеЕсли ВидТМЦ = 3 Тогда
			Форма.ИспользоватьСлой("Розница", 1);
			Форма.ИспользоватьСлой("ОсновныеСредства, Склад", 0);
			
			ТаблицаПечФорм.УстановитьЗначение(1 , "Название", "Инвентаризационная опись ИНВ-3");
			ТаблицаПечФорм.УстановитьЗначение(1 , "Кнопка", "ИНВ-3");
			
		КонецЕсли;
		
		// Заполним таблицу для выбора печатной формы
		НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
		
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаТМЦ()

//******************************************************************************
// ПечатьСверкиНаличия()
//
// Параметры:
//	Нет.
//
// Описание:
//	Формирование печатной формы сличительной ведомости
//
Процедура ПечатьСверкиНаличия()
	Перем Таб;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("СверкаНаличия");
	Таб.ВывестиСекцию("Шапка");
	Таб.ПовторятьПриПечатиСтроки(1, Таб.ВысотаСекции("Шапка"));
	
	Ном = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Ном = Ном + 1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	                      
	Таб.Опции(0, 0, 0, 0, "СверкаНаличия", "Печать сверки наличия");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать сверки наличия");
	
КонецПроцедуры // ПечатьСверкиНаличия()

//******************************************************************************
// ПечатьИнвОписи()
//
// Параметры:
//  Нет.
//
// Описание:
//	Формирование печатной формы инв. описи "ИНВ-1" или "ИНВ-3"
//
Процедура ПечатьИнвОписи()
	
	Если ВидТМЦ = 2 Тогда // ОС
		Аренда = "";
		Если (ОС.Пометка(1) = 1) или (ОС.Пометка(2) = 1) или (ОС.Пометка(3) = 1) или
			 (ОС.Пометка(4) = 1) или (ОС.Пометка(5) = 1) или (ОС.Пометка(7) = 1) Тогда
			Аренда = "в собственности организации";
		КонецЕсли;
		Если ОС.Пометка(6) = 1 Тогда
			Аренда = Аренда + 
			         ?(Аренда="","на ответственном хранении",", в том числе арендованные");
		КонецЕсли;
		
		ИмяФормы = "ИНВ-1";
		
	Иначе // ИНВ-3
		Виды = "";
		Стр = "";
		Для Б = 1 По Товар.РазмерСписка() Цикл
			Если Товар.Пометка(Б) = 1 Тогда             
				Стр = "";
				В = Товар.ПолучитьЗначение(Б, Стр);
				Виды = Виды + Лев(Стр, Найти(Стр, "(")-2) + ", ";
			КонецЕсли;
		КонецЦикла;
		Виды = ?(СтрДлина(Виды) > 0, Лев(Виды, (СтрДлина(Виды) - 2)), "");
		ИмяФормы = "ИНВ-3";
	КонецЕсли;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица(ИмяФормы);

	Таб.ВывестиСекцию("Титул");               
	Таб.НоваяСтраница();
	КолСтрокНаЛисте=14;
	ТекСтрока=КолСтрокНаЛисте;
	
	ИтогСуммаОпись    = 0;
	ИтогКоличОпись    = 0;
	ИтогСуммаСтраница = 0;
	ИтогКоличСтраница = 0;
	
	ИтогСуммаУчетОпись    = 0;
	ИтогКоличУчетОпись    = 0;
	ИтогСуммаУчетСтраница = 0;
	ИтогКоличУчетСтраница = 0;
	
	ПризнакНовСтраница = 0;
	НомерСтр = 2;
	КолНомСтр = 0; // количество строк на текущей странице

	Ном = 0; // номер по порядку
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ВидТМЦ = 3 Тогда // инвентаризация розничной точки
		Иначе
			Цена = ?(Количество <> 0, Сумма/Количество, Сумма);
		КонецЕсли;
		
		Если (МПЗ.Вид() = "ОсновныеСредства") или
			 (МПЗ.Вид() = "ОбъектыСтроительства") или
			 (МПЗ.Вид() = "Оборудование") Тогда
			ЕдиницаИзмерения = Константа.ОсновнаяЕдиницаИзмерения;
		Иначе
			ЕдиницаИзмерения = МПЗ.ЕдиницаИзмерения;
		КонецЕсли;
		
		Если ТекСтрока = КолСтрокНаЛисте Тогда
			Если ПризнакНовСтраница = 1 Тогда
				Таб.НоваяСтраница();
				
				ИтогСуммаСтраница = 0;
				ИтогКоличСтраница = 0;
				
				ИтогСуммаУчетСтраница = 0;
				ИтогКоличУчетСтраница = 0;
				
				КолНомСтр = 0;
				НомерСтр = НомерСтр+1;
			КонецЕсли;
			ПризнакНовСтраница = 1;
			ТекСтрока=0;
			Таб.ВывестиСекцию("Страница");
			Таб.ВывестиСекцию("Шапка");
		КонецЕсли;
		
		Если ВидТМЦ = 3 Тогда // инвентаризация розничной точки
			Сумма     = Количество * Цена;
			СуммаУчет = КоличествоУчет * Цена;
		КонецЕсли;
		
		ИтогСуммаОпись    = ИтогСуммаОпись + Сумма;
		ИтогКоличОпись    = ИтогКоличОпись + Количество;
		ИтогСуммаСтраница = ИтогСуммаСтраница + Сумма;
		ИтогКоличСтраница = ИтогКоличСтраница + Количество;
		
		ИтогСуммаУчетОпись    = ИтогСуммаУчетОпись + СуммаУчет;
		ИтогКоличУчетОпись    = ИтогКоличУчетОпись + КоличествоУчет;
		ИтогСуммаУчетСтраница = ИтогСуммаУчетСтраница + СуммаУчет;
		ИтогКоличУчетСтраница = ИтогКоличУчетСтраница + КоличествоУчет;
		
		КолНомСтр = КолНомСтр+1;
		Ном=Ном+1;
		ТекСтрока=ТекСтрока+ 1;
		Таб.ВывестиСекцию("Строка");
		Если ТекСтрока = КолСтрокНаЛисте Тогда
		  	Таб.ВывестиСекцию("ИтСтрЧ");
		  	Если Ном < КоличествоСтрок() Тогда
		  		Таб.ВывестиСекцию("ИтСтрП");
		  	КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ТекСтрока < КолСтрокНаЛисте Тогда
		Таб.ВывестиСекцию("ИтСтрЧ");
	КонецЕсли;
  	Таб.ВывестиСекцию("ИтОписьЧ");
	Таб.ВывестиСекцию("ИтСтрП");

	Таб.НоваяСтраница();
	НомерСтр=НомерСтр+1;
	Таб.ВывестиСекцию("Итог");

	Таб.ПараметрыСтраницы(2,,,,,5,0);
	Таб.ТолькоПросмотр(1);
	Если ИмяФормы = "ИНВ-3" Тогда
		Заголовок = "Инвентаризационная опись ТМЦ";
		
	Иначе
		Заголовок = "Инвентаризационная опись ОС";
	КонецЕсли;
	Таб.Показать(Заголовок);
	
КонецПроцедуры // ПечатьИнвОписи()

//******************************************************************************
// ПечатьСличВедомости()
//
// Параметры:
//  Нет.
//
// Описание:
//	Формирование печатной формы слич. ведомости "ИНВ-19"
//
Процедура ПечатьСличВедомости()
	Перем Таб;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("СличительнаяВедомость");
	Таб.ВывестиСекцию("Титул");
	Таб.ВывестиСекцию("Шапка");
	
	ИтогИзлишек        = 0;
	ИтогСуммаИзлишек   = 0;
	ИтогНедостача      = 0;
	ИтогСуммаНедостача = 0;
	
	Ном = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		Если ПустоеЗначение(МПЗ) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		
		Наименование = глПолноеНаименование(МПЗ);
		СуммаУчетПеч = СуммаУчет;
		СуммаФактПеч = Сумма;
		
		Если (МПЗ.Вид() = "ОсновныеСредства") или
			 (МПЗ.Вид() = "ОбъектыСтроительства") или
			 (МПЗ.Вид() = "Оборудование") Тогда
			ЕдиницаИзмерения = Константа.ОсновнаяЕдиницаИзмерения;
		Иначе
			
			ЕдиницаИзмерения = МПЗ.ЕдиницаИзмерения;
		КонецЕсли;
		
		Если ВидТМЦ = 3 Тогда // инвентаризация розничной точки
			Если ОтклНедостача < 0 Тогда // недостача
				Недостача      = -ОтклНедостача;
				СуммаНедостача = -ОтклНедостача*Цена;
				
				ИтогНедостача      = ИтогНедостача      + Недостача;
				ИтогСуммаНедостача = ИтогСуммаНедостача + СуммаНедостача;
				
				Излишек      = 0;
				СуммаИзлишек = 0;
				
			ИначеЕсли ОтклНедостача > 0 Тогда // излишек
				Излишек      = ОтклНедостача;
				СуммаИзлишек = ОтклНедостача*Цена;
				
				ИтогИзлишек        = ИтогИзлишек      + Излишек;
				ИтогСуммаИзлишек   = ИтогСуммаИзлишек + СуммаИзлишек;
				
				Недостача      = 0;
				СуммаНедостача = 0;
				
			Иначе
				Продолжить;
			КонецЕсли;
			
		Иначе
			Если Количество > КоличествоУчет Тогда
				Излишек      = Количество   - КоличествоУчет;
				СуммаИзлишек = СуммаФактПеч - СуммаУчетПеч;
				
				ИтогИзлишек        = ИтогИзлишек      + Излишек;
				ИтогСуммаИзлишек   = ИтогСуммаИзлишек + СуммаИзлишек;
				
				Недостача      = 0;
				СуммаНедостача = 0;
				
			ИначеЕсли КоличествоУчет > Количество Тогда
				Недостача      = КоличествоУчет - Количество;
				СуммаНедостача = СуммаУчетПеч   - СуммаФактПеч;
				
				ИтогНедостача      = ИтогНедостача      + Недостача;
				ИтогСуммаНедостача = ИтогСуммаНедостача + СуммаНедостача;
				
				Излишек      = 0;
				СуммаИзлишек = 0;
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Ном = Ном + 1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	
	Таб.ВывестиСекцию("Итого");
	Таб.ВывестиСекцию("Подвал");
	                              
	Таб.Опции(0, 0, 0, 0, "Сличительная ведомость", "Печать сличительной ведомости");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать сличительной ведомости");
	
КонецПроцедуры // ПечатьСличВедомости()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		ПечатьИнвОписи();
		
	ИначеЕсли НомерТекущейФормы = 2  Тогда
		ПечатьСличВедомости();
		
		
	ИначеЕсли НомерТекущейФормы = 3  Тогда
		ПечатьСверкиНаличия();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
// Предопределенная процедура
//
// Описание:
//	Управляет видимостью слоев формы и заголовками некоторых элементов диалога.
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки) //Предопределенная
	
	Если ЗначениеЗакладки = 1 Тогда
		Если ВидТМЦ = 1 Тогда
			Форма.ИспользоватьСлой("Основной, Склад", 2);
		ИначеЕсли ВидТМЦ = 2 Тогда
			Форма.ИспользоватьСлой("Основной, ОсновныеСредства", 2);
		ИначеЕсли ВидТМЦ = 3 Тогда
			Форма.ИспользоватьСлой("Основной, Розница", 2);
		КонецЕсли;

	ИначеЕсли ЗначениеЗакладки = 2 Тогда
		Форма.ИспользоватьСлой("Основной, Таблица", 2);
		Форма.ВидМПЗ.Видимость(?(ВидТМЦ = 1, 1, 0));
		Форма.ФормироватьПроводку.Видимость(?(ВидТМЦ = 1, 1, 0));
		
		Форма.ОтклНедостача.Видимость(?(ВидТМЦ = 3, 1, 0));
		Форма.Цена.Видимость(?(ВидТМЦ = 3, 1, 0));
		Форма.НДС.Видимость(?(ВидТМЦ = 3, 1, 0));
		Форма.НП.Видимость(?(ВидТМЦ = 3, 1, 0));
		Форма.СуммаПродажи.Видимость(?(ВидТМЦ = 3, 1, 0));
		Форма.КнопкаРВ.Видимость(?(ВидТМЦ = 3, 1, 0));
		
		Форма.Сумма.Видимость(?(ВидТМЦ = 3, 0, 1));
		Форма.СуммаУчет.Видимость(?(ВидТМЦ = 3, 0, 1));
		Форма.Откл.Заголовок(?(ВидТМЦ = 3, "Продано", "Отклонение"));
        
	ИначеЕсли ЗначениеЗакладки = 3 Тогда
		Форма.ИспользоватьСлой("Основной, Прочее", 2);
	КонецЕсли;
	
	// видны только на первой закладке
	Форма.СтатикВидТМЦ.Видимость(ЗначениеЗакладки);
	Форма.СписокВидовТМЦ.Видимость(ЗначениеЗакладки);
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
// 
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	
	Если Копирование = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВидТМЦ = 1;
	МестоХранения = глЗначениеПоУмолчанию("ОсновнойСклад");
	МОЛ1 =МестоХранения.МОЛ; ВыбМОЛСклада = МестоХранения.МОЛ;
	Если Константа.РозницаОблагаетсяЕНВД.Получить(ДатаДок) = Перечисление.Булево.Да Тогда
	    ОблагаетсяЕНВД = 1;
	Иначе
		ОблагаетсяЕНВД = 0;
	КонецЕсли;   
КонецПроцедуры // ВводНового()
                              
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
    
	Форма.ВидМПЗ.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.МПЗ.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.МестоХранения.ВыполнятьФормулуТолькоПриИзменении(1);

	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);

	глПроверкаРазрешенияРедактирования(Контекст);

	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаполнить.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаПровести.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПоУмолчанию("КнопкаЗакрыть");
	КонецЕсли;

	Товар.ДобавитьЗначение("07", "Оборудование к установке (07)");
	Товар.ДобавитьЗначение("08.4", "Приобретение отдельных ОС (08.4)");
	
	Товар.ДобавитьЗначение("10.1", "Сырье и материалы (10.1)");
	Товар.ДобавитьЗначение("10.2", "Покупные полуфабрикаты (10.2)");
	Товар.ДобавитьЗначение("10.3", "Топливо (10.3)");
	Товар.ДобавитьЗначение("10.4", "Тара и тарные материалы (10.4)");
	Товар.ДобавитьЗначение("10.5", "Запасные части (10.5)");
	Товар.ДобавитьЗначение("10.6", "Прочие материалы (10.6)");
	Товар.ДобавитьЗначение("10.8", "Строительные материалы (10.8)");
	Товар.ДобавитьЗначение("10.9", "Инвентарь и хоз. принадлежности (10.9)");
	Товар.ДобавитьЗначение("10.10", "Спецоснастка и спецодежда (10.10)");
	
	Товар.ДобавитьЗначение("21", "Полуфабрикаты собств. производства (21)");
	
	Товар.ДобавитьЗначение("41.1", "Товары на складе (41.1)");
	Товар.ДобавитьЗначение("41.2", "Товары в розничной торг. (41.2)");
	Товар.ДобавитьЗначение("41.3", "Тара под товаром и порожняя (41.3)");
	Товар.ДобавитьЗначение("41.4", "Покупные изделия (41.4)");
	
	Товар.ДобавитьЗначение("43", "Готовая продукция (43)");
	
	Для СчетчикЦикла = 1 По Товар.РазмерСписка() Цикл
		Реквизит = Товар.ПолучитьЗначение(СчетчикЦикла);
		Реквизит = "ТМЦ_" + СтрЗаменить(Реквизит, ".", "_");
		Товар.Пометка(СчетчикЦикла, ПолучитьАтрибут(Реквизит));
	КонецЦикла;
	
	ОС.ДобавитьЗначение("01.1", "ОС в организации (01.1)");
	ОС.ДобавитьЗначение("03.1", "МЦ в организации (03.1)");
	ОС.ДобавитьЗначение("03.2", "МЦ переданные во врем. владение (03.2)");
	ОС.ДобавитьЗначение("03.3", "МЦ переданные во врем. пользование (03.3)");
	ОС.ДобавитьЗначение("03.4", "Прочие доходные вложения (03.4)");
	ОС.ДобавитьЗначение("001",  "Арендованные ОС (001)");
	ОС.ДобавитьЗначение("011",  "ОС, сданные в аренду (011)");
	ОС.ДобавитьЗначение("МЦ.01","ОС, не принятые к бух. учету (МЦ.01)");
	
	Для СчетчикЦикла = 1 По ОС.РазмерСписка() Цикл
		Реквизит = ОС.ПолучитьЗначение(СчетчикЦикла);
		Реквизит = "ТМЦ_" + СтрЗаменить(Реквизит, ".", "_");
		ОС.Пометка(СчетчикЦикла, ПолучитьАтрибут(Реквизит));
	КонецЦикла;
	
	Розница.ДобавитьЗначение("21", "Полуфабрикаты собств. производства (21)");
	Розница.ДобавитьЗначение("41.2", "Товары в розничной торг. (41.2)");
	Розница.ДобавитьЗначение("41.3", "Тара под товаром и порожняя (41.3)");
	Розница.ДобавитьЗначение("41.4", "Покупные изделия (41.4)");
	Розница.ДобавитьЗначение("43", "Готовая продукция (43)");
	Розница.ДобавитьЗначение("КТР", "Комиссионные товары в розн. торг. (КТР)");
	
	Для СчетчикЦикла = 1 По Розница.РазмерСписка() Цикл
		Реквизит = Розница.ПолучитьЗначение(СчетчикЦикла);
		Реквизит = "ТМЦ_" + СтрЗаменить(Реквизит, ".", "_");
		Розница.Пометка(СчетчикЦикла, ПолучитьАтрибут(Реквизит));
	КонецЦикла;
	
	СписокВидовТМЦ.ДобавитьЗначение(1, " ТМЦ на местах хранения");
	СписокВидовТМЦ.ДобавитьЗначение(2, " Основные средства");
	СписокВидовТМЦ.ДобавитьЗначение(3, " ТМЦ в рознице");
	СписокВидовТМЦ.ТекущаяСтрока(ВидТМЦ);
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение(1, "Вид ТМЦ");
	Форма.Закладки.ДобавитьЗначение(2, "Инвентаризация");
	Форма.Закладки.ДобавитьЗначение(3, "Прочее");
	Форма.ИспользоватьСлой("Основной", 2);
	ПриВыбореВидаТМЦ();
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()

	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ВидТМЦ = 1 Тогда
		СчетчикЦикла = 0;
		Для СчетчикЦикла = 1 По Товар.РазмерСписка() Цикл
			Реквизит = Товар.ПолучитьЗначение(СчетчикЦикла);
			Реквизит = "ТМЦ_" + СтрЗаменить(Реквизит, ".", "_");
			Значение = Товар.Пометка(СчетчикЦикла);
			УстановитьАтрибут(Реквизит, Значение);
		КонецЦикла;
	ИначеЕсли ВидТМЦ = 2 Тогда
		МестоХранения = "";
		СчетчикЦикла = 0;
		Для СчетчикЦикла = 1 По ОС.РазмерСписка() Цикл
			Реквизит = ОС.ПолучитьЗначение(СчетчикЦикла);
			Реквизит = "ТМЦ_" + СтрЗаменить(Реквизит, ".", "_");
			Значение = ОС.Пометка(СчетчикЦикла);
			УстановитьАтрибут(Реквизит, Значение);
		КонецЦикла;
	ИначеЕсли ВидТМЦ = 3 Тогда
		МестоХранения = РозничныйСклад;
		СчетчикЦикла = 0;
		Для СчетчикЦикла = 1 По Розница.РазмерСписка() Цикл
			Реквизит = Розница.ПолучитьЗначение(СчетчикЦикла);
			Реквизит = "ТМЦ_" + СтрЗаменить(Реквизит, ".", "_");
			Значение = Розница.Пометка(СчетчикЦикла);
			УстановитьАтрибут(Реквизит, Значение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлементаДиалога, ФлагСтандартнойОбработки)
    
	Если ИдентЭлементаДиалога = "ВидМПЗ" Тогда
	    ФлагСтандартнойОбработки = 0;
		
		РанееВыбранныйВидМПЗ = СокрП(ВидМПЗ);
		ВыбранныйВидМПЗ = РанееВыбранныйВидМПЗ;
		
		Если СписокВидовДляВыбора.ВыбратьЗначение(ВыбранныйВидМПЗ,,,, 2) = 1 Тогда
		    ВидМПЗ = ВыбранныйВидМПЗ;
		КонецЕсли;
		
		Если РанееВыбранныйВидМПЗ <> СокрЛП(ВыбранныйВидМПЗ) Тогда
		    МПЗ = "";
		КонецЕсли;
		
	ИначеЕсли ИдентЭлементаДиалога = "МПЗ" Тогда
		ФлагСтандартнойОбработки = 0;
		
		Если ВидТМЦ = 1 Тогда // ТМЦ на местах хранения 
                 
			ВыбранныйВидМПЗ = СОкрЛП(ВидМПЗ);
			Если ВыбранныйВидМПЗ = "Материал" Тогда
				ОткрытьФорму("Справочник.Материалы");
				
			ИначеЕсли ВыбранныйВидМПЗ = "Товар" Тогда
				ОткрытьФорму("Справочник.Номенклатура.ГотоваяПродукция", Перечисление.ТипыНоменклатуры.Товар);
				
			ИначеЕсли ВыбранныйВидМПЗ = "Продукция" Тогда
				ОткрытьФорму("Справочник.Номенклатура.ГотоваяПродукция", Перечисление.ТипыНоменклатуры.Продукция);
				
			ИначеЕсли ВыбранныйВидМПЗ = "Полуфабрикат" Тогда
				ОткрытьФорму("Справочник.Номенклатура.ГотоваяПродукция", Перечисление.ТипыНоменклатуры.Полуфабрикат);
				
			ИначеЕсли ВыбранныйВидМПЗ = "Внеоборотный актив" Тогда
				ОткрытьФорму("Справочник.ОбъектыСтроительства");
				
			ИначеЕсли ВыбранныйВидМПЗ = "Оборудование" Тогда
				ОткрытьФорму("Справочник.Оборудование");
				
			Иначе
				Предупреждение("Укажите вид МПЗ.", 60);
			КонецЕсли;
			
		ИначеЕсли ВидТМЦ = 2 Тогда
			ОткрытьФорму("Справочник.ОсновныеСредства");
		
		Иначе
			ОткрытьФорму("Справочник.Номенклатура");
			
		КонецЕсли;
		
	ИначеЕсли ИдентЭлементаДиалога = "СтатьяПрочихДоходов" Тогда
		ФлагСтандартнойОбработки = 0;
		Параметр = Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
	    ОткрытьФорму("Справочник.ПрочиеДоходыИРасходы", Параметр);
    
	ИначеЕсли ИдентЭлементаДиалога = "ФормироватьПроводку" Тогда
		ФлагСтандартнойОбработки = 0;
		ФормироватьПроводку = ?(СокрЛП(ФормироватьПроводку) = "Да", "Нет", "Да");
		
	ИначеЕсли ИдентЭлементаДиалога = "РозничныйСклад" Тогда
		Отбор = Перечисление.ТипыСкладов.Розничный; 
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Отбор,"ОтборСклада");
		Параметры.ДобавитьЗначение(0,"ПоказыватьТипСклада");
		Параметры.ДобавитьЗначение(1,"ПоказыватьТипЦен");
		ОткрытьФорму("Справочник.МестаХранения.ФормаСписка",Параметры);
		ФлагСтандартнойОбработки = 0;
				
	КонецЕсли;

КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если ИдентЭлемДиалога = "ВидМПЗ" Тогда
	    Если ВидМПЗ <> ВыбЗнач  Тогда
	        МПЗ = "";
		КонецЕсли;
	ИначеЕсли ИдентЭлемДиалога = "МПЗ" Тогда
		Если ПустоеЗначение(Счет) = 1 Тогда
			Если ВыбЗнач.Вид() = "Номенклатура" Тогда
				Если ВыбЗнач.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
					Счет = СчетПоКоду("43");
					
				ИначеЕсли ВыбЗнач.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
					Счет = СчетПоКоду("21");
					
				Иначе
					Если ВидТМЦ = 3 Тогда
					    Счет = СчетПоКоду("41.2");
					Иначе
						Счет = СчетПоКоду("41.1");
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ВыбЗнач.Вид() ="Материалы" Тогда
		        Счет = ВыбЗнач.СубСчет10;
				
			ИначеЕсли ВыбЗнач.Вид() ="Оборудование" Тогда
		        Счет = СчетПоКоду("07");
				
			ИначеЕсли ВыбЗнач.Вид() ="ОбъектыСтроительства" Тогда
		        Счет = СчетПоКоду("08.04");
				
			ИначеЕсли ВыбЗнач.Вид() ="ОсновныеСредства" Тогда
				Счет = СчетПоКоду("01.1");
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбораЗначения()

//******************************************************************************
//
Процедура ПриРедактированииНовойСтроки()
	ФормироватьПроводку = "Да";
КонецПроцедуры

//******************************************************************************
// 

Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");

// формируем таблицу печатных форм
ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Инвентаризационная опись ИНВ-1";
ТаблицаПечФорм.Кнопка       = "ИНВ-1";
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Сличительная ведомость ИНВ-19";
ТаблицаПечФорм.Кнопка       = "ИНВ-19";
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Сверка наличия МПЗ";
ТаблицаПечФорм.Кнопка       = "Сверка";

СписокВидовДляВыбора = СоздатьОбъект("СписокЗначений");
СписокВидовДляВыбора.ДобавитьЗначение("Материал");
СписокВидовДляВыбора.ДобавитьЗначение("Товар");
СписокВидовДляВыбора.ДобавитьЗначение("Продукция");
СписокВидовДляВыбора.ДобавитьЗначение("Полуфабрикат");
СписокВидовДляВыбора.ДобавитьЗначение("Внеоборотный актив");
СписокВидовДляВыбора.ДобавитьЗначение("Оборудование");