// используемые налоговые счета
Перем СчН02_02, СчН02_03, СчН02_07, СчН02_04_1, СчН02_04_2, СчН02_04_3, СчН06_01, СчН06_04, СчН07_01, СчН07_05;
Перем Сч90_3, Сч90_6, Сч68_2, Сч68_5;
Перем Склад;
Перем КоличествоПродажа;
Перем СтрокаОблагаетсяЕНВД;

//******************************************************************************
Процедура СписатьРВ2(СтавкаНДС, Списать)
	Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	Операция.НомерЖурнала 						= "ТВ";
	Операция.ПервичныйДокумент  				= глПредставлениеПервичногоДокумента(Контекст);
	Операция.Дебет.Счет 						= СчетПоКоду("РВ.2");
	Операция.Дебет.МестаХранения 				= Склад;
	Операция.Дебет.СтавкиНДС 					= СтавкаНДС;
	Операция.Сумма	 							= - Списать;    
	Операция.СодержаниеПроводки					= "Сторнирование НДС с розничной выручки";
	
	Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	Операция.СодержаниеПроводки					= "Сторнирование НДС с розничной выручки";
	Операция.НомерЖурнала					 	= "БК";
	Операция.ПервичныйДокумент  				= глПредставлениеПервичногоДокумента(Контекст);
	Операция.Дебет.Счет 						= Сч90_3;
	Операция.Дебет.СтавкиНДС 					= СтавкаНДС;
	Операция.Кредит.Счет 						= Сч68_2;
	Операция.Кредит.ВидыПлатежейВБюджет 		= Перечисление.ВидыПлатежейВБюджет.Налог;
	Операция.Сумма 								= - Списать; 
КонецПроцедуры

//******************************************************************************
Процедура СписатьРВ3(СтавкаНП, Списать)
	Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	Операция.НомерЖурнала 						= "ТВ";
	Операция.ПервичныйДокумент  				= глПредставлениеПервичногоДокумента(Контекст);
	Операция.Дебет.Счет 						= СчетПоКоду("РВ.3");
	Операция.Дебет.МестаХранения 				= Склад;
	Операция.Дебет.СтавкиНП 					= СтавкаНП;
	Операция.Сумма	 							= - Списать;    
	Операция.СодержаниеПроводки					= "Сторнирование НП с розничной выручки";
	
	Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	Операция.СодержаниеПроводки 				= "Сторнирование НДС с розничной выручки";
	Операция.НомерЖурнала 						= "БК";
	Операция.ПервичныйДокумент  				= глПредставлениеПервичногоДокумента(Контекст);
	Операция.Дебет.Счет 						= Сч90_6;
	Операция.Дебет.СтавкиНП 					= СтавкаНП;
	Операция.Кредит.Счет 						= Сч68_5;
	Операция.Кредит.ВидыПлатежейВБюджет 		= Перечисление.ВидыПлатежейВБюджет.Налог;
	Операция.Сумма 								= - Списать;
КонецПроцедуры

//******************************************************************************
// СформироватьПроводкиДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьПроводкиДляЦелейНалоговогоУчета(БИ_НУ)
	
	СчетУчетаНУ = "";
	СчетСписанияНУ = "";
	СчетВыручкиНУ = "";
	Если МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		СчетУчетаНУ = СчН02_03;
		СчетСписанияНУ = СчН07_01;
		СчетВыручкиНУ = СчН06_01;
		
	ИначеЕсли МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
		СчетУчетаНУ = СчН02_07;
		СчетСписанияНУ = СчН07_01;
		СчетВыручкиНУ = СчН06_01;
		
	ИначеЕсли МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		СчетУчетаНУ = СчН02_02;
		СчетСписанияНУ = СчН07_05;
		СчетВыручкиНУ = СчН06_04;
		
	ИначеЕсли МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		Возврат
		
	Иначе // услуги
		СчетВыручкиНУ = СчН06_01;
	КонецЕсли;
	
	Если СчетУчетаНУ <> "" Тогда // если товар или продукци, то необходимо списать стимость МПЗ.
	    
		// Проверим хватает ли на складе товара по данным налогового учета.
		СуммаНаСкладахНУ = 0;
        КоличествоНаСкладахНУ = 0;
		Если ПустоеЗначение(СчетУчетаНУ) = 0 Тогда
			Если БИ_НУ.ПолучитьСчет(,СчетУчетаНУ) = 1 Тогда
				Если БИ_НУ.ПолучитьСубконто(ВидыСубконто.Номенклатура,,МПЗ) = 1 Тогда
					СуммаНаСкладахНУ = Макс(БИ_НУ.СКД("С"), 0);
					КоличествоНаСкладахНУ = БИ_НУ.СКД("К");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	   	Если КоличествоНаСкладахНУ < КоличествоПродажа Тогда
	   		ТекстСообщения = "По данным налогового учета на складах "+КоличествоНаСкладахНУ+" "+МПЗ.ЕдиницаИзмерения+
					  	    " из необходимых "+КоличествоПродажа+" "+МПЗ.ЕдиницаИзмерения+" товара "+МПЗ;
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;
		
		Если КоличествоПродажа >= КоличествоНаСкладахНУ Тогда
			СуммаОтгрузкиНУ = СуммаНаСкладахНУ;
		Иначе
			СуммаОтгрузкиНУ = КоличествоПродажа*(СуммаНаСкладахНУ/КоличествоНаСкладахНУ);
		КонецЕсли;

		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Отгружено со склада";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчетУчетаНУ;
		Операция.Кредит.Номенклатура = МПЗ;
		Если СтрокаОблагаетсяЕНВД = 0 Тогда
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие;
			
		Иначе
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.НеОблагается
		КонецЕсли;
		Операция.Количество = КоличествоПродажа;
		Операция.Сумма = СуммаОтгрузкиНУ;
		
		// Если продажи облагаются ЕНДВ, то стоимость реализованных
		// товаров не включается в состав расходов для целей налогового учета. 
		Если СтрокаОблагаетсяЕНВД = 0 Тогда 
			Операция.Дебет.Счет = СчетСписанияНУ;
		КонецЕсли;
	КонецЕсли;
	
	// Если продажи облагаются ЕНДВ, то выручка не включается
	// в состав доходов для целей налогового учета. 
	Если СтрокаОблагаетсяЕНВД = 0 Тогда
		
		ВыручкаБезНалогов = СуммаПродажи - НДС - НП;
		
		Если ВыручкаБезНалогов > 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		    Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Выручка от реализации";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетВыручкиНУ;
			Операция.Кредит.Номенклатура = МПЗ;
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие;
			Операция.Сумма = ВыручкаБезНалогов;
			Операция.Количество = КоличествоПродажа;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводкиДляЦелейНалоговогоУчета()

//******************************************************************************
// СчетДляЦелейНалоговогоУчета()
//
// Параметры:
//  Счет - счет учета ТМЦ в бух. учете.
//
// Возвращаемое значение:
//  Соответствующий счет налогогового учета.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Определяется на основании бухгалтерского счета
//  учета ТМЦ, счет для целей налогового учета.
//
Процедура СчетДляЦелейНалоговогоУчета(Счет, СчетНУ, СчетПР)
	
	Если Счет.ПринадлежитГруппе(СчетПоКоду("01")) = 1 Тогда
	    СчетНУ = СчетПоКоду("Н05.01");
    	СчетПР = СчетПоКоду("НПР.01");
		
	ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("03")) = 1 Тогда
	    СчетНУ = СчетПоКоду("Н05.01");
		СчетПР = СчетПоКоду("НПР.01");
		
	ИначеЕсли Счет.Код = "07" Тогда
	    СчетНУ = СчетПоКоду("Н01.02");
		СчетПР = СчетПоКоду("НПР.07");
		
	ИначеЕсли Счет.Код = "08.4" Тогда
	    СчетНУ = СчетПоКоду("Н01.01");
		СчетПР = СчетПоКоду("НПР.08");
		
	ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("10")) = 1 Тогда
	    СчетНУ = СчетПоКоду("Н02.01");
		СчетПР = СчетПоКоду("НПР.10.1");
		
	ИначеЕсли Счет.Код = "21" Тогда
	    СчетНУ = СчетПоКоду("Н02.07");
		СчетПР = СчетПоКоду("НПР.21");
	
	ИначеЕсли Счет.Код = "41.2" Тогда
		Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
			СчетНУ = СчетПоКоду("Н02.02.2");

		Иначе
			СчетНУ = СчетПоКоду("Н02.02.1");
		КонецЕсли;
		СчетПР = СчетПоКоду("НПР.41");
	ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("41")) = 1 Тогда
		СчетНУ = СчетПоКоду("Н02.02.1"); 
		СчетПР = СчетПоКоду("НПР.41");
		
	ИначеЕсли Счет.Код = "43" Тогда
	    СчетНУ = СчетПоКоду("Н02.03");
		СчетПР = СчетПоКоду("НПР.43");
	КонецЕсли;

КонецПроцедуры // СчетДляЦелейНалоговогоУчета()

//******************************************************************************
Процедура ОбработкаПроведения()
	
	КоррСчетВыявленныхИзлишков   = СчетПоКоду("91.1");
	КоррСчетВыявленныхИзлишковНУ = СчетПоКоду("Н08");
	СчетОтнесенияНедостач        = СчетПоКоду("94");
	СчетОтнесенияНедостачНУ      = СчетПоКоду("Н16"); 
	
	Сч21 = СчетПоКоду("21");
	Сч43 = СчетПоКоду("43");
	Сч41_2 = СчетПоКоду("41.2");
	Сч41_3 = СчетПоКоду("41.3");
	Сч41_4 = СчетПоКоду("41.4");
	СчетКассы = СчетПоКоду("50.1");
	Сч68_2 = СчетПоКоду("68.2");
	Сч68_5 = СчетПоКоду("68.5");
	Сч90_3 = СчетПоКоду("90.3");
	Сч90_6 = СчетПоКоду("90.6");
	Сч90_1_1 = СчетПоКоду("90.1.1");
	Сч90_2_1 = СчетПоКоду("90.2.1");
	Сч90_1_2 = СчетПоКоду("90.1.2");
	Сч90_2_2 = СчетПоКоду("90.2.2");
	СчетРасчетовСКомитентом = СчетПоКоду("76.5");
	Сч004 = СчетПоКоду("004");
	СчКТР = СчетПоКоду("КТР");
	
	СчН02_02 = СчетПоКоду("Н02.02.1");
	СчН02_03 = СчетПоКоду("Н02.03");
	СчН02_07 = СчетПоКоду("Н02.07");
	СчН06_01 = СчетПоКоду("Н06.01");
	СчН06_04 = СчетПоКоду("Н06.04");
	СчН07_01 = СчетПоКоду("Н07.01");
	СчН07_05 = СчетПоКоду("Н07.05");
	СчН02_МЦ = СчетПоКоду("Н02.МЦ");
	
	// Если ведется раздельный учет товаров в рознице и в опте,
	// то необходимо учесть, что товары в рознице учитываются
	// на счете Н02.02.2.
	Если ВидТМЦ = 3 Тогда
        Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
			СчН02_02 = СчетПоКоду("Н02.02.2");
		КонецЕсли;
	КонецЕсли;
	
	Если ВидТМЦ <> 2 Тогда
		
		Склад = ?(ВидТМЦ = 1, МестоХранения, РозничныйСклад);
	    Если ПустоеЗначение(Склад) = 1 Тогда
			ТекстСообщения = "Проводки Формируются только в том случае, если указано место хранения ТМЦ.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли; 
		
		Если (ВидТМЦ = 3) Тогда
			БИ_РВ = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_РВ.ИспользоватьРазделительУчета(ЮрЛицо);
			БИ_РВ.ВключатьСубсчета(1,0);
			БИ_РВ.ИспользоватьСубконто(ВидыСубконто.МестаХранения, Склад,2);
			БИ_РВ.ВыполнитьЗапрос(ТекущийДокумент(),,"РВ");
			Если Итог("СуммаПродажи") > БИ_РВ.СНД("С")Тогда
				ТекстСообщения = "Сумма продажи превышает полученную выручку.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
			БИ_РВ.ПолучитьСчет(,СчетПоКоду("РВ.1"));
			
			ОстатокРВ1 = БИ_РВ.СНД("С");
			
			БИ_РВ2 = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_РВ2.ИспользоватьРазделительУчета(ЮрЛицо);
			БИ_РВ2.ВключатьСубсчета(1,0);
			БИ_РВ2.ИспользоватьСубконто(ВидыСубконто.МестаХранения, Склад,2);
			БИ_РВ2.ИспользоватьСубконто(ВидыСубконто.СтавкиНДС,,1);
			БИ_РВ2.ВыполнитьЗапрос(ТекущийДокумент(),,"РВ.2");
			ОстатокРВ2 = СоздатьОбъект("ТаблицаЗначений");
			ОстатокРВ2.НоваяКолонка("Ставка");
			ОстатокРВ2.НоваяКолонка("Остаток");
			БИ_РВ2.ВыбратьСубконто(2);
			Пока БИ_РВ2.ПолучитьСубконто(2) = 1 Цикл
			    ОстатокРВ2.НоваяСтрока();
				ОстатокРВ2.Ставка = БИ_РВ2.Субконто(ВидыСубконто.СтавкиНДС);
				ОстатокРВ2.Остаток = БИ_РВ2.СНД("С");
			КонецЦикла;
			
			БИ_РВ3 = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_РВ3.ИспользоватьРазделительУчета(ЮрЛицо);
			БИ_РВ3.ВключатьСубсчета(1,0);
			БИ_РВ3.ИспользоватьСубконто(ВидыСубконто.МестаХранения, Склад,2);
			БИ_РВ3.ИспользоватьСубконто(ВидыСубконто.СтавкиНП,,1);
			БИ_РВ3.ВыполнитьЗапрос(ТекущийДокумент(),,"РВ.3");
			ОстатокРВ3 = СоздатьОбъект("ТаблицаЗначений");
			ОстатокРВ3.НоваяКолонка("Ставка");
			ОстатокРВ3.НоваяКолонка("Остаток");
			БИ_РВ3.ВыбратьСубконто(2);
			Пока БИ_РВ3.ПолучитьСубконто(2) = 1 Цикл
			    ОстатокРВ3.НоваяСтрока();
				ОстатокРВ3.Ставка = БИ_РВ3.Субконто(ВидыСубконто.СтавкиНП);
				ОстатокРВ3.Остаток = БИ_РВ3.СНД("С");
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаКомисии = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаКомисии.НоваяКолонка("МПЗ");
		ТаблицаКомисии.НоваяКолонка("ДоговорКомиссии");
		ТаблицаКомисии.НоваяКолонка("КоличествоОтклонение");
		ТаблицаКомисии.НоваяКолонка("КоличествоПродажа");
		ТаблицаКомисии.НоваяКолонка("НП");
		ТаблицаКомисии.НоваяКолонка("СуммаПродажа");
		ТаблицаКомисии.НоваяКолонка("СуммаОтклонение");
		ТаблицаКомисии.НоваяКолонка("КодПоиска");
		
		СписокТоваров = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(СписокТоваров, "МПЗ");
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
		БухИт.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
		БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"21, 43, 41.2, 41.3, 41.4",,,,,"СК"); 
		
		БухИтКТР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКТР.ИспользоватьРазделительУчета(ЮрЛицо);
		
		// Подготовим бух. итоги для расчета стоимости
		// ТМЦ для целей налогового учета, это понадобится
		// при отражении недосдач в налоговом учете.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			БухИтНУ = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНУ.ИспользоватьРазделительУчета(ЮрЛицо);
			БухИтНУ.Опции(1,);
			БухИтНУ.ИспользоватьСубконто();
			БухИтНУ.ВыполнитьЗапрос(, ТекущийДокумент(), "Н01.01, Н01.02, Н02.01, Н02.02.1, Н02.02.2, Н02.03, Н02.07, Н05.01,Н02.МЦ",,,,,);
			
			БИ_НУ = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_НУ.ИспользоватьРазделительУчета(ЮрЛицо);
			БИ_НУ.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
			БИ_НУ.ВыполнитьЗапрос(,ТекущийДокумент(), "Н02.01, Н02.02.1, Н02.02.2, Н02.03, Н02.07",,,,, "СК");
		КонецЕсли;
		
		// Сформируем проводки только по выявленным
		// излишкам и недосдачам в части ТМЦ.
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1  Цикл
			
			Если (ВидТМЦ = 1) и (СокрЛП(ФормироватьПроводку) = "Нет") Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоОтклонение = ?(ВидТМЦ = 1, Количество - КоличествоУчет ,ОтклНедостача);
			КоличествоПродажа = ?(ВидТМЦ = 3,КоличествоУчет + ОтклНедостача - Количество ,0);
			СуммаОтклонение = ?(ВидТМЦ = 1, Сумма - СуммаУчет, 0);
			
			СтрокаОблагаетсяЕНВД = 0;
			Если ВидТМЦ = 3 Тогда
				Если ОблагаетсяЕНВД = 1 Тогда
					Если (МПЗ.Вид() = "Номенклатура") Тогда
						Если (МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) Тогда
							СтрокаОблагаетсяЕНВД = 1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			//Сторнирование выручки
			Если ВидТМЦ = 3 Тогда
				ОсталосьСписать = СуммаПродажи;
				Если ОсталосьСписать > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.ПервичныйДокумент  				= глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет 						= СчетКассы;
					Если Константа.РозницаОблагаетсяЕНВД.Получить(ДатаДок) = Перечисление.Булево.Да Тогда
						Сч90_1 = Сч90_1_2;
					Иначе
						Сч90_1 = Сч90_1_1;
					КонецЕсли;   
					Операция.Кредит.Счет	 					= Сч90_1; 
					Операция.Сумма	 							= - ОсталосьСписать;    
					Операция.СодержаниеПроводки					= "Сторнирование выручки";
				КонецЕсли;
				СтавкаНДС = глСтавкаНалога(Контекст, "НДС");
				НомСтроки = 0;
				Если ОстатокРВ2.НайтиЗначение(СтавкаНДС, НомСтроки, "Ставка") = 1 Тогда
				    ОстатокРВ2.ПолучитьСтрокуПоНомеру(НомСтроки);
					Списать = Мин(НДС, ОстатокРВ2.Остаток);
					Если Списать > 0 Тогда
						СписатьРВ2(СтавкаНДС, Списать);
						ОсталосьСписать = ОсталосьСписать - Списать;
						ОстатокРВ2.Остаток = ОстатокРВ2.Остаток - Списать;
					КонецЕсли;
				КонецЕсли;
				СтавкаНП = глСтавкаНалога(Контекст, "НП");
				НомСтроки = 0;
				Если ОстатокРВ3.НайтиЗначение(СтавкаНП, НомСтроки, "Ставка") = 1 Тогда
				    ОстатокРВ3.ПолучитьСтрокуПоНомеру(НомСтроки);
					Списать = Мин(НП, ОстатокРВ3.Остаток);
					Если Списать > 0 Тогда
						СписатьРВ3(СтавкаНП, Списать);
						ОсталосьСписать = ОсталосьСписать - Списать;
						ОстатокРВ3.Остаток = ОстатокРВ3.Остаток - Списать;
					КонецЕсли;
				КонецЕсли;     
				Списать = Мин(ОсталосьСписать, ОстатокРВ1);
				Если Списать > 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала 						= "ТВ";
					Операция.ПервичныйДокумент  				= глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет 						= СчетПоКоду("РВ.1");
					Операция.Дебет.МестаХранения 				= Склад;
					Операция.Сумма	 							= - Списать;    
					Операция.СодержаниеПроводки					= "Сторнирование розничной выручки";
					ОсталосьСписать = ОсталосьСписать - Списать;
					ОстатокРВ1 = ОстатокРВ1 - Списать;
				КонецЕсли;
				Если ОсталосьСписать > 0 Тогда
				    ОстатокРВ2.ВыбратьСтроки();
					Пока (ОстатокРВ2.ПолучитьСтроку() = 1) и (ОсталосьСписать > 0) Цикл
						Списать = Мин(ОсталосьСписать, ОстатокРВ2.Остаток);
						Если Списать > 0 Тогда
							СписатьРВ2(ОстатокРВ2.Ставка, Списать);
							ОсталосьСписать = ОсталосьСписать - Списать;
							ОстатокРВ2.Остаток = ОстатокРВ2.Остаток - Списать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если ОсталосьСписать > 0 Тогда
				    ОстатокРВ3.ВыбратьСтроки();
					Пока (ОстатокРВ3.ПолучитьСтроку() = 1) и (ОсталосьСписать > 0) Цикл
						Списать = Мин(ОсталосьСписать, ОстатокРВ3.Остаток);
						Если Списать > 0 Тогда
							СписатьРВ3(ОстатокРВ3.Ставка, Списать);
							ОсталосьСписать = ОсталосьСписать - Списать;
							ОстатокРВ3.Остаток = ОстатокРВ3.Остаток - Списать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			УчЦена = 0;
			СуммаОтклонение = 0;
			Если ВидТМЦ = 1 Тогда
				СуммаОтклонение = Сумма - СуммаУчет;
			Иначе
				КоличествоНаСкладах = 0;
				Если (ПустоеЗначение(Счет) = 0) и (Счет <> СчКТР) Тогда
					Если БухИт.ПолучитьСчет(,Счет) = 1 Тогда
						Если БухИт.ПолучитьСубконто(ВидыСубконто.Номенклатура,,МПЗ) = 1 Тогда
							Если Счет <> Сч41_2 Тогда
								СуммаНаСкладах = БухИт.СКД("С");
								КоличествоНаСкладах = БухИт.СКД("К");
							КонецЕсли;
							Если БухИт.ПолучитьСубконто(ВидыСубконто.МестаХранения,,Склад) = 1 Тогда
								Если Счет = Сч41_2 Тогда
									СуммаНаСкладах = БухИт.СКД("С");
									КоличествоНаСкладах = БухИт.СКД("К");
								КонецЕсли;
								КоличествоНаСкладе = БухИт.СКД("К");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				УчЦена = ?(КоличествоНаСкладах > 0, СуммаНаСкладах/КоличествоНаСкладах, 0);
				СуммаОтклонение = УчЦена*КоличествоОтклонение;
			КонецЕсли;
			
			Если (КоличествоОтклонение < 0) и (Счет <> СчКТР) Тогда // недосдача
				Если ПустоеЗначение(Счет) = 1 Тогда
					ТекстСообщения = "В стороке "+ НомерСтроки + " не указан счет учета ТМЦ.";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Недостачи и потери";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = Счет;
				Операция.Кредит.Субконто(1, МПЗ);
				Операция.Кредит.Субконто(2, Склад);
				
				Если Счет.Забалансовый = 0 Тогда
					Операция.Дебет.Счет = СчетОтнесенияНедостач;
				КонецЕсли;
				
				НедостачаКоличество = Макс(0, - КоличествоОтклонение);
				Операция.Сумма = - СуммаОтклонение;
				Если Счет.Количественный  = 1 Тогда
					Операция.Количество = НедостачаКоличество;
				КонецЕсли;
				
				//Отражение недостачи в налоговом учете.
				Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
					СчетУчетаНУ = ПустоеЗначение("Счет"); 
					СчетУчетаПР = ПустоеЗначение("Счет");
					СчетДляЦелейНалоговогоУчета(Счет, СчетУчетаНУ, СчетУчетаПР);
					Если ПустоеЗначение(СчетУчетаНУ) = 0 Тогда
						
						Если БухИтНУ.ПолучитьСубконто(1,, МПЗ) = 0 Тогда
							ТекстСообщения = "По данным налогового учета " + МПЗ + " отсутствует на складе";
							глНеПроводить(Контекст, ТекстСообщения);
							Возврат;
						КонецЕсли;
						
						СуммаВсего      = БухИтНУ.СКД("С");
						КоличествоВсего = БухИтНУ.СКД("К");
						
						КоличествоВсегоИнвентарь = 0;
						Если БухИтНУ.ПолучитьСчет(1,СчН02_МЦ)=1 Тогда
							КоличествоВсегоИнвентарь = БухИтНУ.СКД("К");
							КоличествоВсегоМатериал = КоличествоВсего - КоличествоВсегоИнвентарь; 
						КонецЕсли;
						
						Если НедостачаКоличество <= 0 Тогда
							
						Иначе
							Если КоличествоВсего < НедостачаКоличество Тогда
								ТекстСообщения = "По данным налогового учета на складах "+КоличествоВсего+" из необходимых "+НедостачаКоличество+" "+МПЗ;
								Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
									глНеПроводить(Контекст, ТекстСообщения);
									Возврат;
									
								Иначе
									глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
								КонецЕсли;
							КонецЕсли;
							
							Если НедостачаКоличество >= КоличествоВсего Тогда
								СуммаНедостачи = СуммаВсего;
							Иначе
								СуммаНедостачи = СуммаВсего/КоличествоВсего*(НедостачаКоличество);
							КонецЕсли;
							СуммаНедостачи = СуммаВсего/КоличествоВсего*(НедостачаКоличество);
						КонецЕсли;
						
						Если (СуммаНедостачи > 0) или (НедостачаКоличество > 0) Тогда
							Если КоличествоВсегоИнвентарь > 0 Тогда
								Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
								Операция.НомерЖурнала = "НУ";
								Операция.СодержаниеПроводки = "Недостачи и потери";
								Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
								Операция.Кредит.Счет = СчН02_МЦ;
								Операция.Кредит.Субконто(1, МПЗ);
								Если НедостачаКоличество > КоличествоВсегоИнвентарь Тогда
									Операция.Количество = КоличествоВсегоИнвентарь;
									НедостачаКоличество = НедостачаКоличество - КоличествоВсегоИнвентарь;
								Иначе
									Операция.Количество = НедостачаКоличество;
									НедостачаКоличество = 0;
									глСообщениеПроведения(глПереченьМПЗВСоставеОС(МПЗ,ТекущийДокумент()),ТекущийДокумент(),-1);
								КонецЕсли;
							КонецЕсли;
							Если НедостачаКоличество > 0 Тогда
								Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
								Операция.НомерЖурнала = "НУ";
								Операция.СодержаниеПроводки = "Недостачи и потери";
								Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
								Операция.Кредит.Счет = СчетУчетаНУ;
								Операция.Кредит.Субконто(1, МПЗ);
								Операция.Кредит.Субконто(2, Перечисление.УсловияПоступленияИВыбытия.Недостачи);
								Если СтрокаОблагаетсяЕНВД = 0 Тогда
									Операция.Дебет.Счет = СчетОтнесенияНедостачНУ;
								КонецЕсли;
								Операция.Сумма = СуммаНедостачи;
								Если СчетУчетаНУ.Количественный  = 1 Тогда
									Операция.Количество = НедостачаКоличество;
								КонецЕсли; 
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли (КоличествоОтклонение > 0) и (Счет <> СчКТР) Тогда // излишек
				Если ПустоеЗначение(Счет) = 1 Тогда
					ТекстСообщения = "В строке " + НомерСтроки + " не указан счет учета ТМЦ.";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				
				Если ДатаДок >= '01.01.2006' Тогда
					
					Если ДатаДок >= '01.01.2010' Тогда
						КоэффициентСуммыНУ = 1;
					Иначе
						
						СтавкаНалогаНаПрибыль = глПолучитьСтавкуНалога("ПрибФед", ДатаДок)
						+ глПолучитьСтавкуНалога("ПрибРесп", ДатаДок)
						+ глПолучитьСтавкуНалога("ПрибМест", ДатаДок);
						КоэффициентСуммыНУ = СтавкаНалогаНаПрибыль / 100; 
					КонецЕсли;
				Иначе
					КоэффициентСуммыНУ = 1;
				КонецЕсли;
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "БУ";
				Операция.СодержаниеПроводки = "Излишки при инвентаризации";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Счет;
				Операция.Дебет.Субконто(1, МПЗ);
				Если Счет.ВидСубконто(2) = ВидыСубконто.МестаХранения Тогда
					Операция.Дебет.Субконто(2, Склад);	
					
				ИначеЕсли Счет.ВидСубконто(2) = ВидыСубконто.Контрагенты Тогда
					Операция.Дебет.Субконто(2, Контрагент);
				КонецЕсли;
				
				Если Счет.Забалансовый = 0 Тогда
					Операция.Кредит.Счет = КоррСчетВыявленныхИзлишков;
					Операция.Кредит.Субконто(1, СтатьяПрочихДоходов);
				КонецЕсли;
				
				Операция.Сумма = СуммаОтклонение;
				Если Счет.Количественный  = 1 Тогда
					Операция.Количество = КоличествоОтклонение;
				КонецЕсли;
				
				// Отражение выявленных излишков в налоговом учете
				Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
					СчетУчетаНУ = ПустоеЗначение("Счет"); 
					СчетУчетаПР = ПустоеЗначение("Счет");
					СчетДляЦелейНалоговогоУчета(Счет, СчетУчетаНУ, СчетУчетаПР);
					Если ПустоеЗначение(СчетУчетаНУ) = 0 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "НУ";
						Операция.СодержаниеПроводки = "Излишки при инвентаризации";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчетУчетаНУ;
						Операция.Дебет.Субконто(1, МПЗ);
						Операция.Дебет.Субконто(2, Перечисление.УсловияПоступленияИВыбытия.ИзлишкиИнвентаризации);
						Если СтрокаОблагаетсяЕНВД = 0 Тогда
						    Операция.Кредит.Счет = КоррСчетВыявленныхИзлишковНУ;
							Операция.Кредит.Субконто(1, Перечисление.ВнереализационныеДоходы.ПрочиеВнереализационныеДоходы);
						КонецЕсли;
						Операция.Сумма = СуммаОтклонение * КоэффициентСуммыНУ;
						Если СчетУчетаНУ.Количественный  = 1 Тогда
							Операция.Количество = КоличествоОтклонение;
						КонецЕсли;  
						Если (КоэффициентСуммыНУ <> 0) И (КоэффициентСуммыНУ <> 1)Тогда
							Если (Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да)
							ИЛИ (СтрокаОблагаетсяЕНВД = 0)Тогда
								
								Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
								Операция.НомерЖурнала = "НУ";
								Операция.СодержаниеПроводки = "Излишки инвентаризации";
								Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
								Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
									Операция.Дебет.Счет = СчетУчетаПР;
									Операция.Дебет.Субконто(1, МПЗ);  
								КонецЕсли;
								Если СтрокаОблагаетсяЕНВД = 0 Тогда
									Операция.Кредит.Счет = КоррСчетВыявленныхИзлишковНУ;
									Операция.Кредит.Субконто(1, Перечисление.ВнереализационныеДоходы.ПрочиеВнереализационныеДоходы);
								КонецЕсли;
								Операция.Сумма = СуммаОтклонение * (1 - КоэффициентСуммыНУ); 
							КонецЕсли;

						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если Счет = СчКТР Тогда
				БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, МПЗ, 2);
				БухИтКТР.ИспользоватьСубконто(ВидыСубконто.МестаХранения, Склад, 2);
				БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры,, 1);
				БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
				
				Если КоличествоОтклонение > 0 Тогда
					ТекстСообщения = "Излишек товара на комиссии "+МПЗ+" "+ Строка(КоличествоОтклонение)+" "+МПЗ.ЕдиницаИзмерения+" не может быть оприходован автоматически.";
                    глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
					Если Количество < КоличествоОтклонение  Тогда
						ТекстСообщения = "Не оприходованный излишек комиссионного товара не может быть продан. Отразите оприходование излишков" +МПЗ+ "до инвентаризации торговой точки";
						глНеПроводить(Контекст, ТекстСообщения);
					КонецЕсли;
					КоличествоОтклонение = 0;
				КонецЕсли;
				
				ОсталосьОтгрузить = КоличествоПродажа - КоличествоОтклонение;
				КоличествоПродажаДляРсчета = КоличествоПродажа;
				ВсегоРеализовано = 0;
				ВсегоНП = 0;
				БухИтКТР.ВыбратьСубконто(ВидыСубконто.Договоры);
				Пока (БухИтКТР.ПолучитьСубконто(ВидыСубконто.Договоры) = 1) и (ОсталосьОтгрузить > 0) Цикл
					КодПоиска = МПЗ.Код + "_" +БухИтКТР.Субконто(ВидыСубконто.Договоры).Владелец.Код+"_"+БухИтКТР.Субконто(ВидыСубконто.Договоры).Код;
					НомСтроки = 0;
					КоличествоПоДоговору = БухИтКТР.СКД("К");
					Если КоличествоПоДоговору = 0 Тогда
						Продолжить;
					КонецЕсли;
					Если ТаблицаКомисии.НайтиЗначение(КодПоиска, НомСтроки, "КодПоиска") = 1 Тогда
					    ТаблицаКомисии.ПолучитьСтрокуПоНомеру(НомСтроки);
					Иначе
						ТаблицаКомисии.НоваяСтрока();
						ТаблицаКомисии.МПЗ = МПЗ;
						ТаблицаКомисии.ДоговорКомиссии = БухИтКТР.Субконто(ВидыСубконто.Договоры);
						ТаблицаКомисии.КоличествоОтклонение = 0;
						ТаблицаКомисии.КоличествоПродажа = 0;
						ТаблицаКомисии.СуммаОтклонение = 0;
						ТаблицаКомисии.СуммаПродажа = 0;
						ТаблицаКомисии.НП = 0;
						ТаблицаКомисии.КодПоиска = КодПоиска;
					КонецЕсли;
					КоличествоПоДоговору = БухИтКТР.СКД("К") - ТаблицаКомисии.КоличествоОтклонение - ТаблицаКомисии.КоличествоПродажа;
					Если КоличествоПоДоговору = 0 Тогда
						Продолжить;
					КонецЕсли;
					КоличествоОтгрузки = Мин(ОсталосьОтгрузить, КоличествоПоДоговору);
					СуммаПоДоговору = БухИтКТР.СКД("С") - ТаблицаКомисии.СуммаОтклонение - ТаблицаКомисии.СуммаПродажа;
					Если КоличествоОтгрузки = КоличествоПоДоговору Тогда
						СуммаОтгрузки = СуммаПоДоговору;
					Иначе
						СуммаОтгрузки = КоличествоОтгрузки*СуммаПоДоговору/КоличествоПоДоговору;
					КонецЕсли;
					ОсталосьОтгрузить = ОсталосьОтгрузить - КоличествоОтгрузки;
					Если КоличествоПродажаДляРсчета > 0 Тогда
						СуммаРеализации = Окр(СуммаПродажи*КоличествоОтгрузки/КоличествоПродажаДляРсчета,2,1);
						СуммаНП = Окр(НП*КоличествоОтгрузки/КоличествоПродажаДляРсчета,2,1);
					Иначе
						СуммаРеализации = 0;
						СуммаНП = 0;
					КонецЕсли;
					
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Отгружено со склада";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = Сч004;
					Операция.Кредит.Номенклатура = МПЗ;
					Операция.Кредит.Контрагенты = БухИтКТР.Субконто(ВидыСубконто.Договоры).Владелец;
					Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
					Операция.Количество = КоличествоОтгрузки;
					Операция.Сумма = СуммаОтгрузки; // в рублях 
					
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Отгружено со склада";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчКТР;
					Операция.Кредит.Номенклатура = МПЗ;
					Операция.Кредит.МестаХранения = Склад;
					Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
					Операция.Количество = КоличествоОтгрузки;
					Операция.Сумма = СуммаОтгрузки; // в рублях
					
					Если КоличествоОтклонение < 0 Тогда
					    Если (-КоличествоОтклонение) >= КоличествоОтгрузки  Тогда
							СписаноНаОтклонениеКоличество = КоличествоОтгрузки;
							СписаноНаОтклонениеСумма = СуммаОтгрузки;
							СписаноНаПродажуСумма = 0;
							НПКомитента = 0;
					        КоличествоОтклонение = КоличествоОтклонение + КоличествоОтгрузки;
						Иначе
							СписаноНаОтклонениеКоличество = (-КоличествоОтклонение);
							СписаноНаОтклонениеСумма = СуммаОтгрузки*(-КоличествоОтклонение)/КоличествоОтгрузки;
							СписаноНаПродажуСумма = СуммаРеализации*(КоличествоОтгрузки+КоличествоОтклонение)/КоличествоОтгрузки;
							НПКомитента = СуммаНП*(КоличествоОтгрузки+КоличествоОтклонение)/КоличествоОтгрузки;
							КоличествоОтклонение = 0;
							КоличествоПродажа = КоличествоПродажа - КоличествоОтгрузки - КоличествоОтклонение;
					    КонецЕсли;
					Иначе
						СписаноНаОтклонениеКоличество = 0;
						СписаноНаОтклонениеСумма = 0;
						СписаноНаПродажуСумма = СуммаРеализации;
						НПКомитента = СуммаНП;
						КоличествоОтклонение = 0;
						КоличествоПродажа = КоличествоПродажа - КоличествоОтгрузки;
					КонецЕсли;
					
					ТаблицаКомисии.КоличествоОтклонение = СписаноНаОтклонениеКоличество;
					ТаблицаКомисии.КоличествоПродажа = КоличествоОтгрузки - СписаноНаОтклонениеКоличество;
					ТаблицаКомисии.СуммаОтклонение = СписаноНаОтклонениеСумма;
					ТаблицаКомисии.СуммаПродажа = СписаноНаПродажуСумма;
					ТаблицаКомисии.НП = НПКомитента;
				КонецЦикла;
				
			ИначеЕсли КоличествоПродажа > 0 Тогда
				
				Если СтрокаОблагаетсяЕНВД = 1 Тогда
					СчетУчетаСебестоимости = Сч90_2_2;
					СчетУчетаВыручки = Сч90_1_2;
					
				Иначе
					СчетУчетаСебестоимости = Сч90_2_1;
					СчетУчетаВыручки = Сч90_1_1;	
				КонецЕсли;
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Отгружено со склада";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетУчетаСебестоимости;
				Операция.Дебет.ВидыНоменклатуры = МПЗ.ВидНоменклатуры;
				Операция.Кредит.Счет = Счет;
				Операция.Кредит.Номенклатура = МПЗ;
				Операция.Кредит.МестаХранения = Склад;
				Операция.Количество = КоличествоПродажа;
				Операция.Сумма = УчЦена*КоличествоПродажа; 
				
				Если (глНовыеПравилаВеденияНУ(ДатаДок) = 1) Тогда
					СформироватьПроводкиДляЦелейНалоговогоУчета(БИ_НУ);
					Если СтатусВозврата() = 0 Тогда // произошла ошибка при формировании проводок для целей налогового учета.
						Возврат;
					КонецЕсли;
				КонецЕсли;
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Выручка";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетКассы;
				Операция.Дебет.ДвиженияДенежныхСредств = ВидДвижения;
				СчетУчетаВыручки = Сч90_1_1;
				Если СтрокаОблагаетсяЕНВД = 1 Тогда
					Операция.Кредит.Счет = Сч90_1_2;
					Операция.Кредит.ВидыНоменклатуры = МПЗ.ВидНоменклатуры;
				Иначе
					Операция.Кредит.Счет = Сч90_1_1;
					Операция.Кредит.ВидыНоменклатуры = МПЗ.ВидНоменклатуры;
					Операция.Кредит.СтавкиНДС = глСтавкаНалога(Контекст, "НДС");
					Операция.Кредит.СтавкиНП= глСтавкаНалога(Контекст, "НП");
				КонецЕсли;
				Операция.Сумма = СуммаПродажи;
				
				Если СтрокаОблагаетсяЕНВД = 0 Тогда
					Если НП = 0 Тогда
					Иначе
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.СодержаниеПроводки = "Начислен налог с продаж";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = Сч90_6;
						Операция.Дебет.ВидыНоменклатуры = МПЗ.ВидНоменклатуры;
						Операция.Дебет.СтавкиНП = глСтавкаНалога(Контекст, "НП");
						Операция.Кредит.Счет = Сч68_5;
						Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
						Операция.Сумма = НП;
					КонецЕсли;
				КонецЕсли;       
							
			КонецЕсли;
		КонецЦикла;
		ТаблицаКомисии.Свернуть("ДоговорКомиссии","КоличествоОтклонение, КоличествоПродажа, СуммаОтклонение, СуммаПродажа, НП");
		ТаблицаКомисии.ВыбратьСтроки();
		Пока ТаблицаКомисии.ПолучитьСтроку() = 1 Цикл
			Если (ТаблицаКомисии.СуммаОтклонение + ТаблицаКомисии.СуммаПродажа) = 0 Тогда
			Иначе
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Выручка за комисс.товар";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетКассы;
				Операция.Дебет.ДвиженияДенежныхСредств = ВидДвижения;
				Операция.Кредит.Счет = СчетРасчетовСКомитентом;
				Операция.Кредит.Контрагенты = ТаблицаКомисии.ДоговорКомиссии.Владелец;
				Операция.Кредит.Договоры = ТаблицаКомисии.ДоговорКомиссии;
				Операция.Сумма = ТаблицаКомисии.СуммаОтклонение + ТаблицаКомисии.СуммаПродажа;
			КонецЕсли;
			Если ТаблицаКомисии.НП = 0 Тогда
			Иначе
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен налог с продаж";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетРасчетовСКомитентом;
				Операция.Дебет.Контрагенты = ТаблицаКомисии.ДоговорКомиссии.Владелец;
				Операция.Дебет.Договоры = ТаблицаКомисии.ДоговорКомиссии;
				Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = ТаблицаКомисии.НП;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Операция.Содержание = "Инвентаризация ТМЦ";
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);

КонецПроцедуры