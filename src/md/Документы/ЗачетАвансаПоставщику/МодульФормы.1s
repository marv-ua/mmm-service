Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	Стр = "Руб.";
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
			Если Договор.ОплатаДоговора = 1 Тогда
			Иначе
				Стр = СокрЛП(Договор.ВалютаДоговора);
			КонецЕсли;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//_____________________________________________________________________________
Процедура Заполнить()
	Если Проведен() = 1 Тогда
	    Предупреждение("Автоматическое заполнение табличной части может быть
						|выполнено только для непроведенного документа.");
		Возврат;

	ИначеЕсли Контрагент.Выбран() = 0 Тогда
	    Предупреждение("Не выбран Поставщик.");
		Активизировать("Контрагент");
		Возврат;
	КонецЕсли;

	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Перед заполнением таблица будет очищена,
					|а существующие строки удалены. Продолжать?","ОК+Отмена") = "ОК" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
		БухИт.ВыполнитьЗапрос(, ДатаДок, "60.1, 60.11");
		Если БухИт.ПолучитьСчет(,"60.1") = 1 Тогда
			БухИт.ВыбратьСубконто(ВидыСубконто.Договоры);
			Пока БухИт.ПолучитьСубконто(ВидыСубконто.Договоры) = 1 Цикл
				Задолженность = БухИт.СКК("С");
				Если Задолженность > 0 Тогда
					НоваяСтрока();
					Договор = БухИт.Субконто(ВидыСубконто.Договоры);
					Сумма = Задолженность;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если БухИт.ПолучитьСчет(,"60.11") = 1 Тогда
			БухИт.ВыбратьСубконто(ВидыСубконто.Договоры);
			Пока БухИт.ПолучитьСубконто(ВидыСубконто.Договоры) = 1 Цикл
				Если ПустоеЗначение(БухИт.Субконто(ВидыСубконто.Договоры).ВалютаДоговора) = 1 Тогда
				ИначеЕсли БухИт.ПолучитьВалюту(, БухИт.Субконто(ВидыСубконто.Договоры).ВалютаДоговора) = 1 Тогда
					Задолженность = БухИт.СКК("В");
					Если Задолженность > 0 Тогда
						НоваяСтрока();
						Договор = БухИт.Субконто(ВидыСубконто.Договоры);
						Сумма = Задолженность;
						Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
		Предупреждение("Не обнаружено задолженности поставщика "+Контрагент+".");
	КонецЕсли;
КонецПроцедуры //Заполнить
//_____________________________________________________________________________
Процедура ПриВыбореВариантаЗачетаАванса()
	ЗачитыватьАванс = ВариантЗачетаАванса.ПолучитьЗначение(ВариантЗачетаАванса.ТекущаяСтрока());
КонецПроцедуры //ПриВыбореВариантаЗачетаАванса
//_____________________________________________________________________________
Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;
	ЗачитыватьАванс = 0;
КонецПроцедуры //ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаполнить.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
	КонецЕсли;
	
	Если Константа.ВалютныйУчет = Да Тогда
	Иначе
		Форма.Валюта.Видимость(0);
	КонецЕсли;

	ВариантЗачетаАванса.ДобавитьЗначение(2, "только по договору");
	ВариантЗачетаАванса.ДобавитьЗначение(0, "без указания договора");
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));
	НачальнаяДатаДокумента = ДатаДок;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	ИтогСумма = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
	    ОплатаДоговора = 1;
		Если Договор.Выбран() = 1 Тогда
			Если Договор.ОплатаДоговора = 2 Тогда
				Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
				Кратность = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
				Кратность = ?(Кратность = 0, 1, Кратность);
				ОплатаДоговора = 2;
			КонецЕсли;
		КонецЕсли;
		
		Если ОплатаДоговора = 2 Тогда
		    ИтогСумма = ИтогСумма + Сумма*Курс/Кратность;
			
		Иначе
			ИтогСумма = ИтогСумма + Сумма;
		КонецЕсли;
	КонецЦикла;
	Операция.СуммаОперации = ИтогСумма;
	Операция.Содержание = "Зачет аванса поставщику";
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");