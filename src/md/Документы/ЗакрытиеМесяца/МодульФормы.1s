Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;

//******************************************************************************
// УправлениеСпискомВыполняемыхДействий()
//
// Описание:
//  Выполняется управление видимостью в списке выполняемых действий
//  пунктом "Реформация баланса". Этот пункт присутствует в списке
//  действий только если выполняется закрытие счетов в декабре.
//
Процедура УправлениеСпискомВыполняемыхДействий()
	    
	СписокВыполняемыхДействий.УдалитьВсе();
	Если (Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да) 
	 или (Константа.МетодРасчетаСебестоимостиМатериалов.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСредневзвешеннойСтоимости) Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("КорректировкаСреднейСтоимостиМатериалов", "Расчет (корректировка) фактической стоимости материалов");    
	КонецЕсли;
	
	Если (Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да)
	 или (Константа.МетодРасчетаСебестоимостиТоваров.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСредневзвешеннойСтоимости) Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("КорректировкаСреднейСтоимостиТоваров", "Расчет (корректировка) фактической стоимости товаров");
	КонецЕсли;
	
	СписокВыполняемыхДействий.ДобавитьЗначение("РасчетТорговойНаценки", "Расчет торговой наценки по проданным товарам");
	
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет16", "Закрытие счета 16");
		
	Если (Константа.УчетЗарплатыВоВнешнейПрограмме <> Да)
	 или (НачислятьНалогиСФОТ = 1) Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("НачислятьНалогиСФОТ", "Начисление налогов с фонда оплаты труда");    
	КонецЕсли;
	
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет97", "Закрытие счета 97");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет25", "Закрытие счета 25");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет26", "Закрытие счета 26");

	Если Константа.СпособУчетаГПиПФ.Получить(ДатаДок) <> Перечисление.СпособыУчетаГПиПФ.ПоПлановойСтоимости Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("Счет20", "Расчет и корректировка себестоимости ГП и ПФ");

	Иначе
		СписокВыполняемыхДействий.ДобавитьЗначение("Счет20", "Закрытие счета 20");
		СписокВыполняемыхДействий.ДобавитьЗначение("Счет40", "Закрытие счета 40");
    
	КонецЕсли;

	СписокВыполняемыхДействий.ДобавитьЗначение("Счет44_1", "Закрытие счета 44.1.1");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет44_1_2", "Закрытие счета 44.1.2");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет44_1_3", "Закрытие счета 44.1.3");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет44_2", "Закрытие счета 44.2");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет44_3", "Закрытие счета 44.3");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет90", "Закрытие счета 90");
	СписокВыполняемыхДействий.ДобавитьЗначение("Счет91", "Закрытие счета 91");
	
	Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("УчетПостоянныхРазниц", "Учет постоянных разниц (ПБУ 18/02)");
		СписокВыполняемыхДействий.ДобавитьЗначение("УчетВременныхРазниц", "Учет временных разниц (ПБУ 18/02)");
		СписокВыполняемыхДействий.ДобавитьЗначение("РасчетНалогаНаПрибыль", "Расчет налога на прибыль (ПБУ 18/02)");
	КонецЕсли;

	Позиция = СписокВыполняемыхДействий.НайтиЗначение("РеформацияБаланса");
	Если ДатаМесяц(ДатаДок) = 12 Тогда
		Если Позиция = 0 Тогда
			СписокВыполняемыхДействий.ДобавитьЗначение("РеформацияБаланса", "Реформация баланса");
		КонецЕсли;
	Иначе
		Если Позиция <> 0 Тогда
			СписокВыполняемыхДействий.УдалитьЗначение(Позиция)
		КонецЕсли;
	КонецЕсли;
	
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По СписокВыполняемыхДействий.РазмерСписка() Цикл
		Реквизит = СписокВыполняемыхДействий.ПолучитьЗначение(СчетчикЦикла);
		СписокВыполняемыхДействий.Пометка(СчетчикЦикла, ПолучитьАтрибут(Реквизит));
	КонецЦикла;
	
КонецПроцедуры // УправлениеСпискомВыполняемыхДействий()
//_____________________________________________________________________________
Процедура УстДату()
	Если ДатаДок <> КонМесяца(ДатаДок) Тогда
	    ДатаДок = КонМесяца(ДатаДок);
	КонецЕсли;
	Форма.КнопкаПерепровестиДокументы.Заголовок("Перепровести документы за "+Формат(ДатаДок, "Д ММММГГГГ"));
	УправлениеСпискомВыполняемыхДействий();
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПерепровестиДокументы()
    Док = СоздатьОбъект("Документ");
	//Включить в выборку только проведенные бухгалтерские документы
	Док.УстановитьФильтр(1, 0, 0, 0, 0, 2);
	Док.ВыбратьДокументы(НачМесяца(ДатаДок), КонМесяца(ДатаДок));
	Если МонопольныйРежим() = 1 Тогда
		БИ = СоздатьОбъект("БухгалтерскиеИтоги"); БИ.ИспользоватьРазделительУчета(ЮрЛицо);
		БИ.Актуальность(1);
	Иначе
		НачатьТранзакцию();
	КонецЕсли;
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если (Метаданные.Документ(Док.Вид()).РазрешитьПроведение = 0)
			или (Док.ТекущийДокумент() = ТекущийДокумент()) Тогда
			Продолжить;
		КонецЕсли;

		Сообщить("Перепроведение "+Док);
		Если МонопольныйРежим() = 1 Тогда
			БИ.Рассчитать(, Док.ТекущийДокумент());
		КонецЕсли;
		Если Док.Провести() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	Если МонопольныйРежим() <> 1 Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;

	Предупреждение("Перепроведение документов выполнено.");
КонецПроцедуры //ПерепровестиДокументы

//******************************************************************************
//	Установить(Режим="") 
//
//	Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
//	Описание: Устанавливает, снимает или инвертирует отметки выбора строк 
//
Процедура Установить(Список, Режим="") 
	Для Н = 1 По Список.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			Список.Пометка(Н, 1);
		ИначеЕсли Режим="Сброс" Тогда
			Список.Пометка(Н, 0); 
		Иначе
			Список.Пометка(Н, ?(Список.Пометка(Н) = 1, 0, 1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  Установить()

//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ДатаДок = НачМесяца(РабочаяДата()) - 1;
	УстановитьНовыйНомер("");

	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

	КорректировкаСреднейСтоимостиМатериалов = 1;
	КорректировкаСреднейСтоимостиТоваров = 1;
	РасчетТорговойНаценки = 1;
	НачислятьНалогиСФОТ = ?(Константа.УчетЗарплатыВоВнешнейПрограмме = Да, 0, 1);
	Счет16 = 1;
	Счет97 = 1;
	Счет25 = 1;
	Счет26 = 1;
	Счет20 = 1;
	Счет40 = 1;
	Счет44_1 = 1;
	Счет44_1_2 = 1;
	Счет44_1_3 = 1;
	Счет44_2 = 1;
	Счет44_3 = 1;
	Счет90 = 1;
	Счет91 = 1;
	УчетПостоянныхРазниц   = 1;     
	УчетВременныхРазниц    = 1;
	РасчетНалогаНаПрибыль  = 1;
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии()

	ПриЗаписиПерепроводить(1);
	Форма.КнопкаПерепровестиДокументы.Заголовок("Перепровести документы за "+Формат(ДатаДок, "Д ММММГГГГ"));
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.ВыделитьВсе.Доступность(0);
		Форма.СброситьВсе.Доступность(0);
		Форма.Инвертировать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПерепровестиДокументы.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли; 
	НачальнаяДатаДокумента = ДатаДок;
	
	УправлениеСпискомВыполняемыхДействий();
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По СписокВыполняемыхДействий.РазмерСписка() Цикл
		Реквизит = СписокВыполняемыхДействий.ПолучитьЗначение(СчетчикЦикла);
		Значение = СписокВыполняемыхДействий.Пометка(СчетчикЦикла);
		УстановитьАтрибут(Реквизит, Значение);
	КонецЦикла;
    
	Операция.Содержание = "Закрытие месяца: " + ПериодСтр(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
	
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");