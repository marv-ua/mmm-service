////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения()

	Сч21 = СчетПоКоду("21");
	Сч43 = СчетПоКоду("43");
	
	СчН02_01 = СчетПоКоду("Н02.01");
	СчН02_03 = СчетПоКоду("Н02.03");
	СчН02_07 = СчетПоКоду("Н02.07");
	
	Если (ВидПеремещения = 0) и (ПустоеЗначение(СчетЗатрат) = 1) Тогда
		ТекстСообщения = "Не указан счет отнесения затрат.";
		глНеПроводить(Контекст, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Операция.СуммаОперации = 0;
	
	СписокМатериалов = СоздатьОбъект("СписокЗначений");
	СписокПродукции = СоздатьОбъект("СписокЗначений"); 
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Материал.Выбран() = 1 Тогда
			Если Материал.Вид() = "Материалы" Тогда
				СписокМатериалов.ДобавитьЗначение(Материал);
				
			ИначеЕсли Материал.Вид() = "Номенклатура" Тогда
				СписокПродукции.ДобавитьЗначение(Материал);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	БИ10 = СоздатьОбъект("БухгалтерскиеИтоги"); БИ10.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ10.ИспользоватьСубконто(ВидыСубконто.Материалы, СписокМатериалов, 2);
	БИ10.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БИ10.ВключатьСубсчета(-1);
	БИ10.ВыполнитьЗапрос(,ТекущийДокумент(), "10",,,,, "СК");
		
	БИ21и43 = СоздатьОбъект("БухгалтерскиеИтоги");  БИ21и43.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ21и43.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокПродукции, 2);
	БИ21и43.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БИ21и43.ВыполнитьЗапрос(,ТекущийДокумент(), "21, 43",,,,, "СК");
	
	БИ_НУМатериалы = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_НУМатериалы.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ_НУМатериалы.ИспользоватьСубконто(ВидыСубконто.Материалы, СписокМатериалов, 2);
	БИ_НУМатериалы.ВыполнитьЗапрос(,ТекущийДокумент(), "Н02.01",,,,, "СК");
		
	БИПродукция = СоздатьОбъект("БухгалтерскиеИтоги");  БИПродукция.ИспользоватьРазделительУчета(ЮрЛицо);
	БИПродукция.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокПродукции, 2);
	БИПродукция.ВыполнитьЗапрос(,ТекущийДокумент(), "Н02.03, Н02.07",,,,, "СК");  
	//_____________________________________________________________________________
	БИН_Н02_МЦ = СоздатьОбъект("БухгалтерскиеИтоги"); БИН_Н02_МЦ.ИспользоватьРазделительУчета(ЮрЛицо);
	БИН_Н02_МЦ.ИспользоватьСубконто(ВидыСубконто.Материалы, СписокМатериалов, 1);
	БИН_Н02_МЦ.ВыполнитьЗапрос(,ТекущийДокумент(),"Н02.МЦ",,,,, "СК");
	//_____________________________________________________________________________
	
	ТаблицаОстатков = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблицаОстатков, "Материал, КоличествоОтпущено");
	ТаблицаОстатков.Свернуть("Материал", "КоличествоОтпущено");
	ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладах", "Число");
	ТаблицаОстатков.НоваяКолонка("СуммаНаСкладах", "Число");
	ТаблицаОстатков.НоваяКолонка("СредняяСтоимость", "Число");
	ТаблицаОстатков.НоваяКолонка("СчетУчета");
	ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладахНУ", "Число");
	ТаблицаОстатков.НоваяКолонка("СуммаНаСкладахНУ", "Число");
	ТаблицаОстатков.НоваяКолонка("СчетУчетаНУ");	
	ТаблицаОстатков.НоваяКолонка("КоличествоИнвентаряНаСкладахНУ", "Число");
	ТаблицаОстатков.ВыбратьСтроки();
	Пока ТаблицаОстатков.ПолучитьСтроку() = 1 Цикл
		КоличествоНаСкладе = 0;
		Если ТаблицаОстатков.Материал.Вид() = "Материалы" Тогда
			ТаблицаОстатков.СчетУчета = ТаблицаОстатков.Материал.СубСчет10;
			БухИтоги = БИ10;
			БИ_НУ    = БИ_НУМатериалы
			
		ИначеЕсли ТаблицаОстатков.Материал.Вид() = "Номенклатура" Тогда
			Если ТаблицаОстатков.Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
				ТаблицаОстатков.СчетУчета = Сч43;
				БухИтоги = БИ21и43;
				БИ_НУ    = БИПродукция;
				
			ИначеЕсли ТаблицаОстатков.Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
				ТаблицаОстатков.СчетУчета = Сч21;
				БухИтоги = БИ21и43;
				БИ_НУ    = БИПродукция;
				
			Иначе
				ТекстСообщения = ТаблицаОстатков.Материал + " не является продукцией (полуфабрикатом) и не может быть перемещен!";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтоги.ПолучитьСчет(, ТаблицаОстатков.СчетУчета) = 1 Тогда
			Если БухИтоги.ПолучитьСубконто(1,, ТаблицаОстатков.Материал) = 1 Тогда
				ТаблицаОстатков.СуммаНаСкладах = Макс(БухИтоги.СКД("С"), 0);
				ТаблицаОстатков.КоличествоНаСкладах = БухИтоги.СКД("К");
				Если БухИтоги.ПолучитьСубконто(ВидыСубконто.МестаХранения,, МестоХранения) = 1 Тогда
					КоличествоНаСкладе = БухИтоги.СКД("К");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ТаблицаОстатков.КоличествоНаСкладах > 0 Тогда
			ТаблицаОстатков.СредняяСтоимость = ТаблицаОстатков.СуммаНаСкладах/ТаблицаОстатков.КоличествоНаСкладах;
		КонецЕсли;
		
		Если ВидПеремещения = 0 Тогда
			Стр = ""+ТаблицаОстатков.НомерСтроки+". "+ТаблицаОстатков.Материал+": на складе "+МестоХранения+" "+КоличествоНаСкладе+" "+
				  ТаблицаОстатков.Материал.ЕдиницаИзмерения+", всего на складах "+ТаблицаОстатков.КоличествоНаСкладах+" "+
				  ТаблицаОстатков.Материал.ЕдиницаИзмерения+" на сумму "+ТаблицаОстатков.СуммаНаСкладах;
			
			Если ТаблицаОстатков.КоличествоНаСкладах > 0 Тогда
				Стр = Стр + ",  средняя стоимость " + Окр(ТаблицаОстатков.СредняяСтоимость, 2, 1);
			КонецЕсли;
			ТекстСообщения = Стр;
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		КонецЕсли;
		
		Если КоличествоНаСкладе < ТаблицаОстатков.КоличествоОтпущено Тогда
			ТекстСообщения = "На складе "+КоличествоНаСкладе+" "+ТаблицаОстатков.Материал.ЕдиницаИзмерения+
							" из необходимых "+ТаблицаОстатков.КоличествоОтпущено+" "+ТаблицаОстатков.Материал.ЕдиницаИзмерения+" "+
							ТаблицаОстатков.Материал + " ("+ТаблицаОстатков.СчетУчета+")";
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;    
		
		// Предварительные операции по налоговому учету.
		Если (ВидПеремещения = 0) и (глНовыеПравилаВеденияНУ(ДатаДок) = 1) Тогда
			
			ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ=0;
			ТекстСписокОС = "";
			Если ТаблицаОстатков.Материал.Вид() = "Материалы" Тогда
				ТаблицаОстатков.СчетУчетаНУ = СчН02_01;
				//_____________________________________________________________________________    
				Если (ДатаДок>='01.01.2006') И (ТаблицаОстатков.Материал.СубСчет10 = СчетПоКоду("10.9")) Тогда					
					Если БИН_Н02_МЦ.ПолучитьСубконто(,, ТаблицаОстатков.Материал) = 1 Тогда
						ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ= БИН_Н02_МЦ.СКД("К");
						ТекстСписокОС=глПереченьМПЗВСоставеОС(ТаблицаОстатков.Материал,ТекущийДокумент());
						СчетУчетаИнвентаря=" и Н02.МЦ"
					КонецЕсли;
				КонецЕсли;
				//_____________________________________________________________________________                
				
			ИначеЕсли ТаблицаОстатков.Материал.Вид() = "Номенклатура" Тогда
				Если ТаблицаОстатков.Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
					ТаблицаОстатков.СчетУчетаНУ = СчН02_03;
				ИначеЕсли ТаблицаОстатков.Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
					ТаблицаОстатков.СчетУчетаНУ = СчН02_07;
				КонецЕсли;
			КонецЕсли;
			
			Если БИ_НУ.ПолучитьСчет(, ТаблицаОстатков.СчетУчетаНУ) = 1 Тогда
				Если БИ_НУ.ПолучитьСубконто(1,, ТаблицаОстатков.Материал) = 1 Тогда
					ТаблицаОстатков.СуммаНаСкладахНУ = Макс(БИ_НУ.СКД("С"), 0);
					ТаблицаОстатков.КоличествоНаСкладахНУ = БИ_НУ.СКД("К");
				КонецЕсли;
			КонецЕсли;
			Если (ТаблицаОстатков.КоличествоНаСкладахНУ + ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ)  < ТаблицаОстатков.КоличествоОтпущено Тогда
				ТекстСообщения = "По данным налогового учета на складах "+(ТаблицаОстатков.КоличествоНаСкладахНУ + ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ) +" "+ТаблицаОстатков.Материал.ЕдиницаИзмерения+
				" из необходимых "+ТаблицаОстатков.КоличествоОтпущено+" "+ТаблицаОстатков.Материал.ЕдиницаИзмерения+" "+
				ТаблицаОстатков.Материал + " ("+ТаблицаОстатков.СчетУчетаНУ+СчетУчетаИнвентаря+")";
				Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
					
				Иначе
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
					Если ПустоеЗначение(ТекстСписокОС) = 0 Тогда
						глСообщениеПроведения(ТекстСписокОС, ТекущийДокумент(), -1);
					КонецЕсли;					
				КонецЕсли;
			Иначе
				Если ПустоеЗначение(ТекстСписокОС) = 0 Тогда
					глСообщениеПроведения(ТекстСписокОС, ТекущийДокумент(), -1);
				КонецЕсли;					
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Если (ВидПеремещения = 0) и (глНовыеПравилаВеденияНУ(ДатаДок) = 1) Тогда
		// Определим по данным бухгалтерского учета направление списания МПЗ в налоговом учете (счет и аналитику). 
		ПереченьСтатейЗатрат = глПолучитьПереченьСтатейЗатрат(ДатаДок); 
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если КоличествоОтпущено=0 Тогда
			// Если не указано количество отпускаемного материала, выдаем сообщение и проводку не формируем.
			ТекстСообщения = "Строка " + НомерСтроки + ", не указано отпущенное количество""" + Материал;
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
			
		ИначеЕсли Материал.Выбран() = 0 Тогда
			ТекстСообщения = "Строка " + НомерСтроки + ", не указан объект учета.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		НомСтроки = 0;
		ТаблицаОстатков.НайтиЗначение(Материал, НомСтроки, "Материал");
		ТаблицаОстатков.ПолучитьСтрокуПоНомеру(НомСтроки);
		
		// Сумму отпущенного материала записываем в скрытую колонку табличной части.
		Если КоличествоОтпущено >= ТаблицаОстатков.КоличествоНаСкладах Тогда
			Сумма = ТаблицаОстатков.СуммаНаСкладах;
			
		Иначе
			Сумма = Окр(КоличествоОтпущено*ТаблицаОстатков.СредняяСтоимость, 2, 1);
		КонецЕсли;
		
		Если ВидПеремещения = 0 Тогда // передача в производство
			Если КоличествоОтпущено >= ТаблицаОстатков.КоличествоНаСкладах Тогда
				СуммаОтгрузки = ТаблицаОстатков.СуммаНаСкладах;
				
			Иначе
				СуммаОтгрузки = Окр(КоличествоОтпущено*ТаблицаОстатков.СредняяСтоимость, 2, 1);
			КонецЕсли;
		
			// Уменьшим остаток материала на списанное количество.
			ТаблицаОстатков.СуммаНаСкладах = ТаблицаОстатков.СуммаНаСкладах - СуммаОтгрузки;
			ТаблицаОстатков.КоличествоНаСкладах = ТаблицаОстатков.КоличествоНаСкладах - КоличествоОтпущено;
		
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетЗатрат;
			Операция.Дебет.Субконто(1,Субконто1);
			Операция.Дебет.Субконто(2,Субконто2);
			Операция.Дебет.Субконто(3,Субконто3);
			Операция.Кредит.Счет = ТаблицаОстатков.СчетУчета;
			Операция.Кредит.Субконто(1,Материал);
			Операция.Кредит.Субконто(2, МестоХранения);
			Операция.Количество = КоличествоОтпущено;
			Операция.Сумма = СуммаОтгрузки;
			Если Материал.Вид() = "Материалы" Тогда
				Операция.СодержаниеПроводки = "Передан материал";
				Операция.НомерЖурнала = "МТ";
				
			ИначеЕсли Материал.Вид() = "Номенклатура" Тогда
				Если Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
					Операция.СодержаниеПроводки = "Передана продукция";
					
				Иначе // полуфабрикат
					Операция.СодержаниеПроводки = "Передан полуфабрикат";
				КонецЕсли;
				Операция.НомерЖурнала = "ТВ";
			КонецЕсли;
			
			
			Операция.СуммаОперации = Операция.СуммаОперации + Операция.Сумма;
			                                                                                        
			// Передача МПЗ в налоговом учете.
			Если СчетЗатрат.ПринадлежитГруппе(СчетПоКоду("10")) = 1 Тогда // возврат на склад (не отражается в налоговом учете)
			ИначеЕсли глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
				//_____________________________________________________________________________       
				КоличествоОтгрузкиИнвентаряНУ=0;
				КоличествоОтпущеноН=0;
				СуммаСписанияН=0;
				НеФормироватьПустыеПроводки=0;
				//_____________________________________________________________________________
				// Если учет продукции ведется по нулевой стоимости,
				// то при списании продукции (полуфабрикатов) в проводке
				// указывается только количество.
				КоличествоОтпущеноН=КоличествоОтпущено;
				Если (Материал.Вид() = "Материалы")
				или (Константа.СпособНалоговогоУчетаГПиПФ.Получить(ДатаДок) = Перечисление.СпособыНалоговогоУчетаГПиПФ.ПоПлановойСтоимости) Тогда
					//_____________________________________________________________________________     				 	
					Если (ДатаДок>='01.01.2006') и (Материал.Вид() = "Материалы") Тогда
						Если (Материал.СубСчет10 = СчетПоКоду("10.9")) Тогда
							Если КоличествоОтпущеноН >= ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ Тогда
								КоличествоОтгрузкиИнвентаряНУ = ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ;
								ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ=ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ-КоличествоОтгрузкиИнвентаряНУ;
								КоличествоОтпущеноН=КоличествоОтпущеноН-КоличествоОтгрузкиИнвентаряНУ;
							Иначе
								КоличествоОтгрузкиИнвентаряНУ=КоличествоОтпущеноН;
								ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ=ТаблицаОстатков.КоличествоИнвентаряНаСкладахНУ-КоличествоОтгрузкиИнвентаряНУ;
								КоличествоОтпущеноН=КоличествоОтпущеноН-КоличествоОтгрузкиИнвентаряНУ;
							КонецЕсли;
						КонецЕсли;
														
						Если КоличествоОтпущеноН >= ТаблицаОстатков.КоличествоНаСкладахНУ Тогда
							СуммаОтгрузки = ТаблицаОстатков.СуммаНаСкладахНУ;
						Иначе
							СуммаОтгрузки = Окр(КоличествоОтпущеноН*(ТаблицаОстатков.СуммаНаСкладахНУ/ТаблицаОстатков.КоличествоНаСкладахНУ), 2, 1);
						КонецЕсли;
						
					Иначе
						//_____________________________________________________________________________     
						Если КоличествоОтпущеноН >= ТаблицаОстатков.КоличествоНаСкладахНУ Тогда
							СуммаОтгрузки = ТаблицаОстатков.СуммаНаСкладахНУ;
							
						Иначе
							СуммаОтгрузки = Окр(КоличествоОтпущеноН*(ТаблицаОстатков.СуммаНаСкладахНУ/ТаблицаОстатков.КоличествоНаСкладахНУ), 2, 1);
						КонецЕсли;
					КонецЕсли;
					
				Иначе // продукция (полуфабрикат)
					СуммаОтгрузки = 0;
				КонецЕсли;
				
				// Уменьшим остаток материала на списанное количество.
				ТаблицаОстатков.СуммаНаСкладахНУ = ТаблицаОстатков.СуммаНаСкладахНУ - СуммаОтгрузки;
				ТаблицаОстатков.КоличествоНаСкладахНУ = ТаблицаОстатков.КоличествоНаСкладахНУ - КоличествоОтпущено;
				
				// Если опредлен налоговый счет, то необходимо
				// сформировать проводку для целей налогового учета. 
				
				Если Материал.Вид() = "Материалы" Тогда
					СчетКт    = Материал.СубСчет10;
					
				ИначеЕсли ТаблицаОстатков.Материал.Вид() = "Номенклатура" Тогда
					Если ТаблицаОстатков.Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
						СчетКт    = СчетПоКоду("43");
						
					ИначеЕсли ТаблицаОстатков.Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
						СчетКт    = СчетПоКоду("21");  
					КонецЕсли;
				КонецЕсли;
				ОбъектыАналитикиНУ = глСчетИАналитикаРасходовНУ(Контекст, СчетЗатрат, Субконто1, Субконто2, Субконто3, ПереченьСтатейЗатрат, СчетКт);
				СчетНУ = ОбъектыАналитикиНУ.Получить("Счет"); 
                
				Если КоличествоОтпущеноН<>0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "НУ";
					Операция.СодержаниеПроводки = "Передан МПЗ";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = ТаблицаОстатков.СчетУчетаНУ;
					Операция.Кредит.Субконто(1, Материал); 
					Если СчетЗатрат.Код = "20" Тогда  // расходы, связанные с услугами ЕНВД не отражаются  в НУ
						Если НЕ(Субконто1.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД) Тогда  // расходы, связанные с услугами ЕНВД не отражаются  в НУ
							Если ПустоеЗначение(Операция.Дебет.Счет) = 1 Тогда
								Если ПустоеЗначение(СчетНУ) = 0 Тогда
									Операция.Дебет.Счет = СчетНУ;
									Для СчетчикЦикла = 1 По СчетНУ.КоличествоСубконто() Цикл
										ИдентификаторСубконто = СчетНУ.ВидСубконто(СчетчикЦикла,,).Идентификатор();
										Операция.Дебет.Субконто(СчетчикЦикла, ОбъектыАналитикиНУ.Получить(ИдентификаторСубконто)); 
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли; 
					Иначе
						Если ПустоеЗначение(СчетНУ) = 0 Тогда
							Операция.Дебет.Счет = СчетНУ;
							Для СчетчикЦикла = 1 По СчетНУ.КоличествоСубконто() Цикл
								ИдентификаторСубконто = СчетНУ.ВидСубконто(СчетчикЦикла,,).Идентификатор();
								Операция.Дебет.Субконто(СчетчикЦикла, ОбъектыАналитикиНУ.Получить(ИдентификаторСубконто)); 
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					
					Операция.Сумма = СуммаОтгрузки;
					Операция.Количество = КоличествоОтпущеноН;
					
				КонецЕсли; 
				
				//_____________________________________________________________________________
				Если КоличествоОтгрузкиИнвентаряНУ>0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "НУ";
					Операция.СодержаниеПроводки = "Передан инвентарь";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчетПоКоду("Н02.МЦ");;
					Операция.Кредит.Субконто(1, Материал);
					Операция.Количество=КоличествоОтгрузкиИнвентаряНУ;
				КонецЕсли;
				//_____________________________________________________________________________   
			КонецЕсли;
	
		Иначе
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Если Материал.Вид() = "Материалы" Тогда
				Операция.СодержаниеПроводки = "Перемещен материал";
				Операция.НомерЖурнала = "МТ";
			
			Иначе
				Операция.СодержаниеПроводки = "Перемещена продукция";
				Операция.НомерЖурнала = "ТВ";
			КонецЕсли;
			Операция.Дебет.Счет = ТаблицаОстатков.СчетУчета;
			Операция.Дебет.Субконто(1,Материал);
			Операция.Дебет.Субконто(2,МестоХраненияПриемник);
			Операция.Кредит.Счет = ТаблицаОстатков.СчетУчета;
			Операция.Кредит.Субконто(1,Материал);
			Операция.Кредит.Субконто(2, МестоХранения);
			Операция.Количество = КоличествоОтпущено;
			
			// В скрытой колонке табличной части очистим cумму.
			//Сумма = Операция.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаУдаленияПроведения()
	
	Если ВыбратьСтроки() = 1 Тогда
		Пока ПолучитьСтроку() = 1 Цикл
			Сумма = 0;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()