////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем КонтекстФормыПодбора;
Перем СписокДействий;
Перем Новый;
//_____________________________________________________________________________
Процедура ПриВыбореМестаХранения()
	Если ТипЗначения(КонтекстФормыПодбора) = 100 Тогда
		КонтекстФормыПодбора.Форма.Обновить();
	КонецЕсли;
КонецПроцедуры //ПриВыбореМестаХранения
//_____________________________________________________________________________
Процедура ПриВыбореСчета()
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто"+А,СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
	
	Если (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		глПроверкаКорректныхПроводок(СчетЗатрат,СчетПоКоду("10"));
	КонецЕсли;
КонецПроцедуры //ПриВыбореСчета

//******************************************************************************
// КодСубсчета()
//
// Возвращаемое значение:
//  Строка - код субсчета, на котором учитываются списываеме МПЗ;
//
Функция КодСубсчета()
	                                         
	Код = "";
	
	Если Материал.Вид() = "Материалы" Тогда
		Код = Материал.СубСчет10;
		
	ИначеЕсли Материал.Вид() = "Номенклатура" Тогда
		Если Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Код = "43";
			
		Иначе // полуфабрикат
			Код = "21";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Код;
	
КонецФункции // КодСубсчета()

//******************************************************************************
// 
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("М-11");
	
	ПодразделениеПолучатель = "";
	Если ВидПеремещения = 0 Тогда
		КорСчет = СчетЗатрат.Код;
		Для СчетчикЦикла = 1 По СчетЗатрат.КоличествоСубконто() Цикл 
			Субконто = ПолучитьАтрибут("Субконто" + СчетчикЦикла);
			Если Субконто.Вид() = "Подразделения" Тогда
				ПодразделениеПолучатель = Субконто;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ПодразделениеПолучатель = МестоХраненияПриемник;
	КонецЕсли;                 
	ПодразделениеОтправитель = МестоХранения;
	

	Если Проведен() = 0 Тогда
		НомерПовторяемойСтроки = 16;
		ТекстПредупреждения = "Для непроведенного документа графы ""Цена"" и ""Сумма"" не заполняются.";
		Таб.ВывестиСекцию("Предупреждение");
		Таб.ВывестиСекцию("Шапка");
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Субсчет = КодСубсчета();
			Если Материал.Выбран() = 1 Тогда
			    МатЦенность = Материал;
				Код = Материал.Код;
				ЕдиницаИзмерения = Материал.ЕдиницаИзмерения;
				ЕдиницаИзмеренияКод = Материал.ЕдиницаИзмерения.Код;
				МатериалСумма = 0;
				МатериалЦенаБезНДС = 0;
			КонецЕсли;
			Таб.ВывестиСекцию("Строка");
			Состояние("Выведено строк: " + НомерСтроки);
		КонецЦикла;
		
	ИначеЕсли Модифицированность() = 1 Тогда
		Предупреждение("Для печати документ необходимо перепровести.");
		Возврат;
		
	Иначе
		НомерПовторяемойСтроки = 15;
		Таб.ВывестиСекцию("Шапка");

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Материал.Выбран() = 1 Тогда
				Субсчет = КодСубсчета();
				МатЦенность = Материал;
				Код = Материал.Код;
				ЕдиницаИзмерения = Материал.ЕдиницаИзмерения;
				ЕдиницаИзмеренияКод = Материал.ЕдиницаИзмерения.Код;
				МатериалСумма = Сумма;
				МатериалЦенаБезНДС = Сумма / КоличествоОтпущено;
			КонецЕсли;
			Таб.ВывестиСекцию("Строка");
			Состояние("Выведено строк: " + НомерСтроки);
		КонецЦикла;
	КонецЕсли;

	Таб.ВывестиСекцию("Подвал");
  	Таб.Опции(0, 0, ?(Проведен() = 0, 1, 0), 0, "ОпцииПечатиМ11", "ОкноМ11");  	
	Таб.ОбластьПечати(?(Проведен() = 0, 2, 1), 2,,);
	Таб.ПовторятьПриПечатиСтроки(НомерПовторяемойСтроки, НомерПовторяемойСтроки);
	Таб.ТолькоПросмотр(1);
   	Таб.Показать("Требование-накладная (форма №М-11)");
КонецПроцедуры // Печать
   
//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура УправлениеДиалогом()
	
	ВидимостьЭлементовДляПередачи = ?(ВидПеремещенияМПЗ.ТекущаяСтрока() = 1, 1, 0);
	Форма.СчетЗатрат.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.Субконто1.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.Субконто2.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.Субконто3.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.ТекстСчета.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.ТекстСубконто1.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.ТекстСубконто2.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.ТекстСубконто3.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.РамкаГруппыСчетСписания.Видимость(ВидимостьЭлементовДляПередачи);
	Форма.МестоХраненияПриемник.Видимость(1 - ВидимостьЭлементовДляПередачи);
	Форма.ТекстМестоХраненияПриемник.Видимость(1 - ВидимостьЭлементовДляПередачи);
	
КонецПроцедуры // УправлениеДиалогом()

//******************************************************************************
// ПредставлениеВидаМПЗ()
//
Функция ПредставлениеВидаМПЗ()
	
	Если Материал.Вид() = "Материалы" Тогда
		Возврат "Материалы";
		
	ИначеЕсли Материал.Вид() = "Номенклатура" Тогда
		Если Материал.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Возврат "Продукция";
			
		Иначе // полуфабрикат
			Возврат "Полуфабрикаты";
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции // ПредставлениеВидаМПЗ()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если (ЭлементДиалога = "СчетЗатрат") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
	    СписокКорректныхПроводок.Установить("Счет", СчетПоКоду("10"));
		глЗначениеОтбора = СписокКорректныхПроводок;
		
	ИначеЕсли (ЭлементДиалога = "Материал") Тогда
		СписокВидовМПЗ = СоздатьОбъект("СписокЗначений");
		СписокВидовМПЗ.ДобавитьЗначение("Материалы", "Материалы");
		СписокВидовМПЗ.ДобавитьЗначение("Номенклатура", "Продукция");
		СписокВидовМПЗ.ДобавитьЗначение("Номенклатура", "Полуфабрикат");
		ВыбранныйВид = "";
		ВыбраннаяПозиция = "";
		Если СписокВидовМПЗ.ВыбратьЗначение(ВыбранныйВид,, ВыбраннаяПозиция,, 2) = 0 Тогда
			УдалитьСтроку();
			Флаг = 0;
			Возврат;
			
		Иначе
			НазначитьВид(Материал, ВыбранныйВид);
		КонецЕсли;
		
		Если Материал.Вид() = "Номенклатура" Тогда
		    Флаг = 0;
			Если ВыбраннаяПозиция = 2 Тогда // продукция
				ОткрытьФорму("Справочник.Номенклатура.ГотоваяПродукция", Перечисление.ТипыНоменклатуры.Продукция);
				
			Иначе // полуфабрикат
				ОткрытьФорму("Справочник.Номенклатура.ГотоваяПродукция", Перечисление.ТипыНоменклатуры.Полуфабрикат);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

	МестоХранения = глЗначениеПоУмолчанию("ОсновнойСклад");
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
   		Если Форма.Параметр.Получить("Печать") = 1 Тогда
   		    Печать();
   		КонецЕсли;
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Форма.Материал.НеИзменятьВид(1);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаПровести.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПодбор.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
	КонецЕсли;
	ВидПеремещенияМПЗ.ДобавитьЗначение("Передача в производство");
	ВидПеремещенияМПЗ.ДобавитьЗначение("Складское перемещение");
	ВидПеремещенияМПЗ.ТекущаяСтрока(ВидПеремещения+1);

	КонтекстФормыПодбора = 0;
	НачальнаяДатаДокумента = ДатаДок;
	УправлениеДиалогом();
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура Подбор()
	СписокВидовМПЗ = СоздатьОбъект("СписокЗначений");
	СписокВидовМПЗ.ДобавитьЗначение("Материалы");
	СписокВидовМПЗ.ДобавитьЗначение("Продукция");
	СписокВидовМПЗ.ДобавитьЗначение("Полуфабрикаты");
	КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
	КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
	КонтекстФормыПодбора.ДобавитьЗначение(МестоХранения, "МестоХранения");
	Вид = "";
	Если СписокВидовМПЗ.ВыбратьЗначение(Вид,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Вид = "Материалы" Тогда
		ОткрытьПодбор("Справочник.Материалы", "ДляПодбора", КонтекстФормыПодбора)
		
	ИначеЕсли Вид = "Продукция" Тогда
	    КонтекстФормыПодбора.ДобавитьЗначение(Перечисление.ТипыНоменклатуры.Продукция, "ОтборПоТипу");
		ОткрытьПодбор("Справочник.Номенклатура", "ДляПодбора", КонтекстФормыПодбора);
		
	ИначеЕсли Вид = "Полуфабрикаты" Тогда
	    КонтекстФормыПодбора.ДобавитьЗначение(Перечисление.ТипыНоменклатуры.Полуфабрикат, "ОтборПоТипу");
		ОткрытьПодбор("Справочник.Номенклатура", "ДляПодбора", КонтекстФормыПодбора);
	КонецЕсли;
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ОбработкаПодбора(ВыбрМПЗ)
	Кол = 1;
	Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
		Возврат;
	ИначеЕсли Кол = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока();
	Материал = ВыбрМПЗ; 
	КоличествоЗатребовано = Кол;
	КоличествоОтпущено = Кол;
	АктивизироватьСтроку();
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	ВидПеремещения = ВидПеремещенияМПЗ.ТекущаяСтрока() - 1;
	Операция.Содержание = "Отпуск материалов";
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
//======================================================================
Процедура ЗаполнитьТЧ()
	
	УдалитьСтроки();
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(ОсновнойПланСчетов());
	Ит.ИспользоватьСубконто(ВидыСубконто.Материалы,, 1);
	Ит.ВыполнитьЗапрос(НачМесяца(ДатаДок), КонМесяца(ДатаДок), "10.1",,, 1,, "СК");
	Ит.ВыбратьСубконто(ВидыСубконто.Материалы);
	Пока Ит.ПолучитьСубконто(ВидыСубконто.Материалы) = 1 Цикл
		НоваяСтрока();
		Материал = Ит.Субконто(ВидыСубконто.Материалы);
		КоличествоЗатребовано = Ит.ДО(3);
		КоличествоОтпущено = Ит.ДО(3);
		Сумма = Ит.ДО(3);
	КонецЦикла;	
	
КонецПроцедуры // ЗаполнитьТЧ()

Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Требование накладная М-11";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
