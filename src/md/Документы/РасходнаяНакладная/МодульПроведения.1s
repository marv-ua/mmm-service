////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем СчетРасчетовСПокупателем;
Перем СчетРасчетовЗаКомиссионныеТовары;
Перем СчетАвансовПолученных;
Перем ОплатаДоговора;
Перем ЦеныВДоговоре;
Перем ВестиУчетРасчетовУЕ;
Перем Валюта;
Перем Кратность;
Перем АвансПоДоговору;
Перем АвансБезДоговора;
Перем АвансПоДоговоруРуб;
Перем АвансБезДоговораРуб;
Перем БезДоговора;
Перем КодВидаОтгрузки;
Перем ЗадолженностьПоРасчетамВУЕРуб, ЗадолженностьПоРасчетамВУЕВал;
Перем НПРКурсоваяРазница;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПолучитьКодВидаОтгрузки();
//                                                    
Функция ПолучитьКодВидаОтгрузки() 
	ПромежуточныйКод = ВидОтгрузки - 10;
	Если (МестоХранения.Выбран() = 0) Тогда
	    Возврат ПромежуточныйКод;
	КонецЕсли;    
	Если (МестоХранения.ТипСклада.Выбран() = 0) Тогда
	    Возврат ПромежуточныйКод;
	КонецЕсли;
	Если (МестоХранения.ТипСклада = Перечисление.ТипыСкладов.Розничный) и (ПромежуточныйКод = 3) Тогда
        ПромежуточныйКод = ПромежуточныйКод + 1;
	КонецЕсли;
	Возврат ПромежуточныйКод;
КонецФункции

//******************************************************************************
// РассчитатьСуммуАванса()
//
// Описание:
//  Выполняет расчет бухгалтерских итогов и определяет текущую сумму аванса.
//
Процедура РассчитатьСуммуАванса()
	
	АвансБезДоговора = 0;
	АвансБезДоговораРуб = 0;
	АвансПоДоговору = 0;
	АвансПоДоговоруРуб = 0;
	
	Если (ЗачитыватьАванс <> 1) и (КодВидаОтгрузки = 1) Тогда //Зачитывать аванс
		СписокДоговоров = СоздатьОбъект("СписокЗначений");
		СписокДоговоров.ДобавитьЗначение(Договор);
		БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Контрагент);
		Если (ЗачитыватьАванс = 0) и (ПустоеЗначение(БезДоговора) = 0) Тогда //Зачитывать аванс без договора
			СписокДоговоров.ДобавитьЗначение(БезДоговора);
		КонецЕсли;                                  
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры, СписокДоговоров, 2);
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда	
				БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.22",,Валюта,,,"СВ");
			Иначе
				БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.22",,Валюта,,,"В");
			КонецЕсли;
			
		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
		    БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.7",,Валюта,,,"СВ");
			
		Иначе
			БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"62.2",,,,,"С");
		КонецЕсли;

		Если БухИт.ПолучитьСубконто(ВидыСубконто.Договоры,, БезДоговора) = 1 Тогда
			Если ОплатаДоговора = 2 Тогда
			    АвансБезДоговора = БухИт.СКК("В");
				Если ДатаДок >= '01.01.2008' Тогда	
					АвансБезДоговораРуб = БухИт.СКК("С");
				КонецЕсли;
				
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				АвансБезДоговора = БухИт.СКК("В");
				АвансБезДоговораРуб = БухИт.СКК("С");
				
			Иначе
				АвансБезДоговора = БухИт.СКК("С");
			КонецЕсли;
		КонецЕсли;
		
		Если БухИт.ПолучитьСубконто(ВидыСубконто.Договоры,, Договор) = 1 Тогда
			Если ОплатаДоговора = 2 Тогда
			    АвансПоДоговору = БухИт.СКК("В");
				Если ДатаДок >= '01.01.2008' Тогда	
					АвансПоДоговоруРуб = БухИт.СКК("С");
				КонецЕсли;
				
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				АвансПоДоговору = БухИт.СКК("В");
				АвансПоДоговоруРуб = БухИт.СКК("С");
				
			Иначе
				АвансПоДоговору = БухИт.СКК("С");
			КонецЕсли;
		КонецЕсли;
		
		АвансБезДоговора = Макс(АвансБезДоговора, 0);
		АвансБезДоговораРуб = Макс(АвансБезДоговораРуб, 0);
		АвансПоДоговору = Макс(АвансПоДоговору, 0);
		АвансПоДоговоруРуб = Макс(АвансПоДоговоруРуб, 0);
	КонецЕсли;
	
КонецПроцедуры // РассчитатьСуммуАванса()

//*****************************************************************************
// ЗачестьАванс(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
//
Процедура ЗачестьАванс(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
	
	Если ЗачетАванса > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ТВ";
		Операция.СодержаниеПроводки = "Зачтена предоплата";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетАвансовПолученных;
		Операция.Дебет.Контрагенты = Контрагент;
		Операция.Дебет.Договоры = ДоговорАванса;
		Операция.Кредит.Счет = СчетРасчетовСПокупателем;
		Операция.Кредит.Контрагенты = Контрагент;
		Операция.Кредит.Договоры = Договор;
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Если (АвансПоДоговору + АвансБезДоговора) = ЗачетАванса Тогда
					ЗачетАвансаРуб = АвансПоДоговоруРуб + АвансБезДоговораРуб;
				Иначе
					КурсЗачетаАванса = Окр((АвансПоДоговоруРуб + АвансБезДоговораРуб)/(АвансПоДоговору + АвансБезДоговора), 4, 1);
					ЗачетАвансаРуб = ЗачетАванса*КурсЗачетаАванса;
				КонецЕсли;
			Иначе
				ЗачетАвансаРуб = ЗачетАванса*Курс/Кратность;
			КонецЕсли;
		    Операция.Сумма = ЗачетАвансаРуб;
		    Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса;
			
		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
			Операция.Сумма = ЗачетАвансаРуб;
			Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса;
			
			ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб - Операция.Сумма;
			ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал - Операция.ВалСумма;
			
		Иначе
			Операция.Сумма = ЗачетАванса;
		КонецЕсли;
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ВЛ";
				Операция.СодержаниеПроводки = "Зачтена предоплата";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ВАЛ.62");
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = ДоговорАванса;
				Операция.Сумма = ЗачетАванса*Курс/Кратность;
				Операция.Валюта = Валюта;
				Операция.ВалСумма = ЗачетАванса;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗачетАванса()

//*****************************************************************************
// ЗачестьАвансЗаКомиссионныйТовар(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
//
Процедура ЗачестьАвансЗаКомиссионныйТовар(ЗачетАванса, ЗачетАвансаРуб, ДоговорАванса)
	
	Если ЗачетАванса > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ТВ";
		Операция.СодержаниеПроводки = "Зачтена предоплата";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетАвансовПолученных;
		Операция.Дебет.Контрагенты = Контрагент;
		Операция.Дебет.Договоры = ДоговорАванса;
		Операция.Кредит.Счет = СчетРасчетовЗаКомиссионныеТовары;
		Операция.Кредит.Контрагенты = Контрагент;
		Операция.Кредит.Договоры = Договор;
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Если (АвансПоДоговору + АвансБезДоговора) = ЗачетАванса Тогда
					ЗачетАвансаРуб = АвансПоДоговоруРуб + АвансБезДоговораРуб;
				Иначе
					КурсЗачетаАванса = Окр((АвансПоДоговоруРуб + АвансБезДоговораРуб)/(АвансПоДоговору + АвансБезДоговора), 4, 1);
					ЗачетАвансаРуб = ЗачетАванса*КурсЗачетаАванса;
				КонецЕсли;
			Иначе
				ЗачетАвансаРуб = ЗачетАванса*Курс/Кратность;
			КонецЕсли;
			Операция.Сумма = ЗачетАвансаРуб;
			Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса;
			
		ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
			Операция.Сумма = ЗачетАвансаРуб;
			Операция.Валюта = Валюта;
			Операция.ВалСумма = ЗачетАванса; 
			
		Иначе
			Операция.Сумма = ЗачетАванса;
		КонецЕсли; 
		
		Если ОплатаДоговора = 2 Тогда
			Если ДатаДок >= '01.01.2008' Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Зачтена предоплата";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ВАЛ.62");
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = ДоговорАванса;
				Операция.Сумма = ЗачетАванса*Курс/Кратность;
				Операция.Валюта = Валюта;
				Операция.ВалСумма = ЗачетАванса;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗачестьАвансЗаКомиссионныйТовар()

//******************************************************************************
// СформироватьПроводкиДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьПроводкиДляЦелейНалоговогоУчета(ТаблицаДокумента, БИ_НУ)
	
	// Если ведется раздельный учет товаров в рознице и в опте,
	// то необходимо учесть, что товары в рознице учитываются
	// на счете Н02.02.2.
	СчН02_02 = СчетПоКоду("Н02.02.1");
	Если КодВидаОтгрузки = 4 Тогда // возврат товаров в розничную торговлю
		Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
			СчН02_02 = СчетПоКоду("Н02.02.2");
		КонецЕсли;
	КонецЕсли;
	
	СчН02_03 = СчетПоКоду("Н02.03");
	СчН02_07 = СчетПоКоду("Н02.07");
	СчН02_04_1 = СчетПоКоду("Н02.04.1");
	СчН02_04_2 = СчетПоКоду("Н02.04.2");
	СчН02_04_3 = СчетПоКоду("Н02.04.3");
	СчН06_01 = СчетПоКоду("Н06.01");
	СчН06_04 = СчетПоКоду("Н06.04");
	СчН07_01 = СчетПоКоду("Н07.01");
	СчН07_05 = СчетПоКоду("Н07.05");
	
	СчетУчетаНУ = "";
	СчетУчетаОтгрузкиНУ = "";
	СчетСписанияНУ = "";
	СчетВыручкиНУ = "";
	Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		СчетУчетаНУ = СчН02_03;
		СчетУчетаОтгрузкиНУ = СчН02_04_2;
		СчетСписанияНУ = СчН07_01;
		СчетВыручкиНУ = СчН06_01;
		
	ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
		СчетУчетаНУ = СчН02_07;
		СчетУчетаОтгрузкиНУ = СчН02_04_3;
		СчетСписанияНУ = СчН07_01;
		СчетВыручкиНУ = СчН06_01;
		
	ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		СчетУчетаНУ = СчН02_02;
		СчетУчетаОтгрузкиНУ = СчН02_04_1;
		СчетСписанияНУ = СчН07_05;
		СчетВыручкиНУ = СчН06_04;
		
	ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		Возврат;
		
	Иначе // услуги
		СчетВыручкиНУ = СчН06_01;
	КонецЕсли;
	    
	Если ЦеныВДоговоре = 2 Тогда
		Выручка = Окр(ТаблицаДокумента.Всего*Курс/Кратность,2,1);
		НДСВРубНал = Окр(ТаблицаДокумента.НДС*Курс/Кратность,2,1);
		НПВРубНал = Окр(ТаблицаДокумента.НП*Курс/Кратность,2,1);
	Иначе
		Выручка = ТаблицаДокумента.Всего;
		НДСВРубНал = ТаблицаДокумента.НДС;                       
		НПВРубНал = ТаблицаДокумента.НП;
	КонецЕсли;
	
	
	Если КодВидаОтгрузки >= 3 Тогда // возврат поставщику
	    ВыручкаБезНалогов = Выручка - ?(НДСвключатьВстоимость = 1, 0, НДСВРубНал);
		
	Иначе
		ВыручкаБезНалогов = Выручка - НДСВРубНал - НПВРубНал;
	КонецЕсли;
	
	Если СчетУчетаНУ <> "" Тогда // если товар или продукция, то необходимо списать стоимость.
	    
		// Проверим хватает ли номенклатуры для целей налогового учета.
		СуммаНаСкладахНУ = 0;
        КоличествоНаСкладахНУ = 0;
		Если ПустоеЗначение(СчетУчетаНУ) = 0 Тогда
			Если БИ_НУ.ПолучитьСчет(,СчетУчетаНУ) = 1 Тогда
				Если БИ_НУ.ПолучитьСубконто(ВидыСубконто.Номенклатура,,ТаблицаДокумента.Товар) = 1 Тогда
					СуммаНаСкладахНУ = Макс(БИ_НУ.СКД("С"), 0);
					КоличествоНаСкладахНУ = БИ_НУ.СКД("К");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	   	Если КоличествоНаСкладахНУ < ТаблицаДокумента.Количество Тогда
	   		ТекстСообщения = "По данным налогового учета на складах "+КоличествоНаСкладахНУ+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+
							  	    " из необходимых "+ТаблицаДокумента.Количество+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" товара "+ТаблицаДокумента.Товар;
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;
		
		Если ТаблицаДокумента.Количество >= КоличествоНаСкладахНУ Тогда
			СуммаОтгрузкиНУ = СуммаНаСкладахНУ;
		Иначе
			СуммаОтгрузкиНУ = ТаблицаДокумента.Количество*(СуммаНаСкладахНУ/КоличествоНаСкладахНУ);
		КонецЕсли;
		
		Если КодВидаОтгрузки = 2 Тогда // если отгрузка без перехода права собственности
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Отгружено со склада";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетУчетаНУ;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ОтгрузкаБезПереходаПраваСобственности;
			Операция.Кредит.Основание = Договор;
			Операция.Дебет.Счет = СчетУчетаОтгрузкиНУ;
			Операция.Дебет.Номенклатура = ТаблицаДокумента.Товар;
            Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ОтгрузкаБезПереходаПраваСобственности;
			Операция.Дебет.Основание = Договор;
			Операция.Сумма = СуммаОтгрузкиНУ;
			Операция.Количество = ТаблицаДокумента.Количество;
			
		ИначеЕсли КодВидаОтгрузки = 1 Тогда // реализация
			
			Если (СуммаОтгрузкиНУ > 0) или (ТаблицаДокумента.Количество <> 0) Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "НУ";
				Операция.СодержаниеПроводки = "Отгружено со склада";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = СчетУчетаНУ;
				Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
				Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
				Операция.Кредит.Основание = Договор;
				Операция.Дебет.Счет = СчетСписанияНУ;
				Операция.Сумма = СуммаОтгрузкиНУ;
				Операция.Количество = ТаблицаДокумента.Количество;
			КонецЕсли;
			
		ИначеЕсли КодВидаОтгрузки >= 3 Тогда // возврат поставщику
				
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Возврат товара (по претензии)";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетУчетаНУ;
			Операция.Дебет.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат;
			Операция.Дебет.Основание = Договор;
			Операция.Сумма = -ВыручкаБезНалогов;
			Операция.Количество = -ТаблицаДокумента.Количество;
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводкиДляЦелейНалоговогоУчета()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Сч19_3   = СчетПоКоду("19.3");
	Сч21     = СчетПоКоду("21");
	Сч43     = СчетПоКоду("43");
	Сч41_1   = СчетПоКоду("41.1");
	Сч41_2   = СчетПоКоду("41.2");
	Сч41_3   = СчетПоКоду("41.3");
	Сч41_4   = СчетПоКоду("41.4");
	Сч45     = СчетПоКоду("45");
	Сч90_1_1 = СчетПоКоду("90.1.1");
	Сч90_1_2 = СчетПоКоду("90.1.2");
	Сч90_2_1 = СчетПоКоду("90.2.1");
	Сч62_1   = СчетПоКоду("62.1");
	Сч62_4   = СчетПоКоду("62.4");
	Сч62_2   = СчетПоКоду("62.2");
	Сч62_6   = СчетПоКоду("62.6");
	Сч62_8   = СчетПоКоду("62.8");
	Сч62_7   = СчетПоКоду("62.7");
	Сч62_11  = СчетПоКоду("62.11");
	Сч62_44  = СчетПоКоду("62.44");
	Сч62_22  = СчетПоКоду("62.22");
	Сч76_2   = СчетПоКоду("76.2");
	Сч76_22  = СчетПоКоду("76.22");
	Сч76_5   = СчетПоКоду("76.5");
	Сч76_6   = СчетПоКоду("76.6");
	Сч76_55  = СчетПоКоду("76.55");
	Сч004    = СчетПоКоду("004");
	СчКМС    = СчетПоКоду("КМС");
	СчКТР    = СчетПоКоду("КТР");
	СчГТД    = СчетПоКоду("ГТД"); 
	
	СчУЕ_62 = СчетПоКоду("УЕ.62");
	СчВАЛ_62 = СчетПоКоду("ВАЛ.62");
	
	Сч68_5   = СчетПоКоду("68.5");
	Сч76_Н_4 = СчетПоКоду("76.Н.4");
	Сч90_6   = СчетПоКоду("90.6"); 
	
	ЗадолженностьПоРасчетамВУЕРуб = 0;
	ЗадолженностьПоРасчетамВУЕВал = 0;
	НПРКурсоваяРазница = 0;
	
	ЦеныВДоговоре = 1; // в рублях
	ВестиУчетРасчетовУЕ = 0;
	
	Если Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
		ОплатаДоговора = Договор.ОплатаДоговора; // 1 - в рублях, 2 - в валюте
		ВестиУчетРасчетовУЕ = Договор.ВестиУчетРасчетовУЕ;
	КонецЕсли;
	
	Если ЦеныВДоговоре = 2 Тогда
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
		
		Если Курс = 0 Тогда
			ТекстСообщения = "Не указан курс валюты";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОтгрузки > 10 Тогда
		Если (МестоХранения.Выбран() = 0) Тогда
			ТекстСообщения = "Не выбран склад";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;    
		Если (МестоХранения.ТипСклада.Выбран() = 0) Тогда
			ТекстСообщения = "Для склада не установлен тип";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		КодВидаОтгрузки = ПолучитьКодВидаОтгрузки();
	
	Иначе
		КодВидаОтгрузки = ВидОтгрузки;
	КонецЕсли;
	
	Если ВестиУчетРасчетовУЕ = 0 Тогда
	    СчетРасчетовСПокупателем = Сч62_1;
		СчетРасчетовЗаКомиссионныеТовары = Сч62_4;
		СчетАвансовПолученных = Сч62_2;
		
	Иначе
		СчетРасчетовСПокупателем = Сч62_6;
		СчетРасчетовЗаКомиссионныеТовары = Сч62_8;
		СчетАвансовПолученных = Сч62_7;
	КонецЕсли;
	
	СчетРасчетовСКомитентом = Сч76_5;
		
	Если ОплатаДоговора = 2 Тогда
		СчетРасчетовСПокупателем = Сч62_11;
		СчетРасчетовЗаКомиссионныеТовары = Сч62_44;
		СчетАвансовПолученных = Сч62_22;
		Если ДатаДок >= '01.01.2008' Тогда
			СчетАвансовПолученныхПереоценка = СчВАЛ_62;
		Иначе
			СчетАвансовПолученныхПереоценка = Сч62_22;
		КонецЕсли;
		СчетРасчетовСКомитентом = Сч76_55;

		// Переоценка счетов
		глТаблицаСчетов.УдалитьСтроки();
		                        
		// Если отгрузка без перехода права собственности,
		// то переоценивать счета не надо.
		Если КодВидаОтгрузки <> 2 Тогда
			Если ЗачитыватьАванс = 1 Тогда
			Иначе
				глТаблицаСчетов.НоваяСтрока();
				глТаблицаСчетов.Счет = СчетАвансовПолученныхПереоценка;
				глТаблицаСчетов.Субконто1 = Контрагент;
				глТаблицаСчетов.Субконто2 = Договор;
				глТаблицаСчетов.Субконто3 = "";
				глТаблицаСчетов.Валюта = Валюта;
				глТаблицаСчетов.Курс = Курс;
				Если ЗачитыватьАванс = 0 Тогда
					БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Контрагент);
					Если ПустоеЗначение(БезДоговора) = 0 Тогда
						глТаблицаСчетов.НоваяСтрока();
						глТаблицаСчетов.Счет = СчетАвансовПолученныхПереоценка;
						глТаблицаСчетов.Субконто1 = Контрагент;
						глТаблицаСчетов.Субконто2 = БезДоговора;
						глТаблицаСчетов.Субконто3 = "";
						глТаблицаСчетов.Валюта = Валюта;
						глТаблицаСчетов.Курс = Курс;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
			    Если Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
			        глТаблицаСчетов.НоваяСтрока();
					глТаблицаСчетов.Счет = Сч62_44;
					глТаблицаСчетов.Субконто1 = Контрагент;
					глТаблицаСчетов.Субконто2 = Договор;
					глТаблицаСчетов.Субконто3 = "";
					глТаблицаСчетов.Валюта = Валюта;
					глТаблицаСчетов.Курс = Курс;
					
				ИначеЕсли ПустоеЗначение(Товар.ТипНоменклатуры) = 0 Тогда
					глТаблицаСчетов.НоваяСтрока();
					глТаблицаСчетов.Счет = Сч62_11;
					глТаблицаСчетов.Субконто1 = Контрагент;
					глТаблицаСчетов.Субконто2 = Договор;
					глТаблицаСчетов.Субконто3 = "";
					глТаблицаСчетов.Валюта = Валюта;
					глТаблицаСчетов.Курс = Курс;
			    КонецЕсли;
			КонецЦикла;
			глПереоценкаСчетов(Контекст, глТаблицаСчетов,, 0);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаОтгрузки = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаОтгрузки.НоваяКолонка("Товар");
	ТаблицаОтгрузки.НоваяКолонка("ВидНоменклатуры");
	ТаблицаОтгрузки.НоваяКолонка("СтавкаНДС");
	ТаблицаОтгрузки.НоваяКолонка("СтавкаНП");
	ТаблицаОтгрузки.НоваяКолонка("Стоимость");
	ТаблицаОтгрузки.НоваяКолонка("Всего", "Число", 15, 2);
	ТаблицаОтгрузки.НоваяКолонка("ВалВсего", "Число", 15, 2);
	ТаблицаОтгрузки.НоваяКолонка("НП", "Число", 15, 2);
	ТаблицаОтгрузки.НоваяКолонка("НДС", "Число", 15, 2);
	ТаблицаОтгрузки.НоваяКолонка("Количество");
	ТаблицаОтгрузки.НоваяКолонка("НПВал", "Число", 15, 2);
	ТаблицаОтгрузки.НоваяКолонка("НДСВал", "Число", 15, 2);

	ТаблицаКомисии = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаКомисии.НоваяКолонка("Комитент");
	ТаблицаКомисии.НоваяКолонка("ДоговорКомиссии");
	ТаблицаКомисии.НоваяКолонка("Всего", "Число", 15, 2);
	ТаблицаКомисии.НоваяКолонка("ВалВсего", "Число", 15, 2);
	ТаблицаКомисии.НоваяКолонка("ВидНоменклатуры");
	ТаблицаКомисии.НоваяКолонка("СтавкаНДС");
	ТаблицаКомисии.НоваяКолонка("СтавкаНП");
	ТаблицаКомисии.НоваяКолонка("НП", "Число", 15, 2);
	ТаблицаКомисии.НоваяКолонка("ВалНП", "Число", 15, 2);
    
	ВыделенныйНДС    = 0;
	ТаблицаДокумента = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблицаДокумента, "Товар,Количество,НДС,НП,Всего");
	ТаблицаДокумента.НоваяКолонка("СтавкаНДС");
	ТаблицаДокумента.НоваяКолонка("СтавкаНП");
	ТаблицаДокумента.НоваяКолонка("Комитент", "Справочник.Контрагенты");
	ТаблицаДокумента.НоваяКолонка("ДоговорКомиссии", "Справочник.Договоры");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Товар.Выбран() = 0 Тогда
			ТекстСообщения = "В строке "+НомерСтроки+" не указан товар.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
			
		ИначеЕсли КодВидаОтгрузки >= 3 Тогда // // возврат поставщику товара
			Если Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда	
				ТекстСообщения = "В строке "+НомерСтроки+" указан не покупной товар.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаДокумента.ПолучитьСтрокуПоНомеру(НомерСтроки);
		ТаблицаДокумента.СтавкаНДС = глСтавкаНалога(Контекст, "НДС");
		ТаблицаДокумента.СтавкаНП = глСтавкаНалога(Контекст, "НП");
		
		// Для расчета аванса необходимо разделить выручку от
		// продукции (работ, услуг) и выручку от покупных товаров.
		Если Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Если Товар.ТипТовара <> Перечисление.ТипыТоваров.НаКомиссии Тогда
				ВыделенныйНДС = ВыделенныйНДС + НДС; // необходимо учесть при возврате товара поставщику
				
			Иначе
				Если КодВидаОтгрузки >= 3 Тогда // возврат поставщику товара, принятого на комиссию
					ТаблицаДокумента.Комитент        = Контрагент;
					ТаблицаДокумента.ДоговорКомиссии = Договор;
					
				Иначе
					ТаблицаДокумента.Комитент        = Комитент;
					ТаблицаДокумента.ДоговорКомиссии = ДоговорКомиссии;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	    
	ЗачетАвансаПоДоговору = 0;
	ЗачетАвансаБезДоговора = 0;
	ЗачетАвансаПоДоговоруРуб = 0;
    ЗачетАвансаБезДоговораРуб = 0;
	
	Если КодВидаОтгрузки = 1 Тогда // реализация
		РассчитатьСуммуАванса(); // расчет итогов по авансам
		
	Иначе
		АвансБезДоговора = 0;
		АвансБезДоговораРуб = 0;
		АвансПоДоговору = 0;
		АвансПоДоговоруРуб = 0;
	КонецЕсли;
	
	СписокТоваров = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокТоваров, "Товар");
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	БухИт.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"21, 43, 41.1, 41.2, 41.3, 41.4",,,,,"СК");
	
	// Если ведется раздельный учет товаров в рознице и в опте,
	// то необходимо учесть, что товары в рознице учитываются
	// на счете Н02.02.2.
	СписокСчетовНУ = "Н02.02.1, Н02.03, Н02.07";
	Если КодВидаОтгрузки = 4 Тогда // возврат товаров в розничную торговлю
		Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
			СписокСчетовНУ = "Н02.02.2, Н02.03, Н02.07";
		КонецЕсли;
	КонецЕсли;
	
	БИ_НУ = СоздатьОбъект("БухгалтерскиеИтоги"); БИ_НУ.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ_НУ.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	БИ_НУ.ВыполнитьЗапрос(,ТекущийДокумент(), СписокСчетовНУ,,,,,"СК");
	
	БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКМС.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтКТР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКТР.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт004 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт004.ИспользоватьРазделительУчета(ЮрЛицо);
	
	ТаблицаДокумента.Свернуть("Товар,Комитент,ДоговорКомиссии,СтавкаНДС,СтавкаНП","Количество,НДС,НП,Всего");
	ТаблицаДокумента.ВыбратьСтроки();
	Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаДокумента.Товар.ТипНоменклатуры.Выбран() = 0 Тогда
			ТекстСообщения = "Не указан тип номенклатуры для товара: "+ТаблицаДокумента.Товар;
			глНеПроводить(Контекст, ТекстСообщения, ТаблицаДокумента.Товар.ТекущийЭлемент());
			Возврат;
			
		ИначеЕсли ТаблицаДокумента.Количество = 0 Тогда
			ТекстСообщения = "Не указано количество товара: "+ТаблицаДокумента.Товар;
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;

		СчетУчета = "";
		Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			СчетУчета   = Сч43;
		ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
			СчетУчета   = Сч21;
		ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Если ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.Тара Тогда
				СчетУчета = Сч41_3;
			ИначеЕсли ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.ПокупныеИзделия Тогда
				СчетУчета = Сч41_4;
			ИначеЕсли ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				Если КодВидаОтгрузки = 4 Тогда // возврат поставщику из розницы
					СчетУчета = СчКТР;
				Иначе
					СчетУчета = Сч004;
				КонецЕсли;
			Иначе //Если Товар.ТипТовара = Перечисление.ТипыТоваров.Собственный Тогда
				Если КодВидаОтгрузки = 4 Тогда // возврат поставщику из розницы
					СчетУчета = Сч41_2;
					
				Иначе
					СчетУчета = Сч41_1;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;

		СуммаНаСкладах = 0;
        КоличествоНаСкладах = 0;
        КоличествоНаСкладе = 0;
		Если СчетУчета = Сч004 Тогда
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаДокумента.Товар, 2);
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Контрагенты, ТаблицаДокумента.Комитент, ?(ТаблицаДокумента.Комитент.Выбран()=1,2,1));
			БухИт004.ИспользоватьСубконто(ВидыСубконто.Договоры, ТаблицаДокумента.ДоговорКомиссии, ?(ТаблицаДокумента.ДоговорКомиссии.Выбран()=1,2,1));
			БухИт004.ВыполнитьЗапрос(,ТекущийДокумент(),"004",,,,,"СК");
			
			БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаДокумента.Товар, 2);
			БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыС_Комитентами, ТаблицаДокумента.ДоговорКомиссии, ?(ТаблицаДокумента.ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКМС.ВыполнитьЗапрос(,ТекущийДокумент(),"КМС",,,,,"К");
			
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаДокумента.Товар, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, ТаблицаДокумента.ДоговорКомиссии, ?(ТаблицаДокумента.ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"К");
			
			КоличествоНаСкладе = БухИт004.СКД("К") - БухИтКТР.СКД("К") - БухИтКМС.СКД("К"); // количество на складе (с учетом передачи на субкомисмию и в розницу)
		
		ИначеЕсли СчетУчета = СчКТР Тогда
						
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаДокумента.Товар, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, Договор, 2);
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
			
			КоличествоНаСкладе = БухИтКТР.СКД("К");
			
		ИначеЕсли ПустоеЗначение(СчетУчета) = 0 Тогда
			Если БухИт.ПолучитьСчет(,СчетУчета) = 1 Тогда
				Если БухИт.ПолучитьСубконто(ВидыСубконто.Номенклатура,,ТаблицаДокумента.Товар) = 1 Тогда
					СуммаНаСкладах = Макс(БухИт.СКД("С"), 0);
					КоличествоНаСкладах = БухИт.СКД("К");
					Если БухИт.ПолучитьСубконто(ВидыСубконто.МестаХранения,,МестоХранения) = 1 Тогда
						КоличествоНаСкладе = БухИт.СКД("К");
						Если СчетУчета = Сч41_2 Тогда
						    СуммаНаСкладах = Макс(БухИт.СКД("С"), 0);
							КоличествоНаСкладах = БухИт.СКД("К");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			КоличествоНаСкладе = ТаблицаДокумента.Количество;
		КонецЕсли;
		
		Если ПустоеЗначение(СчетУчета) = 0 Тогда
			Стр = "" + ТаблицаДокумента.НомерСтроки+". "+ТаблицаДокумента.Товар+" ("+ТаблицаДокумента.Товар.ТипНоменклатуры;
		   	Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		   	    Стр = Стр + ", "+ТаблицаДокумента.Товар.ТипТовара;
		   	КонецЕсли;
		   	Стр = Стр + "): на складе ";
		   	Если СчетУчета = Сч004 Тогда
		   		Стр = Стр+КоличествоНаСкладе+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения;
		   	Иначе
		   		Стр = Стр+МестоХранения+" "+КоличествоНаСкладе+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения;
		   		Стр = Стр+", всего по данным бухгалтерского учета "+КоличествоНаСкладах+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" на сумму "+СуммаНаСкладах;
		   		Если КоличествоНаСкладах > 0 Тогда
			   		Стр = Стр+", средняя стоимость " + Окр(СуммаНаСкладах/КоличествоНаСкладах, 2, 1);
		   		КонецЕсли;
		   	КонецЕсли;
		   	ТекстСообщения = Стр;
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		КонецЕсли;
		
	   	Если КоличествоНаСкладе < ТаблицаДокумента.Количество Тогда
	   		ТекстСообщения = "На складе "+КоличествоНаСкладе+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+
							" из необходимых "+ТаблицаДокумента.Количество+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" товара "+ТаблицаДокумента.Товар;
			Если (Константа.КонтрольОтрицательныхОстатков = Да) или (СчетУчета = Сч004) Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;
		
		ВсегоПоСтроке = ТаблицаДокумента.Всего;
		НПпоСтроке = ТаблицаДокумента.НП;
		Если СчетУчета = Сч004 Тогда
			
			ВсегоКоличество = ТаблицаДокумента.Количество;
			РаспределеноКоличество = 0;
			РаспределеноВсего      = 0;
			РаспределеноНП         = 0;
			
			БухИт004.ВыбратьСубконто(ВидыСубконто.Контрагенты);
			Пока (БухИт004.ПолучитьСубконто(ВидыСубконто.Контрагенты) = 1) и (ВсегоКоличество > РаспределеноКоличество) Цикл
				БухИт004.ВыбратьСубконто(ВидыСубконто.Договоры);
				Пока (БухИт004.ПолучитьСубконто(ВидыСубконто.Договоры) = 1) и (ВсегоКоличество > РаспределеноКоличество) Цикл
					
					СуммаПоДоговору = БухИт004.СКД("С");
					КоличествоПоДоговору = БухИт004.СКД("К");
					КоличествоНаСкладе = КоличествоПоДоговору;
					
					// Необходимо чтобы комиссионный товар не списывался по тем договорам,
					// по которым его нет на складе (товар может быть на субкомиссии или
					// передан в розничную торговлю).
					Если БухИтКМС.ПолучитьСубконто(ВидыСубконто.ДоговорыС_Комитентами,, БухИт004.Субконто(ВидыСубконто.Договоры)) = 1 Тогда
					    КоличествоНаСкладе = КоличествоНаСкладе - БухИтКМС.СКД("К");
					КонецЕсли;
					Если БухИтКТР.ПолучитьСубконто(ВидыСубконто.Договоры,, БухИт004.Субконто(ВидыСубконто.Договоры)) = 1 Тогда
					    КоличествоНаСкладе = КоличествоНаСкладе - БухИтКТР.СКД("К");
					КонецЕсли;
					
					Если КоличествоНаСкладе <= 0 Тогда
						Продолжить;
					КонецЕсли;

					КоличествоОтгрузки = Мин(ВсегоКоличество - РаспределеноКоличество, КоличествоНаСкладе);
					
					Если (КоличествоОтгрузки = КоличествоПоДоговору)
					   и (КоличествоНаСкладе = КоличествоПоДоговору) Тогда
						СуммаОтгрузки = СуммаПоДоговору;
						
					Иначе
						СуммаОтгрузки = КоличествоОтгрузки*(СуммаПоДоговору/КоличествоПоДоговору);
					КонецЕсли;
					
                    РаспределеноКоличество = РаспределеноКоличество + КоличествоОтгрузки;
					
					ВсегоПоКомитенту = Окр(РаспределеноКоличество/ВсегоКоличество*ВсегоПоСтроке - РаспределеноВсего, 2, 1);
					РаспределеноВсего = РаспределеноВсего + ВсегоПоКомитенту;
					
					НПпоКомитенту = Окр(РаспределеноКоличество/ВсегоКоличество*НПпоСтроке - РаспределеноНП,2,1);
					РаспределеноНП = РаспределеноНП + НПпоКомитенту;
					
					Если КодВидаОтгрузки = 1 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.СодержаниеПроводки = "Отгружено со склада";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Кредит.Счет = СчетУчета;
						Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
						Операция.Кредит.Контрагенты = БухИт004.Субконто(ВидыСубконто.Контрагенты);
						Операция.Кредит.Договоры = БухИт004.Субконто(ВидыСубконто.Договоры);
						Операция.Количество = КоличествоОтгрузки;
						Операция.Сумма = СуммаОтгрузки; // в рублях

						ТаблицаКомисии.НоваяСтрока();
						ТаблицаКомисии.Комитент = БухИт004.Субконто(ВидыСубконто.Контрагенты);
						ТаблицаКомисии.ДоговорКомиссии = БухИт004.Субконто(ВидыСубконто.Договоры);
						Если (ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 0) Тогда
						    ТаблицаКомисии.Всего = ВсегоПоКомитенту*Курс/Кратность;
							ТаблицаКомисии.НП = НПпоКомитенту*Курс/Кратность;
							Если ОплатаДоговора =2 Тогда
							    ТаблицаКомисии.ВалВсего = ВсегоПоКомитенту;
								ТаблицаКомисии.ВалНП = НПпоКомитенту;
							КонецЕсли;
						Иначе
							ТаблицаКомисии.Всего = ВсегоПоКомитенту;
							ТаблицаКомисии.НП = НПпоКомитенту;
						КонецЕсли;
						ТаблицаКомисии.ВидНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
						ТаблицаКомисии.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
						ТаблицаКомисии.СтавкаНП = ТаблицаДокумента.СтавкаНП;

					ИначеЕсли КодВидаОтгрузки = 2 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.СодержаниеПроводки = "Передано на комиссию";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчКМС;
						Операция.Дебет.Номенклатура = ТаблицаДокумента.Товар;
						Операция.Дебет.ДоговорыС_Комитентами = БухИт004.Субконто(ВидыСубконто.Договоры);
						Операция.Дебет.ДоговорыС_Комиссионерами = Договор;
						Операция.Количество = КоличествоОтгрузки;
						Если ЦеныВДоговоре = 2 Тогда
						    Операция.Сумма = ВсегоПоКомитенту*Курс/Кратность;
						Иначе
							Операция.Сумма = ВсегоПоКомитенту;
						КонецЕсли;
						
					Иначе // возврат поставщику
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.СодержаниеПроводки = "Возврат поставщику (по претензии)";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Кредит.Счет = СчетУчета;
						Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
						Операция.Кредит.Контрагенты = БухИт004.Субконто(ВидыСубконто.Контрагенты);
						Операция.Кредит.Договоры = БухИт004.Субконто(ВидыСубконто.Договоры);
						Операция.Количество = КоличествоОтгрузки;
						Операция.Сумма = СуммаОтгрузки; // в рублях
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
        
		ИначеЕсли СчетУчета = СчКТР Тогда
			
			ВсегоКоличество = ТаблицаДокумента.Количество;
			
			КоличествоПоДоговору = БухИтКТР.СКД("К");
			СуммаПоДоговору = БухИтКТР.СКД("С");
			
			Если ВсегоКоличество = КоличествоПоДоговору Тогда
				СуммаОтгрузки = СуммаПоДоговору;
			Иначе
				СуммаОтгрузки = ВсегоКоличество*(СуммаПоДоговору/КоличествоПоДоговору);
			КонецЕсли;
			
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Возврат поставщику (по претензии)";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = Сч004;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.Контрагенты = БухИтКТР.Субконто(ВидыСубконто.Договоры).Владелец;
			Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
			Операция.Количество = ВсегоКоличество;
			Операция.Сумма = СуммаОтгрузки; // в рублях
			
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Возврат поставщику (по претензии)";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетУчета;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.МестаХранения = МестоХранения;
			Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
			Операция.Количество = ВсегоКоличество;
			Операция.Сумма = СуммаОтгрузки; // в рублях
	
		ИначеЕсли ПустоеЗначение(СчетУчета) = 0 Тогда
			Если ТаблицаДокумента.Количество >= КоличествоНаСкладах Тогда
				СуммаОтгрузки = СуммаНаСкладах;
			Иначе
				СуммаОтгрузки = ТаблицаДокумента.Количество*(СуммаНаСкладах/КоличествоНаСкладах);
			КонецЕсли;

			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Отгружено со склада";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетУчета;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.МестаХранения = МестоХранения;
			Операция.Количество = ТаблицаДокумента.Количество;
			Если КодВидаОтгрузки = 2 Тогда // отгрузка без перехода права собственности
				Операция.Дебет.Счет = Сч45;
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
				Операция.Дебет.Номенклатура = ТаблицаДокумента.Товар;
				Операция.Сумма = СуммаОтгрузки;

			ИначеЕсли КодВидаОтгрузки = 1 Тогда // реализация
				Операция.Дебет.Счет = Сч90_2_1;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
				Операция.Сумма = СуммаОтгрузки;
				
				ТаблицаОтгрузки.НоваяСтрока();
				ТаблицаОтгрузки.Товар = ТаблицаДокумента.Товар;
				ТаблицаОтгрузки.ВидНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
				ТаблицаОтгрузки.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
				ТаблицаОтгрузки.СтавкаНП = ТаблицаДокумента.СтавкаНП;
				ТаблицаОтгрузки.Количество = ТаблицаДокумента.Количество;
				
				Если (ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 0) Тогда
					ТаблицаОтгрузки.Всего = ВсегоПоСтроке*Курс/Кратность;
					ТаблицаОтгрузки.НП = НПпоСтроке*Курс/Кратность;
					ТаблицаОтгрузки.НДС = ТаблицаДокумента.НДС*Курс/Кратность;
					ТаблицаОтгрузки.НПВал = НПпоСтроке;
					ТаблицаОтгрузки.НДСВал = ТаблицаДокумента.НДС;
					Если ОплатаДоговора =2 Тогда
					    ТаблицаОтгрузки.ВалВсего = ВсегоПоСтроке;
					КонецЕсли;
					
				Иначе
					ТаблицаОтгрузки.Всего = ВсегоПоСтроке;
					ТаблицаОтгрузки.НП = НПпоСтроке;
					ТаблицаОтгрузки.НДС = ТаблицаДокумента.НДС;
				КонецЕсли;

				//Для товаров запомним покупную стоимость
				Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
					ТаблицаОтгрузки.Стоимость = СуммаОтгрузки;
				Иначе
					ТаблицаОтгрузки.Стоимость = 0;
				КонецЕсли;
				
			Иначе // возврат поставщику
				Операция.Дебет.Счет = Сч76_2;
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
				
				Если ЦеныВДоговоре = 2 Тогда
					ВсегоВРублях	= Окр(ТаблицаДокумента.Всего*Курс/Кратность,2,1);
					ВсегоНДС		= Окр(ТаблицаДокумента.НДС*Курс/Кратность,2,1);					
				Иначе
					ВсегоВРублях	= ТаблицаДокумента.Всего;
					ВсегоНДС		= ТаблицаДокумента.НДС;
				КонецЕсли;
				
				
				Если НДСвключатьВСтоимость = 1 Тогда
					Стоимость = ВсегоВРублях;
					СтоимостьВал = ТаблицаДокумента.Всего;
				Иначе
					Стоимость = ВсегоВРублях - ВсегоНДС;
					СтоимостьВал = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС;
				КонецЕсли;
				
				
				Если ОплатаДоговора = 2 Тогда
					Операция.Дебет.Счет = Сч76_22;
					Операция.Валюта = Валюта;
					Операция.ВалСумма = СтоимостьВал;
				КонецЕсли;  
				
				Операция.Сумма = Стоимость;
				
			КонецЕсли;
			
		
		Иначе
			//Остались услуги
			ТаблицаОтгрузки.НоваяСтрока();
			ТаблицаОтгрузки.Товар = ТаблицаДокумента.Товар;
			ТаблицаОтгрузки.ВидНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
			ТаблицаОтгрузки.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
			ТаблицаОтгрузки.СтавкаНП = ТаблицаДокумента.СтавкаНП;
			ТаблицаОтгрузки.Количество = ТаблицаДокумента.Количество;
			
			Если (ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 0) Тогда
			    ТаблицаОтгрузки.Всего = ВсегоПоСтроке*Курс/Кратность;
				ТаблицаОтгрузки.НП = НПпоСтроке*Курс/Кратность;
				ТаблицаОтгрузки.НДС = ТаблицаДокумента.НДС*Курс/Кратность;
				Если ОплатаДоговора =2 Тогда
				    ТаблицаОтгрузки.ВалВсего = ВсегоПоСтроке;
				КонецЕсли;
			Иначе
				ТаблицаОтгрузки.Всего = ВсегоПоСтроке;
				ТаблицаОтгрузки.НП = НПпоСтроке;
				ТаблицаОтгрузки.НДС = ТаблицаДокумента.НДС;
			КонецЕсли;
			
			ТаблицаОтгрузки.Стоимость = 0;
		КонецЕсли;
		
		// Отражение реализации для целей налогового учета.
		Если (глНовыеПравилаВеденияНУ(ДатаДок) = 1) и (СчетУчета <> Сч004) и (СчетУчета <> СчКТР) Тогда
		    СформироватьПроводкиДляЦелейНалоговогоУчета(ТаблицаДокумента, БИ_НУ);
			Если СтатусВозврата() = 0 Тогда // произошла ошибка при формировании проводок для целей налогового учета.
			    Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
    
	ТаблицаАванса = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаАванса.НоваяКолонка("ПечЗачетАванса");
	ТаблицаАванса.НоваяКолонка("ПечЗачетАвансаПоДоговору");
	ТаблицаАванса.НоваяКолонка("ПечЗачетАвансаБезДоговора");
	ТаблицаАванса.НоваяКолонка("ПечАвансПоДоговору");
	ТаблицаАванса.НоваяКолонка("ПечАвансБезДоговора");
	ТаблицаАванса.НоваяКолонка("ВсегоОтгружено");
	
	// Зачет аванса за собственные товары, продукцию, работы и услуги.
	ТаблицаОтгрузки.Свернуть("Товар,ВидНоменклатуры,СтавкаНДС,СтавкаНП","Стоимость,Всего,ВалВсего,НП,НДС,Количество,НПВал,НДСВал");
	
	СуммаЗачтенногоАванса = 0;
	СуммаЗачтенногоАвансаРуб = 0;
	КурсАванса = 0;
	ЗачетАванса = 0;
	
	Если (ЗачитыватьАванс <> 1) и (ТаблицаОтгрузки.Итог("Всего") <> 0) Тогда //Зачитывать аванс
		
		Если ОплатаДоговора = 2 Тогда
		    ВсегоОтгружено = ТаблицаОтгрузки.Итог("ВалВсего");
			
		Иначе
			ВсегоОтгружено = ТаблицаОтгрузки.Итог("Всего");
		КонецЕсли;
		
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, ВсегоОтгружено);
			ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, ВсегоОтгружено - ЗачетАвансаПоДоговору);
			
			Аванс = АвансПоДоговору + АвансБезДоговора;
			ЗачетАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
			
			Если ЗачетАванса = Аванс Тогда
			    ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
				ЗачетАвансаБезДоговораРуб = АвансБезДоговораРуб;
				
			ИначеЕсли ЗачетАванса > АвансПоДоговору Тогда
				ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
				ЗачетАвансаБезДоговораРуб = Окр(ЗачетАвансаБезДоговора * Окр(АвансБезДоговораРуб / ?(АвансБезДоговора = 0, 1, АвансБезДоговора), 4, 1), 2, 1);
				
			Иначе
				ЗачетАвансаПоДоговоруРуб = Окр(ЗачетАвансаПоДоговору * Окр(АвансПоДоговоруРуб / ?(АвансПоДоговору = 0, 1, АвансПоДоговору), 4, 1), 2, 1);
				ЗачетАвансаБезДоговораРуб = 0;
			КонецЕсли;
		
		Иначе
			ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, ВсегоОтгружено);
			ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, ВсегоОтгружено - ЗачетАвансаПоДоговору);
		КонецЕсли;
	    
		ЗачестьАванс(ЗачетАвансаПоДоговору, ЗачетАвансаПоДоговоруРуб, Договор);
		ЗачестьАванс(ЗачетАвансаБезДоговора, ЗачетАвансаБезДоговораРуб, БезДоговора);
		
		СуммаЗачтенногоАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
		
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			СуммаЗачтенногоАвансаРуб = ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб;
			
			ТаблицаАванса.НоваяСтрока();
			ТаблицаАванса.ПечЗачетАванса = Окр(ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаПоДоговору = Окр(ЗачетАвансаПоДоговоруРуб, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаБезДоговора = Окр(ЗачетАвансаБезДоговораРуб, 2, 1);
			ТаблицаАванса.ПечАвансПоДоговору = Окр(АвансПоДоговоруРуб, 2, 1);
			ТаблицаАванса.ПечАвансБезДоговора = Окр(АвансБезДоговораРуб, 2, 1);
				
		Иначе
			Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
				СуммаЗачтенногоАвансаРуб = ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб;				
			КонецЕсли;
			
			ТаблицаАванса.НоваяСтрока();
			ТаблицаАванса.ПечЗачетАванса = Окр(ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаПоДоговору = Окр(ЗачетАвансаПоДоговору, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаБезДоговора = Окр(ЗачетАвансаБезДоговора, 2, 1);
			ТаблицаАванса.ПечАвансПоДоговору = Окр(АвансПоДоговору, 2, 1);
			ТаблицаАванса.ПечАвансБезДоговора = Окр(АвансБезДоговора, 2, 1);
		КонецЕсли;
			
		АвансПоДоговору = АвансПоДоговору - ЗачетАвансаПоДоговору;
		АвансБезДоговора = АвансБезДоговора - ЗачетАвансаБезДоговора;
		АвансПоДоговоруРуб = АвансПоДоговоруРуб - ЗачетАвансаПоДоговоруРуб;
		АвансБезДоговораРуб = АвансБезДоговораРуб - ЗачетАвансаБезДоговораРуб;
	КонецЕсли;
	
	// Начисление дебиторской задолженности.
	
	Если ОплатаДоговора = 2 Тогда
	    ИтогВсего = ТаблицаОтгрузки.Итог("ВалВсего");
	
	Иначе
		ИтогВсего = ТаблицаОтгрузки.Итог("Всего");
	КонецЕсли;
	
	ТаблицаОтгрузки.НоваяКолонка("ВыручкаРуб", "Число", 15, 2);
	ТаблицаОтгрузки.НоваяКолонка("СуммоваяРазница", "Число", 15, 2);
	
	Если (ИтогВсего <> 0) и (КодВидаОтгрузки < 3) Тогда
		// Начисление дебиторской задолженности в налоговом учете
		СчН06_01 = СчетПоКоду("Н06.01");
		СчН06_04 = СчетПоКоду("Н06.04");
		
		РаспределеноАванса = 0;
		РаспределеноАвансаРуб = 0;
		КолСтрокТабОтгрузки = ТаблицаОтгрузки.КоличествоСтрок();
		КурсАванса = ?(СуммаЗачтенногоАванса = 0, 0, Окр(СуммаЗачтенногоАвансаРуб / СуммаЗачтенногоАванса, 4, 1));
		К = ?(ИтогВсего = 0, 0, СуммаЗачтенногоАванса / ИтогВсего);
		
		ТаблицаОтгрузки.ВыбратьСтроки();
		Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
			СчетВыручкиНУ = "";
			Если ТаблицаОтгрузки.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
				СчетВыручкиНУ = СчН06_01;
				
			ИначеЕсли ТаблицаОтгрузки.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
				СчетВыручкиНУ = СчН06_01;
				
			ИначеЕсли ТаблицаОтгрузки.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
				СчетВыручкиНУ = СчН06_04;
				
			Иначе // услуги
				СчетВыручкиНУ = СчН06_01;
			КонецЕсли;
			    
			Если ((ЦеныВДоговоре = 2) и (ВестиУчетРасчетовУЕ = 1))
			или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')) Тогда
				Если ПустоеЗначение(ИтогВсего) = 0  Тогда 
					Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
						ТаблицаВсего = ТаблицаОтгрузки.ВалВсего;
					Иначе
						ТаблицаВсего = ТаблицаОтгрузки.Всего;
					КонецЕсли;
					
					ЧастьСуммыЗачтенногоАванса = Окр(СуммаЗачтенногоАванса * ТаблицаВсего / ИтогВсего, 2, 1);
					ЧастьСуммыЗачтенногоАвансаРуб = Окр(СуммаЗачтенногоАвансаРуб * ТаблицаВсего / ИтогВсего, 2, 1);
					
				Иначе
					ЧастьСуммыЗачтенногоАванса = 0;
					ЧастьСуммыЗачтенногоАвансаРуб = 0;
				КонецЕсли;
				
				РаспределеноАванса = РаспределеноАванса + ЧастьСуммыЗачтенногоАванса;
				РаспределеноАвансаРуб = РаспределеноАвансаРуб + ЧастьСуммыЗачтенногоАвансаРуб;
				
				Если КолСтрокТабОтгрузки = ТаблицаОтгрузки.НомерСтроки Тогда
					Если РаспределеноАванса <> СуммаЗачтенногоАванса Тогда
						ЧастьСуммыЗачтенногоАванса = ЧастьСуммыЗачтенногоАванса + СуммаЗачтенногоАванса - РаспределеноАванса;
					КонецЕсли;
					
					Если РаспределеноАвансаРуб <> СуммаЗачтенногоАвансаРуб Тогда
						ЧастьСуммыЗачтенногоАвансаРуб = ЧастьСуммыЗачтенногоАвансаРуб + СуммаЗачтенногоАвансаРуб - РаспределеноАвансаРуб;
					КонецЕсли;
				КонецЕсли; 
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					ВсегоРубПоКурсуОтгрузки = Окр(ТаблицаОтгрузки.ВалВсего * Курс / Кратность, 2, 1);
					НДСРубПоКурсуОтгрузки = Окр(ТаблицаОтгрузки.НДС, 2, 1);                 
					НПРубПоКурсуОтгрузки = Окр(ТаблицаОтгрузки.НП, 2, 1);
					НДСвЧастиЗачтенногоАвансаРуб = Окр(К * ТаблицаОтгрузки.НДСВал * Курс / Кратность, 2, 1);
					НПвЧастиЗачтенногоАвансаРуб = Окр(К * ТаблицаОтгрузки.НПВал * Курс / Кратность, 2, 1);
				Иначе
					ВсегоРубПоКурсуОтгрузки = Окр(ТаблицаОтгрузки.Всего * Курс / Кратность, 2, 1);    
					НДСРубПоКурсуОтгрузки = Окр(ТаблицаОтгрузки.НДС * Курс / Кратность, 2, 1);
					НПРубПоКурсуОтгрузки = Окр(ТаблицаОтгрузки.НП * Курс / Кратность, 2, 1);
					НДСвЧастиЗачтенногоАвансаРуб = Окр(К * ТаблицаОтгрузки.НДС * КурсАванса, 2, 1);
					НПвЧастиЗачтенногоАвансаРуб = Окр(К * ТаблицаОтгрузки.НП * КурсАванса, 2, 1);
				КонецЕсли;
			
				ОплаченоПоКурсуОтгрузки = Окр(К * ВсегоРубПоКурсуОтгрузки, 2, 1);
			    ТаблицаОтгрузки.ВыручкаРуб = ВсегоРубПоКурсуОтгрузки + ЧастьСуммыЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
				
				
				ОплаченоНДСПоКурсуОтгрузки = Окр(К * НДСРубПоКурсуОтгрузки, 2, 1);
				СуммаНДС = НДСРубПоКурсуОтгрузки + НДСвЧастиЗачтенногоАвансаРуб - ОплаченоНДСПоКурсуОтгрузки;
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					НПРКурсоваяРазница = Окр(НПРКурсоваяРазница, 2) - Окр(СуммаНДС, 2);
				КонецЕсли;
				
				ОплаченоНППоКурсуОтгрузки = Окр(К * НПРубПоКурсуОтгрузки, 2, 1);				
				СуммаНП = НПРубПоКурсуОтгрузки + НПвЧастиЗачтенногоАвансаРуб - ОплаченоНППоКурсуОтгрузки;	
				
				ВыручкаБезНалогов = ТаблицаОтгрузки.ВыручкаРуб - СуммаНДС - СуммаНП;
				
				Если (Договор.ОтражатьСуммовуюРазницуПриЗачетеАванса = 1) и (ВестиУчетРасчетовУЕ = 1) Тогда
					ТаблицаОтгрузки.СуммоваяРазница = ЧастьСуммыЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
				КонецЕсли;
				
			Иначе
				ВыручкаБезНалогов = ТаблицаОтгрузки.Всего - ТаблицаОтгрузки.НДС - ТаблицаОтгрузки.НП;
			КонецЕсли;
			
			// Отразим в налоговом учете выручку (минус налоги), при этом учитывается аванс.
			// Если отгрузка без перехода права собственности,то не отражается выручка по товарам и продукции
			Если (ТаблицаОтгрузки.Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.УслугаЕНВД) и (глНовыеПравилаВеденияНУ(ДатаДок) = 1) Тогда
				Если (КодВидаОтгрузки = 1) или ((КодВидаОтгрузки = 2) 
				    и (ТаблицаОтгрузки.Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Продукция)
				    и (ТаблицаОтгрузки.Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Полуфабрикат)
				    и (ТаблицаОтгрузки.Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар)) Тогда
					
					Если (Договор.ОтражатьСуммовуюРазницуПриЗачетеАванса = 1) и (ВестиУчетРасчетовУЕ = 1) Тогда
						ПоКурсуОтгрузки = ОплаченоПоКурсуОтгрузки - ОплаченоНДСПоКурсуОтгрузки - ОплаченоНППоКурсуОтгрузки;
						ПоКурсуОплаты = ЧастьСуммыЗачтенногоАвансаРуб - НДСвЧастиЗачтенногоАвансаРуб - НПвЧастиЗачтенногоАвансаРуб;
						СуммоваяРазница = ПоКурсуОплаты - ПоКурсуОтгрузки;
						
					Иначе
						СуммоваяРазница = 0; 
					КонецЕсли;
						
					Если ВыручкаБезНалогов > 0 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					    Операция.НомерЖурнала = "НУ";
						Операция.СодержаниеПроводки = "Выручка от реализации";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Кредит.Счет = СчетВыручкиНУ;
						Операция.Кредит.Номенклатура = ТаблицаОтгрузки.Товар;
						Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
						Операция.Кредит.Основание = Договор;
						Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
							Операция.Сумма = (ТаблицаОтгрузки.Всего - ТаблицаОтгрузки.НДС - ТаблицаОтгрузки.НП) - СуммоваяРазница;
							НПРКурсоваяРазница = Окр(НПРКурсоваяРазница, 2) - Окр(Операция.Сумма, 2);
						Иначе
							Операция.Сумма = ВыручкаБезНалогов - СуммоваяРазница;
						КонецЕсли;
						Операция.Количество = ТаблицаОтгрузки.Количество;
						
						глОтражениеСуммовыхРазницВНаловомУчете(Контекст, СуммоваяРазница, 0);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	
		// Начисление дебиторской задолженности в бухгалтерском учете
		ТаблицаОтгрузки.Свернуть("ВидНоменклатуры,СтавкаНДС,СтавкаНП","Стоимость,Всего,ВалВсего,НП,ВыручкаРуб,СуммоваяРазница");
		
		Если ТаблицаАванса.КоличествоСтрок()>0 Тогда
			ТаблицаАванса.ПолучитьСтрокуПоНомеру(1);
			Если ТаблицаОтгрузки.Итог("ВалВсего") > 0 Тогда
				ТаблицаАванса.ВсегоОтгружено = ТаблицаОтгрузки.Итог("ВыручкаРуб");
			Иначе
				ТаблицаАванса.ВсегоОтгружено = ТаблицаОтгрузки.Итог("Всего");
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаОтгрузки.ВыбратьСтроки();
		Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаОтгрузки.Всего <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Выручка";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетРасчетовСПокупателем;
				Операция.Дебет.Контрагенты = Контрагент;
				Операция.Дебет.Договоры = Договор;
				
				Если ТаблицаОтгрузки.ВидНоменклатуры.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
					Операция.Кредит.Счет = Сч90_1_2;
					Операция.Кредит.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
					
				Иначе
					Операция.Кредит.Счет = Сч90_1_1;
					Операция.Кредит.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
					
					Если ВерсияОбъекта >= "7.70.421" Тогда
						Операция.Кредит.СтавкиНДС = ТаблицаОтгрузки.СтавкаНДС;
						Операция.Кредит.СтавкиНП= ТаблицаОтгрузки.СтавкаНП;
					КонецЕсли;	
				КонецЕсли;
				
				Если ОплатаДоговора = 2 Тогда
					Операция.ВалСумма = ТаблицаОтгрузки.ВалВсего;
					Операция.Валюта = Валюта; 
					Если ДатаДок >= '01.01.2008' Тогда	
						Операция.Сумма = ТаблицаОтгрузки.ВыручкаРуб;
						НПРКурсоваяРазница = Окр(НПРКурсоваяРазница, 2) + Окр(Операция.Сумма, 2);
					Иначе
						Операция.Сумма = ТаблицаОтгрузки.Всего;
					КонецЕсли;					
				КонецЕсли;
				
				Если ВестиУчетРасчетовУЕ = 1 Тогда
					Операция.ВалСумма = ТаблицаОтгрузки.Всего;
					Операция.Валюта = Валюта;
					Операция.Сумма = ТаблицаОтгрузки.ВыручкаРуб - ТаблицаОтгрузки.СуммоваяРазница;
					
					ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
					ЗадолженностьПоРасчетамВУЕВал = ЗадолженностьПоРасчетамВУЕВал + Операция.ВалСумма;
					
				ИначеЕсли ОплатаДоговора <> 2 Тогда
					Операция.Сумма = ТаблицаОтгрузки.Всего;
				КонецЕсли; 
				
				Если ТаблицаОтгрузки.СуммоваяРазница <> 0 Тогда
				    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Суммовая разница";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = СчетРасчетовСПокупателем;
					Операция.Дебет.Контрагенты = Контрагент;
					Операция.Дебет.Договоры = Договор;
					
					Если ТаблицаОтгрузки.ВидНоменклатуры.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
						Операция.Кредит.Счет = Сч90_1_2;
						Операция.Кредит.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
						
					Иначе
						Операция.Кредит.Счет = Сч90_1_1;
						Операция.Кредит.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
						
						Если ВерсияОбъекта >= "7.70.421" Тогда
							Операция.Кредит.СтавкиНДС = ТаблицаОтгрузки.СтавкаНДС;
							Операция.Кредит.СтавкиНП= ТаблицаОтгрузки.СтавкаНП;
						КонецЕсли;	
					КонецЕсли;
					
					Операция.ВалСумма = 0;
					Операция.Валюта = Валюта;
					Операция.Сумма = ТаблицаОтгрузки.СуммоваяРазница;  
					
					ЗадолженностьПоРасчетамВУЕРуб = ЗадолженностьПоРасчетамВУЕРуб + Операция.Сумма;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Начисление НП по собственным товарам и услугам.
	КурсАванса = ?(СуммаЗачтенногоАванса = 0, 0, Окр(СуммаЗачтенногоАвансаРуб / СуммаЗачтенногоАванса, 4, 1));
	ТаблицаОтгрузки.Свернуть("ВидНоменклатуры,СтавкаНП","НП");
	Если (ИтогВсего > 0) и (ВерсияОбъекта >= "7.70.421") Тогда
		К = СуммаЗачтенногоАванса / ИтогВсего;
		ТаблицаОтгрузки.ВыбратьСтроки();
		Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаОтгрузки.НП = 0 Тогда
			    Продолжить;
			КонецЕсли;
		    
			Если ВестиУчетРасчетовУЕ = 1 Тогда
				НПкУплате = К * ТаблицаОтгрузки.НП;
				ОтложеноНП = ТаблицаОтгрузки.НП - НПкУплате;
				СуммаНПРуб = НПкУплате * КурсАванса + ОтложеноНП * Курс / Кратность;
				
				НПкУплате = К * СуммаНПРуб;
				ОтложеноНП = СуммаНПРуб - НПкУплате;
				
			Иначе
				НПкУплате = К * ТаблицаОтгрузки.НП;
				ОтложеноНП = ТаблицаОтгрузки.НП - НПкУплате;
			КонецЕсли;
			
			Если НПкУплате > 0 Тогда // был зачет аванса
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч90_6;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
				Операция.Дебет.СтавкиНП = ТаблицаОтгрузки.СтавкаНП;
				Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = НПкУплате;
			КонецЕсли;
			
			Если ОтложеноНП > 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч90_6;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
				Операция.Дебет.СтавкиНП = ТаблицаОтгрузки.СтавкаНП;
				Операция.Кредит.Счет = Сч76_Н_4;
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;
				Операция.Сумма = ОтложеноНП;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	глТаблицаСчетов.УдалитьСтроки();
	
	ТаблицаРасчетовСКомитентом = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаКомисии.Свернуть("Комитент,ДоговорКомиссии,ВидНоменклатуры,СтавкаНДС,СтавкаНП", "Всего,ВалВсего,НП,ВалНП");
	ТаблицаКомисии.Выгрузить(ТаблицаРасчетовСКомитентом);
	ТаблицаРасчетовСКомитентом.Свернуть("Комитент, ДоговорКомиссии","Всего,ВалВсего");
	ТаблицаРасчетовСКомитентом.НоваяКолонка("ВсегоРуб", "Число");

	Если ОплатаДоговора = 2 Тогда
		ТаблицаРасчетовСКомитентом.ВыбратьСтроки();
		Пока ТаблицаРасчетовСКомитентом.ПолучитьСтроку() = 1 Цикл
			глТаблицаСчетов.НоваяСтрока();
			глТаблицаСчетов.Счет = Сч76_55;
			глТаблицаСчетов.Субконто1 = ТаблицаРасчетовСКомитентом.Комитент;
			глТаблицаСчетов.Субконто2 = ТаблицаРасчетовСКомитентом.ДоговорКомиссии;
			глТаблицаСчетов.Субконто3 = "";
			глТаблицаСчетов.Валюта = Валюта;
			глТаблицаСчетов.Курс = Курс;
		КонецЦикла;
		глПереоценкаСчетов(Контекст, глТаблицаСчетов,, 0);
	КонецЕсли;
	
	// Зачет авансов за комиссионные товары.
	СуммаЗачтенногоАванса = 0;
	СуммаЗачтенногоАвансаРуб = 0;
	ЗачетАванса = 0;
	
	Если (ЗачитыватьАванс <> 1) и (ТаблицаРасчетовСКомитентом.Итог("Всего") <> 0) Тогда //Зачитывать аванс

		Если ОплатаДоговора = 2 Тогда
		    ВсегоОтгружено = ТаблицаРасчетовСКомитентом.Итог("ВалВсего");
			
		Иначе
			ВсегоОтгружено = ТаблицаРасчетовСКомитентом.Итог("Всего");
		КонецЕсли;
		
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, ВсегоОтгружено);
			ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, ВсегоОтгружено - ЗачетАвансаПоДоговору);
			
			Аванс = АвансПоДоговору + АвансБезДоговора;
			ЗачетАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
			
			Если ЗачетАванса = Аванс Тогда
			    ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
				ЗачетАвансаБезДоговораРуб = АвансБезДоговораРуб;
				
			ИначеЕсли ЗачетАванса > АвансПоДоговору Тогда
				ЗачетАвансаПоДоговоруРуб = АвансПоДоговоруРуб;
				ЗачетАвансаБезДоговораРуб = Окр(ЗачетАвансаБезДоговора * Окр(АвансБезДоговораРуб / ?(АвансБезДоговора = 0, 1, АвансБезДоговора), 4, 1), 2, 1);
				
			Иначе
				ЗачетАвансаПоДоговоруРуб = Окр(ЗачетАвансаПоДоговору * Окр(АвансПоДоговоруРуб / ?(АвансПоДоговору = 0, 1, АвансПоДоговору), 4, 1), 2, 1);
				ЗачетАвансаБезДоговораРуб = 0;
			КонецЕсли;
		
		Иначе
			ЗачетАвансаПоДоговору = Мин(АвансПоДоговору, ВсегоОтгружено);
			ЗачетАвансаБезДоговора = Мин(АвансБезДоговора, ВсегоОтгружено - ЗачетАвансаПоДоговору);
		КонецЕсли;
	    
		ЗачестьАвансЗаКомиссионныйТовар(ЗачетАвансаПоДоговору, ЗачетАвансаПоДоговоруРуб, Договор);
		ЗачестьАвансЗаКомиссионныйТовар(ЗачетАвансаБезДоговора, ЗачетАвансаБезДоговораРуб, БезДоговора);
		
		СуммаЗачтенногоАванса = ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора;
		
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			СуммаЗачтенногоАвансаРуб = ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб;
			
			ТаблицаАванса.НоваяСтрока();
			ТаблицаАванса.ПечЗачетАванса = Окр(ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаПоДоговору = Окр(ЗачетАвансаПоДоговоруРуб, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаБезДоговора = Окр(ЗачетАвансаБезДоговораРуб, 2, 1);
			ТаблицаАванса.ПечАвансПоДоговору = Окр(АвансПоДоговоруРуб, 2, 1);
			ТаблицаАванса.ПечАвансБезДоговора = Окр(АвансБезДоговораРуб, 2, 1);
				
		Иначе  
			Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
				СуммаЗачтенногоАвансаРуб = ЗачетАвансаПоДоговоруРуб + ЗачетАвансаБезДоговораРуб;				
			КонецЕсли;
			
			ТаблицаАванса.НоваяСтрока();
			ТаблицаАванса.ПечЗачетАванса = Окр(ЗачетАвансаПоДоговору + ЗачетАвансаБезДоговора, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаПоДоговору = Окр(ЗачетАвансаПоДоговору, 2, 1);
			ТаблицаАванса.ПечЗачетАвансаБезДоговора = Окр(ЗачетАвансаБезДоговора, 2, 1);
			ТаблицаАванса.ПечАвансПоДоговору = Окр(АвансПоДоговору, 2, 1);
			ТаблицаАванса.ПечАвансБезДоговора = Окр(АвансБезДоговора, 2, 1);
		КонецЕсли;

	КонецЕсли;
	
	КурсАванса = ?(СуммаЗачтенногоАванса = 0, 0, Окр(СуммаЗачтенногоАвансаРуб / СуммаЗачтенногоАванса, 4, 1));
	
	Если ОплатаДоговора = 2 Тогда
	    ИтогВсего = ТаблицаКомисии.Итог("ВалВсего");
	Иначе
		ИтогВсего = ТаблицаКомисии.Итог("Всего");
	КонецЕсли;
	
	РаспределеноАванса = 0;
	РаспределеноАвансаРуб = 0;
	КолСтрокТабОтгрузки = ТаблицаРасчетовСКомитентом.КоличествоСтрок();
	К = ?(ИтогВсего = 0, 0, СуммаЗачтенногоАванса / ИтогВсего);
	
	ТаблицаРасчетовСКомитентом.ВыбратьСтроки();
	Пока ТаблицаРасчетовСКомитентом.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаРасчетовСКомитентом.Всего <> 0 Тогда
			СчетРасчетовСКомитентом = ?(ТаблицаРасчетовСКомитентом.ДоговорКомиссии.ВестиУчетРасчетовУЕ = 1, Сч76_6, СчетРасчетовСКомитентом);
			
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Выручка за комисс.товар";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетРасчетовЗакомиссионныеТовары;
			Операция.Дебет.Контрагенты = Контрагент;
			Операция.Дебет.Договоры = Договор;
			Операция.Кредит.Счет = СчетРасчетовСКомитентом;
			Операция.Кредит.Контрагенты = ТаблицаРасчетовСКомитентом.Комитент;
			Операция.Кредит.Договоры = ТаблицаРасчетовСКомитентом.ДоговорКомиссии;
			
			Если ОплатаДоговора = 2 Тогда
				Операция.ВалСумма = ТаблицаРасчетовСКомитентом.ВалВсего;
				Операция.Валюта = Валюта;
			ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				Операция.ВалСумма = ТаблицаРасчетовСКомитентом.Всего;
				Операция.Валюта = Валюта;
			КонецЕсли;
				
			Если (ВестиУчетРасчетовУЕ = 1)
			или ((ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008')) Тогда
				
				Если ПустоеЗначение(ВсегоОтгружено) = 0  Тогда   
					Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
						ТаблицаВсего = ТаблицаРасчетовСКомитентом.ВалВсего;
					Иначе
						ТаблицаВсего = ТаблицаРасчетовСКомитентом.Всего;
					КонецЕсли;
					
					ЧастьСуммыЗачтенногоАванса = Окр(СуммаЗачтенногоАванса * ТаблицаВсего / ВсегоОтгружено, 2, 1);
					ЧастьСуммыЗачтенногоАвансаРуб = Окр(СуммаЗачтенногоАвансаРуб * ТаблицаВсего / ВсегоОтгружено, 2, 1);
					
				Иначе
					ЧастьСуммыЗачтенногоАванса = 0;
					ЧастьСуммыЗачтенногоАвансаРуб = 0;
				КонецЕсли;
				
				РаспределеноАванса = РаспределеноАванса + ЧастьСуммыЗачтенногоАванса;
				РаспределеноАвансаРуб = РаспределеноАвансаРуб + ЧастьСуммыЗачтенногоАвансаРуб;
				
				Если КолСтрокТабОтгрузки = ТаблицаРасчетовСКомитентом.НомерСтроки Тогда
					Если РаспределеноАванса <> СуммаЗачтенногоАванса Тогда
						ЧастьСуммыЗачтенногоАванса = ЧастьСуммыЗачтенногоАванса + СуммаЗачтенногоАванса - РаспределеноАванса;
					КонецЕсли;
					
					Если РаспределеноАвансаРуб <> СуммаЗачтенногоАвансаРуб Тогда
						ЧастьСуммыЗачтенногоАвансаРуб = ЧастьСуммыЗачтенногоАвансаРуб + СуммаЗачтенногоАвансаРуб - РаспределеноАвансаРуб;
					КонецЕсли;
				КонецЕсли;
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					ВсегоРубПоКурсуОтгрузки = Окр(ТаблицаРасчетовСКомитентом.ВалВсего * Курс / Кратность, 2, 1);
				Иначе
					ВсегоРубПоКурсуОтгрузки = Окр(ТаблицаРасчетовСКомитентом.Всего * Курс / Кратность, 2, 1);
				КонецЕсли;
				
				ОплаченоПоКурсуОтгрузки = Окр(К * ВсегоРубПоКурсуОтгрузки, 2, 1);
			    ВыручкаРуб = ВсегоРубПоКурсуОтгрузки + ЧастьСуммыЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
				
				Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
					ТаблицаРасчетовСКомитентом.ВсегоРуб = ВыручкаРуб;
					Операция.Сумма = ВыручкаРуб ;
				Иначе
					
					Если (Договор.ОтражатьСуммовуюРазницуПриЗачетеАванса = 1) и (ВестиУчетРасчетовУЕ = 1) Тогда
						СуммоваяРазница = ЧастьСуммыЗачтенногоАвансаРуб - ОплаченоПоКурсуОтгрузки;
						
					Иначе
						СуммоваяРазница = 0;
					КонецЕсли;
					
					Операция.Сумма = ВыручкаРуб - СуммоваяРазница;
					
					ТаблицаРасчетовСКомитентом.ВсегоРуб = ВыручкаРуб;
					
					Если СуммоваяРазница <> 0 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ТВ";
						Операция.СодержаниеПроводки = "Суммовая разница";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчетРасчетовЗакомиссионныеТовары;
						Операция.Дебет.Контрагенты = Контрагент;
						Операция.Дебет.Договоры = Договор;
						Операция.Кредит.Счет = СчетРасчетовСКомитентом;
						Операция.Кредит.Контрагенты = ТаблицаРасчетовСКомитентом.Комитент;
						Операция.Кредит.Договоры = ТаблицаРасчетовСКомитентом.ДоговорКомиссии;
						Операция.ВалСумма = 0;
						Операция.Валюта = Валюта;
						Операция.Сумма = СуммоваяРазница;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Операция.Сумма = ТаблицаРасчетовСКомитентом.Всего;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Начисление НП по комиссионным товарам.
	Если (ИтогВсего > 0) и (ВерсияОбъекта >= "7.70.421") Тогда
		К = СуммаЗачтенногоАванса / ИтогВсего;
		ТаблицаКомисии.ВыбратьСтроки();
		Пока ТаблицаКомисии.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаКомисии.НП = 0 Тогда
			    Продолжить;
			КонецЕсли;
			
			Если ВестиУчетРасчетовУЕ = 1 Тогда
				НПкУплате = К * ТаблицаКомисии.НП;
				ОтложеноНП = ТаблицаКомисии.НП - НПкУплате;
				СуммаНПРуб = НПкУплате * КурсАванса + ОтложеноНП * Курс / Кратность;
				
				НПкУплате = К * СуммаНПРуб;
				ОтложеноНП = СуммаНПРуб - НПкУплате;
				
			Иначе
				НПкУплате = К * ТаблицаКомисии.НП;
				ОтложеноНП = ТаблицаКомисии.НП - НПкУплате;
				СуммаНПРуб = ТаблицаКомисии.НП;
			КонецЕсли;
			
			Если НПкУплате > 0 Тогда // был зачет аванса
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч90_6;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаКомисии.ВидНоменклатуры;
				Операция.Дебет.СтавкиНП = ТаблицаКомисии.СтавкаНП;
				Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = НПкУплате;
			КонецЕсли;
			
			Если ОтложеноНП > 0 Тогда
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч90_6;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаКомисии.ВидНоменклатуры;
				Операция.Дебет.СтавкиНП = ТаблицаКомисии.СтавкаНП;
				Операция.Кредит.Счет = Сч76_Н_4;
				Операция.Кредит.Контрагенты = Контрагент;
				Операция.Кредит.Договоры = Договор;
				Операция.Сумма = ОтложеноНП;
			КонецЕсли;
			
			// Удержание НП у комитента.
			Если ТаблицаКомисии.НП > 0 Тогда
				СчетРасчетовСКомитентом = ?(ТаблицаКомисии.ДоговорКомиссии.ВестиУчетРасчетовУЕ = 1, Сч76_6, СчетРасчетовСКомитентом);
				
			    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Удержан НП";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетРасчетовСКомитентом;
				Операция.Дебет.Контрагенты = ТаблицаКомисии.Комитент;
				Операция.Дебет.Договоры = ТаблицаКомисии.ДоговорКомиссии;
				Операция.Кредит.Счет = Сч90_1_1;
				Операция.Кредит.ВидыНоменклатуры = ТаблицаКомисии.ВидНоменклатуры;
				Операция.Кредит.СтавкиНДС = ТаблицаКомисии.СтавкаНДС;
				Операция.Кредит.СтавкиНП = ТаблицаКомисии.СтавкаНП;
				
				Если ОплатаДоговора = 2 Тогда
				    Операция.ВалСумма = ТаблицаКомисии.ВалНП;
					Операция.Валюта = Валюта;
					
				ИначеЕсли ВестиУчетРасчетовУЕ = 1 Тогда
				    Операция.ВалСумма = ТаблицаКомисии.НП;
					Операция.Валюта = Валюта;
				КонецЕсли;
				
				Операция.Сумма = СуммаНПРуб;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если КодВидаОтгрузки >= 3 Тогда // возврат поставщику
		
		// Найдем полученный счет-фактуру, по которому производится возврат.
		Если ПустоеЗначение(ДокументПоступления) = 0 Тогда
			СФ=СоздатьОбъект("Документ");
			СФ.ВыбратьПодчиненныеДокументы(ДокументПоступления.ДатаДок,ДатаДок,ДокументПоступления);
			Пока СФ.ПолучитьДокумент()=1 Цикл
				Если СФ.Вид()="СчетФактураПолученный" Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если СФ.Вид()<>"СчетФактураПолученный" Тогда
				СФ.НайтиДокумент(ДокументПоступления);
			КонецЕсли;
		КонецЕсли;
				
		// Списание НДС, предъявленного к уплате Дт76.2 Кт 19.3
		Если (ВыделенныйНДС > 0) и (НДСвключатьВСтоимость = 0) и (ПоставщикуВыставляетсяСчетФактураНаВозврат = 0) Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Списание НДС";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = Сч19_3;
			Операция.Кредит.Контрагенты = Контрагент;
			Если ПустоеЗначение(ДокументПоступления) = 0 Тогда
				Если (ПустоеЗначение(ДокументПоступления.ДатаНомерСчетаФактуры) = 0) или (СФ.Вид()="СчетФактураПолученный")  Тогда
					Операция.Кредит.СчетаФактурыПолученные = СФ.ТекущийДокумент();
				КонецЕсли;    
			КонецЕсли;
			Операция.Дебет.Счет = Сч76_2;
			Операция.Дебет.Контрагенты = Контрагент;
			Операция.Дебет.Договоры = Договор;
			Если ЦеныВДоговоре = 2 Тогда
			    Операция.Сумма = ВыделенныйНДС*Курс/Кратность;
				Если ОплатаДоговора = 2 Тогда
					Операция.Дебет.Счет = Сч76_22;
				    Операция.Валюта = Валюта;
					Операция.ВалСумма = ВыделенныйНДС;
				КонецЕсли;
			Иначе
				Операция.Сумма = ВыделенныйНДС;
			КонецЕсли;
		КонецЕсли;
		
		БухИтГТД = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтГТД.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИтГТД.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
		БухИтГТД.ИспользоватьСубконто(ВидыСубконто.ГТД);
		БухИтГТД.ВыполнитьЗапрос(,ТекущийДокумент(),"ГТД",,,,,"К");
		
	    // Если оформлен возврат импортного товара,
		// то необходимо отразить это на счете ГТД.
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ГТД) = 0 Тогда
				ОстатокПоГТД = 0;
				Если БухИтГТД.ПолучитьСубконто(ВидыСубконто.Номенклатура,, Товар) = 1 Тогда
				    Если БухИтГТД.ПолучитьСубконто(ВидыСубконто.ГТД,, ГТД) = 1 Тогда
						ОстатокПоГТД = БухИтГТД.СКД("К");
					КонецЕсли;	
				КонецЕсли;
				
				Если Количество > ОстатокПоГТД Тогда
					ТекстСообщения = "По счету ГТД определен остаток "+ОстатокПоГТД+" "+Товар.ЕдиницаИзмерения+
					" товара "+Товар+" из необходимых "+Количество+" "+Товар.ЕдиницаИзмерения+" (строка №"+НомерСтроки+").";
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
				КонецЕсли;
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Возврат импортного товара";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчГТД;
				Операция.Дебет.Номенклатура = Товар;
				Операция.Дебет.ГТД = ГТД;
				Операция.Количество = -Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	// Формирование проводок по вспомогательным забалансовым счетам для автоматического
	// ведения книги покупок и книги продаж.
	
	Если (КодВидаОтгрузки >= 3)и(Договор.АвтоОбработкаНДС=1)и(НДСвключатьВСтоимость = 0)и(ДокументПоступления.Выбран()=1) и (ПоставщикуВыставляетсяСчетФактураНаВозврат = 0) Тогда 
		
		НомСтроки = 1;
		Пока НомСтроки <= ТаблицаДокумента.КоличествоСтрок() Цикл
			ТаблицаДокумента.ПолучитьСтрокуПоНомеру(НомСтроки);
			Если (ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
			и (ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
				ТаблицаДокумента.УдалитьСтроку(); // для товаров на комиссии проводок не формируем
				Продолжить;
			КонецЕсли;
			
			Если ЦеныВДоговоре = 2 Тогда
				ТаблицаДокумента.Всего = ТаблицаДокумента.Всего * Курс / Кратность;
				ТаблицаДокумента.НДС = ТаблицаДокумента.НДС * Курс / Кратность;
			КонецЕсли;
				
			НомСтроки = НомСтроки + 1;
		КонецЦикла;
		
		ТаблицаДокумента.Свернуть("СтавкаНДС","НДС,Всего");
		ТаблицаДокумента.ВыбратьСтроки();
		Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл
			
			Если ТаблицаДокумента.СтавкаНДС.Ставка>17 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "АВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ЗПК.20.Б");
				Операция.Дебет.Субконто(1,Контрагент);
				Операция.Дебет.Субконто(2,Договор);                    
				Операция.Дебет.Субконто(3,СФ.ТекущийДокумент());
				Операция.Сумма = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС;
				Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "АВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ЗПК.20.Н");
				Операция.Дебет.Субконто(1,Контрагент);
				Операция.Дебет.Субконто(2,Договор);
				Операция.Дебет.Субконто(3,СФ.ТекущийДокумент());
				Операция.Сумма = ТаблицаДокумента.НДС;
				Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
			КонецЕсли;
			Если ТаблицаДокумента.СтавкаНДС.Ставка=10 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "АВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ЗПК.10.Б");
				Операция.Дебет.Субконто(1,Контрагент);
				Операция.Дебет.Субконто(2,Договор);
				Операция.Дебет.Субконто(3,СФ.ТекущийДокумент());
				Операция.Сумма = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС;
				Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "АВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ЗПК.10.Н");
				Операция.Дебет.Субконто(1,Контрагент);
				Операция.Дебет.Субконто(2,Договор);
				Операция.Дебет.Субконто(3,СФ.ТекущийДокумент());
				Операция.Сумма = ТаблицаДокумента.НДС;
				Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
			КонецЕсли;
			Если ТаблицаДокумента.СтавкаНДС.Ставка=0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "АВ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("ЗПК.БН");
				Операция.Дебет.Субконто(1,Контрагент);
				Операция.Дебет.Субконто(2,Договор);
				Операция.Дебет.Субконто(3,СФ.ТекущийДокумент());
				Операция.Сумма = ТаблицаДокумента.Всего;
				Операция.СодержаниеПроводки = "Данные для автоматического учета НДС";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//********************************************************************
	//Проводки по расчетам в у.е. 
	Если ДатаДок >= '01.01.2007' Тогда
		Если ВестиУчетРасчетовУЕ = 1 Тогда
			Если (ЗадолженностьПоРасчетамВУЕРуб + ЗадолженностьПоРасчетамВУЕВал) <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "УЕ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчУЕ_62;
				Операция.Дебет.Субконто(1, Контрагент);
				Операция.Дебет.Субконто(2, Договор);			
				Операция.Валюта = Валюта;
				Операция.Сумма = ЗадолженностьПоРасчетамВУЕРуб;
				Операция.ВалСумма = ЗадолженностьПоРасчетамВУЕВал;
				Операция.СодержаниеПроводки = "Задолженность по реализации в у.е."; 
			КонецЕсли;	
		КонецЕсли; 
		
		СчУЕ_60 = СчетПоКоду("УЕ.60");
		ТаблицаРасчетовСКомитентом.ВыбратьСтроки();
		Пока ТаблицаРасчетовСКомитентом.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаРасчетовСКомитентом.Всего <> 0 Тогда
				СчетРасчетовСКомитентом = ?(ТаблицаРасчетовСКомитентом.ДоговорКомиссии.ВестиУчетРасчетовУЕ = 1, Сч76_6, СчетРасчетовСКомитентом);
				Если СчетРасчетовСКомитентом = Сч76_6 Тогда  
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "УЕ";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчУЕ_60;
					Операция.Кредит.Субконто(1, ТаблицаРасчетовСКомитентом.Комитент);
					Операция.Кредит.Субконто(2, ТаблицаРасчетовСКомитентом.ДоговорКомиссии);			
					Операция.Валюта = ТаблицаРасчетовСКомитентом.ДоговорКомиссии.ВалютаДоговора;
					Операция.Сумма = ТаблицаРасчетовСКомитентом.ВсегоРуб;
					Операция.ВалСумма = ТаблицаРасчетовСКомитентом.Всего;
					Операция.СодержаниеПроводки = "Задолженность по приобретению в у.е."; 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;				
		
	КонецЕсли;	
	//******************************************************************** 
	
	//********************************************************************
	//Проводки по расчетам в вал. 
	Если (Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да) Тогда
		Если (ОплатаДоговора = 2) и (ДатаДок >= '01.01.2008') Тогда
			Если НПРКурсоваяРазница <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "НУ";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетПоКоду("НПР.99");
				Операция.Сумма = -НПРКурсоваяРазница;
				Операция.СодержаниеПроводки = "Разница в оценке дохода"; 
			КонецЕсли;	
		КонецЕсли;	                                                  
	КонецЕсли;
	//********************************************************************

	Операция.Записать(); 
	
	Если ТаблицаАванса.КоличествоСтрок()>0 Тогда 
		ТаблицаАванса.ПолучитьСтрокуПоНомеру(1);
		Если (ТаблицаАванса.ПечАвансПоДоговору + ТаблицаАванса.ПечАвансБезДоговора) <> 0 Тогда
			ТекстСообщения = "=> Зачет аванса:" + РазделительСтрок
			+ "   отгружено на сумму: "+ТаблицаАванса.ВсегоОтгружено+", зачтен аванс в размере: "+ТаблицаАванса.ПечЗачетАванса + РазделительСтрок
			+ "   - определен аванс по договору "+Договор+" в сумме: "+ТаблицаАванса.ПечАвансПоДоговору+", зачтен аванс в размере: "+ТаблицаАванса.ПечЗачетАвансаПоДоговору + РазделительСтрок;
			
			Если ЗачитыватьАванс = 0 Тогда
				ТекстСообщения = ТекстСообщения
				+ "   - определен аванс без указания договора в сумме: "+ТаблицаАванса.ПечАвансБезДоговора+", зачтен аванс в размере: "+ТаблицаАванса.ПечЗачетАвансаБезДоговора;
			Иначе
				ТекстСообщения = ТекстСообщения
				+ "   - аванс без указания договора не учтен";
			КонецЕсли;
			
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		КонецЕсли;
	КонецЕсли;

	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()