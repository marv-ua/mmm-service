Перем РассчитаннаяСуммаСписания;
Перем СписаноПостоянныхРазниц;
Перем БухИтНПР;

//******************************************************************************
// ДоначислениеАмортизацииДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ДоначислениеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте)
	
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог");
	НачисленнаяАмортизация = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалог");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизация;
	
	Если ДатаДок >= '01.01.2009' Тогда
		Если ОстаточнаяСтоимость <> 0 Тогда
			Возврат;
		КонецЕсли;                                                   
	КонецЕсли;                                                   
	
	Если РассчитаннаяАмортизация <> 0  Тогда
		СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(НМА.ВидРасхода.Получить(ДатаДок), НМА.ЭлементРасхода.Получить(ДатаДок), НМА.Объект.Получить(ДатаДок), ДатаДок);
		СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
		Если ПустоеЗначение(СчетРасходов) = 1 Тогда
			ТекстСообщения = "На закладке ""Налоговый учет"" неверно указано направление отнесения расходов по начисленной амортизации для объекта: "
				+ НМА.Наименование + ", инв.№" + НМА.Код + ".";
			глНеПроводить(Контекст, ТекстСообщения, НМА.ТекущийЭлемент());
			Возврат;
		КонецЕсли;
		СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, НМА.СчетЗатрат.Получить(ДатаДок), НМА.Субконто1.Получить(ДатаДок), СчетРасходов);
		
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПустоеЗначение(СчетРасходов) = 0 Тогда
		    Операция.Дебет.Счет = СчетРасходов;
			Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
			Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
			Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
		КонецЕсли;
		Операция.Кредит.Счет = СчетПоКоду("Н05.04");
		Операция.Кредит.Субконто(1, НМА);
		Операция.Сумма = РассчитаннаяАмортизация;
	КонецЕсли;
	
КонецПроцедуры // ДоначислениеАмортизацииДляЦелейНалоговогоУчета()

//******************************************************************************
// СписаниеАмортизацииДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте)
	                                                                                     
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог");
	НачисленнаяАмортизация = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалог");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизация;
	
	Если ДатаДок >= '01.01.2009' Тогда
		Если ОстаточнаяСтоимость <> 0 Тогда
			Возврат;
		КонецЕсли;                                                   
	КонецЕсли;                                                   
	
	Если НачисленнаяАмортизация <> 0  Тогда
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Списана амортизация";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н05.04");
		Операция.Дебет.Субконто(1, НМА);
		Операция.Кредит.Счет = СчетПоКоду("Н05.03");
		Операция.Кредит.Субконто(1, НМА);
		Операция.Сумма = НачисленнаяАмортизация;
	КонецЕсли;
	
КонецПроцедуры // СписаниеАмортизацииДляЦелейНалоговогоУчета()

//******************************************************************************
// ВыбытиеНМАДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ВыбытиеНМАДляЦелейНалоговогоУчета(СведенияОбОбъекте)
	
	РассчитаннаяАмортизация = СведенияОбОбъекте.Получить("РассчитаннаяАмортизацияНалог");
	НачисленнаяАмортизация = РассчитаннаяАмортизация + СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНалог");
	ОстаточнаяСтоимость = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНалогКон") - НачисленнаяАмортизация;
	                 
	Если ОстаточнаяСтоимость <> 0 Тогда
		Если ДатаДок >= '01.01.2009' Тогда
			Возврат;
		КонецЕсли;
		
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Списание остаточной стоимости";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н09");
		Операция.Дебет.ВнереализационныеРасходы = Перечисление.ВнереализационныеРасходы.ПрочиеВнереализационныеРасходы;
		Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.СписаниеИмущества;
		Операция.Кредит.Счет = СчетПоКоду("Н05.03");
		Операция.Кредит.НематериальныеАктивы = НМА;
		Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.СписаниеИмущества;
		Операция.Сумма = ОстаточнаяСтоимость;
	КонецЕсли;
	
КонецПроцедуры // ВыбытиеНМАДляЦелейНалоговогоУчета()

//******************************************************************************
// ОтражениеАмортизацииНМА(СведенияОбОбъекте)
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ОтражениеАмортизацииНМА(СведенияО_НМА)
	
	РассчитаннаяСуммаСписания = СведенияО_НМА.Получить("РассчитаннаяАмортизацияБух");
		
	Если РассчитаннаяСуммаСписания > 0 Тогда
		Если НМА.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
			ТекстСообщения = "Не указан счет отнесения затрат по начисленной амортизации для НМА: "+НМА.Наименование+", инв.№"+НМА.Код+".";
			глНеПроводить(Контекст, ТекстСообщения, НМА.ТекущийЭлемент());
			Возврат;
		КонецЕсли;
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НА";
		Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = НМА.СчетЗатрат.Получить(ДатаДок);
		Операция.Дебет.Субконто(1, НМА.Субконто1.Получить(ДатаДок));
		Операция.Дебет.Субконто(2, НМА.Субконто2.Получить(ДатаДок));
		Операция.Дебет.Субконто(3, НМА.Субконто3.Получить(ДатаДок));
		Операция.Кредит.Счет = СведенияО_НМА.Получить("СчетНачисленияАмортизации");
		Операция.Кредит.НематериальныеАктивы = 	НМА;
		Операция.Сумма = РассчитаннаяСуммаСписания;
	КонецЕсли;
	
КонецПроцедуры // ОтражениеАмортизацииНМА()

//******************************************************************************
// ОтражениеСписанияНИОКР()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ОтражениеСписанияНИОКР(СведенияО_НИОКР)
	
	Сч04_2 = СчетПоКоду("04.2");
	
	РассчитаннаяСуммаСписания = СведенияО_НИОКР.Получить("РассчитаннаяСуммаСписания");
	
	Если РассчитаннаяСуммаСписания > 0 Тогда
		Если НМА.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
			ТекстСообщения = "Не указан счет отнесения расходов для НИОКР: "
							+ НМА.Наименование + ", инв.№" + НМА.Код + ".";
			глНеПроводить(Контекст, ТекстСообщения, НМА.ТекущийЭлемент());
			Возврат;
		КонецЕсли;
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НА";
		Операция.СодержаниеПроводки = "Списание расходов за "+Формат(ДатаДок,"Д ММММГГГГ");
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = НМА.СчетЗатрат.Получить(ДатаДок);
		Операция.Дебет.Субконто(1, НМА.Субконто1.Получить(ДатаДок));
		Операция.Дебет.Субконто(2, НМА.Субконто2.Получить(ДатаДок));
		Операция.Дебет.Субконто(3, НМА.Субконто3.Получить(ДатаДок));
		Операция.Кредит.Счет = Сч04_2;
		Операция.Кредит.НематериальныеАктивы = НМА.ТекущийЭлемент();
		Операция.Сумма = РассчитаннаяСуммаСписания;
	КонецЕсли;
	
КонецПроцедуры // ОтражениеСписанияНИОКР()

//******************************************************************************
// СписаниеНачисленнойАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СписаниеНачисленнойАмортизации(СведенияОбОбъекте)
	
	Сч04_1 = СчетПоКоду("04.1");
	Сч05 = СчетПоКоду("05");
	
	НачисленнаяАмортизация = СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНач");
	НачисленнаяАмортизацияВсего = НачисленнаяАмортизация + РассчитаннаяСуммаСписания;
	
	Если (НМА.ПорядокНачисленияАмортизации = 2) и (НачисленнаяАмортизацияВсего <> 0) Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НА";
		Операция.СодержаниеПроводки = "Списана начисл.аморт.";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Сумма = НачисленнаяАмортизацияВсего;
		Операция.Дебет.Счет = Сч05;
		Операция.Дебет.НематериальныеАктивы = НМА;
		Операция.Кредит.Счет = Сч04_1;
		Операция.Кредит.НематериальныеАктивы = НМА;
	КонецЕсли;
	
КонецПроцедуры // СписаниеНачисленнойАмортизации()

//******************************************************************************
// СписаниеОстаточнойСтоимости()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СписаниеОстаточнойСтоимости(СведенияОбОбъекте)
	
	Сч91_2 = СчетПоКоду("91.2");
	
	Если ВидОбъектаУчета = 1 Тогда // НИОКР
		Сч04 = СчетПоКоду("04.2");
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы, НМА, 2,);
		Если БухИт.ВыполнитьЗапрос(, ТекущийДокумент(), Сч04,,,,,) = 1 Тогда
			ОстаточнаяСтоимость = БухИт.СКД();
			ОстаточнаяСтоимость = ОстаточнаяСтоимость - РассчитаннаяСуммаСписания;
		Иначе
			ОстаточнаяСтоимость = 0;
		КонецЕсли;
		СодержаниеПроводки  = "Списание расходов по НИОКР";
		
		
	Иначе // НМА
		БалансоваяСтоимость    = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНач");
		НачисленнаяАмортизация = СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНач");
		ОстаточнаяСтоимость = БалансоваяСтоимость - НачисленнаяАмортизация - РассчитаннаяСуммаСписания;
		СодержаниеПроводки  = "Списана остаточн.ст-ть";
		Сч04 = СчетПоКоду("04.1");
	КонецЕсли;
			
	Если ОстаточнаяСтоимость > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НА";          
		Операция.СодержаниеПроводки = СодержаниеПроводки;
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = Сч91_2; 
		Операция.Дебет.ПрочиеДоходыИРасходы = СтатьяПрочихДоходовИРасходов;
		Операция.Кредит.Счет = Сч04;
		Операция.Кредит.НематериальныеАктивы = НМА;
		Операция.Сумма = ОстаточнаяСтоимость;
	КонецЕсли;
	
КонецПроцедуры // СписаниеОстаточнойСтоимости()

//******************************************************************************
// ОтражениеПотостоянныхРазниц()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ОтражениеПотостоянныхРазниц(СведенияОбОбъекте)
	
	Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
		ВсегоПостоянныхРазниц = БухИтНПР.СНД("НПР.04",,, НМА);
		Если ВсегоПостоянныхРазниц <> 0 Тогда
			
			Если ВидОбъектаУчета = 1 Тогда // НИОКР
				ОстаточнаяСтоимость    = СведенияОбОбъекте.Получить("СуммаРасходовКон");
				
			Иначе // НМА
				НачисленнаяАмортизация = СведенияОбОбъекте.Получить("НачисленнаяАмортизацияНач"); 
				БалансоваяСтоимость    = СведенияОбОбъекте.Получить("БалансоваяСтоимостьНач");
				ОстаточнаяСтоимость    = БалансоваяСтоимость - НачисленнаяАмортизация;
			КонецЕсли;
            
			Если ОстаточнаяСтоимость > 0 Тогда
			    СписатьПостоянныхРазниц = Окр(ВсегоПостоянныхРазниц * (РассчитаннаяСуммаСписания / ОстаточнаяСтоимость), 2);
				Если СписатьПостоянныхРазниц <> 0 Тогда
					СчетДт = НМА.СчетЗатрат.Получить(ДатаДок);
					СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, НМА.Субконто1.Получить(ДатаДок));
					
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ПР";
					Операция.СодержаниеПроводки = "Списание постоянных разниц";
					Если ПустоеЗначение(СчетНПР) = 0 Тогда
						Операция.Дебет.Счет = СчетНПР;
						Операция.Дебет.Субконто(1, НМА.Субконто1.Получить(ДатаДок));
						Операция.Дебет.Субконто(2, НМА.Субконто2.Получить(ДатаДок));
						Операция.Дебет.Субконто(3, НМА.Субконто3.Получить(ДатаДок));
					КонецЕсли;
					Операция.Кредит.Счет = СчетПоКоду("НПР.04");
					Операция.Кредит.НематериальныеАктивы = НМА;
					Операция.Сумма = СписатьПостоянныхРазниц;
					
					СписаноПостоянныхРазниц = СписатьПостоянныхРазниц;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОтражениеПотостоянныхРазниц()

//******************************************************************************
// ПолноеСписаниеПостоянныхРазницПоОбъекту()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПолноеСписаниеПостоянныхРазницПоОбъекту()
	
	Сч91_2 = СчетПоКоду("91.2");
	
	Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
		СписатьПостоянныхРазниц = БухИтНПР.СКД("НПР.04",,, НМА) - СписаноПостоянныхРазниц;
		Если СписатьПостоянныхРазниц <> 0 Тогда
			СчетНПР = глПолучитьСчетДебетаНПР(Сч91_2, СтатьяПрочихДоходовИРасходов);
			
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ПР";
			Операция.СодержаниеПроводки = "Списание постоянных разниц";
			Если ПустоеЗначение(СчетНПР) = 0 Тогда
				Операция.Дебет.Счет = СчетНПР;
			КонецЕсли;
			Операция.Кредит.Счет = СчетПоКоду("НПР.04");
			Операция.Кредит.НематериальныеАктивы = НМА;
			Операция.Сумма = СписатьПостоянныхРазниц;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПолноеСписаниеПостоянныхРазницПоОбъекту()

//******************************************************************************
Процедура ОбработкаПроведения()
	
	Если НМА.Выбран() = 0 Тогда
		ТекстСообщения = "Не указан объект нематериальных активов.";
		глНеПроводить(Контекст, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	БухИтНПР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтНПР.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтНПР.ПериодМ(ДатаДок);
	СписаноПостоянныхРазниц = 0;
    
	Если ВидОбъектаУчета = 1 Тогда // НИОКР
		
	    СведенияОбОбъекте = глРасчетСуммыСписанияНИОКР(НМА, ДатаДок);
		
		// Списание расходов за текущий месяц
		ОтражениеСписанияНИОКР(СведенияОбОбъекте);
		Если СтатусВозврата() = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		//Отражение постоянных разниц по списанным расходам
		ОтражениеПотостоянныхРазниц(СведенияОбОбъекте);
		
		// Списание не списанных расходов по НИОКР
		СписаниеОстаточнойСтоимости(СведенияОбОбъекте);
		
		//Списание постоянных разниц
		ПолноеСписаниеПостоянныхРазницПоОбъекту();
		
	Иначе // НМА
		СведенияОбОбъекте = глРасчетАмортизацииНМА(НМА, ДатаДок);
		
		// Начисление амортизации, отнясящейся к текущему месяцу
		ОтражениеАмортизацииНМА(СведенияОбОбъекте);
		Если СтатусВозврата() = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		//Отражение постоянных разниц по начисленной амортизации
		ОтражениеПотостоянныхРазниц(СведенияОбОбъекте);
		
		// Доначислим амортизацию для целей налогового учета.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			ДоначислениеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте);
			
			// Если невозможно определить счет отнесения амортизации для целей налогового учета.
			Если СтатусВозврата() = 0 Тогда 
			    Возврат;
			КонецЕсли;
		КонецЕсли;
		
		// Списание амортизации, начисленной с начала принятия к учету
		СписаниеНачисленнойАмортизации(СведенияОбОбъекте);
		
		// Списание амортизации для целей налогового учета.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			СписаниеАмортизацииДляЦелейНалоговогоУчета(СведенияОбОбъекте);
		КонецЕсли;
		
		// Списание остаточной стоимости
		СписаниеОстаточнойСтоимости(СведенияОбОбъекте);
		
		//Списание постоянных разниц
		ПолноеСписаниеПостоянныхРазницПоОбъекту();
		
		// Списание остаточной стоимости НМА для целей налогообложения.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			ВыбытиеНМАДляЦелейНалоговогоУчета(СведенияОбОбъекте);
		КонецЕсли;
		
		СпрНМА = СоздатьОбъект("Справочник.НематериальныеАктивы");
		Если СпрНМА.НайтиЭлемент(НМА) = 0 Тогда
		    СтатусВозврата(0); Возврат;
		КонецЕсли;
		СпрНМА.ДатаСписания = ДатаДок;
		СпрНМА.Записать();
		УстановитьРеквизитСправочника(НМА, "Состояние", Перечисление.СостоянияНМА.Списан, ДатаДок);
		
		ТекстСообщения = "В справочнике ""Нематериальные активы"" отражено списание нематериального актива "+НМА;
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,, НМА.ТекущийЭлемент());
		
	КонецЕсли;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры
//_____________________________________________________________________________
