////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
//_____________________________________________________________________________
Процедура Пересчет(Подбор=0)
	Если Товар.Выбран() = 1 Тогда
		Если (Форма.ТекущаяКолонка() = "Товар") или (Подбор = 1) Тогда
			Стоимость = Товар.ПлановаяСебестоимость.Получить(ДатаДок);
			Количество = ?(Количество=0,1,Количество);
			Сумма = Окр(Количество*Стоимость,2,1);

		ИначеЕсли (Форма.ТекущаяКолонка() = "Количество") или (Форма.ТекущаяКолонка() = "Стоимость") Тогда
			Сумма = Окр(Количество*Стоимость,2,1);

		ИначеЕсли Форма.ТекущаяКолонка() = "Сумма" Тогда
			Стоимость = Окр(Сумма/?(Количество=0,1,Количество),2,1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Пересчет

//******************************************************************************
// УправлениеЗакладками()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  флаг "Автосписание".
//
// Описание:
//  Управление видимостью закладок.
//
Процедура УправлениеЗакладками()
	
	Если Автосписание = 1 Тогда
		Форма.ИспользоватьЗакладки(1);
		Форма.Закладки.УдалитьВсе();
		Форма.Закладки.ДобавитьЗначение("ВыпускПродукции", "Выпуск продукции");
		Форма.Закладки.ДобавитьЗначение("Автосписание");
	Иначе
		Форма.ИспользоватьЗакладки(0);
	КонецЕсли;
	
КонецПроцедуры // УправлениеЗакладками()
//_____________________________________________________________________________
Процедура Печать()
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("МХ-18");
		
		// формирование шапки
		СекцияШапка = Таб.ПолучитьСекцию("Шапка");
		СекцияШапка.Номер                    = СокрЛП(НомерДок);
		СекцияШапка.ДатаСоставления          = Формат(ДатаДок, "Д (0)ДДММГГГГ");
		СекцияШапка.Организация              = "Организация: " + Константа.НазваниеОрганизации;
		СекцияШапка.КодОКПО                  = СокрЛП(Константа.КодОКПО);
		СекцияШапка.СтруктурноеПодразделение = "Структурное подразделение: " + "";
		СекцияШапка.КодПодразделения         = "";
		СекцияШапка.Отправитель              = "";
		СекцияШапка.Получатель               = Склад;
		СекцияШапка.КорСчет                  = "";
		Таб.ВывестиСекцию(СекцияШапка);
	
		// формирование строк
		ИтоговаяСумма = 0;
		СекцияСтрока = Таб.ПолучитьСекцию("Строка");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			//Сумма = Окр(Продукция.Стоимость*Количество, 2);
			
			СекцияСтрока.Наименование          = ?(ПустоеЗначение(Товар.ПолнНаименование) = 0,Товар.ПолнНаименование,Товар);
			СекцияСтрока.Код                   = Товар.Код;
			СекцияСтрока.КодЕдиницыИзмерения = Товар.ЕдиницаИзмерения.Код;
			СекцияСтрока.ЕдиницаИзмерения    = Товар.ЕдиницаИзмерения;
			СекцияСтрока.МассаНетто          = СокрЛ(Формат(Количество, "Ч 15.3."));
			СекцияСтрока.ЦенаЗаЕдиницу         = СокрЛ(Формат(Стоимость, "Ч 15.2.,"));
			СекцияСтрока.Сумма                 = СокрЛ(Формат(Сумма, "Ч 15.2.,"));
			Таб.ВывестиСекцию(СекцияСтрока);
		КонецЦикла;
		
		// формирование подвала
		Остаток = КоличествоСтрок() - Цел(КоличествоСтрок()/10);
		Если (Остаток = 2) или (Остаток = 3) или (Остаток = 4) Тогда
			Наимен = "наименования";
		Иначе
			Наимен = "наименований";
		КонецЕсли;
		СекцияПодвал = Таб.ПолучитьСекцию("Подвал");
		СекцияПодвал.ИтогоМассаНетто                = СокрЛ(Формат(Итог("Количество"), "Ч 15.3."));
		СекцияПодвал.ИтогоСумма                     = СокрЛ(Формат(Итог("Сумма"), "Ч 15.2.,"));
		СекцияПодвал.КоличествоНаименованийПрописью = Формат(КоличествоСтрок(), "ЧП") + " " + Наимен + ".";
		СекцияПодвал.ИтогоСуммаПрописью             = Формат(Итог("Сумма"), "ЧПДС");
		Таб.ВывестиСекцию(СекцияПодвал);
		
		// вывод результирующей таблицы на экран
		Таб.ПовторятьПриПечатиСтроки(18, 18);
		Таб.Опции(0,0,0,0,"МХ18","ОкноМХ18");
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Накладная на передачу готовой продукции в места хранения (форма №МХ-18)","");

КонецПроцедуры //Печать
	
//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
	Склад = глЗначениеПоУмолчанию("ОсновнойСклад");
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПодбор.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли;

	Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Количество.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Стоимость.ВыполнятьФормулуТолькоПриИзменении(1);
	НачальнаяДатаДокумента = ДатаДок;
	
	УправлениеЗакладками();
	Форма.ИспользоватьСлой("Основной, ВыпускПродукции",2);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура Подбор()
	ОткрытьПодбор("Справочник.Номенклатура","ГотоваяПродукция");
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если (ЭлементДиалога = "Товар") Тогда
	    Флаг = 0;
		ОткрытьФорму("Справочник.Номенклатура.ГотоваяПродукция");
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр)
	                                     
	Если ИдентЭлемДиалога = "Товар" Тогда
		Если (ВыбЗнач.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Продукция)
		   и (ВыбЗнач.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Полуфабрикат) Тогда
			Предупреждение("Выбранная номенклатура не является готовой продукцией или полуфабрикатом!");
			ФлагСтандОбр = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбораЗначения()
//_____________________________________________________________________________
Процедура ОбработкаПодбора(ВыбрНоменклатура)
	
	Если (ВыбрНоменклатура.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Продукция)
	   и (ВыбрНоменклатура.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Полуфабрикат) Тогда
		Предупреждение("Выбранная номенклатура не является готовой продукцией или полуфабрикатом!");
		Возврат;
	КонецЕсли;
		
	Кол = 1;
	Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
	    Возврат;
	ИначеЕсли Кол = 0 Тогда
		Возврат;
	КонецЕсли;

	НоваяСтрока();
	Товар = ВыбрНоменклатура;
	Количество = Кол;
	АктивизироватьСтроку();
	Пересчет(1);
КонецПроцедуры
              
//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(НомерЗакладки,ЗначениеЗакладки)
	Если НомерЗакладки = 1 Тогда
	    Форма.ИспользоватьСлой("Основной, ВыпускПродукции",2);
	Иначе
	    Форма.ИспользоватьСлой("Основной, Автосписание",2);
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;     
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.СуммаОперации = Итог("Сумма");
	Операция.Содержание = "Передача на склад гот.продукции";
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Накладная на передачу готовой продукции в места хранения (форма №МХ-18)";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");