Перем СчН02_МЦ;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// СформироватьПроводкиДляЦелейНалоговогоУчета()
//
// Параметры:
//  
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Формируются необходимые проводки для целей налогового
//  учета по оприходованию готовой продукции (только в
//  количественном выражении, т.к. стоимость выпущенной
//  продукции будет расчетитана в конце месяца).
//
Процедура СформироватьПроводкиДляЦелейНалоговогоУчета()
	               
	СчетУчетаН = ?(Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция, СчетПоКоду("Н02.03"), СчетПоКоду("Н02.07"));
	
	Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
    Операция.НомерЖурнала = "НУ";
	Операция.СодержаниеПроводки = "Передано на скл. гот. прод. (полуфабр.)";
	Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
	Операция.Дебет.Счет = СчетУчетаН;
	Операция.Дебет.Номенклатура = Товар;
	Операция.Количество = Количество;
	          
	// Если учет продукции в течение месяца ведется по плановой,
	// то отразим в НУ стоимость выпущенной продукции.
	Если Константа.СпособНалоговогоУчетаГПиПФ.Получить(ДатаДок) = Перечисление.СпособыНалоговогоУчетаГПиПФ.ПоПлановойСтоимости Тогда
		Операция.Сумма = Сумма;
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводкиДляЦелейНалоговогоУчета()

//******************************************************************************
// СписаниеМПЗДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СписаниеМПЗДляЦелейНалоговогоУчета(ТаблицаСписываемыхМПЗ, ТаблицаОстатков, ПереченьСтатейЗатрат)
	
	СписываетсяИнвентарь = 0;
	// При списании продукции (полуфабрикатов) в проводке указывается только количество.
	МПЗ = ТаблицаСписываемыхМПЗ.МПЗ;
	Если МПЗ.Вид() = "Материалы" Тогда
		Если ТаблицаСписываемыхМПЗ.Количество >= (ТаблицаОстатков.КоличествоНаСкладахНУ + ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ) Тогда
			СуммаСписания = ТаблицаОстатков.СуммаНаСкладахНУ;
			СписываетсяИнвентарь = ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ;
			ТаблицаСписываемыхМПЗ.Количество = ТаблицаСписываемыхМПЗ.Количество - ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ;
		Иначе
			Если ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ <> 0 Тогда
				Если ТаблицаСписываемыхМПЗ.Количество < ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ Тогда
					СписываетсяИнвентарь = ТаблицаСписываемыхМПЗ.Количество;
					ТаблицаСписываемыхМПЗ.Количество = 0;
				Иначе
					СписываетсяИнвентарь = ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ;
					ТаблицаСписываемыхМПЗ.Количество = ТаблицаСписываемыхМПЗ.Количество - ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ;
				КонецЕсли;
			КонецЕсли;
			СуммаСписания = Окр(ТаблицаСписываемыхМПЗ.Количество*(ТаблицаОстатков.СуммаНаСкладахНУ/ТаблицаОстатков.КоличествоНаСкладахНУ), 2, 1);
		КонецЕсли;
		
	Иначе // продукция (полуфабрикат)
		СуммаСписания = 0;
	КонецЕсли;
	
	// Уменьшим остаток МПЗ на списанное количество.
	ТаблицаОстатков.СуммаНаСкладахНУ = ТаблицаОстатков.СуммаНаСкладахНУ - СуммаСписания;
	ТаблицаОстатков.КоличествоНаСкладахНУ = ТаблицаОстатков.КоличествоНаСкладахНУ - ТаблицаСписываемыхМПЗ.Количество;
	ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ = ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ - СписываетсяИнвентарь;
	
	Если (СписываетсяИнвентарь > 0) и (МПЗ.Вид() = "Материалы") Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Переданы в производство МПЗ";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчН02_МЦ;
		Операция.Кредит.Субконто(1, МПЗ);
		Операция.Количество = СписываетсяИнвентарь;
		глСообщениеПроведения(глПереченьМПЗВСоставеОС(МПЗ,ТекущийДокумент()),ТекущийДокумент(),-1);
	КонецЕсли;
		
	Если (МПЗ.Вид() = "Материалы")	и (ТаблицаСписываемыхМПЗ.Количество = 0) и (СуммаСписания = 0) Тогда
		Возврат;
	Иначе		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Переданы в производство МПЗ";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = ТаблицаОстатков.СчетУчетаНУ;
		Операция.Кредит.Субконто(1, МПЗ); 
		
		Если  МПЗ.Вид() = "Материалы" Тогда
			СчетУчетаМатериалов = МПЗ.СубСчет10;
		Иначе
			Если МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция  Тогда
				СчетУчетаМатериалов = СчетПоКоду("43");  
			Иначе   
				СчетУчетаМатериалов = СчетПоКоду("21");  
			КонецЕсли;
		КонецЕсли;
		
		ОбъектыАналитикиНУ = глСчетИАналитикаРасходовНУ(Контекст, СчетПоКоду("20"), ТаблицаСписываемыхМПЗ.ВидНоменклатуры, СтатьяРасходов, Подразделение, ПереченьСтатейЗатрат, СчетУчетаМатериалов);
		СчетНУ = ОбъектыАналитикиНУ.Получить("Счет"); 
		Если ПустоеЗначение(Операция.Дебет.Счет) = 1 Тогда
			Операция.Дебет.Счет = СчетНУ;
			Для СчетчикЦикла = 1 По СчетНУ.КоличествоСубконто() Цикл
				ИдентификаторСубконто = СчетНУ.ВидСубконто(СчетчикЦикла,,).Идентификатор();
				Операция.Дебет.Субконто(СчетчикЦикла, ОбъектыАналитикиНУ.Получить(ИдентификаторСубконто));
			КонецЦикла;
		КонецЕсли;
		Операция.Сумма = СуммаСписания;
		Операция.Количество = ТаблицаСписываемыхМПЗ.Количество;
	КонецЕсли;
	
КонецПроцедуры // СписаниеМПЗДляЦелейНалоговогоУчета()

//******************************************************************************
// ПолучитьТаблицуСписываемыхМПЗ()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  ТаблицаСписываемыхМПЗ - таблица значений
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Формируется таблица МПЗ, которые необходмо списать для выпуска указанной в документе продукции.
//
Функция ПолучитьТаблицуСписываемыхМПЗ()
	                         
	ТаблицаСписываемыхМПЗ = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаСписываемыхМПЗ.НоваяКолонка("МПЗ");
	ТаблицаСписываемыхМПЗ.НоваяКолонка("ВидНоменклатуры");
	ТаблицаСписываемыхМПЗ.НоваяКолонка("Количество", "Число", 15, 3);
	
	Нормы = СоздатьОбъект("Справочник.НормыРасходов");
	Нормы.ИспользоватьДату(ДатаДок);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Нормы.ИспользоватьВладельца(Товар);
		Нормы.ВыбратьЭлементы();
		Пока Нормы.ПолучитьЭлемент() = 1 Цикл
			Если (Нормы.КолПрод  = 0) или (Нормы.ПометкаУдаления() = 1) Тогда
			Иначе
				КоличествоМПЗ = Количество * (Нормы.Норма / Нормы.КолПрод); 
				Если КоличествоМПЗ > 0 Тогда
				    ТаблицаСписываемыхМПЗ.НоваяСтрока();
					ТаблицаСписываемыхМПЗ.МПЗ             = Нормы.Элемент;
					ТаблицаСписываемыхМПЗ.ВидНоменклатуры = Товар.ВидНоменклатуры;
					ТаблицаСписываемыхМПЗ.Количество      = КоличествоМПЗ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ТаблицаСписываемыхМПЗ.Свернуть("МПЗ, ВидНоменклатуры", "Количество");        
	
	Возврат ТаблицаСписываемыхМПЗ;
	
КонецФункции // ПолучитьТаблицуСписываемыхМПЗ()

//******************************************************************************
// СписатьМПЗ()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Формируем проводки по списанию МПЗ в производство (на счет 20).
//
Функция СписатьМПЗ(ТаблицаСписываемыхМПЗ)
	                                        
	Сч20 = СчетПоКоду("20");
	Сч43 = СчетПоКоду("43");
	Сч21 = СчетПоКоду("21");
	
	СчН02_01 = СчетПоКоду("Н02.01");
	СчН02_03 = СчетПоКоду("Н02.03");
	СчН02_07 = СчетПоКоду("Н02.07");
	СчН02_МЦ = СчетПоКоду("Н02.МЦ");
	
	СписокМПЗ = СоздатьОбъект("СписокЗначений");
	ТаблицаСписываемыхМПЗ.Выгрузить(СписокМПЗ,,, "МПЗ");
	                                                                                  
	ТаблицаОстатков = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаСписываемыхМПЗ.Выгрузить(ТаблицаОстатков,,, "МПЗ, Количество");
	ТаблицаОстатков.Свернуть("МПЗ", "Количество");
	ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладах", "Число");
	ТаблицаОстатков.НоваяКолонка("СуммаНаСкладах", "Число");
	ТаблицаОстатков.НоваяКолонка("СчетУчета");
	ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладахНУ", "Число");
	ТаблицаОстатков.НоваяКолонка("КоличествоНаСкладахИнвентарьНУ", "Число");
	ТаблицаОстатков.НоваяКолонка("СуммаНаСкладахНУ", "Число");
	ТаблицаОстатков.НоваяКолонка("СчетУчетаНУ");	
	
	БИ10 = СоздатьОбъект("БухгалтерскиеИтоги"); БИ10.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ10.ИспользоватьСубконто(ВидыСубконто.Материалы, СписокМПЗ, 2);
	БИ10.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БИ10.ВключатьСубсчета(-1);
	БИ10.ВыполнитьЗапрос(,ТекущийДокумент(), "10",,,,, "СК");
		
	БИ21и43 = СоздатьОбъект("БухгалтерскиеИтоги");  БИ21и43.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ21и43.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокМПЗ, 2);
	БИ21и43.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БИ21и43.ВыполнитьЗапрос(,ТекущийДокумент(), "21, 43",,,,, "СК");
	
	БИ_НУ = СоздатьОбъект("БухгалтерскиеИтоги");  БИ_НУ.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ_НУ.ИспользоватьСубконто();
	БИ_НУ.ВыполнитьЗапрос(,ТекущийДокумент(), "Н02.01, Н02.03, Н02.07,Н02.МЦ",,,,, "СК");
		
	ТаблицаОстатков.ВыбратьСтроки();
	Пока ТаблицаОстатков.ПолучитьСтроку() = 1 Цикл
		МПЗ = ТаблицаОстатков.МПЗ;
		Если ПустоеЗначение(МПЗ) = 1 Тогда
			Продолжить;
		КонецЕсли;
		КоличествоНаСкладе = 0;
		Если МПЗ.Вид() = "Материалы" Тогда
			ТаблицаОстатков.СчетУчета = МПЗ.СубСчет10;
			БухИтоги = БИ10;
			МестоХранения = МестоХраненияМатериалов;
			
		ИначеЕсли МПЗ.Вид() = "Номенклатура" Тогда
			МестоХранения = МестоХраненияПолуфабрикатов;
			Если МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
				ТаблицаОстатков.СчетУчета = Сч43;
				БухИтоги = БИ21и43;
				
			Иначе // полуфабрикат
				ТаблицаОстатков.СчетУчета = Сч21;
				БухИтоги = БИ21и43;
			КонецЕсли;
		КонецЕсли;
		
		Если БухИтоги.ПолучитьСчет(, ТаблицаОстатков.СчетУчета) = 1 Тогда
			Если БухИтоги.ПолучитьСубконто(1,, МПЗ) = 1 Тогда
				ТаблицаОстатков.СуммаНаСкладах = Макс(БухИтоги.СКД("С"), 0);
				ТаблицаОстатков.КоличествоНаСкладах = БухИтоги.СКД("К");
				Если БухИтоги.ПолучитьСубконто(ВидыСубконто.МестаХранения,, МестоХранения) = 1 Тогда
					КоличествоНаСкладе = БухИтоги.СКД("К");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если КоличествоНаСкладе < ТаблицаОстатков.Количество Тогда
			ТекстСообщения = "На складе "+КоличествоНаСкладе+" "+МПЗ.ЕдиницаИзмерения+
				" из необходимых "+ТаблицаОстатков.Количество+" "+МПЗ.ЕдиницаИзмерения+" "+
				МПЗ + " ("+ТаблицаОстатков.СчетУчета+")";
			
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат 0;
			
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;
		
		// Предварительные операции по налоговому учету.
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			Если МПЗ.Вид() = "Материалы" Тогда
				ТаблицаОстатков.СчетУчетаНУ = СчН02_01;
				ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ = 0;
				
			ИначеЕсли МПЗ.Вид() = "Номенклатура" Тогда
				Если МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
					ТаблицаОстатков.СчетУчетаНУ = СчН02_03;
				ИначеЕсли МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
					ТаблицаОстатков.СчетУчетаНУ = СчН02_07;
				КонецЕсли;
			КонецЕсли;
			
			Если БИ_НУ.ПолучитьСчет(, ТаблицаОстатков.СчетУчетаНУ) = 1 Тогда
				Если БИ_НУ.ПолучитьСубконто(1,, МПЗ) = 1 Тогда
					ТаблицаОстатков.СуммаНаСкладахНУ = Макс(БИ_НУ.СКД("С"), 0);
					ТаблицаОстатков.КоличествоНаСкладахНУ = БИ_НУ.СКД("К");
				КонецЕсли;
			КонецЕсли; 
			
			Если ТаблицаОстатков.СчетУчетаНУ = СчН02_01 Тогда
				Если БИ_НУ.ПолучитьСчет(, СчН02_МЦ) = 1 Тогда
					Если БИ_НУ.ПолучитьСубконто(1,, МПЗ) = 1 Тогда
						ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ = БИ_НУ.СКД("К");
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли; 

			
			Если (ТаблицаОстатков.КоличествоНаСкладахНУ + ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ) < ТаблицаОстатков.Количество Тогда
				ТекстСообщения = "По данным налогового учета на складах "+(ТаблицаОстатков.КоличествоНаСкладахНУ+ТаблицаОстатков.КоличествоНаСкладахИнвентарьНУ)+" "+МПЗ.ЕдиницаИзмерения+
					" из необходимых "+ТаблицаОстатков.Количество+" "+МПЗ.ЕдиницаИзмерения+" "+
					МПЗ + " ("+ТаблицаОстатков.СчетУчета+")";
				
				Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат 0;
				
				Иначе
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;  
	
	Если Автосписание = 1 Тогда
		ПереченьСтатейЗатрат = глПолучитьПереченьСтатейЗатрат(ДатаДок); 
		
	КонецЕсли;

	
	ТаблицаСписываемыхМПЗ.ВыбратьСтроки();
	Пока ТаблицаСписываемыхМПЗ.ПолучитьСтроку()=1 Цикл
		МПЗ = ТаблицаСписываемыхМПЗ.МПЗ;
		Если ТаблицаСписываемыхМПЗ.Количество = 0 Тогда
			Продолжить;
			
		ИначеЕсли ПустоеЗначение(МПЗ) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		НомСтроки = 0;
		ТаблицаОстатков.НайтиЗначение(МПЗ, НомСтроки, "МПЗ");
		ТаблицаОстатков.ПолучитьСтрокуПоНомеру(НомСтроки);
		
		Если ТаблицаСписываемыхМПЗ.Количество >= ТаблицаОстатков.КоличествоНаСкладах Тогда
			СуммаСписания = ТаблицаОстатков.СуммаНаСкладах;
			
		Иначе   
			СуммаСписания = 0;
			Если ТаблицаОстатков.СуммаНаСкладах <> 0 Тогда
				СуммаСписания = Окр(ТаблицаСписываемыхМПЗ.Количество*(ТаблицаОстатков.СуммаНаСкладах/ТаблицаОстатков.КоличествоНаСкладах), 2, 1);
			КонецЕсли;
		КонецЕсли;
	
		// Уменьшим остаток МПЗ на списанное количество.
		ТаблицаОстатков.СуммаНаСкладах = ТаблицаОстатков.СуммаНаСкладах - СуммаСписания;
		ТаблицаОстатков.КоличествоНаСкладах = ТаблицаОстатков.КоличествоНаСкладах - ТаблицаСписываемыхМПЗ.Количество;
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = Сч20;
		Операция.Дебет.Субконто(1, ТаблицаСписываемыхМПЗ.ВидНоменклатуры);
		Операция.Дебет.Субконто(2, СтатьяРасходов);
		Операция.Дебет.Субконто(3, Подразделение);
		Операция.Кредит.Счет = ТаблицаОстатков.СчетУчета;
		Операция.Кредит.Субконто(1, МПЗ);
		Операция.Количество = ТаблицаСписываемыхМПЗ.Количество;
		Операция.Сумма = СуммаСписания;
		Если МПЗ.Вид() = "Материалы" Тогда
			Операция.Кредит.Субконто(2, МестоХраненияМатериалов);
			Операция.СодержаниеПроводки = "Переданы в производство материалы";
			Операция.НомерЖурнала = "МТ";
			
		ИначеЕсли МПЗ.Вид() = "Номенклатура" Тогда
			Операция.Кредит.Субконто(2, МестоХраненияПолуфабрикатов);
			Если МПЗ.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
				Операция.СодержаниеПроводки = "Передана в производство продукция";
				
			Иначе // полуфабрикат
				Операция.СодержаниеПроводки = "Переданы в производство полуфабрикаты";
			КонецЕсли;
			Операция.НомерЖурнала = "ТВ";
		КонецЕсли;
		
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			Если ПустоеЗначение(СтатьяРасходов.ВидРасходовДляНалоговогоУчета) = 1 Тогда
				ТекстСообщения = "Для статьи производственных расходов, указанной на закладке ""Автосписание"" не задан вид расходов.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат 0;
			КонецЕсли;
			СписаниеМПЗДляЦелейНалоговогоУчета(ТаблицаСписываемыхМПЗ, ТаблицаОстатков, ПереченьСтатейЗатрат);
		КонецЕсли;
	    
	КонецЦикла;
	
	Возврат 1;
	
КонецФункции // СписатьМПЗ()
////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

Процедура ОбработкаПроведения()
    
	Сч21 = СчетПоКоду("21");
	Сч40 = СчетПоКоду("40");
	Сч43 = СчетПоКоду("43");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Сумма = 0 Тогда
		    Продолжить;
		КонецЕсли;
		
		СчетУчета = ?(Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция, Сч43, Сч21);
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ТВ";
		Операция.СодержаниеПроводки = "Передано на скл.гот.прод. (полуфабр.)";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетУчета;
		Операция.Дебет.МестаХранения = Склад;
		Операция.Дебет.Номенклатура = Товар;
		Операция.Кредит.Счет = Сч40;
		Операция.Кредит.ВидыНоменклатуры = Товар.ВидНоменклатуры;
		Операция.Кредит.СтоимостьВыпуска = Перечисление.СтоимостьВыпуска.ПлановаяСтоимость;
		Операция.Количество = Количество;
		Операция.Сумма = Сумма;
		                                              
		Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
			СформироватьПроводкиДляЦелейНалоговогоУчета();
		КонецЕсли;
	КонецЦикла;

	Если Автосписание = 1 Тогда // надо списать в производство необходимые для выпуска продукции материалы и полуфабрикаты (по нормативам)
	    ТаблицаСписываемыхМПЗ = ПолучитьТаблицуСписываемыхМПЗ();
		
		Если ТаблицаСписываемыхМПЗ.КоличествоСтрок() > 0 Тогда
			Если Автосписание = 1 Тогда
				Если МестоХраненияМатериалов.Выбран() = 0 Тогда
					ТекстСообщения = "Укажите место хранения списываемых автоматически материалов.";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				Если МестоХраненияПолуфабрикатов.Выбран() = 0 Тогда          
					ТекстСообщения = "Укажите место хранения списываемых автоматически полуфабрикатов.";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				Если СтатьяРасходов.Выбран() = 0 Тогда          
					ТекстСообщения = "Укажите статью расходов.";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если СписатьМПЗ(ТаблицаСписываемыхМПЗ) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры
