////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;

//******************************************************************************

Функция ВалютаДокумента(Д)
	
	Если Д.Выбран() = 1 Тогда
		Если (Д.Договор.ВалютаДоговора.Выбран() = 1) Тогда
		    Возврат Д.Договор.ВалютаДоговора;
		КонецЕсли;
		
	ИначеЕсли ТипЗначенияСтр(Субконто2) = "Справочник" Тогда
		Если Субконто2.Вид() = "Договоры" Тогда
			Возврат Субконто2.ВалютаДоговора;
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции // ВалютаДокумента()

//****************************************************************************** 
Функция ВалСуммаДокумента(Д)
	Если Д.Выбран() = 1 Тогда
		Если Д.Вид() = "ПередачаОС" Тогда
			ИтогВсего = Д.Стоимость*Д.КоличествоСтрок();
		ИначеЕсли Д.Вид() = "ПередачаНМА" Тогда
			ИтогВсего = Д.Стоимость;
		Иначе
			ИтогВсего = Д.Итог("Всего");
		КонецЕсли;
		Возврат ИтогВсего;
	КонецЕсли;
	

	Возврат "";
КонецФункции // ВалСуммаДокумента()
//*****************************************************************************
// КурсДокумента()
//
// Возвращаемое значение:
//  Число - значение курса.
// 
// Вызывается из формул элементов диалога:
//  Колонка "Курс док.".
//
// Описание:
//  Возвращает значение курса, указанного в выбранном документе.
//
Функция КурсДокумента(Д)
	
	Если Д.Выбран() = 1 Тогда
		Если Д.Курс <> 0 Тогда
		    Возврат СокрП(Формат(Д.Курс, "Ч15.4"));
		КонецЕсли;
	КонецЕсли;

	Возврат "";
	
КонецФункции // КурсДокумента()

//*******************************************************************************
Процедура УправлениеВидимостьюСуммовыхРазниц()
	
	Видимость = 0;

	Если ТипЗначенияСтр(Субконто2) = "Справочник" Тогда
		Если Субконто2.Вид()="Договоры" Тогда
			Если ПустоеЗначение(Субконто2.ВалютаДоговора)=0 Тогда
				Если Субконто2.ОплатаДоговора=1 Тогда
					Видимость = 1;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	

	Если Валютный = 2 Тогда
		Видимость = 0;
	КонецЕсли;
	
	Форма.РамкаСР.Видимость(Видимость);
    Форма.ПодписьКурса.Видимость(Видимость);
	Форма.ВалютаДоговора.Видимость(Видимость);
	Форма.КурсОплаты.Видимость(Видимость);
	Форма.КурсДок.Видимость(Видимость);
	
КонецПроцедуры // УправлениеВидимостьюВалютыПродажиПокупки()

//****************************************************************************** 
Процедура ПриВыбореДокументаПоставки()
	
	Если (ВалютаДокумента(ДокументПоставки)<>"") Тогда
		КурсОплаты = ВалютаДокумента(ДокументПоставки).Курс.Получить(ДатаДок);
		Кратность = ВалютаДокумента(ДокументПоставки).Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность = 0, 1, Кратность);
	Иначе
		КурсОплаты = 0;
		Кратность = 1;
	КонецЕсли;
	
	УправлениеВидимостьюСуммовыхРазниц();
	
КонецПроцедуры	

//_____________________________________________________________________________
Процедура ПриВыбореПризнакаВалютный()
	Если Валютный = 2 Тогда
	    ФлагВидимости = 1;
		Если Валюта.Выбран() = 0 Тогда
			Валюта = глЗначениеПоУмолчанию("ОсновнаяВалюта");
		КонецЕсли;
	Иначе
	    ФлагВидимости = 0;
		Если Валюта.Выбран() = 1 Тогда
			Валюта = "";
		КонецЕсли;
	КонецЕсли;
	УправлениеВидимостьюСуммовыхРазниц();
	Форма.Валюта.Видимость(ФлагВидимости);
	Форма.РамкаВалюты.Видимость(ФлагВидимости);
КонецПроцедуры //ПриВыбореПризнакаВалютный
//_____________________________________________________________________________
Функция ПоказатьКурс()
	Перем Стр;

	Если (Валютный = 2) и (Валюта.Выбран() = 1) Тогда
		Стр = Валюта.Курс.Получить(ДатаДок);
	Иначе
		Стр = "";
	КонецЕсли;

	Возврат Стр;
КонецФункции //ПоказатьКурс

//******************************************************************************
// ПриВыбореСубконто(ТекЭлемент)
//
// Параметры:
//  ТекЭлемент - Строка. Идентификатор текущей колонки.
//
// Вызывается из формул элементов диалога:
//  Субконто1, Субконто2, Субконто3.
//
// Описание:
//  Проверяется соотвествие контрагента и договора, указанного в аналитике.
//
Процедура ПриВыбореСубконто(ТекЭлемент = "")
	
	ИдентификаторРеквизита = ?(ТекЭлемент = "", Форма.АктивныйЭлемент(), ТекЭлемент);
	ЗначениеРеквизита = ПолучитьАтрибут(ИдентификаторРеквизита);
	НомерСубконто = Число(Прав(ИдентификаторРеквизита, 1));
	Если ТипЗначенияСтр(ЗначениеРеквизита) = "Справочник" Тогда
		Если ЗначениеРеквизита.Вид() = "Контрагенты" Тогда
			Если НомерСубконто < 3 Тогда
				ИдентификаторСледующегоРеквизита = Лев(ИдентификаторРеквизита, СтрДлина(ИдентификаторРеквизита)-1) + (НомерСубконто + 1);
				ЗначениеСледующегоРеквизита = ПолучитьАтрибут(ИдентификаторСледующегоРеквизита);
				Если ТипЗначенияСтр(ЗначениеСледующегоРеквизита) = "Справочник" Тогда
					Если ЗначениеСледующегоРеквизита.Вид() = "Договоры" Тогда
						Если ЗначениеРеквизита <> ЗначениеСледующегоРеквизита.Владелец Тогда
						    УстановитьАтрибут(ИдентификаторСледующегоРеквизита, ЗначениеРеквизита.ОсновнойДоговор);
							Если (ВалютаДокумента(ДокументПоставки)<>"") Тогда
								КурсОплаты = ВалютаДокумента(ДокументПоставки).Курс.Получить(ДатаДок);
								Кратность = ВалютаДокумента(ДокументПоставки).Кратность.Получить(ДатаДок);
								Кратность = ?(Кратность = 0, 1, Кратность);
								
							Иначе
								КурсОплаты = 0;
								Кратность = 1;
							КонецЕсли;
							
							УправлениеВидимостьюСуммовыхРазниц();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если (НомерСубконто = 1) и (ПустоеЗначение(Выдать) = 1) Тогда
			    Выдать = глПолноеНаименование(ЗначениеРеквизита);
				Если ЗначениеРеквизита.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо Тогда
					ПоДокументу = "паспорту " + СокрП(ЗначениеРеквизита.ДокументСерия) + 
								" №" + СокрП(ЗначениеРеквизита.ДокументНомер) + 
								", выдан " + СокрП(ЗначениеРеквизита.ДокументКемВыдан) + " " +
								СокрЛП(Формат(ЗначениеРеквизита.ДокументДатаВыдачи, "Д (0)ДДММММГГГГ"));
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ЗначениеРеквизита.Вид() = "Договоры" Тогда
			Если (ПустоеЗначение(ЗначениеРеквизита) = 0) и (НомерСубконто > 1) Тогда
				ИдентификаторПредыдущегоРеквизита = Лев(ИдентификаторРеквизита, СтрДлина(ИдентификаторРеквизита)-1) + (НомерСубконто - 1);
				ЗначениеПредыдущегоРеквизита = ПолучитьАтрибут(ИдентификаторПредыдущегоРеквизита);
				Если ТипЗначенияСтр(ЗначениеПредыдущегоРеквизита) = "Справочник" Тогда
					Если ЗначениеПредыдущегоРеквизита.Вид() = "Контрагенты" Тогда
						Если ЗначениеРеквизита.Владелец <> ЗначениеПредыдущегоРеквизита Тогда
						    УстановитьАтрибут(ИдентификаторПредыдущегоРеквизита, ЗначениеРеквизита.Владелец);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если (ВалютаДокумента(ДокументПоставки)<>"") Тогда
				КурсОплаты = ВалютаДокумента(ДокументПоставки).Курс.Получить(ДатаДок);
				Кратность = ВалютаДокумента(ДокументПоставки).Кратность.Получить(ДатаДок);
				Кратность = ?(Кратность = 0, 1, Кратность);
			
			Иначе
				КурсОплаты = 0;
				Кратность = 1;
			КонецЕсли;
							
			УправлениеВидимостьюСуммовыхРазниц();
			Если (ЗначениеРеквизита.Наименование = глИмяДоговораДляПлатежейБезДоговора) и 
				 (КоррСчет <> СчетПоКоду("60.2")) и (КоррСчет <> СчетПоКоду("60.22")) Тогда
				Предупреждение("Служебный договор ""Без договора..."" можно использовать
							   |только при явно указанном счете учета полученных авансов. 
							   |Укажите другой договор.");
				УстановитьАтрибут(ИдентификаторРеквизита, "");
			КонецЕсли;
			
		ИначеЕсли ЗначениеРеквизита.Вид() = "Сотрудники" Тогда
			Если (НомерСубконто = 1) и (ПустоеЗначение(Выдать) = 1) Тогда
			    Выдать = ЗначениеРеквизита.Наименование;
				ПоДокументу = "паспорту " + СокрП(ЗначениеРеквизита.ДокументСерия) +
							" №" + СокрП(ЗначениеРеквизита.ДокументНомер) + 
							", выдан " + СокрП(ЗначениеРеквизита.ДокументКемВыдан) + " " +
							СокрЛП(Формат(Субконто1.ДокументДатаВыдачи,"Д (0)ДДММММГГГГ"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСубконто()

//_____________________________________________________________________________
Процедура ПриВыбореСчета()
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто"+А,КоррСчет.ВидСубконто(А));
		
		// Контроль использования служебного договора.
		ПриВыбореСубконто("Субконто"+А);
	КонецЦикла;
    ФлагВидимостиКоличества = 0;
	Если КоррСчет.Выбран() = 1 Тогда
		ФлагВидимостиКоличества = КоррСчет.Количественный;
	КонецЕсли;
	Форма.ПодписьКоличества.Видимость(ФлагВидимостиКоличества);
	Форма.Количество.Видимость(ФлагВидимостиКоличества); 
	
	Если (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		Если Валютный = 2 Тогда
			СчетКассы = СчетПоКоду("50.11");
		Иначе
			СчетКассы = СчетПоКоду("50.1");
		КонецЕсли;
		глПроверкаКорректныхПроводок(КоррСчет,СчетКассы);
	КонецЕсли;
КонецПроцедуры //ПриВыбореСчета

//_____________________________________________________________________________
Процедура ПриВыбореВидаДвижения()
		Если (ДвижениеДенежныхСредств.Выбран() = 1) Тогда
		Если ПустоеЗначение(ДвижениеДенежныхСредств.Счет) = 0 Тогда
		    КоррСчет = ДвижениеДенежныхСредств.Счет;
			ПриВыбореСчета();
		КонецЕсли;
		Для а = 1 по 3 Цикл
			Если ПустоеЗначение(ДвижениеДенежныхСредств.ПолучитьАтрибут("Субконто" + а)) = 0 Тогда
				УстановитьАтрибут("Субконто" + а, ДвижениеДенежныхСредств.ПолучитьАтрибут("Субконто" + а));
				ПриВыбореСубконто("Субконто"+А);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры 

//_____________________________________________________________________________  
Процедура Печать()
	НомерДокПечатнойФормы = глПреобразоватьНомерДок(НомерДок, 0, 0);

	Таб = СоздатьОбъект("Таблица");
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\1cbro.mxl";
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
	Иначе
		Таб.ИсходнаяТаблица("Таблица");
	КонецЕсли;
	Если Валютный = 2 Тогда
	    Если ПустоеЗначение(Валюта.ИмяФайлаПрописи) = 1 Тогда
	        Предупреждение("Для выбранной валюты не указан файл прописи.");
		ИначеЕсли ФС.СуществуетФайл(КаталогИБ()+Валюта.ИмяФайлаПрописи) = 0 Тогда
	        Предупреждение("Для выбранной валюты неверно указан файл прописи.");
		Иначе
			Пропись(КаталогИБ()+Валюта.ИмяФайлаПрописи);
	    КонецЕсли;
	КонецЕсли;
	ПредставлениеГода = Лев(ДатаГод(ДатаДок),3);
	Таб.Вывести();
	Пропись("");
	Таб.Опции(0,0,0,0,"ОпцииПечатиРасходногоОрдера","ОкноРКО");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать расходного кассового ордера","");
КонецПроцедуры

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	НомерЧекаККМ  = 0;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

	ФормироватьПроводки = 1;
	Валютный = 1;
КонецПроцедуры //ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОчиститьВыдать.Доступность(0);
	КонецЕсли;
    УправлениеВидимостьюСуммовыхРазниц();
	ФлагВидимостиКоличества = 0;
	Если КоррСчет.Выбран() = 1 Тогда
		ФлагВидимостиКоличества = КоррСчет.Количественный;
	КонецЕсли;
	Форма.ПодписьКоличества.Видимость(ФлагВидимостиКоличества);
	Форма.Количество.Видимость(ФлагВидимостиКоличества);

	ПриВыбореПризнакаВалютный(); 
	
	НачальнаяДатаДокумента = ДатаДок;
	Активизировать("НомерДок",);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры //ПриОткрытии
//_____________________________________________________________________________
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если ИдентЭлемДиалога = "Выдать" Тогда
		ОткрытьФорму("Справочник.Сотрудники");

	ИначеЕсли (ИдентЭлемДиалога = "КоррСчет") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		Если Валютный = 2 Тогда
		    СчетКассы = СчетПоКоду("50.11");
		Иначе
		    СчетКассы = СчетПоКоду("50.1");
		КонецЕсли;
	    СписокКорректныхПроводок.Установить("Счет", СчетКассы);
	    СписокКорректныхПроводок.Установить("Корреспонденция", 0);
		глЗначениеОтбора = СписокКорректныхПроводок;
	ИначеЕсли ИдентЭлемДиалога = "ДокументПоставки" Тогда
		
		МенюП = СоздатьОбъект("СписокЗначений");
		МенюП.ДобавитьЗначение("УслугиСтороннихОрганизаций");
		МенюП.ДобавитьЗначение("ПоступлениеТоваров");
		МенюП.ДобавитьЗначение("ПоступлениеМатериалов");
		МенюП.ДобавитьЗначение("ПоступлениеОборудования");
		МенюП.ДобавитьЗначение("ПоступлениеОС");
		МенюП.ДобавитьЗначение("ПоступлениеНМА");

		Меню = МенюП;
		
		ТабДок = СоздатьОбъект("ТаблицаЗначений");	
		ТабДок.НоваяКолонка("Документ","Документ",,,"Документ",40);
		ТабДок.НоваяКолонка("Валюта",,,,"Валюта",8);
		ТабДок.НоваяКолонка("Курс","Число",10,4,,14);
		ТабДок.НоваяКолонка("Сумма","Число",14,2,,18);
		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПоЗначению(,ДатаДок,"Договор",Субконто2);
		Пока Док.ПолучитьДокумент()=1 Цикл          
			ТекДок = Док.ТекущийДокумент();
			Если ТекДок.Проведен()=0 Тогда
				Продолжить;
			КонецЕсли;	   
			
			Если Меню.Принадлежит(ТекДок.Вид())=0 Тогда
				Продолжить;
			КонецЕсли;	                         
			                
			ТабДок.НоваяСтрока();
			ТабДок.Документ = ТекДок;
			ТабДок.Валюта   = ?(ВалютаДокумента(ТекДок)="","Руб.",ВалютаДокумента(ТекДок));;
			ТабДок.Курс     = КурсДокумента(ТекДок);
			ТабДок.Сумма    = ВалСуммаДокумента(ТекДок);
		КонецЦикла;	                    
		
		Если ТабДок.КоличествоСтрок()<>0 Тогда
			НомСтр = 0;
			Если ТабДок.ВыбратьСтроку(НомСтр,"Выберите документ поставки")=0 Тогда
				ФлагСтандОбр = 0;
				Возврат;
			КонецЕсли;	        
			ДокументПоставки = ТабДок.ПолучитьЗначение(НомСтр,"Документ");
			ПриВыбореДокументаПоставки();
			ФлагСтандОбр = 0;
			Возврат;
			Иначе	
		Предупреждение("Нет документов для подбора.");
			ФлагСтандОбр = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения
//_____________________________________________________________________________
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если ИдентЭлемДиалога = "Выдать" Тогда
		Если ВыбЗнач.Выбран() = 1 Тогда
		    Выдать = ВыбЗнач.Наименование;
			ПоДокументу = "паспорту "+СокрП(ВыбЗнач.ДокументСерия)+
				" №"+СокрП(ВыбЗнач.ДокументНомер)+", выдан "+СокрП(ВыбЗнач.ДокументКемВыдан)+" "+
				СокрЛП(Формат(ВыбЗнач.ДокументДатаВыдачи,"Д (0)ДДММММГГГГ"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ОбработкаВыбораЗначения
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.Содержание = "Выдача из кассы: "+Основание;
	Если Валютный = 2 Тогда
		Курс = Валюта.Курс.Получить(ДатаДок);
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0,1,Кратность);
		СуммаРКО = Окр(Сумма*Курс/Кратность,2,1);
	Иначе
		Валюта = "";
		СуммаРКО = Сумма;
	КонецЕсли;
	Операция.СуммаОперации = СуммаРКО;
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Функция ПризнакПробитияЧека()
    
	Если НомерЧекаККМ <> 0 Тогда
  		Если НомерЧекаККМ > 0  Тогда
			Возврат "№ чека: "+СокрЛП(НомерЧекаККМ);
		Иначе
			Возврат "Чек пробит";
		КонецЕсли;
	Иначе
		Возврат "";
    КонецЕсли;
	
КонецФункции

//******************************************************************************
Процедура ПечатьЧека()
	Если НомерЧекаККМ <> 0 Тогда
	    Предупреждение("Чек уже пробит на фискальном регистраторе!",60);
		Возврат;
	ИначеЕсли глФРВкл=0 Тогда
	    Предупреждение("Фискальный регистратор не подключен!",60);
		Возврат;
	ИначеЕсли ПометкаУдаления()=1 Тогда
	    Предупреждение("Документ помечен на удаление, поэтому" + РазделительСтрок +
		               "нельзя пробить чек на фискальном регистраторе!",60);
		Возврат;
	ИначеЕсли Проведен()=0 Тогда
		Если Вопрос("Провести документ и пробить чек на фискальном регистраторе?","Да+Нет")="Нет" Тогда
		    Возврат;
		КонецЕсли;
		Попытка
			Записать();
			Провести();
		Исключение
			Возврат;
		КонецПопытки;
	ИначеЕсли Модифицированность()=1 Тогда
		Если Вопрос("Сохранить документ и пробить чек на фискальном регистраторе?","Да+Нет")="Нет" Тогда
		    Возврат;
		КонецЕсли;
		Попытка
			Записать();
		Исключение
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	Список = СоздатьОбъект("ТаблицаЗначений");
	Список.НоваяКолонка("ТовНаим"   , "Строка");
	Список.НоваяКолонка("Цена"      , "Число");
	Список.НоваяКолонка("Количество", "Число");
	Список.НоваяКолонка("НДС"       , "Число");
	
	Список.НоваяСтрока();
	Список.ТовНаим    = ?(ПустаяСтрока(Выдать)=0,"Выдано ","")+СокрЛП(СокрЛП(Выдать)+" "+СокрЛП(Основание));
	Список.Цена       = Сумма;
	Список.Количество = 1;
	Список.НДС        = 0;
	
	СуммаЧека         = Сумма;
	Получено          = Сумма;
	Скидка            = 0;
	ПризнВозврата     = 1;
	НомерСекции       = 1;
	НомерЧека         = 0;
    
	Если глФРПечататьЧек(Список, СуммаЧека, Получено, Скидка, ПризнВозврата, НомерСекции, НомерЧека) = 1 Тогда
		НомерЧекаККМ = ?(НомерЧека = 0, -1, НомерЧека);
		ПриЗаписиПерепроводить(0);
		Записать();
		ПриЗаписиПерепроводить(1);
	КонецЕсли;
	
КонецПроцедуры
//******************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Расходный кассовый ордер";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");