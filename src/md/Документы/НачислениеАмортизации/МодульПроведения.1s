////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем БухИт;
Перем СуммаОперации;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// БылаМодернизация(ОсновноеСредство)
//
// Параметры:
//  ОсновноеСредство - Справочник.ОсновныеСредства.
//
// Возвращаемое значение:
//  1 - в этом месяце была модернизация.
//  2 - в этом месяце не было модернизации.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Определяет была ли модернизация объекта ОС.
//
Функция БылаМодернизация(ОсновноеСредство)
	                
	Модернизирован = 0;
	ПериодическийРеквизит = СоздатьОбъект("Периодический");
	ПериодическийРеквизит.ИспользоватьОбъект("ОбъектМодернизирован", ОсновноеСредство);
	ПериодическийРеквизит.ВыбратьЗначения(НачМесяца(ДатаДок), КонМесяца(ДатаДок));
	Если ПериодическийРеквизит.ПолучитьЗначение() = 1 Тогда
		Если ПериодическийРеквизит.Значение = 1 Тогда
			Модернизирован = 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Модернизирован;
	
КонецФункции // БылаМодернизация()

//******************************************************************************
//  ВключениеКапитальныхВложенийВРасходы()
//
// Описание:
// Включение не более 10% капитальных вложений в состав расходов.
//
Процедура ВключениеКапитальныхВложенийВРасходы()
	
	ВариантУчетаРасходовПоАмортизационнойПремии = Константа.ВариантУчетаРасходовПоАмортизационнойПремии.Получить(ДатаДок);
	Ит = СоздатьОбъект("БухгалтерскиеИтоги"); Ит.ИспользоватьРазделительУчета(ЮрЛицо);
	Ит.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
	Ит.ВыполнитьЗапрос(НачМесяца(ДатаДок), ДатаДок, "Н05.КВ",,, 1,, "С");
	Ит.ВыбратьСубконто(ВидыСубконто.ОсновныеСредства);
	Пока Ит.ПолучитьСубконто(ВидыСубконто.ОсновныеСредства) = 1 Цикл
		КапитальныеВложенияВключенныеВРасходы = Ит.СНД(); 
		Если КапитальныеВложенияВключенныеВРасходы = 0 Тогда
		    Продолжить;
		КонецЕсли; 
		
		ОС = Ит.Субконто(ВидыСубконто.ОсновныеСредства);
		Если ОС.ЭтоГруппа() = 1 Тогда
		    Продолжить;
		КонецЕсли; 
		
		СведенияОбОС = глРасчетАмортизацииОС(ОС, ДатаДок);
		РассчитаннаяАмортизацияНалог = СведенияОбОС.Получить("РассчитаннаяАмортизацияНалог");
		Если РассчитаннаяАмортизацияНалог = 0 Тогда
		    Продолжить;
		КонецЕсли;  
		
		Если ВариантУчетаРасходовПоАмортизационнойПремии = Перечисление.ВариантыУчетаРасходовПоАмортизационнойПремии.ВСоставеКосвенныхРасходов Тогда
			
			СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(Перечисление.ВидыРасходов.КосвенныеРасходы, Перечисление.ГруппыВидыРасходов.АмортизационнаяПремия, "");
			СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
			
		Иначе
			
			СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(ОС.ВидРасхода.Получить(ДатаДок), ОС.ЭлементРасхода.Получить(ДатаДок), ОС.Объект.Получить(ДатаДок), ДатаДок);
			СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
			
			Если ПустоеЗначение(СчетРасходов) = 1 Тогда
				ТекстСообщения = "На закладке ""Налоговый учет"" неверно указано направление отнесения расходов по начисленной амортизации для ОС: "
				+ ОС.Наименование + ", инв.№" + ОС.Код + ".";
				глНеПроводить(Контекст, ТекстСообщения, ОС.ТекущийЭлемент());
				Возврат;
			КонецЕсли;
		    			
		КонецЕсли;
		
		СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, ОС.СчетЗатрат.Получить(ДатаДок), ОС.Субконто1.Получить(ДатаДок), СчетРасходов);
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Включение кап.вложений в расходы";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Если ПустоеЗначение(СчетРасходов) = 0 Тогда
			Операция.Дебет.Счет = СчетРасходов;
			Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
			Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
			Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
		КонецЕсли;

		Если (ДатаДок>='01.01.2006') И (ПустоеЗначение(ОС.МатериалДляОтраженияВСоставеМПЗ)=0) Тогда
			Операция.Кредит.Счет = СчетПоКоду("Н05.МЦ");
		Иначе
			
			Операция.Кредит.Счет = СчетПоКоду("Н05.01");
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие;
		КонецЕсли;
        
		Операция.Кредит.ОсновныеСредства = ОС;
		Операция.Сумма = КапитальныеВложенияВключенныеВРасходы; 
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "ОС";
		Операция.СодержаниеПроводки = "Включение кап.вложений в расходы";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчетПоКоду("Н05.КВ");
		Операция.Кредит.ОсновныеСредства = ОС;
		Операция.Сумма = КапитальныеВложенияВключенныеВРасходы; 
	КонецЦикла; 
	Операция.Записать();
КонецПроцедуры

//******************************************************************************
// НачислениеАмортизацииОС()
//
// Описание:
//  Начисление амортизации по объектам ОС.
//
Процедура НачислениеАмортизацииОС()
	
	Если (ОсновныеСредства_01 = 1) или (ОсновныеСредства_03 = 1) или (ДляЦелейНалогообложения = 1) Тогда
		
		ТекстСообщения = "=> Начисление амортизации основных средств";
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		
		Ном = 0;
		ОС = СоздатьОбъект("Справочник.ОсновныеСредства");
		ОС.ВыбратьЭлементы();
		Пока ОС.ПолучитьЭлемент() = 1 Цикл
			Если (ОС.ЭтоГруппа() = 1) или (ОС.ПометкаУдаления() = 1) Тогда
			    Продолжить;
			КонецЕсли;
			
			НачислятьАмортизациюБух = 1;
			СведенияОбОС = глРасчетАмортизацииОС(ОС.ТекущийЭлемент(), ДатаДок);
			СчетУчета = СведенияОбОС.Получить("СчетУчета");
			Если ПустоеЗначение(СчетУчета) = 0 Тогда
				Если (СчетУчета.Родитель() = СчетПоКоду("01")) и (ОсновныеСредства_01 = 0) Тогда
				    НачислятьАмортизациюБух = 0;
					
				ИначеЕсли (СчетУчета.Родитель() = СчетПоКоду("03")) и (ОсновныеСредства_03 = 0) Тогда
				    НачислятьАмортизациюБух = 0;
				КонецЕсли;
			Иначе
				НачислятьАмортизациюБух = 0;
			КонецЕсли;
				
			Если НачислятьАмортизациюБух = 1 Тогда
				Ном = Ном + 1;
				БалансоваяСтоимость			= СведенияОбОС.Получить("БалансоваяСтоимостьНач");
				АмортизацияНаНачалоМесяца 	= СведенияОбОС.Получить("НачисленнаяАмортизацияНач");
				РассчитаннаяАмортизацияБух 	= СведенияОбОС.Получить("РассчитаннаяАмортизацияБух");
				СчетНачисленияАмортизации 	= СведенияОбОС.Получить("СчетНачисленияАмортизации");
				ОстаточнаяСтоимость = БалансоваяСтоимость - АмортизацияНаНачалоМесяца;
				
				Если СчетНачисленияАмортизации.Забалансовый = 1 Тогда
					ТекстСообщения = ""+Ном+". "+ОС + РазделительСтрок
						           + "    На начало месяца: балансовая стоимость "+БалансоваяСтоимость+", начисленный износ "+АмортизацияНаНачалоМесяца+", остаточная стоимость "+ОстаточнаяСтоимость;
								   
				Иначе
					ТекстСообщения = ""+Ном+". "+ОС+" (способ начисления амортизации: "+ОС.СпособНачисленияАмортизации+")" + РазделительСтрок
			                       + "    На начало месяца: балансовая стоимость "+БалансоваяСтоимость+", амортизация для целей бухгалтерского учета "+АмортизацияНаНачалоМесяца+", остаточная стоимость "+ОстаточнаяСтоимость;
				КонецЕсли;
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,, ОС.ТекущийЭлемент());

				Если РассчитаннаяАмортизацияБух > 0 Тогда
					Если СчетНачисленияАмортизации.Забалансовый = 1 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ОС";
						Операция.СодержаниеПроводки = "Износ за " + ДатаГод(ДатаДок) + " г.";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = СчетНачисленияАмортизации;
						Операция.Дебет.ОсновныеСредства = ОС.ТекущийЭлемент();
						Операция.Сумма = РассчитаннаяАмортизацияБух;
						Продолжить;
						
					Иначе
						Если ОС.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
							ТекстСообщения = "Не указан счет отнесения затрат по начисленной амортизации для ОС: "
								+ ОС.Наименование + ", инв.№" + ОС.Код + ".";
							глНеПроводить(Контекст, ТекстСообщения, ОС.ТекущийЭлемент());
							Возврат;
						КонецЕсли;
						
						СчетНачисленияАмортизации = СведенияОбОС.Получить("СчетНачисленияАмортизации");
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ОС";
						Операция.СодержаниеПроводки = "Аморт.за " + Формат(ДатаДок, "Д ММММГГГГ");
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = ОС.СчетЗатрат.Получить(ДатаДок);
						Операция.Дебет.Субконто(1, ОС.Субконто1.Получить(ДатаДок));
						Операция.Дебет.Субконто(2, ОС.Субконто2.Получить(ДатаДок));
						Операция.Дебет.Субконто(3, ОС.Субконто3.Получить(ДатаДок));
						Операция.Кредит.Счет = СчетНачисленияАмортизации;
						Операция.Кредит.ОсновныеСредства = ОС.ТекущийЭлемент();
						Операция.Сумма = РассчитаннаяАмортизацияБух;
					КонецЕсли;
					СуммаОперации = СуммаОперации + РассчитаннаяАмортизацияБух;
					
					// Списание постоянных разниц
					Если СчетНачисленияАмортизации.Забалансовый <> 1 Тогда
						Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
						    ВсегоПостоянныхРазниц = БухИт.СНД("НПР.01",,, ОС.ТекущийЭлемент());
							Если ВсегоПостоянныхРазниц <> 0 Тогда
							    СписатьПостоянныхРазниц = ВсегоПостоянныхРазниц * (РассчитаннаяАмортизацияБух / ОстаточнаяСтоимость);
								Если СписатьПостоянныхРазниц <> 0 Тогда
									СчетДт = ОС.СчетЗатрат.Получить(ДатаДок);
									СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, ОС.Субконто1.Получить(ДатаДок));
									
									Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
									Операция.НомерЖурнала = "ПР";
									Операция.СодержаниеПроводки = "Списание постоянных разниц";
									Если ПустоеЗначение(СчетНПР) = 0 Тогда
										Операция.Дебет.Счет = СчетНПР;
										Операция.Дебет.Субконто(1, ОС.Субконто1.Получить(ДатаДок));
										Операция.Дебет.Субконто(2, ОС.Субконто2.Получить(ДатаДок));
										Операция.Дебет.Субконто(3, ОС.Субконто3.Получить(ДатаДок));
									КонецЕсли;
									Операция.Кредит.Счет = СчетПоКоду("НПР.01");
									Операция.Кредит.ОсновныеСредства = ОС.ТекущийЭлемент();
									Операция.Сумма = СписатьПостоянныхРазниц;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				// Если объект был модернизирован в этом месяце,
				// то необходимо записать остаточную стомиость объекта
				// на конец того месяца, в котором была произведена модернизация.
				Если БылаМодернизация(ОС) = 1 Тогда
					
					// Установить остаточную стоимость для целей бухгалтерского учета
				    БалансоваяСтоимостьКон	 = СведенияОбОС.Получить("БалансоваяСтоимостьКон");
					АмортизацияНаКонецМесяца = СведенияОбОС.Получить("НачисленнаяАмортизацияКон");
					РассчитаннаяАмортизация  = СведенияОбОС.Получить("РассчитаннаяАмортизацияБух");
					ОстаточнаяСтоимость      = БалансоваяСтоимостьКон - АмортизацияНаКонецМесяца - РассчитаннаяАмортизация;
					УстановитьРеквизитСправочника(ОС, "ОстаточнаяСтоимостьПослеМодернизации", ОстаточнаяСтоимость, ДатаДок);
				КонецЕсли;
			КонецЕсли;
			
			Если ДатаДок < '01.01.2002' Тогда
				Если (ДляЦелейНалогообложения = 1) и
					 (ОС.ДатаВводаВЭксплуатацию < НачМесяца(ДатаДок)) и
					 (ОС.ПодлежитАмортизации = 1) Тогда
					РассчитаннаяАмортизацияНалог = СведенияОбОС.Получить("РассчитаннаяАмортизацияНалог");
					БалансоваяСтоимость = СведенияОбОС.Получить("БалансоваяСтоимостьНалог");
					АмортизацияНаНачалоМесяца = СведенияОбОС.Получить("НачисленнаяАмортизацияНалог");
					
					Если НачислятьАмортизациюБух = 0 Тогда
						Ном = Ном + 1;
						ТекстСообщения = ""+Ном+". "+ОС;
						глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
					КонецЕсли;
					
					ТекстСообщения ="    На начало месяца: стоимость (балансовая или первоначальная) "+
						БалансоваяСтоимость+", амортизация для целей налогообложения "+
						АмортизацияНаНачалоМесяца+" , норма амортизационных отчислений "+
						ОС.КоэффициентАмортизации.Получить(КонМесяца(ДатаДок))+"%";
					
					глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,, ОС.ТекущийЭлемент());
								
					Если РассчитаннаяАмортизацияНалог > 0 Тогда
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ОС";
						Операция.СодержаниеПроводки = "Аморт.за " + Формат(ДатаДок, "Д ММММГГГГ");
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Кредит.Счет = СчетПоКоду("АОС");
						Операция.Кредит.ОсновныеСредства = ОС.ТекущийЭлемент();
						Операция.Сумма = РассчитаннаяАмортизацияНалог;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Если ДляЦелейНалогообложения = 1 Тогда
					БалансоваяСтоимостьНач	     = СведенияОбОС.Получить("БалансоваяСтоимостьНалог");
					БалансоваяСтоимостьКон       = СведенияОбОС.Получить("БалансоваяСтоимостьНалогКон");
					АмортизацияНаНачалоМесяца    = СведенияОбОС.Получить("НачисленнаяАмортизацияНалог");
					РассчитаннаяАмортизацияНалог = СведенияОбОС.Получить("РассчитаннаяАмортизацияНалог");
					ПрименяетсяБазоваяСтоимость  = СведенияОбОС.Получить("ПрименяетсяБазоваяСтоимость");
					                
					// Документ записывать базовую стоимость, только в том случае, если:
					//  - ранее базовая стоимость не определена;
					//  - на начало месяца остаточная стоимость > 20% от первоначальной;
					//  - на конец месяца остаточная стоимость <= 20% от первоначальной.
					Если ОС.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
						Если ОС.НачислятьАмортизацию.Получить(ДатаДок) = 1 Тогда
							Если ПрименяетсяБазоваяСтоимость = 0 Тогда // если уже применяется базовая стоимость, то больше не надо ее определять
								ОстаточнаяСтоимостьНач = БалансоваяСтоимостьНач - АмортизацияНаНачалоМесяца;
								Если ОстаточнаяСтоимостьНач > (0.2 * БалансоваяСтоимостьНач) Тогда
									ОстаточнаяСтоимостьКон = БалансоваяСтоимостьКон - АмортизацияНаНачалоМесяца - РассчитаннаяАмортизацияНалог;
									Если ОстаточнаяСтоимостьКон <= (0.2 * БалансоваяСтоимостьКон) Тогда
										УстановитьРеквизитСправочника(ОС, "БазоваяСтоимость", ОстаточнаяСтоимостьКон, ДатаДок + 1);
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;

					Если РассчитаннаяАмортизацияНалог > 0 Тогда
						СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(ОС.ВидРасхода.Получить(ДатаДок), ОС.ЭлементРасхода.Получить(ДатаДок), ОС.Объект.Получить(ДатаДок), ДатаДок);
						СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
						
						Если ПустоеЗначение(СчетРасходов) = 1 Тогда
							ТекстСообщения = "На закладке ""Налоговый учет"" неверно указано направление отнесения расходов по начисленной амортизации для ОС: "
								+ ОС.Наименование + ", инв.№" + ОС.Код + ".";
							глНеПроводить(Контекст, ТекстСообщения, ОС.ТекущийЭлемент());
							Возврат;
						КонецЕсли;
                        СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, ОС.СчетЗатрат.Получить(ДатаДок), ОС.Субконто1.Получить(ДатаДок), СчетРасходов);
						
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "ОС";
						Операция.СодержаниеПроводки = "Аморт.за " + Формат(ДатаДок, "Д ММММГГГГ");
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Если ПустоеЗначение(СчетРасходов) = 0 Тогда
							Операция.Дебет.Счет = СчетРасходов;
							Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
							Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
							Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
						КонецЕсли;
						Операция.Кредит.Счет = СчетПоКоду("Н05.02");
						Операция.Кредит.ОсновныеСредства = ОС.ТекущийЭлемент();
						Операция.Сумма = РассчитаннаяАмортизацияНалог;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // НачислениеАмортизацииОС()

//******************************************************************************
// НачислениеАмортизацииНМА()
//
// Описание:
//  Начисление амортизации по объектам НМА.
//
Процедура НачислениеАмортизацииНМА()
	
	Если (НематериальныеАктивы = 1) или ((ДляЦелейНалогообложения = 1) и (ДатаДок >= '01.01.2002')) Тогда
		
		ТекстСообщения = "=> Начисление амортизации нематериальных активов";
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		
		Ном = 0;
		НМА = СоздатьОбъект("Справочник.НематериальныеАктивы");
		НМА.ВыбратьЭлементы();
		Пока НМА.ПолучитьЭлемент() = 1 Цикл
			Если (НМА.ЭтоГруппа() = 1) или (НМА.ПометкаУдаления() = 1) или (НМА.ВидОбъектаУчета = 1) Тогда
			    Продолжить;
			КонецЕсли;
			
			СведенияО_НМА = глРасчетАмортизацииНМА(НМА.ТекущийЭлемент(), ДатаДок);
				
			Если НематериальныеАктивы = 1 Тогда
				БалансоваяСтоимость			= СведенияО_НМА.Получить("БалансоваяСтоимостьНач");
				АмортизацияНаНачалоМесяца 	= СведенияО_НМА.Получить("НачисленнаяАмортизацияНач");
				РассчитаннаяАмортизацияБух 	= СведенияО_НМА.Получить("РассчитаннаяАмортизацияБух");
				ОстаточнаяСтоимость = БалансоваяСтоимость - АмортизацияНаНачалоМесяца;
			
				Ном = Ном + 1;
				ТекстСообщения = ""+Ном+". "+НМА+" (способ начисления амортизации: "+НМА.СпособНачисленияАмортизации+")" + РазделительСтрок
			                       + "    На начало месяца: балансовая стоимость "+БалансоваяСтоимость+", амортизация "+АмортизацияНаНачалоМесяца+", остаточная стоимость "+ОстаточнаяСтоимость;
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,, НМА.ТекущийЭлемент());
				
				Если РассчитаннаяАмортизацияБух > 0 Тогда
					Если НМА.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
						ТекстСообщения = "Не указан счет отнесения затрат по начисленной амортизации для НМА: "
										+ НМА.Наименование + ", инв.№" + НМА.Код + ".";
						глНеПроводить(Контекст, ТекстСообщения, НМА.ТекущийЭлемент());
						Возврат;
					КонецЕсли;
					
					СчетНачисленияАмортизации 	= СведенияО_НМА.Получить("СчетНачисленияАмортизации");
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "НА";
					Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = НМА.СчетЗатрат.Получить(ДатаДок);
					Операция.Дебет.Субконто(1, НМА.Субконто1.Получить(ДатаДок));
					Операция.Дебет.Субконто(2, НМА.Субконто2.Получить(ДатаДок));
					Операция.Дебет.Субконто(3, НМА.Субконто3.Получить(ДатаДок));
					Операция.Кредит.Счет = СчетНачисленияАмортизации;
					Операция.Кредит.НематериальныеАктивы = НМА.ТекущийЭлемент();
					Операция.Сумма = РассчитаннаяАмортизацияБух;
					СуммаОперации = СуммаОперации + РассчитаннаяАмортизацияБух;
					
					// Списание постоянных разниц
					Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
					    ВсегоПостоянныхРазниц = БухИт.СНД("НПР.04",,, НМА.ТекущийЭлемент());
						Если ВсегоПостоянныхРазниц <> 0 Тогда
						    СписатьПостоянныхРазниц = ВсегоПостоянныхРазниц * (РассчитаннаяАмортизацияБух / ОстаточнаяСтоимость);
							Если СписатьПостоянныхРазниц <> 0 Тогда
								СчетДт = НМА.СчетЗатрат.Получить(ДатаДок);
								СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, НМА.Субконто1.Получить(ДатаДок));
								
								Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
								Операция.НомерЖурнала = "ПР";
								Операция.СодержаниеПроводки = "Списание постоянных разниц";
								Если ПустоеЗначение(СчетНПР) = 0 Тогда
									Операция.Дебет.Счет = СчетНПР;
									Операция.Дебет.Субконто(1, НМА.Субконто1.Получить(ДатаДок));
									Операция.Дебет.Субконто(2, НМА.Субконто2.Получить(ДатаДок));
									Операция.Дебет.Субконто(3, НМА.Субконто3.Получить(ДатаДок));
								КонецЕсли;
								Операция.Кредит.Счет = СчетПоКоду("НПР.04");
								Операция.Кредит.НематериальныеАктивы = НМА.ТекущийЭлемент();
								Операция.Сумма = СписатьПостоянныхРазниц;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если (ДатаДок >= '01.01.2002') и (ДляЦелейНалогообложения = 1) Тогда
				БалансоваяСтоимостьНач 			= СведенияО_НМА.Получить("БалансоваяСтоимостьНалог");
				БалансоваяСтоимостьКон 			= СведенияО_НМА.Получить("БалансоваяСтоимостьНалогКон");
				АмортизацияНаНачалоМесяца 		= СведенияО_НМА.Получить("НачисленнаяАмортизацияНалог");
				РассчитаннаяАмортизацияНалог 	= СведенияО_НМА.Получить("РассчитаннаяАмортизацияНалог");
				ПрименяетсяБазоваяСтоимость     = СведенияО_НМА.Получить("ПрименяетсяБазоваяСтоимость");
				
				// Документ записывать базовую стоимость, только в том случае, если:
				//  - ранее базовая стоимость не определена;
				//  - на начало месяца остаточная стоимость > 20% от первоначальной;
				//  - на конец месяца остаточная стоимость <= 20% от первоначальной.
				Если НМА.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
					Если ПрименяетсяБазоваяСтоимость = 0 Тогда // если уже применяется базовая стоимость, то больше не надо ее определять
						ОстаточнаяСтоимостьНач = БалансоваяСтоимостьНач - АмортизацияНаНачалоМесяца;
						Если ОстаточнаяСтоимостьНач > (0.2 * БалансоваяСтоимостьНач) Тогда
							ОстаточнаяСтоимостьКон = БалансоваяСтоимостьКон - АмортизацияНаНачалоМесяца - РассчитаннаяАмортизацияНалог;
							Если ОстаточнаяСтоимостьКон <= (0.2 * БалансоваяСтоимостьКон) Тогда
								УстановитьРеквизитСправочника(НМА, "БазоваяСтоимость", ОстаточнаяСтоимостьКон, ДатаДок + 1);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если РассчитаннаяАмортизацияНалог > 0 Тогда
					СчетИАналитикаДляОтнесенияРасходов = глПолучитьСчетРасходовДляЦелейНалоговогоУчета(НМА.ВидРасхода.Получить(ДатаДок), НМА.ЭлементРасхода.Получить(ДатаДок), НМА.Объект.Получить(ДатаДок), ДатаДок);
					СчетРасходов = СчетИАналитикаДляОтнесенияРасходов.Получить("Счет");
					Если ПустоеЗначение(СчетРасходов) = 1 Тогда
						ТекстСообщения = "На закладке ""Налоговый учет"" неверно указано направление отнесения расходов по начисленной амортизации для НМА: "
										+ НМА.Наименование + ", инв.№" + НМА.Код + ".";
						глНеПроводить(Контекст, ТекстСообщения, НМА.ТекущийЭлемент());
						Возврат;
					КонецЕсли;
					
					СчетРасходов = глПолучитьСчетУчетаКосвенныхРасходовНУ(ДатаДок, НМА.СчетЗатрат.Получить(ДатаДок), НМА.Субконто1.Получить(ДатаДок), СчетРасходов);
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "НА";
					Операция.СодержаниеПроводки = "Аморт.за "+Формат(ДатаДок,"Д ММММГГГГ");
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Если ПустоеЗначение(СчетРасходов) = 0 Тогда
						Операция.Дебет.Счет = СчетРасходов;
						Операция.Дебет.Субконто(1, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто1"));
						Операция.Дебет.Субконто(2, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто2"));
						Операция.Дебет.Субконто(3, СчетИАналитикаДляОтнесенияРасходов.Получить("Субконто3"));
					КонецЕсли;
					Операция.Кредит.Счет = СчетПоКоду("Н05.04");
					Операция.Кредит.НематериальныеАктивы = НМА.ТекущийЭлемент();
					Операция.Сумма = РассчитаннаяАмортизацияНалог;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // НачислениеАмортизацииНМА()


//******************************************************************************
// СписаниеРасходовПоНИОКР()
//
// Описание:
//  Списание расходов по НИОКР.
//
Процедура СписаниеРасходовПоНИОКР()
	
	Сч04_2 = СчетПоКоду("04.2");
	
	Если СписаниеРасходовПоНИОКР = 1 Тогда
		
		ТекстСообщения = "=> Списание расходов по НИОКР";
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		
		Ном = 0;
		НИОКР = СоздатьОбъект("Справочник.НематериальныеАктивы");
		НИОКР.ВыбратьЭлементы();
		Пока НИОКР.ПолучитьЭлемент() = 1 Цикл
			Если (НИОКР.ЭтоГруппа() = 1) или (НИОКР.ПометкаУдаления() = 1) или (НИОКР.ВидОбъектаУчета <> 1) Тогда
			    Продолжить;
			КонецЕсли;
			
			СведенияО_НИОКР           = глРасчетСуммыСписанияНИОКР(НИОКР.ТекущийЭлемент(), ДатаДок);
			РассчитаннаяСуммаСписания = СведенияО_НИОКР.Получить("РассчитаннаяСуммаСписания");
			СуммаРасходовКон          = СведенияО_НИОКР.Получить("СуммаРасходовКон");
			
			Ном = Ном + 1;
			ТекстСообщения = ""+Ном+". "+НИОКР+" (способ списания расходов: "+НИОКР.СпособНачисленияАмортизации+")";
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,, НИОКР.ТекущийЭлемент());
				
			Если РассчитаннаяСуммаСписания > 0 Тогда
				Если НИОКР.СчетЗатрат.Получить(ДатаДок).Выбран() = 0 Тогда
					ТекстСообщения = "Не указан счет отнесения расходов для НИОКР: "
									+ НИОКР.Наименование + ", инв.№" + НИОКР.Код + ".";
					глНеПроводить(Контекст, ТекстСообщения, НИОКР.ТекущийЭлемент());
					Возврат;
				КонецЕсли;
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "НА";
				Операция.СодержаниеПроводки = "Списание расходов за "+Формат(ДатаДок,"Д ММММГГГГ");
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = НИОКР.СчетЗатрат.Получить(ДатаДок);
				Операция.Дебет.Субконто(1, НИОКР.Субконто1.Получить(ДатаДок));
				Операция.Дебет.Субконто(2, НИОКР.Субконто2.Получить(ДатаДок));
				Операция.Дебет.Субконто(3, НИОКР.Субконто3.Получить(ДатаДок));
				Операция.Кредит.Счет = Сч04_2;
				Операция.Кредит.НематериальныеАктивы = НИОКР.ТекущийЭлемент();
				Операция.Сумма = РассчитаннаяСуммаСписания;
				СуммаОперации = СуммаОперации + РассчитаннаяСуммаСписания;
				
				// Списание постоянных разниц
				Если Константа.ПрименяетсяПБУ18.Получить(ДатаДок) = Да Тогда
				    ВсегоПостоянныхРазниц = БухИт.СНД("НПР.04",,, НИОКР.ТекущийЭлемент());
					Если ВсегоПостоянныхРазниц <> 0 Тогда
					    СписатьПостоянныхРазниц = ВсегоПостоянныхРазниц * (РассчитаннаяСуммаСписания / СуммаРасходовКон);
						Если СписатьПостоянныхРазниц <> 0 Тогда
							СчетДт = НИОКР.СчетЗатрат.Получить(ДатаДок);
							СчетНПР = глПолучитьСчетДебетаНПР(СчетДт, НИОКР.Субконто1.Получить(ДатаДок));
							
							Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "ПР";
							Операция.СодержаниеПроводки = "Списание постоянных разниц";
							Если ПустоеЗначение(СчетНПР) = 0 Тогда
								Операция.Дебет.Счет = СчетНПР;
								Операция.Дебет.Субконто(1, НИОКР.Субконто1.Получить(ДатаДок));
								Операция.Дебет.Субконто(2, НИОКР.Субконто2.Получить(ДатаДок));
								Операция.Дебет.Субконто(3, НИОКР.Субконто3.Получить(ДатаДок));
							КонецЕсли;
							Операция.Кредит.Счет = СчетПоКоду("НПР.04");
							Операция.Кредит.НематериальныеАктивы = НИОКР.ТекущийЭлемент();
							Операция.Сумма = СписатьПостоянныхРазниц;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры // СписаниеРасходовПоНИОКР()

//******************************************************************************
// ПогашениеСтоимостиСпецматериалов()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПогашениеСтоимостиСпецматериалов()
	
	Если СпецодеждаСпецоснастка = 1 Тогда
		
		БухИт10 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт10.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт10.ИспользоватьСубконто(ВидыСубконто.Материалы);
		БухИт10.ИспользоватьСубконто(ВидыСубконто.НазначенияИспользования);
		БухИт10.ИспользоватьСубконто();
		БухИт10.ВключатьСубсчета(-1,);
		БухИт10.ВыполнитьЗапрос(НачМесяца(ДатаДок), , "10.11",,,,, "С");
		
		БухИт10.ВыбратьСчета();
		Пока БухИт10.ПолучитьСчет() = 1 Цикл
		
			БухИт10.ВыбратьСубконто(ВидыСубконто.Материалы);
			Пока БухИт10.ПолучитьСубконто(ВидыСубконто.Материалы) = 1 Цикл
				Материал = БухИт10.Субконто(ВидыСубконто.Материалы);
				
				БухИт10.ВыбратьСубконто(ВидыСубконто.НазначенияИспользования);
				Пока БухИт10.ПолучитьСубконто(ВидыСубконто.НазначенияИспользования) = 1 Цикл
					НазначениеИспользования = БухИт10.Субконто(ВидыСубконто.НазначенияИспользования);
					
					Если НазначениеИспользования.СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.ПогашатьСтоимостьВМоментПередачиВПроизводство Тогда
						Продолжить;
					КонецЕсли;
					
					НезаполненныйРеквизит      = "";
					ДатаВводаВЭксплуатацию     = НазначениеИспользования.ДатаВводаВЭксплуатацию;
					СпособПогашенияСтоимости   = НазначениеИспользования.СпособПогашенияСтоимости;
					СрокПолезногоИспользования = НазначениеИспользования.СрокПолезногоИспользования;
					
					Если ПустоеЗначение(НазначениеИспользования) = 1 Тогда
						Продолжить;
						
					ИначеЕсли ПустоеЗначение(ДатаВводаВЭксплуатацию) = 1 Тогда
						НезаполненныйРеквизит = "Дата ввода в эксплуатацию";
						
					ИначеЕсли ПустоеЗначение(СпособПогашенияСтоимости) = 1 Тогда
						НезаполненныйРеквизит = "Способ погашения стоимости";
						
					ИначеЕсли ПустоеЗначение(СрокПолезногоИспользования) = 1 Тогда
						НезаполненныйРеквизит = "Срок полезного использования \ предполагаемый объем выпуска продукции";
						
					ИначеЕсли ПустоеЗначение(НазначениеИспользования.СчетЗатрат) = 1 Тогда
						НезаполненныйРеквизит = "Счет отнесения погашенной стоимости";
					КонецЕсли;
					
					Если ПустоеЗначение(НезаполненныйРеквизит) = 0 Тогда
						ТекстСообщения = "Для материала " + Материал + " в назначении использования "
									   + НазначениеИспользования + " не заполнен реквизит """ + НезаполненныйРеквизит + """.
									 	|Стоимость погашения материала для этого назначения использования не будет рассчитана.";
						глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1,, НазначениеИспользования.ТекущийЭлемент());
					    Продолжить;
					КонецЕсли;
					
					// Списывать начинаем с начала следующего месяца,
					// т.к. единица учета - месяц, то списывать необходимо
					// начиная с полного месяца.
					Если КонМесяца(ДатаВводаВЭксплуатацию) >= КонМесяца(ДатаДок) Тогда
					    Продолжить;
					КонецЕсли;
				    
					БухИт10.ВыбратьСубконто(3);
					Пока БухИт10.ПолучитьСубконто(3) = 1 Цикл
						ПодразделениеСотрудник = БухИт10.Субконто(3);
					
						НепогашеннаяСтоимость = БухИт.СКД(БухИт10.Счет, "С",, БухИт10.Субконто(1), БухИт10.Субконто(2), БухИт10.Субконто(3));
						Если НепогашеннаяСтоимость <= 0 Тогда // погашено
						    Продолжить;
						КонецЕсли;
					        
						Если БухИт10.Счет.Код = "10.11.1" Тогда // спецодежда
							ПервоначальнаяСтоимость = БухИт.СКД("МЦ.02", "С",, БухИт10.Субконто(1), БухИт10.Субконто(2), БухИт10.Субконто(3));
							
						Иначе
							ПервоначальнаяСтоимость = БухИт.СКД("МЦ.03", "С",, БухИт10.Субконто(1), БухИт10.Субконто(2), БухИт10.Субконто(3));
						КонецЕсли;
						
						Если ПервоначальнаяСтоимость <= 0 Тогда
						    Продолжить;
						КонецЕсли;
						
						СуммаПогашения = 0;
						
						Если СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.ПропорциональноОбъемуПродукцииРабот Тогда
							
							ОбщийОбъемПродукции   = СрокПолезногоИспользования;
							ОбъемПродукцииЗаМесяц = НазначениеИспользования.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(КонМесяца(ДатаДок));
							
							СуммаПогашения = Окр((ПервоначальнаяСтоимость / ОбщийОбъемПродукции) * ОбъемПродукцииЗаМесяц, 2);
							СуммаПогашения = Мин(СуммаПогашения, НепогашеннаяСтоимость);
							
						ИначеЕсли СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.Линейный Тогда
							СуммаПогашения = Окр(ПервоначальнаяСтоимость / СрокПолезногоИспользования, 2);
							СуммаПогашения = Мин(СуммаПогашения, НепогашеннаяСтоимость);
							
						КонецЕсли;
						
						Если СуммаПогашения > 0 Тогда
						    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
							Операция.НомерЖурнала = "МТ";
							Если БухИт10.Счет.Код = "10.11.1" Тогда // спецодежда
								Операция.СодержаниеПроводки = "Погашение стоимости спецодежды";
								
							Иначе // спецоснастка
								Операция.СодержаниеПроводки = "Погашение стоимости спецоснастки";
							КонецЕсли;
							Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
							Операция.Дебет.Счет = НазначениеИспользования.СчетЗатрат;
							Операция.Дебет.Субконто(1, НазначениеИспользования.Субконто1);
							Операция.Дебет.Субконто(2, НазначениеИспользования.Субконто2);
							Операция.Дебет.Субконто(3, НазначениеИспользования.Субконто3);
							Операция.Кредит.Счет = БухИт10.Счет;
							Операция.Кредит.Субконто(1, БухИт10.Субконто(1));
							Операция.Кредит.Субконто(2, БухИт10.Субконто(2));
							Операция.Кредит.Субконто(3, БухИт10.Субконто(3));
							Операция.Сумма = СуммаПогашения;
							
							СуммаОперации = СуммаОперации + Операция.Сумма;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПогашениеСтоимостиСпецматериалов()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		ТекстСообщения = "На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
					    |Расчет итогов выполняется в режиме
					    |""Операции - Управление бухгалтерскими итогами""";
		глНеПроводить(Контекст, ТекстСообщения);
		Возврат;
	КонецЕсли;
	                  
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ПериодМ(ДатаДок);
	
	СуммаОперации = 0;
	
	Если ДляЦелейНалогообложения = 1 Тогда
		ВключениеКапитальныхВложенийВРасходы();
		Если СтатусВозврата() = 0 Тогда
			Возврат;
		КонецЕсли;                        
	КонецЕсли;

	НачислениеАмортизацииОС();
	Если СтатусВозврата() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	НачислениеАмортизацииНМА();
	Если СтатусВозврата() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	СписаниеРасходовПоНИОКР();
	Если СтатусВозврата() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	ПогашениеСтоимостиСпецматериалов();
	Если СтатусВозврата() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Операция.СуммаОперации = СуммаОперации;
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры