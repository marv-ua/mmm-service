////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
//******************************************************************************
Функция РубКоп(Сумма)
	Руб=Цел(Сумма);
	Коп=100*ОКР((Сумма-Руб),2,1);
	СуммаРубКоп=""+Руб+" руб. "+Цел(Коп/10)+(Коп-10*Цел(Коп/10))+" коп.";
	Возврат СуммаРубКоп;
КонецФункции

//******************************************************************************
Процедура УправлениеСлоямиФормы()
	
	СтрСлоев = "Основной";
	Если ВариантВыплаты = 2 Тогда
		СтрСлоев = СтрСлоев + ", Аванс";
	КонецЕсли;
	
	Если ПорядокВыплаты = 1 Тогда // через банк
		СтрСлоев = СтрСлоев + ", Банк";
		
	Иначе // выплата через кассу
		СтрСлоев = СтрСлоев + ", Касса";
	КонецЕсли;
	
	Форма.ИспользоватьСлой(СтрСлоев);
	
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореПорядкаВыплаты()
	
	ПорядокВыплаты = СписокПорядкаВыплаты.ПолучитьЗначение(СписокПорядкаВыплаты.ТекущаяСтрока());
	УправлениеСлоямиФормы();
	
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореВариантаВыплаты()
	
	ВариантВыплаты = СписокВариантовВыплаты.ПолучитьЗначение(СписокВариантовВыплаты.ТекущаяСтрока());
	УправлениеСлоямиФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	
    Если Копирование = 1 Тогда
        Возврат;
    КонецЕсли;
    ВариантВыплаты = 1;
	Процент = 40;
	Подразделение = глЗначениеПоУмолчанию("ОсновноеПодразделение");
	
КонецПроцедуры // ВводНового()

//******************************************************************************
Процедура Печать()
	
    Таб = СоздатьОбъект("Таблица");
    Если ДатаГод(ДатаДок) > 2000 Тогда
		Таб.ИсходнаяТаблица("Т-53-1");
	Иначе
		Таб.ИсходнаяТаблица("Т-53");
	КонецЕсли;
	Таб.ВывестиСекцию("ТитульныйЛист");
	СтрокНаСтранице = 28;
	СтрокНаПодвал = 9;
    СтрокБезУчетаПодвала = КоличествоСтрок();
	СтрокВсего = СтрокБезУчетаПодвала + СтрокНаПодвал;
	ЦелыхСтраницБезПодвала = Цел(СтрокБезУчетаПодвала/СтрокНаСтранице);
	СтрокНаПоследнейСтраницеБезУчетаПодвала = СтрокБезУчетаПодвала - ЦелыхСтраницБезПодвала*СтрокНаСтранице;
	
	Если СтрокНаПоследнейСтраницеБезУчетаПодвала = 0 Тогда
		Перенос = 1; // перенос последней строки на следующую страницу
	    
	ИначеЕсли (СтрокНаПоследнейСтраницеБезУчетаПодвала + СтрокНаПодвал) > СтрокНаСтранице Тогда
		Перенос = 1;
		
	Иначе
		Перенос = 0;
	КонецЕсли;
	
	НомерСтраницы = 1;
	ВыбратьСтроки();
	НомерПП=0;
	Пока ПолучитьСтроку()=1 Цикл
		НомерПП=НомерПП+1;
		ЦелаяСтраница = (НомерПП - 1) / СтрокНаСтранице;
		Если (ЦелаяСтраница - Цел(ЦелаяСтраница) = 0) ИЛИ ((Перенос = 1) И (НомерПП = СтрокБезУчетаПодвала)) Тогда
			Таб.НоваяСтраница();
			НомерСтраницы = НомерСтраницы + 1;
			Таб.ВывестиСекцию("Шапка");
		КонецЕсли;
		ТабельныйНомер = Сотрудник.Код;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Платежная ведомость");
	
КонецПроцедуры

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
Процедура ПриОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
   		Если Форма.Параметр.Получить("Печать") = 1 Тогда
   		    Печать();
   		КонецЕсли;
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);   
		Форма.КнопкаЗаполнить.Доступность(0); 
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОчиститьПодразделение.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
	КонецЕсли;
	
	СписокВариантовВыплаты.ДобавитьЗначение(1,"зарплаты");
	СписокВариантовВыплаты.ДобавитьЗначение(2,"аванса");
	СписокВариантовВыплаты.ТекущаяСтрока(СписокВариантовВыплаты.НайтиЗначение(ВариантВыплаты));
	
	СписокПорядкаВыплаты.ДобавитьЗначение(0,"выплата через кассу");
	СписокПорядкаВыплаты.ДобавитьЗначение(1,"перечисление в банк");
	СписокПорядкаВыплаты.ТекущаяСтрока(СписокПорядкаВыплаты.НайтиЗначение(ПорядокВыплаты));
	
	УправлениеСлоямиФормы();
	НачальнаяДатаДокумента = ДатаДок;
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореСотрудника()
	Если Сотрудник.Выбран() = 1 Тогда
		Если ВариантВыплаты = 1 Тогда	//зарплата
			Если ТекущийДокумент().Проведен() =1 Тогда
			    Предупреждение("Для автоматического заполнения графы ""К выплате""
				               |документ необходимо сделать не проведенным!");
			Иначе 
				Ит = СоздатьОбъект("БухгалтерскиеИтоги"); Ит.ИспользоватьРазделительУчета(ЮрЛицо);
				Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники, Сотрудник, 2);
				Ит.ВыполнитьЗапрос(,КонМесяца(ДатаДок), "70",,,,, "С");
				Если Ит.ПолучитьСчет(, "70") = 1 Тогда
					КВыдаче = Ит.СКК();
				КонецЕсли;
			КонецЕсли;

		ИначеЕсли ВариантВыплаты = 2 Тогда	//аванс
			КВыдаче = Сотрудник.Оклад.Получить(КонМесяца(ДатаДок))*Процент/100;
		КонецЕсли;

		Если Подразделение.Выбран() = 1 Тогда
			Если Сотрудник.Подразделение.Получить(КонМесяца(ДатаДок)) <> Подразделение Тогда
				Подразделение = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура Заполнить()
	Если ВариантВыплаты = 1 Тогда	//зарплата
	    Если ТекущийДокумент().Проведен() =1 Тогда
		    Предупреждение("Для автоматического заполнения графы ""К выплате""
			               |документ необходимо сделать не проведенным!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВыбратьСтроки() = 1 Тогда
		Если Вопрос("Перед заполнением таблица будет очищена,"+РазделительСтрок+"а существующие строки удалены. Продолжать?","Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
		Если ВариантВыплаты = 1 Тогда	//зарплата
			 
			Ит = СоздатьОбъект("БухгалтерскиеИтоги"); Ит.ИспользоватьРазделительУчета(ЮрЛицо);
			Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
			Ит.ВыполнитьЗапрос(,КонМесяца(ДатаДок), "70",,,,, "С");
			Ит.ВыбратьСубконто();
			Пока Ит.ПолучитьСубконто() = 1 Цикл
				Если Ит.ПолучитьСчет(, "70") = 1 Тогда
					ОснЗП = Ит.СКК();
				Иначе
					Продолжить;
				КонецЕсли;

				Если Подразделение.Выбран() = 1 Тогда
					Если Ит.Субконто().Подразделение.Получить(КонМесяца(ДатаДок)) <> Подразделение Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;

				НоваяСтрока();
				Сотрудник = Ит.Субконто();
				КВыдаче = ОснЗП;
			КонецЦикла;
			Если КоличествоСтрок() = 0 Тогда
				Предупреждение("Не обнаружено ни одного сотрудника, не получившего ЗП"+РазделительСтрок+?(Подразделение.Выбран()=1,"в подразделении """+СокрЛП(Подразделение)+"""","")+" на "+Формат(КонМесяца(ДатаДок),"Д ДДММММГГГГ"));
			КонецЕсли;

		ИначеЕсли ВариантВыплаты = 2 Тогда	//аванс
			Сотр = СоздатьОбъект("Справочник.Сотрудники");
			Сотр.ПорядокНаименований();
			Сотр.ВыбратьЭлементы(0);
			Пока Сотр.ПолучитьЭлемент() = 1 Цикл
				Если Сотр.ЭтоГруппа() = 1 Тогда
					Продолжить;
				ИначеЕсли Сотр.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				Если Подразделение.Выбран() = 1 Тогда
					Если Сотр.Подразделение.Получить(КонМесяца(ДатаДок)) <> Подразделение Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если глСотрудникЧислитсяРаботающим(Сотр, ДатаДок) = 0 Тогда
					Продолжить;
				КонецЕсли;
			
				НоваяСтрока();
				Сотрудник = Сотр.ТекущийЭлемент();
				КВыдаче = Сотр.Оклад.Получить(КонМесяца(ДатаДок))*Процент/100;
			КонецЦикла;
			Если КоличествоСтрок() = 0 Тогда
				Предупреждение("Не обнаружено ни одного сотрудника, работающего "+РазделительСтрок+?(Подразделение.Выбран()=1,"в подразделении """+СокрЛП(Подразделение)+"""","")+" на "+Формат(КонМесяца(ДатаДок),"Д ДДММММГГГГ"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ПриИзмененииПроцента()
	Процент = ?(Процент>80,80,Процент);
	Процент = ?(Процент<1,1,Процент);
КонецПроцедуры

//******************************************************************************
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.СуммаОперации = Итог("КВыдаче");
	Операция.Содержание = "Выплата " + ?(ВариантВыплаты=1, "зарплаты", "аванса");
КонецПроцедуры

//******************************************************************************
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, Флаг)
	Если ИдентЭлемДиалога = "ВидДвижения" Тогда
		ОткрытьФорму("Справочник.ДвиженияДенежныхСредств", Перечисление.ВидыДвиженийДенежныхСредств.ОплатаТруда);
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Платежная ведомость Т-53";
ТаблицаПечФорм.Кнопка       = "Т-53";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании"); 
СписокДействий.ДобавитьЗначение("Перейти  в журнал");