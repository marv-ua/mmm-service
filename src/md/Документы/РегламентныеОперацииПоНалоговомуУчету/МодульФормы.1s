////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
//	Установить(Режим="") 
//
//	Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
//	Описание: Устанавливает, снимает или инвертирует отметки выбора строк 
Процедура Установить(Режим="") 
	Для Н = 1 По СписокВыполняемыхДействий.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			СписокВыполняемыхДействий.Пометка(Н, 1);
		ИначеЕсли Режим="Сброс" Тогда
			СписокВыполняемыхДействий.Пометка(Н, 0); 
		Иначе
			СписокВыполняемыхДействий.Пометка(Н, ?(СписокВыполняемыхДействий.Пометка(Н) = 1, 0, 1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  Установить()

//******************************************************************************
// УправлениеСпискомВыполняемыхДействий()
//
// Описание:
//  Выполняется управление видимостью в списке выполняемых действий
//  пунктом "Закрытие счетов налогового учета". Этот пункт присутствует в списке
//  действий только если документ введен декабрем.
//
Процедура УправлениеСпискомВыполняемыхДействий()

	СписокВыполняемыхДействий.УдалитьВсе();
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_02", "Учет отрицательного результата от реализации амортизируемого имущества (Н04.02)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_03", "Учет расходов на НИОКР (Н04.03)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_04", "Учет расходов на освоение природных ресурсов (Н04.04)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_05", "Учет фактических платежей по долгосрочному страхованию жизни работников (Н04.05)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_06", "Учет фактических платежей по страхованию на оплату медицинских расходов (Н04.06)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_07", "Учет фактических платежей по страхованию на случай наступления смерти (Н04.07)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_08", "Учет расходов по страхованию имущества (Н04.08)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_09", "Учет прочих расходов будущих периодов (Н04.09)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_10", "Учет расходов будущих периодов на оплату труда (Н04.10)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН04_11", "Учет налогов и сборов с расходов на оплату труда  будущих периодов (Н04.11)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН03_05", "Учет расходов по долгосрочному страхованию жизни работников (Н03.05)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН03_06", "Учет расходов по страхованию на оплату медицинских расходов (Н03.06)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН03_07", "Учет расходов по страхованию на случай наступления смерти (Н03.07)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН01_06", "Распределение прямых расходов (Н01.06)");

	Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("РасчетСтоимостиТоваров", "Корректировка средневзвешенной стоимости номенклатуры");
	Иначе
		СписокВыполняемыхДействий.ДобавитьЗначение("РасчетСтоимостиМатериалов", "Расчет стоимости материалов");
		СписокВыполняемыхДействий.ДобавитьЗначение("РасчетСтоимостиТоваров", "Расчет стоимости товаров");
    КонецЕсли;
		
	СписокВыполняемыхДействий.ДобавитьЗначение("РасчетСтоимостиПродукции", "Расчет стоимости продукции (работ, услуг)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН01_07", "Учет транспортных расходов (Н01.07)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН03_03", "Учет представительских расходов (Н03.03)");
	СписокВыполняемыхДействий.ДобавитьЗначение("СчетН03_04", "Учет расходов на рекламу (Н03.04)");
	Если (глНовыеПравилаВеденияНУ(ДатаДок) = 1) и (Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да) Тогда
		СписокВыполняемыхДействий.ДобавитьЗначение("РаспределениеКосвенныхРасходов", "Распределение косвенных расходов (Н07.04.2)");
	КонецЕсли;
	
	Позиция = СписокВыполняемыхДействий.НайтиЗначение("ЗакрытиеСчетовНалоговогоУчета");
	Если ДатаМесяц(ДатаДок) = 12 Тогда
		Если Позиция = 0 Тогда
			СписокВыполняемыхДействий.ДобавитьЗначение("ЗакрытиеСчетовНалоговогоУчета", "Закрытие счетов налогового учета");
		КонецЕсли;
		
	Иначе
		Если Позиция <> 0 Тогда
			СписокВыполняемыхДействий.УдалитьЗначение(Позиция)
		КонецЕсли;
	КонецЕсли;
	
	Для СчетчикЦикла = 1 По СписокВыполняемыхДействий.РазмерСписка() Цикл
		Реквизит = СписокВыполняемыхДействий.ПолучитьЗначение(СчетчикЦикла);
		СписокВыполняемыхДействий.Пометка(СчетчикЦикла, ПолучитьАтрибут(Реквизит));
	КонецЦикла;
	
КонецПроцедуры // УправлениеСпискомВыполняемыхДействий()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//****************************************************************************** 
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ДатаДок = КонМесяца(ДатаДок);

	Если Копирование = 1 Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовим документ для того, чтобы все пункты списка выполняемых действий были отмечены.
	Для СчетчиЦикла = 1 по Метаданные.Документ(Вид()).РеквизитШапки() Цикл
		УстановитьАтрибут(Метаданные.Документ(Вид()).РеквизитШапки(СчетчиЦикла).Идентификатор, 1);
	КонецЦикла;
	
КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.ВыбратьВсе.Доступность(0);
		Форма.СброситьВсе.Доступность(0);
		Форма.Инвертировать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли; 
	НачальнаяДатаДокумента = ДатаДок;
	
	УправлениеСпискомВыполняемыхДействий();
	
	СписокВыполняемыхДействий.ТекущаяСтрока(1);
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи() //предопределенная
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;                    
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Для СчетчикЦикла = 1 По СписокВыполняемыхДействий.РазмерСписка() Цикл
		Реквизит = СписокВыполняемыхДействий.ПолучитьЗначение(СчетчикЦикла);
		Значение = СписокВыполняемыхДействий.Пометка(СчетчикЦикла);
		УстановитьАтрибут(Реквизит, Значение);
	КонецЦикла;
	
	Операция.Содержание = "Регламентные операции по налог. учету: " + ПериодСтр(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");