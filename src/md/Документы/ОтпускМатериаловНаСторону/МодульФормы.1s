////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем КонтекстФормыПодбора;
Перем Новый;
Перем СписокДействий;
Перем ТекущийВариантРасчетаНалогов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	ВидимостьЭлементовДляОтгрузки = ?(ВидОтпуска = 1,0,1);
	Стр = "";
	Если (Договор.Выбран() = 1) и (ВидимостьЭлементовДляОтгрузки = 1) Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Стр = "Валюта договора: " + Договор.ВалютаДоговора;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//******************************************************************************
// УправлениеКурсом(ИзменитьКурс)
//
// Параметры:
//  ИзменитьКурс - Число. 1 - установить новый курс валюты, 0 - не изменять.
//
// Описание:
//  При выбранной иностранной валюте делает видимым поле "Курс" и записывает
// в него значение из справочника.
//
Процедура УправлениеКурсом(ИзменитьКурс=0)
	ВидимостьЭлементовДляОтгрузки = ?(ВидОтпуска = 1,0,1);
	ВидимостьКурса = Договор.ВалютаДоговора.Выбран() * ВидимостьЭлементовДляОтгрузки;
	Форма.ПодписьКурса.Видимость(ВидимостьКурса);
	Форма.Курс.Видимость(ВидимостьКурса);
	
	Если ИзменитьКурс = 1 Тогда
		Если ВидимостьКурса = 1 Тогда
		    Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
		Иначе
			Курс = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УправлениеКурсом()

//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()

	глПриВыбореДоговора(Контрагент, Договор);
	УправлениеКурсом(1); // при изменении договора могла измениться валюта
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Контрагент, Договор);
	УправлениеКурсом(1);
	
КонецПроцедуры // ПриВыбореКонтрагента()

//_____________________________________________________________________________
Процедура ПриВыбореВариантаЗачетаАванса()
	ЗачитыватьАванс = ВариантЗачетаАванса.ПолучитьЗначение(ВариантЗачетаАванса.ТекущаяСтрока());
КонецПроцедуры //ПриВыбореВариантаЗачетаАванса
//_____________________________________________________________________________
Процедура ПриВыбореМестаХранения()
	Если ТипЗначения(КонтекстФормыПодбора) = 100 Тогда
		КонтекстФормыПодбора.Форма.Обновить();
	КонецЕсли;
КонецПроцедуры //ПриВыбореМестаХранения
//_____________________________________________________________________________
Функция ИтоговаяСтрока()
	ВидимостьЭлементовДляОтгрузки = ?(ВидОтпуска = 1,0,1);
	Если ВидимостьЭлементовДляОтгрузки = 1 Тогда
		ИтСтр = "Итого отгружено материалов на сумму: "+СокрЛ(Формат(Итог("Всего"),"Ч20.2-,"))+", "+
		"в т.ч. НДС: "+СокрЛ(Формат(Итог("НДС"),"Ч20.2-,"))+
		?(УчитыватьНП=1,", НП: "+СокрЛ(Формат(Итог("НП"),"Ч20.2-,")),"");
		//+	", стоимость без налогов: "+СокрЛ(Формат(Итог("Сумма"),"Ч20.2-,"));
	Иначе
		ИтСтр = "";
	КонецЕсли;
	Возврат ИтСтр;
КонецФункции //ИтоговаяСтрока

//******************************************************************************
// РассчитатьНалоги()
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа 
// в зависимости от найденных ставок налогов и выбранного варианта формирования
// отпускных цен.
//
Процедура РассчитатьНалоги()
	
	НДС = глПоказательДокумента(Контекст, "НДС");
	НП = глПоказательДокумента(Контекст, "НП");
	Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
	ВидимостьЭлементовДляОтгрузки = ?(ВидОтпуска = 1,0,1);
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС") * ВидимостьЭлементовДляОтгрузки);
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП") * ВидимостьЭлементовДляОтгрузки);
	
КонецПроцедуры // РассчитатьНалоги()

//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
//
// Вызывается из формул элементов диалога:
//  Колонка "Материал",
//  Колонка "КоличествоНадлежитОтпустить",
//  Колонка "Цена",
//  Колонка "Сумма",
//  Колонка "НДС",
//  Колонка "НП",
//  Колонка "Всего".
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа.
//
Процедура Пересчет(ИмяРеквизита="")
		
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;

	Если ВидОтпуска <> 1 Тогда
		Если Материал.Выбран() = 1 Тогда
			Если (ИмяРеквизита = "Материал") Тогда
				Цена = глСуммаДокумента(Контекст, Материал);
				Если КоличествоНадлежитОтпустить <> 0 Тогда
					Пересчет("Цена");
				КонецЕсли;
				
			ИначеЕсли (ИмяРеквизита = "КоличествоНадлежитОтпустить") или (ИмяРеквизита = "КоличествоОтпущено")Тогда
				Если ИмяРеквизита = "КоличествоНадлежитОтпустить" Тогда
					КоличествоОтпущено = КоличествоНадлежитОтпустить;
					Количество = КоличествоНадлежитОтпустить;
				Иначе
					Количество = КоличествоОтпущено;
				КонецЕсли;
				
				Сумма = Цена*Количество;
				РассчитатьНалоги();
				
			ИначеЕсли (ИмяРеквизита = "Цена") Тогда
				Сумма = Цена*КоличествоОтпущено;
				РассчитатьНалоги();
			ИначеЕсли (ИмяРеквизита = "Сумма") Тогда
				РассчитатьНалоги();
				Цена = ?(КоличествоОтпущено = 0, Сумма, Сумма/КоличествоОтпущено);
			ИначеЕсли (ИмяРеквизита = "НДС") или (ИмяРеквизита = "НП") Тогда
				Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // Пересчет()

//*****************************************************************************
// ПриВыбореВариантаРасчетаНалогов()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "ВариантРасчетаНалогов".
//
// Описание:
//  Пересчитывает суммы в документе при смене варианта расчета налогов.
//
Процедура ПриВыбореВариантаРасчетаНалогов()
	
	Если ВариантРасчетаНалогов = ТекущийВариантРасчетаНалогов Тогда
		Возврат
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда 
		Ответ = Вопрос("Пересчитать суммы налогов в существующих строках
		|табличной части (суммы налогов будут
		|обновлены в соответствии с выбранным вариантом)?", "Да+Нет+Отмена");
		Если Ответ = "Да" Тогда
			
			ОбщееКоличество = КоличествоСтрок();
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				РассчитатьНалоги();
				Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
			КонецЦикла;  
			
		ИначеЕсли Ответ = "Отмена" Тогда
			ВариантРасчетаНалогов = ТекущийВариантРасчетаНалогов;
		КонецЕсли;
		
	КонецЕсли;
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		НДС = ?(УчитыватьНДС = 0, 0, НДС);
		НП = ?(УчитыватьНП = 0, 0, НП);
	КонецЦикла;
	ВидимостьЭлементовДляОтгрузки = ?(ВидОтпуска = 1,0,1);
	Форма.НДС.Видимость(УчитыватьНДС * ВидимостьЭлементовДляОтгрузки);
	Форма.НП.Видимость(УчитыватьНП * ВидимостьЭлементовДляОтгрузки);
	
КонецПроцедуры // ПриВыбореВариантаРасчетаНалогов()

//_____________________________________________________________________________
Процедура Подбор()
	КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
	КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
	КонтекстФормыПодбора.ДобавитьЗначение(МестоХранения, "МестоХранения");
	ОткрытьПодбор("Справочник.Материалы", "ДляПодбора", КонтекстФормыПодбора);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ОбработкаПодбора(ВыбрМатериал)
	Кол = 1;
	Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
		Возврат;
	ИначеЕсли Кол = 0 Тогда
		Возврат;
	КонецЕсли;

	НоваяСтрока();
	Материал = ВыбрМатериал;
	КоличествоНадлежитОтпустить = Кол;
	АктивизироватьСтроку();
	Пересчет("Материал");
КонецПроцедуры
//_____________________________________________________________________________
Процедура Печать()
	НомерДокПечатнойФормы = глПреобразоватьНомерДок(НомерДок, 0, 0);
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("М-15");
	
	ПодразделениеОтправитель = МестоХранения;
	
	Если ВидОтпуска <> 1 Тогда
		Таб.ВывестиСекцию("Шапка");
		
		ЦеныВДоговоре = 1; // в рублях
		Если Договор.Выбран() = 1 Тогда
			Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
				ЦеныВДоговоре = 2; // в валюте
				Валюта = Договор.ВалютаДоговора;
				Кратность = Валюта.Кратность.Получить(ДатаДок);
				Кратность = ?(Кратность=0, 1, Кратность);
				Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
					Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Субсчет = Материал.СубСчет10;
			МЦ = Материал;
			Код = Материал.Код;
			ЕдиницаИзмерения = Материал.ЕдиницаИзмерения;
			ЕдиницаИзмеренияКод = ЕдиницаИзмерения.Код;
			Количество = КоличествоОтпущено;
			
			Кол = ?(Количество = 0, 1, Количество);
			ПечЦена = (Всего - НДС - НП)/Кол;
			СуммаБезНДС = Всего - НДС - НП;  
			
			// Если цена, указанная в документе без налогов,
			// то в печ. форме надо отражть ее.
			Если (ВариантРасчетаНалогов.СуммаВключаетНДС = 0)
			и (ВариантРасчетаНалогов.СуммаВключаетНП = 0) Тогда
				ПечЦена = Цена;
			КонецЕсли;
			
			ПечЦена = ?(ЦеныВДоговоре = 2, Окр(ПечЦена*Курс/Кратность, 2, 1), ПечЦена);
			СуммаБезНДС = ?(ЦеныВДоговоре = 2, Окр(СуммаБезНДС*Курс/Кратность, 2, 1), СуммаБезНДС);
			СуммаНДС = ?(ЦеныВДоговоре = 2, Окр(НДС*Курс/Кратность, 2, 1), НДС);
			ПечВсего = ?(ЦеныВДоговоре = 2, Окр(Всего*Курс/Кратность, 2, 1), Всего);
			Таб.ВывестиСекцию("Строка");
		КонецЦикла;
		
		ИтогВсего = ?(ЦеныВДоговоре = 2, Окр(Итог("Всего")*Курс/Кратность, 2, 1), Итог("Всего"));
		ИтогНДС = ?(ЦеныВДоговоре = 2, Окр(Итог("НДС")*Курс/Кратность, 2, 1), Итог("НДС"));
		
		Таб.ВывестиСекцию("Подвал");
	Иначе
		Если Проведен() = 0 Тогда
			ТекстПредупреждения = "Для непроведенного документа графы ""Цена"" и ""Сумма"" не заполняются.";
			Таб.ВывестиСекцию("Предупреждение");
			Таб.ВывестиСекцию("Шапка");
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Субсчет = Материал.СубСчет10;
				МЦ = Материал;
				Код = Материал.Код;
				ЕдиницаИзмерения = Материал.ЕдиницаИзмерения;
				ЕдиницаИзмеренияКод = ЕдиницаИзмерения.Код;
				Количество = КоличествоОтпущено;
				ПечЦена = 0;
				СуммаБезНДС = 0;
				СуммаНДС = 0;
				ПечВсего = 0;
				Таб.ВывестиСекцию("Строка");
			КонецЦикла;
			
			ИтогВсего = 0;
			ИтогНДС = 0;
			
			Таб.ВывестиСекцию("Подвал");
		ИначеЕсли Модифицированность() = 1 Тогда
			Предупреждение("Для печати документ необходимо перепровести.");
			Возврат;
			
		Иначе
			Таб.ВывестиСекцию("Шапка");
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Субсчет = Материал.СубСчет10;
				МЦ = Материал;     
				Код = Материал.Код;
				ЕдиницаИзмерения = Материал.ЕдиницаИзмерения;
				ЕдиницаИзмеренияКод = ЕдиницаИзмерения.Код;
				Количество = КоличествоОтпущено; 
				ПечЦена = Цена;
				СуммаБезНДС = Сумма;
				СуммаНДС = 0;                
				ПечВсего = Всего;
				Таб.ВывестиСекцию("Строка");
			КонецЦикла;
			
			ИтогВсего = Итог("Всего");
			ИтогНДС = 0;
			
			Таб.ВывестиСекцию("Подвал");
		КонецЕсли;
	КонецЕсли;
		Таб.Опции(0,0,?((ВидОтпуска = 1) и (Проведен() = 0), 1, 0),0,"ОпцииПечатиМ15","ОкноМ15");
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Печать накладной форма №М-15","");
	
КонецПроцедуры // Печать
	
//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура УправлениеВидимостьюРеквизитов()
	
	Если ВидОтпуска = 0 Тогда // продажа
		Форма.ИспользоватьСлой("Дополнительный, Налоги", 1);
		Форма.ИспользоватьСлой("Возврат", 0);
		
	ИначеЕсли ВидОтпуска = 1 Тогда // передача в переработку
		Форма.ИспользоватьСлой("Возврат, Дополнительный, Налоги", 0);
	    
	ИначеЕсли ВидОтпуска = 2 Тогда // возврат поставщику
	    Форма.ИспользоватьСлой("Дополнительный", 0);
		Форма.ИспользоватьСлой("Возврат, Налоги", 1);
	КонецЕсли;
	
	ВидимостьЭлементовДляОтгрузки = ?(ВидОтпуска = 1,0,1);
	
	Форма.Цена.Видимость(ВидимостьЭлементовДляОтгрузки);
	Форма.Сумма.Видимость(ВидимостьЭлементовДляОтгрузки);
	Форма.Всего.Видимость(ВидимостьЭлементовДляОтгрузки);
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС") * ВидимостьЭлементовДляОтгрузки);
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП") * ВидимостьЭлементовДляОтгрузки);
	
КонецПроцедуры // УправлениеВидимостьюРеквизитов
//_____________________________________________________________________________
Процедура УправлениеДиалогом()
	УправлениеВидимостьюРеквизитов();
	УправлениеКурсом();
	Если ВидОтпуска <> 1 Тогда
		ОбщееКоличество = КоличествоСтрок();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Пересчет("Сумма");
			Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // УправлениеДиалогом

//******************************************************************************
// ПриВыбореВидаОтпуска()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореВидаОтпуска()
	
	Если ВидОтпуска <> ВидОтпускаМатериалов.ТекущаяСтрока() - 1 Тогда
	    ВидОтпуска = ВидОтпускаМатериалов.ТекущаяСтрока() - 1;
		УправлениеДиалогом();
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаОтпуска()

//*****************************************************************************
// ЗаполнитьНаОсновании(ДокОсн)
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Число  - 1 - реквизиты заполнены, 0 - не заполнены.
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаЗаполнить".
//
// Описание:
//  Устанавливает значения реквизитов документа в зависимости от значений
//  реквизитов документа основания.
//
Функция ЗаполнитьНаОсновании()
	
	Если ПустоеЗначение(ДокументПоступления) = 1 Тогда
	    Предупреждение("Выберите документ, которым ранее было 
		               |отражено поступление материалов от поставщика!");
		Возврат 0;
		
	ИначеЕсли
		Вопрос("Документ будет  заполнен на основании
		       |выбранного документа. Продолжить?", "Да+Нет" ) <> "Да" Тогда
					
		Возврат 0;
	КонецЕсли;
	
	// Заполненеие шапки.
	МестоХранения = ДокументПоступления.МестоХранения;    
	Контрагент    = ДокументПоступления.Контрагент;
	Договор       = ДокументПоступления.Договор;
	Курс          = ДокументПоступления.Курс;
	ВариантРасчетаНалогов = ДокументПоступления.ВариантРасчетаНалогов;
	НДСВключатьВСтоимость = ДокументПоступления.НДСВключатьВСтоимость;
	ПриВыбореДоговора();
	УправлениеКурсом();
	
	// Заполнение табличной части.
	УдалитьСтроки();
	                                                    
	ДокументПоступления.ВыбратьСтроки();
	Пока ДокументПоступления.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
	    Материал                    = ДокументПоступления.Материал;
		КоличествоНадлежитОтпустить = ДокументПоступления.Количество;
		КоличествоОтпущено          = ДокументПоступления.Количество;
		Цена                        = ДокументПоступления.Цена;
		Сумма                       = ДокументПоступления.Сумма;
		НДС                         = ДокументПоступления.НДС;
		НП                          = ДокументПоступления.НП;
		Всего                       = ДокументПоступления.Всего;
	КонецЦикла;
	
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП"));
	
КонецФункции // ЗаполнитьНаОсновании()

//_____________________________________________________________________________
Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

    МестоХранения = глЗначениеПоУмолчанию("ОсновнойСклад");
	ЗачитыватьАванс = 0;
	
	ВРН = Константа.ОсновнойВариантРасчетаНалоговОтгрузки;
	Если (ВРН.СтавкаНП.Выбран() = 1) и
		 (ВРН.СтавкаНДС.Выбран() = 1) Тогда
		ВариантРасчетаНалогов = ВРН;
		
	Иначе // попробуем найти подходящий из существующих вариантов расчета налогов
		СтНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС").Ставка;
		СтНП  = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП").Ставка;
		
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			
			Если ((ВРН.СтавкаНДС.Выбран() = 1)
			    и (СпрВариант.СтавкаНДС = ВРН.СтавкаНДС)
			    и (СпрВариант.СуммаВключаетНДС = ВРН.СуммаВключаетНДС))
				
			 или ((ВРН.СтавкаНДС.Выбран() = 0)
				и (СпрВариант.СтавкаНДС.Ставка = СтНДС)
			    и (СпрВариант.СуммаВключаетНДС = ВРН.СуммаВключаетНДС)) Тогда
					
				Если ((ВРН.СтавкаНП.Выбран() = 1)
				    и (СпрВариант.СтавкаНП = ВРН.СтавкаНП)
				    и (СпрВариант.СуммаВключаетНП = ВРН.СуммаВключаетНП))
					
				 или ((ВРН.СтавкаНП.Выбран() = 0)
					и (СпрВариант.СтавкаНП.Ставка  = СтНП)
				    и (СпрВариант.СуммаВключаетНП = ВРН.СуммаВключаетНП)) Тогда
		
					ВариантРасчетаНалогов = СпрВариант.ТекущийЭлемент();
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	ПоставщикуВыставляетсяСчетФактураНаВозврат = 1;
	
КонецПроцедуры // ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии() // Предопределенная процедура
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	
	Форма.ИспользоватьСлой("Основной", 1);
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПровести.Доступность(0);
		Форма.КнопкаПодбор.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
	КонецЕсли;
    КонтекстФормыПодбора = 0;
	
	Форма.Материал.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.КоличествоНадлежитОтпустить.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.КоличествоОтпущено.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Цена.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Сумма.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НП.ВыполнятьФормулуТолькоПриИзменении(1);
	НачальнаяДатаДокумента = ДатаДок;
	                                      
	ВариантЗачетаАванса.ДобавитьЗначение(1, "не зачитывать");
	ВариантЗачетаАванса.ДобавитьЗначение(2, "только по договору");
	ВариантЗачетаАванса.ДобавитьЗначение(0, "без указания договора");
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));
	
	ВидОтпускаМатериалов.ДобавитьЗначение("Продажа");
	ВидОтпускаМатериалов.ДобавитьЗначение("Передача в переработку на сторону");
	ВидОтпускаМатериалов.ДобавитьЗначение("Возврат поставщику");
	ВидОтпускаМатериалов.ТекущаяСтрока(ВидОтпуска+1);
	
	ПриВыбореВидаОтпуска();
	УправлениеВидимостьюРеквизитов();
	УправлениеКурсом();
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);;
	
КонецПроцедуры //  ПриОткрытии
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	ЦеныВДоговоре = 1; // в рублях
	Если Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
	КонецЕсли;
	
	Если ЦеныВДоговоре = 2 Тогда
		Валюта = Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
		Операция.СуммаОперации = Окр(Итог("Всего")*Курс/Кратность, 2, 1);
	Иначе
		Операция.СуммаОперации = Итог("Всего");
	КонецЕсли;
	Операция.Содержание = "Отпуск материалов на сторону";
	
КонецПроцедуры // ПриЗаписи()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "СтатьяПрочихДоходовИРасходов" Тогда
	    ОткрытьФорму("Справочник.ПрочиеДоходыИРасходы", Перечисление.ВидыПрочихДоходовИРасходов.ВыбытиеАктивов);
		Флаг = 0;
	
	ИначеЕсли ЭлементДиалога = "ВариантРасчетаНалогов" Тогда
		ТекущийВариантРасчетаНалогов = ВариантРасчетаНалогов;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()


//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Накладная М-15";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
