////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем Сч71_1, Сч71_11;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;

//_____________________________________________________________________________
Процедура ПриУстановкеТипаОтчета()
	Если ТипОтчета = 2 Тогда
		Форма.Валюта.Видимость(1);
		Форма.КурсВал.Видимость(1);
		Форма.РамкаВалюты.Видимость(1);
		Если Валюта.Выбран() = 0 Тогда
			Валюта = глЗначениеПоУмолчанию("ОсновнаяВалюта");
		КонецЕсли;
	Иначе
		Если Валюта.Выбран() = 1 Тогда
			Валюта = "";
		КонецЕсли;
		Форма.Валюта.Видимость(0);
		Форма.КурсВал.Видимость(0);
		Форма.РамкаВалюты.Видимость(0);
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Функция ПоказатьКурс()
	Перем Стр;

	Если Валюта.Выбран() = 1 Тогда
		Стр = Валюта.Курс.Получить(ДатаДок);
	Иначе
		Стр = "";
	КонецЕсли;

	Возврат Стр;
КонецФункции //ПоказатьКурс
//_____________________________________________________________________________
Процедура РасчитатьПредыдущийОстаток()
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
						|Расчет итогов выполняется в режиме
						|""Операции - Управление бухгалтерскими итогами"".");
		
	ИначеЕсли (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения остатка предыдущего аванса по данным
						|бухгалтерского учета документ необходимо записать."); 
		
	Иначе
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники,Сотрудник,2);
		Если ТипОтчета = 1 Тогда
			БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"71.1");
			ОстатокПоСчету = БухИт.СНД("С") - БухИт.СНК("С");
		Иначе
			БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"71.11",,Валюта);
			ОстатокПоСчету = БухИт.СНД("В") - БухИт.СНК("В");
		КонецЕсли;
		ОстатокПоСчету = ОстатокПоСчету - Сумма1 - Сумма2 - Сумма3;
		Если ОстатокПоСчету < 0 Тогда
			ТипОстатка = 2; //Перерасход
			ПредОстаток = - ОстатокПоСчету;
		Иначе
			ТипОстатка = 1; //Остаток
			ПредОстаток = ОстатокПоСчету;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //РасчитатьПредыдущийОстаток
//_____________________________________________________________________________
Функция РасчетОстатка()
	Ост = Сумма1 + Сумма2 + Сумма3;
    Ост = Ост - Итог("Сумма");

	Если ТипОстатка = 1 Тогда //остаток
		Ост = Ост + ПредОстаток;
	Иначе //перерасход
		Ост = Ост - ПредОстаток;
	КонецЕсли;
	Возврат Ост;
КонецФункции  //РасчетОстатка
//_____________________________________________________________________________
Процедура ПриВыбореСчета()
	НазначитьТип("Субконто1", КоррСчет.ВидСубконто(1));
	НазначитьТип("Субконто2", КоррСчет.ВидСубконто(2));
	НазначитьТип("Субконто3", КоррСчет.ВидСубконто(3));

    Форма.Количество.Доступность(КоррСчет.Количественный);
	Если КоррСчет.Количественный = 0 Тогда
		Количество = 0;
	КонецЕсли;

	Если КоррСчет.Валютный = 1 Тогда
	    Предупреждение("Корреспондирующий счет не может быть валютным.");
	КонецЕсли;
	
	Если (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		Если ТипОтчета = 2 Тогда
		    Сч71 = Сч71_11;
		Иначе
		    Сч71 = Сч71_1;
		КонецЕсли;
	    глПроверкаКорректныхПроводок(КоррСчет,Сч71);
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// ПриВыбореСубконто()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Субконто1, Субконто2, Субконто3.
//
// Описание:
//  Проверяется соотвествие контрагента и договора, указанного в аналитике.
//
Процедура ПриВыбореСубконто()
	
	ИдентификаторРеквизита = Форма.ТекущаяКолонка();
	ЗначениеРеквизита = ПолучитьАтрибут(ИдентификаторРеквизита);
	НомерСубконто = Число(Прав(ИдентификаторРеквизита, 1));
	Если ТипЗначенияСтр(ЗначениеРеквизита) = "Справочник" Тогда
		Если ЗначениеРеквизита.Вид() = "Контрагенты" Тогда
			Если НомерСубконто < 3 Тогда
				ИдентификаторСледующегоРеквизита = Лев(ИдентификаторРеквизита, СтрДлина(ИдентификаторРеквизита)-1) + (НомерСубконто + 1);
				ЗначениеСледующегоРеквизита = ПолучитьАтрибут(ИдентификаторСледующегоРеквизита);
				Если ТипЗначенияСтр(ЗначениеСледующегоРеквизита) = "Справочник" Тогда
					Если ЗначениеСледующегоРеквизита.Вид() = "Договоры" Тогда
						Если ЗначениеРеквизита <> ЗначениеСледующегоРеквизита.Владелец Тогда
						    УстановитьАтрибут(ИдентификаторСледующегоРеквизита, ЗначениеРеквизита.ОсновнойДоговор);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ЗначениеРеквизита.Вид() = "Договоры" Тогда
			Если (ПустоеЗначение(ЗначениеРеквизита) = 0) и (НомерСубконто > 1) Тогда
				ИдентификаторПредыдущегоРеквизита = Лев(ИдентификаторРеквизита, СтрДлина(ИдентификаторРеквизита)-1) + (НомерСубконто - 1);
				ЗначениеПредыдущегоРеквизита = ПолучитьАтрибут(ИдентификаторПредыдущегоРеквизита);
				Если ТипЗначенияСтр(ЗначениеПредыдущегоРеквизита) = "Справочник" Тогда
					Если ЗначениеПредыдущегоРеквизита.Вид() = "Контрагенты" Тогда
						Если ЗначениеРеквизита.Владелец <> ЗначениеПредыдущегоРеквизита Тогда
						    УстановитьАтрибут(ИдентификаторПредыдущегоРеквизита, ЗначениеРеквизита.Владелец);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСубконто()

//*****************************************************************************
// Печать()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Печать".
//
// Описание:
//  Формирует печатную форму авансового отчета. До 01.01.2002 - форму 807,
// после - типовую форму АО-1.
//
Процедура Печать()

	Если (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения печатной формы документ необходимо записать.");
		
	Иначе
		Если Валюта.Выбран() = 1 Тогда
		    Курс = Валюта.Курс.Получить(ДатаДок);
			Кратность = Валюта.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
		Иначе
			Курс = 1;
			Кратность = 1;
		КонецЕсли;
		
		Если ДатаДок >= '01.01.2002' Тогда
			// Расчет значений для печати формы АО-1.
			Израсходовано = Окр(Итог("Сумма")*Курс/Кратность, 2, 1);
			ИзрасходованоПрописью = Формат(Израсходовано,"ЧПДС")+
									" ("+Цел(Израсходовано)+
									" руб. "+
									Формат((Израсходовано-Цел(Израсходовано))*100,"Ч(0)2")+
									" коп.)";
			Если ТипОстатка = 1 Тогда
				НачальныйОстаток = Окр(ПредОстаток*Курс/Кратность, 2, 1);
				НачальныйПерерасход = 0;
			Иначе
				НачальныйОстаток = 0;
				НачальныйПерерасход = Окр(ПредОстаток*Курс/Кратность, 2, 1);
			КонецЕсли;
			СуммаРуб1 = Окр(Сумма1*Курс/Кратность, 2, 1);
			СуммаРуб1Вал = ?(Валюта.Выбран() = 1, СуммаРуб1, 0);
			СуммаВал1 = ?(Валюта.Выбран() = 1, СокрЛ(Формат(Сумма1, "Ч015.2-")) + " "+Валюта, "");
			СуммаРуб2 = Окр(Сумма2*Курс/Кратность, 2, 1);
			СуммаРуб3 = Окр(Сумма3*Курс/Кратность, 2, 1);
			ИтогоПолучено = СуммаРуб1 + СуммаРуб2 + СуммаРуб3;
			КонечныйОстаток = НачальныйОстаток - НачальныйПерерасход + ИтогоПолучено - Израсходовано;
			Если КонечныйОстаток < 0 Тогда
				КонечныйПерерасход = - КонечныйОстаток;
			    КонечныйОстаток = 0;
			КонецЕсли;
			ТекстРасписки = "Принят к проверке от  _____________________________  авансовый отчет № "+
							глПреобразоватьНомерДок(НомерДок, 0, 0)+
							" от "+Формат(ДатаДок,"Д (0)ДДММММГГГГ")+РазделительСтрок+
							"на сумму "+Формат(Израсходовано,"ЧПДС")+", количество документов "+
							ПриложеноДок+" на  "+НаЛистах+"  листах";
			
			// Печать заголовка формы АО-1.
			Таб=СоздатьОбъект("Таблица");
			ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\1cbao1.mxl";
			Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
				Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
			Иначе
				Таб.ИсходнаяТаблица("АО-1");
			КонецЕсли;
			ПозПробела = 40; //NDline
			НаименованиеАванса1 = Лев(НаименованиеАванса, 40);
			НаименованиеАванса2 = Сред(НаименованиеАванса, 40);
			Пока ПозПробела > 0 Цикл
				Если Сред(НаименованиеАванса1, ПозПробела, 1) = " " Тогда
					НаименованиеАванса1 = Лев(НаименованиеАванса, ПозПробела);
					НаименованиеАванса2 = Сред(НаименованиеАванса, ПозПробела);
					Прервать;
				КонецЕсли;
				ПозПробела = ПозПробела - 1;
			КонецЦикла; //NDline
			Таб.ВывестиСекцию("Заголовок");
		
		Иначе // печать заголовка формы 807	
			СохранитьЗначение("АвансовыйОтчет_ПереводСтраницы", ПереводСтраницы);
			Таб=СоздатьОбъект("Таблица");
			ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\1cbava.mxl";
			Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
				Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
			Иначе
				Таб.ИсходнаяТаблица("Таблица");
			КонецЕсли;
			Таб.ВывестиСекцию("Заголовок");
			
			СтрПредОстаток = "" + Формат(ПредОстаток,"Ч015.2-");
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрПредОстаток) = 0) Тогда
				СтрПредОстаток = СтрПредОстаток + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			Если ТипОстатка = 1 Тогда
				СтрНачальныйОстаток = СтрПредОстаток;
				СтрНачальныйПерерасход = "";
			Иначе
				СтрНачальныйОстаток = "";
				СтрНачальныйПерерасход = СтрПредОстаток;
			КонецЕсли;
			
			СтрСумма1 = "" + Формат(Сумма1,"Ч015.2-");
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрСумма1) = 0) Тогда
				СтрСумма1 = СтрСумма1 + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			СтрСумма2 = "" + Формат(Сумма2,"Ч015.2-");
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрСумма2) = 0) Тогда
				СтрСумма2 = СтрСумма2 + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			СтрСумма3 = "" + Формат(Сумма3,"Ч015.2-");
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрСумма3) = 0) Тогда
				СтрСумма3 = СтрСумма3 + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			СтрИтогоПолучено = "" + Формат(Сумма1 + Сумма2 + Сумма3,"Ч015.2-");
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрИтогоПолучено) = 0) Тогда
				СтрИтогоПолучено = СтрИтогоПолучено + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			
			Если ТипОтчета = 2 Тогда
				СтрИзрасходовано = "" + Формат(Итог("Сумма"),"Ч015.2-");
				Если ПустоеЗначение(Валюта.ИмяФайлаПрописи) = 1 Тогда
					Предупреждение("Для выбранной валюты не указан файл прописи.");
				ИначеЕсли ФС.СуществуетФайл(КаталогИБ()+Валюта.ИмяФайлаПрописи) = 0 Тогда
					Предупреждение("Для выбранной валюты неверно указан файл прописи.");
				Иначе
					Пропись(КаталогИБ()+Валюта.ИмяФайлаПрописи);
				КонецЕсли;
				СтрИзрасходованоПрописью = Формат(Итог("Сумма"),"ЧПДС");
				Пропись("");
			Иначе
				СтрИзрасходовано = "" + Формат(Итог("Сумма"),"Ч015.2-");
				СтрИзрасходованоПрописью = Формат(Итог("Сумма"),"ЧПДС");
			КонецЕсли;
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрИзрасходовано) = 0) Тогда
				СтрИзрасходовано = СтрИзрасходовано + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			
			ТекОстаток = РасчетОстатка();
			СтрТекОстаток = "" + Формат(?(ТекОстаток>0,ТекОстаток,-ТекОстаток),"Ч015.2-");
			Если (ТипОтчета = 2) и (ПустоеЗначение(СтрТекОстаток) = 0) Тогда
				СтрТекОстаток = СтрТекОстаток + " " + СокрЛП(Валюта.Наименование);
			КонецЕсли;
			Если ТекОстаток > 0 Тогда
				СтрКонечныйОстаток = СтрТекОстаток;
				СтрКонечныйПерерасход = "";
			Иначе
				СтрКонечныйОстаток = "";
				СтрКонечныйПерерасход = СтрТекОстаток;
			КонецЕсли;
		КонецЕсли; // конец печати заголовка формы 807
		
		// Общая для форм 807 и АО-1 печать курсовой разницы.
		НомерСтрокиТаблицы = 1;
		Если ТипОтчета = 2 Тогда
			СписокСчетов = Константа.СчетаПереоцениваемыеВОсобомПорядке.Получить(ДатаДок);
			Если Найти(СписокСчетов, "71.11") = 0 Тогда
				БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
				БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники,Сотрудник,2);
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"71.11",,Валюта);
				РублевыйОстаток = БухИт.СНД("С") - БухИт.СНК("С");
				ВалютныйОстаток = БухИт.СНД("В") - БухИт.СНК("В");
				НовыйРублевыйОстаток = Окр(ВалютныйОстаток*Курс/Кратность,2,1);
				КурсоваяРазница = НовыйРублевыйОстаток - РублевыйОстаток;
				
				Если КурсоваяРазница <> 0 Тогда
					Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
					Таб.ПрисоединитьСекцию("КурсоваяРазница|Таблица");
					НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Печать бух. записи по кредиту 71.
		Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
		Таб.ПрисоединитьСекцию("Израсходовано|Таблица");
		НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
		
		// Печать бух. записи в валюте для формы 807.
		Если (Валюта.Выбран() = 1) и (ДатаДок < '01.01.2002') Тогда
			Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
			Таб.ПрисоединитьСекцию("ВалИзрасходовано|Таблица");
			НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
		КонецЕсли;
		
		// Печать бух. записей, сгруппированным  по счетам затрат для
		// форм 807 и АО-1.
		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса =
		"//{{ЗАПРОС(Сформировать)
		|Период с (ТекущийДокумент()) по (ТекущийДокумент());
		|ОбрабатыватьДокументы все;
		|КоррСчет = Документ.АвансовыйОтчет.КоррСчет;
		|Сумма = Документ.АвансовыйОтчет.Сумма;
		|НДС = Документ.АвансовыйОтчет.НДС;
		|Функция ИтогоПоСчету = Сумма(Сумма);
		|Функция НДСПоСчету = Сумма(НДС);
		|Группировка КоррСчет Без Групп;
		|Условие (Сумма <> 0);
		|"//}}ЗАПРОС
		;
		// Если ошибка в запросе, то выход из процедуры
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ВсегоСекций = ?(ДатаДок >= '01.01.2002', 8, 12);
		Флаг = 1; // если 0, то таблица бух. записей превысила допустимые 8 строк
		Пока (Запрос.Группировка("КоррСчет") = 1) И (Флаг = 1) Цикл
			Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
			ПоСчетуБезНДС = Окр(Запрос.ИтогоПоСчету*Курс/Кратность,2,1) - Окр(Запрос.НДСПоСчету*Курс/Кратность,2,1);
			Таб.ПрисоединитьСекцию("НеПустаяСтрока|Таблица");
			НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
			
			Если НомерСтрокиТаблицы > ВсегоСекций Тогда
				Флаг = 0;
			КонецЕсли;
		КонецЦикла;
		
		// Для формы АО-1 печать НДС.
		Если (ДатаДок >= '01.01.2002') и (Итог("НДС") <> 0) и (НомерСтрокиТаблицы <= ВсегоСекций) Тогда
			Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
			ПоСчетуНДС = Окр(Итог("НДС")*Курс/Кратность,2,1);
			Таб.ПрисоединитьСекцию("НДС|Таблица");
			НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
		КонецЕсли;
		
		// Печать оставшихся секций.
		Пока НомерСтрокиТаблицы <= ВсегоСекций Цикл
			Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
			Таб.ПрисоединитьСекцию("ПустаяСтрока|Таблица");
			НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
		КонецЦикла;
		
		ПредставлениеГода = Лев(ДатаГод(ДатаДок),3);
		Таб.ВывестиСекцию("ПослеТаблицы");
		Если (ПереводСтраницы=1) или (ДатаДок >= '01.01.2002') Тогда
			Таб.НоваяСтраница();
		КонецЕсли;
		
		// Печать табличной части.
		Таб.ВывестиСекцию("Шапка");
		
		Если (ДатаДок >= '01.01.2002') Тогда // форма АО-1
		    СуммаСтрок = 0;
			СуммаСтрокПоОтчету = 0;
			
			СуммаСтрокиВал = 0;
			СуммаСтрокиПоОтчетуВал = 0;
			СуммаСтрокВал = 0;
			СуммаСтрокПоОтчетуВал = 0;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				СуммаСтроки = Окр(Сумма*Курс/Кратность, 2, 1);
				СуммаСтрок = СуммаСтрок + СуммаСтроки;
				СуммаСтрокиПоОтчету = Окр(СуммаПоОтчету*Курс/Кратность, 2, 1);
				СуммаСтрокПоОтчету = СуммаСтрокПоОтчету + СуммаСтрокиПоОтчету;
				Если Валюта.Выбран() = 1 Тогда
				    СуммаСтрокиВал = Сумма;
					СуммаСтрокВал = СуммаСтрокВал + СуммаСтрокиВал;
					СуммаСтрокиПоОтчетуВал = СуммаПоОтчету;
					СуммаСтрокПоОтчетуВал = СуммаСтрокПоОтчетуВал + СуммаСтрокиПоОтчетуВал;
				КонецЕсли;
			    Таб.ВывестиСекцию("Строка");
			КонецЦикла;
			Таб.ВывестиСекцию("Подвал");
		
		Иначе // форма 807
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Если Валюта.Выбран() = 0 Тогда
				    СуммаСтроки = Формат(Сумма,"Ч15.2-");
				Иначе
					СуммаСтроки = Формат(Сумма*Курс/Кратность,"Ч15.2-")+"
								  |"+Формат(Сумма,"Ч15.2-")+" "+СокрЛП(Валюта.Наименование);
				КонецЕсли;
				Таб.ВывестиСекцию("Строка");
			КонецЦикла;
			Если Валюта.Выбран() = 0 Тогда
			    СуммаВсего = Формат(Итог("Сумма"),"Ч15.2-");
			Иначе
				СуммаВсего = Формат(Итог("Сумма")*Курс/Кратность,"Ч15.2-")+"
							  |"+Формат(Итог("Сумма"),"Ч15.2-")+" "+СокрЛП(Валюта.Наименование);
			КонецЕсли;
			Таб.ВывестиСекцию("Подвал");
			Таб.ПараметрыСтраницы(,,,10,0,5,,,,);
		КонецЕсли;
		Таб.Опции(0,0,0,0,"ОпцииПечатиАвансовогоОтчета","ПараметрыОкнаАвансовогоОтчета");
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Авансовый отчет","");
	КонецЕсли;
	
КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура ВводНового(Копирование);
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;

	ТипОтчета = 1;
	//Валюта = глЗначениеПоУмолчанию("ОсновнаяВалюта");
	ТипОстатка = 1;
	Получено1 = "из кассы";
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПоказать.Доступность(0);
	КонецЕсли;

	ПереводСтраницы = ВосстановитьЗначение("АвансовыйОтчет_ПереводСтраницы");

	Сч71_1 = СчетПоКоду("71.1");
	Сч71_11 = СчетПоКоду("71.11");
	Форма.КоррСчет.ВыборГруппы(0);
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение(1,"Лицевая сторона");
	Форма.Закладки.ДобавитьЗначение(2,"Оборотная сторона");
	Форма.ИспользоватьСлой("Основной, Шапка",2);
	ТипОтчета = Валюта.Выбран() + 1;
	ПриУстановкеТипаОтчета();
	Форма.Кн_Видеокурс.Видимость(?(ТипЗначения(Видео_Компонента) = 0, 0, 1));
	НачальнаяДатаДокумента = ДатаДок;
	
	Если ДатаДок >= '01.01.2002' Тогда
	    Форма.ПереводСтраницы.Видимость(0);
	КонецЕсли;
	Форма.СуммаПоОтчету.ВыполнятьФормулуТолькоПриИзменении(1);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки = 1 Тогда
		Форма.ИспользоватьСлой("Основной, Шапка",2);
		ПриУстановкеТипаОтчета();
	Иначе
		Форма.ИспользоватьСлой("Основной, Таблица",2);
		Форма.Валюта.Видимость(0);
		Форма.КурсВал.Видимость(0);
		Форма.РамкаВалюты.Видимость(0);
		Если ДатаДок >= '01.01.2002' Тогда
		    Форма.ПереводСтраницы.Видимость(0);
		КонецЕсли;
	КонецЕсли;
	Форма.Кн_Видеокурс.Видимость(?(ТипЗначения(Видео_Компонента) = 0, 0, 1));
		
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если (ИдентЭлемДиалога = "КоррСчет") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		Если ТипОтчета = 2 Тогда
		    Сч71 = Сч71_11;
		Иначе
		    Сч71 = Сч71_1;
		КонецЕсли;
	    СписокКорректныхПроводок.Установить("Счет", Сч71);
	    СписокКорректныхПроводок.Установить("Корреспонденция", 0);//кредитовый счет
		глЗначениеОтбора = СписокКорректныхПроводок;
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения
//_____________________________________________________________________________
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;


	Если ТипОтчета = 1 Тогда
		Валюта = "";
		Операция.СуммаОперации = Итог("Сумма");
		
	Иначе
		Если Валюта.Выбран() = 1 Тогда
			Курс = Валюта.Курс.Получить(ДатаДок);
			Кратность = Валюта.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
		
		Иначе
			Курс = 1;
			Кратность = 1;
		КонецЕсли;
		Операция.СуммаОперации = Итог("Сумма")*Курс/Кратность;
	КонецЕсли;
	
	Операция.Содержание = "Авансовый отчет: "+Сотрудник;
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Авансовый отчет";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
