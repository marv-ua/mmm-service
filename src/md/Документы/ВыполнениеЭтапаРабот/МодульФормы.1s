////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;
Перем СтарыйДоговор;
Перем СтарыйКурс;
Перем ТекущийВариантРасчетаНалогов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	Стр = "";
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Стр = "Валюта договора: " + Договор.ВалютаДоговора;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//******************************************************************************
// УправлениеКурсом(ИзменитьКурс)
//
// Параметры:
//  ИзменитьКурс - Число. 1 - установить новый курс валюты, 0 - не изменять.
//
// Описание:
//  При выбранной иностранной валюте делает видимым поле "Курс" и записывает
// в него значение из справочника.
//
Процедура УправлениеКурсом(ИзменитьКурс=0)
	
	ВидимостьКурса = Договор.ВалютаДоговора.Выбран();
	Форма.ПодписьКурса.Видимость(ВидимостьКурса);
	Форма.Курс.Видимость(ВидимостьКурса);
	СтарыйКурс = ?(Курс = 0, 1, Курс);
	Если ИзменитьКурс = 1 Тогда
		Если ВидимостьКурса = 1 Тогда
		    Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
			
		Иначе
			Курс = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УправлениеКурсом()

//*****************************************************************************
// ПриВыбореВариантаВыполнения()
//
// Вызывается из формул элементов диалога:
//  Переключатель "ЗавершитьРаботы".
//
// Описание:
//  Управляет видимостью и доступностью элементов диалога при выборе варианта
// завершения работ.
//
Процедура ПриВыбореВариантаВыполнения()
	
	Если ЗавершитьРаботы = 3 Тогда // одноэтапная работа
	    ЗачитыватьАванс = 0;
		Форма.ПодписьЗачетаАванса.Доступность(1);
		Форма.ВариантЗачетаАванса.Доступность(1);
	
	Иначе
		ЗачитыватьАванс = 1;
		Форма.ПодписьЗачетаАванса.Доступность(0);
		Форма.ВариантЗачетаАванса.Доступность(0);
	КонецЕсли;
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));

	Если ЗавершитьРаботы = 2 Тогда
		Форма.ВариантыОплатыРабот.Доступность(1);

	Иначе
		Форма.ВариантыОплатыРабот.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВариантаВыполнения()

//******************************************************************************
// РассчитатьНалоги()
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа 
// в зависимости от найденных ставок налогов и выбранного варианта формирования
// отпускных цен.
//
Процедура РассчитатьНалоги()
	
	НДС = глПоказательДокумента(Контекст, "НДС");
	НП = глПоказательДокумента(Контекст, "НП");
	Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП"));
	
КонецПроцедуры // РассчитатьНалоги()

//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
//
// Вызывается из формул элементов диалога:
//  Колонка "Работа",
//  Колонка "Количество",
//  Колонка "Цена",
//  Колонка "Сумма",
//  Колонка "НДС",
//  Колонка "НП",
//  Колонка "Всего".
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа.
//
Процедура Пересчет(ИмяРеквизита="")
	
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;
	
	Если Работа.Выбран() = 1 Тогда
		Если (ИмяРеквизита = "Работа") Тогда
			Цена = глПолучитьЦену(Контекст,Работа,ТипЦен,ДатаДок,?(Договор.Выбран() = 0,"",Договор.ВалютаДоговора),Курс);
			Если Количество <> 0 Тогда
				Пересчет("Цена")
			КонецЕсли;
			
		ИначеЕсли (ИмяРеквизита = "Количество") Тогда
			Сумма = Цена*Количество;
			РассчитатьНалоги();
			
	    ИначеЕсли (ИмяРеквизита = "Цена") Тогда
			Сумма = Цена*Количество;
			РассчитатьНалоги();
			
		ИначеЕсли (ИмяРеквизита = "Сумма") Тогда
			РассчитатьНалоги();
			Цена = ?(Количество = 0, Сумма, Сумма/Количество);
			
		ИначеЕсли (ИмяРеквизита = "НДС") или (ИмяРеквизита = "НП") Тогда
			Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Пересчет()

//******************************************************************************
Процедура ПересчитатьЦены()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Пересчет("Работа");
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************
// ПриВыбореВариантаРасчетаНалогов()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "ВариантРасчетаНалогов".
//
// Описание:
//  Пересчитывает суммы в документе при смене варианта расчета налогов.
//
Процедура ПриВыбореВариантаРасчетаНалогов()
	
	Если ВариантРасчетаНалогов = ТекущийВариантРасчетаНалогов Тогда
		Возврат
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
		ОбщееКоличество = КоличествоСтрок();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			РассчитатьНалоги();
			Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
		КонецЦикла;
	КонецЕсли;
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		НДС = ?(УчитыватьНДС = 0, 0, НДС);
		НП = ?(УчитыватьНП = 0, 0, НП);
	КонецЦикла;
	Форма.НДС.Видимость(УчитыватьНДС);
	Форма.НП.Видимость(УчитыватьНП);
	
КонецПроцедуры // ПриВыбореВариантаРасчетаНалогов()

//*****************************************************************************   
// ПриВыбореТипаЦен()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Тип цен"
// 
// Описание:
//  Проверяет соответствие типа цен.
//
Процедура ПриВыбореТипаЦен()
	Если (ТипЦен.Выбран()=1)и(КоличествоСтрок()>0) Тогда
		Если Вопрос("Перезаполнить цены в документе?","Да+Нет",60) = "Да" Тогда
			ПересчитатьЦены();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************   
// ПроверитьДоговор()
//
Процедура ПроверитьДоговор()
	СтараяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	НоваяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	НовыйКурс = ?(Курс = 0, 1, Курс);
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;  
	
	Если ПустоеЗначение(СтарыйДоговор) = 1 Тогда
		СтараяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Иначе
		СтараяВалюта = СтарыйДоговор.ВалютаДоговора;
	КонецЕсли;
	
	Если ПустоеЗначение(Договор) = 1 Тогда
		НоваяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Иначе
		НоваяВалюта = Договор.ВалютаДоговора;
	КонецЕсли;
	
	Если СтараяВалюта <> НоваяВалюта Тогда
		Если Вопрос("Изменена валюта договора."+РазделительСтрок+"Пересчитать цены в документе?","Да+Нет",30) = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Цена = глПересчет(Цена,СтараяВалюта,СтарыйКурс,НоваяВалюта,НовыйКурс);
				Пересчет("Цена");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()

	глПриВыбореДоговора(Контрагент, Договор);
	УправлениеКурсом(1); // при изменении договора могла измениться валюта
	ПроверитьДоговор();
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Контрагент, Договор);
	УправлениеКурсом(1);
	ПроверитьДоговор();
	
КонецПроцедуры // ПриВыбореКонтрагента()

//*****************************************************************************   
// ПриВыбореКурса()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Курс"
// 
// Описание:
//  Проверяет соответствие типа цен.
//
Процедура ПриВыбореКурса()  
	//
КонецПроцедуры

//******************************************************************************
// ПриВыбореВариантаЗачетаАванса()
//
// Вызывается из формул элементов диалога:
//  Поле со списком "ВариантыЗачетаАванса".
//
// Описание:
//  Устанавливает значение реквизита "ЗачитыватьАванс".
//
Процедура ПриВыбореВариантаЗачетаАванса()
	
	ЗачитыватьАванс = ВариантЗачетаАванса.ПолучитьЗначение(ВариантЗачетаАванса.ТекущаяСтрока());
	
КонецПроцедуры // ПриВыбореВариантаЗачетаАванса()

//******************************************************************************
// ПриВыбореВариантаОплатыРабот()
//
// Вызывается из формул элементов диалога:
//  Поле со списком "ВариантыОплатыРабот".
//
// Описание:
//  Устанавливает значение реквизита "ВариантОплатыРабот".
//
Процедура ПриВыбореВариантаОплатыРабот()
	
	ВариантОплатыРабот = ВариантыОплатыРабот.ПолучитьЗначение(ВариантыОплатыРабот.ТекущаяСтрока());
	
КонецПроцедуры // ПриВыбореВариантаОплатыРабот()


//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует строку, содержащую итоговые суммы колонок табличной части.
//
Функция ИтоговаяСтрока()
	
	ИтСтр = "Всего: " + СокрЛ(Формат(Итог("Всего"),"Ч20.2-,")) + ", "+
			"в т.ч. НДС: " + СокрЛ(Формат(Итог("НДС"),"Ч20.2-,"));
	Если Итог("НП") > 0 Тогда
		ИтСтр = ИтСтр + ", НП: " + СокрЛ(Формат(Итог("НП"),"Ч20.2-,"));
	КонецЕсли;
	ИтСтр = ИтСтр + ", без налогов: " + СокрЛ(Формат(Итог("Сумма"),"Ч20.2-,"));

	Возврат ИтСтр;
	
КонецФункции // ИтоговаяСтрока()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;
    
	Если Константа.ОсновнойСклад.Выбран() = 1 Тогда
	    ТипЦен = Константа.ОсновнойСклад.ТипЦен;
	КонецЕсли;
	
	ЗавершитьРаботы = 1;
	ЗачитыватьАванс = 1;
	ВариантОплатыРабот = 0;
	ВРН = Константа.ОсновнойВариантРасчетаНалоговОтгрузки;
	Если (ВРН.СтавкаНП.Ставка = 0) и
		 (ВРН.СтавкаНДС.Ставка = 0) Тогда
		ВариантРасчетаНалогов = ВРН;
		
	Иначе  // попробуем найти подходящий из существующих вариантов расчета налогов
		
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			
			Если ((ВРН.СтавкаНДС.Ставка = 0)
			    и (СпрВариант.СтавкаНДС = ВРН.СтавкаНДС)
			    и (СпрВариант.СуммаВключаетНДС = ВРН.СуммаВключаетНДС))
				
			 или ((ВРН.СтавкаНДС.Ставка <> 0)
				и (СпрВариант.СтавкаНДС.Выбран() = 0)
			    и (СпрВариант.СуммаВключаетНДС = ВРН.СуммаВключаетНДС)) Тогда
					
				Если ((ВРН.СтавкаНП.Ставка = 0)
				    и (СпрВариант.СтавкаНП = ВРН.СтавкаНП)
				    и (СпрВариант.СуммаВключаетНП = ВРН.СуммаВключаетНП))
					
				 или ((ВРН.СтавкаНП.Ставка <> 0)
					и (СпрВариант.СтавкаНП.Выбран() = 0)
				    и (СпрВариант.СуммаВключаетНП = ВРН.СуммаВключаетНП)) Тогда
		
					ВариантРасчетаНалогов = СпрВариант.ТекущийЭлемент();
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры // ВводНового()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокОсн)
	
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если ДокОсн.Вид() = "Счет" Тогда
		ЗавершитьРаботы = 1;
		ЗачитыватьАванс = 0;
		Контрагент = ДокОсн.Контрагент;
		Договор = ДокОсн.Договор;
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
		КонецЕсли;
		ВариантРасчетаНалогов = ДокОсн.ВариантрасчетаНалогов;
		ТипЦен = ДокОсн.ТипЦен;
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
			Если ДокОсн.Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Работа Тогда
			    Продолжить;
			КонецЕсли;
			НоваяСтрока();
			Работа = ДокОсн.Товар;
			Количество = ДокОсн.Количество;
			Цена = ДокОсн.Цена;
			Сумма = ДокОсн.Сумма;
			НДС = ДокОсн.НДС;
			НП = ДокОсн.НП;
			Всего = ДокОсн.Всего;
		КонецЦикла;
	КонецЕсли;
	Комментарий = "Введен на основании: "+ГлПредставлениеДокумента(ДокОсн);
	
КонецПроцедуры // ВводНаОсновании()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли;

	ВариантЗачетаАванса.ДобавитьЗначение(1, "не зачитывать");
	ВариантЗачетаАванса.ДобавитьЗначение(2, "только по договору");
	ВариантЗачетаАванса.ДобавитьЗначение(0, "без указания договора");
	ВариантЗачетаАванса.ТекущаяСтрока(ВариантЗачетаАванса.НайтиЗначение(ЗачитыватьАванс));
	Если ЗавершитьРаботы = 3 Тогда   
		Форма.ПодписьЗачетаАванса.Доступность(1);
		Форма.ВариантЗачетаАванса.Доступность(1);
	Иначе
		Форма.ПодписьЗачетаАванса.Доступность(0);
		Форма.ВариантЗачетаАванса.Доступность(0);
	КонецЕсли;
    
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
	    Форма.ПодписьТипаЦен.Видимость(0);
		Форма.ТипЦен.Видимость(0);
	Иначе
		Форма.ПодписьТипаЦен.Видимость(1);
		Форма.ТипЦен.Видимость(1);
	КонецЕсли;
	
	ВариантыОплатыРабот.ДобавитьЗначение(1, "по договору");
	ВариантыОплатыРабот.ДобавитьЗначение(0, "без указания договора");
	ВариантыОплатыРабот.ТекущаяСтрока(ВариантыОплатыРабот.НайтиЗначение(ВариантОплатыРабот));
	Если ЗавершитьРаботы = 2 Тогда
		Форма.ВариантыОплатыРабот.Доступность(1);
	Иначе
		Форма.ВариантыОплатыРабот.Доступность(0);
	КонецЕсли;
	НачальнаяДатаДокумента = ДатаДок;

	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП"));
	УправлениеКурсом(0);
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "Работа" Тогда
		ОтборНоменклатуры = Перечисление.ТипыНоменклатуры.Работа;
		
	ИначеЕсли ЭлементДиалога = "ВариантРасчетаНалогов" Тогда 
		ТекущийВариантРасчетаНалогов = ВариантРасчетаНалогов;
		Флаг = 0;
		СписокВариантов = СоздатьОбъект("СписокЗначений");
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			Если (СпрВариант.СтавкаНП.Ставка = 0) и
				 (СпрВариант.СтавкаНДС.Ставка = 0) Тогда
				СписокВариантов.ДобавитьЗначение(СпрВариант.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;
		Значение = ВариантРасчетаНалогов;
		Если СписокВариантов.ВыбратьЗначение(Значение, , , , 2) = 0 Тогда
			Возврат;
		КонецЕсли;
		ВариантРасчетаНалогов = Значение;
		ПриВыбореВариантаРасчетаНалогов();
	ИначеЕсли (ЭлементДиалога = "Договор")или(ЭлементДиалога = "Контрагент") Тогда
		СтарыйДоговор = Договор;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.СуммаОперации = Итог("Всего");

	Содержание = "Выполнение этапа ";
	Если ЗавершитьРаботы = 1 Тогда
	    Содержание = Содержание + "неоплаченных ";

	ИначеЕсли ЗавершитьРаботы = 2 Тогда
	    Содержание = Содержание + "оплаченных ";

	ИначеЕсли ЗавершитьРаботы = 3 Тогда
	    Содержание = Содержание + "и завершение ";
	КонецЕсли;
	Содержание = Содержание + "работ";
	Операция.Содержание = Содержание;
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании"); 
СписокДействий.ДобавитьЗначение("Перейти  в журнал");