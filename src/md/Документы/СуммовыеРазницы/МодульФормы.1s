///////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем НачальнаяДатаДокумента;
Перем ТекущийКурс;
Перем Новый;
Перем СписокДействий;
//Перем БухИт;


///////////////////////////////////////////////////////////////////////////////                                                                           
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//*****************************************************************************
// ВалютаДокумента()
//
// Возвращаемое значение:
//  Справочник.Валюты - Валюта.
// 
// Вызывается из формул элементов диалога:
//  Колонка "Валюта".
//
// Описание:
//  Возвращает наименование валюты выбранного документа.
//
Функция ВалютаДокумента()
	
	Если Документ.Выбран() = 1 Тогда
		Если Документ.Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Возврат Документ.Договор.ВалютаДоговора;
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции // ВалютаДокумента()

//*****************************************************************************
// КурсДокумента()
//
// Возвращаемое значение:
//  Число - значение курса.
// 
// Вызывается из формул элементов диалога:
//  Колонка "Курс док.".
//
// Описание:
//  Возвращает значение курса, указанного в выбранном документе.
//
Функция КурсДокумента()
	
	Если Документ.Выбран() = 1 Тогда
		Если Документ.Курс <> 0 Тогда
		    Возврат СокрП(Формат(Документ.Курс, "Ч15.4"));
		КонецЕсли;
	КонецЕсли;

	Возврат "";
	
КонецФункции // КурсДокумента()

//*****************************************************************************
// ВалСуммаДокумента()
//
// Возвращаемое значение:
//  Строка - сумма в иностранной валюте.
// 
// Вызывается из формул элементов диалога:
//  Колонка "Вал. сумма".
//
// Описание:
//  Возвращает значение полной суммы выбранного документа в иностранной валюте.
//
Функция ВалСуммаДокумента()
	
	Если Документ.Выбран() = 1 Тогда
		Если Документ.Договор.ВалютаДоговора.Выбран() = 1 Тогда
			Если Документ.Вид() = "ПередачаОС" Тогда
			    ИтогВсего = Документ.Стоимость*Документ.КоличествоСтрок();
				
			ИначеЕсли Документ.Вид() = "ПередачаНМА" Тогда
				ИтогВсего = Документ.Стоимость;
				
			Иначе
				ИтогВсего = Документ.Итог("Всего");
			КонецЕсли;
		    Возврат ФорматС(ИтогВсего);
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции // ВалСуммаДокумента()

//*****************************************************************************
// СуммаДокумента()
//
// Возвращаемое значение:
//  Строка - сумма в рублях.
// 
// Вызывается из формул элементов диалога:
//  Колонка "Сумма док.".
//
// Описание:
//  Возвращает значение полной суммы выбранного документа в рублях.
//
Функция СуммаДокумента()
	
	Если Документ.Выбран() = 1 Тогда
		Если Документ.Договор.ВалютаДоговора.Выбран() = 1 Тогда
			Кратность = Документ.Договор.ВалютаДоговора.Кратность.Получить(Документ.ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			Если Документ.Вид() = "ПередачаОС" Тогда
			    ИтогВсего = Документ.Стоимость*Документ.КоличествоСтрок();
				
			ИначеЕсли Документ.Вид() = "ПередачаНМА" Тогда
				ИтогВсего = Документ.Стоимость;
				
			Иначе
				ИтогВсего = Документ.Итог("Всего");
			КонецЕсли;
		    Возврат ФорматС(ИтогВсего*Число(КурсДокумента())/Кратность);
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции // СуммаДокумента()

//*****************************************************************************
// ИнформационнаяСтрока()
//
Функция ИнформационнаяСтрока()
	
	Стр = "Сумма документа в валюте: "+СокрЛ(ВалСуммаДокумента());
	Стр = Стр + ", сумма документа в рублях: "+СокрЛ(СуммаДокумента());
	
	Возврат Стр;
	
КонецФункции // ИнформационнаяСтрока()

//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
// 
// Вызывается из формул элементов диалога:
//  Колонка "Документ",
//  Колонка "Курс",
//  Колонка "Сумма",
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа.
//
Процедура Пересчет(ИмяРеквизита="")
	
	Если ИмяРеквизита = "" Тогда // вызов из формулы колнки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;
	
	Если ИмяРеквизита = "Документ" Тогда
		Если Документ.Выбран() = 1 Тогда
		    Курс = ВалютаДокумента().Курс.Получить(ДатаДок);
			ТекущийКурс = Курс;
			Кратность = ВалютаДокумента().Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			Сумма = Число(СтрЗаменить(ВалСуммаДокумента(),",",""))*Курс/Кратность;
			
			// Проверим не превышает ли сумма по документу кредиторскую или
			// дебиторскую задолженность по договору.
			//Если (Документ.Вид() = "ПоступлениеТоваров") или
			//	 (Документ.Вид() = "ПоступлениеМатериалов") или
			//	 (Документ.Вид() = "ПоступлениеОборудования") или
			//	 (Документ.Вид() = "ПоступлениеОС") или
			//	 (Документ.Вид() = "ПоступлениеНМА") Тогда
			//	
			//	Если Выбран() = 1 Тогда
			//	    Сальдо = БухИт.СНК("60.1",,, Документ.Контрагент, Документ.Договор);
			//	Иначе
			//		Сальдо = БухИт.СКК("60.1",,, Документ.Контрагент, Документ.Договор);
			//	КонецЕсли;
			//	
			//ИначеЕсли Документ.Вид() = "УслугиСторонихОрганизаций" Тогда
			//	Если Документ.ТипИсполнителя = 1 Тогда
			//		Если Выбран() = 1 Тогда
			//		    Сальдо = БухИт.СНК("60.1",,, Документ.Контрагент, Документ.Договор);
			//		Иначе
			//			Сальдо = БухИт.СКК("60.1",,, Документ.Контрагент, Документ.Договор);
			//		КонецЕсли;
			//		
			//	Иначе
			//		Если Выбран() = 1 Тогда
			//		    Сальдо = БухИт.СНК("76.5",,, Документ.Контрагент, Документ.Договор);
			//		Иначе
			//			Сальдо = БухИт.СКК("76.5",,, Документ.Контрагент, Документ.Договор);
			//		КонецЕсли;
			//	КонецЕсли;
			//	
			//Иначе // расходные документы
			//	Если Выбран() = 1 Тогда
			//	    Сальдо = БухИт.СНД("62.1",,, Документ.Контрагент, Документ.Договор);
			//	Иначе
			//		Сальдо = БухИт.СКД("62.1",,, Документ.Контрагент, Документ.Договор);
			//	КонецЕсли;
			//КонецЕсли;
			//
			//Если (Сумма > Сальдо) и (Документ.Курс > 0) Тогда
			//	ДокКратность = ВалютаДокумента().Кратность.Получить(Документ.ДатаДок);
			//	ДокКратность = ?(ДокКратность = 0, 1, ДокКратность);
			//    Сумма = Сальдо*(Курс/Кратность)/(Документ.Курс/ДокКратность);
			//КонецЕсли;
			
		Иначе
			Курс = 0;
			ТекущийКурс = 0;
			Кратность = 1;
			Сумма = 0;
		КонецЕсли;
		
	ИначеЕсли ИмяРеквизита = "Курс" Тогда
		Если Курс = ТекущийКурс Тогда
		Иначе
			Сумма = Сумма/?(ТекущийКурс = 0, 1, ТекущийКурс) * Курс;
		    ТекущийКурс = Курс;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Пересчет()

///////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	
КонецПроцедуры // ВводНового()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокОсн)

	Новый = 1;
	НоваяСтрока();
	Если (ДокОсн.Договор.ВалютаДоговора.Выбран() = 1) и
		 (ДокОсн.Договор.ОплатаДоговора = 1)Тогда
		Документ = ДокОсн;
		Пересчет("Документ");
	Иначе
		Предупреждение("Для формирования суммовой разницы цены в договоре
				|выбранного документа должены быть в валюте,
				|а оплата договора - в рублях.");
		СтатусВозврата(0);
	КонецЕсли;
	
КонецПроцедуры // ВводНаОсновании()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()

	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	Форма.Документ.ВыполнятьФормулуТолькоПриИзменении(1);
	ПриЗаписиПерепроводить(1);
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Формирует список видов документов для выбора.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
    
	Если ЭлементДиалога = "Документ" Тогда
		Меню = СоздатьОбъект("СписокЗначений");
		Для А = 1 По Метаданные.Документ() Цикл
			Для Б = 1 По Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Количество() Цикл
				Если Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Получить(Б).Идентификатор = "СуммовыеРазницы" Тогда
					Меню.ДобавитьЗначение(Метаданные.Документ(А).Идентификатор, Строка(Метаданные.Документ(А)));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ВидДок = Документ.Вид();
		Флаг = 0;
		Если Меню.ВыбратьЗначение(ВидДок,,,,2) = 1 Тогда
			Конт = ПолучитьПустоеЗначение("");
			ОткрытьФорму("Журнал.Общий", Конт);
			Конт.УстановитьОтбор(ВидДок);
			Конт.АктивизироватьОбъект(Документ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗначение, ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "Документ" Тогда
		Флаг = 0;
	    Если ВыбЗначение.Договор.Выбран() = 1 Тогда
			Если (ВыбЗначение.Договор.ВалютаДоговора.Выбран() = 1) и
				 (ВыбЗначение.Договор.ОплатаДоговора = 1)Тогда
				Документ = ВыбЗначение;
				Пересчет("Документ");
				Возврат;
			КонецЕсли;
			Предупреждение("Для формирования суммовой разницы цены в договоре
						|выбранного документа должены быть в валюте,
						|а оплата договора - в рублях.");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОбработкаВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Сохраняет значение курса. Если в результате редактирования строки курс 
// будет изменен, то, зная предыдущее значение, можно будет пересчитать сумму.
//
Процедура ПриНачалеРедактированияСтроки()
    
	ТекущийКурс = Курс;
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Операция.Содержание = "Суммовые разницы";
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");

//БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
//Если Выбран() = 1 Тогда
//    БухИт.Рассчитать(ТекущийДокумент(), КонМесяца(ДатаДок), "60.1,62.1,76.5");
//	
//Иначе
//	БухИт.Рассчитать(НачМесяца(ДатаДок), ДатаДок, "60.1,62.1,76.5");
//КонецЕсли;

