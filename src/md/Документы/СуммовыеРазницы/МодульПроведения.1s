////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем Реквизит;
Перем НомЖур;
Перем СчетПоступления;
Перем Сч19;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// ПолучитьПараметрыДокументаПоступления(ДокументПоступления)
//
Процедура ПолучитьПараметрыДокументаПоступления(ДокументПоступления)
	
	Если ДокументПоступления.Вид() = "ПоступлениеТоваров" Тогда
		СчетПоступления = СчетПоКоду("16.2");
		Сч19 = СчетПоКоду("19.3");
		НомЖур = "ТВ";
		Реквизит = "Товар";
		
	ИначеЕсли ДокументПоступления.Вид() = "ПоступлениеМатериалов" Тогда
		СчетПоступления = СчетПоКоду("16.1");
		Сч19 = СчетПоКоду("19.3");
		НомЖур = "МТ";
		Реквизит = "Материал";
	
	ИначеЕсли ДокументПоступления.Вид() = "ПоступлениеОС" Тогда
		СчетПоступления = СчетПоКоду("08.4");
		Сч19 = СчетПоКоду("19.1");
		НомЖур = "ОС";
		Реквизит = "ОбъектВнеоборотныхАктивов";
		
	ИначеЕсли ДокументПоступления.Вид() = "ПоступлениеНМА" Тогда
		СчетПоступления = СчетПоКоду("08.5");
		Сч19 = СчетПоКоду("19.2");
		НомЖур = "НА";                    
		Реквизит = "ОбъектВнеоборотныхАктивов";

	ИначеЕсли ДокументПоступления.Вид() = "ПоступлениеОборудования" Тогда
		СчетПоступления = СчетПоКоду("16.3");
		Сч19 = СчетПоКоду("19.1");
		НомЖур = "ОС";
		Реквизит = "Оборудование";
	КонецЕсли;
	
КонецПроцедуры // ПолучитьПараметрыДокументаПоступления(()

// ПРОЦЕДУРЫ ПО ФОРМИРОВАНИЮ ПРОВОДОК ДЛЯ ЦЕЛЕЙ НАЛОГОВОГО УЧЕТА
//

//******************************************************************************
// ОтражениеСуммовыхРазницВНаловомУчете()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ОтражениеСуммовыхРазницВНаловомУчете(СуммоваяРазница)
	
	Если СуммоваяРазница < 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	    Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Суммовая разница";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("Н09");
		Операция.Дебет.ВнереализационныеРасходы = Перечисление.ВнереализационныеРасходы.СуммовыеРазницы;
		Операция.Сумма = -СуммоваяРазница;
	КонецЕсли;
	
	Если СуммоваяРазница > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
	    Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Суммовая разница";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчетПоКоду("Н08");
		Операция.Кредит.ВнереализационныеДоходы = Перечисление.ВнереализационныеДоходы.СуммовыеРазницы;
		Операция.Сумма = СуммоваяРазница;
	КонецЕсли;
	
КонецПроцедуры // ОтражениеСуммовыхРазницВНаловомУчете()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()

    Сч08 = СчетПоКоду("08");
	Сч16 = СчетПоКоду("16");
	Сч60_1 = СчетПоКоду("60.1");
	Сч62_1 = СчетПоКоду("62.1");
	Сч62_4 = СчетПоКоду("62.4");
	Сч76_5 = СчетПоКоду("76.5");
	Сч90_1_1 = СчетПоКоду("90.1.1");
	Сч91_1 = СчетПоКоду("91.1");  
	
	ПереченьСтатейЗатрат = глПолучитьПереченьСтатейЗатрат(ДатаДок);
	
	// Части суммовой разницы распределенные по строкам документа-основания
	// соберем в таблице значений.
	ТаблицаПроводок = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаПроводок.НоваяКолонка("НомерЖурнала");
	ТаблицаПроводок.НоваяКолонка("ДебетСчет");
	ТаблицаПроводок.НоваяКолонка("ДебетСубконто1");
	ТаблицаПроводок.НоваяКолонка("ДебетСубконто2");
	ТаблицаПроводок.НоваяКолонка("ДебетСубконто3");
	ТаблицаПроводок.НоваяКолонка("КредитСчет");
	ТаблицаПроводок.НоваяКолонка("КредитСубконто1");
	ТаблицаПроводок.НоваяКолонка("КредитСубконто2");
	ТаблицаПроводок.НоваяКолонка("КредитСубконто3");
	ТаблицаПроводок.НоваяКолонка("Сумма");
	
	// Строка для свертки таблицы значений.
	Стр = "ДебетСчет,ДебетСубконто1,ДебетСубконто2,ДебетСубконто3,";
	Стр = Стр + "КредитСчет,КредитСубконто1,КредитСубконто2,КредитСубконто3,";
	Стр = Стр + "НомерЖурнала";
	    
	ВсегоСуммоваяРазницаНУ = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		Если Документ.Выбран() = 0 Тогда
		    ТекстСообщения = "В строке "+НомерСтроки+" не выбран документ.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		СуммоваяРазница = 0;
		СуммоваяРазницаВСтоимости = 0;
		СуммоваяРазницаВСуммеНДС = 0;
		
		// Проверим условия возникновения суммовых разниц.
		ЦеныВДоговоре = 1; // в рублях
		Если Документ.Договор.Выбран() = 1 Тогда
		    Если ПустоеЗначение(Документ.Договор.ВалютаДоговора) = 0 Тогда
				ЦеныВДоговоре = 2; // в валюте
			КонецЕсли;
			ОплатаДоговора = Документ.Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
		КонецЕсли;
		Если (ЦеныВДоговоре = 2) и (ОплатаДоговора = 1) Тогда
			Валюта = Документ.Договор.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
		Иначе
			ТекстСообщения = "Для возникновения суммовой разницы цены в договоре
							|должны быть указаны в иностранной валюте, а оплата должна 
							|поступить в рублях.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		Если Курс = 0 Тогда
			ТекстСообщения = "Не указан курс.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		// Величина суммовой разницы:
		Курс1 = Документ.Курс; // курс отгрузки
		Кратность1 = Валюта.Кратность.Получить(Документ.ДатаДок);
		Кратность1 = ?(Кратность1=0, 1, Кратность1);
		Курс2 = Курс; // курс оплаты
		Кратность2 = Кратность;
		СуммаВал = Окр(Сумма/(Курс2/Кратность2), 2, 1);
		СуммоваяРазница = Сумма - Окр(СуммаВал*(Курс1/Кратность1), 2, 1);
		Если СуммоваяРазница = 0 Тогда
			Продолжить;
		КонецЕсли;
		                    
		// Суммовая разница для целей налогового учета.
		СуммоваяРазницаНУ = СуммоваяРазница;
		
		// Формирование проводок по суммовым разницам, возникших при расчетах с поставщиками.
		Если (Документ.Вид() = "ПоступлениеТоваров") или
			 (Документ.Вид() = "ПоступлениеМатериалов") или
			 (Документ.Вид() = "ПоступлениеОС") или
			 (Документ.Вид() = "ПоступлениеНМА") или
			 (Документ.Вид() = "ПоступлениеОборудования") Тогда
			
			Если Документ.Итог("Всего") = 0 Тогда
				ТекстСообщения = "	В документе " + Документ + " нет базы для "+
					"распределения суммовой разницы";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
						
			Если (Документ.НДСВключатьВСтоимость = 1) или (Документ.Итог("НДС") = 0) Тогда
				СуммоваяРазницаВСтоимости = СуммоваяРазница;
			Иначе
				СуммоваяРазницаВСуммеНДС = СуммоваяРазница*Документ.Итог("НДС")/Документ.Итог("Всего");
				СуммоваяРазницаВСтоимости = СуммоваяРазница - СуммоваяРазницаВСуммеНДС;
			КонецЕсли;

			ПолучитьПараметрыДокументаПоступления(Документ);
			СчетРасчетовСПоставщиком = СчетПоКоду("60.1");
			Документ.ВыбратьСтроки();
			РаспределеннаяСумма = 0;
			Пока Документ.ПолучитьСтроку() = 1 Цикл
				// Не формируем суммовых разниц по основным средствам и нематериальным активам, 
				// введенным в эксплуатацию.
				ТаблицаПроводок.НоваяСтрока();
				ТаблицаПроводок.НомерЖурнала = НомЖур;
				ТаблицаПроводок.ДебетСчет = СчетПоступления;
				Если ПустоеЗначение(СчетПоступления.ВидСубконто(1)) = 0 Тогда
				    ТаблицаПроводок.ДебетСубконто1 = Документ.ПолучитьАтрибут(Реквизит);
				КонецЕсли;
				ТаблицаПроводок.КредитСчет = СчетРасчетовСПоставщиком;
				ТаблицаПроводок.КредитСубконто1 = Документ.Контрагент;
				ТаблицаПроводок.КредитСубконто2 = Документ.Договор;
				ТаблицаПроводок.Сумма = СуммоваяРазницаВСтоимости*Документ.Всего/Документ.Итог("Всего");
				РаспределеннаяСумма = РаспределеннаяСумма + ТаблицаПроводок.Сумма;
			КонецЦикла;
			
			// Скорректируем сумму последней проводки.
			Если РаспределеннаяСумма = СуммоваяРазницаВСтоимости Тогда
			Иначе
				ТаблицаПроводок.Сумма = ТаблицаПроводок.Сумма + (СуммоваяРазницаВСтоимости - РаспределеннаяСумма);
			КонецЕсли;
			
			СуммоваяРазницаНУ = СуммоваяРазницаНУ - СуммоваяРазницаВСуммеНДС;
			СуммоваяРазницаНУ = -СуммоваяРазницаНУ;
			
		ИначеЕсли  Документ.Вид() = "УслугиСтороннихОрганизаций" Тогда
			Если ПустоеЗначение(Документ.ДатаНомерСчетаФактуры) = 1 Тогда
				ТекстСообщения = "	Нельзя автоматически распределить суммовую разницу
								|	по документу " + Документ + ", так как в документе
								|	не указан полученный счет-фактура";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			ИначеЕсли Документ.Итог("Всего") = 0 Тогда
				ТекстСообщения = "	В документе " + Документ + " нет базы для "+
					"распределения суммовой разницы";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
			
			Если (Документ.НДСВключатьВСтоимость = 1) или (Документ.Итог("НДС") = 0) Тогда
				СуммоваяРазницаВСтоимости = СуммоваяРазница;
			Иначе
				СуммоваяРазницаВСуммеНДС = СуммоваяРазница*Документ.Итог("НДС")/Документ.Итог("Всего");
				СуммоваяРазницаВСтоимости = СуммоваяРазница - СуммоваяРазницаВСуммеНДС;
			КонецЕсли;
			
			// Определим счет расчетов с поставщиком.
		    Если Документ.ТипИсполнителя = 1 Тогда
			    СчетРасчетовСПоставщиком = Сч60_1;
			Иначе
				СчетРасчетовСПоставщиком = Сч76_5;
			КонецЕсли;
		
			// Распределение суммовой разницы по дополнительным расходам но приобретение.
			Если Документ.ДокументПоступления.Выбран() = 1 Тогда
				ПолучитьПараметрыДокументаПоступления(Документ.ДокументПоступления);
				ДокПоступления = СоздатьОбъект("Документ");
				ДокПоступления.НайтиДокумент(Документ.ДокументПоступления);
				
				ДокПоступления.ВыбратьСтроки();
				Пока ДокПоступления.ПолучитьСтроку() = 1 Цикл
					Если Реквизит = "Товар" Тогда
						Если ДокПоступления.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					СуммаПоступления = СуммаПоступления + ДокПоступления.Всего;
				КонецЦикла;
				
				СуммаУслуг = 0;
				ДокПоступления.ВыбратьСтроки();
				Пока ДокПоступления.ПолучитьСтроку() = 1 Цикл
					Если Реквизит = "Товар" Тогда
						Если ДокПоступления.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					СуммаСтрокиПоступления = ДокПоступления.Всего;
					ТаблицаПроводок.НоваяСтрока();
					ТаблицаПроводок.НомерЖурнала = НомЖур;
					ТаблицаПроводок.ДебетСчет = СчетПоступления;
					ТаблицаПроводок.ДебетСубконто1 = ДокПоступления.ПолучитьАтрибут(Реквизит);
					Если СчетПоступления.ПринадлежитГруппе(Сч08) = 0 Тогда
					    ТаблицаПроводок.ДебетСубконто2 = ДокПоступления.МестоХранения;
					КонецЕсли;
					ТаблицаПроводок.КредитСчет = СчетРасчетовСПоставщиком;
					ТаблицаПроводок.КредитСубконто1 = Документ.Контрагент;
					ТаблицаПроводок.КредитСубконто2  = Документ.Договор;
					
					ТаблицаПроводок.Сумма = СуммоваяРазницаВСтоимости*СуммаСтрокиПоступления/СуммаПоступления;
					СуммаУслуг = СуммаУслуг + ТаблицаПроводок.Сумма;
				КонецЦикла;
				
				// Корректировка суммы последней проводки.
				Если СуммаУслуг = СуммоваяРазницаВСтоимости Тогда
				Иначе
					ТаблицаПроводок.Сумма = ТаблицаПроводок.Сумма + СуммоваяРазницаВСтоимости - СуммаУслуг;
				КонецЕсли;
				
				СуммоваяРазницаНУ = СуммоваяРазницаНУ - СуммоваяРазницаВСуммеНДС;
				
			// Распределение суммовой разницы по услугам сторонних организаций.
			Иначе
				Документ.ВыбратьСтроки();
				РаспределеннаяСумма = 0;
				Пока Документ.ПолучитьСтроку() = 1 Цикл
				    ТаблицаПроводок.НоваяСтрока();
					ТаблицаПроводок.НомерЖурнала = "СО";
					// Суммовую разницу по услугам распределяем на счета отнесения затрат.
					ТаблицаПроводок.ДебетСчет = Документ.КоррСчет;
					ТаблицаПроводок.ДебетСубконто1 = Документ.Субконто1;
					ТаблицаПроводок.ДебетСубконто2 = Документ.Субконто2;
					ТаблицаПроводок.ДебетСубконто3 = Документ.Субконто3;
					ТаблицаПроводок.КредитСчет = СчетРасчетовСПоставщиком;
					ТаблицаПроводок.КредитСубконто1 = Документ.Контрагент;
					ТаблицаПроводок.КредитСубконто2 = Документ.Договор;
					ТаблицаПроводок.Сумма = СуммоваяРазницаВСтоимости*Документ.Всего/Документ.Итог("Всего");
					РаспределеннаяСумма = РаспределеннаяСумма + ТаблицаПроводок.Сумма;
				КонецЦикла;
				
				// Скорректируем сумму последней проводки.
				Если РаспределеннаяСумма = СуммоваяРазницаВСтоимости Тогда
				Иначе
					ТаблицаПроводок.Сумма = ТаблицаПроводок.Сумма + (СуммоваяРазницаВСтоимости - РаспределеннаяСумма);
				КонецЕсли;
				
				Сч19 = СчетПоКоду("19.3");
				
				
				// Определим надо ли принимать суммовые разницы к налоговому учету.
				Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
					ОбъектыАналитикиНУ = глСчетИАналитикаРасходовНУ(Документ, Документ.КоррСчет, Документ.Субконто1, Документ.Субконто2, Документ.Субконто3, ПереченьСтатейЗатрат, ?(Документ.ТипИсполнителя = 1, СчетПоКоду("60"), СчетПоКоду("76")));
					СчетНУ = ОбъектыАналитикиНУ.Получить("Счет");
					Если ПустоеЗначение(СчетНУ) = 1 Тогда
						СуммоваяРазницаНУ = 0;
					КонецЕсли;
					
				Иначе
					СуммоваяРазницаНУ = СуммоваяРазницаНУ - СуммоваяРазницаВСуммеНДС;
				КонецЕсли;
				
			КонецЕсли;
			
			СуммоваяРазницаНУ = -СуммоваяРазницаНУ;
		
		ИначеЕсли (Документ.Вид() = "РасходнаяНакладная") или
				  (Документ.Вид() = "РеализацияОтгруженнойПродукции") или
			 	  (Документ.Вид() = "ОказаниеУслуг") или
			 	  (Документ.Вид() = "ВыполнениеЭтапаРабот") Тогда
			
			Если Документ.Итог("Всего") = 0 Тогда
				ТекстСообщения = "	В документе " + Документ + " нет базы для "+
					"распределения суммовой разницы";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
			
			Если Документ.Вид() = "ОказаниеУслуг" Тогда
				Номенклатура = "Услуга";
			ИначеЕсли Документ.Вид() = "ВыполнениеЭтапаРабот" Тогда
				Номенклатура = "Работа";
			Иначе
				Номенклатура = "Товар";
			КонецЕсли;
			
			Документ.ВыбратьСтроки();
			РаспределеннаяСумма = 0;
			Пока Документ.ПолучитьСтроку() = 1 Цикл
			    ТаблицаПроводок.НоваяСтрока();
				ТаблицаПроводок.НомерЖурнала = "ТВ";
				ТаблицаПроводок.ДебетСчет = Сч62_1;
				ТаблицаПроводок.ДебетСубконто1 = Документ.Контрагент;
				ТаблицаПроводок.ДебетСубконто2 = Документ.Договор;
				
				ТаблицаПроводок.КредитСчет = Сч90_1_1;
				ТаблицаПроводок.КредитСубконто1 = Документ.ПолучитьАтрибут(Номенклатура).ВидНоменклатуры;
				ТаблицаПроводок.КредитСубконто2 = глСтавкаНалога(Документ, "НДС");
				ТаблицаПроводок.КредитСубконто3 = глСтавкаНалога(Документ, "НП");
				
				Если Документ.ПолучитьАтрибут(Номенклатура).ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
					Если Документ.ПолучитьАтрибут(Номенклатура).ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
						// Проводка по комиссионным товарам.
						ТаблицаПроводок.ДебетСчет = Сч62_4;
						ТаблицаПроводок.ДебетСубконто1 = Документ.Контрагент;
						ТаблицаПроводок.ДебетСубконто2 = Документ.Договор;

						
						ТаблицаПроводок.КредитСчет = Сч76_5;
						ТаблицаПроводок.КредитСубконто1 = Документ.Комитент;
						ТаблицаПроводок.КредитСубконто2 = Документ.ДоговорКомиссии;
					КонецЕсли;
				КонецЕсли;
				
				ТаблицаПроводок.Сумма = СуммоваяРазница*Документ.Всего/Документ.Итог("Всего");
				РаспределеннаяСумма = РаспределеннаяСумма + ТаблицаПроводок.Сумма;
			КонецЦикла;
			
			// Скорректируем сумму последней проводки.
			Если РаспределеннаяСумма = СуммоваяРазница Тогда
			Иначе
				ТаблицаПроводок.Сумма = ТаблицаПроводок.Сумма + (СуммоваяРазница - РаспределеннаяСумма);
			КонецЕсли;
		
		Иначе
			Если Документ.Вид() = "ОтпускМатериаловНаСторону" Тогда
				Если Документ.Итог("Всего") = 0 Тогда
			    	ТекстСообщения = "	В документе " + Документ + " нет базы для "+
						"распределения суммовой разницы";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				НомЖур = "МТ";
				
			ИначеЕсли Документ.Вид() = "ПередачаОС" Тогда
				Если Документ.Стоимость = 0 Тогда
					ТекстСообщения = "В документе " + Документ + " нет базы для "+
						"распределения суммовой разницы";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				НомЖур = "ОС";
				
			ИначеЕсли Документ.Вид() = "ПередачаНМА" Тогда
				Если Документ.Стоимость = 0 Тогда
				    ТекстСообщения = "В документе " + Документ + " нет базы для "+
						"распределения суммовой разницы";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				НомЖур = "НА";
			
			Иначе
				Продолжить;
			КонецЕсли;
			
			ТаблицаПроводок.НоваяСтрока();
			ТаблицаПроводок.НомерЖурнала = НомЖур;
			ТаблицаПроводок.ДебетСчет = Сч62_1;
			ТаблицаПроводок.ДебетСубконто1 = Документ.Контрагент;
			ТаблицаПроводок.ДебетСубконто2 = Документ.Договор;
			ТаблицаПроводок.ДебетСубконто3 = "";
			ТаблицаПроводок.КредитСчет = Сч91_1;
			ТаблицаПроводок.КредитСубконто1 = Документ.СтатьяПрочихДоходовИРасходов;
			ТаблицаПроводок.Сумма = СуммоваяРазница;
		КонецЕсли;
		
		// Суммовая разница по начисленному НДС:
		//
		// 1. При политике "по отгрузке" суммовая разница по НДС образуется в момент оплаты и 
		// должна быть отражена в книге продаж! В этом случае формируется проводка Д90.3 К68.2
		// Данная проводка формируется все той же записью книги продаж.
		//
		// 2. При политике "по оплате" суммовая разница по НДС образуется в момент внесения записи
		// книгу продаж. Проводка Д76.Н К68.2 формируется при проведении записи книги продаж.
		
		// Суммовая разница по НДС поставщика.
		Если СуммоваяразницаВСуммеНДС = 0 Тогда
		Иначе
			ТаблицаПроводок.НоваяСтрока();
			ТаблицаПроводок.НомерЖурнала = НомЖур;
			ТаблицаПроводок.КредитСчет = СчетРасчетовСПоставщиком;
			ТаблицаПроводок.КредитСубконто1 = Документ.Контрагент;
			ТаблицаПроводок.КредитСубконто2 = Документ.Договор;
			ТаблицаПроводок.ДебетСчет = Сч19;
			ТаблицаПроводок.ДебетСубконто1 = Документ.Контрагент;
			Если ПустоеЗначение(Документ.ДатаНомерСчетаФактуры) = 0 Тогда
			    ТаблицаПроводок.ДебетСубконто2 = Документ;
			КонецЕсли;
			ТаблицаПроводок.Сумма = СуммоваяРазницаВСуммеНДС;
		КонецЕсли;
		
		ВсегоСуммоваяРазницаНУ = ВсегоСуммоваяРазницаНУ + СуммоваяРазницаНУ;
		
	КонецЦикла;
	
	// Формирование проводок документа:
	ТаблицаПроводок.Свернуть(Стр, "Сумма");
	ТаблицаПроводок.ВыбратьСтроки();
	Пока ТаблицаПроводок.ПолучитьСтроку() = 1 Цикл
	    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = ТаблицаПроводок.НомерЖурнала;
		Операция.СодержаниеПроводки = "Суммовая разница";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = ТаблицаПроводок.ДебетСчет;
		Операция.Дебет.Субконто(1, ТаблицаПроводок.ДебетСубконто1);
		Операция.Дебет.Субконто(2, ТаблицаПроводок.ДебетСубконто2);
		Операция.Дебет.Субконто(3, ТаблицаПроводок.ДебетСубконто3);
		Операция.Кредит.Счет = ТаблицаПроводок.КредитСчет;
		Операция.Кредит.Субконто(1, ТаблицаПроводок.КредитСубконто1);
		Операция.Кредит.Субконто(2, ТаблицаПроводок.КредитСубконто2);
		Операция.Кредит.Субконто(3, ТаблицаПроводок.КредитСубконто3);
		Операция.Сумма = ТаблицаПроводок.Сумма;
		
	КонецЦикла;
	
	//Отражение суммовых разниц в налоговом учете.
	Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
	    ОтражениеСуммовыхРазницВНаловомУчете(ВсегоСуммоваяРазницаНУ);
	КонецЕсли;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);

КонецПроцедуры // ОбработкаПроведения()