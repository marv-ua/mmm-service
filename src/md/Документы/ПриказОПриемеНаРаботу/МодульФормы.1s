////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента; 
Перем ПодписьСтатьиОтчисленийНаСоцНужды;
Перем ПодписьСтатьиПрочихОтчисленийНаСоцНужды;
Перем Новый;
Перем СписокДействий;

Перем СписокХарактеровРаботы;

Перем ВычетыСотрудниковПоНДФЛ;
Перем ВычетыНДФЛСсылки;  

//******************************************************************************
Процедура ПриИзмененииФлагаВзносов()
	
	НеВзиматьВзносыФОМС = НеВзиматьВзносыПФРиФСС;
	
КонецПроцедуры

//******************************************************************************
// ПодготовитьТаблицуВычетов()
//
Процедура ПодготовитьТаблицуВычетов()
	
	ВычетыСотрудниковПоНДФЛ.ИспользоватьВладельца(Сотрудник);
	
	ВычетыНДФЛ.УдалитьСтроки();
	ВычетыНДФЛСсылки.УдалитьСтроки();
		
	Если Сотрудник.Выбран() = 0 Тогда
		Форма.ДобавитьВычет.Доступность(0);
		Форма.РедактироватьВычет.Доступность(0);
		Форма.УдалитьВычет.Доступность(0);
		Форма.ВычетыНДФЛ.Доступность(0);
		
	Иначе
		
		Форма.ДобавитьВычет.Доступность(1);
		Форма.РедактироватьВычет.Доступность(1);
		Форма.УдалитьВычет.Доступность(1);
		Форма.ВычетыНДФЛ.Доступность(1);
		
		ВычетыСотрудниковПоНДФЛ.ВыбратьЭлементы();
		Пока ВычетыСотрудниковПоНДФЛ.ПолучитьЭлемент() = 1 Цикл
			Если ВычетыСотрудниковПоНДФЛ.ПометкаУдаления() = 1  Тогда
				Продолжить;
			КонецЕсли;
			ВычетыНДФЛ.НоваяСтрока();		
			ВычетыНДФЛ.Наименование = ВычетыСотрудниковПоНДФЛ.ВидВычета.Код +" ("+ВычетыСотрудниковПоНДФЛ.ВидВычета.Наименование+")";
			ВычетыНДФЛ.ДатаНачала = ВычетыСотрудниковПоНДФЛ.ДатаНачала;
			ВычетыНДФЛ.ДатаОкончания = ВычетыСотрудниковПоНДФЛ.ДатаОкончания;
			
			ВычетыНДФЛСсылки.НоваяСтрока();
			ВычетыНДФЛСсылки.ВидВычета = ВычетыСотрудниковПоНДФЛ.ТекущийЭлемент();
		КонецЦикла;
		
		Если ВычетыНДФЛ.КоличествоСтрок() = 0 Тогда
			ВычетыНДФЛ.НоваяСтрока();
			ВычетыНДФЛСсылки.НоваяСтрока();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

//******************************************************************************
// ДобавитьВычет()
//
Процедура ДобавитьВычет() 
	
	Если Выбран() = 0 Тогда
		Если Вопрос("Добавить сведения о вычетах можно
		|только после записи документа.
		|Записать документ?", "Да+Нет") = "Да" Тогда
			Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если Выбран() = 1 Тогда
		ОткрытьФормуМодально("Элемент.ВычетыСотрудниковПоНДФЛ",,,, Сотрудник);
		ПодготовитьТаблицуВычетов();
		ВычетыНДФЛ.ТекущаяСтрока(1);
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// РедактироватьВычет()
//
Процедура РедактироватьВычет()
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(ВычетыНДФЛ.Наименование) = 1 Тогда
		ДобавитьВычет();
	Иначе
		ВычетНДФЛ = ВычетыНДФЛСсылки.ПолучитьЗначение(ВычетыНДФЛ.НомерСтроки, "ВидВычета");
		ОткрытьФормуМодально(ВычетНДФЛ);
		ПодготовитьТаблицуВычетов();
		Стр = 0;
		ВычетыНДФЛСсылки.НайтиЗначение(ВычетНДФЛ,Стр,"ВидВычета");
		ВычетыНДФЛ.ТекущаяСтрока(Стр);
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// УдалитьВычет()
//
Процедура УдалитьВычет()
	
	ВычетНДФЛ = ВычетыНДФЛСсылки.ПолучитьЗначение(ВычетыНДФЛ.НомерСтроки, "ВидВычета");
	
	Если ВычетыСотрудниковПоНДФЛ.НайтиЭлемент(ВычетНДФЛ) = 1 Тогда
		ВычетыСотрудниковПоНДФЛ.Удалить(0);
		ПодготовитьТаблицуВычетов();
		ВычетыНДФЛ.ТекущаяСтрока(1);	
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// УдалитьВычет()
//
Процедура ПриВыбореСотрудника()
	
	ПодготовитьТаблицуВычетов();
	
КонецПроцедуры

//******************************************************************************
// МожноВыбиратьСтатьюОтчислений()
//
Функция МожноВыбиратьСтатьюОтчислений()
	
	Если СчетЗатрат.Выбран() = 1 Тогда
		Для А = 1 По 3 Цикл
			Если (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиЗатратНаПроизводство) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиЗатратОбслуживающихПроизводств) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиОбщепроизводственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиОбщехозяйственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиИздержекОбращения) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиКоммерческихРасходов) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиРасходовНаПродажу) Тогда
				Возврат А;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции // МожноВыбиратьСтатьюОтчислений()

//_____________________________________________________________________________
Функция Информация()
	Стр = "Начальные данные для расчета налога на доходы физических лиц за "+
	ДатаГод(ДатаДок)+" год (данные по валовому доходу с начала года по месяц, "+
	"предшествующий приему на работу, включительно)";
	Возврат Стр;
КонецФункции

//*****************************************************************************
// ПриВыбореСчета()
//
// Вызывается из формул элементов диалога:
//  Поле ввода СчетЗатрат.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета()

	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто"+А,СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
        
	НомерСубконто = МожноВыбиратьСтатьюОтчислений();
	Если НомерСубконто > 0 Тогда
		
		Если ДатаГод(ДатаДок) < 2010 Тогда
			ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по начисленному ЕСН";
			ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "Статья затрат по прочим отчисл. с ФОТ";
			Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(1);
		Иначе
			ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по страховым взносам";
			Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
			ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
		КонецЕсли;			
		
		Форма.СтатьяОтчисленийНаСоцНужды.Видимость(1);
		НазначитьВид(СтатьяОтчисленийНаСоцНужды, СчетЗатрат.ВидСубконто(НомерСубконто));
		НазначитьВид(СтатьяПрочихОтчисленийНаСоцНужды, СчетЗатрат.ВидСубконто(НомерСубконто));
		
	Иначе
		ПодписьСтатьиОтчисленийНаСоцНужды = "";
		ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
		Форма.СтатьяОтчисленийНаСоцНужды.Видимость(0);
		Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСчета()

//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(Номер,Значение)
	Если Значение = 1 Тогда
		Форма.ИспользоватьСлой("Основной, Общий",2);
		Активизировать("НомерДок");

	ИначеЕсли Значение = 2 Тогда
		Форма.ИспользоватьСлой("Основной, ЗП",2);
		Активизировать("Оклад");
		
		Если МожноВыбиратьСтатьюОтчислений() > 0 Тогда
			
			Если ДатаГод(ДатаДок) < 2010 Тогда
				ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по начисленному ЕСН";
				ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "Статья затрат по прочим отчисл. с ФОТ";
				Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(1);
			Иначе
				ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по страховым взносам";
				Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
				ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
			КонецЕсли;			
			
			Форма.СтатьяОтчисленийНаСоцНужды.Видимость(1);
			
		Иначе
			ПодписьСтатьиОтчисленийНаСоцНужды = "";
			ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
			Форма.СтатьяОтчисленийНаСоцНужды.Видимость(0);
			Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
		КонецЕсли;

	ИначеЕсли Значение = 3 Тогда
		Если ДатаГод(ДатаДок) < 2010 Тогда
			Форма.ИспользоватьСлой("Основной, Дополнительно,НачислятьНалогиСФОТ",2);
		Иначе
			Форма.ИспользоватьСлой("Основной, Дополнительно,НачислятьВзносыСФОТ",2);
		КонецЕсли;
		
		Активизировать("ТипВычета");

	ИначеЕсли Значение = 4 Тогда
		Форма.ИспользоватьСлой("Основной, ПредМестоРаб",2);
		Активизировать("ВаловыйДоходПредМестоРаб");

	ИначеЕсли Значение = 5 Тогда
		Форма.ИспользоватьСлой("Основной, Паспорт",2);
		Активизировать("ВидДокумента");
	КонецЕсли;
КонецПроцедуры //ПриВыбореЗакладки
//_____________________________________________________________________________
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	РубКоп = Строка(Цел(Оклад))+" руб. "+Строка(Формат((Оклад-Цел(Оклад))*100,"Ч(0)2"))+" коп.";
	Надбав = " руб.     коп.";
	Если ДатаГод(ДатаПриказа) > 2000 Тогда
		Таб.ИсходнаяТаблица("Т-1");
		Таб.ВывестиСекцию("Документ");
	Иначе
		ПредставлениеГода = Лев(ДатаГод(ДатаДок),2);
		Таб.ВывестиСекцию("1стр|а5");
		Таб.НоваяСтраница();
		Таб.ВывестиСекцию("2стр|а5");
	КонецЕсли;
	Таб.ПараметрыСтраницы(1,,,0,0,0,0,0,0,);
	Таб.Опции(0,0,0,0, "ОпцииПечатиТ-1");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Приемная записка",)
КонецПроцедуры

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Если Константа.УчетЗарплатыВоВнешнейПрограмме = Да Тогда
		Предупреждение("Документ ""Приказ о приеме на работу"" не используется в режиме
		               |расчета зарплаты во внешней программе");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Новый = 1;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

	Подразделение = глЗначениеПоУмолчанию("ОсновноеПодразделение");
	ДатаПриказа = РабочаяДата();
	ТипВычета = Перечисление.ТипыВычетов.Обычный;
	Статус = 1;
	
	СпрОКСМ = СоздатьОбъект("Справочник.ОКСМ");
	Если СпрОКСМ.НайтиПоКоду("643") = 1 Тогда
	    Страна = СпрОКСМ.ТекущийЭлемент();
	КонецЕсли;
	
	НачислятьНалогиСФОТ = 1;  
	
	ХарактерРаботы = СписокХарактеровРаботы.ПолучитьЗначение(1);
		
КонецПроцедуры //ВводНового

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	
	ПодготовитьТаблицуВычетов();
	
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.кнВводАдресаРегистрации.Доступность(0);
		Форма.кнВводАдресаМестаЖительства.Доступность(0);
		Форма.кнВводАдресаВСтранеПроживания.Доступность(0);
		
		Форма.ДобавитьВычет.Доступность(0);
		Форма.РедактироватьВычет.Доступность(0);
		Форма.УдалитьВычет.Доступность(0);
		Форма.ВычетыНДФЛ.Доступность(0);
		
	КонецЕсли;

	Форма.СтатьяОтчисленийНаСоцНужды.НеИзменятьВид(1);
	Форма.СтатьяПрочихОтчисленийНаСоцНужды.НеИзменятьВид(1);
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение(1,"Общие сведения");
	Форма.Закладки.ДобавитьЗначение(2,"Начисление з/пл");
	Форма.Закладки.ДобавитьЗначение(3,"Налоги и отчисления");
	Форма.Закладки.ДобавитьЗначение(4,"Начальные данные");
	Форма.Закладки.ДобавитьЗначение(5,"Прочее");
	ПриВыбореЗакладки(,1);
	НачальнаяДатаДокумента = ДатаДок;
		
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если (ЭлементДиалога = "СтатьяОтчисленийНаСоцНужды")
	или (ЭлементДиалога = "СтатьяПрочихОтчисленийНаСоцНужды") Тогда
		НомерСубконто = МожноВыбиратьСтатьюОтчислений(); 
		ПриВыбореСчета();
	КонецЕсли;	
	
	Если (ЭлементДиалога = "СчетЗатрат") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		СписокКорректныхПроводок.Установить("Счет", СчетПоКоду("70"));
		глЗначениеОтбора = СписокКорректныхПроводок;
		
	ИначеЕсли ЭлементДиалога = "СтатьяОтчисленийНаСоцНужды" Тогда
		Если НомерСубконто > 0 Тогда
			ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто(), Перечисление.ГруппыВидыРасходов.ЕСН);
			Флаг = 0;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "СтатьяПрочихОтчисленийНаСоцНужды" Тогда 
		Если НомерСубконто > 0 Тогда 
			Если  ПустоеЗначение(СтатьяПрочихОтчисленийНаСоцНужды) = 1 Тогда
				ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто(), Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
			Иначе
				Если (СтатьяПрочихОтчисленийНаСоцНужды.ВидРасходовДляНалоговогоУчета = Перечисление.ГруппыВидыРасходов.НалогиИСборы) Тогда
					ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто());
				Иначе
					ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто(), Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
				КонецЕсли;					
			КонецЕсли;
			Флаг = 0;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "РазмерВычетаНаРебенка" Тогда
		ВычетыНаРебенка = СоздатьОбъект("СписокЗначений");
		Если ДатаГод(ДатаДок) < 2005 Тогда
			ВычетыНаРебенка.ДобавитьЗначение(300);
			ВычетыНаРебенка.ДобавитьЗначение(600);
			
		Иначе
			Если ДатаГод(ДатаДок) < 2009 Тогда
				ВычетыНаРебенка.ДобавитьЗначение(600);
				ВычетыНаРебенка.ДобавитьЗначение(1200); 
			Иначе
				ВычетыНаРебенка.ДобавитьЗначение(1000);
				ВычетыНаРебенка.ДобавитьЗначение(2000); 
			КонецЕсли;
		КонецЕсли;
		
		ВычетыНаРебенка.ВыбратьЗначение(РазмерВычетаНаРебенка,,,, 2);
		Флаг = 0;
		
	ИначеЕсли ЭлементДиалога = "РазмерВычетаНаРебенкаИнвалида" Тогда
		ВычетыНаРебенка = СоздатьОбъект("СписокЗначений");
		Если ДатаГод(ДатаДок) < 2009 Тогда
			ВычетыНаРебенка.ДобавитьЗначение(1200);
			ВычетыНаРебенка.ДобавитьЗначение(2400);
		Иначе                                      
			ВычетыНаРебенка.ДобавитьЗначение(2000);
			ВычетыНаРебенка.ДобавитьЗначение(4000);
		КонецЕсли;
		ВычетыНаРебенка.ВыбратьЗначение(РазмерВычетаНаРебенкаИнвалида,,,, 2);
		Флаг = 0;
		
	ИначеЕсли ЭлементДиалога = "ХарактерРаботы" Тогда
		СписокХарактеровРаботы.ВыбратьЗначение(ХарактерРаботы,,,, 2);
		Флаг = 0;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	
	// Проверка реквизитов документа, удостоверяющего личность
	Если ПустаяСтрока(ВидДокумента) = 1 Тогда
		
		Если (ПустоеЗначение(ДокументСерия) = 0) или
			 (ПустоеЗначение(ДокументНомер) = 0) или
			 (ПустоеЗначение(ДокументДатаВыдачи) = 0) или
			 (ПустоеЗначение(ДокументКемВыдан) = 0) Тогда
		
			// Если в поле документа выбрано "пустое значение" - очищаем реквизиты 
			// документа в форме отчета.
			Если Вопрос("В качестве вида документа, удостоверяющего личность, выбрано <пустое значение>. 
			            |Реквизиты документа, удостоверяющего личность, будут очищены. Продолжить?","Да+Нет") = "Да" Тогда
				
				ДокументСерия = " ";
				ДокументНомер = " ";
				ДокументДатаВыдачи = " ";
				ДокументКемВыдан = " ";
				
			Иначе
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
    
	Иначе
		
		КодДокумента = ВидДокумента.КодНДФЛ;
		Ошибка = 0;

		Если глПроверкаСерииУдостоверенияЛичности(КодДокумента, ДокументСерия, 1) = 0 Тогда

			Активизировать("ДокументСерия");
			Ошибка = 1;

		ИначеЕсли глПроверкаНомераУдостоверенияЛичности(КодДокумента, ДокументНомер, 1) = 0 Тогда
			
			// Проверку номера вызываем для всех кодов документа - проверка сама знает,
			// что и как проверять
			Активизировать("ДокументНомер");
			Ошибка = 1;
			
		ИначеЕсли ПустоеЗначение(ДокументДатаВыдачи) = 1 Тогда
			
			Активизировать("ДокументДатаВыдачи");
			Предупреждение("Необходимо указать дату выдачи документа, удостоверяющего личность.");
			Ошибка = 1;

		ИначеЕсли ПустоеЗначение(ДокументКемВыдан) = 1 Тогда
			
			Активизировать("ДокументКемВыдан");
			Предупреждение("Необходимо указать, кем выдан документ, удостоверяющий личность.");
			Ошибка = 1;

		КонецЕсли;
		
		Если Ошибка = 1 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	// Проверка ИНН
	Если ПустоеЗначение(ИНН) = 0 Тогда
		КонтрольИНН = ИНН;
		ДлинаИНН = СтрДлина(Строка(Число(СтрЗаменить(КонтрольИНН, "0", "9"))));
		
		Если ДлинаИНН <> 12 Тогда
			Предупреждение("Неверно указан ИНН сотрудника.");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если Константа.ВсеДокументыВЖурналОпераций = Да Тогда
	    СуществуетОперация(1);
		Операция.СуммаОперации = 0;
		Операция.Содержание = "Приказ о приеме сотр.: "+Сотрудник;
	Иначе
	    СуществуетОперация(0);
	КонецЕсли;
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Приказ о приеме работника на работу Т-1";
ТаблицаПечФорм.Кнопка       = "Т-1";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");

СписокХарактеровРаботы = СоздатьОбъект("СписокЗначений");
СписокХарактеровРаботы.ДобавитьЗначение(Перечисление.ХарактерРаботы.ТрудовойДоговор);

ВычетыНДФЛ.НоваяКолонка("Наименование", "Строка",,,"Вид вычета");
ВычетыНДФЛ.НоваяКолонка("ДатаНачала", "Дата",,,"С",, "Д ДДММГГГГ");
ВычетыНДФЛ.НоваяКолонка("ДатаОкончания", "Дата",,,"По",, "Д ДДММГГГГ");

ВычетыНДФЛСсылки = СоздатьОбъект("ТаблицаЗначений");
ВычетыНДФЛСсылки.НоваяКолонка("ВидВычета");

ВычетыСотрудниковПоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");

