////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
Перем СписокВидовРасходов;

//******************************************************************************
Процедура Подбор()
	
	ОткрытьПодбор("Справочник.ОсновныеСредства","ДляВыбора");
	
КонецПроцедуры  

//******************************************************************************
Процедура ОбработкаПодбора(ВыбрОС)
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Код = ВыбрОС.Код Тогда
	        Предупреждение("Основное средство уже выбрано", 10);
			Возврат;
	    КонецЕсли;
	КонецЦикла;
	НоваяСтрока();
	ОсновноеСредство = ВыбрОС;
	АктивизироватьСтроку();
КонецПроцедуры 

//******************************************************************************
Процедура Заполнить()  
	НачОС = "";                            
	СписокКодов = СоздатьОбъект("СписокЗначений");
    Если КоличествоСтрок() = 0 Тогда
        ВвестиЗначение(НачОС,"Выберите элемент, входящий в группу однотипных основных средств","Справочник.ОсновныеСредства");
		Если ПустоеЗначение(НачОС) = 1 Тогда
		    Возврат;
		Иначе
			НоваяСтрока();
			ОсновноеСредство = НачОС;
		КонецЕсли;
	КонецЕсли;
	ВыбратьСтроки();
	ПолучитьСтроку();
	НаимОС = ОсновноеСредство.Наименование;       
	СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	ОСРодитель = ОсновноеСредство.Родитель;
	КС = КоличествоСтрок();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Наименование <> НаимОС Тогда
	        Предупреждение("В табличной части указаны объекты с разными наименованиями."+
			РазделительСтрок+"                Заполнение отменено",60);
			Возврат;
		Иначе
			СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	    КонецЕсли;
	КонецЦикла;
	Спр = СоздатьОбъект("Справочник.ОсновныеСредства");
	Спр.ИспользоватьРодителя(ОСРодитель);
	Спр.ВыбратьЭлементы(1);
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Если Спр.ЭтоГруппа() = 1 Тогда
		    Продолжить;
		КонецЕсли;
		Если Спр.Наименование <> НаимОС Тогда
		    Продолжить;
		КонецЕсли;
	    Если СписокКодов.НайтиЗначение(Спр.Код) = 0 Тогда
	        НоваяСтрока();
			ОсновноеСредство = Спр.ТекущийЭлемент();
	    КонецЕсли;
	КонецЦикла;
	Если КС = КоличествоСтрок() Тогда
	    Предупреждение("Других объектов с указанным наименованием не найдено",60);
	КонецЕсли;
КонецПроцедуры
	
//_____________________________________________________________________________
Функция СтрНачисленияАмортизации()
    Перем Стр;

	Если ОсновноеСредство.Выбран() = 0 Тогда
		Стр = "";
	Иначе
		
		Если ОсновноеСредство.ПодлежитАмортизации = 1 Тогда
			Стр = "амортизацию";
		Иначе
			Стр = "износ";
		КонецЕсли;
		Если ОсновноеСредство.НачислятьАмортизацию.Получить(ДатаДок-1) = 1 Тогда
			Стр = "Начислять "+Стр;
		Иначе
			Стр = "Не начислять "+Стр;
		КонецЕсли;
	КонецЕсли;

	Возврат Стр;
КонецФункции //СтрНачисленияАмортизации
//_____________________________________________________________________________
Функция СтрНаходитсяВЗалоге()
    Перем Стр;

	Если ОсновноеСредство.Выбран() = 0 Тогда
		Стр = "";
		
	ИначеЕсли ОсновноеСредство.НаходитсяВЗалоге.Получить(ДатаДок-1) = 1 Тогда
			Стр = "Находится в залоге";
	КонецЕсли;

	Возврат Стр;
КонецФункции // СтрНаходитсяВЗалоге()

//******************************************************************************
// ПриВыбореСчета()
// 
// Вызывается из формул элементов диалога:
//  Счет, Расходы.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета(Учет = "")
	
	Если (Форма.АктивныйЭлемент() = "СчетЗатрат") или (Учет = "Б") Тогда
		Если СчетЗатрат.Забалансовый = 1 Тогда
		    Предупреждение("Счет отнесения затрат должен быть балансовым.");
		КонецЕсли;
	КонецЕсли;
	
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто" + А, СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
	
КонецПроцедуры // ПриВыбореСчета()

//******************************************************************************
// ПриВыбореВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Переключатель "Для целей налогового учета".
//
// Описание:
//
Процедура ПриВыбореВидаРасхода()
	              
	Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
	 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
	    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.Амортизация;
	КонецЕсли;
	
КонецПроцедуры //ПриВыбореВидаРасхода

//******************************************************************************
//
// ПриИзмененииВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Графа "Вид расхода".
//
// Описание:
//  Осуществляется управление реквизитов "объект" и "элемент расхода"
//  в зависимости от выбранного вида расхода.
//
Процедура ПриИзмененииВидаРасхода(Режим=0)
	
	ТипЭлементаРасхода = "";
	ВидыОбъекта = "";
	Если ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеТоваров Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеМатериалов Тогда
		ВидыОбъекта = "Материалы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства,Оборудование";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.СтроительствоОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеНематериальныхАктивов Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг Тогда
		ВидыОбъекта = "ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеПрав Тогда
		ВидыОбъекта = "Договоры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.НИОКР Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов Тогда
		ВидыОбъекта = "РасходыБудущихПериодов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		ВидыОбъекта = "ВидыНоменклатуры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВнереализационныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ВнереализационныеРасходы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияОсновныхСредств Тогда
		ВидыОбъекта = "ОсновныеСредства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияНематериальныхАктивов Тогда
		ВидыОбъекта = "НематериальныеАктивы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияПрочегоИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОбъектыСтроительства,ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВыбытиеИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОсновныеСредства,НематериальныеАктивы,ОбъектыСтроительства,ЦенныеБумаги";
	КонецЕсли;
	
	Если Режим=0 Тогда
		НазначитьТип("ЭлементРасхода", ТипЭлементаРасхода);
	КонецЕсли;
	
	Если ПустоеЗначение(ТипЭлементаРасхода) = 1 Тогда
		Форма.ЭлементРасхода.Доступность(0);
		Форма.ПодписьЭлементРасхода.Доступность(0);
		
	Иначе
		Форма.ЭлементРасхода.Доступность(1);
		Форма.ПодписьЭлементРасхода.Доступность(1);
	КонецЕсли;
	
	Если ПустоеЗначение(ВидыОбъекта) = 0 Тогда
		Если Найти("," + ВидыОбъекта + ",", "," + Объект.Вид() + ",") = 0 Тогда
			
			Если Режим=0 Тогда
				Объект = "";
			КонецЕсли;
			
		КонецЕсли;
		Объект.ВидыДляВыбора(ВидыОбъекта);
		Форма.Объект.Доступность(1);
		Форма.ПодписьОбъект.Доступность(1);
		
	Иначе

		Если Режим=0 Тогда
			Объект = "";
		КонецЕсли;

		Форма.Объект.Доступность(0);
		Форма.ПодписьОбъект.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииВидаРасхода()

//_____________________________________________________________________________
Процедура ПриВыбореОС()
	
	Если ОсновноеСредство.Выбран() = 1 Тогда
		Если КоличествоСтрок() = 1 Тогда
		    СчетЗатрат = ОсновноеСредство.СчетЗатрат.Получить(ДатаДок);
			ПриВыбореСчета("Б");
			Субконто1 = ОсновноеСредство.Субконто1.Получить(ДатаДок);
			Субконто2 = ОсновноеСредство.Субконто2.Получить(ДатаДок);
			Субконто3 = ОсновноеСредство.Субконто3.Получить(ДатаДок);
		    ВидРасхода = ОсновноеСредство.ВидРасхода.Получить(ДатаДок);
			ПриИзмененииВидаРасхода();
			ЭлементРасхода = ОсновноеСредство.ЭлементРасхода.Получить(ДатаДок);
			Объект = ОсновноеСредство.Объект.Получить(ДатаДок);
			Подразделение = ОсновноеСредство.Подразделение.Получить(ДатаДок);
			НачислятьАмортизацию = ОсновноеСредство.НачислятьАмортизацию.Получить(ДатаДок);
		    МОЛ = ОсновноеСредство.МОЛ.Получить(ДатаДок);
			НаходитсяВЗалоге = ОсновноеСредство.НаходитсяВЗалоге.Получить(ДатаДок);
			УстановитьАтрибут("Состояние", ОсновноеСредство.Состояние.Получить(ДатаДок));
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры //ПриВыбореОС

//_____________________________________________________________________________
Процедура Печать()
	
	Если ДатаДок<Дата("23.03.2003") Тогда
		ИнвентарныеНомера = "";
		ОбъектОС = ПолучитьПустоеЗначение("Справочник.ОсновныеСредства");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = 1 Тогда
				ОбъектОС = ОсновноеСредство;
			КонецЕсли;
			ИнвентарныеНомера = ?(ИнвентарныеНомера = "", "", ИнвентарныеНомера + "; " + РазделительСтрок);
			ИнвентарныеНомера = ИнвентарныеНомера + СокрЛ(ОсновноеСредство.Код);
		КонецЦикла;
		
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("ОС-1_97");
		Сдатчик = ОбъектОС.Подразделение.Получить(ДатаДок-1);
		Получатель = Подразделение;
		Если (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
		или (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		или (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет) Тогда
			СрокИспользования = ""+ОбъектОС.СрокПолезногоИспользования.Получить(ДатаДок)+" мес";
		Иначе
			СрокИспользования = "";
		КонецЕсли;
		
		НормаАмортизации = "";
		КодНормы = "";
		Если (ОбъектОС.ПодлежитАмортизации = 0)
		или (ОбъектОС.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоЕдинымНормам) Тогда
			НормаАмортизации = ОбъектОС.КоэффициентАмортизации.Получить(ДатаДок);
			Если ОбъектОС.ШифрПоЕНАОФ.Выбран() = 1 Тогда
				КодНормы = ОбъектОС.ШифрПоЕНАОФ.Код;
			КонецЕсли;
		КонецЕсли;
		
		Если ОбъектОС.ДатаВводаВЭксплуатацию <> Дата(0) Тогда
			ДатаВводаВЭксплуатацию = ОбъектОС.ДатаВводаВЭксплуатацию;
		Иначе
			ДатаВводаВЭксплуатацию = "";
		КонецЕсли;
		
		СведенияОбОС = глРасчетАмортизацииОС(ОбъектОС, ДатаДок);
		БалансоваяСтоимость = СведенияОбОС.Получить("БалансоваяСтоимостьКон");
		НачисленнаяАмортизация = СведенияОбОС.Получить("НачисленнаяАмортизацияКон");
		
		ПредставлениеГода = Лев(ДатаГод(ДатаДок),2);
		Таб.Вывести();
		Таб.ТолькоПросмотр(1);
		Таб.ПараметрыСтраницы(2,,, 10, 0, 0, 0,,,,,);
		Таб.Опции(0,0,0,0,"ОпцииПечатиОС1","ОкноОС1");
		Таб.Показать();
	Иначе 
		КоличествоОСВСоставеМПЗ = 0;
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("ОС-2");
		Организация		 = СокрЛП(Константа.НазваниеОрганизации);
		ВыбратьСтроки();
		ПодрСдатчик		 = "";
		Пока (ПолучитьСтроку()=1) Цикл
			Если Найти(СокрЛП(ПодрСдатчик),СокрЛП(ОсновноеСредство.Подразделение.Получить(ДатаДок-1).Наименование))=0 Тогда
				ПодрСдатчик = ПодрСдатчик + СокрЛП(ОсновноеСредство.Подразделение.Получить(ДатаДок-1).Наименование) + "; ";
			КонецЕсли;
		КонецЦикла;
		ПодрСдатчик = Лев(СокрЛП(ПодрСдатчик),СтрДлина(СокрЛП(ПодрСдатчик))-1);
		ПодрПолучатель	 = Подразделение;
		ГлавБух			 = "("+ФИО(Константа.ГлБухгалтер.Получить(ДатаДок))+")";
		Таб.ВывестиСекцию("Шапка1");
		ИтогСумма=0;
		ВыбратьСтроки();
		Пока (ПолучитьСтроку()=1) Цикл
			
			Если ПустоеЗначение(ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ)=0 Тогда
				Сообщить("Основное средство инв. №"+ОсновноеСредство.Код+" "+ОсновноеСредство.Наименование+" отражено в составе МПЗ!");
				КоличествоОсВСоставеМПЗ=КоличествоОСВСоставеМПЗ+1;
				Продолжить;
			КонецЕсли;

			Нс = НомерСтроки;
			НаимОС = ОсновноеСредство.Наименование;
			ДатаВвода = ?(ПустоеЗначение(ОсновноеСредство.ДатаПриобретения)=0,ОсновноеСредство.ДатаПриобретения,ОсновноеСредство.ДатаВводаВЭксплуатацию);
			ИнвНомер = ОсновноеСредство.Код;
			СведенияОбОС = глРасчетАмортизацииОС(ОсновноеСредство, ДатаДок, 0);
			НачАмортизация = СведенияОбОС.Получить("НачисленнаяАмортизацияКон");
			БалансоваяСтоимость = СведенияОбОС.Получить("БалансоваяСтоимостьКон");
			СуммаПеремещения = БалансоваяСтоимость - НачАмортизация;
			ИтогСумма = ИтогСумма + СуммаПеремещения;
			СуммаПеремещения = Формат(СуммаПеремещения,"Ч015.2");
			Таб.ВывестиСекцию("Строка");
			Если НомерСтроки=16 Тогда
			    Таб.НоваяСтраница();
				Таб.ВывестиСекцию("Шапка2");
			КонецЕсли;
		КонецЦикла; 
				
		Если КоличествоОсВСоставеМПЗ>0 Тогда
			Возврат;
		КОнецЕсли;

		Если КоличествоСтрок()<17 Тогда
			Для х=КоличествоСтрок()+1 по 17 Цикл
				Если х=16 Тогда
					Таб.НоваяСтраница();
					Таб.ВывестиСекцию("Шапка2");
				КонецЕсли;
				Таб.ВывестиСекцию("СтрокаП");	
			КонецЦикла;
		КонецЕсли; 
		ИтогСумма = Формат(ИтогСумма,"Ч015.2");
		Таб.ВывестиСекцию("Подвал");
		Таб.Опции(0,0,0,0,"ОпцииПечатиОС_2","ОкноОС_2");
		Таб.ПараметрыСтраницы(2);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Акт ОС-2");
	КонецЕсли;
КонецПроцедуры //Печать

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()
//_____________________________________________________________________________
Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	
КонецПроцедуры // ВводНового()
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли;
	Форма.ОсновноеСредство.ВыполнятьФормулуТолькоПриИзменении(1);
	
	Форма.ИспользоватьЗакладки(1);
    Форма.Закладки.ДобавитьЗначение("Основные средства");
    Форма.Закладки.ДобавитьЗначение("Перемещение");
    Форма.Закладки.ДобавитьЗначение("Бухгалтерский учет");
    Форма.Закладки.ДобавитьЗначение("Налоговый учет");
	Форма.ИспользоватьСлой("ОсновныеСредства, Основной", 2);
	НачальнаяДатаДокумента = ДатаДок;
	
	СписокВидовРасходов = СоздатьОбъект("СписокЗначений");
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.КосвенныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПрямыеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеТоваров);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеМатериалов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.СтроительствоОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеПрав);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ТранспортныеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПредставительскиеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РасходыНаРекламу);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НИОКР);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ВнереализационныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияПрочегоИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.БезвозмезднаяПередачаИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НеПринимаемые);
	
	ПриИзмененииВидаРасхода(1);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры //ПриОткрытии

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки = "Основные средства" Тогда
		Форма.ИспользоватьСлой("ОсновныеСредства, Основной", 2);
		
	ИначеЕсли ЗначениеЗакладки = "Перемещение" Тогда
		Форма.ИспользоватьСлой("Перемещение, Основной", 2);
		
	ИначеЕсли ЗначениеЗакладки = "Бухгалтерский учет" Тогда
		Форма.ИспользоватьСлой("БухгалтерскийУчет, Основной", 2);

	ИначеЕсли ЗначениеЗакладки = "Налоговый учет" Тогда
		Форма.ИспользоватьСлой("НалоговыйУчет, Основной", 2);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВидРасхода" Тогда
		Флаг = 0;
		Позиция = СписокВидовРасходов.НайтиЗначение(ВидРасхода);
		ВыбранныйВидРасхода = ВидРасхода;
		Если СписокВидовРасходов.ВыбратьЗначение(ВыбранныйВидРасхода,, Позиция,, 2) = 1 Тогда
			Если ВидРасхода <> ВыбранныйВидРасхода Тогда
				ВидРасхода = ВыбранныйВидРасхода;
			    ПриИзмененииВидаРасхода();
				ПриВыбореВидаРасхода();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ЭлементРасхода" Тогда
		Если ЭлементРасхода.Вид() = "ГруппыВидыРасходов" Тогда
			Флаг = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если Константа.ВсеДокументыВЖурналОпераций = Да Тогда
	    СуществуетОперация(1);
		Операция.СуммаОперации = 0;
		Операция.Содержание = "Перемещение основного средства";
	Иначе
	    СуществуетОперация(0);
	КонецЕсли;
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
Если ДатаДок<Дата("23.03.2003") Тогда
	ТаблицаПечФорм.Название     = "Акт приемки-передачи ОС-1";
	ТаблицаПечФорм.Кнопка       = "Акт ОС-1";
Иначе
	ТаблицаПечФорм.Название     = "Накладная ОС-2";
	ТаблицаПечФорм.Кнопка       = "Акт ОС-2";	
КонецЕсли;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
