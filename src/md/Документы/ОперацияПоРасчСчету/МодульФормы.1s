Перем НачальнаяДатаДокумента;
Перем СписокРеквизитов;
Перем ВидДокумента;
Перем СписокДействий;
//_____________________________________________________________________________
Процедура ДоступностьКнопкиНовыйПлательщикПолучатель()
	Если (ВидПлательщика-1=1) и (ПустоеЗначение(Плательщик)=1) Тогда
		Форма.НовыйПлательщик.Доступность(1);
	Иначе	
		Форма.НовыйПлательщик.Доступность(0);
	КонецЕсли;
	Если (ВидПолучателя-1=1) и (ПустоеЗначение(Получатель)=1) Тогда
		Форма.НовыйПолучатель.Доступность(1);
	Иначе	
		Форма.НовыйПолучатель.Доступность(0);
	КонецЕсли;
КонецПроцедуры //ПриВыбореВидаПлательщика
//_____________________________________________________________________________
Процедура ПриВыбореВидаПлательщикаПолучателя(ВидПлательщикаПолучателя, ПлательщикПолучатель, СчетПлательщикаПолучателя)
	Если ВидПлательщикаПолучателя = 1 Тогда
		ПлательщикПолучатель = "";
	    Если СчетПлательщикаПолучателя.Вид() <> "БанковскиеСчета" Тогда
	        СчетПлательщикаПолучателя = "";
			НазначитьВид(СчетПлательщикаПолучателя, "БанковскиеСчета");
		КонецЕсли;

	Иначе
	    Если СчетПлательщикаПолучателя.Вид() <> "РасчетныеСчета" Тогда
	        СчетПлательщикаПолучателя = "";
			НазначитьВид(СчетПлательщикаПолучателя, "РасчетныеСчета");
		КонецЕсли;
	КонецЕсли;

	Форма.Плательщик.Доступность(ВидПлательщика-1);
	Форма.Получатель.Доступность(ВидПолучателя-1);
	Форма.ПлательщикСчет.НеИзменятьВид(1);
	Форма.ПолучательСчет.НеИзменятьВид(1);
	ДоступностьКнопкиНовыйПлательщикПолучатель();
КонецПроцедуры //ПриВыбореВидаПлательщика
//******************************************************************************
Функция УстановитьБанк(Наименование, БИК, КоррСчет, Город, Адрес="", Индекс="", Телефоны="" ) 
	глОшибкаВоВремяОбновления=0;	
	Банк="";
	СпрБанки=СоздатьОбъект("Справочник.Банки");
	Если (ПустоеЗначение(БИК)=0) Тогда
		Если СпрБанки.НайтиПоКоду(БИК,0)=1 Тогда
			Банк=СпрБанки.ТекущийЭлемент();
		КонецЕсли;
	КонецЕсли;
	Если (ПустоеЗначение(Банк)=1) и (ПустоеЗначение(Наименование)=0) Тогда
		Если СпрБанки.НайтиПоНаименованию(Наименование,0)=1 Тогда
			Банк=СпрБанки.ТекущийЭлемент();
		КонецЕсли;
	КонецЕсли;
	Если (ПустоеЗначение(Банк)=1) и (ПустоеЗначение(Наименование)=0) Тогда
		СпрБанки.Новый();
		СпрБанки.Код = БИК;
		СпрБанки.Наименование = Наименование;
		СпрБанки.КоррСчет = КоррСчет;
		СпрБанки.Адрес = ","+СокрЛП(Индекс)+","+Адрес;
		СпрБанки.Местонахождение = Город;
		СпрБанки.Телефоны = Телефоны;
		СпрБанки.Записать();
		Возврат СпрБанки.ТекущийЭлемент();
	Иначе
		Возврат Банк;
	КонецЕсли;
	
КонецФункции //УстановитьБанк()

//******************************************************************************

Процедура СоздатьПоРеквизитам(ВидПлательщикаПолучателя, ПлательщикПолучатель, СчетПлательщикаПолучателя)
	Слово=ВидПлательщикаПолучателя;
	НомерСчета = СписокРеквизитов.Получить(Слово+"Счет");
	ИННКраткий = СокрЛП(СписокРеквизитов.Получить(Слово+"ИНН"));
	ИНН = СокрЛП(СписокРеквизитов.Получить(Слово+"ИНН")) + "\" 
		      + СокрЛП(СписокРеквизитов.Получить(Слово+"КПП"));
	Наименование = СписокРеквизитов.Получить(Слово+"1");
	Если ПустоеЗначение(Наименование)=1 Тогда
		Наименование = СписокРеквизитов.Получить(Слово);
	КонецЕсли;
	СпрРасчетныеСчета=СоздатьОбъект("Справочник.РасчетныеСчета");
	СпрКонтрагенты=СоздатьОбъект("Справочник.Контрагенты");
	Если ПустоеЗначение(Наименование)=0 Тогда
		Контрагент=ПолучитьПустоеЗначение("Справочник.Контрагенты");
		РасчСчет=ПолучитьПустоеЗначение("Справочник.РасчетныеСчета");
		
		Если ПустоеЗначение(НомерСчета)=0 Тогда
			Если СпрРасчетныеСчета.НайтиПоРеквизиту("Номер",НомерСчета,1)=1 Тогда
				РасчСчет=СпрРасчетныеСчета.ТекущийЭлемент();
				Контрагент=РасчСчет.Владелец;
			КонецЕсли;
		КонецЕсли;
		
		// Ищем по значению ИНН\КПП
		Если (ПустаяСтрока(ИНН)=0) и (ПустоеЗначение(Контрагент)=1) Тогда 
			Если СпрКонтрагенты.НайтиПоРеквизиту("ИНН",ИНН,1)=1 Тогда
				Контрагент=СпрКонтрагенты.ТекущийЭлемент();
			КонецЕсли; 
		КонецЕсли;
		
		// Возможно просто укзали только ИНН - например для ПБОЮЛ
		Если (ПустаяСтрока(ИННКраткий)=0) и (ПустоеЗначение(Контрагент)=1) Тогда
			Если СпрКонтрагенты.НайтиПоРеквизиту("ИНН",ИННКраткий,1)=1 Тогда
				Контрагент=СпрКонтрагенты.ТекущийЭлемент();
			КонецЕсли; 
		КонецЕсли;
		
		Если (ПустоеЗначение(Контрагент)=1) Тогда
			СпрКонтрагенты.Новый();
			СпрКонтрагенты.Наименование=Наименование;
			СпрКонтрагенты.ПолнНаименование=Наименование;
			СпрКонтрагенты.ИНН=ИНН;
			СпрКонтрагенты.Записать();
		Иначе 
			СпрКонтрагенты.НайтиЭлемент(Контрагент);
		КонецЕсли;
		
		Если Слово="Плательщик" Тогда
			Плательщик=СпрКонтрагенты.ТекущийЭлемент();
		Иначе
			Получатель=СпрКонтрагенты.ТекущийЭлемент();
		КонецЕсли;
		Если (ПустоеЗначение(НомерСчета)=0) и (РасчСчет.Выбран()=0) Тогда
			СпрРасчетныеСчета.ИспользоватьВладельца(СпрКонтрагенты.ТекущийЭлемент());
			СпрРасчетныеСчета.Новый();
			СпрРасчетныеСчета.Номер=НомерСчета;
			НаименованиеСчета="Основной в ";
		
			Если ПустоеЗначение(СписокРеквизитов.Получить(Слово+"3"))=0 Тогда
				// Непрямые расчеты
				Наименование = СписокРеквизитов.Получить(Слово+"3");
				Город = СписокРеквизитов.Получить(Слово+"4");
				КоррСчет = СписокРеквизитов.Получить(Слово+"РасчСчет");
				СпрРасчетныеСчета.БанкОрганизации=УстановитьБанк(Наименование, "", КоррСчет, Город) ;
				НаименованиеСчета=НаименованиеСчета+СокрЛП(Наименование);
				
				Наименование = СписокРеквизитов.Получить(Слово+"Банк1");
				Город = СписокРеквизитов.Получить(Слово+"Банк2");
				БИК = СписокРеквизитов.Получить(Слово+"БИК");
				КоррСчет = СписокРеквизитов.Получить(Слово+"Корсчет");
				СпрРасчетныеСчета.БанкДляРасчетов=УстановитьБанк(Наименование, БИК, КоррСчет, Город) ;
			Иначе
				// Прямые расчеты
				Наименование = СписокРеквизитов.Получить(Слово+"Банк1");
				Город = СписокРеквизитов.Получить(Слово+"Банк2");
				БИК = СписокРеквизитов.Получить(Слово+"БИК");
				КоррСчет = СписокРеквизитов.Получить(Слово+"Корсчет");
				СпрРасчетныеСчета.БанкОрганизации=УстановитьБанк(Наименование, БИК, КоррСчет, Город) ;
				НаименованиеСчета=НаименованиеСчета+СокрЛП(Наименование);
			КонецЕсли;
			СпрРасчетныеСчета.Наименование=НаименованиеСчета;
			СпрРасчетныеСчета.Записать();
			Если Слово="Плательщик" Тогда
				ПлательщикСчет=СпрРасчетныеСчета.ТекущийЭлемент();
			Иначе
				ПолучательСчет=СпрРасчетныеСчета.ТекущийЭлемент();
			КонецЕсли;
		ИначеЕсли (РасчСчет.Выбран()=1) Тогда
			Если Слово="Плательщик" Тогда
				ПлательщикСчет=РасчСчет;
			Иначе
				ПолучательСчет=РасчСчет;
			КонецЕсли;
		Иначе		
			Если Слово="Плательщик" Тогда
				Предупреждение("Не указан номер банковского счета плательщика");
			Иначе
				Предупреждение("Не указан номер банковского счета получателя");
			КонецЕсли;
		КонецЕсли;
	Иначе		
		Если Слово="Плательщик" Тогда
			Предупреждение("Не указано наименование плательщика");
		Иначе
			Предупреждение("Не указано наименование получателя");
		КонецЕсли;
	КонецЕсли;
	ДоступностьКнопкиНовыйПлательщикПолучатель();
КонецПроцедуры //СоздатьПоРеквизитам


Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Предупреждение("Новый документ ""Операция по р/с"" не может быть введен вручную.");
	СтатусВозврата(0);
КонецПроцедуры //ВводНового
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
	КонецЕсли;
	
	СписокРеквизитов = СоздатьОбъект("СписокЗначений"); 
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СписокРеквизитов.ДобавитьЗначение(СокрП(Значение), СокрП(Имя));
	КонецЦикла;

	ВидДокумента = СписокРеквизитов.Получить("СекцияДокумент");
	
	Если ПлательщикСчет.Вид() = "БанковскиеСчета" Тогда
	    ВидПлательщика = 1;
		Форма.Плательщик.Доступность(0);
	Иначе
	    ВидПлательщика = 2;
		Форма.Плательщик.Доступность(1);
		НазначитьВид(ПлательщикСчет, "РасчетныеСчета");
	КонецЕсли;
	 
	Если ПолучательСчет.Вид() = "БанковскиеСчета" Тогда
	    ВидПолучателя = 1;
		Форма.Получатель.Доступность(0);
	Иначе
	    ВидПолучателя = 2;
		Форма.Получатель.Доступность(1);
		НазначитьВид(ПолучательСчет, "РасчетныеСчета");
	КонецЕсли;
	ДоступностьКнопкиНовыйПлательщикПолучатель();
	Форма.ПлательщикСчет.НеИзменятьВид(1);
	Форма.ПолучательСчет.НеИзменятьВид(1);
	
	ПоказыватьИдентификатор = ВосстановитьЗначение("ОперацияПоРасчСчету_ПоказыватьИдентификатор");
	Форма.Имя.Видимость(ПоказыватьИдентификатор);
	ПоказыватьСиноним = ?(ВосстановитьЗначение("ОперацияПоРасчСчету_НеПоказыватьСиноним")=1, 0, 1);
	Форма.Синоним.Видимость(ПоказыватьСиноним);
	
	НачальнаяДатаДокумента =ДатаДок;
КонецПроцедуры //ПриОткрытии
//_____________________________________________________________________________
Процедура ПриВводеСтроки()
	СтатусВозврата(0);
КонецПроцедуры //ПриВводеСтроки
//_____________________________________________________________________________
Процедура ПриНачалеРедактированияСтроки()
	СтатусВозврата(0);
КонецПроцедуры //ПриНачалеРедактированияСтроки
//_____________________________________________________________________________
Процедура ПриЗакрытии() //предопределенная
	СохранитьЗначение("ОперацияПоРасчСчету_ПоказыватьИдентификатор", ПоказыватьИдентификатор);
	СохранитьЗначение("ОперацияПоРасчСчету_НеПоказыватьСиноним", ?(ПоказыватьСиноним=1, 0, 1));
КонецПроцедуры //ПриЗакрытии
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если Константа.ВсеДокументыВЖурналОпераций = Да Тогда
		СуществуетОперация(1); 
		Операция.СуммаОперации = 0;
		Операция.Содержание = "Операции по р/с";	
	Иначе
		СуществуетОперация(0);
	КонецЕсли;

КонецПроцедуры //ПриЗаписи

//*****************************************************************************
СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
