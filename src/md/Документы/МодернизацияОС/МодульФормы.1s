////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
Перем Отмена;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
Процедура Подбор()
	ОткрытьПодбор("Справочник.ОсновныеСредства","ДляВыбора");
КонецПроцедуры  

//******************************************************************************
Процедура ОбработкаПодбора(ВыбрОС)
	Если ПустоеЗначение(ВыбрОС.МатериалДляОтраженияВСоставеМПЗ)=1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ОсновноеСредство.Код = ВыбрОС.Код Тогда
				Предупреждение("Основное средство уже выбрано", 10);
				Возврат;
			КонецЕсли;
		КонецЦикла;
		НоваяСтрока();
		ОсновноеСредство = ВыбрОС;
		АктивизироватьСтроку();
	Иначе 
		Предупреждение("Основное средство отражено в составе МПЗ и не может быть модернизировано!",10);
		Возврат;
	КонецЕсли;	
КонецПроцедуры 

//******************************************************************************
Процедура Заполнить()  
	НачОС = "";                            
	СписокКодов = СоздатьОбъект("СписокЗначений");
	Если КоличествоСтрок() = 0 Тогда
		ВвестиЗначение(НачОС,"Выберите элемент, входящий в группу однотипных основных средств","Справочник.ОсновныеСредства");
		Если ПустоеЗначение(НачОС) = 1 Тогда
			Возврат;
		ИначеЕсли ПустоеЗначение(НачОС.МатериалДляОтраженияВСоставеМПЗ)=0 Тогда
			Предупреждение("Основное средство отражено в составе МПЗ и не может быть модернизировано!",10);
			Возврат;
		Иначе
			НоваяСтрока();
			ОсновноеСредство = НачОС;
		КонецЕсли;
	КонецЕсли;
	ВыбратьСтроки();
	ПолучитьСтроку();
	НаимОС = ОсновноеСредство.Наименование;       
	СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	ОСРодитель = ОсновноеСредство.Родитель;
	КС = КоличествоСтрок();
	Пока ПолучитьСтроку() = 1 Цикл
	    Если ОсновноеСредство.Наименование <> НаимОС Тогда
	        Предупреждение("В табличной части указаны объекты с разными наименованиями."+
			РазделительСтрок+"                Заполнение отменено",60);
			Возврат;
		Иначе
			СписокКодов.ДобавитьЗначение(ОсновноеСредство.Код);
	    КонецЕсли;
	КонецЦикла;
	Спр = СоздатьОбъект("Справочник.ОсновныеСредства");
	Спр.ИспользоватьРодителя(ОСРодитель);
	Спр.ВыбратьЭлементы(1);
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Если Спр.ЭтоГруппа() = 1 Тогда
		    Продолжить;
		КонецЕсли;
		Если Спр.Наименование <> НаимОС Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(Спр.МатериалДляОтраженияВСоставеМПЗ)=0 Тогда
			Продолжить;
		КонецЕсли;
		Если СписокКодов.НайтиЗначение(Спр.Код) = 0 Тогда
			НоваяСтрока();
			ОсновноеСредство = Спр.ТекущийЭлемент();
	    КонецЕсли;
	КонецЦикла;
	Если КС = КоличествоСтрок() Тогда
	    Предупреждение("Других объектов с указанным наименованием не найдено",60);
	КонецЕсли;
КонецПроцедуры
	
//******************************************************************************
// ПриВыбореОС()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Таблица "ОсновноеСредство".
//
// Описание:
//  Если в документе не заполнен срок полезного использования (в БУ и НУ),
//  то срок будет автоматичеки заполнен по данным выбранного объекта
//  основных средств.
//
Процедура ПриВыбореОС()
	
	Если ОсновноеСредство.Выбран() = 1 Тогда
		Отмена = ?(ПустоеЗначение(ОсновноеСредство.МатериалДляОтраженияВСоставеМПЗ)=1,1,0);
		Если КоличествоСтрок() = 1 Тогда
			Если СрокПолезногоИспользования = 0 Тогда
				СрокПолезногоИспользования = ОсновноеСредство.СрокПолезногоИспользования.Получить(ДатаДок);    
			КонецЕсли;
			
			Если СрокПолезногоИспользованияН = 0 Тогда
				СрокПолезногоИспользованияН = ОсновноеСредство.СрокПолезногоИспользованияН.Получить(ДатаДок);    
			КонецЕсли;
			
			Если ОбщийОбъемПродукцииРабот = 0 Тогда
				ОбщийОбъемПродукцииРабот = ОсновноеСредство.ОбщийОбъемПродукцииРабот.Получить(ДатаДок);    
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
		
КонецПроцедуры //ПриВыбореОС    

//**
Процедура  ПриОкончанииРедактированияСтроки()
	Если Отмена = 0 Тогда
		Предупреждение("Основное средство отражено в составе МПЗ и не может быть модернизировано!",10);
	КонецЕсли;
	
	СтатусВозврата(Отмена);
		Возврат;
КонецПроцедуры

//******************************************************************************
// РассчитатьРасходы()
//
// Параметры:
//  Счет - код счета - счет, по которому производить расчет.
//
// Вызывается из формул элементов диалога:
//  Кнопка "Расходы по счету...".
//
// Описание:
//  Рассчитывает расходы по модернизации, которые отражаны на соответствующем счете.
//
Процедура РассчитатьРасходы(Счет)
	
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
		    |Расчет итогов выполняется в режиме
		    |""Операции - Управление бухгалтерскими итогами"".", 60);
		
	ИначеЕсли (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения суммы первоначальной стоимости по данным
					   |бухгалтерского или налогового учета документ
					   |необходимо записать.", 60); 
			
	ИначеЕсли ОбъектВнеоборотныхАктивов.Выбран() = 0 Тогда
	    Предупреждение("Не выбран объект внеоборотных активов,
		               |на котором отражены расходы по модернизации.", 60);
		
	Иначе
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт.ИспользоватьСубконто(ВидыСубконто.ОбъектыСтроительства, ОбъектВнеоборотныхАктивов, 2);
		БухИт.ВыполнитьЗапрос(ТекущийДокумент(),, Счет);
		
		Если Счет = "08.3" Тогда
		    СуммаРасходов = БухИт.СНД();
			
		ИначеЕсли Счет = "Н01.09" Тогда
			СуммаРасходовН = БухИт.СНД();
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры // РассчитатьРасходы()

//******************************************************************************
// СрокЭксплуатации()
//
// Параметры:
//  ОС - Справочник.ОсновныеСредства.
//
// Возвращаемое значение:
//  Строка - Срок эксплутации основного средства.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Рассчитывает срок эксплутации основного средства.
//
Функция СрокЭксплуатации(ОС)
	
	Экспл = СоздатьОбъект("Периодический");
	Экспл.ИспользоватьОбъект("Состояние", ОсновноеСредство);
	СрокЭкспл=0;
	НачалоЭкспл =0;
	Экспл.ВыбратьЗначения(ОС.ДатаВводаВЭксплуатацию, ДатаДок-1);
	Пока Экспл.ПолучитьЗначение() = 1 Цикл
		
		Если Экспл.Значение = Перечисление.СостоянияОС.В_Эксплуатации Тогда
			СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0, 0, Экспл.ДатаЗнач - НачалоЭкспл);
			НачалоЭкспл = Экспл.ДатаЗнач;
			
		Иначе
			СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0, 0, Экспл.ДатаЗнач - НачалоЭкспл);
			НачалоЭкспл = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	СрокЭкспл= СрокЭкспл + ?(НачалоЭкспл=0, 0, ДатаДок - НачалоЭкспл);
	
	Если НачалоЭкспл = 0 Тогда
	    СрокЭкспл = "";
		
	Иначе
		КолЛет = ДатаГод(ДатаДок) - ДатаГод(НачалоЭкспл);
		КолМесяцев = ДатаМесяц(ДатаДок) - ДатаМесяц(НачалоЭкспл);
		СрокЭкспл = ?(Окр(СрокЭкспл/30.5,0,1)>0,Строка(Окр(СрокЭкспл/30.5,0,1))+" мес.",Строка(КолЛет*12 + КолМесяцев)+" мес.");
	КонецЕсли;
	
	Возврат СрокЭкспл;
	                
КонецФункции // СрокЭксплуатации()

//******************************************************************************
// Печать()
//
// Описание:
//  Формирование печатной формы ОС-3.
//
Процедура Печать()
	
	Если Выбран() = 0 Тогда
	    Предупреждение("Для формирования печатной формы документ должен быть записан!", 60);
		Возврат;
	КонецЕсли;
	
	НаименованиеОрганизации	= СокрЛП(Константа.НазваниеОрганизации);
	Подразделение = "";
	ВыбратьСтроки();
	Если ПолучитьСтроку() = 1 Тогда
		Подразделение = ОсновноеСредство.Подразделение.Получить(ДатаДок);    
	КонецЕсли;
	
	
	КодОКПО = Константа.КодОКПО;
	ДолжностьРуководителя = Константа.Руководитель.Получить(ДатаДок).Должность;
	Руководитель = "("+ФИО(Константа.Руководитель.Получить(ДатаДок))+")";
	ГлавБух		 = "("+ФИО(Константа.ГлБухгалтер.Получить(ДатаДок))+")";
	
	// Бухгалтерские итоги для расчета восстановительной (остаточной)
	// стимости на момент модернизации.
	СписокОС = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокОС, "ОсновноеСредство");
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства, СписокОС, 2);
	БухИт.ВыполнитьЗапрос(ТекущийДокумент(),, "01,02",,,,,);
	                    
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ОС-3");
	Таб.ВывестиСекцию("Шапка1");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПорядковыйНомер	 = НомерСтроки;
		НаимОС 		= ОсновноеСредство.Наименование;
		ИнвНомер 	= ОсновноеСредство.Код;
		
		БалансоваяСтоимость    = 0;
		НачисленнаяАмортизация = 0;
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ОсновныеСредства,, ОсновноеСредство) = 1 Тогда
			БухИт.ВыбратьСчета();
			Пока БухИт.ПолучитьСчет() = 1 Цикл
				Если Лев(БухИт.Счет.Код, 2) = "01" Тогда
					БалансоваяСтоимость    = БухИт.СНД();    
				Иначе
					НачисленнаяАмортизация = БухИт.СНК();	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ВосстановительнаяСтоимостьПеч = Формат(БалансоваяСтоимость - НачисленнаяАмортизация,"Ч015.2");
		
		СрокЭкспл = СрокЭксплуатации(ОсновноеСредство);
		
		Таб.ВывестиСекцию("Строка1");
	КонецЦикла;

	// При необходимости дополним форму пустыми строками.
	Если КоличествоСтрок() < 3 Тогда
	    Для СчетчикЦикла = КоличествоСтрок()+1 По 3 Цикл
	    	Таб.ВывестиСекцию("Строка1П");
	    КонецЦикла; 
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка2");
	
	СуммаРасходовНаОбъект = ?(КоличествоСтрок() <> 0, Окр(СуммаРасходов/КоличествоСтрок(), 2), 0);
	СуммаРасходовНаПоследнийОбъект = СуммаРасходов - СуммаРасходовНаОбъект*(КоличествоСтрок() - 1);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПорядковыйНомер	 = НомерСтроки;
		НаимОС 		= ОсновноеСредство.Наименование;
		
		СуммаЗатрат = ?(НомерСтроки <> КоличествоСтрок(), СуммаРасходовНаОбъект, СуммаРасходовНаПоследнийОбъект);
		СуммаЗатрат = Формат(СуммаЗатрат, "Ч015.2");
		
		Таб.ВывестиСекцию("Строка2");
	КонецЦикла;
	
	// При необходимости дополним форму пустыми строками.
	Если КоличествоСтрок() < 2 Тогда
	    Для СчетчикЦикла = КоличествоСтрок()+1 По 2 Цикл
	    	Таб.ВывестиСекцию("Строка2П");
	    КонецЦикла; 
	КонецЕсли;
	
	СтоимостьПослеМодернизации = "";
	Если КоличествоСтрок() = 1 Тогда
		СтоимостьПослеМодернизации = Формат(БалансоваяСтоимость + СуммаРасходовНаОбъект, "Ч015.2");
	КонецЕсли;
	
	ИтогоСуммаЗатрат = Формат(СуммаРасходов,"Ч015.2");
	
	Таб.ВывестиСекцию("Подвал");
	Таб.НоваяСтраница();
	Таб.ВывестиСекцию("ОборотнаяСторона");
	
	Таб.ТолькоПросмотр(1);
	Таб.ПараметрыСтраницы(2,,,, 0, 0, 0,,,,,);
	Таб.Опции(0,0,0,0,"ОпцииПечатиОС3","ОкноОС3");
	Таб.Показать(" Акт ОС-3");
	
КонецПроцедуры //Печать

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование) //предопределенная
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	
КонецПроцедуры // ВводНового() 

//******************************************************************************
// ПриУстановкеВключитьКапительныеВложенияВРасходы()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриУстановкеВключитьКапительныеВложенияВРасходы()
	
	Если (ВключитьКапитальныеВложенияВРасходы = 1) И (СуммаРасходовН <> 0) Тогда 
		ВидимостьРеквизитов = 1;
	Иначе
		ВидимостьРеквизитов = 0;
	КонецЕсли;
	
	Форма.КапитальныеВложенияВключенныеВРасходы.Доступность(ВидимостьРеквизитов);
	Форма.ПодписьВРазмере.Доступность(ВидимостьРеквизитов); 
	  
КонецПроцедуры

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии() //предопределенная
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнЗаписать.Доступность(0);
	КонецЕсли;
	Форма.ОсновноеСредство.ВыполнятьФормулуТолькоПриИзменении(1);
	
	Форма.ИспользоватьЗакладки(1);
    Форма.Закладки.ДобавитьЗначение("Основные средства");
    Форма.Закладки.ДобавитьЗначение("Бухгалтерский учет");
    Форма.Закладки.ДобавитьЗначение("Налоговый учет");
    Форма.ИспользоватьСлой("ОсновныеСредства, Основной", 2);
	НачальнаяДатаДокумента = ДатаДок;
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры //ПриОткрытии

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки = "Основные средства" Тогда
		Форма.ИспользоватьСлой("ОсновныеСредства, Основной", 2);
		
	ИначеЕсли ЗначениеЗакладки = "Бухгалтерский учет" Тогда
		Форма.ИспользоватьСлой("Модернизация, Основной, ОбъектВА", 2);
		
		Если ОсновноеСредство.Выбран() = 1  Тогда
		    Если ОсновноеСредство.СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукцииРабот Тогда
		        Форма.ИспользоватьСлой("ОбъемПродукции", 1);
		    КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗакладки = "Налоговый учет" Тогда
		Форма.ИспользоватьСлой("МодернизацияН, Основной, ОбъектВА", 2);
		ПриУстановкеВключитьКапительныеВложенияВРасходы()
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи() //предопределенная
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
        
	Операция.СуммаОперации = СуммаРасходов;
	Операция.Содержание = "Модернизация основных средств";
	
КонецПроцедуры //ПриЗаписи

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();

ТаблицаПечФорм.Название     = "Акт о приеме сдаче ОС-3";
ТаблицаПечФорм.Кнопка       = "Акт ОС-3";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
