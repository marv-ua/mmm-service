////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	Стр = "";
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
			Стр = "Валюта договора: " + Договор.ВалютаДоговора;
			Если Договор.ОплатаДоговора = 1 Тогда
				Стр = Стр + ", валюта оплаты: рубли" + РазделительСтрок;
				Стр = Стр + "Суммы в документе указаны в рублях";
			Иначе
				Стр = Стр + ", валюта оплаты: " + Договор.ВалютаДоговора + РазделительСтрок;
				Стр = Стр + "Суммы в документе указаны в " + Договор.ВалютаДоговора;
			КонецЕсли;
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//******************************************************************************
// УправлениеКурсом(ИзменитьКурс)
//
// Параметры:
//  ИзменитьКурс - Число. 1 - установить новый курс валюты, 0 - не изменять.
//
// Описание:
//  При выбранной иностранной валюте делает видимым поле "Курс" и записывает
// в него значение из справочника.
//
Процедура УправлениеКурсом(ИзменитьКурс=0)
	
	ВидимостьКурса = 0;
	Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
	    ВидимостьКурса = 1;
		Если Договор.ОплатаДоговора = 2 Тогда
		    Форма.ПодписьКурса.Заголовок("Курс валюты оплаты:");
		Иначе
			Форма.ПодписьКурса.Заголовок("Курс валюты договора:");
		КонецЕсли;
	КонецЕсли;

	Форма.ПодписьКурса.Видимость(ВидимостьКурса);
	Форма.Курс.Видимость(ВидимостьКурса);
	
	Если ИзменитьКурс = 1 Тогда
		Если ВидимостьКурса = 1 Тогда
		    Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
			
		Иначе
			Курс = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УправлениеКурсом()

//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Устанавливает значение курса валюты.
//
Процедура ПриВыбореДоговора()
    Если (Договор.АвтоОбработкаНДС=1)и
		 (Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате) Тогда
	    Предупреждение("По договору """+Договор+""" Записи книги продаж формируются автоматически");
		Договор = "";
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли Договор.АвтоОбработкаНДС=1 Тогда
		Если Вопрос ("По договору """+Договор+""" Записи книги продаж формируются автоматически!
		|Для формирования Записей книги продаж следует использовать документ
		|""Формирование записей книги продаж"". Продолжить?", "Да+Нет") = "Нет" Тогда
			Договор = "";
			СтатусВозврата(0);
			Возврат;	
		КонецЕсли;
	КонецЕсли;
	глПриВыбореДоговора(Контрагент, Договор, Аванс);
	УправлениеКурсом(1);
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
//
// Вызывается из формул элементов диалога:
//  Колонка "Сумма",
//  Колонка "НДС",
//  Колонка "СтавкаНДС".
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа.
//
Процедура Пересчет(ИмяРеквизита="")
	
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;
	
	Если (ИмяРеквизита = "Сумма") или  (ИмяРеквизита = "СтавкаНДС") Тогда
		Если НДСпоСтавкеНольПроцентов = 0 Тогда
		    СтНДС = СтавкаНДС.Ставка;
			Если (СуммаНДСопределяетсяРасчетнымМетодом = 0) и ((СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0)) Тогда
				НДС = Окр(Сумма * СтНДС / 100, 2, 1);
				Всего = Сумма + НДС;
				
			ИначеЕсли СуммаНДСопределяетсяРасчетнымМетодом = 1 Тогда
				НДС = Окр(Сумма * СтНДС / (100 + СтНДС), 2, 1);
				Всего = Сумма;
				
			Иначе
				НДС = Окр(Сумма * СтНДС / 100, 2, 1);
				Всего = Сумма;
			КонецЕсли;
			
		Иначе
			НДС = 0;
			Всего = Сумма;
		КонецЕсли;
		
		Если (Счет = СчетПоКоду("90.3")) и (ИмяРеквизита = "СтавкаНДС") Тогда
			Если ВерсияОбъекта >= "7.70.421" Тогда
		    	Субконто2 = СтавкаНДС;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Форма.ТекущаяКолонка() = "НДС" Тогда
		СтНДС = СтавкаНДС.Ставка;
	    Если (СуммаНДСопределяетсяРасчетнымМетодом = 0) и ((СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0)) Тогда
			Всего = Сумма + НДС;
		
		Иначе
			Всего = Сумма;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Пересчет()

//*****************************************************************************
// ПриВыбореСтавкиНольПроцентов()
//
// Вызывается из формул элементов диалога:
//  Флаг "Облагается НДС по ставке ноль процентов".
//
// Описание:
//  Устанавливает досупностью корреспондирующего счета в табличной части и 
// пересчитывает суммы в строках документа в зависимости от значения флага.
//
Процедура ПриВыбореСтавкиНольПроцентов()

    ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если НДСпоСтавкеНольПроцентов = 0 Тогда
			// Право на использование ставки 0% не подтверждено.
			//КонецЦикла;
		    НДС = Всего*СтавкаНДС.Ставка/(100+СтавкаНДС.Ставка);
			Пересчет("НДС");
			
		Иначе
			НДС = 0;
			Сумма = Всего;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ПриВыбореСтавкиНольПроцентов()

//*****************************************************************************
// ПриЗачетеАванса()
//
Процедура ПриЗачетеАванса()
	
	СуммаНДСопределяетсяРасчетнымМетодом = Аванс;
	
КонецПроцедуры // ПриЗачетеАванса()

//*****************************************************************************
// ПриВыбореОснования(ДокОсн)
//
// Вызывается из формул эелементов диалога:
//  Поле ввода "ДокументОснование",
//  Флажок "Аванс".
//
// Описание:
//  Устанавливает видимость и доступность реквизитов
//  в зависиомсти от выбранного документа-основания.
//
Процедура ПриВыбореОснования(ДокОсн)

	Если ПустоеЗначение(ДокОсн) = 1 Тогда
		ВидимостьСчета = 1;
		Форма.НДСпоСтавкеНольПроцентов.Видимость(1);
		Форма.АкцизСумма.Видимость(1);
		Форма.Аванс.Видимость(1);
		Форма.Аванс.Доступность(1);
		Форма.СуммаНДСопределяетсяРасчетнымМетодом.Видимость(1);
		Форма.СуммаНДСопределяетсяРасчетнымМетодом.Доступность(1);
		Если Аванс = 1 Тогда
		    ВидимостьСчета = 0;
			Форма.АкцизСумма.Видимость(0);
		КонецЕсли; 
		
	Иначе
		Если ДокОсн.НДСпоСтавкеНольПроцентов = 1 Тогда
			ВидимостьСчета = 0;
			Форма.НДСпоСтавкеНольПроцентов.Видимость(1);
			
		Иначе
			ВидимостьСчета = 0;
			Форма.НДСпоСтавкеНольПроцентов.Видимость(0);
		КонецЕсли;
		
		Если ДокОсн.Вид() = "СчетФактураПолученный" Тогда
			ДокОснАванс = 1;
			Если СуммаНДСопределяетсяРасчетнымМетодом = 0 Тогда
				СуммаНДСопределяетсяРасчетнымМетодом = 1;
			КонецЕсли;
			Форма.СуммаНДСопределяетсяРасчетнымМетодом.Видимость(1);
			Форма.СуммаНДСопределяетсяРасчетнымМетодом.Доступность(0);
		Иначе
			ДокОснАванс = ДокОсн.Аванс;
			Если ДокОсн.СуммаНДСопределяетсяРасчетнымМетодом = 1 Тогда
				Форма.СуммаНДСопределяетсяРасчетнымМетодом.Видимость(1);
				Форма.СуммаНДСопределяетсяРасчетнымМетодом.Доступность(0);
			Иначе
				Форма.СуммаНДСопределяетсяРасчетнымМетодом.Видимость(0);
			КонецЕсли; 
		КонецЕсли;
			
		Если ДокОснАванс = 1 Тогда
		    Форма.АкцизСумма.Видимость(0);
			Форма.Аванс.Видимость(1);
			Форма.Аванс.Доступность(0);
		Иначе
			Форма.АкцизСумма.Видимость(1);
			Форма.Аванс.Видимость(0);
		КонецЕсли;
	
	КонецЕсли;

	Форма.Счет.Видимость(ВидимостьСчета);
	Форма.Субконто1.Видимость(ВидимостьСчета);
	Форма.Субконто2.Видимость(ВидимостьСчета);
	Форма.Субконто3.Видимость(ВидимостьСчета);
	Форма.ВидСубконто1.Видимость(ВидимостьСчета);
	Форма.ВидСубконто2.Видимость(ВидимостьСчета);
	Форма.ВидСубконто3.Видимость(ВидимостьСчета);
	
КонецПроцедуры // ПриВыбореОснования()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Выполняет проверку соответсвия Договора и документа-основания выбранному
// контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Контрагент, Договор, ДокументОснование);
	ПриВыбореОснования(ДокументОснование);
	УправлениеКурсом(1);
	
КонецПроцедуры // ПриВыбореКонтрагента()

//*****************************************************************************
// ПриВыбореСчета()
// 
// Вызывается из формул элементов диалога:
//  Поле ввода "Счет".
//
// Описание:
//  Устанавливает типы субконто счета в табличной части документа.
//
Процедура ПриВыбореСчета()
	
	НазначитьТип("Субконто1", Счет.ВидСубконто(1));
	НазначитьТип("Субконто2", Счет.ВидСубконто(2));
	НазначитьТип("Субконто3", Счет.ВидСубконто(3));
	
КонецПроцедуры // ПриВыбореСчета()

//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует строку, содержащую итоговые суммы колонок табличной части.
//
Функция ИтоговаяСтрока()
	
	НДС20=0;
	НДС10=0;
	СуммаВсего = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (СтавкаНДС.Ставка > 0) и (СтавкаНДС.Ставка < 10.5) Тогда
			НДС10 = НДС10 + НДС;
			СуммаВсего = СуммаВсего + Сумма;

		ИначеЕсли СтавкаНДС.Ставка > 10.5 Тогда
			НДС20 = НДС20 + НДС;
			СуммаВсего = СуммаВсего + Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Стр = "";
	Стр = ?(СуммаВсего=0, Стр, "Всего продаж: " + СокрЛ(ФорматС(СуммаВсего)));
	
	Если НДС20 = 0 Тогда
	Иначе	
		Стр = ?(Стр = "", Стр, Стр + ", ");
		Стр = Стр + "НДС 18%: " + СокрЛ(ФорматС(НДС20));
	КонецЕсли;		
	
	Если НДС10 = 0 Тогда
	Иначе
		Стр = ?(Стр = "", Стр, Стр + ", ");
		Стр = Стр + "НДС 10%: " + СокрЛ(ФорматС(НДС10));
	КонецЕсли;
	
	Возврат Стр;
			
КонецФункции // ИтоговаяСтрока()  

//*****************************************************************************
Процедура ДопЛист(Режим = 0)
	Если ЗаписьДопЛистаПР = 1 Тогда
		Форма.ДатаДопЛистаПР.Доступность(1);
		Если Режим = 1 Тогда
			ДатаДопЛистаПР = ?(ДокументОснование.Выбран() = 1, ДокументОснование.ДатаДок, "");
		КонецЕсли;		
	Иначе
		Форма.ДатаДопЛистаПР.Доступность(0);
		Если Режим = 1 Тогда
			ДатаДопЛистаПР = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
// Заполнить(ДокОсн, ПроверятьПодчиненныеЗаписи)
//
// Параметры:
//  ДокОсн                     - Документ. Счет-фактура выданный.
//  ПроверятьПодчиненныеЗаписи - Число. 0 - не проверять, 1 - проверять.
//
// Описание:
//  Заполняет реквизиты документа на основании выбранного счета-фактруры.
//
Функция Заполнить(ДокОсн, ПроверятьПодчиненныеЗаписи=1)
	
	ДокументОснование = ДокОсн;
	Контрагент = ДокОсн.Контрагент;
	Договор = ДокОсн.Договор;
	НДСпоСтавкеНольПроцентов = ДокОсн.НДСпоСтавкеНольПроцентов;
	ДатаНомерСчетаФактуры = Формат(ДокОсн.ДатаДок, "Д") +
		                   " №" + глПреобразоватьНомерДок(ДокОсн.НомерДок);
	Если ДокОсн.Вид() = "СчетФактураПолученный" Тогда
		Аванс = 1;
		ДокОснАванс = 1;
		СуммаНДСопределяетсяРасчетнымМетодом = 1;
		
		СтавкиНДС = СоздатьОбъект("Справочник.СтавкиНДС");
		СтавкиНДС.ВыбратьЭлементы();
		Пока СтавкиНДС.ПолучитьЭлемент() = 1 Цикл
			Если СтавкиНДС.Ставка = 18 Тогда
				Ставка20 = СтавкиНДС.ТекущийЭлемент();
			ИначеЕсли СтавкиНДС.Ставка = 10 Тогда
				Ставка10 = СтавкиНДС.ТекущийЭлемент();
			ИначеЕсли СтавкиНДС.Ставка = 0 Тогда
				СтавкаБезНДС = СтавкиНДС.ТекущийЭлемент();
			КонецЕсли;
		КонецЦикла;
		
		УдалитьСтроки();
		Таб = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(Таб);
				
		Если ДокОсн.НДС20 <> 0 Тогда
			Таб.НоваяСтрока();
			Таб.СтавкаНДС = Ставка20;
			Таб.Сумма = ДокОсн.СуммаБезНДС20 + ДокОсн.НДС20;
			Таб.НДС = ДокОсн.НДС20;
			Таб.Всего = ДокОсн.СуммаБезНДС20 + ДокОсн.НДС20;
		КонецЕсли; 
		
		Если ДокОсн.НДС10 <> 0 Тогда
			Таб.НоваяСтрока();
			Таб.СтавкаНДС = Ставка10;
			Таб.Сумма = ДокОсн.СуммаБезНДС10 + ДокОсн.НДС10;
			Таб.НДС = ДокОсн.НДС10;
			Таб.Всего = ДокОсн.СуммаБезНДС10 + ДокОсн.НДС10;
		КонецЕсли;
		          
		Если ДокОсн.СуммаСовсемБезНДС <> 0 Тогда
			Таб.НоваяСтрока();
			Таб.СтавкаНДС = СтавкаБезНДС;
			Таб.Сумма = ДокОсн.СуммаСовсемБезНДС;
			Таб.НДС = 0;
			Таб.Всего = ДокОсн.СуммаСовсемБезНДС;
		КонецЕсли;

	Иначе
		Аванс = ДокОсн.Аванс;
		ДокОснАванс = ДокОсн.Аванс;
		СуммаНДСопределяетсяРасчетнымМетодом = ДокОсн.СуммаНДСопределяетсяРасчетнымМетодом;
		
		УдалитьСтроки();
		Таб = СоздатьОбъект("ТаблицаЗначений");
		ДокОсн.ВыгрузитьТабличнуюЧасть(Таб);
		НомСтроки = 1;
		Пока НомСтроки <= Таб.КоличествоСтрок() Цикл
			Таб.ПолучитьСтрокуПоНомеру(НомСтроки);
			Если ТипЗначенияСтр(Таб.Товар) = "Справочник" Тогда
				Если Таб.Товар.Вид() = "Номенклатура" Тогда
					Если Таб.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
						Таб.УдалитьСтроку();
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			НомСтроки = НомСтроки + 1;
		КонецЦикла;
	КонецЕсли;
	

	КурсПересчета = 1;
	Кратность = 1;
	Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		Если (ДокОснАванс = 1)
		или (ДокОсн.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
		    Курс = ДокОсн.Курс;
			Кратн = Договор.ВалютаДоговора.Кратность.Получить(ДокОсн.ДатаДок);
		Иначе
			Курс = Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
			Кратн = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
		КонецЕсли;
		
		Если (Договор.ОплатаДоговора = 1) и (ДокОснАванс = 0) и (ДокОсн.ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
			КурсПересчета = Курс;
			Кратность = ?(Кратн=0, 1, Кратн);
			Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
				Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Таб.Свернуть("СтавкаНДС", "Сумма,НДС,Всего,АкцизСумма");
	Таб.ВыбратьСтроки();
	Пока Таб.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		Сумма = Таб.Сумма*КурсПересчета/Кратность;
		Если НДСпоСтавкеНольПроцентов = 0 Тогда
		    НДС = Таб.НДС*КурсПересчета/Кратность;
			СтавкаНДС = Таб.СтавкаНДС;
		Иначе
			СтавкаНДС = Таб.СтавкаНДС;
		КонецЕсли;
		Всего = Таб.Всего*КурсПересчета/Кратность;
		АкцизСумма = Таб.АкцизСумма*КурсПересчета/Кратность;
	КонецЦикла;

	Если (ДокОснАванс = 1) И (ДокОсн.Вид() <> "СчетФактураПолученный") Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Всего = - Всего;
			Сумма = - Сумма;
			НДС = - НДС;
			АкцизСумма = 0;
		КонецЦикла;
		ДатаОплаты = ?(СокрЛП(ДатаОплаты) = "", Формат(ДокОсн.ДатаДок, "Д"), ДатаОплаты);
	КонецЕсли;
	
	Если ПроверятьПодчиненныеЗаписи = 1 Тогда
		Таб.УдалитьСтроки();
		ВыгрузитьТабличнуюЧасть(Таб);
		Док = СоздатьОбъект("Документ");
		Если Док.ВыбратьПодчиненныеДокументы(, РабочаяДата(), ДокОсн) = 1 Тогда
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если (Док.ПометкаУдаления() = 0) и (Док.Вид() = "ЗаписьКнигиПродаж") и
					 (Док.ТекущийДокумент() <> ТекущийДокумент()) Тогда
					Если НДСпоСтавкеНольПроцентов = 0 Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку() = 1 Цикл
							Таб.НоваяСтрока();
							Таб.Сумма = -Док.Сумма;
							Таб.СтавкаНДС = Док.СтавкаНДС;
							Таб.НДС = -Док.НДС;
							Таб.Всего = -Док.Всего;
							Таб.АкцизСумма = -Док.АкцизСумма;
						КонецЦикла;
					КонецЕсли;
				    Сообщить("По данному счету-фактуре уже существует "+
						глПредставлениеДокумента(Док.ТекущийДокумент())+
						" на сумму "+Док.Итог("Всего"));
				КонецЕсли;
			КонецЦикла;
			Таб.Свернуть("СтавкаНДС", "Сумма,НДС,Всего,АкцизСумма");
			УдалитьСтроки();
			Таб.ВыбратьСтроки();
			Пока Таб.ПолучитьСтроку() = 1 Цикл
			    НоваяСтрока();
				Сумма = Таб.Сумма;
				СтавкаНДС = Таб.СтавкаНДС;
				НДС = Таб.НДС;
				Всего = Таб.Всего;
				АкцизСумма = Таб.АкцизСумма;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // Заполнить()

//*****************************************************************************
// ЗаполнитьНаОсновании(ДокОсн)
//
// Параметры:
//  ДокОсн - Документ. Документ-основание.
//
// Возвращаемое значение:
//  Число  - 1 - реквизиты заполнены, 0 - не заполнены.
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаЗаполнить".
//
// Описание:
//  Устанавливает значения реквизитов документа в зависимости от значений
// реквизитов документа основания.
//
Функция ЗаполнитьНаОсновании(ДокОсн="")
	
	Если ДокОсн = "" Тогда
	    ДокОсн = ДокументОснование;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокОсн) = 1 Тогда
	    Предупреждение("Выберите документ-основание!");
		Возврат 0;
	КонецЕсли; 
	
	Если ДокОсн.Вид() = "СчетФактураПолученный" Тогда
		Если ДокОсн.ВидОперации <> Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс Тогда
			Предупреждение("Выбранный документ не является основанием
							|для восстановления НДС с аванса!");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Если Вопрос("Запись книги продаж будет заполнена на основании
				|выбранного документа. Продолжить?", "Да+Нет" ) = "Да" Тогда
	    Если Заполнить(ДокОсн) = 1 Тогда
	        ПриВыбореОснования(ДокОсн);
			УправлениеКурсом(1);
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции // ЗаполнитьНаОсновании()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст, Скопирован);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	
	Если Скопирован = 0 Тогда
	    ФормироватьПроводки = 1;
	КонецЕсли;
	
КонецПроцедуры // ВводНового()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокОсн)
	
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если ДокОсн.Вид() = "ПродажаВРозницу" Тогда
		Сч90_3 = СчетПоКоду("90.3");
		ТаблицаОтгрузки = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаОтгрузки.НоваяКолонка("ВидНоменклатуры");
		ТаблицаОтгрузки.НоваяКолонка("СтавкаНДС");
		ТаблицаОтгрузки.НоваяКолонка("Сумма");
		ТаблицаОтгрузки.НоваяКолонка("НДС");
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
		    Если ДокОсн.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				Продолжить;
			КонецЕсли;
			ТаблицаОтгрузки.НоваяСтрока();
			ТаблицаОтгрузки.Сумма = ДокОсн.Сумма;
			Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНП = 1 Тогда
			    ТаблицаОтгрузки.Сумма = ТаблицаОтгрузки.Сумма - ДокОсн.НП;
			КонецЕсли;
			Если ДокОсн.ВариантРасчетаНалогов.СуммаВключаетНДС = 1 Тогда
			    ТаблицаОтгрузки.Сумма = ТаблицаОтгрузки.Сумма - ДокОсн.НДС;
			КонецЕсли;
			ТаблицаОтгрузки.ВидНоменклатуры = ДокОсн.Товар.ВидНоменклатуры;
			ТаблицаОтгрузки.СтавкаНДС = глСтавкаНалога(ДокОсн, "НДС");
			ТаблицаОтгрузки.НДС = ДокОсн.НДС;
		КонецЦикла;
		ТаблицаОтгрузки.Свернуть("ВидНоменклатуры, СтавкаНДС", "Сумма, НДС");
		ТаблицаОтгрузки.ВыбратьСтроки();
		Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
		    НоваяСтрока();
			Счет = Сч90_3;
			ПриВыбореСчета();
			Субконто1 = ТаблицаОтгрузки.ВидНоменклатуры;
			Субконто2 = ТаблицаОтгрузки.СтавкаНДС;
			Сумма = ТаблицаОтгрузки.Сумма;
			СтавкаНДС = ТаблицаОтгрузки.СтавкаНДС;
			НДС = ТаблицаОтгрузки.НДС;
			Всего = Сумма + НДС;
		КонецЦикла;
	ИначеЕсли ДокОсн.Вид() = "ИнвентаризацияТМЦ" Тогда
		Если ДокОсн.ВидТМЦ <> 3 Тогда
		    Предупреждение("Запись книги продаж может быть введена только на основании инвентаризации розничной торговой точки",60);
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		Сч90_3 = СчетПоКоду("90.3");
		ТаблицаОтгрузки = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаОтгрузки.НоваяКолонка("ВидНоменклатуры");
		ТаблицаОтгрузки.НоваяКолонка("СтавкаНДС");
		ТаблицаОтгрузки.НоваяКолонка("Сумма");
		ТаблицаОтгрузки.НоваяКолонка("НДС");
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
		    Если ДокОсн.МПЗ.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				Продолжить;
			КонецЕсли;
			ТаблицаОтгрузки.НоваяСтрока();
			ТаблицаОтгрузки.Сумма = ДокОсн.СуммаПродажи  - ДокОсн.НДС - ДокОсн.НП;
		    ТаблицаОтгрузки.Сумма = ТаблицаОтгрузки.Сумма - ДокОсн.НП;
			ТаблицаОтгрузки.ВидНоменклатуры = ДокОсн.МПЗ.ВидНоменклатуры;
			ТаблицаОтгрузки.СтавкаНДС = глСтавкаНалога(ДокОсн, "НДС");
			ТаблицаОтгрузки.НДС = ДокОсн.НДС;
		КонецЦикла;
		ТаблицаОтгрузки.Свернуть("ВидНоменклатуры, СтавкаНДС", "Сумма, НДС");
		ТаблицаОтгрузки.ВыбратьСтроки();
		Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
		    НоваяСтрока();
			Счет = Сч90_3;
			ПриВыбореСчета();
			Субконто1 = ТаблицаОтгрузки.ВидНоменклатуры;
			Субконто2 = ТаблицаОтгрузки.СтавкаНДС;
			Сумма = ТаблицаОтгрузки.Сумма;
			СтавкаНДС = ТаблицаОтгрузки.СтавкаНДС;
			НДС = ТаблицаОтгрузки.НДС;
			Всего = Сумма + НДС;
		КонецЦикла;	
	ИначеЕсли ДокОсн.Вид() = "СуммовыеРазницы" Тогда
		// При политике "по отгрузке" ЗКП может статься нужно ввести, если 
		// при оплате возникла суммовая разница. То есть это - корректирующая запись.
		ТаблицаДокументовОтгрузки = СоздатьОбъект("ТаблицаЗначений");
		ДокОсн.ВыгрузитьТабличнуюЧасть(ТаблицаДокументовОтгрузки);
		Если ПустоеЗначение(глТекущаяСтрока) = 1 Тогда
			НомСтроки = 0;
			Если ТаблицаДокументовОтгрузки.КоличествоСтрок() = 1 Тогда
				ТаблицаДокументовОтгрузки.ПолучитьСтрокуПоНомеру(1);
				НомСтроки = 1;
				
			ИначеЕсли ТаблицаДокументовОтгрузки.КоличествоСтрок() = 0 Тогда
				Предупреждение("Выбранный документ не содержит ни одной суммовой разницы");
				СтатусВозврата(0);
				Возврат;
				
			ИначеЕсли ТаблицаДокументовОтгрузки.ВыбратьСтроку(НомСтроки, "Укажите документ отгрузки") = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			Если НомСтроки = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		Иначе
            НомСтроки = глТекущаяСтрока;
		КонецЕсли;
		
		ТаблицаДокументовОтгрузки.ПолучитьСтрокуПоНомеру(НомСтроки);
		
		// У ДокОсн выбираем подчиненные документы и ищем вид "СчетФактура".
		КоличествоСчетовФактур = 0;
		СФНайденный = "";
		СчетФактура = СоздатьОбъект("Документ");
		СчетФактура.ВыбратьПодчиненныеДокументы(,,ТаблицаДокументовОтгрузки.Документ);
		Пока СчетФактура.ПолучитьДокумент() = 1 Цикл
			Если (СчетФактура.ПометкаУдаления() = 0) и (СчетФактура.Вид() = "СчетФактура") Тогда
				СФНайденный = СчетФактура.ТекущийДокумент();
			    КоличествоСчетовФактур = КоличествоСчетовФактур + 1;
			КонецЕсли;
		КонецЦикла;
		
		Если КоличествоСчетовФактур = 0 Тогда
		    Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаДокументовОтгрузки.Документ) + " не выписан счет-фактура");
			СтатусВозврата(0);
			Возврат;

		ИначеЕсли КоличествоСчетовФактур > 1 Тогда
			Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаДокументовОтгрузки.Документ) + " обнаружено более 
							|одного счет-фактуры");
			СтатусВозврата(0);
			Возврат;
			
		Иначе
			Курс = ТаблицаДокументовОтгрузки.Курс;	
			Кратность = ТаблицаДокументовОтгрузки.Документ.Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			ДокументОснование = СФНайденный;
			Контрагент = СФНайденный.Контрагент;
			Договор = СФНайденный.Договор;
			ДатаНомерСчетаФактуры = Формат(ДокОсн.ДатаДок, "Д")+" №"+глПреобразоватьНомерДок(ДокОсн.НомерДок);
			
			СуммаОтгрузкиВсего = ТаблицаДокументовОтгрузки.Документ.Итог("Всего")*Курс/Кратность;
			Если СуммаОтгрузкиВсего = 0 Тогда
			Иначе
				КоэффициентЧастичнойОплаты = ТаблицаДокументовОтгрузки.Сумма/СуммаОтгрузкиВсего;
				КурсОтгр = СФНайденный.Курс;
				КратностьОтгр = СФНайденный.Договор.ВалютаДоговора.Кратность.Получить(СФНайденный.ДатаДок);
				КратностьОтгр = ?(КратностьОтгр = 0, 1, КратностьОтгр);
				
				ТаблицаСчетаФактуры = СоздатьОбъект("ТаблицаЗначений");
				СФНайденный.ВыгрузитьТабличнуюЧасть(ТаблицаСчетаФактуры);
				ТаблицаСчетаФактуры.Свернуть("СтавкаНДС", "Сумма,НДС,Всего");
				ТаблицаСчетаФактуры.ВыбратьСтроки();
				Пока ТаблицаСчетаФактуры.ПолучитьСтроку() = 1 Цикл
					НоваяСтрока();
					Всего = 
						КоэффициентЧастичнойОплаты *
						(Курс/Кратность - КурсОтгр/КратностьОтгр)*
						ТаблицаСчетаФактуры.Всего;
					НДС   = 
						КоэффициентЧастичнойОплаты*
						(Курс/Кратность - КурсОтгр/КратностьОтгр)*
						ТаблицаСчетаФактуры.НДС;
					Сумма = 
						КоэффициентЧастичнойОплаты*
						(Курс/Кратность - КурсОтгр/КратностьОтгр)*
						ТаблицаСчетаФактуры.Сумма;
					СтавкаНДС = ТаблицаСчетаФактуры.СтавкаНДС;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ДокОсн.Вид() = "Выписка" Тогда // ЗКП на основании оплаты
		ТаблицаОплаты = СоздатьОбъект("ТаблицаЗначений");
		ДокОсн.ВыгрузитьТабличнуюЧасть(ТаблицаОплаты);
		
		ТаблицаВыбора = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаВыбора.НоваяКолонка("Контрагент",,,,, 22);
		ТаблицаВыбора.НоваяКолонка("Договор",,,,, 20);
		ТаблицаВыбора.НоваяКолонка("Сумма",,,,, 15);
		ТаблицаВыбора.НоваяКолонка("Строка",,,,, 6);
		ТаблицаВыбора.НоваяКолонка("Тип",,,,"Тип записи", 21);
		ТаблицаВыбора.УстановитьПараметрыКолонки("Сумма",,,,,,,2);
		ТаблицаВыбора.УстановитьПараметрыКолонки("Строка",,,,,,,2);
		Если Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате Тогда
		    ТаблицаВыбора.ВидимостьКолонки("Тип",0,);
			ТаблицаВыбора.ВидимостьКолонки("Строка",0,);
		КонецЕсли;
		Сч62_2 = СчетПоКоду("62.2");
		Сч62_7 = СчетПоКоду("62.7");
		Сч62_22 = СчетПоКоду("62.22");
		
		Если ПустоеЗначение(глТекущаяСтрока) = 1 Тогда
			ТаблицаОплаты.ВыбратьСтроки();
			Пока ТаблицаОплаты.ПолучитьСтроку() = 1 Цикл
				Если ТаблицаОплаты.Приход = 0 Тогда
				    Продолжить;
				КонецЕсли;
				
				Если (ТаблицаОплаты.КоррСчет = Сч62_2) или
					 (ТаблицаОплаты.КоррСчет = Сч62_7) или
					 (ТаблицаОплаты.КоррСчет = Сч62_22) Тогда
					 	
				ИначеЕсли (ТипЗначенияСтр(ТаблицаОплаты.Субконто1) = "Справочник") и
					 	  (ТипЗначенияСтр(ТаблицаОплаты.Субконто2) = "Справочник") Тогда
					 	  	
					Если (ТаблицаОплаты.Субконто1.Вид() = "Контрагенты") и 
						 (ТаблицаОплаты.Субконто2.Вид() = "Договоры") Тогда
						ТаблицаВыбора.НоваяСтрока();
						ТаблицаВыбора.Строка = ТаблицаОплаты.НомерСтроки;
						ТаблицаВыбора.Контрагент = ТаблицаОплаты.Субконто1;
						ТаблицаВыбора.Договор = ТаблицаОплаты.Субконто2;
						ТаблицаВыбора.Сумма = СокрЛП(Формат(ТаблицаОплаты.Приход,"Ч15.2.,"));
						ТаблицаВыбора.Тип = "Получение оплаты";
						Если (ПустоеЗначение(ТаблицаОплаты.ДокументПоставки)=0)и
							(ТаблицаОплаты.КурсОплаты>0)и
							(Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОтгрузке) Тогда
								Если (ТаблицаОплаты.ДокументПоставки.Курс = ТаблицаОплаты.КурсОплаты) Тогда
								    Продолжить;
								КонецЕсли;
							ТаблицаВыбора.НоваяСтрока();
							ТаблицаВыбора.Строка = ТаблицаОплаты.НомерСтроки;
							ТаблицаВыбора.Контрагент = ТаблицаОплаты.Субконто1;
							ТаблицаВыбора.Договор = ТаблицаОплаты.Субконто2;
							ТаблицаВыбора.Тип = "Суммовая разница";
							ТаблицаВыбора.Сумма = "(расчет)";
						КонецЕсли;
				    КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		
			НомСтроки = 0;
			Если ТаблицаВыбора.КоличествоСтрок() = 0 Тогда
				Предупреждение("Указанная выписка не содержит поступлений от покупателей");
				СтатусВозврата(0);
				Возврат;
				
			ИначеЕсли ТаблицаВыбора.КоличествоСтрок() = 1 Тогда
				НомСтроки = 1;
				
			ИначеЕсли ТаблицаВыбора.ВыбратьСтроку(НомСтроки, "Укажите оплату") = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			Если НомСтроки = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		
		Иначе
			НомСтроки = 1;              
			ТаблицаОплаты.ПолучитьСтрокуПоНомеру(глТекущаяСтрока);
			ТаблицаВыбора.НоваяСтрока();
			ТаблицаВыбора.Строка = ТаблицаОплаты.НомерСтроки;
			ТаблицаВыбора.Контрагент = ТаблицаОплаты.Субконто1;
			ТаблицаВыбора.Договор = ТаблицаОплаты.Субконто2;
			ТаблицаВыбора.Сумма = Формат(ТаблицаОплаты.Приход,"Ч15.2.,");
			ТаблицаВыбора.Тип = "Получение оплаты";
			Если (ПустоеЗначение(ТаблицаОплаты.ДокументПоставки)=0) Тогда
				Если (ТаблицаОплаты.КурсОплаты>0)и
				(ТаблицаОплаты.ДокументПоставки.Курс<>ТаблицаОплаты.КурсОплаты)и
				(Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОтгрузке) Тогда
					ТаблицаВыбора.НоваяСтрока();
					ТаблицаВыбора.Строка = ТаблицаОплаты.НомерСтроки;
					ТаблицаВыбора.Контрагент = ТаблицаОплаты.Субконто1;
					ТаблицаВыбора.Договор = ТаблицаОплаты.Субконто2;
					ТаблицаВыбора.Тип = "Суммовая разница";
					ТаблицаВыбора.Сумма = "(расчет)";
				КонецЕсли;
			КонецЕсли;
			Если ТаблицаВыбора.КоличествоСтрок() = 1 Тогда
				НомСтроки = 1;
			ИначеЕсли ТаблицаВыбора.ВыбратьСтроку(НомСтроки, "Укажите оплату") = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			Если НомСтроки = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ТаблицаВыбора.ПолучитьСтрокуПоНомеру(НомСтроки);
		ТаблицаВыбора.Сумма = Число(СтрЗаменить(ТаблицаВыбора.Сумма,",",""));
		
		Если Число(ТаблицаВыбора.Сумма) = 0 Тогда
			ТаблицаОплаты.ПолучитьСтрокуПоНомеру(ТаблицаВыбора.Строка);
			// У ДокОсн выбираем подчиненные документы и ищем вид "СчетФактура".
			КоличествоСчетовФактур = 0;
			СФНайденный = "";
			СчетФактура = СоздатьОбъект("Документ");
			СчетФактура.ВыбратьПодчиненныеДокументы(,,ТаблицаОплаты.ДокументПоставки);
			Пока СчетФактура.ПолучитьДокумент() = 1 Цикл
				Если (СчетФактура.ПометкаУдаления() = 0) и (СчетФактура.Вид() = "СчетФактура") Тогда
					СФНайденный = СчетФактура.ТекущийДокумент();
					КоличествоСчетовФактур = КоличествоСчетовФактур + 1;
				КонецЕсли;
			КонецЦикла;
			
			Если КоличествоСчетовФактур = 0 Тогда
				Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаОплаты.ДокументПоставки) + " не выписан счет-фактура");
				СтатусВозврата(0);
				Возврат;
				
			ИначеЕсли КоличествоСчетовФактур > 1 Тогда
				Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаОплаты.ДокументПоставки) + " обнаружено более 
				|одного счет-фактуры");
				СтатусВозврата(0);
				Возврат;
				
			Иначе
				Курс = ТаблицаОплаты.КурсОплаты;	
				Кратность = ТаблицаОплаты.ДокументПоставки.Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
				Кратность = ?(Кратность = 0, 1, Кратность);
				ДокументОснование = СФНайденный;
				Контрагент = СФНайденный.Контрагент;
				Договор = СФНайденный.Договор;
				ДатаНомерСчетаФактуры = Формат(СФНайденный.ДатаДок, "Д")+" №"+глПреобразоватьНомерДок(СФНайденный.НомерДок);
				
				СуммаОтгрузкиВсего = ТаблицаОплаты.ДокументПоставки.Итог("Всего")*Курс/Кратность;
				Если СуммаОтгрузкиВсего = 0 Тогда
				Иначе
					КоэффициентЧастичнойОплаты = МИН(ТаблицаОплаты.Приход,СуммаОтгрузкиВсего)/СуммаОтгрузкиВсего;
					КурсОтгр = СФНайденный.Курс;
					КратностьОтгр = СФНайденный.Договор.ВалютаДоговора.Кратность.Получить(СФНайденный.ДатаДок);
					КратностьОтгр = ?(КратностьОтгр = 0, 1, КратностьОтгр);
					
					ТаблицаСчетаФактуры = СоздатьОбъект("ТаблицаЗначений");
					СФНайденный.ВыгрузитьТабличнуюЧасть(ТаблицаСчетаФактуры);
					ТаблицаСчетаФактуры.Свернуть("СтавкаНДС, Счет, Субконто1, Субконто2, Субконто3", "Сумма,НДС,Всего");
					ТаблицаСчетаФактуры.ВыбратьСтроки();
					Пока ТаблицаСчетаФактуры.ПолучитьСтроку() = 1 Цикл
						НоваяСтрока();
						Всего = 
						КоэффициентЧастичнойОплаты *
						(Курс/Кратность - КурсОтгр/КратностьОтгр)*
						ТаблицаСчетаФактуры.Всего;
						НДС   = 
						КоэффициентЧастичнойОплаты*
						(Курс/Кратность - КурсОтгр/КратностьОтгр)*
						ТаблицаСчетаФактуры.НДС;
						Сумма = 
						КоэффициентЧастичнойОплаты*
						(Курс/Кратность - КурсОтгр/КратностьОтгр)*
						ТаблицаСчетаФактуры.Сумма;
						СтавкаНДС = ТаблицаСчетаФактуры.СтавкаНДС;
						Счет = ТаблицаСчетаФактуры.Счет;
						ПриВыбореСчета();
						Субконто1 = ТаблицаСчетаФактуры.Субконто1;
						Субконто2 = ТаблицаСчетаФактуры.Субконто2;
						Субконто3 = ТаблицаСчетаФактуры.Субконто3;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ТаблицаОплаты.ПолучитьСтрокуПоНомеру(ТаблицаВыбора.Строка);
			Если (ПустоеЗначение(ТаблицаОплаты.ДокументПоставки)=0) Тогда
				// У ДокОсн выбираем подчиненные документы и ищем вид "СчетФактура".
				КоличествоСчетовФактур = 0;
				СФНайденный = "";
				СчетФактура = СоздатьОбъект("Документ");
				СчетФактура.ВыбратьПодчиненныеДокументы(,,ТаблицаОплаты.ДокументПоставки);
				Пока СчетФактура.ПолучитьДокумент() = 1 Цикл
					Если (СчетФактура.ПометкаУдаления() = 0) и (СчетФактура.Вид() = "СчетФактура") Тогда
						СФНайденный = СчетФактура.ТекущийДокумент();
						КоличествоСчетовФактур = КоличествоСчетовФактур + 1;
					КонецЕсли;
				КонецЦикла;
				Если КоличествоСчетовФактур = 0 Тогда
					Предупреждение("По документу " + глПредставлениеДокумента(ТаблицаОплаты.ДокументПоставки) + " не выписан счет-фактура");
					СтатусВозврата(0);
					Возврат;
					
				ИначеЕсли КоличествоСчетовФактур > 1 Тогда
					КонтекстЖурнала = СоздатьОбъект("СписокЗначений");
					КонтекстЖурнала.Установить("ДатаБИ", ДатаДок);
					КонтекстЖурнала.Установить("Контрагент", ТаблицаВыбора.Контрагент);
					ОткрытьФормуМодально("Журнал.СчетаФактурыВыданные", КонтекстЖурнала);
					Док = ?(ТипЗначенияСтр(КонтекстЖурнала) = "Документ", КонтекстЖурнала, "");
				Иначе
					Док = СФНайденный;
				КонецЕсли;
			Иначе
				КонтекстЖурнала = СоздатьОбъект("СписокЗначений");
				КонтекстЖурнала.Установить("ДатаБИ", ДатаДок);
				КонтекстЖурнала.Установить("Контрагент", ТаблицаВыбора.Контрагент);
				ОткрытьФормуМодально("Журнал.СчетаФактурыВыданные", КонтекстЖурнала);
				Док = ?(ТипЗначенияСтр(КонтекстЖурнала) = "Документ", КонтекстЖурнала, "");
			КонецЕсли;
			
			Если ТипЗначенияСтр(Док) = "Документ" Тогда
				Если Заполнить(Док, 0) = 0 Тогда    
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
				
			Иначе
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
			Если (Док.ДокументОснование.Выбран() = 1) и (Док.ДокументОснование.Вид() <> "Выписка") Тогда
				
				Если Метаданные.Документ(Док.ДокументОснование.Вид()).РеквизитТабличнойЧасти("Всего").Выбран() = 1 Тогда
					СуммаПоДокументу = Док.ДокументОснование.Итог("Всего");
					
				ИначеЕсли (Док.ДокументОснование.Вид() = "ПередачаОС") 
				или (Док.ДокументОснование.Вид() = "ПередачаНМА") Тогда
					СуммаПоДокументу = Док.ДокументОснование.Стоимость; 
					
				Иначе
					СуммаПоДокументу = 0;
				КонецЕсли;
				
				Если ПустоеЗначение(Док.ДокументОснование.Договор.ВалютаДоговора) = 1 Тогда
					СуммаОтгрузкиВсего = СуммаПоДокументу;
					
				ИначеЕсли Док.ДокументОснование.Договор.ОплатаДоговора = 2 Тогда
					СуммаОтгрузкиВсего = СуммаПоДокументу;
					
				Иначе
					Кратность = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
					Кратность = ?(Кратность = 0, 1, Кратность);
					СуммаОтгрузкиВсего = СуммаПоДокументу*Курс/Кратность;
				КонецЕсли;
			Иначе
				Предупреждение("В счете-фактуре не обнаружена ссылка на документ отгрузки");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
			Если СуммаОтгрузкиВсего = 0 Тогда
				Предупреждение("В документе отгрузки не указана сумма отгрузки");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
			Если ТаблицаВыбора.Сумма < СуммаОтгрузкиВсего Тогда
				КоэффициентЧастичнойОплаты = ТаблицаВыбора.Сумма/СуммаОтгрузкиВсего;
				
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 Цикл
					Сумма = КоэффициентЧастичнойОплаты*Сумма;
					НДС = КоэффициентЧастичнойОплаты*НДС;
					Всего = КоэффициентЧастичнойОплаты*Всего;
					АкцизСумма = КоэффициентЧастичнойОплаты*АкцизСумма;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ДатаОплаты = Формат(ДокОсн.ДатаДок, "Д");
				
	ИначеЕсли Заполнить(ДокОсн) = 0 Тогда // ввод на основании счета-фактуры
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Комментарий = "Введен на основании: "+глПредставлениеДокумента(ДокОсн);
	Если (Договор.АвтоОбработкаНДС=1)и
		 (Константа.МетодОпределенияВыручки.Получить(ДатаДок)=Перечисление.МетодыОпределенияВыручки.ПоОплате) Тогда
	    Предупреждение("По договору """+Договор+""" Записи книги продаж формируются автоматически");
		Договор = "";
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если (ДокОсн.Вид() = "СчетФактура") и (ДокОсн.ДатаДок >= '01.01.2006') и (Аванс = 0) и (НДСпоСтавкеНольПроцентов = 0) Тогда
	    ФормироватьПроводки = 0;
	    
	Иначе
		ФормироватьПроводки = 1;
	КонецЕсли;
	
КонецПроцедуры // ВводНаОсновании()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаЗаполнить.Доступность(0); 
		Форма.кнОчиститьОснование.Доступность(0);
	КонецЕсли;
	Форма.ИспользоватьСлой("Основной, Договор", 2);
	
	НачальнаяДатаДокумента = ДатаДок;
	ПриВыбореОснования(ДокументОснование);
	
	Если ВерсияОбъекта >= "7.70.421" Тогда
		Форма.СтавкаНП.Видимость(0);
		Форма.НП.Видимость(0);
		Форма.Комитент.Видимость(0);
		Форма.ТипТовара.Видимость(0);

	Иначе
		Форма.ИспользоватьЗакладки(1);
		Форма.Закладки.ДобавитьЗначение("Основной, Договор", "Запись книги продаж");
		Форма.Закладки.ДобавитьЗначение("Основной, Редакция_4_0", "Дополнительно");
	КонецЕсли;
	
	Форма.Сумма.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.СтавкаНДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НДС.ВыполнятьФормулуТолькоПриИзменении(1);
	
	УправлениеКурсом();
	ДопЛист();
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если (ЭлементДиалога = "СтавкаНДС") и (СуммаНДСопределяетсяРасчетнымМетодом = 1) Тогда
		Флаг = 0;
		ПредыдущееЗначение = СтавкаНДС;
		Значение = "";
		Меню = СоздатьОбъект("СписокЗначений");
		Спр = СоздатьОбъект("Справочник.СтавкиНДС");
		Спр.ПорядокКодов();
		Спр.ВыбратьЭлементы();
		Пока Спр.ПолучитьЭлемент() = 1 Цикл
			Если Цел(Спр.Ставка) = Спр.Ставка Тогда
			    Меню.ДобавитьЗначение(Спр.ТекущийЭлемент(), СокрП(Спр.Наименование));
			КонецЕсли;
		КонецЦикла;
		Если Меню.ВыбратьЗначение(Значение,,,, 2) = 1 Тогда
			Если Значение <> ПредыдущееЗначение Тогда
			    СтавкаНДС = Значение;
				Пересчет("СтавкаНДС");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ДокументОснование" Тогда
		
		Флаг = 0;
		КонтекстЖурнала = СоздатьОбъект("СписокЗначений");
		КонтекстЖурнала.Установить("ДатаБИ", ДатаДок);
		Если Контрагент.Выбран() = 1 Тогда
	    	КонтекстЖурнала.Установить("Контрагент", Контрагент);
		КонецЕсли;
		
		Если ДатаДок >= '01.01.2009' Тогда
			Если ПустоеЗначение(ДокументОснование) = 1 Тогда
				Значение = "";
				Меню = СоздатьОбъект("СписокЗначений");
				Меню.ДобавитьЗначение("СчетаФактурыВыданные", Метаданные.Журнал("СчетаФактурыВыданные").Представление());
				Меню.ДобавитьЗначение("СчетаФактурыПолученные", Метаданные.Журнал("СчетаФактурыПолученные").Представление());
				Если Меню.ВыбратьЗначение(Значение,,,, 2) = 1 Тогда
					ОткрытьФорму("Журнал." + Значение, КонтекстЖурнала);
				КонецЕсли;
			Иначе
				Если ДокументОснование.Вид() = "СчетФактураПолученный" Тогда
					ОткрытьФорму("Журнал.СчетаФактурыПолученные", КонтекстЖурнала);
				Иначе
					ОткрытьФорму("Журнал.СчетаФактурыВыданные", КонтекстЖурнала);
				КонецЕсли;				
			КонецЕсли;
		Иначе   
			ОткрытьФорму("Журнал.СчетаФактурыВыданные", КонтекстЖурнала);
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ДатаОплаты" Тогда
		ВыбранноеЗначение = ?(ПустоеЗначение(Дата(СокрЛП(ДатаОплаты))) = 1, ДатаДок, Дата(СокрЛП(ДатаОплаты)));
		Если ВвестиЗначение(ВыбранноеЗначение, "Укажите дату оплаты счета-фактуры", "Дата") = 1 Тогда
			ДатаОплаты = ?(ПустоеЗначение(ВыбранноеЗначение)=1, "", Формат(ВыбранноеЗначение, "Д"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗначение, ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ДокументОснование" Тогда
		Флаг = ЗаполнитьНаОсновании(ВыбЗначение);
	КонецЕсли;
                     
КонецПроцедуры // ОбработкаВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриРедактированииНовойСтроки()
	
	СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
	
КонецПроцедуры // ПриРедактированииНовойСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если НомерЗакладки = 1 Тогда
		Форма.ИспользоватьСлой("Основной, Договор", 2);
		
		Форма.Сумма.Видимость(1);
		Форма.АкцизСумма.Видимость(1);
		Форма.СтавкаНДС.Видимость(1);
		Форма.НДС.Видимость(1);
		Форма.Счет.Видимость(1);
		Форма.Субконто1.Видимость(1);
		Форма.Субконто2.Видимость(1);
		Форма.Субконто3.Видимость(1);
		Форма.Всего.Видимость(1);
		
		Форма.СтавкаНП.Видимость(0);
		Форма.НП.Видимость(0);
		Форма.Комитент.Видимость(0);
		Форма.ТипТовара.Видимость(0);
		
		УправлениеКурсом();
		
	ИначеЕсли НомерЗакладки = 2 Тогда
		Форма.ИспользоватьСлой("Основной, Редакция_4_0", 2);
		
		Форма.Сумма.Видимость(0);
		Форма.АкцизСумма.Видимость(0);
		Форма.СтавкаНДС.Видимость(0);
		Форма.НДС.Видимость(0);
		Форма.Счет.Видимость(0);
		Форма.Субконто1.Видимость(0);
		Форма.Субконто2.Видимость(0);
		Форма.Субконто3.Видимость(0);
		Форма.Всего.Видимость(0);
		
		Форма.СтавкаНП.Видимость(1);
		Форма.НП.Видимость(1);
		Форма.Комитент.Видимость(1);
		Форма.ТипТовара.Видимость(1);
	КонецЕсли;
	
КонецПроцедуры // ПриРедактированииНовойСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли (ДокументОснование.Выбран() = 0) и (ВерсияОбъекта < "7.70.421") Тогда
		Предупреждение("Выберите документ-основание");
		СтатусВозврата(0);
		Возврат;
	Иначе
		Если ((ЗаписьДопЛистаПР = 1) и (ПустоеЗначение(ДатаДопЛистаПР) = 1)) Тогда
			Если Вопрос("Не указана дата дополнительного листа.
						|Вернуться к редактированию документа?", "Да+Нет") = "Да" Тогда
				Сообщить("Документ не записан.", "i");					
				СтатусВозврата(0);
				Возврат; 
			Иначе
				СтатусВозврата(0);
				Форма.Закрыть(0);				
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 
	
	ОплатаДоговора = 1;
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ОплатаДоговора = 2 Тогда
		    Кратность = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			ОплатаДоговора = 2;
		КонецЕсли;
	КонецЕсли;
	
	Если ОплатаДоговора = 2 Тогда
	    Операция.СуммаОперации = Итог("Всего")*Курс/Кратность;
		
	Иначе
		Операция.СуммаОперации = Итог("Всего");
	КонецЕсли;
	Операция.Содержание = "Запись книги продаж";
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании"); 
СписокДействий.ДобавитьЗначение("Перейти  в журнал");