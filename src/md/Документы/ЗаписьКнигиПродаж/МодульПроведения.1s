////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем Сумма;
Перем Сч68_2, Сч68_3, Сч76_Н_1, Сч76_Н_2, Сч76_Н_4;
Перем ЦеныВДоговоре;
Перем ОплатаДоговора;
Перем Валюта;
Перем Курс1, Кратность1; // курс документа-основания
Перем Курс2, Кратность2; // курс записи в книге продаж


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//*****************************************************************************
// СуммоваяРазница(СуммаОперации, Колонка, УчетнаяПолитика)
//
// Параметры:
//  СуммаОперации   - Число. Сумма налога.
//  Колонка         - Строка. Наименование колонки табличной части (налога).
//  УчетнаяПолитика - Число. 1 - по отгрузке, 2 - по оплате.
//
// Возвращаемое значение:
//  Сумма налога в рублях.
//
// Описание:
//  Пересчитывает сумму налога в рубли и формирует проводки по суммовым 
// разницам. Суммовая разница распределяется пропорционально суммам налога в 
// строках счета-фактуры.
//
Функция СуммоваяРазница(СуммаОперации, Колонка, УчетнаяПолитика=2)
	
	Если СуммаОперации = 0 Тогда
		Возврат 0;
		
	ИначеЕсли (ЦеныВДоговоре = 1) и (УчетнаяПолитика = 2) Тогда
		Возврат СуммаОперации; // рублевый договор
	КонецЕсли;

	Если ОплатаДоговора = 2 Тогда
		ОперСумма = Окр(СуммаОперации*Курс2/Кратность2, 2, 1);
		СуммоваяРазница = ОперСумма - Окр(СуммаОперации*Курс1/Кратность1, 2, 1);
		
	ИначеЕсли ЦеныВДоговоре = 2 Тогда 
		ОперСумма = СуммаОперации;
		ОперСуммаВал = ОперСумма/(Курс2/Кратность2);
		СуммоваяРазница = ОперСумма - Окр(ОперСуммаВал*(Курс1/Кратность1), 2, 1);
		
	Иначе
		ОперСумма = СуммаОперации;
		СуммоваяРазница = 0;
	КонецЕсли;
	
	Если УчетнаяПолитика = 1 Тогда // по отгрузке
		// Вся сумма НДС распределяется по строкам счета-фактуры
	    СуммоваяРазница = ОперСумма;
	КонецЕсли;

	Если Окр(СуммоваяРазница, Метаданные.ТочностьСуммыПроводки) = 0 Тогда
		Возврат ОперСумма;
	КонецЕсли;
	
	Если Сумма.КоличествоСтрок() <> 0 Тогда
		
		ИтоговаяСумма = 0;
		Сумма.ВыбратьСтроки();
		Пока Сумма.ПолучитьСтроку() = 1 Цикл
			Если (ПустоеЗначение(Сумма.СтавкаНДС) = 0) и (Сумма.СтавкаНДС <> СтавкаНДС) Тогда
				Продолжить;
			КонецЕсли;
			
			ИтоговаяСумма = ИтоговаяСумма + Сумма.ПолучитьЗначение(Сумма.НомерСтроки, Колонка);
		КонецЦикла;
		
		РаспределеннаяСумма = 0;
		Сумма.ВыбратьСтроки();
		Пока Сумма.ПолучитьСтроку() = 1 Цикл
			Если (ПустоеЗначение(Сумма.СтавкаНДС) = 0) и (Сумма.СтавкаНДС <> СтавкаНДС) Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаСтроки = Сумма.ПолучитьЗначение(Сумма.НомерСтроки, Колонка);
			Если СуммаСтроки = 0 Тогда
			    Продолжить;
			КонецЕсли;
			
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.СодержаниеПроводки = "Начислен " + СокрЛП(Лев(Колонка, 5));
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			
			Если Сумма.ВидТовара = "Номенклатура" Тогда
				НомЖур = "ТВ";
			ИначеЕсли Сумма.ВидТовара = "ОсновныеСредства" Тогда
				НомЖур = "ОС";
			ИначеЕсли Сумма.ВидТовара = "НематериальныеАктивы" Тогда
				НомЖур = "НА";
			ИначеЕсли Сумма.ВидТовара = "Материалы" Тогда
				НомЖур = "МТ";
			КонецЕсли;
			
			Операция.НомерЖурнала = НомЖур;
			
			Если (Сумма.Счет = СчетПоКоду("90.3")) и (СокрЛП(Лев(Колонка, 5)) = "акциз") Тогда
				Операция.Дебет.Счет = СчетПоКоду("90.4");
			ИначеЕсли (Сумма.Счет = СчетПоКоду("90.3")) и (Колонка = "НП") Тогда
				Операция.Дебет.Счет = СчетПоКоду("90.6");
			Иначе
				Операция.Дебет.Счет = Сумма.Счет;
			КонецЕсли;
			Операция.Дебет.Субконто(1, Сумма.Субконто1);
			Операция.Дебет.Субконто(2, Сумма.Субконто2);
			Операция.Дебет.Субконто(3, Сумма.Субконто3);
			Если УчетнаяПолитика = 2 Тогда // по оплате
				Если Колонка = "НДС" Тогда
				    Операция.Кредит.Счет = Сч76_Н_1;
					Операция.Кредит.Субконто(2, ДокументОснование);
					
				ИначеЕсли Колонка = "НП" Тогда
					Операция.Кредит.Счет = Сч76_Н_4;
					
				ИначеЕсли СокрЛП(Лев(Колонка, 5)) = "акциз" Тогда
				    Операция.Кредит.Счет = Сч76_Н_2;
					Операция.Кредит.Субконто(2, ДокументОснование);
					
				КонецЕсли;
			    
				Если ВерсияОбъекта >= "7.70.421" Тогда
				    Операция.Кредит.Субконто(1, Контрагент);
				Иначе
					Операция.Кредит.Субконто(1, ?(Сумма.Комитент.Выбран() = 1, Сумма.Комитент, Контрагент));
				КонецЕсли;
				
			ИначеЕсли Колонка = "НДС" Тогда
				Операция.Кредит.Счет = Сч68_2;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
			
			ИначеЕсли СокрЛП(Лев(Колонка, 5)) = "акциз" Тогда
				Операция.Кредит.Счет = Сч68_3;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
			КонецЕсли;
		    
			
			Операция.Сумма = СуммоваяРазница*СуммаСтроки/ИтоговаяСумма;
			РаспределеннаяСумма = РаспределеннаяСумма + Операция.Сумма;
		КонецЦикла;
		
		// Скорректируем сумму последней проводки.
		Если Операция.КоличествоПроводок() <> 0 Тогда
			Если РаспределеннаяСумма = СуммоваяРазница Тогда
			Иначе
				Операция.Сумма = Операция.Сумма + (СуммоваяРазница - РаспределеннаяСумма);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат ОперСумма;
	
КонецФункции // СуммоваяРазница()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()  
	
	Если (ЗаписьДопЛистаПР = 1) и (ПустоеЗначение(ДатаДопЛистаПР) = 1) Тогда
		ТекстСообщения = "Не указана дата записи дополнительного листа книги продаж.";
		глНеПроводить(Контекст, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ФормироватьПроводки = 0 Тогда
		ТекстСообщения = "Документ проведен.";
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		глПриПроведении(Контекст);
		Возврат;
	КонецЕсли;
	
	Сч76_Н_1 = СчетПоКоду("76.Н.1");
	Сч76_Н_2 = СчетПоКоду("76.Н.2");
	Сч76_Н_4 = СчетПоКоду("76.Н.4");
	Сч68_2 = СчетПоКоду("68.2");
	Сч68_3 = СчетПоКоду("68.3");
	Сч76_АВ = СчетПоКоду("76.АВ");
	Сч76_ВА = СчетПоКоду("76.ВА");
	
	ЦеныВДоговоре = 1; // в рублях
	Если Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
			ЦеныВДоговоре = 2; // в валюте
		КонецЕсли;
		ОплатаДоговора = Договор.ОплатаДоговора; // 1 - врублях, 2 - в валюте
		
	ИначеЕсли ВерсияОбъекта < "7.70.421" Тогда
		ОплатаДоговора = Валютный;
		ЦеныВДоговоре = Валютный ;
	КонецЕсли;
	
	Если ЦеныВДоговоре = 2 Тогда
		Если ВерсияОбъекта < "7.70.421" Тогда
			Валюта = ДокументОснование.Валюта;
			Если ДокументОснование.Аванс = 1 Тогда
			    Курс = Валюта.Курс.Получить(ДокументОснование.ДатаДок);
			Иначе
				Курс = Валюта.Курс.Получить(ДатаДок);
			КонецЕсли;
			Курс1 = Валюта.Курс.Получить(ДокументОснование.ДатаДок);
		Иначе
			Валюта = Договор.ВалютаДоговора;
			Курс1 = ДокументОснование.Курс;
		КонецЕсли;
		Кратность1 = Валюта.Кратность.Получить(ДокументОснование.ДатаДок);
		Кратность1 = ?(Кратность1 = 0, 1, Кратность1);
		Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность1 = Кратность1 * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
		
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность = Кратность * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
		
		// Курсы валюты для расчета суммовой разницы:
		
		Курс2 = Курс;
		Кратность2 = Договор.ВалютаДоговора.Кратность.Получить(ДатаДок);
		Кратность2 = ?(Кратность2 = 0, 1, Кратность2);
		Если Договор.ВестиУчетРасчетовУЕ = 1 Тогда
			Кратность2 = Кратность2 * 100 / (100 + Договор.ПроцентКорректировкиКурсаУЕ);
		КонецЕсли;
	КонецЕсли;
	
	Если (ДокументОснование.Выбран() = 1) или (Аванс = 1) Тогда
		// Подготовим таблицу документа-основания для расчета суммовой разницы.
		Сумма = СоздатьОбъект("ТаблицаЗначений");
		ДокументОснование.ВыгрузитьТабличнуюЧасть(Сумма);
		Сумма.НоваяКолонка("ВидТовара", "Строка");
		Сумма.ВыбратьСтроки();
		Пока Сумма.ПолучитьСтроку() = 1 Цикл
			Если ТипЗначенияСтр(Сумма.Товар) = "Справочник" Тогда
				Сумма.ВидТовара = Сумма.Товар.Вид();
				Если Сумма.Товар.Вид() = "Номенклатура" Тогда
					Если Сумма.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
						Сумма.НП = 0;
						Сумма.АкцизСумма = 0;
						Сумма.НДС = Сумма.НДС_Вознаграждения;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Сумма.Свернуть("СтавкаНДС, ВидТовара, Счет,Субконто1,Субконто2,Субконто3,ТипТовара,Комитент","НДС,НП,АкцизСумма");

		БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
		Если Аванс = 1 Тогда			
		    
			Если (ДатаДок >= '01.01.2009') и (ДокументОснование.Вид() = "СчетФактураПолученный") Тогда
				БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные, ДокументОснование, 2);
				БухИт.ВыполнитьЗапрос(НачМесяца(ДатаДок), ТекущийДокумент(), Сч76_ВА);
			Иначе
				БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные, ДокументОснование, 2);
				БухИт.ВыполнитьЗапрос(НачМесяца(ДатаДок), ТекущийДокумент(), Сч76_АВ);
			КонецЕсли;
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			
			Если НДС = 0 Тогда
			Иначе
				Если Аванс = 1 Тогда
					Если ОплатаДоговора = 2 Тогда
						СуммаНДС = - НДС*Курс/Кратность;
					Иначе
						СуммаНДС = - НДС;
					КонецЕсли;
					
					Если (ДатаДок >= '01.01.2009') и (ДокументОснование.Вид() = "СчетФактураПолученный") Тогда
						Если (БухИт.СКК() < Окр(-СуммаНДС, 2, 1)) и (ВерсияОбъекта >= "7.70.421") Тогда
							ТекстСообщения = "Сумма НДС превышает сальдо по кредиту счета 76.ВА";
							глНеПроводить(Контекст, ТекстСообщения);
							Возврат;
						КонецЕсли;
						
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "БК";
						Операция.СодержаниеПроводки = "Восстановлен НДС с аванса";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = Сч76_ВА;
						Операция.Дебет.Субконто(1, Контрагент);
						Операция.Дебет.Субконто(2, ДокументОснование);
						Операция.Кредит.Счет = Сч68_2;
						Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
						Операция.Сумма = -СуммаНДС;
						
					Иначе
						
						Если (БухИт.СКД() < Окр(СуммаНДС, 2, 1)) и (ВерсияОбъекта >= "7.70.421") Тогда
							ТекстСообщения = "Сумма НДС превышает сальдо по дебету счета 76.АВ";
							глНеПроводить(Контекст, ТекстСообщения);
							Возврат;
						КонецЕсли;
						
						Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
						Операция.НомерЖурнала = "БК";
						Операция.СодержаниеПроводки = "Восстановлен НДС с аванса";
						Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
						Операция.Дебет.Счет = Сч68_2;
						Операция.Дебет.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
						Операция.Кредит.Счет = Сч76_АВ;
						Операция.Кредит.Субконто(1, Контрагент);
						Операция.Кредит.Субконто(2, ДокументОснование);
						Операция.Сумма = СуммаНДС;
					
					КонецЕсли;
					
				ИначеЕсли ДокументОснование.СчетНДС = 2 Тогда
					СуммаНДС = СуммоваяРазница(НДС, "НДС");
					Операция.ЗаписатьПроводки();
					
					БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные, ДокументОснование, 2);
					БухИт.ВыполнитьЗапрос(НачМесяца(ДатаДок), ТекущийДокумент(), Сч76_Н_1);
					Если (БухИт.СКК() < СуммаНДС) и (ВерсияОбъекта >= "7.70.421") Тогда
						ТекстСообщения = "Сумма НДС превышает сальдо по кредиту счета 76.Н";
						глНеПроводить(Контекст, ТекстСообщения);
						Возврат;
					КонецЕсли;
					
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ФР";
					Операция.СодержаниеПроводки = "Начислен НДС";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Сумма = СуммаНДС;
					Операция.Кредит.Счет = Сч68_2;
					Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
					Операция.Дебет.Счет = Сч76_Н_1;
					Если ВерсияОбъекта >= "7.70.421" Тогда
					    Операция.Дебет.Субконто(1, Контрагент);
					Иначе
						Операция.Дебет.Субконто(1, ?(Комитент.Выбран() = 1, Комитент, Контрагент));
					КонецЕсли;
					Операция.Дебет.Субконто(2, ДокументОснование);
				
				Иначе
					СуммоваяРазница(НДС, "НДС", 1);
				КонецЕсли;
			КонецЕсли;
			
			Если АкцизСумма = 0 Тогда
			ИначеЕсли ДокументОснование.СчетАкциза = 2 Тогда
				ОперСумма = СуммоваяРазница(АкцизСумма, "акцизсумма");
				Операция.ЗаписатьПроводки();
				
				БухИт.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные, ДокументОснование, 2);
				БухИт.ВыполнитьЗапрос(НачМесяца(ДатаДок), ТекущийДокумент(), Сч76_Н_2);
				Если (БухИт.СКК() < ОперСумма) и (ВерсияОбъекта >= "7.70.421") Тогда
					ТекстСообщения = "Сумма акциза превышает сальдо по кредиту счета 76.Н";
					глНеПроводить(Контекст, ТекстСообщения);
					Возврат;
				КонецЕсли;
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ФР";
				Операция.СодержаниеПроводки = "Начислен акциз";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Сумма = ОперСумма;
				Операция.Кредит.Счет = Сч68_3;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Дебет.Счет = Сч76_Н_2;
			    Операция.Дебет.Субконто(1, Контрагент);
				Операция.Дебет.Субконто(2, ДокументОснование);    
			
			Иначе
				СуммоваяРазница(АкцизСумма, "акцизсумма", 1);
			КонецЕсли;
			
			Если ВерсияОбъекта < "7.70.421" Тогда
				Если НП = 0 Тогда
				ИначеЕсли ДокументОснование.СчетНП = 2 Тогда
					ОперСумма = СуммоваяРазница(НП, "НП");
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ФР";
					Операция.СодержаниеПроводки = "Начислен НП";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Сумма = ОперСумма;
					Операция.Кредит.Счет = СчетПоКоду("68.5");
					Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
					Операция.Дебет.Счет = Сч76_Н_4;
					Операция.Дебет.Субконто(1, ДокументОснование.Контрагент);
				
				Иначе
					СуммоваяРазница(НП, "НП", 1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Счет.Выбран() = 0 Тогда
				ТекстСообщения = "Не выбран корреспондирующий счет";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
			Если НДС = 0 Тогда
			Иначе
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ФР";
				Операция.СодержаниеПроводки = "Начислен НДС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Если ОплатаДоговора = 2 Тогда
					Операция.Сумма = НДС*Курс/Кратность;
				Иначе
					Операция.Сумма = НДС;
				КонецЕсли;
				Операция.Кредит.Счет = Сч68_2;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Дебет.Счет = Счет;
				Операция.Дебет.Субконто(1, Субконто1);
				Операция.Дебет.Субконто(2, Субконто2);
				Операция.Дебет.Субконто(3, Субконто3);    
				
			КонецЕсли;
			
			Если АкцизСумма = 0 Тогда
			Иначе
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ФР";
				Операция.СодержаниеПроводки = "Начислен акциз";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Если ОплатаДоговора = 2 Тогда
					Операция.Сумма = АкцизСумма*Курс/Кратность;
				Иначе
					Операция.Сумма = АкцизСумма;
				КонецЕсли;
				Операция.Кредит.Счет = Сч68_3;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Дебет.Счет = Счет;
				Операция.Дебет.Субконто(1, Субконто1);
				Операция.Дебет.Субконто(2, Субконто2);
				Операция.Дебет.Субконто(3, Субконто3);    
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
               
	Если (ПустоеЗначение(Операция.Содержание) = 1) и (Операция.СуммаОперации = 0) Тогда
		Если ОплатаДоговора = 2 Тогда
			Операция.СуммаОперации = Итог("Всего")*Курс/Кратность;
			
		Иначе
			Операция.СуммаОперации = Итог("Всего");
		КонецЕсли;
		Операция.Содержание = "Запись книги продаж";
	КонецЕсли;

	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);

КонецПроцедуры // ОбработкаПроведения()