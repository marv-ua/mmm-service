////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем КонтекстФормыПодбора;
Перем Новый;
Перем СписокДействий;
Перем Валюта;
Перем СтарыйДоговор;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//


//******************************************************************************
//  СуммаПрописью(Сумма) 
//
// Параметры:
// 		Сумма - число, на основе которого формируется сумма
//
// Возвращаемое значение: 
//		Сумма прописью
//
// Описание:
// 	Формирует сумму прописью в соответствии с файлом прописи, заданным в валюте.

Функция СуммаПрописью(Сумма)
	
	Если ПустоеЗначение(Валюта) = 0 Тогда
		
		Если ПустоеЗначение(Валюта.ИмяФайлаПрописи) = 1 Тогда
	        Предупреждение("Для выбранной валюты не указан файл прописи.");
		ИначеЕсли ФС.СуществуетФайл(КаталогИБ()+Валюта.ИмяФайлаПрописи) = 0 Тогда
	        Предупреждение("Для выбранной валюты неверно указан файл прописи.");
		Иначе
			Пропись(КаталогИБ()+Валюта.ИмяФайлаПрописи);
	    КонецЕсли;
		
	КонецЕсли;

	СтрокаСуммы	= Формат(Сумма, "ЧПДС");
	
	// установим пропись по умолчанию
	Пропись("");
	Возврат СтрокаСуммы;
	
КонецФункции // СуммаПрописью()

//******************************************************************************
// ФРМ(ЧислЗнач)
//
Функция ФРМ(ЧислЗнач)
	                          
	РезСтрока = СокрЛ(Формат(ЧислЗнач, "Ч015.2.'"));
	
	Если (ПустоеЗначение(РезСтрока) = 0) и (ПустоеЗначение(Валюта) = 0) Тогда
		РезСтрока = РезСтрока + " " + СокрП(Валюта);
	КонецЕсли;

	Возврат РезСтрока;

КонецФункции // ФРМ()

//******************************************************************************
// ИнформацияОДоговоре()
//
// Возвращаемое значение:
//  Строка - Наименование валюты договора и валюты оплаты.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформацияОДоговоре".
//
// Описание:
//  Формирует строку, содержащую наименование валюты договора и валюты оплаты.
//
Функция ИнформацияОДоговоре() 
	
	Стр = "";
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ВалютаДоговора.Выбран() = 1 Тогда
		    Стр = "Валюта договора: " + Договор.ВалютаДоговора + ", оплата договора в ";
			Если Договор.ОплатаДоговора = 2 Тогда
			    Стр = Стр + Договор.ВалютаДоговора;
			Иначе
				Стр = Стр + "рублях";
			КонецЕсли;
			Стр = Стр + ", курс: " + Договор.ВалютаДоговора.Курс.Получить(ДатаДок);
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
	
КонецФункции // ИнформацияОДоговоре()

//******************************************************************************
// РассчитатьНалоги()
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа 
// в зависимости от найденных ставок налогов и выбранного варианта формирования
// отпускных цен.
//
Процедура РассчитатьНалоги()
	
	НДС = глПоказательДокумента(Контекст, "НДС");
	НП = глПоказательДокумента(Контекст, "НП");
	Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП"));
	
КонецПроцедуры // РассчитатьНалоги()

//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
//
// Вызывается из формул элементов диалога:
//  Колонка "Товар",
//  Колонка "Количество",
//  Колонка "Цена",
//  Колонка "Сумма",
//  Колонка "НДС",
//  Колонка "НП",
//  Колонка "Всего".
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа.
//
Процедура Пересчет(ИмяРеквизита="")
		
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;

	Если Товар.Выбран() = 1 Тогда
		Если (ИмяРеквизита = "Товар") Тогда
			Цена = глПолучитьЦену(Контекст,Товар,ТипЦен,ДатаДок,Валюта);
			//глСуммаДокумента(Контекст, Товар);
			Если Количество <> 0 Тогда
				Пересчет("Цена");
			КонецЕсли;
		ИначеЕсли (ИмяРеквизита = "Количество") Тогда
			Сумма = Цена*Количество;
			РассчитатьНалоги();
	    ИначеЕсли (ИмяРеквизита = "Цена") Тогда
			Сумма = Цена*Количество;
			РассчитатьНалоги();
		ИначеЕсли (ИмяРеквизита = "Сумма") Тогда
			РассчитатьНалоги();
			Цена = ?(Количество = 0, Сумма, Сумма/Количество);
		ИначеЕсли (ИмяРеквизита = "НДС") или (ИмяРеквизита = "НП") Тогда
			Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // Пересчет()

//******************************************************************************
Процедура ПересчитатьЦены()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Пересчет("Товар");
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************
// ПриВыбореВариантаРасчетаНалогов()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "ВариантРасчетаНалогов".
//
// Описание:
//  Пересчитывает суммы в документе при смене варианта расчета налогов.
//
Процедура ПриВыбореВариантаРасчетаНалогов()
	
	Если КоличествоСтрок() > 0 Тогда
		
		ОбщееКоличество = КоличествоСтрок();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Пересчет("Сумма");
			Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
		КонецЦикла;
	КонецЕсли;
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		НДС = ?(УчитыватьНДС = 0, 0, НДС);
		НП = ?(УчитыватьНП = 0, 0, НП);
	КонецЦикла;
	Форма.НДС.Видимость(УчитыватьНДС);
	Форма.НП.Видимость(УчитыватьНП);
	
КонецПроцедуры // ПриВыбореВариантаРасчетаНалогов()

//*****************************************************************************   
// ПриВыбореТипаЦен()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Тип цен"
// 
// Описание:
//  Проверяет соответствие типа цен.
//
Процедура ПриВыбореТипаЦен()
	Если (ТипЦен.Выбран()=1)и(КоличествоСтрок()>0) Тогда
		Если Вопрос("Перезаполнить цены в документе?","Да+Нет",60) = "Да" Тогда
			ПересчитатьЦены();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************   
// ПроверитьДоговор()
//
Процедура ПроверитьДоговор()
	СтараяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	НоваяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");

	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;  
	
	Если ПустоеЗначение(СтарыйДоговор) = 1 Тогда
		СтараяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Иначе
		СтараяВалюта = СтарыйДоговор.ВалютаДоговора;
	КонецЕсли;
	
	Если ПустоеЗначение(Договор) = 1 Тогда
		НоваяВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Иначе
		НоваяВалюта = Договор.ВалютаДоговора;
	КонецЕсли;
	
	Если СтараяВалюта <> НоваяВалюта Тогда
		Если Вопрос("Изменена валюта договора."+РазделительСтрок+"Пересчитать цены в документе?","Да+Нет",30) = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Цена = глПересчет(Цена,СтараяВалюта,ДатаДок,НоваяВалюта,ДатаДок);
				Пересчет("Цена");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// СоздатьПоСчету()
//
// Вызывается формул элементов диалога:
//  Кнопка "Новый".
//
// Описание:
//  Создает новый элемент справочника "Договоры".
//
Процедура СоздатьПоСчету()
	
	СтарыйДоговор = Договор;
	Спр = СоздатьОбъект("Справочник.Договоры");
	Если Контрагент.Выбран() = 0 Тогда
		ВыбКонтрагент = СоздатьОбъект("Справочник.Контрагенты");
	    ВыбКонтрагент.Выбрать("Укажите контрагента", "ФормаСписка");
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    Контрагент = ВыбКонтрагент.ТекущийЭлемент();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Спр.ИспользоватьВладельца(Контрагент);
	НаименованиеДоговора = "Счет №"+глПреобразоватьНомерДок(НомерДок)+" от "+Формат(ДатаДок,"Д ДД.ММ.ГГ");
	Если Спр.НайтиПоНаименованию(НаименованиеДоговора) = 0 Тогда
	    Спр.Новый();
		Спр.Наименование = НаименованиеДоговора;
		Спр.ВидДоговора  = глЗначениеПоУмолчанию("ОсновнойВидДоговоров");
		Спр.ДатаВозникновенияОбязательства = ДатаДок;
		Спр.ОплатаДоговора = 1;
		Спр.АвтоОбработкаНДС = ?(Константа.АвтоКнигаПокупокПродаж = Да, 1, 0);
		Спр.Записать();
		Договор = Спр.ТекущийЭлемент();
		
	Иначе
		Договор = Спр.ТекущийЭлемент();
	КонецЕсли;
	Валюта = Договор.ВалютаДоговора;
	ПроверитьДоговор();
	
КонецПроцедуры // СоздатьПоСчету()

//*****************************************************************************
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()

	глПриВыбореДоговора(Контрагент, Договор);
	Валюта = Договор.ВалютаДоговора;
	ПроверитьДоговор();
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Контрагент, Договор);
	Валюта = Договор.ВалютаДоговора;
	ПроверитьДоговор()
	
КонецПроцедуры // ПриВыбореКонтрагента()

//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует строку, содержащую итоговые суммы колонок табличной части.
//
Функция ИтоговаяСтрока()
	
	ИтСтр = "Всего: " + СокрЛ(Формат(Итог("Всего"),"Ч20.2-,")) + ", "+
			"в т.ч. НДС: " + СокрЛ(Формат(Итог("НДС"),"Ч20.2-,"));
	Если Итог("НП") > 0 Тогда
		ИтСтр = ИтСтр + ", НП: " + СокрЛ(Формат(Итог("НП"),"Ч20.2-,"));
	КонецЕсли;
	ИтСтр = ИтСтр + ", без налогов: " + СокрЛ(Формат((Итог("Всего") - Итог("НДС") - Итог("НП")),"Ч20.2-,"));

	Возврат ИтСтр;
	
КонецФункции // ИтоговаяСтрока()

//******************************************************************************
// УправлениеВидимостьюГрузополучателя()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура УправлениеВидимостьюГрузополучателя()
	
	Если ВариантПолучения = 1 Тогда // он же
		Видимость = 0;
		
		Если ПустоеЗначение(Плательщик) = 0 Тогда
			Плательщик = 0;    
		КонецЕсли;
		
	Иначе
		Видимость = 1;
	КонецЕсли;
		
	Форма.Плательщик.Видимость(Видимость);
	Форма.ПоказатьГрузополучателя.Видимость(Видимость);
	
КонецПроцедуры // УправлениеВидимостьюГрузополучателя()

//******************************************************************************
Процедура Печать()
	НомерДокПечатнойФормы = глПреобразоватьНомерДок(НомерДок, 0, 0);

	АдресТелефон = "";
	глДобавитьРеквизит(АдресТелефон, "Адрес: ", глПредставлениеАдреса(Константа.АдресОрганизации));
	глДобавитьРеквизит(АдресТелефон, ", тел.: ", Константа.ТелефоныОрганизации);

	ПоставщикРасчСчет = "";
	ПоставщикИНН = "";
	ПоставщикКПП = "";

    ПоставщикБанк = "";
    Кредит = "";
	ПоставщикБанкБИК = "";
	ПоставщикБанкКорсчет = "";
	глПлатежныеРеквизиты(РасчетныйСчет.ТекущийЭлемент(), ПоставщикРасчСчет, ПоставщикБанк, Кредит, ПоставщикБанкБИК, ПоставщикБанкКорсчет,ПоставщикИНН, ПоставщикКПП,2);
	
    Таб = СоздатьОбъект("Таблица");
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\1cbs.mxl";
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
	Иначе
		Таб.ИсходнаяТаблица("Таблица");
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка");

	ВыбратьСтроки();
	Ном = 0;
	Пока ПолучитьСтроку()=1 Цикл
		Ном = Ном + 1;
		Наименование = ?(ПустаяСтрока(Товар.ПолнНаименование)=1, Товар.Наименование, Товар.ПолнНаименование);
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	Таб.ВывестиСекцию("Итого");
	Таб.ВывестиСекцию("НДС");
	Если глПризнакУчетаНалога(Контекст, "НП") = 1 Тогда
		Таб.ВывестиСекцию("НП");
	КонецЕсли;
	Таб.ВывестиСекцию("Подвал");

	Таб.Опции(0,0,0,0,"ОпцииПечатиСчета","ОкноСчета");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать счета","");
КонецПроцедуры

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
Процедура ВводНового(Копирование);
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
    ВРН = Константа.ОсновнойВариантРасчетаНалоговОтгрузки;
	Если (ВРН.СтавкаНП.Ставка = 0) и
		 (ВРН.СтавкаНДС.Ставка = 0) Тогда
		ВариантРасчетаНалогов = ВРН;
	КонецЕсли;
	РасчетныйСчет = глЗначениеПоУмолчанию("ОсновнойБанковскийСчет");
	ВариантОтправки = 1;
	Если Константа.ОсновнойСклад.Выбран() = 1 Тогда
	    ТипЦен = Константа.ОсновнойСклад.ТипЦен;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОсн) //предопределенная
	Новый = 1;
	Если ДокОсн.Вид() = "РасходнаяНакладная" Тогда
		РасчетныйСчет = ДокОсн.РасчетныйСчет;
		Контрагент = ДокОсн.Контрагент;
		Договор = ДокОсн.Договор;
		Контрагент = ДокОсн.Контрагент;
		Если ПустоеЗначение(ДокОсн.Грузополучатель) = 0 Тогда
		    Плательщик = ДокОсн.Грузополучатель;
		КонецЕсли;
		ВариантРасчетаНалогов = ДокОсн.ВариантРасчетаНалогов;
		ТипЦен = ДокОсн.ТипЦен;
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Товар = ДокОсн.Товар;
			Количество = ДокОсн.Количество;
			Цена = ДокОсн.Цена;
			Сумма = ДокОсн.Сумма;
			НДС = ДокОсн.НДС;
			НП = ДокОсн.НП;
			Всего = ДокОсн.Всего;
		КонецЦикла;
	КонецЕсли; 
	ВариантОтправки = 1;
	Комментарий = "Введен на основании: "+ГлПредставлениеДокумента(ДокОсн);
КонецПроцедуры //ВводНаОсновании

//******************************************************************************
Процедура ПриОткрытии()
	
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПодбор.Доступность(0);  
		Форма.КнопкаОчистить.Доступность(0);
		Форма.КнопкаВыбораРасчетногоСчета.Доступность(0);
	КонецЕсли;
	КонтекстФормыПодбора = 0;
	
	Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Количество.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Цена.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Сумма.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НП.ВыполнятьФормулуТолькоПриИзменении(1);

	НачальнаяДатаДокумента = ДатаДок;
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП")); 
	Валюта = Договор.ВалютаДоговора;
	
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
	    Форма.ПодписьТипаЦен.Видимость(0);
		Форма.ТипЦен.Видимость(0);
	Иначе
		Форма.ПодписьТипаЦен.Видимость(1);
		Форма.ТипЦен.Видимость(1);
	КонецЕсли;
	
	Если ПустоеЗначение(Плательщик) = 1 Тогда
		ВариантПолучения = 1;
	КонецЕсли;
	УправлениеВидимостьюГрузополучателя();
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры // ПриОткрытии

//******************************************************************************
Процедура Подбор()
	КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
	КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
	ОткрытьПодбор("Справочник.Номенклатура", "ДляПодбора", КонтекстФормыПодбора);
КонецПроцедуры

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВариантРасчетаНалогов" Тогда
		Флаг = 0;
		СписокВариантов = СоздатьОбъект("СписокЗначений");
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			Если (СпрВариант.СтавкаНП.Ставка = 0) и
				 (СпрВариант.СтавкаНДС.Ставка = 0) Тогда
				СписокВариантов.ДобавитьЗначение(СпрВариант.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;
		Значение = ВариантРасчетаНалогов;
		Если СписокВариантов.ВыбратьЗначение(Значение, , , , 2) = 0 Тогда
			Возврат;
		КонецЕсли;
		ВариантРасчетаНалогов = Значение;
		ПриВыбореВариантаРасчетаНалогов();
	
	ИначеЕсли (ЭлементДиалога = "Договор")или(ЭлементДиалога = "Контрагент") Тогда
		СтарыйДоговор = Договор;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
Процедура ОбработкаПодбора(ВыбрТовар, Конт)
	Кол = 1;
	Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
		Возврат;
	ИначеЕсли Кол = 0 Тогда
		Возврат;
	КонецЕсли;

	НоваяСтрока();
	Товар = ВыбрТовар;
	Количество = Кол;
	АктивизироватьСтроку();
	Пересчет("Товар");
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
	Иначе
		Цена = глПолучитьЦену(Контекст,Товар,Конт.ТипЦен,ДатаДок,Валюта);
		Пересчет("Цена");
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если Константа.ВсеДокументыВЖурналОпераций = Да Тогда
	    СуществуетОперация(1);
		ЦеныВДоговоре = 1; // в рублях
		Если Договор.Выбран() = 1 Тогда
		    Если ПустоеЗначение(Договор.ВалютаДоговора) = 0 Тогда
				ЦеныВДоговоре = 2; // в валюте
			КонецЕсли;
		КонецЕсли;
		
		Если ЦеныВДоговоре = 2 Тогда
			Валюта = Договор.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(ДатаДок);
			Курс = Валюта.Курс.Получить(ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			Операция.СуммаОперации = Окр(Итог("Всего")*Курс/Кратность, 2, 1);
		Иначе
			Операция.СуммаОперации = Итог("Всего");
		КонецЕсли;
		Операция.Содержание = "Счет заказчику: "+Контрагент;
	Иначе
	    СуществуетОперация(0);
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Счет";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");
