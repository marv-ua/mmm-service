// используемые налоговые счета
Перем СчН02_02, СчН02_03, СчН02_07, СчН02_04_1, СчН02_04_2, СчН02_04_3, СчН06_01, СчН06_04, СчН07_01, СчН07_05;

//******************************************************************************
// СформироватьПроводкиДляЦелейНалоговогоУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьПроводкиДляЦелейНалоговогоУчета(ТаблицаДокумента, БИ_НУ)
	
	СчетУчетаНУ = "";
	СчетСписанияНУ = "";
	СчетВыручкиНУ = "";
	Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		СчетУчетаНУ = СчН02_03;
		СчетСписанияНУ = СчН07_01;
		СчетВыручкиНУ = СчН06_01;
		
	ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
		СчетУчетаНУ = СчН02_07;
		СчетСписанияНУ = СчН07_01;
		СчетВыручкиНУ = СчН06_01;
		
	ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		СчетУчетаНУ = СчН02_02;
		СчетСписанияНУ = СчН07_05;
		СчетВыручкиНУ = СчН06_04;
		
	ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		Возврат
		
	Иначе // услуги
		СчетВыручкиНУ = СчН06_01;
	КонецЕсли;
	
	Если СчетУчетаНУ <> "" Тогда // если товар или продукци, то необходимо списать стимость МПЗ.
	    
		// Проверим хватает ли на складе товара по данным налогового учета.
		СуммаНаСкладахНУ = 0;
        КоличествоНаСкладахНУ = 0;
		Если ПустоеЗначение(СчетУчетаНУ) = 0 Тогда
			Если БИ_НУ.ПолучитьСчет(,СчетУчетаНУ) = 1 Тогда
				Если БИ_НУ.ПолучитьСубконто(ВидыСубконто.Номенклатура,,ТаблицаДокумента.Товар) = 1 Тогда
					СуммаНаСкладахНУ = Макс(БИ_НУ.СКД("С"), 0);
					КоличествоНаСкладахНУ = БИ_НУ.СКД("К");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	   	Если КоличествоНаСкладахНУ < ТаблицаДокумента.Количество Тогда
	   		ТекстСообщения = "По данным налогового учета на складах "+КоличествоНаСкладахНУ+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+
					  	    " из необходимых "+ТаблицаДокумента.Количество+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" товара "+ТаблицаДокумента.Товар;
			Если Константа.КонтрольОтрицательныхОстатков = Да Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;
		
		Если ТаблицаДокумента.Количество >= КоличествоНаСкладахНУ Тогда
			СуммаОтгрузкиНУ = СуммаНаСкладахНУ;
		Иначе
			СуммаОтгрузкиНУ = ТаблицаДокумента.Количество*(СуммаНаСкладахНУ/КоличествоНаСкладахНУ);
		КонецЕсли;

		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "НУ";
		Операция.СодержаниеПроводки = "Отгружено со склада";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Кредит.Счет = СчетУчетаНУ;
		Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
		Если ПродажаОблагаетсяЕНВД = 0 Тогда
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
			
		Иначе
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.НеОблагается
		КонецЕсли;
		Операция.Количество = ТаблицаДокумента.Количество;
		Операция.Сумма = СуммаОтгрузкиНУ;
		
		// Если продажи облагаются ЕНДВ, то стоимость реализованных
		// товаров не включается в состав расходов для целей налогового учета. 
		Если ПродажаОблагаетсяЕНВД = 0 Тогда 
			Операция.Дебет.Счет = СчетСписанияНУ;
		КонецЕсли;
	КонецЕсли;
	
	// Если продажи облагаются ЕНДВ, то выручка не включается
	// в состав доходов для целей налогового учета. 
	Если ПродажаОблагаетсяЕНВД = 0 Тогда // если отгрузка без перехода права собственности, то не отражается выручка
		
		ВыручкаБезНалогов = ТаблицаДокумента.Всего - ТаблицаДокумента.НДС - ТаблицаДокумента.НП;
		
		Если ВыручкаБезНалогов > 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		    Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Выручка от реализации";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетВыручкиНУ;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ЗаПлату;
			Операция.Сумма = ВыручкаБезНалогов;
			Операция.Количество = ТаблицаДокумента.Количество;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводкиДляЦелейНалоговогоУчета()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()
	
	Сч21 = СчетПоКоду("21");
	Сч43 = СчетПоКоду("43");
	Сч41_2 = СчетПоКоду("41.2");
	Сч41_3 = СчетПоКоду("41.3");
	Сч41_4 = СчетПоКоду("41.4");
	СчетКассы = СчетПоКоду("50.1");
	Сч68_5 = СчетПоКоду("68.5");
	Сч90_6 = СчетПоКоду("90.6");
	Сч90_1_1 = СчетПоКоду("90.1.1");
	Сч90_2_1 = СчетПоКоду("90.2.1");
	Сч90_1_2 = СчетПоКоду("90.1.2");
	Сч90_2_2 = СчетПоКоду("90.2.2");
	СчетРасчетовСКомитентом = СчетПоКоду("76.5");
	Сч004 = СчетПоКоду("004");
	СчКТР = СчетПоКоду("КТР");
	СчетУчетаСебестоимости = ?(ПродажаОблагаетсяЕНВД = 1, Сч90_2_2, Сч90_2_1);
	СчГТД = СчетПоКоду("ГТД");
	                                
	Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
		СчН02_02 = СчетПоКоду("Н02.02.2");
				
	Иначе
		СчН02_02 = СчетПоКоду("Н02.02.1");
	КонецЕсли;
	
	СчН02_03 = СчетПоКоду("Н02.03");
	СчН02_07 = СчетПоКоду("Н02.07");
	СчН06_01 = СчетПоКоду("Н06.01");
	СчН06_04 = СчетПоКоду("Н06.04");
	СчН07_01 = СчетПоКоду("Н07.01");
	СчН07_05 = СчетПоКоду("Н07.05");
	
	ТаблицаОтгрузки = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаОтгрузки.НоваяКолонка("ВидНоменклатуры", "Справочник.ВидыНоменклатуры");
	ТаблицаОтгрузки.НоваяКолонка("СтавкаНДС", "Справочник.СтавкиНДС");
	ТаблицаОтгрузки.НоваяКолонка("СтавкаНП", "Справочник.СтавкиНП");
	ТаблицаОтгрузки.НоваяКолонка("Всего", "Число");
	ТаблицаОтгрузки.НоваяКолонка("НП", "Число");
	
	ТаблицаКомисии = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаКомисии.НоваяКолонка("Комитент", "Справочник.Контрагенты");
	ТаблицаКомисии.НоваяКолонка("ДоговорКомиссии", "Справочник.Договоры");
	ТаблицаКомисии.НоваяКолонка("Всего", "Число");
	ТаблицаКомисии.НоваяКолонка("НП", "Число");

	СписокТоваров = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокТоваров, "Товар");
    БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	БухИт.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	БухИт.ВыполнитьЗапрос(,ТекущийДокумент(),"21, 43, 41.2, 41.3, 41.4",,,,,"СК");
	
	БИ_НУ = СоздатьОбъект("БухгалтерскиеИтоги");  БИ_НУ.ИспользоватьРазделительУчета(ЮрЛицо);
	БИ_НУ.ИспользоватьСубконто(ВидыСубконто.Номенклатура, СписокТоваров, 2);
	Если Константа.РаздельныйУчетТоваровОптРозница.Получить(ДатаДок) = Да Тогда
		БИ_НУ.ВыполнитьЗапрос(,ТекущийДокумент(), "Н02.01, Н02.02.2, Н02.03, Н02.07",,,,, "СК");
				
	Иначе
		БИ_НУ.ВыполнитьЗапрос(,ТекущийДокумент(), "Н02.01, Н02.02.1, Н02.03, Н02.07",,,,, "СК");
	КонецЕсли;

	БухИтКТР = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКТР.ИспользоватьРазделительУчета(ЮрЛицо);

	ТаблицаДокумента = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблицаДокумента, "Товар,Комитент,ДоговорКомиссии,Количество,НДС,НП,Всего");
	ТаблицаДокумента.НоваяКолонка("СтавкаНДС");
	ТаблицаДокумента.НоваяКолонка("СтавкаНП");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Товар.Выбран() = 0 Тогда
			ТекстСообщения = "В строке "+НомерСтроки+" не указан товар.";
			глНеПроводить(Контекст, ТекстСообщения);
			Возврат;
		КонецЕсли;
		Если ПродажаОблагаетсяЕНВД = 1 Тогда
			Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция) 
			 или (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат) Тогда
			 	ТекстСообщения = "В строке "+НомерСтроки+" указана продукция (полуфабрикат). Реализация продукции не может облагаться ЕНВД.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаДокумента.ПолучитьСтрокуПоНомеру(НомерСтроки);
		ТаблицаДокумента.СтавкаНДС = глСтавкаНалога(Контекст, "НДС");
		ТаблицаДокумента.СтавкаНП = глСтавкаНалога(Контекст, "НП");
	КонецЦикла;
	
	ТаблицаДокумента.Свернуть("Товар,Комитент,ДоговорКомиссии,СтавкаНДС,СтавкаНП","Количество,НДС,НП,Всего");
	ТаблицаДокумента.ВыбратьСтроки();
	Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаДокумента.Товар.ТипНоменклатуры.Выбран() = 0 Тогда
			ТекстСообщения = "Не указан тип номенклатуры для товара: "+ТаблицаДокумента.Товар;
			глНеПроводить(Контекст, ТекстСообщения, ТаблицаДокумента.Товар.ТекущийЭлемент());
			Возврат;
		КонецЕсли;

		СчетУчета = "";
		Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			СчетУчета = Сч43;
		ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
			СчетУчета = Сч21;
		ИначеЕсли ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Если ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.Тара Тогда
				СчетУчета = Сч41_3;
			ИначеЕсли ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.ПокупныеИзделия Тогда
				СчетУчета = Сч41_4;
			ИначеЕсли ТаблицаДокумента.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				СчетУчета = СчКТР;
			Иначе //Если Товар.ТипТовара = Перечисление.ТипыТоваров.Собственный Тогда
				СчетУчета = Сч41_2;
			КонецЕсли;
		КонецЕсли;

		СуммаНаСкладах = 0;
        КоличествоНаСкладах = 0;
        КоличествоНаСкладе = 0;
		Если СчетУчета = СчКТР Тогда
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Номенклатура, ТаблицаДокумента.Товар, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
			БухИтКТР.ИспользоватьСубконто(ВидыСубконто.Договоры, ТаблицаДокумента.ДоговорКомиссии, ?(ТаблицаДокумента.ДоговорКомиссии.Выбран()=1,2,1));
			БухИтКТР.ВыполнитьЗапрос(,ТекущийДокумент(),"КТР",,,,,"СК");
			КоличествоНаСкладе = БухИтКТР.СКД("К");
			
		ИначеЕсли ПустоеЗначение(СчетУчета) = 0 Тогда
			Если БухИт.ПолучитьСчет(,СчетУчета) = 1 Тогда
				Если БухИт.ПолучитьСубконто(ВидыСубконто.Номенклатура,,ТаблицаДокумента.Товар) = 1 Тогда
					Если СчетУчета <> Сч41_2 Тогда
						СуммаНаСкладах = БухИт.СКД("С");
						КоличествоНаСкладах = БухИт.СКД("К");
					КонецЕсли;
					Если БухИт.ПолучитьСубконто(ВидыСубконто.МестаХранения,,МестоХранения) = 1 Тогда
						Если СчетУчета = Сч41_2 Тогда
							СуммаНаСкладах = БухИт.СКД("С");
							КоличествоНаСкладах = БухИт.СКД("К");
						КонецЕсли;
						КоличествоНаСкладе = БухИт.СКД("К");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			КоличествоНаСкладе = ТаблицаДокумента.Количество;
		КонецЕсли;
		
		Если ПустоеЗначение(СчетУчета) = 0 Тогда
			Стр = "" + ТаблицаДокумента.НомерСтроки+". "+ТаблицаДокумента.Товар+" ("+ТаблицаДокумента.Товар.ТипНоменклатуры;
		   	Если ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		   	    Стр = Стр + ", "+ТаблицаДокумента.Товар.ТипТовара;
		   	КонецЕсли;
		   	Стр = Стр + "): на складе ";
		   	Если СчетУчета = СчКТР Тогда
		   		Стр = Стр+КоличествоНаСкладе+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения;
		   	Иначе
		   		Стр = Стр+МестоХранения+" "+КоличествоНаСкладе+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения;
		   		Стр = Стр+", всего по данным бухгалтерского учета "+КоличествоНаСкладах+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" на сумму "+СуммаНаСкладах;
		   		Если КоличествоНаСкладах > 0 Тогда
			   		Стр = Стр+", средняя стоимость " + Окр(СуммаНаСкладах/КоличествоНаСкладах, 2, 1);
		   		КонецЕсли;
		   	КонецЕсли;
		   	ТекстСообщения = Стр;
		   	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
		КонецЕсли;
		
	   	Если КоличествоНаСкладе < ТаблицаДокумента.Количество Тогда
	   		ТекстСообщения = "На складе "+КоличествоНаСкладе+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+
					  	    " из необходимых "+ТаблицаДокумента.Количество+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" товара "+ТаблицаДокумента.Товар;
			Если (Константа.КонтрольОтрицательныхОстатков = Да) или (СчетУчета = СчКТР) Тогда
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
				
			Иначе
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
		КонецЕсли;

		Если СчетУчета = СчКТР Тогда
			ОсталосьОтгрузить = ТаблицаДокумента.Количество;
			ВсегоРеализовано = 0;
			ВсегоНП = 0;
				БухИтКТР.ВыбратьСубконто(ВидыСубконто.Договоры);
				Пока (БухИтКТР.ПолучитьСубконто(ВидыСубконто.Договоры) = 1) и (ОсталосьОтгрузить > 0) Цикл
					КоличествоПоДоговору = БухИтКТР.СКД("К");
					Если КоличествоПоДоговору = 0 Тогда
						Продолжить;
					КонецЕсли;
					Если (ТаблицаДокумента.Комитент.Выбран()=1) и (БухИтКТР.Субконто(3).Владелец <> ТаблицаДокумента.Комитент) Тогда
						Продолжить;
					КонецЕсли;
					КоличествоОтгрузки = Мин(ОсталосьОтгрузить, КоличествоПоДоговору);
					СуммаПоДоговору = БухИтКТР.СКД("С");
					Если КоличествоОтгрузки = КоличествоПоДоговору Тогда
						СуммаОтгрузки = СуммаПоДоговору;
					Иначе
						СуммаОтгрузки = КоличествоОтгрузки*СуммаПоДоговору/КоличествоПоДоговору;
					КонецЕсли;
					ОсталосьОтгрузить = ОсталосьОтгрузить - КоличествоОтгрузки;

					СуммаРеализации = Окр(ТаблицаДокумента.Всего*КоличествоОтгрузки/ТаблицаДокумента.Количество,2,1);
					ВсегоРеализовано = ВсегоРеализовано + СуммаРеализации;
					
					СуммаНП = Окр(ТаблицаДокумента.НП*КоличествоОтгрузки/ТаблицаДокумента.Количество,2,1);
					ВсегоНП = ВсегоНП + СуммаНП;

					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Отгружено со склада";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = Сч004;
					Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
					Операция.Кредит.Контрагенты = БухИтКТР.Субконто(ВидыСубконто.Договоры).Владелец;
					Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
					Операция.Количество = КоличествоОтгрузки;
					Операция.Сумма = СуммаОтгрузки; // в рублях 
					
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ТВ";
					Операция.СодержаниеПроводки = "Отгружено со склада";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчетУчета;
					Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
					Операция.Кредит.МестаХранения = МестоХранения;
					Операция.Кредит.Договоры = БухИтКТР.Субконто(ВидыСубконто.Договоры);
					Операция.Количество = КоличествоОтгрузки;
					Операция.Сумма = СуммаОтгрузки; // в рублях

					ТаблицаКомисии.НоваяСтрока();
					ТаблицаКомисии.Комитент = БухИтКТР.Субконто(ВидыСубконто.Договоры).Владелец;
					ТаблицаКомисии.ДоговорКомиссии = БухИтКТР.Субконто(ВидыСубконто.Договоры);
					ТаблицаКомисии.Всего = СуммаРеализации; // в рублях
					ТаблицаКомисии.НП = СуммаНП;
				КонецЦикла;
			
			Если ВсегоРеализовано <> ТаблицаДокумента.Всего Тогда
				ТаблицаКомисии.Всего = ТаблицаКомисии.Всего + ТаблицаДокумента.Всего - ВсегоРеализовано;
			КонецЕсли;
			
			Если ВсегоНП <> ТаблицаДокумента.НП Тогда
				ТаблицаКомисии.НП = ТаблицаКомисии.НП + ТаблицаДокумента.НП - ВсегоНП;
			КонецЕсли;

		ИначеЕсли ПустоеЗначение(СчетУчета) = 0 Тогда
			Если ТаблицаДокумента.Количество >= КоличествоНаСкладах Тогда
				СуммаОтгрузки = СуммаНаСкладах;
			Иначе
				СуммаОтгрузки = ТаблицаДокумента.Количество*СуммаНаСкладах/КоличествоНаСкладах;
			КонецЕсли;

			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Отгружено со склада";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетУчетаСебестоимости;
			Операция.Дебет.ВидыНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
			Операция.Кредит.Счет = СчетУчета;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.МестаХранения = МестоХранения;
			Операция.Количество = ТаблицаДокумента.Количество;
			Операция.Сумма = СуммаОтгрузки;
			
			ТаблицаОтгрузки.НоваяСтрока();
			ТаблицаОтгрузки.ВидНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
			ТаблицаОтгрузки.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
			ТаблицаОтгрузки.СтавкаНП = ТаблицаДокумента.СтавкаНП;
			ТаблицаОтгрузки.Всего = ТаблицаДокумента.Всего;
			ТаблицаОтгрузки.НП = ТаблицаДокумента.НП;
				
		Иначе // остались услуги
			ТаблицаОтгрузки.НоваяСтрока();
			ТаблицаОтгрузки.ВидНоменклатуры = ТаблицаДокумента.Товар.ВидНоменклатуры;
			ТаблицаОтгрузки.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
			ТаблицаОтгрузки.СтавкаНП = ТаблицаДокумента.СтавкаНП;
			ТаблицаОтгрузки.Всего = ТаблицаДокумента.Всего;
			ТаблицаОтгрузки.НП = ТаблицаДокумента.НП;
		КонецЕсли;
		
		// Отражение в налоговом учете.
		Если (СчетУчета <> СчКТР) // если не комиссионный товар
		   и (глНовыеПравилаВеденияНУ(ДатаДок) = 1) Тогда
		    СформироватьПроводкиДляЦелейНалоговогоУчета(ТаблицаДокумента, БИ_НУ);
			Если СтатусВозврата() = 0 Тогда // произошла ошибка при формировании проводок для целей налогового учета.
			    Возврат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
    
	//Выручка за некомиссионные товары
	ТаблицаОтгрузки.Свернуть("ВидНоменклатуры,СтавкаНДС,СтавкаНП","Всего,НП");
	ТаблицаОтгрузки.ВыбратьСтроки();
	Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
		//Если ТаблицаОтгрузки.Комитент.Выбран() = 1 Тогда
		//	Если ТаблицаОтгрузки.Всего = 0 Тогда
		//	Иначе
		//		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		//		Операция.НомерЖурнала = "ТВ";
		//		Операция.СодержаниеПроводки = "Выручка за комисс.товар";
		//		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		//		Операция.Дебет.Счет = СчетКассы;
		//		Операция.Дебет.ДвиженияДенежныхСредств = ДвижениеДенежныхСредств;
		//		Операция.Кредит.Счет = СчетРасчетовСКомитентом;
		//		Операция.Кредит.Контрагенты = ТаблицаОтгрузки.Комитент;
		//		Операция.Кредит.Договоры = ТаблицаОтгрузки.ДоговорКомиссии;
		//		Операция.Сумма = ТаблицаОтгрузки.Всего;
		//	КонецЕсли;
		//	
		//	Если ПродажаОблагаетсяЕНВД = 0 Тогда
		//		Если ТаблицаОтгрузки.НП = 0 Тогда
		//		Иначе
		//			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		//			Операция.НомерЖурнала = "ТВ";
		//			Операция.СодержаниеПроводки = "Начислен налог с продаж";
		//			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		//			Операция.Дебет.Счет = СчетРасчетовСКомитентом;
		//			Операция.Дебет.Контрагенты = ТаблицаОтгрузки.Комитент;
		//			Операция.Дебет.Договоры = ТаблицаОтгрузки.ДоговорКомиссии;
		//			Операция.Кредит.Счет = Сч68_5;
		//			Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
		//			Операция.Сумма = ТаблицаОтгрузки.НП;
		//		КонецЕсли;
		//	КонецЕсли;
		//	
		//Иначе
		Если ТаблицаОтгрузки.Всего = 0 Тогда
		Иначе
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Выручка";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетКассы;
			Операция.Дебет.ДвиженияДенежныхСредств = ДвижениеДенежныхСредств;
			Если (ПродажаОблагаетсяЕНВД = 0)
			 и (ТаблицаОтгрузки.ВидНоменклатуры.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.УслугаЕНВД) Тогда
			    Операция.Кредит.Счет = Сч90_1_1;
				Операция.Кредит.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
				Операция.Кредит.СтавкиНДС = ТаблицаОтгрузки.СтавкаНДС;
				Операция.Кредит.СтавкиНП= ТаблицаОтгрузки.СтавкаНП;
				
			Иначе
				Операция.Кредит.Счет = Сч90_1_2;
				Операция.Кредит.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
			КонецЕсли;
			Операция.Сумма = ТаблицаОтгрузки.Всего;
		КонецЕсли;
	КонецЦикла;
	
	// НП по некомиссионным товары
	Если ПродажаОблагаетсяЕНВД = 0 Тогда
		ТаблицаОтгрузки.Свернуть("ВидНоменклатуры,СтавкаНП","НП");
		ТаблицаОтгрузки.ВыбратьСтроки();
		Пока ТаблицаОтгрузки.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаОтгрузки.НП = 0 Тогда
			Иначе
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен налог с продаж";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч90_6;
				Операция.Дебет.ВидыНоменклатуры = ТаблицаОтгрузки.ВидНоменклатуры;
				Операция.Дебет.СтавкиНП = ТаблицаОтгрузки.СтавкаНП;
			    Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = ТаблицаОтгрузки.НП;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//Выручка и НП по комиссионным товарам
	ТаблицаКомисии.Свернуть("Комитент, ДоговорКомиссии","Всего,НП");
	ТаблицаКомисии.ВыбратьСтроки();
	Пока ТаблицаКомисии.ПолучитьСтроку() = 1 Цикл
		
		Если ПустоеЗначение(ТаблицаКомисии.ДоговорКомиссии.ВалютаДоговора) = 0 Тогда 
			Если ТаблицаКомисии.ДоговорКомиссии.ОплатаДоговора = 1 Тогда
				Если ТаблицаКомисии.ДоговорКомиссии.ВестиУчетРасчетовУЕ = 1 Тогда
					СчетРасчетовСКомитентом = СчетПоКоду("76.6");
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;

		Если ТаблицаКомисии.Всего = 0 Тогда
		Иначе
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Выручка за комисс.товар";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетКассы;
			Операция.Дебет.ДвиженияДенежныхСредств = ДвижениеДенежныхСредств;
			Операция.Кредит.Счет = СчетРасчетовСКомитентом;
			Операция.Кредит.Контрагенты = ТаблицаКомисии.Комитент;
			Операция.Кредит.Договоры = ТаблицаКомисии.ДоговорКомиссии;
			Операция.Сумма = ТаблицаКомисии.Всего;
		КонецЕсли;
		
		Если ПродажаОблагаетсяЕНВД = 0 Тогда
			Если ТаблицаКомисии.НП = 0 Тогда
			Иначе
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ТВ";
				Операция.СодержаниеПроводки = "Начислен налог с продаж";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = СчетРасчетовСКомитентом;
				Операция.Дебет.Контрагенты = ТаблицаКомисии.Комитент;
				Операция.Дебет.Договоры = ТаблицаКомисии.ДоговорКомиссии;
				Операция.Кредит.Счет = Сч68_5;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Сумма = ТаблицаКомисии.НП;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Для импортных товаров сформируем проводки по счету ГТД.
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.Рассчитать(, ТекущийДокумент(), СчГТД);

	ВыгрузитьТабличнуюЧасть(ТаблицаДокумента, "Товар,Количество,ГТД");
	ТаблицаДокумента.Свернуть("Товар,ГТД","Количество");
	ТаблицаДокумента.ВыбратьСтроки();
	Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл
		Если (ТаблицаДокумента.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) и 
			(ТаблицаДокумента.Товар.СтранаПроисхожд = 0) Тогда
			ОстатокПоГТД = БухИт.СКД(СчГТД, "К",, ТаблицаДокумента.Товар, ТаблицаДокумента.ГТД);
			Если ТаблицаДокумента.Количество > ОстатокПоГТД Тогда
				ТекстСообщения = "По счету ГТД определен остаток "+ОстатокПоГТД+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+
								" товара "+ТаблицаДокумента.Товар+" из необходимых "+ТаблицаДокумента.Количество+" "+ТаблицаДокумента.Товар.ЕдиницаИзмерения+" (строка №"+ТаблицаДокумента.НомерСтроки+").";
				глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			КонецЕсли;
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ТВ";
			Операция.СодержаниеПроводки = "Продан импортный товар";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчГТД;
			Операция.Кредит.Номенклатура = ТаблицаДокумента.Товар;
			Операция.Кредит.ГТД = ТаблицаДокумента.ГТД;
			Операция.Количество = ТаблицаДокумента.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()