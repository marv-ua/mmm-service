////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем НачальнаяДатаДокумента; 
Перем КонтекстФормыПодбора;
Перем Новый;
Перем СписокДействий;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//*****************************************************************************
// ВидимостьГТД(ИсключитьСтроку)
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  1 - в табличной части документа есть импортные товары.
//  2 - в табличной части документа нет импортных товаров.
//
// Описание:
//  Определяет есть ли в табличной части документа импортные товары.
//
Функция ВидимостьГТД()

		Т = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(Т, "Товар");
		Т.ВыбратьСтроки();
		Пока Т.ПолучитьСтроку() = 1 Цикл
			Если (Т.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) и 
					(Т.Товар.СтранаПроисхожд = 0) Тогда
				Возврат 1;
			КонецЕсли;
		КонецЦикла;
		Возврат 0;
	
КонецФункции // ВидимостьГТД()

//******************************************************************************
// РассчитатьНалоги()
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа 
// в зависимости от найденных ставок налогов и выбранного варианта формирования
// отпускных цен.
//
Процедура РассчитатьНалоги()
	
	Форма.НДС.Видимость(глПризнакУчетаНалога(Контекст, "НДС"));
	Форма.НП.Видимость(глПризнакУчетаНалога(Контекст, "НП"));    
	НДС = глПоказательДокумента(Контекст, "НДС");
	НП = глПоказательДокумента(Контекст, "НП");
	Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");

КонецПроцедуры // РассчитатьНалоги()

//*****************************************************************************
// Пересчет(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - Строка. Идентификатор колонки из формулы которой вызывается
//                 процедура.
//
// Вызывается из формул элементов диалога:
//  Колонка "Товар",
//  Колонка "Количество",
//  Колонка "Цена",
//  Колонка "Сумма",
//  Колонка "НДС",
//  Колонка "НП".
//
// Описание:
//  Пересчитывает значения численных реквизитов табличной части документа.
//
Процедура Пересчет(ИмяРеквизита="")
		
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;

	Если Товар.Выбран() = 1 Тогда
		Если (ИмяРеквизита = "Товар") Тогда
			Цена = глПолучитьЦену(Контекст,Товар,ТипЦен,ДатаДок,"");
			//глСуммаДокумента(Контекст, Товар);
			Если Количество <> 0 Тогда
				Пересчет("Цена");
			КонецЕсли;
			Если (Форма.ПодписьКомитента.Видимость() = 0) и (Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
 				Форма.ИспользоватьСлой("Комиссия", 1);
 			КонецЕсли;
 			
			Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) и 
					(Товар.СтранаПроисхожд = 0) Тогда
				Форма.ГТД.Видимость(1);
			КонецЕсли;
		ИначеЕсли (ИмяРеквизита = "Количество") Тогда
			Сумма = Цена*Количество;
			РассчитатьНалоги();
	    ИначеЕсли (ИмяРеквизита = "Цена") Тогда
			Сумма = Цена*Количество;
			РассчитатьНалоги();
		ИначеЕсли (ИмяРеквизита = "Сумма") Тогда
			РассчитатьНалоги();
			Цена = ?(Количество = 0, Сумма, Сумма/Количество);
		ИначеЕсли (ИмяРеквизита = "НДС") или (ИмяРеквизита = "НП") Тогда
			Если ПродажаОблагаетсяЕНВД = 0 Тогда
			    Всего = глПоказательДокумента(Контекст, "СуммаСНалогами");
				
			Иначе
				Всего = Сумма;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // Пересчет()


//******************************************************************************
Процедура ПересчитатьЦены()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Пересчет("Товар");
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************
// ПриВыбореВариантаРасчетаНалогов()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "ВариантРасчетаНалогов".
//
// Описание:
//  Пересчитывает суммы в документе при смене варианта расчета налогов.
//
Процедура ПриВыбореВариантаРасчетаНалогов()
	
	Если КоличествоСтрок() > 0 Тогда
		
		ОбщееКоличество = КоличествоСтрок();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Пересчет("Сумма");
			Состояние("Обработано: " + Окр(НомерСтроки/ОбщееКоличество*100, 0, 1) + "%");
		КонецЦикла;
	КонецЕсли;
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		НДС = ?(УчитыватьНДС = 0, 0, НДС);
		НП = ?(УчитыватьНП = 0, 0, НП);
	КонецЦикла;
	Форма.НДС.Видимость(УчитыватьНДС);
	Форма.НП.Видимость(УчитыватьНП);
	
КонецПроцедуры // ПриВыбореВариантаРасчетаНалогов() 

//*****************************************************************************   
// ПриВыбореТипаЦен()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Тип цен"
// 
// Описание:
//  Проверяет соответствие типа цен.
//
Процедура ПриВыбореТипаЦен()
	Если (ТипЦен.Выбран()=1)и(КоличествоСтрок()>0) Тогда
		Если Вопрос("Перезаполнить цены в документе?","Да+Нет",60) = "Да" Тогда
			ПересчитатьЦены();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


//*****************************************************************************
// ПриУчетеЕНВД()
//
// Вызывается из формул элементов диалога:
//  Флаг "ПродажаОблагаетсяЕНВД".
//
// Описание:
//  Пересчитывает суммы налогов
//
Процедура ПриУчетеЕНВД()
	
	Флаг = ?(ПродажаОблагаетсяЕНВД = 1, 0, 1);
	Форма.ПодписьВарианта.Доступность(Флаг);
	Форма.ВариантРасчетаНалогов.Доступность(Флаг);

	Если Флаг = 0 Тогда
		Если (ВариантРасчетаНалогов.СтавкаНП = глБезНалога("НП")) и
			 (ВариантРасчетаНалогов.СтавкаНДС = глБезНалога("НДС")) Тогда
			Возврат;
		КонецЕсли;
		
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			Если (СпрВариант.СтавкаНП = глБезНалога("НП")) и
				 (СпрВариант.СтавкаНДС = глБезНалога("НДС")) Тогда
				ВариантРасчетаНалогов = СпрВариант.ТекущийЭлемент();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если (ВариантРасчетаНалогов.СтавкаНП = глБезНалога("НП")) и
			 (ВариантРасчетаНалогов.СтавкаНДС = глБезНалога("НДС")) Тогда
		Иначе
			 СпрВариант.Новый();
			 СпрВариант.Наименование = "Без налогов";
			 СпрВариант.СтавкаНП = глБезНалога("НП");
			 СпрВариант.СтавкаНДС = глБезНалога("НДС");
			 СпрВариант.Записать();
			 ВариантРасчетаНалогов = СпрВариант.ТекущийЭлемент();
		КонецЕсли;

	Иначе
		ВРН = Константа.ОсновнойВариантРасчетаНалоговОтгрузки;
		Если (ВРН.СтавкаНП.Ставка = 0) и
			 (ВРН.СтавкаНДС.Ставка = 0) Тогда
			ВариантРасчетаНалогов = ВРН;
		КонецЕсли;
    КонецЕсли;
	ПриВыбореВариантаРасчетаНалогов();
	
КонецПроцедуры // ПриУчетеЕНВД()

//******************************************************************************
// ПредставлениеКомитента()
//
// Вызывается из формул элементов диалога:
//  Текст "ПредставлениеКомитента"
//
// Возвращаемое значение:
//  Стрка - наименование комитента.
//
// Описание:
//  Формурует строку с наименованием комитента, поставившего товар.
//
Функция ПредставлениеКомитента()
	
	Перем Предст;

    Если Комитент.Выбран() = 1 Тогда
    	Предст = СокрЛП(Комитент.Наименование);
	Иначе
    	Предст = "<Автовыбор>";
	КонецЕсли;
	Возврат Предст;
	
КонецФункции // ПредставлениеКомитента()

//******************************************************************************
// ПредставлениеДоговораКомиссии()
//
// Вызывается из формул элементов диалога:
//  Текст "ПредставлениеДоговораКомиссии"
//
// Возвращаемое значение:
//  Стрка - наименование договора.
//
// Описание:
//  Формурует строку с наименованием договора с комитентом, по которому был
// поставлен товар.
//
Функция ПредставлениеДоговораКомиссии()
	
	Перем Предст;

    Если ДоговорКомиссии.Выбран() = 1 Тогда
    	Предст = СокрЛП(ДоговорКомиссии.Наименование);
	Иначе
    	Предст = "<Автовыбор>";
	КонецЕсли;
	Возврат Предст;
	
КонецФункции // ПредставлениеДоговораКомиссии()

//******************************************************************************
// ВыборКомитента()
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаВыбораКомитнета"
//
// Описание:
//  Устанавливает значение реквизита табличной части "Комитент".
//
Процедура ВыборКомитента()
	
	Если Товар.Выбран() = 0 Тогда
	ИначеЕсли Товар.ТипНоменклатуры.Выбран() = 0 Тогда
	ИначеЕсли Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
	ИначеЕсли Товар.ТипТовара.Выбран() = 0 Тогда
	ИначеЕсли Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
		ПунктМеню = 1;
		Меню = СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение("Автовыбор при проведении");
		Меню.ДобавитьЗначение("Подобрать по бух.итогам");
		Меню.ДобавитьЗначение("Выбрать из справочника");
		Меню.ВыбратьЗначение(,,ПунктМеню,,1);
		Если ПунктМеню = 1 Тогда
			Комитент = "";
			ДоговорКомиссии = "";

		ИначеЕсли ПунктМеню = 2 Тогда
			Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
				Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
								|Расчет итогов выполняется в режиме
								|""Операции - Управление бухгалтерскими итогами"".");
				
			ИначеЕсли (Выбран() = 0) или (Модифицированность() = 1) Тогда
				Предупреждение("Для подбора комитента по данным бухгалтерского учета
								|необходимо записать документ."); 
			
			Иначе
				БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
				ТаблицаКомитентов = СоздатьОбъект("ТаблицаЗначений");
				ТаблицаКомитентов.НоваяКолонка("Комитент",,,,,20);
				ТаблицаКомитентов.НоваяКолонка("ДоговорКомиссии",,,,"Договор",20);
				ТаблицаКомитентов.НоваяКолонка("Остаток",,,,,10,"Ч10.2.,",2);
				ТаблицаКомитентов.НоваяКолонка("Сумма",,,,,15,"Ч15.2-,",2);
				ТаблицаКомитентов.НоваяКолонка("Цена",,,,,10,"Ч10.2-,",2);
				
				БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, Товар, 2);
				БухИт.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
				БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"КТР");
				БухИт.ВыбратьСубконто(3);
				Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
					ТаблицаКомитентов.НоваяСтрока();
					ТаблицаКомитентов.Комитент = БухИт.Субконто(3).Владелец;
					ТаблицаКомитентов.ДоговорКомиссии = БухИт.Субконто(3);
					ТаблицаКомитентов.Остаток = БухИт.СНД("К");
					ТаблицаКомитентов.Сумма = БухИт.СНД("С");
					ТаблицаКомитентов.Цена = ТаблицаКомитентов.Сумма / ТаблицаКомитентов.Остаток;
				КонецЦикла;
				Позиция = 1;
				Если ТаблицаКомитентов.ВыбратьСтроку(Позиция,"Выберите комитента") = 0 Тогда
				ИначеЕсли Позиция > 0 Тогда
					Комитент = ТаблицаКомитентов.ПолучитьЗначение(Позиция,"Комитент");
					Дог = ТаблицаКомитентов.ПолучитьЗначение(Позиция,"ДоговорКомиссии");
					Если ТипЗначенияСтр(Дог) = "Справочник" Тогда
						ДоговорКомиссии = Дог;
					Иначе
						ДоговорКомиссии = "";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

		Иначе //Если ПунктМеню = 3 Тогда
			СпрКонтр = СоздатьОбъект("Справочник.Контрагенты");
			Если СпрКонтр.Выбрать("Выберите комитента",) = 1 Тогда
				Комитент = СпрКонтр.ТекущийЭлемент();
				глПриВыбореКонтрагента(Комитент,ДоговорКомиссии);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ВыборКомитента()

//******************************************************************************
// ВыборДоговораКомиссии()
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаВыбораДоговораКомиссии"
//
// Описание:
//  Устанавливает значение реквизита табличной части "ДоговорКомиссии".
//
Процедура ВыборДоговораКомиссии()
	
	Если Товар.Выбран() = 0 Тогда
	ИначеЕсли Товар.ТипНоменклатуры.Выбран() = 0 Тогда
	ИначеЕсли Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
	ИначеЕсли Товар.ТипТовара.Выбран() = 0 Тогда
	ИначеЕсли Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
		ПунктМеню = 1;
		Меню = СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение("Автовыбор при проведении");
		Меню.ДобавитьЗначение("Подобрать по бух.итогам");
		Меню.ДобавитьЗначение("Выбрать из справочника");
		Меню.ВыбратьЗначение(,,ПунктМеню,,1);
		Если ПунктМеню = 1 Тогда
			ДоговорКомиссии = "";
			
		ИначеЕсли ПунктМеню = 2 Тогда
			Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
				Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
				|Расчет итогов выполняется в режиме
				|""Операции - Управление бухгалтерскими итогами"".");
				
			ИначеЕсли (Выбран() = 0) или (Модифицированность() = 1) Тогда
				Предупреждение("Для подбора договора комиссии по данным бухгалтерского учета
				|необходимо записать документ."); 
				
			Иначе
				БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
				ТаблицаКомитентов = СоздатьОбъект("ТаблицаЗначений");
				ТаблицаКомитентов.НоваяКолонка("Комитент",,,,,20);
				ТаблицаКомитентов.НоваяКолонка("ДоговорКомиссии",,,,"Договор",20);
				ТаблицаКомитентов.НоваяКолонка("Остаток",,,,,10,"Ч10.2.,",2);
				ТаблицаКомитентов.НоваяКолонка("Сумма",,,,,15,"Ч15.2-,",2);
				ТаблицаКомитентов.НоваяКолонка("Цена",,,,,10,"Ч10.2-,",2);
				
				БухИт.ИспользоватьСубконто(ВидыСубконто.Номенклатура, Товар, 2);
				БухИт.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
				БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
				БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"КТР");
				БухИт.ВыбратьСубконто(3);
				Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
					Если (Комитент.Выбран()=1) и (БухИт.Субконто(3).Владелец <> Комитент) Тогда
						Продолжить;
					КонецЕсли;
					ТаблицаКомитентов.НоваяСтрока();
					ТаблицаКомитентов.Комитент = БухИт.Субконто(3).Владелец;
					ТаблицаКомитентов.ДоговорКомиссии = БухИт.Субконто(3);
					ТаблицаКомитентов.Остаток = БухИт.СНД("К");
					ТаблицаКомитентов.Сумма = БухИт.СНД("С");
					ТаблицаКомитентов.Цена = ТаблицаКомитентов.Сумма / ТаблицаКомитентов.Остаток;
				КонецЦикла;
				
				Позиция = 1;
				Если Комитент.Выбран() = 1 Тогда
					ЗаголовокВыбора = "Выберите договор комиссии";
				Иначе
					ЗаголовокВыбора = "Выберите комитента";
				КонецЕсли;
				Если ТаблицаКомитентов.ВыбратьСтроку(Позиция,"Выберите комитента") = 0 Тогда
				ИначеЕсли Позиция > 0 Тогда
					Если Комитент.Выбран() = 0 Тогда
						Комитент = ТаблицаКомитентов.ПолучитьЗначение(Позиция,"Комитент");
					КонецЕсли;
					Дог = ТаблицаКомитентов.ПолучитьЗначение(Позиция,"ДоговорКомиссии");
					Если ТипЗначенияСтр(Дог) = "Справочник" Тогда
						ДоговорКомиссии = Дог;
					Иначе
						ДоговорКомиссии = "";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

		Иначе //Если ПунктМеню = 3 Тогда
			Если Комитент.Выбран() = 0 Тогда
				СпрКонтр = СоздатьОбъект("Справочник.Контрагенты");
				Если СпрКонтр.Выбрать("Выберите комитента",) = 1 Тогда
					Комитент = СпрКонтр.ТекущийЭлемент();
					глПриВыбореКонтрагента(Комитент,ДоговорКомиссии);
				КонецЕсли;
			КонецЕсли;
			Если Комитент.Выбран() = 1 Тогда
				СпрДог = СоздатьОбъект("Справочник.Договоры");
				СпрДог.ИспользоватьВладельца(Комитент);
				Если СпрДог.Выбрать("Выберите договор комиссии",) = 1 Тогда
					ДоговорКомиссии = СпрДог.ТекущийЭлемент();
					глПриВыбореДоговора(Комитент,ДоговорКомиссии);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ВыборДоговораКомиссии()

//*****************************************************************************
// ИтоговаяСтрока()
// 
// Вызывается из формул элементов диалога:
//  Текст ИтоговаяСтрока.
//
// Описание:
//  Формирует строку, содержащую итоговые суммы колонок табличной части.
//
Функция ИтоговаяСтрока()
	
	ИтСтр = "Итого отгружено на сумму: " + СокрЛ(Формат(Итог("Всего"),"Ч20.2-,"));
			
	Если ПродажаОблагаетсяЕНВД = 0 Тогда
		ИтСтр = ИтСтр + ", в т.ч. НДС: " + СокрЛ(Формат(Итог("НДС"),"Ч20.2-,"));
	КонецЕсли;
	
	Если Итог("НП") > 0 Тогда
		ИтСтр = ИтСтр + ", НП: " + СокрЛ(Формат(Итог("НП"),"Ч20.2-,"));
	КонецЕсли;
	
	Возврат ИтСтр;
	
КонецФункции // ИтоговаяСтрока()



//*****************************************************************************
// ПриВыбореМестаХранения()
//
// Вызывается из формул элементов диалога:
//  ПолеВвода "МестоХранения".
//
// Описание:
//  Изменяет выбранный склад в открытой форме подбора номенклатуры.
//
Процедура ПриВыбореМестаХранения()
	
	Если ТипЗначения(КонтекстФормыПодбора) = 100 Тогда
		КонтекстФормыПодбора.Форма.Обновить();
	КонецЕсли;
	Если (МестоХранения.Выбран()=1) и (Константа.ИспользоватьТипыЦен <> Нет) Тогда
		Если (МестоХранения.ТипЦен <> ТипЦен)и(КоличествоСтрок()>0) Тогда
			Если Вопрос("Для выбранного склада установлен другой тип цен."+РазделительСтрок+"Перезаполнить цены в документе?","Да+Нет",60) = "Да" Тогда
				ТипЦен = МестоХранения.ТипЦен;
				ПересчитатьЦены();
			КонецЕсли;
		ИначеЕсли МестоХранения.ТипЦен <> ТипЦен Тогда
			ТипЦен = МестоХранения.ТипЦен;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореМестаХранения()

//*****************************************************************************
// Подбор()
//
// Вызывается из формул элементов диалога:
//  Кнопка "КнопкаПодбор".
//
// Описание:
//  Открывает форму подбора номенклатуры.
//
Процедура Подбор()
	
	КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
	КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
	КонтекстФормыПодбора.ДобавитьЗначение(МестоХранения, "МестоХранения");
	КонтекстФормыПодбора.ДобавитьЗначение(Комитент, "Комитент");
	КонтекстФормыПодбора.ДобавитьЗначение(ДоговорКомиссии, "ДоговорКомиссии");
	ОткрытьПодбор("Справочник.Номенклатура", "ДляПодбора", КонтекстФормыПодбора);
	
КонецПроцедуры // Подбор()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

	МестоХранения = глЗначениеПоУмолчанию("ОсновнойСклад");
	Если МестоХранения.Выбран() = 1 Тогда
	    ТипЦен = МестоХранения.ТипЦен;
	КонецЕсли;
	ВРН = Константа.ОсновнойВариантРасчетаНалоговОтгрузки;
	Если (ВРН.СтавкаНП.Ставка = 0) и
		 (ВРН.СтавкаНДС.Ставка = 0) Тогда
		ВариантРасчетаНалогов = ВРН;
	КонецЕсли;
	//Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да Тогда
	//    ПродажаОблагаетсяЕНВД = 1;
	//	ПриУчетеЕНВД();
	//КонецЕсли;           
	Если Константа.РозницаОблагаетсяЕНВД.Получить(ДатаДок) = Перечисление.Булево.Да Тогда
	    ПродажаОблагаетсяЕНВД = 1;
		ПриУчетеЕНВД();
	Иначе
		ПродажаОблагаетсяЕНВД = 0;
	КонецЕсли;
		
КонецПроцедуры // ВводНового()


//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПодбор.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
		Форма.КнопкаВыбораКомитента.Доступность(0);
		Форма.КнопкаВыбораДоговораКомиссии.Доступность(0);
	КонецЕсли;
	КонтекстФормыПодбора = 0;

	Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Количество.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Цена.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Сумма.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НП.ВыполнятьФормулуТолькоПриИзменении(1);
    Форма.ИспользоватьСлой("Основной", 2);
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
	    Форма.ПодписьТипаЦен.Видимость(0);
		Форма.ТипЦен.Видимость(0);
	Иначе
		Форма.ПодписьТипаЦен.Видимость(1);
		Форма.ТипЦен.Видимость(1);
	КонецЕсли;
	
	НайденТоварНаКомиссии = 0;
	ВыбратьСтроки();
	Пока (ПолучитьСтроку() = 1) и (НайденТоварНаКомиссии = 0) Цикл
		Если Товар.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;

		Если (Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) 
			и (Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии) Тогда
			НайденТоварНаКомиссии = 1;
		КонецЕсли;
	КонецЦикла;
	Если НайденТоварНаКомиссии = 1 Тогда
    	Форма.ИспользоватьСлой("Комиссия", 1);
	Иначе
    	
	КонецЕсли;
	НачальнаяДатаДокумента = ДатаДок;
	Флаг = ?(ПродажаОблагаетсяЕНВД = 1, 0, 1);
	Форма.ПодписьВарианта.Доступность(Флаг);
	Форма.ВариантРасчетаНалогов.Доступность(Флаг);
	УчитыватьНП = глПризнакУчетаНалога(Контекст, "НП");
	УчитыватьНДС = глПризнакУчетаНалога(Контекст, "НДС");
	Форма.НДС.Видимость(УчитыватьНДС);
	Форма.НП.Видимость(УчитыватьНП);
	Форма.ГТД.Видимость(ВидимостьГТД())
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ГТД" Тогда
		Флаг = 0;
		КонтекстФормыПодбора = СоздатьОбъект("СписокЗначений");
		КонтекстФормыПодбора.ДобавитьЗначение(Контекст, "Контекст");
		КонтекстФормыПодбора.ДобавитьЗначение(Товар, "Товар");
		ОткрытьФорму("Справочник.ГТД.ДляПодбора", КонтекстФормыПодбора);
		
	ИначеЕсли ЭлементДиалога = "ВариантРасчетаНалогов" Тогда
		Флаг = 0;
		СписокВариантов = СоздатьОбъект("СписокЗначений");
		СпрВариант = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
		СпрВариант.ВыбратьЭлементы();
		Пока СпрВариант.ПолучитьЭлемент() = 1 Цикл
			Если (СпрВариант.СтавкаНП.Ставка = 0) и
				 (СпрВариант.СтавкаНДС.Ставка = 0) Тогда
				СписокВариантов.ДобавитьЗначение(СпрВариант.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;
		Значение = ВариантРасчетаНалогов;
		Если СписокВариантов.ВыбратьЗначение(Значение, , , , 2) = 0 Тогда
			Возврат;
		КонецЕсли;
		ВариантРасчетаНалогов = Значение;
		ПриВыбореВариантаРасчетаНалогов();
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр)
	                                     
	Если ПродажаОблагаетсяЕНВД = 1 Тогда
		Если ИдентЭлемДиалога = "Товар" Тогда
			Если (ВыбЗнач.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция)
			 или (ВыбЗнач.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат) Тогда
				Предупреждение("Реализация продукции или полуфабрикатов не может облагаться ЕНВД!");
				ФлагСтандОбр = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
// 
// Описание:
//  Не позволяет выбирать номер ГТД для не импортных товаров.
//
Процедура ПриНачалеРедактированияСтроки()
	
    Если Товар.Выбран() = 1 Тогда
		Если (Товар.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар) или 
			(Товар.СтранаПроисхожд = 1) Тогда
			Форма.ГТД.Доступность(0);
		Иначе
			Форма.ГТД.Доступность(1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПодбора(ВыбрТовар, Конт)
	
	Если ПродажаОблагаетсяЕНВД = 1 Тогда
		Если (ВыбрТовар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция)
		 или (ВыбрТовар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат) Тогда
				Предупреждение("Реализация продукции или полуфабрикатов не может облагаться ЕНВД!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Кол = 1;
	Если ВвестиЧисло(Кол, "Введите количество", 14, 3) = 0 Тогда
		Возврат;
	ИначеЕсли Кол = 0 Тогда
		Возврат;
	КонецЕсли;

	НоваяСтрока();
	Товар = ВыбрТовар;
	Количество = Кол;
	АктивизироватьСтроку();
	Пересчет("Товар");
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
	Иначе
		Цена = глПолучитьЦену(Контекст,Товар,Конт.ТипЦен,ДатаДок,"");
		Пересчет("Цена");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПодбора()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи() //предопределенная
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.СуммаОперации = Итог("Всего");
	Операция.Содержание = "Продажа в розницу";
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");