////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;
Перем СписокВнереализационныхДоходов, СписокВнереализационныхРасходов;
Перем СписокВидовДокументовДляВыбора;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// ПриИзмененииПризнакаЗадолженности()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Да.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриИзмененииПризнакаЗадолженности()
	
	Если (ПустоеЗначение(ПризнакЗадолженности) = 1) или (ПризнакЗадолженности = Перечисление.ПризнакЗадолженности.НеИзменяется) Тогда
		Если ПустоеЗначение(Контрагент) = 0 Тогда
		    Контрагент = "";
		КонецЕсли;
	    Форма.Контрагент.Доступность(0);

		Если ПустоеЗначение(Договор) = 0 Тогда
		    Договор = "";
		КонецЕсли;
		Форма.Договор.Доступность(0);
		
		НДС = 0;
		Форма.НДС.Доступность(0);

	Иначе
		Форма.Контрагент.Доступность(1);
	    Форма.Договор.Доступность(1);
		Форма.НДС.Доступность(1);	
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииПризнакаЗадолженности()

//******************************************************************************
// ПриИзмененииПризнакаДоходРасход()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Да.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриИзмененииПризнакаДоходРасход()
	
	Если ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Доход Тогда
		НазначитьТип("ВидДоходаРасхода", "Перечисление.ВнереализационныеДоходы");
		Форма.ВидДоходаРасхода.Доступность(1);
		
	ИначеЕсли ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Расход Тогда
	    НазначитьТип("ВидДоходаРасхода", "Перечисление.ВнереализационныеРасходы");
		Форма.ВидДоходаРасхода.Доступность(1);
		
	Иначе                             
		ВидДоходаРасхода = "";
		Форма.ВидДоходаРасхода.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииПризнакаДоходРасход()

//******************************************************************************
// Заполнить()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура Заполнить()
	
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.Установить("КонтекстДокумента", Контекст);
	ОткрытьФормуМодально("Обработка.ФормированиеНалоговыхДокументов", СписокПараметров);
	
КонецПроцедуры // Заполнить()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//*****************************************************************************
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;

	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;

КонецПроцедуры // ВводНового()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если глНовыеПравилаВеденияНУ(ДатаДок) = 1 Тогда
		Предупреждение("Данные, введенные в документ не будут влиять на
		               |налоговый учет, т.к. установлен способ ведения
					   |налогового учета - ""Одновременно с бухгалтерским учетом"" !");
	КонецЕсли;
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр) = "Дата" Тогда
		    ДатаДок = Форма.Параметр;
			Заполнить();
			Если КоличествоСтрок() > 0 Тогда
				Операция.Содержание = "Прочие внереализационные доходы и расходы";
				Записать();
				Сообщить("Сформирован документ " + ТекущийДокумент());
			КонецЕсли;
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаполнить.Доступность(0);
	КонецЕсли;
	                    
	Форма.ПризнакЗадолженности.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ПризнакДоходаРасхода.ВыполнятьФормулуТолькоПриИзменении(1);
	
	СписокВнереализационныхРасходов = СоздатьОбъект("СписокЗначений");
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.СодержаниеИмуществаПереданногоВАренду);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ПроцентыПоДолговымОбязательствам);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.УбыткиПрошлыхЛет);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ДолгиНереальныеКВзысканию);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.КурсовыеРазницы);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.СуммовыеРазницы);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.КупляПродажаИностраннойВалюты);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ПереоценкаИмущества);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ФормированиеРезервовПоСомнительнымДолгам);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.УбытокОтУступкиПраваТребования);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.НДС_ПоСписаннойКредиторскойЗадолженности);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ОперацииСФинансовымиИнструментами);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ОперацииСФинансовымиИнструментамиНеОбращающимися);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ОтрицательнаяРазницаОтПереоценкиИмущества);
	СписокВнереализационныхРасходов.ДобавитьЗначение(Перечисление.ВнереализационныеРасходы.ПрочиеВнереализационныеРасходы);       
	
	СписокВнереализационныхДоходов = СоздатьОбъект("СписокЗначений");
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.СдачаИмуществаВАренду);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ПредоставлениеПравНаРезультатыИнтеллектуальнойДеятельности);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ДолевоеУчастиеВИностранныхОрганизациях);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ПроцентыПоДоговорамЗайма);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ДоходыПрошлыхЛет);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.КурсовыеРазницы);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.СуммовыеРазницы);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.КупляПродажаИностраннойВалюты);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ВосстановлениеРезервов);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ОперацииСФинансовымиИнструментами);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ОперацииСФинансовымиИнструментамиНеОбращающимися);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ПроцентыПоГосударственнымЦеннымБумагам);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0);
	СписокВнереализационныхДоходов.ДобавитьЗначение(Перечисление.ВнереализационныеДоходы.ПрочиеВнереализационныеДоходы);
		
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриРедактированииНовойСтроки()

	ПриИзмененииПризнакаЗадолженности();
	ПриИзмененииПризнакаДоходРасход();
	ДокументБУ.ВидыДляВыбора(СписокВидовДокументовДляВыбора);

КонецПроцедуры // ПриРедактированииНовойСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеРедактированияСтроки()
	                      
	Если (Форма.ТекущаяКолонка() = "ОткрытьДокумент") Тогда
		Если ДокументБУ.Выбран()=0 Тогда
			Предупреждение("Не могу открыть документ, отражающий данную операцию
			                |в бухгалтеском учете: документ не указан!",60);
		Иначе     
			ОткрытьФорму(ДокументБУ);
		КонецЕсли;
		
	Иначе
		ПриИзмененииПризнакаЗадолженности();
		ПриИзмененииПризнакаДоходРасход();
		ДокументБУ.ВидыДляВыбора(СписокВидовДокументовДляВыбора);
	КонецЕсли;

КонецПроцедуры  // ПриНачалеРедактированияСтроки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВидДоходаРасхода" Тогда
		Флаг = 0;                                                            
		Если ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Доход Тогда
			Позиция = СписокВнереализационныхДоходов.НайтиЗначение(ВидДоходаРасхода);
			СписокВнереализационныхДоходов.ВыбратьЗначение(ВидДоходаРасхода,, Позиция,, 2);
			
		ИначеЕсли ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Расход Тогда
			Позиция = СписокВнереализационныхРасходов.НайтиЗначение(ВидДоходаРасхода);
			СписокВнереализационныхРасходов.ВыбратьЗначение(ВидДоходаРасхода,, Позиция,, 2);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи() //предопределенная
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Операция.Содержание = "Прочие внереализационные доходы и расходы";
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");

СписокВидовДокументовДляВыбора = "Выписка,Операция";