////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента; 
Перем Новый;
Перем СписокДействий;
Перем СтатусСоставителя;
Перем ОснованиеПлатежа;
Перем ТипПлатежа;
Перем ПолучательДоВыбораКонтрагента;
Перем ДоговорСтарый, СуммаСтарая, НДССтарый, ДоговорСчетФактура, ДокСчетФактура; //NDline

//******************************************************************************
// ПолучитьСпискиСтатусовОснованийТипов()
//
Процедура ПолучитьСпискиСтатусовОснованийТипов()
	
	СтатусСоставителя = СоздатьОбъект("СписокЗначений");
	
	Если ДатаДок < '24.11.2009' Тогда 
		
		Если ДатаДок >= '01.01.2005' Тогда
			СтатусСоставителя.ДобавитьЗначение("01", "01 - налогоплательщик (плательщик сборов) - юридическое лицо");
			
		Иначе
			СтатусСоставителя.ДобавитьЗначение("01", "01 - налогоплательщик (плательщик сборов)");
		КонецЕсли;
		
		СтатусСоставителя.ДобавитьЗначение("02", "02 - налоговый агент");
		СтатусСоставителя.ДобавитьЗначение("03", "03 - сборщик налогов и сборов");
		СтатусСоставителя.ДобавитьЗначение("04", "04 - налоговый орган");
		
		Если ДатаДок >= '01.01.2005' Тогда
			СтатусСоставителя.ДобавитьЗначение("05", "05 - служба судебных приставов");
			
		Иначе
			СтатусСоставителя.ДобавитьЗначение("05", "05 - территориальные органы Федеральной службы судебных приставов");
		КонецЕсли;
		
		СтатусСоставителя.ДобавитьЗначение("06", "06 - участник внешнеэкономической деятельности");
		СтатусСоставителя.ДобавитьЗначение("07", "07 - таможенный орган");
		СтатусСоставителя.ДобавитьЗначение("08", "08 - плательщик иных обязательных платежей"); 
		
		Если ДатаДок >= '01.01.2005' Тогда
			СтатусСоставителя.ДобавитьЗначение("09", "09 - налогоплательщик (плательщик сборов) - ИП");
			СтатусСоставителя.ДобавитьЗначение("10", "10 - налогоплательщик (плательщик сборов) - частный нотариус"); 
			СтатусСоставителя.ДобавитьЗначение("11", "11 - налогоплательщик (плательщик сборов) - адвокат"); 
			СтатусСоставителя.ДобавитьЗначение("12", "12 - налогоплательщик (плательщик сборов) - глава КФХ"); 
			СтатусСоставителя.ДобавитьЗначение("13", "13 - налогоплательщик (плательщик сборов) - иное физическое лицо"); 
			СтатусСоставителя.ДобавитьЗначение("14", "14 - налогоплательщик, производящий выплаты физическим лицам"); 
			СтатусСоставителя.ДобавитьЗначение("15", "15 - кредитная организация"); 
		КонецЕсли;
		
	Иначе 
		
		СтатусСоставителя.ДобавитьЗначение("01", "01 - налогоплательщик (плательщик сборов) - юридическое лицо");
		СтатусСоставителя.ДобавитьЗначение("02", "02 - налоговый агент");
		СтатусСоставителя.ДобавитьЗначение("03", "03 - организация федеральной почтовой связи");
		СтатусСоставителя.ДобавитьЗначение("04", "04 - налоговый орган");
		СтатусСоставителя.ДобавитьЗначение("05", "05 - территориальные органы Федеральной службы судебных приставов");
		СтатусСоставителя.ДобавитьЗначение("06", "06 - участник внешнеэкономической деятельности - юридическое лицо");
		СтатусСоставителя.ДобавитьЗначение("07", "07 - таможенный орган");
		СтатусСоставителя.ДобавитьЗначение("08", "08 - плательщик иных обязательных платежей"); 
		СтатусСоставителя.ДобавитьЗначение("09", "09 - налогоплательщик (плательщик сборов) - ИП");
		СтатусСоставителя.ДобавитьЗначение("10", "10 - налогоплательщик (плательщик сборов) - нотариус, занимающегося частной практикой"); 
		СтатусСоставителя.ДобавитьЗначение("11", "11 - налогоплательщик (плательщик сборов) - адвокат"); 
		СтатусСоставителя.ДобавитьЗначение("12", "12 - налогоплательщик (плательщик сборов) - глава КФХ"); 
		СтатусСоставителя.ДобавитьЗначение("13", "13 - налогоплательщик (плательщик сборов) - иное физическое лицо"); 
		СтатусСоставителя.ДобавитьЗначение("14", "14 - налогоплательщик, производящий выплаты физическим лицам"); 
		СтатусСоставителя.ДобавитьЗначение("15", "15 - кредитная организация - документ на общую сумму без открытия банковского счета физическому лицу"); 		
		СтатусСоставителя.ДобавитьЗначение("16", "16 - участник внешнеэкономической деятельности - физическое лицо"); 
		СтатусСоставителя.ДобавитьЗначение("17", "17 - участник внешнеэкономической деятельности - ИП"); 
		СтатусСоставителя.ДобавитьЗначение("18", "18 - плательщик таможенных платежей, не являющийся декларантом"); 
		СтатусСоставителя.ДобавитьЗначение("19", "19 - организации, оформившие перечисление средств, удержанных из заработка физического лица в счет погашения задолженности по таможенным платежам"); 
		СтатусСоставителя.ДобавитьЗначение("20", "20 - кредитная организация - документ по каждому платежу физического лица без открытия банковского счета"); 
		
	КонецЕсли;
	
	ОснованиеПлатежа = СоздатьОбъект("СписокЗначений");
	ОснованиеПлатежа.ДобавитьЗначение("ТП");
	ОснованиеПлатежа.ДобавитьЗначение("ЗД");
	
	Если ДатаДок >= '01.01.2005' Тогда
		ОснованиеПлатежа.ДобавитьЗначение("БФ");
	КонецЕсли;
	
	ОснованиеПлатежа.ДобавитьЗначение("ТР");
	ОснованиеПлатежа.ДобавитьЗначение("РС");
	ОснованиеПлатежа.ДобавитьЗначение("ОТ");
	ОснованиеПлатежа.ДобавитьЗначение("РТ");
	ОснованиеПлатежа.ДобавитьЗначение("ВУ");
	ОснованиеПлатежа.ДобавитьЗначение("ПР");
	ОснованиеПлатежа.ДобавитьЗначение("АП");
	ОснованиеПлатежа.ДобавитьЗначение("АР");
	
	Если ДатаДок >= '24.11.2009' Тогда 
		ОснованиеПлатежа.ДобавитьЗначение("ДЕ");
		ОснованиеПлатежа.ДобавитьЗначение("ПО");
		ОснованиеПлатежа.ДобавитьЗначение("КВ");
		ОснованиеПлатежа.ДобавитьЗначение("КТ");
		ОснованиеПлатежа.ДобавитьЗначение("ИД");
		ОснованиеПлатежа.ДобавитьЗначение("ИП");
		ОснованиеПлатежа.ДобавитьЗначение("ТУ");
		ОснованиеПлатежа.ДобавитьЗначение("БД");
		ОснованиеПлатежа.ДобавитьЗначение("ИН");
		ОснованиеПлатежа.ДобавитьЗначение("КП");
	КонецЕсли;
	
	ТипПлатежа = СоздатьОбъект("СписокЗначений");
	ТипПлатежа.ДобавитьЗначение("НС");
	
	Если ДатаДок >= '01.01.2005' Тогда
		ТипПлатежа.ДобавитьЗначение("ПЛ");
		ТипПлатежа.ДобавитьЗначение("ГП");
		ТипПлатежа.ДобавитьЗначение("ВЗ");
	КонецЕсли;
	
	ТипПлатежа.ДобавитьЗначение("АВ");
	ТипПлатежа.ДобавитьЗначение("ПЕ");
	ТипПлатежа.ДобавитьЗначение("ПЦ");
	ТипПлатежа.ДобавитьЗначение("СА");
	ТипПлатежа.ДобавитьЗначение("АШ");
	ТипПлатежа.ДобавитьЗначение("ИШ");
	
	Если ДатаДок >= '24.11.2009' Тогда
		ТипПлатежа.ДобавитьЗначение("ШТ");
		ТипПлатежа.ДобавитьЗначение("ЗД");
		ТипПлатежа.ДобавитьЗначение("ТП");
	КонецЕсли;
	
	Если ДатаДок < '01.01.2005' Тогда
		Если (СтатусСоставителяПлДок = "09") или
			 (СтатусСоставителяПлДок = "10") или
			 (СтатусСоставителяПлДок = "11") или
			 (СтатусСоставителяПлДок = "12") или
			 (СтатусСоставителяПлДок = "13") или
			 (СтатусСоставителяПлДок = "14") или
			 (СтатусСоставителяПлДок = "15") Тогда
			 	
			СтатусСоставителяПлДок = "";
			Сообщить("Дата документа изменена на более раннюю, чем 01.01.2005 г. Поле ""Статус составителя"" очищено.", "!");
		КонецЕсли;
		
		Если (ПоказательОснования = "БФ") Тогда
			ПоказательОснования = "";
			Сообщить("Дата документа изменена на более раннюю, чем 01.01.2005 г. Поле ""Основание платежа"" очищено.", "!");
		КонецЕсли;
		
		Если (ПоказательТипа = "ПЛ") или
			 (ПоказательТипа = "ГП") или
			 (ПоказательТипа = "ВЗ") Тогда
			 	
			ПоказательТипа = "";
			Сообщить("Дата документа изменена на более раннюю, чем 01.01.2005 г. Поле ""Тип платежа"" очищено.", "!");
		КонецЕсли;
		
	Иначе
		Если Лев(СокрЛП(ПоказательПериода), 1) = "Д" Тогда
		    Сообщить("Начиная с 01.01.2005 г., налоговый период ""Декада"" не используется. Поле ""Период"" очищено.", "!");
			ПоказательПериода = "";
		КонецЕсли; 
		
		Если ДатаДок < '24.11.2009' Тогда
			Если (СтатусСоставителяПлДок = "16") или
			(СтатусСоставителяПлДок = "17") или
			(СтатусСоставителяПлДок = "18") или
			(СтатусСоставителяПлДок = "19") или
			(СтатусСоставителяПлДок = "20") Тогда				
				СтатусСоставителяПлДок = "";
				Сообщить("Дата документа изменена на более раннюю, чем 24.11.2009 г. Поле ""Статус составителя"" очищено.", "!");
				
				
				Если (СтрДлина(ПоказательПериода) > 0) И (СтрЧислоВхождений(ПоказательПериода,".") < 2) Тогда
					ПоказательПериода = "";
					Сообщить("Дата документа изменена на более раннюю, чем 24.11.2009 г. Поле ""Период (код)"" очищено.", "!");					
				КонецЕсли;
				
			КонецЕсли; 
						
			Если Найти("ДЕ,ПО,КВ,КТ,ИД,ИП,ТУ,БД,ИН,КП",ПоказательОснования) > 0 Тогда				
				ПоказательОснования = "";
				Сообщить("Дата документа изменена на более раннюю, чем 24.11.2009 г. Поле ""Основание платежа"" очищено.", "!");
			КонецЕсли; 
			
			Если Найти("ШТ,ЗД,ТП",ПоказательТипа) > 0 Тогда				
				ПоказательТипа = "";
				Сообщить("Дата документа изменена на более раннюю, чем 24.11.2009 г. Поле ""Тип платежа"" очищено.", "!");
			КонецЕсли; 
			
		КонецЕсли;		
		
	КонецЕсли;

КонецПроцедуры // ПолучитьСпискиСтатусовОснованийТипов() 

//******************************************************************************
// ЗаполнениеКППплательщика()
//
// Описание:
//  Заполняется КПП плательщика в том случае, если он еще не заполнен.
//
Процедура ЗаполнениеКППплательщика()
	            
	// Если КПП плательщика уже заполнен, то его перезаполнять не надо.
	Если ПустоеЗначение(КППплательщика) = 0 Тогда
		Возврат;
	
	// В неналоговых платежах КПП указывается только если в банковском
	// расчетном счете установлен флажок "Всегда указывать КПП в платежных документах".
	ИначеЕсли ПеречислениеНалога = 0 Тогда
		Если РасчетныйСчет.ВсегдаУказыватьКПП = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	глПлатежныеРеквизиты(РасчетныйСчет.ТекущийЭлемент(),,,,,,, КППплательщика, 2);
	
КонецПроцедуры // ЗаполнениеКППплательщика()

//******************************************************************************
// ЗаполнениеКППполучателя()
//
// Описание:
//  Заполняется КПП получателя в том случае, если он еще не заполнен.
//
Процедура ЗаполнениеКППполучателя()
	            
	// Если КПП получателя уже заполнен, то его перезаполнять не надо.
	Если (ПустоеЗначение(КППполучателя) = 0) и (ПолучательДоВыбораКонтрагента = Контрагент) Тогда
		Возврат;
	
	// В неналоговых платежах КПП указывается только если в банковском
	// расчетном счете или в расчетном счете контрагента установлен
	// флажок "Всегда указывать КПП в платежных документах".
	ИначеЕсли ПеречислениеНалога = 0 Тогда
		КППполучателя = "";
		Если (СчетКонтрагента.ВсегдаУказыватьКПП = 0)
		   и (РасчетныйСчет.ВсегдаУказыватьКПП = 0) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	глПлатежныеРеквизиты(СчетКонтрагента.ТекущийЭлемент(),,,,,,, КППполучателя, 2);
	
КонецПроцедуры // ЗаполнениеКППполучателя()

//_____________________________________________________________________________
Процедура ПриВыбореСчетаКонтрагента()
	
	Если СчетКонтрагента.Выбран() = 1 Тогда
		Если СчетКонтрагента.Владелец <> Контрагент Тогда
			Контрагент = СчетКонтрагента.Владелец;
			глПриВыбореКонтрагента(Контрагент, Договор);
		КонецЕсли;
		Если (ПустоеЗначение(Содержание) = 1) и (ПустоеЗначение(СчетКонтрагента.Назначение)=0) Тогда 
			Содержание=СчетКонтрагента.Назначение;
		КонецЕсли;               
	КонецЕсли;
	//Если (ПустоеЗначение(Содержание) = 1) и (ПустоеЗначение(Договор) = 0) Тогда NDline
	//    Содержание = "По "+СокрЛП(Договор.Наименование);
	//КонецЕсли; NDline
	
	ЗаполнениеКППполучателя();
	
КонецПроцедуры //ПриВыбореСчетаКонтрагента
//_____________________________________________________________________________
Процедура ПриВыбореДоговора()
	глПриВыбореДоговора(Контрагент, Договор);
	Если СчетКонтрагента.Владелец <> Контрагент Тогда
		СчетКонтрагента = "";
	КонецЕсли;
	ПриВыбореСчетаКонтрагента();
	Если (Найти(Содержание, СокрЛП(Договор.Наименование))=0) и (ПустоеЗначение(Договор) = 0) Тогда //NDline
	    Содержание = Содержание + "; "+СокрЛП(Договор.Наименование);
		ДобавитьВТабличнуюЧасть = 1;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
		    Если ДоговорТ = Договор Тогда
				ДобавитьВТабличнуюЧасть= 0;
				Прервать;
		    КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ДобавитьВТабличнуюЧасть = 1 Тогда
        НоваяСтрока();
		ДоговорТ = Договор
	КонецЕсли;//NDline
КонецПроцедуры //ПриВыбореДоговора
//_____________________________________________________________________________
Процедура ПриВыбореКонтрагента()
	Если КоличествоСтрок() > 0 Тогда //NDline
		ВыбратьСтроки();
		ПолучитьСтроку();
		Если ДоговорТ.Владелец <> Контрагент Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли; //NDline
	глПриВыбореКонтрагента(Контрагент, Договор);
	Если СчетКонтрагента.Владелец <> Контрагент Тогда
		СчетКонтрагента = "";
	КонецЕсли;
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
	    СчетКонтрагента = глРасчетныйСчетКонтрагента(Контрагент);
		ПриВыбореСчетаКонтрагента();
	КонецЕсли;
КонецПроцедуры //ПриВыбореКонтрагента 

//_____________________________________________________________________________
Процедура УстДату()
	Если ДатаДок < '15.02.2000' Тогда
		СрокПлатежа = ДатаДок;
	Иначе
		СрокПлатежа = "";
	КонецЕсли;
	
	ПолучитьСпискиСтатусовОснованийТипов();
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура РасчетНДС()
	Если СтавкаНДС.Выбран() = 1 Тогда
	    СтНДС = СтавкаНДС.Ставка;
	Иначе
		СтНДС = 0;
	КонецЕсли;
	НДС = Сумма*СтНДС/(100+СтНДС);
КонецПроцедуры
//_____________________________________________________________________________
//NDline
Процедура ЗаполнитьОсновныеСуммы()
	Сумма = Итог("СуммаТ");
	НДС = Итог("НДСТ");
КонецПроцедуры
//_____________________________________________________________________________
Процедура ЗаполнитьДолги()
	
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На "+Формат(ДатаДок, "ДДДММГГГГ")+" бухгалтерские итоги не рассчитаны!");
		Возврат;
	КонецЕсли;
	Если Контрагент.Выбран() = 0 Тогда
		Предупреждение("Перед заполнением табличной части необходимо выбрать контрагента!");
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Перед заполнением табличная часть будет очищена. Продолжить?", 4) <> 6 Тогда
			Возврат;
		Иначе
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	//Содержание = "";

	Ит60 = СоздатьОбъект("БухгалтерскиеИтоги"); //Ит60.ИспользоватьРазделительУчета(ЮрЛицо);
	Ит60.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
	Ит60.ИспользоватьСубконто(ВидыСубконто.Договоры);
	Если Ит60.ВыполнитьЗапрос(, ДатаДок, "60.1, 76.5") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Ит19 = СоздатьОбъект("БухгалтерскиеИтоги"); //Ит19.ИспользоватьРазделительУчета(ЮрЛицо);
	Ит19.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
	Ит19.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);
	Если Ит19.ВыполнитьЗапрос(, ДатаДок, "19.1, 19.2, 19.3") = 0 Тогда
		Возврат;
	КонецЕсли;
	тзСчетаФактуры = СоздатьОбъект("ТаблицаЗначений");
	тзСчетаФактуры.НоваяКолонка("СчетФактура", "Документ");
	тзСчетаФактуры.НоваяКолонка("Договор", "Справочник.Договоры");
	Ит19.ВыбратьСубконто(1);
	Если Ит19.ПолучитьСубконто(1, , Контрагент) = 1 Тогда
		Ит19.ВыбратьСубконто(2);
		Пока Ит19.ПолучитьСубконто(2) = 1 Цикл
			ТекДокСФ = Ит19.Субконто(2);
			Если Метаданные.Документ(ТекДокСФ.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
				тзСчетаФактуры.НоваяСтрока();
				тзСчетаФактуры.СчетФактура = ТекДокСФ;
				тзСчетаФактуры.Договор = ТекДокСФ.Договор;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Ит60.ВыбратьСубконто(1);
	Если Ит60.ПолучитьСубконто(1, , Контрагент) = 0 Тогда
		Возврат;
	КонецЕсли;
	Ит60.ВыбратьСубконто(2);
	Пока Ит60.ПолучитьСубконто(2) = 1 Цикл
		ТекДоговор = Ит60.Субконто(2);
		СуммаПоДоговору = Ит60.СКК();
		Если СуммаПоДоговору <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПоДоговоруНДС = 0;
		НомСтроки = "";
		Если тзСчетаФактуры.НайтиЗначение(ТекДоговор, НомСтроки, "Договор") = 1 Тогда
			ДокСФ = тзСчетаФактуры.ПолучитьЗначение(НомСтроки, "СчетФактура");
			
			Сумма1 = 0;
			НДС1 = 0;
			Если ДокСФ.Вид() = "СчетФактураПолученный" Тогда
				Сумма1 = ДокСФ.Всего;
				НДС1 = ДокСФ.НДС10 + ДокСФ.НДС20;
			ИначеЕсли (Метаданные.Документ(ДокСФ.Вид()).РеквизитТабличнойЧасти("НДС").Выбран()=1) И (Метаданные.Документ(ДокСФ.Вид()).РеквизитТабличнойЧасти("Всего").Выбран()=1) Тогда
				Попытка
					Сумма1 = ДокСФ.Итог("Всего");
					НДС1 = ДокСФ.Итог("НДС");
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если Сумма1 = 0 Тогда
				ПоДоговоруНДС = НДС1;
			Иначе
				ПоДоговоруНДС = Окр(НДС1*СуммаПоДоговору/Сумма1, 2);
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока();
		ДоговорТ = ТекДоговор;
		СуммаТ = СуммаПоДоговору;
		НДСТ = ПоДоговоруНДС;
		Если (Найти(Содержание, СокрЛП(ДоговорТ.Наименование))=0) и (ПустоеЗначение(ДоговорТ)=0) Тогда
		    Содержание = Содержание + "; "+СокрЛП(ДоговорТ.Наименование);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьОсновныеСуммы();
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура Рассчитать()
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На "+Формат(ДатаДок, "ДДДММГГГГ")+" бухгалтерские итоги не рассчитаны!");
		Возврат;
	КонецЕсли;
	Если Контрагент.Выбран() = 0 Тогда
		Предупреждение("Перед заполнением табличной части необходимо выбрать контрагента!");
		Возврат;
	КонецЕсли;
	
	сзДоговоры = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(сзДоговоры, "ДоговорТ");
	
	Ит60 = СоздатьОбъект("БухгалтерскиеИтоги"); //Ит60.ИспользоватьРазделительУчета(ЮрЛицо);
	Ит60.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
	Ит60.ИспользоватьСубконто(ВидыСубконто.Договоры, сзДоговоры, 2);
	Если Ит60.ВыполнитьЗапрос(, ДатаДок, "60.1, 76.5") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Ит19 = СоздатьОбъект("БухгалтерскиеИтоги"); //Ит19.ИспользоватьРазделительУчета(ЮрЛицо);
	Ит19.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
	Ит19.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);
	Если Ит19.ВыполнитьЗапрос(, ДатаДок, "19.1, 19.2, 19.3") = 0 Тогда
		Возврат;
	КонецЕсли;
	тзСчетаФактуры = СоздатьОбъект("ТаблицаЗначений");
	тзСчетаФактуры.НоваяКолонка("СчетФактура", "Документ");
	тзСчетаФактуры.НоваяКолонка("Договор", "Справочник.Договоры");
	Ит19.ВыбратьСубконто(1);
	Если Ит19.ПолучитьСубконто(1, , Контрагент) = 1 Тогда
		Ит19.ВыбратьСубконто(2);
		Пока Ит19.ПолучитьСубконто(2) = 1 Цикл
			ТекДокСФ = Ит19.Субконто(2);
			Если Метаданные.Документ(ТекДокСФ.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
				тзСчетаФактуры.НоваяСтрока();
				тзСчетаФактуры.СчетФактура = ТекДокСФ;
				тзСчетаФактуры.Договор = ТекДокСФ.Договор;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Ит60.ВыбратьСубконто(1);
	Если Ит60.ПолучитьСубконто(1, , Контрагент) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
	    
		Ит60.ВыбратьСубконто(2);
		Если Ит60.ПолучитьСубконто(2, , ДоговорТ) = 1 Тогда
	    
			СуммаПоДоговору = Ит60.СКК();
			Если СуммаПоДоговору <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ПоДоговоруНДС = 0;
			НомСтроки = "";
			Если тзСчетаФактуры.НайтиЗначение(ДоговорТ, НомСтроки, "Договор") = 1 Тогда
				ДокСФ = тзСчетаФактуры.ПолучитьЗначение(НомСтроки, "СчетФактура");
				
				Сумма1 = 0;
				НДС1 = 0;
				Если ДокСФ.Вид() = "СчетФактураПолученный" Тогда
					Сумма1 = ДокСФ.Всего;
					НДС1 = ДокСФ.НДС10 + ДокСФ.НДС20;
				ИначеЕсли (Метаданные.Документ(ДокСФ.Вид()).РеквизитТабличнойЧасти("НДС").Выбран()=1) И (Метаданные.Документ(ДокСФ.Вид()).РеквизитТабличнойЧасти("Всего").Выбран()=1) Тогда
					Попытка
						Сумма1 = ДокСФ.Итог("Всего");
						НДС1 = ДокСФ.Итог("НДС");
					Исключение
					КонецПопытки;
				КонецЕсли;
				
				Если Сумма1 = 0 Тогда
					ПоДоговоруНДС = НДС1;
				Иначе
					ПоДоговоруНДС = Окр(НДС1*СуммаПоДоговору/Сумма1, 2);
				КонецЕсли;
			КонецЕсли;
			
			СуммаТ = СуммаПоДоговору;
			НДСТ = ПоДоговоруНДС;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьОсновныеСуммы();
КонецПроцедуры
//_____________________________________________________________________________
Процедура НДСПоДоговору(Договор1, Сумма1, НДС1)
	Сумма1 = 0;
	НДС1 = 0;
	ДокСФ = "";
	Если Договор1 = ДоговорСчетФактура Тогда
		ДокСФ = ДокСчетФактура;
	Иначе
		ДоговорСчетФактура = Договор1;
		Ит19 = СоздатьОбъект("БухгалтерскиеИтоги"); //Ит19.ИспользоватьРазделительУчета(ЮрЛицо);
		Ит19.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
		Ит19.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);
		Если Ит19.ВыполнитьЗапрос(, ДатаДок, "19.1, 19.2, 19.3") = 0 Тогда
			Возврат;
		КонецЕсли;
		Ит19.ВыбратьСубконто(1);
		Если Ит19.ПолучитьСубконто(1) = 0 Тогда
			Возврат;
		КонецЕсли;
		Ит19.ВыбратьСубконто(2);
		Пока Ит19.ПолучитьСубконто(2) = 1 Цикл
			ТекДокСФ = Ит19.Субконто(2);
			Если Метаданные.Документ(ТекДокСФ.Вид()).РеквизитШапки("Договор").Выбран() = 1 Тогда
				Если ТекДокСФ.Договор = Договор1 Тогда
					ДокСФ = ТекДокСФ;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ДокСчетФактура = ДокСФ;
	Если ПустоеЗначение(ДокСФ) = 1 Тогда
		Возврат;
	КонецЕсли;
	Если ДокСФ.Вид() = "СчетФактураПолученный" Тогда
		Сумма1 = ДокСФ.Всего;
		НДС1 = ДокСФ.НДС10 + ДокСФ.НДС20;
	ИначеЕсли (Метаданные.Документ(ДокСФ.Вид()).РеквизитТабличнойЧасти("НДС").Выбран()=1) И (Метаданные.Документ(ДокСФ.Вид()).РеквизитТабличнойЧасти("Всего").Выбран()=1) Тогда
		Попытка
			Сумма1 = ДокСФ.Итог("Всего");
			НДС1 = ДокСФ.Итог("НДС");
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриРедактированииТаблицы()
	ИмяРеквизита = Форма.ТекущаяКолонка();
	Если ИмяРеквизита = "ДоговорТ" Тогда
		Если ПустоеЗначение(ДоговорСтарый) = 0 Тогда
			Содержание = СтрЗаменить(Содержание, "; "+СокрЛП(ДоговорСтарый.Наименование), "");
			ДоговорСтарй = "";
		КонецЕсли;
		Если (Найти(Содержание, СокрЛП(ДоговорТ.Наименование))=0) и (ПустоеЗначение(ДоговорТ)=0) Тогда
		    Содержание = Содержание + "; "+СокрЛП(ДоговорТ.Наименование);
		КонецЕсли;
		//Если (ПустоеЗначение(ДоговорТ)=0) И (ДоговорТ<>ДоговорСтарый) И (ДатаДок<=КонецРассчитанногоПериодаБИ()) Тогда
		//	//Если СуммаТ = 0 Тогда
		//		Ит60 = СоздатьОбъект("БухгалтерскиеИтоги"); //Ит60.ИспользоватьРазделительУчета(ЮрЛицо);
		//		Ит60.Рассчитать(,ДатаДок,"60.1, 76.5");
		//		СуммаТ = Ит60.СКК("60.1","С",,Контрагент,ДоговорТ) + Ит60.СКК("76.5","С",,Контрагент,ДоговорТ);
		//	//КонецЕсли;
		//	//Если НДСТ = 0 Тогда
		//		Если СуммаТ = 0 Тогда
		//			НДСТ = 0;
		//		Иначе
		//			ДокСумма = 0; ДокНДС = 0;
		//			НДСПоДоговору(ДоговорТ, ДокСумма, ДокНДС);
		//			Если ДокСумма = 0 Тогда
		//				НДСТ = ДокНДС;
		//			Иначе
		//				НДСТ = Окр(ДокНДС*СуммаТ/ДокСумма, 2);
		//			КонецЕсли;
		//		КонецЕсли;
		//	//КонецЕсли;
		//КонецЕсли;
	ИначеЕсли ИмяРеквизита = "СуммаТ" Тогда
		Если СуммаТ = 0 Тогда
			НДСТ = 0;
		ИначеЕсли СуммаСтарая > 0 Тогда
			НДСТ = НДССтарый * СуммаТ / СуммаСтарая;
		//Иначе
		//	ДокСумма = 0; ДокНДС = 0;
		//	НДСПоДоговору(ДоговорТ, ДокСумма, ДокНДС);
		//	Если ДокСумма = 0 Тогда
		//		НДСТ = ДокНДС;
		//	Иначе
		//		НДСТ = Окр(ДокНДС*СуммаТ/ДокСумма, 2);
		//	КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьОсновныеСуммы();
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	Если НомерЗакладки = 1 Тогда
		Форма.ИспользоватьСлой("Общий,Основной,Обычный", 2);
	ИначеЕсли НомерЗакладки = 2 Тогда
		Форма.ИспользоватьСлой("Общий,СлойТаблица");
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриНачалеРедактированияСтроки()
	ДоговорСтарый = ДоговорТ;
	СуммаСтарая = СуммаТ;
	НДССтарый = НДСТ;
	ДоговорТ.ИспользоватьВладельца(Контрагент);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриРедактированииНовойСтроки()
	ДоговорСтарый = ДоговорТ;
	СуммаСтарая = СуммаТ;
	НДССтарый = НДСТ;
	ДоговорТ.ИспользоватьВладельца(Контрагент);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВводеСтроки()
	Если Контрагент.Выбран() = 0 Тогда
		Предупреждение("Перед заполнением табличной части необходимо выбрать контрагента!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриУдаленииСтроки()
	Если ПустоеЗначение(ДоговорТ) = 0 Тогда
		Содержание = СтрЗаменить(Содержание, "; "+СокрЛП(ДоговорТ.Наименование), "");
	КонецЕсли;
	Сумма = Сумма - СуммаТ;
	НДС = НДС - НДСТ;
КонецПроцедуры
//_____________________________________________________________________________
Функция ФормирСуммаНДС1(Подст,Сумма,НДС,СтавкаНДС)
	СтрПодст = "";
    СтрСумма = "";
	СтрНДС = "";

	Если Подст = Перечисление.ПодстановкаСуммыНДС.БезСуммыБезНДС Тогда
		Возврат СтрПодст;
	КонецЕсли;

	Если (Подст = Перечисление.ПодстановкаСуммыНДС.СуммаНДС)
		или (Подст = Перечисление.ПодстановкаСуммыНДС.СуммаБезНДС) Тогда
	   	СтрСумма = " Cумма "+СокрЛ(Формат(Сумма,"Ч15.2-"));
	КонецЕсли;

	Если (Подст = Перечисление.ПодстановкаСуммыНДС.СуммаНДС)
		или (Подст = Перечисление.ПодстановкаСуммыНДС.БезСуммыНДС) Тогда
		Если СтавкаНДС.Ставка=0 Тогда
			СтрНДС=","+ РазделительСтрок+"без налога (НДС)";
		Иначе
			Если КоличествоСтрок() = 0 Тогда
				СтрНДС=","+ РазделительСтрок+"в т.ч. НДС("+глПредставлениеСтавки(СтавкаНДС)+") - "+СокрЛ(Формат(НДС,"Ч15.2-"));
			Иначе
				СтрНДС=","+ РазделительСтрок+"в т.ч. НДС - "+СокрЛ(Формат(НДС,"Ч15.2-"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	СтрПодст = СтрСумма+СтрНДС;
	Если ПустаяСтрока(СтрПодст)=0 Тогда
		СтрПодст = СтрПодст+"."
	КонецЕсли;

	Возврат СтрПодст;
КонецФункции
//NDline
//******************************************************************************
Процедура ПриСменеВида(ИсточникВызова = "Из диалога")
	Если ПеречислениеНалога = 0 Тогда
	    //Форма.ИспользоватьСлой("Основной,Обычный",2); NDline
		Форма.ИспользоватьЗакладки(1); //NDline
		Форма.Закладки.УдалитьВсе();
		Форма.Закладки.ДобавитьЗначение(1, "Основной");
		Форма.Закладки.ДобавитьЗначение(2, "Табл. часть");
		Форма.ИспользоватьСлой("Общий,Основной,Обычный", 2); //NDline
	Иначе
		Форма.ИспользоватьЗакладки(0); //NDline
		Форма.ИспользоватьСлой("Общий,Основной,Налоги",2); //NDline Форма.ИспользоватьСлой("Основной,Налоги",2);
		Если ИсточникВызова <> "При открытии" Тогда
			АвтоПодстСуммыНДС = Перечисление.ПодстановкаСуммыНДС.БезСуммыБезНДС;
			СтавкаНДС = глБезНалога("НДС");
			НДС = 0;
			ЗаполнениеКППплательщика();
			ЗаполнениеКППполучателя();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПеречислениеНалога(Контроль=0)
	Если (Контроль = 0)и(ПеречислениеНалога = 0) Тогда
		ПеречислениеНалога = 1;
		ПриСменеВида();
		Форма.Обновить(); 
	КонецЕсли;
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(глВзятьКонтекст(Контекст),"Контекст");
	СписокПараметров.ДобавитьЗначение(СтатусСоставителяПлДок,"П101");
	СписокПараметров.ДобавитьЗначение(КодБК,"П104");
	СписокПараметров.ДобавитьЗначение(КодОКАТО,"П105");
	СписокПараметров.ДобавитьЗначение(ПоказательОснования,"П106");
	СписокПараметров.ДобавитьЗначение(ПоказательПериода,"П107");
	СписокПараметров.ДобавитьЗначение(ПоказательНомера,"П108");
	СписокПараметров.ДобавитьЗначение(?(ПустоеЗначение(ПоказательДаты)=1,"", Формат(ПоказательДаты,"Д ДДММГГГГ")),"П109");
	СписокПараметров.ДобавитьЗначение(ПоказательТипа,"П110");
	СписокПараметров.ДобавитьЗначение(Контроль,"Контроль");
	
	Если ДатаДок >= '01.01.2005' Тогда
		Если ДатаДок >= '24.11.2009' Тогда
			ОткрытьФормуМодально("Обработка.ПеречислениеНалога2009",СписокПараметров);
		Иначе
			ОткрытьФормуМодально("Обработка.ПеречислениеНалога2005",СписокПараметров);
		КонецЕсли;
		
	Иначе
		ОткрытьФормуМодально("Обработка.ПеречислениеНалога",СписокПараметров);
	КонецЕсли;
	
	Если Контроль = 0 Тогда
		Если Договор.Выбран() = 1 Тогда
			Если Договор.Владелец <> Контрагент Тогда
				Договор = "";
			КонецЕсли;
		КонецЕсли;
		ЗаполнениеКППполучателя();
	КонецЕсли;
	
КонецПроцедуры //ПеречислениеНалога
//_____________________________________________________________________________
Процедура Печать()
	Если (ДатаДок >= '15.02.2000') и (Прав(Строка(НомерДок),3) = "000") Тогда
		Если Вопрос("Номер платежного поручения не может оканчиваться на ""000"".
					|Вернуться к редактированию документа?", "Да+Нет") = "Да" Тогда
	    	Активизировать("НомерДок");
			Возврат;
	    КонецЕсли;
	КонецЕсли;

  	Таб = СоздатьОбъект("Таблица");
  	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\1cbpp03.mxl";
  	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
  		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
  	Иначе
  		Таб.ИсходнаяТаблица("ПлПор");
  	КонецЕсли;
	
  	Если (ПеречислениеНалога=1) Тогда
  	    ПеречислениеНалога(1);
  	КонецЕсли;
  	
	Таб.Вывести();
	
	Таб.Область("НаименованиеНомер").Текст = "ПЛАТЕЖНОЕ ПОРУЧЕНИЕ № "+глПреобразоватьНомерДок(НомерДок, 0, 0);
	Таб.Область("ДатаДокумента").Текст = глВыводДатыПлатежныхДокументов(ДатаДок,РасчетныйСчет);	// Месяц даты числом или прописью
	Таб.Область("ОчередностьПлатежа").Текст = Очередность;
	Таб.Область("СуммаЧислом").Текст = глВыводСуммыПлатежныхДокументов(Сумма,РасчетныйСчет);	// Сумма без 00 копеек (=) или (-00)
	Таб.Область("СуммаПрописью").Текст = глВыводСуммыПлатежныхДокументовПрописью(Сумма,РасчетныйСчет);	// Сумма без 00 копеек (=) или (-00)
	Таб.Область("СрокПлатежа").Текст = ?(ПустоеЗначение(СрокПлатежа)=1,"",Формат(СрокПлатежа,"Д ДДММГГГГ"));
	Таб.Область("ОчередностьПлатежа").Текст = Очередность;
	Таб.Область("ВидПлатежа").Текст = ВидПлатежа;
	
	Плательщик = "";БанкПлательщика = "";НомерСчетаПлательщика = "";БИКБанкаПлательщика = "";СчетБанкаПлательщика = "";ИННплательщика="";	
	глПлатежныеРеквизиты(РасчетныйСчет.ТекущийЭлемент(), Плательщик, БанкПлательщика, НомерСчетаПлательщика, БИКБанкаПлательщика, СчетБанкаПлательщика, ИННплательщика,, 2);
	Плательщик = СокрЛП(?(ПеречислениеНалога=1, Константа.НаименованиеПлательщикаПриПеречисленииНалогов, Плательщик));
	Таб.Область("Плательщик").Текст = Плательщик;
	Таб.Область("БанкПлательщика").Текст = БанкПлательщика;
	Таб.Область("НомерСчетаПлательщика").Текст = НомерСчетаПлательщика;
	Таб.Область("БИКБанкаПлательщика").Текст = БИКБанкаПлательщика;
	Таб.Область("СчетБанкаПлательщика").Текст = СчетБанкаПлательщика;
	
	Таб.Область("СтатусСоставителяПлДок").Текст= ?(ПеречислениеНалога=1, СтатусСоставителяПлДок,"");
	Таб.Область("ИННПлательщика").Текст = "ИНН " + ?(ПеречислениеНалога=1,?(ПустаяСтрока(ИННплательщика)=1,"0", ИННплательщика), ИННплательщика);
	Таб.Область("КПППлательщика").Текст = "КПП " + ?(ПеречислениеНалога=1,?(ПустаяСтрока(КППплательщика)=1,"0", КППплательщика), КППплательщика);
	Таб.Область("КодБК").Текст = ?(ПеречислениеНалога=1,?((ПустаяСтрока(КодБК)=1) и (ДатаДок < '01.01.2005'),"0", СокрЛП(КодБК)),"");
	Таб.Область("КодОКАТО").Текст = ?(ПеречислениеНалога=1,?((ПустаяСтрока(КодОКАТО)=1) и (ДатаДок < '01.01.2005'),"0", СокрЛП(КодОКАТО)),"");
	Таб.Область("ПоказательОснования").Текст = ?(ПеречислениеНалога=1,?(ПустаяСтрока(ПоказательОснования)=1,"0", ПоказательОснования),"");
	ПечПоказательПериода = ?(СокрЛП(СтрЗаменить(ПоказательПериода,".",""))="0","",ПоказательПериода);
	Таб.Область("ПоказательПериода").Текст = ?(ПеречислениеНалога=1,?(ПустаяСтрока(СокрЛП(СтрЗаменить(ПечПоказательПериода,".","")))=1,"0", ПечПоказательПериода),"");
	Таб.Область("ПоказательНомера").Текст = ?(ПеречислениеНалога=1,?(ПустаяСтрока(ПоказательНомера)=1,"0", СокрЛП(ПоказательНомера)),"");
	Таб.Область("ПоказательДаты").Текст = ?(ПеречислениеНалога=1,?(ПустоеЗначение(ПоказательДаты)=1,"0", Формат(ПоказательДаты,"Д ДДММГГГГ")),"");
	Таб.Область("ПоказательТипа").Текст = ?(ПеречислениеНалога=1,?(ПустаяСтрока(ПоказательТипа)=1,"0", СокрЛП(ПоказательТипа)),"");
	
	Получатель = "";БанкПолучателя = "";НомерСчетаПолучателя = "";БИКБанкаПолучателя = "";СчетБанкаПолучателя = "";ИННполучателя="";
	глПлатежныеРеквизиты(СчетКонтрагента.ТекущийЭлемент(), Получатель, БанкПолучателя, НомерСчетаПолучателя, БИКБанкаПолучателя, СчетБанкаПолучателя, ИННполучателя,, 2);
	Таб.Область("Получатель").Текст = Получатель;
	Таб.Область("БанкПолучателя").Текст = БанкПолучателя;
	Таб.Область("НомерСчетаПолучателя").Текст = НомерСчетаПолучателя;
	Таб.Область("БИКБанкаПолучателя").Текст = БИКБанкаПолучателя;
	Таб.Область("СчетБанкаПолучателя").Текст = СчетБанкаПолучателя;
	
	Таб.Область("ИННПолучателя").Текст = "ИНН " + ИННполучателя; 
	Таб.Область("КПППолучателя").Текст = "КПП " + ?(ПеречислениеНалога=1,?(ПустаяСтрока(КППполучателя)=1,"0", КППполучателя), КППполучателя);
	
	СтрСуммаНДС = ФормирСуммаНДС1(АвтоПодстСуммыНДС,Сумма,НДС,СтавкаНДС); //NDline СтрСуммаНДС = ФормирСуммаНДС(АвтоПодстСуммыНДС,Сумма,НДС,СтавкаНДС);
	Таб.Область("НазначениеПлатежа").Текст = СокрЛП(Содержание)+" "+СокрЛП(СтрСуммаНДС);

	Таб.Опции(0,0,0,0,"ОпцииПечатиПлПор","ПараметрыОкнаПлПор");
	Таб.ТолькоПросмотр(1);
	Таб.ПараметрыСтраницы(,,,,0,,,,,);
	Таб.Показать("Печать платежного поручения","");
КонецПроцедуры

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
	
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//_____________________________________________________________________________
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	РасчетныйСчет = глЗначениеПоУмолчанию("ОсновнойБанковскийСчет");
	ЗаполнениеКППплательщика();
	СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
	ВидПлатежа = Перечисление.ВидыПлатежа.Электронно;
	Очередность = 6;
    АвтоПодстСуммыНДС = Перечисление.ПодстановкаСуммыНДС.СуммаНДС;
	УстДату();
	НомерПлатПор = СокрЛП(НомерДок);
	Если (ДатаДок >= '15.02.2000') и (Прав(НомерПлатПор,3) = "000") Тогда
		НомерДок = Лев(НомерПлатПор, СтрДлина(НомерПлатПор)-1) + "1";
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнВыбораРасчетногоСчета.Доступность(0);
		Форма.кнОК.Доступность(0);
		Форма.КнопкаЗаписать.Доступность(0);
		
		Форма.кнОчиститьСодержание.Доступность(0);
		Форма.кнОчиститьВидПлатежа.Доступность(0);
		Форма.кнОчиститьСрокПлатежа.Доступность(0);
		Форма.КнопкаПеречислениеНалога.Доступность(0);
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	Форма.Кн_Видеокурс.Видимость(?(ТипЗначения(Видео_Компонента) = 0, 0, 1));
	НачальнаяДатаДокумента = ДатаДок;
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
	ПриСменеВида("При открытии");
	
КонецПроцедуры //ПриОткрытии
//_____________________________________________________________________________
Процедура ПриЗаписи() //предопределенная
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если (ДатаДок >= '15.02.2000') и (Прав(Строка(НомерДок),3) = "000") Тогда
		Если Вопрос("Номер платежного поручения не может оканчиваться на ""000"".
					|Вернуться к редактированию документа?", "Да+Нет") = "Да" Тогда
	    	Активизировать("НомерДок");
			СтатусВозврата(0);
			Возврат;
	    КонецЕсли;
	КонецЕсли;
	Если Константа.ВсеДокументыВЖурналОпераций = Да Тогда
	    СуществуетОперация(1);
		Операция.СуммаОперации = Сумма;
		Операция.Содержание = "Платежное поручение";
	Иначе
	    СуществуетОперация(0);
	КонецЕсли;
	Если (ПеречислениеНалога=1) И (КоличествоСтрок()>0) Тогда //NDline
		УдалитьСтроки();
	КонецЕсли; //NDline
КонецПроцедуры //ПриЗаписи
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если ИдентЭлемДиалога = "СтатусСоставителяПлДок" Тогда
	    ФлагСтандОбр = 0;
		СтатусСоставителя.ВыбратьЗначение(СтатусСоставителяПлДок,,,,2);
	ИначеЕсли ИдентЭлемДиалога = "ПоказательОснования" Тогда
	    ФлагСтандОбр = 0;
		ОснованиеПлатежа.ВыбратьЗначение(ПоказательОснования,,,,2);
	ИначеЕсли ИдентЭлемДиалога = "ПоказательПериода" Тогда
	    ФлагСтандОбр = 0;
		ПериодПлатежа = СоздатьОбъект("СписокЗначений");
		Если ДатаДок < '01.01.2005' Тогда
			ПериодПлатежа.ДобавитьЗначение("Д1."+Формат(ДатаМесяц(ДатаДок),"Ч(0)2")+"."+ДатаГод(ДатаДок));
			ПериодПлатежа.ДобавитьЗначение("Д2."+Формат(ДатаМесяц(ДатаДок),"Ч(0)2")+"."+ДатаГод(ДатаДок));
			ПериодПлатежа.ДобавитьЗначение("Д3."+Формат(ДатаМесяц(ДатаДок),"Ч(0)2")+"."+ДатаГод(ДатаДок));
		КонецЕсли;
		ПериодПлатежа.ДобавитьЗначение("МС."+Формат(ДатаМесяц(ДобавитьМесяц(ДатаДок,-1)),"Ч(0)2")+"."+ДатаГод(ДобавитьМесяц(ДатаДок,-1)));
		ПериодПлатежа.ДобавитьЗначение("КВ."+Формат(Цел((ДатаМесяц(ДобавитьМесяц(ДатаДок,-1))-1)/3)+1,"Ч(0)2")+"."+ДатаГод(ДобавитьМесяц(ДатаДок,-1)));
		ПериодПлатежа.ДобавитьЗначение("ПЛ."+Формат(Цел((ДатаМесяц(ДобавитьМесяц(ДатаДок,-1))-1)/6)+1,"Ч(0)2")+"."+ДатаГод(ДобавитьМесяц(ДатаДок,-1)));
		ПериодПлатежа.ДобавитьЗначение("ГД.00."+ДатаГод(ДобавитьМесяц(ДатаДок,-1)));
		ПериодПлатежа.ВыбратьЗначение(ПоказательПериода,,,,2);
	ИначеЕсли ИдентЭлемДиалога = "ПоказательТипа" Тогда
	    ФлагСтандОбр = 0;
		ТипПлатежа.ВыбратьЗначение(ПоказательТипа,,,,2);
	ИначеЕсли ИдентЭлемДиалога = "Контрагент" Тогда
		ПолучательДоВыбораКонтрагента = Контрагент;
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;                                             

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Платежное поручение";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");

ПолучитьСпискиСтатусовОснованийТипов();