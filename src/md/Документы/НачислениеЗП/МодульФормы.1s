////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем ДатаДокумента;
Перем ПодписьСтатьиОтчисленийНаСоцНужды;
Перем ПодписьСтатьиПрочихОтчисленийНаСоцНужды;
Перем Новый;
Перем СписокДействий;
Перем Сч70;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// ТекстПодсказки()
//
Функция ТекстПодсказки()
	
	Стр = "Счет отнесения затрат указывается отдельно для каждого сотрудника (меню ""Справочники - Сотрудники"")";
	Возврат Стр;;
	
КонецФункции // ТекстПодсказки()

//******************************************************************************
// МожноВыбиратьСтатьюОтчислений()
//
Функция МожноВыбиратьСтатьюОтчислений()
	
	Если СчетЗатрат.Выбран() = 1 Тогда
		Для А = 1 По 3 Цикл
			Если (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиЗатратНаПроизводство) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиЗатратОбслуживающихПроизводств) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиОбщепроизводственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиОбщехозяйственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиИздержекОбращения) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиКоммерческихРасходов) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиРасходовНаПродажу) Тогда
				Возврат А;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции // МожноВыбиратьСтатьюОтчислений()

//******************************************************************************
// УправлениеДиалогом()
//
Процедура УправлениеДиалогом()
	
	Если ТипЗначенияСтр(Форма.Закладки) = "СписокЗначений" Тогда
	    Если Форма.Закладки.ТекущаяСтрока() = 2 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД <> Да Тогда
		Форма.ИспользоватьСлой("ЕНВД", 0);
		
	Иначе
		Форма.ИспользоватьСлой("ЕНВД", 1);
	КонецЕсли;	
	
	Если ИспользоватьСчетДокумента = 1 Тогда
	    Форма.ИспользоватьСлой("СчетЗатрат", 1);
		Форма.ИспользоватьСлой("Подсказка", 0);
		Если МожноВыбиратьСтатьюОтчислений() > 0 Тогда
			
			Если ДатаГод(ДатаДок) < 2010 Тогда
				ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по начисленному ЕСН";
				ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "Статья затрат по прочим отчисл. с ФОТ";
				Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(1);
			Иначе
				ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по страховым взносам";
				Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
				ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
			КонецЕсли;			

			Форма.СтатьяОтчисленийНаСоцНужды.Видимость(1);
			
		Иначе
			ПодписьСтатьиОтчисленийНаСоцНужды = "";
			ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
			Форма.СтатьяОтчисленийНаСоцНужды.Видимость(0);
			Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
		КонецЕсли;
		
	Иначе
		Форма.ИспользоватьСлой("СчетЗатрат", 0);
		Форма.ИспользоватьСлой("Подсказка", 1);
	КонецЕсли;
	
КонецПроцедуры // УправлениеДиалогом()

//******************************************************************************
// ДействияПриИзмененииЗакладки(НомерЗакладки, ЗначениеЗакладки)
//
Процедура ДействияПриИзмененииЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Форма.ИспользоватьСлой(ЗначениеЗакладки, 2);
	
	Если НомерЗакладки = 1 Тогда
		УправлениеДиалогом();
		
	Иначе
		Если (Константа.РайонныйКоэффициент <= 1) и 
	   		 (Итог("НачисленоРК") = 0) и
	   		 (Итог("НачисленоСН") = 0) Тогда
	   		Форма.НачисленоРК.Видимость(0);
			Форма.НачисленоСН.Видимость(0);
			Форма.Начислено.Видимость(0);
	   	КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры // ДействияПриИзмененииЗакладки()

//*****************************************************************************
// Проверка()
//
// Описание:
//  Проверяет является ли данный документ единственным документом НачислениеЗП
// в течение данного месяца.
//
Процедура Проверка()
	
	Если ДатаДокумента <> ДатаДок Тогда
		Дубликат = СоздатьОбъект("Документ.НачислениеЗП");
		Если Дубликат.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок))=1 Тогда
			Предупреждение("За "+Формат(ДатаДок,"Д ММММГГГГ")+" зарплата уже начислялась.");
		КонецЕсли;
		ДатаДокумента = ДатаДок;
	КонецЕсли;
	
КонецПроцедуры // Проверка()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
//

//*****************************************************************************
// ПриИзмененииДаты()
//
// Вызывается из формул элементов диалога:
//  Поле ввода ДатаДок.
//
Процедура ПриИзмененииДаты()
	
	Проверка();
	УправлениеДиалогом();
	
КонецПроцедуры // ПриИзмененииДаты()

//*****************************************************************************
// ПриВыбореСчета()
//
// Вызывается из формул элементов диалога:
//  Поле ввода СчетЗатрат.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета()

	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто"+А,СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
        
	НомерСубконто = МожноВыбиратьСтатьюОтчислений();
	Если НомерСубконто > 0 Тогда
		НазначитьВид(СтатьяОтчисленийНаСоцНужды, СчетЗатрат.ВидСубконто(НомерСубконто));
		НазначитьВид(СтатьяПрочихОтчисленийНаСоцНужды, СчетЗатрат.ВидСубконто(НомерСубконто));
	КонецЕсли;
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриВыбореСчета()

//*****************************************************************************
// ПриОпределенииСчета()
//
// Вызывается из формул элементов диалога:
//  Переключатель ИспользоватьСчетДокумента.
//
// Описание:
//  Управляет видимостью элементов диалога, характеризующих счет отнесения
// затрат на оплату труда.
//
Процедура ПриОпределенииСчета()
	
	УправлениеДиалогом();	
	
КонецПроцедуры // ПриОпределенииСчета()

//*****************************************************************************
// ПриВводеОклада()
//
// Вызывается из формул элементов диалога:
//  Поле ввода Оклад.
//
// Описание:
//  Выполняет пересчет сумм табличной части документа в соответствии с 
// указанным для организации районным коэффициентом и указанными для 
// сотрудников северными надбавками.
//
Процедура ПриВводеОклада()
	
	НачисленоРК = Оклад*(Макс(Константа.РайонныйКоэффициент, 1) - 1);
	ПроцентСевернойНадбавки = Сотрудник.ПроцентСевернойНадбавки.Получить(КонМесяца(ДатаДок));
	НачисленоСН = Оклад*ПроцентСевернойНадбавки/100;

КонецПроцедуры // ПриВводеОклада()

//*****************************************************************************
// Печать()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Печать".
//
// Описание:
//  Формирует печатную форму расчетной ведомости или расчетных листков.
// Выбор типа печатной формы осуществляется пользователем из списка значений.
//
Процедура Печать(НомерПечатнойФормы = 0)
	
	Если Проведен() = 0 Тогда
		Предупреждение("Для получения печатной формы документ необходимо провести."); 
		
	ИначеЕсли Модифицированность() = 1 Тогда
		Предупреждение("Для получения печатной формы документ необходимо перепровести.");

	Иначе
		Если НомерПечатнойФормы = 0 Тогда
			Меню = СоздатьОбъект("СписокЗначений");
			Меню.ДобавитьЗначение("Расчетная ведомость");
			Меню.ДобавитьЗначение("Расчетные листки");
			Если Меню.ВыбратьЗначение(,, НомерПечатнойФормы,, 1) = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
			
		Таб = СоздатьОбъект("Таблица");
		Если НомерПечатнойФормы = 1 Тогда
			Таб.ИсходнаяТаблица("Ведомость");
			Таб.ВывестиСекцию("Шапка");
			ИтогоНалогНаДоходы = 0;
		Иначе
			Таб.ИсходнаяТаблица("Листок");
		КонецЕсли;
		
		Ит = СоздатьОбъект("БухгалтерскиеИтоги"); Ит.ИспользоватьРазделительУчета(ЮрЛицо);
		Ит.ВключатьСубсчета(0,1);
		Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
		Ит.ВыполнитьЗапрос(ТекущийДокумент(),ТекущийДокумент(),"70",,,2,,"С");
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			НалогНаДоходы = 0;
			Если КВыплате = 0 Тогда
				Если Ит.ПолучитьСчет(,"70") = 1 Тогда
					Если Ит.ПолучитьСубконто(,,Сотрудник) = 1 Тогда
						Если Ит.ПолучитьКорСчет(,"68.1") = 1 Тогда
							НалогНаДоходы = Ит.КорДО();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли; 
			Иначе
				НалогНаДоходы = (Оклад + НачисленоРК +НачисленоСН) - КВыплате;
			КонецЕсли;
			Если НомерПечатнойФормы = 1 Тогда
				ИтогоНалогНаДоходы = ИтогоНалогНаДоходы + НалогНаДоходы;
				Таб.ВывестиСекцию("Строка");
			Иначе
				Таб.ВывестиСекцию("Листок");		
			КонецЕсли;
		КонецЦикла;

		Если НомерПечатнойФормы = 1 Тогда
            Таб.ВывестиСекцию("Итого");
			Таб.ТолькоПросмотр(1);
			Таб.Опции(0,0,4,0);
			Таб.ПовторятьПриПечатиСтроки(3,4);
			Таб.ПараметрыСтраницы(1,,,,,,,,,1);
			Таб.Показать("Расчетная ведомость № "+СокрЛП(НомерДок)+" от "+СокрЛП(ДатаДок));
		Иначе
			Таб.ПараметрыСтраницы(1, 100, , 20, 0, 0, 0,,,,,);
			Таб.Опции(0, 0, 0, 0, "ОпцииПечатиРасчетныхЛистков", "ОкноРасчетныхЛистков");
			Таб.ОбластьПечати(,2,,);
			Таб.ТолькоПросмотр(1);
			Таб.Показать("Расчетные листки к ведомости № "+СокрЛП(НомерДок)+" от "+СокрЛП(ДатаДок));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать(1);
		
	ИначеЕсли НомерТекущейФормы = 2  Тогда
		Печать(2);
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//*****************************************************************************
// ПриВыбореСотрудника()
//
// Вызывается из формул элементов диалога:
//  Поле ввода Сотрудник.
//
// Описание:
//  Устанавливает сумму, начисляемую сотруднику на основании справочника 
// Сотрудники и константы РайонныйКоэффициент.
//
Процедура ПриВыбореСотрудника()
	
	Если Сотрудник.Выбран() = 1 Тогда
	    Оклад = Сотрудник.Оклад.Получить(КонМесяца(ДатаДок));
		ПриВводеОклада();
	КонецЕсли;
	
	Если Подразделение.Выбран() = 1 Тогда
	    Если Сотрудник.Подразделение.Получить(КонМесяца(ДатаДок)) <> Подразделение Тогда
	        Подразделение = "";
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСотрудника()

//*****************************************************************************
// ОчиститьТабличнуюЧасть()
// 
Процедура ОчиститьТабличнуюЧасть()
	
	глОчиститьТабличнуюЧасть(Контекст);
	Форма.Закладки.ТекущаяСтрока(2);
	ДействияПриИзмененииЗакладки(2, Форма.Закладки.ПолучитьЗначение(2));

КонецПроцедуры // ОчиститьТабличнуюЧасть()

//*****************************************************************************
// Заполнить()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Заполнить".
//
// Описание:
//  Заполняет табличную часть документа на основании справочника Сотрудники.
//
Процедура Заполнить()
	
	Если ВыбратьСтроки() = 1 Тогда
		Если Вопрос("Перед заполнением таблица будет очищена,
					|а существующие строки удалены. Продолжить?",
					"Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
		КонецМесяцаДокумента = КонМесяца(ДатаДок);
		Сотр = СоздатьОбъект("Справочник.Сотрудники");
		Сотр.ВыбратьЭлементы();
		Пока Сотр.ПолучитьЭлемент() = 1 Цикл
			Если Сотр.ПометкаУдаления() = 1 Тогда
			    Продолжить;

			ИначеЕсли Сотр.ЭтоГруппа() = 1 Тогда
				Продолжить;

			ИначеЕсли глСотрудникЧислитсяРаботающим(Сотр, НачМесяца(ДатаДок)) = 0 Тогда
				Продолжить;
			
			ИначеЕсли (Подразделение.Выбран() = 1) и
				(Сотр.Подразделение.Получить(КонецМесяцаДокумента) <> Подразделение) Тогда
				Продолжить;
				
			ИначеЕсли глСотрудникЧислитсяРаботающим(Сотр, КонецМесяцаДокумента) = 0 Тогда
				Продолжить;
			КонецЕсли;

			НоваяСтрока();
			Сотрудник = Сотр.ТекущийЭлемент();
			ПриВыбореСотрудника();
		КонецЦикла;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
		Предупреждение("Не обнаружено ни одного "+?(Подразделение.Выбран()=1,
			"сотрудника, работающего"+РазделительСтрок+"в подразделении """+
			СокрЛП(Подразделение)+"""","работающего сотрудника")+" на "+
			Формат(КонМесяца(ДатаДок),"Д ДДММММГГГГ"));
	КонецЕсли;
	Форма.Закладки.ТекущаяСтрока(2);
	ДействияПриИзмененииЗакладки(2, Форма.Закладки.ПолучитьЗначение(2));
	
КонецПроцедуры // Заполнить()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
// Описание:
//	Устанавливает начальные значения реквизитов и элементов диалога при вводе
// нового документа.
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	ВерсияОбъекта = Константа.НомерРелиза;
	Если Константа.УчетЗарплатыВоВнешнейПрограмме = Да Тогда
		Предупреждение("Документ ""Расчетная ведомость"" не используется в режиме
		               |расчета зарплаты во внешней программе");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если Копирование = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
		    КВыплате = 0;
		    ВаловыйДоход = 0;
		    Вычеты = 0;
		    ОблагаемыйДоход = 0;
		КонецЦикла;

	Иначе
		Подразделение = глЗначениеПоУмолчанию("ОсновноеПодразделение");
		ИспользоватьСчетДокумента = 1;
	КонецЕсли;
	
	Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Нет Тогда
		ВариантРаспределенияРасходов = 1;
	КонецЕсли;
    
	ДатаДок = КонМесяца(РабочаяДата());
	ДатаДокумента = Дата(0);
	Проверка();
	
КонецПроцедуры // ВводНового()

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Определяет видимость и доступность элементов диалога в открываемой форме.
//  
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
   		Печать(Форма.Параметр.Получить("Печать"));
		СтатусВозврата(0);

   	Иначе
   		ПриЗаписиПерепроводить(1);
   		глПроверкаРазрешенияРедактирования(Контекст);
   		Если Форма.ТолькоПросмотр() = 1 Тогда
   			Форма.КнопкаПровести.Доступность(0);
   			Форма.КнопкаОК.Доступность(0);
   			Форма.КнопкаЗаполнить.Доступность(0);
   			Форма.КнопкаОчистить.Доступность(0);
   			Форма.КнопкаОчиститьПодразделение.Доступность(0);
   		КонецЕсли;
   		
   		ДатаДокумента = ДатаДок;
   		
   		НачальнаяДатаДокумента = ДатаДок;
	КонецЕсли;
   	
   	ПриОпределенииСчета();
	ВариантыРаспределенияРасходов.ДобавитьЗначение(1, "не облагаемым ЕНВД");
	ВариантыРаспределенияРасходов.ДобавитьЗначение(2, "облагаемым ЕНВД");
	
	Если Константа.МетодРаспределенияКосвенныхРасходовПоВидамДеятельности.Получить(ДатаДок) = Перечисление.МетодыРаспределенияКосвенныхРасходовПоВидамДеятельности.ЗаМесяц Тогда
		ВариантыРаспределенияРасходов.ДобавитьЗначение(0, "подлежащим распределению");
	КонецЕсли;
	
	ВариантыРаспределенияРасходов.ТекущаяСтрока(ВариантыРаспределенияРасходов.НайтиЗначение(ВариантРаспределенияРасходов));
	
	Форма.СтатьяОтчисленийНаСоцНужды.НеИзменятьВид(1);
	Форма.СтатьяПрочихОтчисленийНаСоцНужды.НеИзменятьВид(1);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Шапка,Основной,Подвал", "Сведения о начислении");
	Форма.Закладки.ДобавитьЗначение("Шапка,Сотрудники,Подвал", "Сотрудники");
	
    ТекНомерЗакладки = ?(КоличествоСтрок() = 0, 1, 2);
	Форма.Закладки.ТекущаяСтрока(ТекНомерЗакладки);
	ДействияПриИзмененииЗакладки(ТекНомерЗакладки, Форма.Закладки.ПолучитьЗначение(ТекНомерЗакладки));
	
КонецПроцедуры // ПриОткрытии()

//*****************************************************************************
// Предопределенна процедура
//
// Описание:
//  Устанавливает видимость реквизитов документа в диалоге формы при 
// переключении закладок.
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	ДействияПриИзмененииЗакладки(НомерЗакладки, ЗначениеЗакладки);
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если (ЭлементДиалога = "СчетЗатрат") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		СписокКорректныхПроводок.Установить("Счет", Сч70);
		глЗначениеОтбора = СписокКорректныхПроводок;
		
	ИначеЕсли ЭлементДиалога = "СтатьяОтчисленийНаСоцНужды" Тогда
		Если МожноВыбиратьСтатьюОтчислений() > 0 Тогда
			ПриВыбореСчета();
			ОткрытьФорму("Справочник."+СтатьяОтчисленийНаСоцНужды.Вид(), Перечисление.ГруппыВидыРасходов.ЕСН);
			Флаг = 0;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "СтатьяПрочихОтчисленийНаСоцНужды" Тогда
		Если МожноВыбиратьСтатьюОтчислений() > 0 Тогда
			ПриВыбореСчета();
			Если  ПустоеЗначение(СтатьяПрочихОтчисленийНаСоцНужды) = 1 Тогда
				ОткрытьФорму("Справочник."+СтатьяПрочихОтчисленийНаСоцНужды.Вид(), Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
			Иначе
				Если (СтатьяПрочихОтчисленийНаСоцНужды.ВидРасходовДляНалоговогоУчета = Перечисление.ГруппыВидыРасходов.НалогиИСборы) Тогда
					ОткрытьФорму("Справочник."+СтатьяПрочихОтчисленийНаСоцНужды.Вид());
				Иначе
					ОткрытьФорму("Справочник."+СтатьяПрочихОтчисленийНаСоцНужды.Вид(), Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
				КонецЕсли;					
			КонецЕсли;
			Флаг = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Выполняет стандартные процедуры проверки возможности записи 
// документа и рассчитывает значения некоторых реквизитов на основании 
// данных, введенных в форму.
//  
Процедура ПриЗаписи()
	
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Док = СоздатьОбъект("Документ.ЗакрытиеМесяца");
	Если (Док.ВыбратьДокументы(НачМесяца(ДатаДок), ДатаДок) = 1) и (Выбран() = 0) Тогда
		Месяц = ПериодСтр(НачМесяца(ДатаДок), КонМесяца(ДатаДок));
	    Предупреждение("За "+Месяц+" найден документ ""Закрытие месяца"". Для правильного 
						|расчета НДФЛ документ ""Начисление зарплаты"" следует вводить перед 
						|документом ""Закрытие месяца"". Проверьте и, при необходимости, измените
						|время документов.
						|
						|Для изменения времени документа используйте  кнопку ""Время"" в общем
						|журнале документов.");
	КонецЕсли;
	
    ВариантРаспределенияРасходов = 
		ВариантыРаспределенияРасходов.ПолучитьЗначение(
		ВариантыРаспределенияРасходов.ТекущаяСтрока());
	НачисленоИтого = Итог("Оклад") + Итог("НачисленоРК") + Итог("НачисленоСН");
	Операция.СуммаОперации = НачисленоИтого;
	Операция.Содержание = "Начисл. ЗП за "+Формат(ДатаДок,"Д ММММГГГГ");

КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;
Сч70 = СчетПоКоду("70");

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Расчетная ведомость";
ТаблицаПечФорм.Кнопка       = "Ведомость";

ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Расчетные листки";
ТаблицаПечФорм.Кнопка       = "Р.листки";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");