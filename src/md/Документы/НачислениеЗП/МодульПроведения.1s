Перем ТаблицаВидовНачисленийОблПо13;

//******************************************************************************
// ДобавитьСкидкуПоСт217(ТекВидНачисления, ДобавленнаяСумма)
//
Функция ДобавитьСкидкуПоСт217(ТекВидНачисления, ДобавленнаяСумма)
	
	Стр = 0;
	Если ПустоеЗначение(ТекВидНачисления) = 0 Тогда
	    Если ТаблицаВидовНачисленийОблПо13.НайтиЗначение(ТекВидНачисления.ВидДохода, Стр, "ВидДохода") = 1 Тогда
			
			ВидВычета = ТекВидНачисления.ВидДохода.ВидВычета;
			Если ПустоеЗначение(ВидВычета) = 0 Тогда
				ТекРазмерВычета = ТекВидНачисления.ВидДохода.ВидВычета.Сумма.Получить(ДатаДок);
			Иначе
				ТекРазмерВычета = 0;
			КонецЕсли;
			
			ТаблицаВидовНачисленийОблПо13.ПолучитьСтрокуПоНомеру(Стр);		
			ТекСумма = ТаблицаВидовНачисленийОблПо13.Сумма;
			Если ТекСумма < ТекРазмерВычета Тогда
			    ТаблицаВидовНачисленийОблПо13.Сумма = Мин(ТекСумма + ДобавленнаяСумма, ТекРазмерВычета);
				Возврат (ТаблицаВидовНачисленийОблПо13.Сумма - ТекСумма);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции // ДобавитьСкидкуПоСт217()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// ПолучитьСубконто91()
//
// Описание:
//  Используется для начисления сбора на образование по алгоритму редакции 4.0
//
Функция ПолучитьСубконто91()
	Спр = СоздатьОбъект("Справочник.ПрочиеДоходыИРасходы");
	Спр.ВыбратьЭлементыПоРеквизиту("ВидПрочихДоходовИРасходов", Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы,,);
	СтатьяРасхода = "";
	Пока (Спр.ПолучитьЭлемент() = 1) и (ПустоеЗначение(СтатьяРасхода) = 1) Цикл
		Если Спр.Наименование = "Сбор на образование" Тогда
		    СтатьяРасхода = Спр.ТекущийЭлемент();
		КонецЕсли;
	КонецЦикла;

	Если ПустоеЗначение(СтатьяРасхода) = 1 Тогда
		Спр.Новый();
		Спр.Наименование = "Сбор на образование";
		Спр.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы;
		Спр.Записать();
		Возврат Спр.ТекущийЭлемент();
	Иначе
		Возврат СтатьяРасхода;
	КонецЕсли;	
	
КонецФункции // ПолучитьСубконто91()

//******************************************************************************
// ОтчислениеВФонд(Фонд, Облагается, КонецГода)
//
// Описание:
//  Используется для начисления ЕСН по алгоритму редакции 4.0
//
Функция ОтчислениеВФонд(Фонд, Облагается, КонецГода)
	Налог = СоздатьОбъект("Справочник.НалогиИОтчисления");
	Ставка = СоздатьОбъект("Справочник.СтавкиНалогов");
	Если Налог.НайтиПоКоду(Фонд) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Ставка.ИспользоватьВладельца(Налог.ТекущийЭлемент());
	Ставка.ПорядокКодов();
	Если Ставка.ВыбратьЭлементы() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Если Константа.ИспользоватьРегрессивнуюШкалу.Получить(КонецГода) = Перечисление.Булево.Да Тогда
		Сумма = 0;
		ПредыдущийПредел = 0;
	    Пока (Ставка.ПолучитьЭлемент() = 1) и (Облагается > Ставка.Предел.Получить(КонецГода)) Цикл
			Сумма = Сумма + (Ставка.Предел.Получить(КонецГода)-ПредыдущийПредел)*Ставка.Процент.Получить(КонецГода)/100;
			ПредыдущийПредел = Ставка.Предел.Получить(КонецГода);
		КонецЦикла;
		Сумма = Сумма + (Облагается - ПредыдущийПредел)*Ставка.Процент.Получить(КонецГода)/100;
		Возврат Сумма;
	Иначе
		Ставка.ПолучитьЭлемент();
		Возврат Облагается*Ставка.Процент.Получить(КонецГода)/100;	
	КонецЕсли;
	
КонецФункции // ОтчислениеВФонд()

//******************************************************************************
// Предопределенная процедура
//
// Описание:
//	Выполняет формирование проводок операции документа и устанавливает
// значение реквизита КВыплате.
//
Процедура ОбработкаПроведения()
	
	Сч00 = СчетПоКоду("00");
	Сч68_1 = СчетПоКоду("68.1");
	Сч69_1 = СчетПоКоду("69.1");
	Сч69_11 = СчетПоКоду("69.11");
	Сч70 = СчетПоКоду("70");
	СчДФЛ = СчетПоКоду("ДФЛ");
	
	КонецМесяцаДокумента = КонМесяца(ДатаДок);
	
	НДФЛ_13 = глПолучитьНалог("НДФЛ");
	Ставка13 = НДФЛ_13.Ставка.Получить(КонецМесяцаДокумента);
	СписокВидовНачисленийОблПо13 = СоздатьОбъект("СписокЗначений");
	СписокВидовНачисленийОблПо13.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.ВидыНачислений"));
	ВидыНачислений = СоздатьОбъект("Справочник.ВидыНачислений");
	ВидыНачислений.ВыбратьЭлементы();
	Пока ВидыНачислений.ПолучитьЭлемент() = 1 Цикл
	    Если ВидыНачислений.ЭтоГруппа() = 0 Тогда
	        Если глСтавкаНДФЛ(ВидыНачислений.ТекущийЭлемент()) = Ставка13 Тогда
	            СписокВидовНачисленийОблПо13.ДобавитьЗначение(ВидыНачислений.ТекущийЭлемент());
	        КонецЕсли;
	    КонецЕсли;
	КонецЦикла;
	
	СписокСотрудников = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокСотрудников, "Сотрудник");  
	
	ВычетыСотрудниковПоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");
	
	ТаблицаСотрудников = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблицаСотрудников, "Сотрудник");
	ТаблицаСотрудников.Свернуть("Сотрудник",);
	ТаблицаСотрудников.НоваяКолонка("Доход","Число");  
	ТаблицаСотрудников.НоваяКолонка("Налог","Число"); 
	ТаблицаСотрудников.НоваяКолонка("Вычет","Число");

	// Определим налоговую базу как сумму кредитовых оборотов
	// счета 70 и счета корректировки налоговой базы.
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.Опции(1,1);
	БухИт.ВключатьСубсчета(, -1);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники, СписокСотрудников);
	БухИт.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат, СписокВидовНачисленийОблПо13);
	БухИт.ИспользоватьКорСубконто();
	БухИт.ВыполнитьЗапрос(НачГода(ДатаДок), КонецМесяцаДокумента, "70,ДФЛ",,, 2, "Месяц");
	
	БухИтКоррект = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтКоррект.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтКоррект.ИспользоватьСубконто(ВидыСубконто.Сотрудники, СписокСотрудников);
	БухИтКоррект.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат, СписокВидовНачисленийОблПо13);
	БухИтКоррект.ВыполнитьЗапрос(НачМесяца(ДатаДок), ТекущийДокумент(), "ДФЛ");
	
	ТаблицаВидовНачисленийОблПо13 = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаВидовНачисленийОблПо13.НоваяКолонка("ВидДохода");
	ТаблицаВидовНачисленийОблПо13.НоваяКолонка("Сумма", "Число");
	
	Для НомерЗначения = 1 по СписокВидовНачисленийОблПо13.РазмерСписка() Цикл
		ВидДохода = СписокВидовНачисленийОблПо13.ПолучитьЗначение(НомерЗначения).ВидДохода;
		Если ВидДохода.ВидВычета.Выбран() = 1 Тогда
			Стр = 0;
		    Если ТаблицаВидовНачисленийОблПо13.НайтиЗначение(ВидДохода, Стр, 0) = 0 Тогда
				ТаблицаВидовНачисленийОблПо13.НоваяСтрока();
				ТаблицаВидовНачисленийОблПо13.ВидДохода = ВидДохода;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВычетыПеретекают = ?(Константа.ОсобенностиИсчисленияНДФЛ.Получить(КонГода(ДатаДок)) = 
						Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом, 1, 0);
		
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл // по сотрудникам
		Если (НачМесяца(глДатаПриема(Сотрудник)) > КонецМесяцаДокумента)
		или (глСотрудникЧислитсяРаботающим(Сотрудник,КонецМесяцаДокумента) = 0) Тогда
			ТекстСообщения = "Не указан характер работы сотрудника "+Сотрудник+", или сотрудник уволен.
							 |Указать характер работы можно в форме ""Сведения о сотруднике""
							 |на закладке ""Общие сведения"" (меню ""Справочники - Сотрудники"").";
			глНеПроводить(ТекущийДокумент(), ТекстСообщения, Сотрудник.ТекущийЭлемент());
			Возврат;
		КонецЕсли;

		ВаловыйДоход = 0;
		НеОблагается = 0;
		НалогНаДоходы = 0;
		ОблагаемыйДоход = 0;
		КолСтр = ТаблицаВидовНачисленийОблПо13.КоличествоСтрок();
		Если КолСтр > 0 Тогда
		    ТаблицаВидовНачисленийОблПо13.Заполнить(0, 1, КолСтр, "Сумма");
		КонецЕсли;
		
		НачисленныйНалогНаДоходы = 0;
		Вычеты = 0;
		Стр="";
		УчтенныйДоход = 0;
		УчтенныйНДФЛ = 0;
		УчтенныеВычеты = 0;
		ТаблицаСотрудников.НайтиЗначение(Сотрудник,Стр,1); 
		УчтенныйДоход = ТаблицаСотрудников.ПолучитьЗначение(Стр,2);
		УчтенныйНДФЛ = ТаблицаСотрудников.ПолучитьЗначение(Стр,3);
		УчтенныеВычеты = ТаблицаСотрудников.ПолучитьЗначение(Стр,4);
		
		// Учтем начальные данные расчета и начисление, сделанное данным документом.
		ВсегоНачислено = Оклад + НачисленоРК + НачисленоСН + УчтенныйДоход;
		ВаловойДоход_СНачалаГода = ?((ДатаГод(глДатаПриема(Сотрудник))=ДатаГод(ДатаДок)) или (ДатаГод(Сотрудник.ДатаПриема) = ДатаГод(ДатаДок)),
									Сотрудник.ВаловойДоход_СНачалаГода,0);
		Если (ДатаГод(Сотрудник.ДатаПриема) = ДатаГод(ДатаДок)) и (Сотрудник.ДатаПриема <> Дата(0)) Тогда
			ДоходОблагаемыйНДФЛ_СНачалаГода = Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода;
			НачисленныйНДФЛ_СНачалаГода = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
		Иначе
			ДоходОблагаемыйНДФЛ_СНачалаГода = 0;
			НачисленныйНДФЛ_СНачалаГода = 0;
		КонецЕсли;
		
		Если ИспользоватьСчетДокумента = 1 Тогда
			СчетДебета = СчетЗатрат;
		Иначе
		    СчетДебета = Сотрудник.СчетЗатрат.Получить(КонецМесяцаДокумента);
		КонецЕсли;
		Если ПустоеЗначение(СчетДебета) = 1 Тогда
			Если ИспользоватьСчетДокумента = 1 Тогда
				ТекстСообщения = "Не выбран счет отнесения затрат";
				глНеПроводить(ТекущийДокумент(), ТекстСообщения, ТекущийДокумент());
				
			Иначе
				ТекстСообщения = "Не выбран счет отнесения затрат для сотрудника "+Сотрудник;
				глНеПроводить(ТекущийДокумент(), ТекстСообщения, Сотрудник.ТекущийЭлемент());
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		// Проверим соответствует ли выбраный для сотрудника счет затрат
		// выбранному в документе варианту распределения затрат по видам деятельности.
		Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да Тогда
			Если СчетДебета = СчетПоКоду("44.1.1") Тогда
			    Если ВариантРаспределенияРасходов <> 1 Тогда
					ТекстСообщения = "Счет отнесения затрат  44.1.1 "+
					                  СчетДебета.Наименование+" для сотрудника "+Сотрудник+" не "+
									  "соответствует указанному варианту отнесения начисления к расходам на продажу";
					глНеПроводить(ТекущийДокумент(), ТекстСообщения, ТекущийДокумент());
					Возврат;
				КонецЕсли;
				
			ИначеЕсли СчетДебета = СчетПоКоду("44.1.2") Тогда
			    Если ВариантРаспределенияРасходов <> 2 Тогда
					ТекстСообщения = "Счет отнесения затрат  44.1.2 "+
									  СчетДебета.Наименование+" для сотрудника "+Сотрудник+" не "+
									  "соответствует указанному варианту отнесения начисления к расходам на продажу";
					глНеПроводить(ТекущийДокумент(), ТекстСообщения, ТекущийДокумент());
					Возврат;
				КонецЕсли;
				
			ИначеЕсли СчетДебета = СчетПоКоду("44.1.3") Тогда
			    Если ВариантРаспределенияРасходов <> 0 Тогда
					ТекстСообщения = "Счет отнесения затрат  44.1.3 "+
									  СчетДебета.Наименование+" для сотрудника "+Сотрудник+" не "+
									  "соответствует указанному варианту отнесения начисления к расходам на продажу";
					глНеПроводить(ТекущийДокумент(), ТекстСообщения, ТекущийДокумент());
					Возврат;
				КонецЕсли;
			
			ИначеЕсли СчетДебета = СчетПоКоду("97") Тогда
				Если ИспользоватьСчетДокумента = 1 Тогда
					РБП = Субконто1;
					
				Иначе
				    РБП = Сотрудник.Субконто1.Получить(КонецМесяцаДокумента);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтавкаНДФЛ = глСтавкаНДФЛ(ВидНачисления, Сотрудник, КонецМесяцаДокумента);
		КолСтр = ТаблицаВидовНачисленийОблПо13.КоличествоСтрок();
		Если КолСтр > 0 Тогда
		    ТаблицаВидовНачисленийОблПо13.Заполнить(0, 1, КолСтр, "Сумма");
		КонецЕсли;
		
		Если СтавкаНДФЛ = Ставка13 Тогда
			БухИт.ВыбратьПериоды(1);
			Пока БухИт.ПолучитьПериод() = 1 Цикл // по месяцам
				
				// Исключим периоды более ранние, чем дата приема на работу.
				Если глСотрудникЧислитсяРаботающим(Сотрудник, БухИт.КонДата) = 0 Тогда
					Продолжить;
					
				ИначеЕсли (Сотрудник.ДатаПриема <> 0) и (Сотрудник.ДатаПриема > БухИт.КонДата) Тогда
					Продолжить;
				КонецЕсли;
				
				
				// Сумма, начисленная за период.
				НачисленоЗаМесяц = 0;
				СкидкаЗаМесяц = 0;
				
				Если БухИт.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
				    БухИт.ВыбратьСубконто(2);
					Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
						Если БухИт.КонДата=КонецМесяцаДокумента Тогда
						    Если БухИт.ПолучитьСчет(, Сч70) = 1 Тогда
								НачисленоПоСчету70 = БухИт.КО();
								Если БухИт.ПолучитьКорСчет(, Сч00) = 1 Тогда
									// Исключим из начислений начальные остатки.
									
									НачисленоПоСчету70 = НачисленоПоСчету70 - БухИт.КорКО();
								КонецЕсли;
								
								НачисленоЗаМесяц = НачисленоЗаМесяц + НачисленоПоСчету70;
								СкидкаЗаМесяц = СкидкаЗаМесяц + ДобавитьСкидкуПоСт217(БухИт.Субконто(2), НачисленоПоСчету70);
							КонецЕсли;
							
							Если БухИтКоррект.ПолучитьСубконто(ВидыСубконто.Сотрудники,, Сотрудник) = 1 Тогда
								Если БухИтКоррект.ПолучитьСубконто(2,, БухИт.Субконто(2)) = 1 Тогда
									НачисленоЗаМесяц = НачисленоЗаМесяц + БухИтКоррект.КО(); // доп. доходы в последнем месяце
									СкидкаЗаМесяц = СкидкаЗаМесяц + ДобавитьСкидкуПоСт217(БухИтКоррект.Субконто(2), БухИтКоррект.КО());
								КонецЕсли;
							КонецЕсли;
							
						Иначе
							Если БухИт.ПолучитьСчет(, СчДФЛ) = 1 Тогда
						        НачисленоЗаМесяц = НачисленоЗаМесяц + БухИт.КО();
								СкидкаЗаМесяц = СкидкаЗаМесяц + ДобавитьСкидкуПоСт217(БухИт.Субконто(2), БухИт.КО());
							КонецЕсли;
						КонецЕсли;
						
						Если БухИт.ПолучитьСчет(, Сч70) = 1 Тогда
							Если БухИт.ПолучитьКорСчет(, Сч68_1) = 1 Тогда
							    Если БухИт.ПолучитьКорСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
									НачисленныйНалогНаДоходы = НачисленныйНалогНаДоходы + БухИт.КорДО();
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если БухИт.КонДата=КонецМесяцаДокумента Тогда
					НачисленоЗаМесяц = НачисленоЗаМесяц + ВсегоНачислено;
					СкидкаЗаМесяц = СкидкаЗаМесяц + ДобавитьСкидкуПоСт217(ВидНачисления, ВсегоНачислено);
				КонецЕсли;
				ВаловыйДоход = ВаловыйДоход + НачисленоЗаМесяц;
				
				// Вычеты НДФЛ
				СуммаИмущВычета = 0;
				Если глСотрудникЧислитсяРаботающим(Сотрудник, БухИт.НачДата) = 1 Тогда
					Вычеты = 0;
					
					ВычетыСотрудниковПоНДФЛ.ИспользоватьВладельца(Сотрудник);
					ВычетыСотрудниковПоНДФЛ.ВыбратьЭлементы();
					Пока ВычетыСотрудниковПоНДФЛ.ПолучитьЭлемент() = 1 Цикл
						
						Если ВычетыСотрудниковПоНДФЛ.ПометкаУдаления() = 1 Тогда
							Продолжить;
						КонецЕсли;
						
						ВычетПредоставлялся = 0;
						Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаНачала) = 1 Тогда
							ВычетПредоставлялся = 0;							
						Иначе
							Если ВычетыСотрудниковПоНДФЛ.ДатаНачала > БухИт.КонДата Тогда
								ВычетПредоставлялся = 0;
							Иначе
								Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаОкончания) = 1 Тогда
									ВычетПредоставлялся = 1;
								Иначе
									Если ВычетыСотрудниковПоНДФЛ.ДатаОкончания < НачМесяца(БухИт.КонДата) Тогда
										ВычетПредоставлялся = 0;
									Иначе
										ВычетПредоставлялся = 1;
									КонецЕсли;
									
								КонецЕсли;
							КонецЕсли;
							
						КонецЕсли;
						
						Если ВычетПредоставлялся = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						Если (СокрЛП(ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2007) = "311")
						ИЛИ (СокрЛП(ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2007) = "312" ) Тогда
							СуммаИмущВычета = СуммаИмущВычета +  ВычетыСотрудниковПоНДФЛ.Сумма;							
							Продолжить;						
						КонецЕсли;
						
						РазмерВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета.Сумма.Получить(БухИт.КонДата);
						ПределДоходов = ВычетыСотрудниковПоНДФЛ.ВидВычета.ПределДоходов.Получить(БухИт.КонДата);
						
						Если ПределДоходов > 0 Тогда							
							Вычеты = Вычеты + РазмерВычета*?((ВаловыйДоход+ВаловойДоход_СНачалаГода - ТаблицаВидовНачисленийОблПо13.Итог("Сумма"))<=ПределДоходов,1,0);
						Иначе
							Вычеты = Вычеты + РазмерВычета;
						КонецЕсли;
						
					КонецЦикла;
					
					Вычеты = ?(ВычетыПеретекают = 0, Мин(НачисленоЗаМесяц - СкидкаЗаМесяц, Вычеты), Вычеты);
					
					НеОблагается = НеОблагается + Вычеты;
				КонецЕсли;
			КонецЦикла;
			
			НеОблагается = НеОблагается + ТаблицаВидовНачисленийОблПо13.Итог("Сумма");
				
			// Исчисленный НДФЛ
			ОблагаемыйДоход = Макс(ВаловыйДоход+ДоходОблагаемыйНДФЛ_СНачалаГода-НеОблагается-СуммаИмущВычета, 0); 
			НалогНаДоходы = Окр(ОблагаемыйДоход/100*Ставка13,0,1);
			НалогНаДоходы = НалогНаДоходы-НачисленныйНДФЛ_СНачалаГода-НачисленныйНалогНаДоходы-
				Сотрудник.СальдоНалогаНаДоходы.Получить(КонГода(ДатаДок)) - УчтенныйНДФЛ;
			НалогНаДоходы = Макс(НалогНаДоходы, 0);
			
		Иначе
			ДобавитьСкидкуПоСт217(ВидНачисления, ВсегоНачислено);
			Вычеты = ТаблицаВидовНачисленийОблПо13.Итог("Сумма");
			НалогНаДоходы = Окр((((ВсегоНачислено - Вычеты)/100*СтавкаНДФЛ) - УчтенныйНДФЛ),0,1);
		КонецЕсли;
		
		// Дт <Счет учета затрат> Кт 70
		Если ВсегоНачислено <> 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ЗП";
			Операция.СодержаниеПроводки = "Начислено з/п";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетДебета;
			Если ИспользоватьСчетДокумента = 1 Тогда
				Операция.Дебет.Субконто(1, Субконто1);
				Операция.Дебет.Субконто(2, Субконто2);
				Операция.Дебет.Субконто(3, Субконто3);
			Иначе
				Операция.Дебет.Субконто(1, Сотрудник.Субконто1.Получить(КонецМесяцаДокумента));
				Операция.Дебет.Субконто(2, Сотрудник.Субконто2.Получить(КонецМесяцаДокумента));
				Операция.Дебет.Субконто(3, Сотрудник.Субконто3.Получить(КонецМесяцаДокумента));
			КонецЕсли;
			Операция.Кредит.Счет = Сч70;
			Операция.Кредит.Сотрудники = Сотрудник;
			Операция.Кредит.ВидыНачисленийВыплат = ВидНачисления;
			Операция.Сумма = ВсегоНачислено - УчтенныйДоход;
		КонецЕсли;

		// Дт 68.1 Кт 70
		Если НалогНаДоходы <> 0 Тогда
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "ЗП";
			Операция.СодержаниеПроводки = "Налог на доходы";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = Сч70;
			Операция.Дебет.Сотрудники = Сотрудник;
			Операция.Дебет.ВидыНачисленийВыплат = ВидНачисления;
			Операция.Кредит.Счет = Сч68_1;
			Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
			Операция.Сумма = НалогНаДоходы;
		КонецЕсли;
		
		// Для отражения суммы "к выплате" в журнале документов
		КВыплате = ВсегоНачислено - НалогНаДоходы - УчтенныйДоход;
		
		Если СтавкаНДФЛ = Ставка13 Тогда
			ТекстСообщения = ""+НомерСтроки+". "+Сотрудник+" (табельный номер "+Сотрудник.Код+")" + РазделительСтрок
							+ "    Валовый доход с начала года: "+(ВаловыйДоход+ВаловойДоход_СНачалаГода)  + РазделительСтрок
							+ "    Предоставленные вычеты: "+НеОблагается  + РазделительСтрок
							+ "    Облагаемый доход с начала года: "+ОблагаемыйДоход  + РазделительСтрок
							+ "    Начислено по документу: "+(ВсегоНачислено - УчтенныйДоход)+", в том числе НДФЛ: "+НалогНаДоходы+", к выплате: "+КВыплате;
		Иначе                                                                                                                                  					
			ТекстСообщения = ""+НомерСтроки+". "+Сотрудник+" (табельный номер "+Сотрудник.Код+")" + РазделительСтрок
							+ "    Начислено по документу: "+(ВсегоНачислено - УчтенныйДоход)+", в том числе НДФЛ: "+НалогНаДоходы+", к выплате: "+КВыплате;
		КонецЕсли;
				
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0); 

		ТаблицаСотрудников.УстановитьЗначение(Стр,2,(УчтенныйДоход + ВсегоНачислено)); 
		ТаблицаСотрудников.УстановитьЗначение(Стр,3,(УчтенныйНДФЛ + НалогНаДоходы)); 

	КонецЦикла;
	
	// Если документ создан в редакции 4.0, то начислим ЕСН.
	Если ВерсияОбъекта < "7.70.421" Тогда
	    Сч00 = СчетПоКоду("00");
		Сч69_1 = СчетПоКоду("69.1");
		Сч69_2_1 = СчетПоКоду("69.2.1");
		Сч69_3_1 = СчетПоКоду("69.3.1");
		Сч69_3_2 = СчетПоКоду("69.3.2");
		Сч69_11 = СчетПоКоду("69.11");
		Сч70 = СчетПоКоду("70");
		Сч84 = СчетПоКоду("84");
		Сч91_2 = СчетПоКоду("91.2");
		
		ТаблицаНачисления = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаНачисления.НоваяКолонка("СчетЗатрат");
		ТаблицаНачисления.НоваяКолонка("Субконто1");
		ТаблицаНачисления.НоваяКолонка("Субконто2");
		ТаблицаНачисления.НоваяКолонка("Субконто3");
		ТаблицаНачисления.НоваяКолонка("НачисленоБезДоговорников", "Число");
		ТаблицаНачисления.НоваяКолонка("ВсегоНачислено", "Число");
		
		КонецМесяцаДокумента = КонМесяца(ДатаДок);
	
		БухИт70 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт70.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт70.ВключатьСубсчета(1,1);
		БухИт70.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
		БухИт70.ВыполнитьЗапрос(НачГода(ДатаДок),КонецМесяцаДокумента, Сч70,,,2,"Месяц");
		
		БухИт69 = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт69.ИспользоватьРазделительУчета(ЮрЛицо);
		БухИт69.ВключатьСубсчета(1,1);
		БухИт69.ИспользоватьСубконто();
		БухИт69.ИспользоватьСубконто();
		БухИт69.ИспользоватьСубконто();
		БухИт69.ВыполнитьЗапрос(НачГода(ДатаДок),КонецМесяцаДокумента, "69.1,69.2.1,69.3.1,69.3.2",,,2);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
	
			ВаловыйДоход = 0;
			НеОблагаетсяФСС = 0;
			НеОблагаетсяЕСН = 0;
			
			НачисленоИзЧистойПрибыли = 0;
			НачисленоПособий = 0;
			ФСС_Начисленный = 0;
			ПФ_Начисленный = 0;
			ТОМС_Начисленный = 0;
			ФОМС_Начисленный = 0;
			
			ВсегоНачислено = Оклад + НачисленоРК + НачисленоСН;
			ВаловойДоход_СНачалаГода = ?(ДатаГод(глДатаПриема(Сотрудник))=ДатаГод(ДатаДок), Сотрудник.ВаловойДоход_СНачалаГода, 0);
			Если ДатаГод(глДатаПриема(Сотрудник)) = ДатаГод(ДатаДок) Тогда
				ДоходОблагаемыйЕСН_СНачалаГода = Сотрудник.ДоходОблагаемыйЕСН_СНачалаГода;
				НачисленныйЕСН_ПФР_СНачалаГода = Сотрудник.НачисленныйЕСН_ПФР_СНачалаГода;
				НачисленныйЕСН_ФОМС_СНачалаГода = Сотрудник.НачисленныйЕСН_ФОМС_СНачалаГода;
				НачисленныйЕСН_ТОМС_СНачалаГода = Сотрудник.НачисленныйЕСН_ТОМС_СНачалаГода;
				ДоходОблагаемыйЕСН_ФСС_СНачалаГода = Сотрудник.ДоходОблагаемыйЕСН_ФСС_СНачалаГода;
				НачисленныйЕСН_ФСС_СНачалаГода = Сотрудник.НачисленныйЕСН_ФСС_СНачалаГода;
			Иначе
				ДоходОблагаемыйЕСН_СНачалаГода = 0;
				НачисленныйЕСН_ПФР_СНачалаГода = 0;
				НачисленныйЕСН_ФОМС_СНачалаГода = 0;
				НачисленныйЕСН_ТОМС_СНачалаГода = 0;
				ДоходОблагаемыйЕСН_ФСС_СНачалаГода = 0;
				НачисленныйЕСН_ФСС_СНачалаГода = 0;
			КонецЕсли;
			
			СчетЗатрат = Сотрудник.СчетЗатрат.Получить(КонецМесяцаДокумента);
			Если ПустоеЗначение(СчетЗатрат) = 1 Тогда
				ТекстСообщения = "Не выбран счет отнесения затрат для сотрудника "+Сотрудник;
				глНеПроводить(ТекущийДокумент(), ТекстСообщения, Сотрудник);
				Возврат;
			КонецЕсли;
			
			ЕстьИтоги = БухИт70.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник);
			БухИт70.ВыбратьПериоды(1);
			
			Пока БухИт70.ПолучитьПериод() = 1 Цикл
				НачисленоПособийЗаМесяц = 0;
				НачисленоИзЧистойПрибылиЗаМесяц = 0;
				ДополнительныйДоходЗаМесяц = Сотрудник.ДополнительныйДоход.Получить(БухИт70.КонДата) -
					?(ДатаМесяц(БухИт70.КонДата)=1,0,Сотрудник.ДополнительныйДоход.Получить(БухИт70.НачДата-1));
	
				//Начисления и валовый доход
				НачисленоЗаМесяц = ?(ЕстьИтоги = 1, БухИт70.КО(), 0) + 
								   ?(БухИт70.КонДата=КонецМесяцаДокумента, ВсегоНачислено, 0) + 
								   ДополнительныйДоходЗаМесяц;
								   
				Если ЕстьИтоги = 1 Тогда
					Если БухИт70.ПолучитьКорСчет(, Сч00) = 1 Тогда
						//Учтем начальный остаток
						НачисленоЗаМесяц = НачисленоЗаМесяц - БухИт70.КорКО();
					КонецЕсли;
					
					//Суммы не облагаемые ЕСН	
					Если БухИт70.ПолучитьКорСчет(, Сч69_1) = 1 Тогда
						НачисленоПособийЗаМесяц = БухИт70.КорКО();
					КонецЕсли;
					
					Если БухИт70.ПолучитьКорСчет(, Сч69_11) = 1 Тогда
						НачисленоПособийЗаМесяц = НачисленоПособийЗаМесяц + БухИт70.КорКО();
					КонецЕсли;
					
					Если БухИт70.ПолучитьКорСчет(, Сч84) = 1 Тогда
						НачисленоИзЧистойПрибылиЗаМесяц = БухИт70.КорКО();
					КонецЕсли;
				КонецЕсли;
				
				Если ((СчетЗатрат = Сч69_1) или (СчетЗатрат = Сч69_11)) и (БухИт70.КонДата = КонецМесяцаДокумента) Тогда
					НачисленоПособийЗаМесяц = НачисленоПособийЗаМесяц + ВсегоНачислено;
				КонецЕсли;
					
				Если (СчетЗатрат.ПринадлежитГруппе(Сч84) = 1) и (БухИт70.КонДата = КонецМесяцаДокумента) Тогда
					НачисленоИзЧистойПрибылиЗаМесяц = НачисленоИзЧистойПрибылиЗаМесяц + ВсегоНачислено;
				КонецЕсли;
				
				ВаловыйДоход = ВаловыйДоход + НачисленоЗаМесяц;
				
				//По договорникам не начисляется ФСС
				Если Сотрудник.ТипСотрудника.Получить(БухИт70.КонДата) = 2 Тогда
					НеОблагаетсяФСС = НеОблагаетсяФСС + НачисленоЗаМесяц;
				Иначе
					НеОблагаетсяФСС = НеОблагаетсяФСС + НачисленоПособийЗаМесяц + НачисленоИзЧистойПрибылиЗаМесяц;
				КонецЕсли;
				НеОблагаетсяЕСН = НеОблагаетсяЕСН + НачисленоПособийЗаМесяц + НачисленоИзЧистойПрибылиЗаМесяц;
			КонецЦикла;
				
			//Суммы ранее начисленного ЕСН
			Если БухИт69.ПолучитьСчет(, Сч69_1) = 1 Тогда
				Если БухИт69.ПолучитьСубконто(2,,Сотрудник) = 1 Тогда
					Если БухИт69.ПолучитьСубконто(1,,Перечисление.ВидыПлатежейВФонды.Взносы) = 1 Тогда
			    		ФСС_Начисленный = БухИт69.КО();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если БухИт69.ПолучитьСчет(, Сч69_2_1) = 1 Тогда
				Если БухИт69.ПолучитьСубконто(2,,Сотрудник) = 1 Тогда
					Если БухИт69.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
		    			ПФ_Начисленный = БухИт69.КО();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если БухИт69.ПолучитьСчет(, Сч69_3_2) = 1 Тогда
				Если БухИт69.ПолучитьСубконто(2,,Сотрудник) = 1 Тогда
					Если БухИт69.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
				    	ТОМС_Начисленный = БухИт69.КО();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если БухИт69.ПолучитьСчет(, Сч69_3_1) = 1 Тогда
				Если БухИт69.ПолучитьСубконто(2,,Сотрудник) = 1 Тогда
					Если БухИт69.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
			    		ФОМС_Начисленный = БухИт69.КО();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			//Расчет начислений по ЕСН в этом месяце
			ПФ = Макс(ОтчислениеВФонд("ЕСН_ФБ", ВаловыйДоход-НеОблагаетсяЕСН+ДоходОблагаемыйЕСН_СНачалаГода, КонецМесяцаДокумента) - ПФ_Начисленный - НачисленныйЕСН_ПФР_СНачалаГода, 0);
			ФСС = Макс(ОтчислениеВФонд("ФСС", ВаловыйДоход-НеОблагаетсяФСС+ДоходОблагаемыйЕСН_ФСС_СНачалаГода, КонецМесяцаДокумента) - ФСС_Начисленный - НачисленныйЕСН_ФСС_СНачалаГода, 0);
			ФОМС = Макс(ОтчислениеВФонд("ФФОМС", ВаловыйДоход-НеОблагаетсяЕСН+ДоходОблагаемыйЕСН_СНачалаГода, КонецМесяцаДокумента) - ФОМС_Начисленный - НачисленныйЕСН_ФОМС_СНачалаГода, 0);
			ТОМС = Макс(ОтчислениеВФонд("ТФОМС", ВаловыйДоход-НеОблагаетсяЕСН+ДоходОблагаемыйЕСН_СНачалаГода, КонецМесяцаДокумента) - ТОМС_Начисленный - НачисленныйЕСН_ТОМС_СНачалаГода, 0);
			
			//Заполнение таблицы для начисления ФСС с НС и ПЗ, сбора на образование
			//Получение аналитики по затратам
			ТаблицаНачисления.НоваяСтрока();
			ТаблицаНачисления.СчетЗатрат = СчетЗатрат;
			Если (СчетЗатрат <> Сч69_1) и (СчетЗатрат <> Сч69_11) Тогда
				ТаблицаНачисления.ВсегоНачислено = ВсегоНачислено;
				Если (Сотрудник.ТипСотрудника.Получить(КонецМесяцаДокумента) <> 2) Тогда
					ТаблицаНачисления.НачисленоБезДоговорников = ВсегоНачислено;
				КонецЕсли;
			КонецЕсли;
			Если (СчетЗатрат.ВидСубконто(1) = ВидыСубконто.СтатьиЗатратНаПроизводство) или
				 (СчетЗатрат.ВидСубконто(1) = ВидыСубконто.СтатьиОбщепроизводственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(1) = ВидыСубконто.СтатьиОбщехозяйственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(1) = ВидыСубконто.СтатьиИздержекОбращения) или
				 (СчетЗатрат.ВидСубконто(1) = ВидыСубконто.СтатьиКоммерческихРасходов) или
				 (СчетЗатрат.ВидСубконто(1) = ВидыСубконто.СтатьиРасходовНаПродажу) Тогда
				ТаблицаНачисления.Субконто1 = Сотрудник.СтатьяОтчисленийНаСоцНужды.Получить(КонецМесяцаДокумента);
			Иначе
				ТаблицаНачисления.Субконто1 = Сотрудник.Субконто1.Получить(КонецМесяцаДокумента);
			КонецЕсли;
	
			Если (СчетЗатрат.ВидСубконто(2) = ВидыСубконто.СтатьиЗатратНаПроизводство) или
				 (СчетЗатрат.ВидСубконто(2) = ВидыСубконто.СтатьиОбщепроизводственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(2) = ВидыСубконто.СтатьиОбщехозяйственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(2) = ВидыСубконто.СтатьиИздержекОбращения) или
				 (СчетЗатрат.ВидСубконто(2) = ВидыСубконто.СтатьиКоммерческихРасходов) или
				 (СчетЗатрат.ВидСубконто(2) = ВидыСубконто.СтатьиРасходовНаПродажу) Тогда
				ТаблицаНачисления.Субконто2 = Сотрудник.СтатьяОтчисленийНаСоцНужды.Получить(КонецМесяцаДокумента);
			Иначе
				ТаблицаНачисления.Субконто2 = Сотрудник.Субконто2.Получить(КонецМесяцаДокумента);
			КонецЕсли;
	
			Если (СчетЗатрат.ВидСубконто(3) = ВидыСубконто.СтатьиЗатратНаПроизводство) или
				 (СчетЗатрат.ВидСубконто(3) = ВидыСубконто.СтатьиОбщепроизводственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(3) = ВидыСубконто.СтатьиОбщехозяйственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(3) = ВидыСубконто.СтатьиИздержекОбращения) или
				 (СчетЗатрат.ВидСубконто(3) = ВидыСубконто.СтатьиКоммерческихРасходов) или
				 (СчетЗатрат.ВидСубконто(3) = ВидыСубконто.СтатьиРасходовНаПродажу) Тогда
				ТаблицаНачисления.Субконто3 = Сотрудник.СтатьяОтчисленийНаСоцНужды.Получить(КонецМесяцаДокумента);
			Иначе
				ТаблицаНачисления.Субконто3 = Сотрудник.Субконто3.Получить(КонецМесяцаДокумента);
			КонецЕсли;
			
			//Начисление ЕСН
			Если ФСС <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ЗП";
			    Операция.СодержаниеПроводки = "Начислен ЕСН в части ФСС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = ТаблицаНачисления.СчетЗатрат;
				Операция.Дебет.Субконто(1, ТаблицаНачисления.Субконто1);
				Операция.Дебет.Субконто(2, ТаблицаНачисления.Субконто2);
				Операция.Дебет.Субконто(3, ТаблицаНачисления.Субконто3);
				Операция.Кредит.Счет = Сч69_1;
				Операция.Кредит.Сотрудники = Сотрудник;
				Операция.Кредит.ВидыПлатежейВФонды = Перечисление.ВидыПлатежейВФонды.Взносы;
				Операция.Сумма = ФСС;
			КонецЕсли;
			
			Если ПФ <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ЗП";
			    Операция.СодержаниеПроводки = "Начислен ЕСН в части ПФР";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = ТаблицаНачисления.СчетЗатрат;
				Операция.Дебет.Субконто(1, ТаблицаНачисления.Субконто1);
				Операция.Дебет.Субконто(2, ТаблицаНачисления.Субконто2);
				Операция.Дебет.Субконто(3, ТаблицаНачисления.Субконто3);
				Операция.Кредит.Счет = Сч69_2_1;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Кредит.Сотрудники = Сотрудник;
				Операция.Сумма = ПФ;
			КонецЕсли;
			
			Если ФОМС <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ЗП";
			    Операция.СодержаниеПроводки = "Начислен ЕСН в части ФОМС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = ТаблицаНачисления.СчетЗатрат;
				Операция.Дебет.Субконто(1, ТаблицаНачисления.Субконто1);
				Операция.Дебет.Субконто(2, ТаблицаНачисления.Субконто2);
				Операция.Дебет.Субконто(3, ТаблицаНачисления.Субконто3);
				Операция.Кредит.Счет = Сч69_3_1;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Кредит.Сотрудники = Сотрудник;
				Операция.Сумма = ФОМС;
			КонецЕсли;
			
			Если ТОМС <> 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ЗП";
			    Операция.СодержаниеПроводки = "Начислен ЕСН в части ТОМС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = ТаблицаНачисления.СчетЗатрат;
				Операция.Дебет.Субконто(1, ТаблицаНачисления.Субконто1);
				Операция.Дебет.Субконто(2, ТаблицаНачисления.Субконто2);
				Операция.Дебет.Субконто(3, ТаблицаНачисления.Субконто3);
				Операция.Кредит.Счет = Сч69_3_2;
				Операция.Кредит.ВидыПлатежейВБюджет = Перечисление.ВидыПлатежейВБюджет.Налог;
				Операция.Кредит.Сотрудники = Сотрудник;
				Операция.Сумма = ТОМС;
			КонецЕсли;
			
			//Корректировка в фонды
			Если (ВсегоНачислено <> 0) и (Сотрудник.ТипСотрудника.Получить(КонецМесяцаДокумента) = 2) Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ЗП";
				Операция.СодержаниеПроводки = "Корректировка по ФСС";
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Кредит.Счет = СчетПоКоду("КФ");
				Операция.Кредит.Субконто(1, Перечисление.Фонды.ФСС);
				Операция.Кредит.Субконто(2, Сотрудник);
				Операция.Сумма = -ВсегоНачислено;
			КонецЕсли;
		КонецЦикла;
		
		Налог = глПолучитьНалог("ФСС_НС");
		Если Налог.Счет.Выбран() = 1 Тогда
			СтавкаНалога = Налог.Ставка.Получить(КонецМесяцаДокумента)/100;
			ТаблицаНачисления.Свернуть("СчетЗатрат, Субконто1, Субконто2, Субконто3", "ВсегоНачислено, НачисленоБезДоговорников");
			ТаблицаНачисления.ВыбратьСтроки();
			Пока ТаблицаНачисления.ПолучитьСтроку() = 1 Цикл
				//Взнос в ФСС с НС и ПЗ
				СуммаНалогаВсего = Окр(ТаблицаНачисления.НачисленоБезДоговорников*СтавкаНалога,2,1);
				Если СуммаНалогаВсего <> 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ЗП";
				    Операция.СодержаниеПроводки = "Взносы в ФСС с НС и ПЗ";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Дебет.Счет = ТаблицаНачисления.СчетЗатрат;
					Операция.Дебет.Субконто(1, ТаблицаНачисления.Субконто1);
					Операция.Дебет.Субконто(2, ТаблицаНачисления.Субконто2);
					Операция.Дебет.Субконто(3, ТаблицаНачисления.Субконто3);
					Операция.Кредит.Счет = Сч69_11;
					Операция.Кредит.ВидыПлатежейВФонды = Перечисление.ВидыПлатежейВФонды.Взносы;
					Операция.Сумма = СуммаНалогаВсего;
				КонецЕсли;
			
				//Корректировка ФСС НСиПЗ
				Если (ТаблицаНачисления.ВсегоНачислено-ТаблицаНачисления.НачисленоБезДоговорников) <> 0 Тогда
					Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
					Операция.НомерЖурнала = "ЗП";
					Операция.СодержаниеПроводки = "Корректировка по ФСС с НС";
					Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
					Операция.Кредит.Счет = СчетПоКоду("КФ");
					Операция.Кредит.Субконто(1, Перечисление.Фонды.ФСС_НСиПЗ);
					Операция.Кредит.Субконто(2, ПолучитьПустоеЗначение("Справочник.Сотрудники"));
					Операция.Сумма = -(ТаблицаНачисления.ВсегоНачислено-ТаблицаНачисления.НачисленоБезДоговорников);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//Образование
		Налог = глПолучитьНалог("Образ");
		Если Налог.Счет.Выбран() = 1 Тогда
			БазаНалога = Итог("Оклад")+Итог("НачисленоРК")+Итог("НачисленоСН");
			СтавкаНалога = Налог.Ставка.Получить(КонецМесяцаДокумента)/100;
			СуммаНалогаВсего = Окр(БазаНалога*СтавкаНалога,0,1);
			Если СуммаНалогаВсего > 0 Тогда
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ЗП";
				Операция.СодержаниеПроводки = Налог.Наименование;
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Дебет.Счет = Сч91_2;
				Операция.Дебет.ПрочиеДоходыИРасходы = ПолучитьСубконто91();
				Операция.Кредит.Счет = Налог.Счет;
				Для i=1 По Налог.Счет.КоличествоСубконто() Цикл
					Операция.Кредит.Субконто(i, Налог.ПолучитьАтрибут("Субконто"+i));
				КонецЦикла;
				Операция.Сумма = СуммаНалогаВсего;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; // конец алгоритма начисления ЕСН для документов редакции 4.0
	
	Операция.Записать();
	
	ТекстСообщения = "Документ проведен.";
	глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0);
	глПриПроведении(Контекст);
	
КонецПроцедуры // ОбработкаПроведения()

//******************************************************************************
// Предопределенная процедура
//
// Описание:
//	Очищает значение реквизита КВыплате.
//
Процедура ОбработкаУдаленияПроведения()
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		КВыплате = 0;
	КонецЦикла;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()