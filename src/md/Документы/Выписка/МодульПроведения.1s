Перем Сч52, Сч62_1, Сч62_11, Сч62_2, Сч62_22, Сч62_6, Сч62_7, Сч62_8, Сч60_6, Сч60_7, Сч76_6, СчУЕ_60, СчУЕ_62, СчВАЛ_60, СчВАЛ_62;
Перем Валютный, Курс, Кратность;
Перем БухИт, СчБезНалРасч;
Перем МетодОпределенияВыручки;   
Перем ПереченьСтатейЗатрат;

//******************************************************************************
// ПолучитьЭлементПрочихДоходовРасходов()
//
Функция ПолучитьЭлементПрочихДоходовРасходов()
	
	СпрПрочиеДоходыИРасходы = СоздатьОбъект("Справочник.ПрочиеДоходыИРасходы");
	СпрПрочиеДоходыИРасходы.ВыбратьЭлементыПоРеквизиту("ВидПрочихДоходовИРасходов", Перечисление.ВидыПрочихДоходовИРасходов.КупляПродажаИностраннойВалюты,,);
	Если СпрПрочиеДоходыИРасходы.ПолучитьЭлемент() = 1 Тогда
		КупляПродажаВалюты = СпрПрочиеДоходыИРасходы.ТекущийЭлемент();
		
	Иначе
		СпрПрочиеДоходыИРасходы.Новый();
		СпрПрочиеДоходыИРасходы.Наименование = "Купля-продажа иностранной валюты";
		СпрПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.КупляПродажаИностраннойВалюты;
		СпрПрочиеДоходыИРасходы.Записать();
		КупляПродажаВалюты = СпрПрочиеДоходыИРасходы.ТекущийЭлемент();
	КонецЕсли;
	
	Возврат КупляПродажаВалюты;
	
КонецФункции // ПолучитьЭлементПрочихДоходовРасходов()
//******************************************************************************
// КупляПродажаВалюты()
//
Процедура КупляПродажаВалюты()
	
	
	Если Валютный = 2 Тогда // покупка валюты (поступление валютных средств)
		Если КоррСчет.Код <> "76.5" Тогда
		    Возврат;
			
		ИначеЕсли КурсПокупкиПродажи = 0 Тогда // не указан курс на дату покупки валюты
		    Возврат;
		КонецЕсли;
		
		Разница = (Приход*Курс - Приход * КурсПокупкиПродажи)/Кратность;
		
 		Если Разница > 0 Тогда // доход
 			
 			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "БК";
			Операция.СодержаниеПроводки = "Отклонение курса покупки валюты от курса ЦБ";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетПоКоду("91.1");
			Операция.Кредит.ПрочиеДоходыИРасходы = ПолучитьЭлементПрочихДоходовРасходов();
			Операция.Дебет.Счет = КоррСчет;
			Для а = 1 по КоррСчет.КоличествоСубконто() Цикл
				Операция.Дебет.Субконто(а, ПолучитьАтрибут("Субконто" +а));
			КонецЦикла;
			Операция.Сумма = Разница;
 			
			// Отражение курсовых разниц в налоговом учете.
 			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Отклонение курса покупки валюты от курса ЦБ";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетПоКоду("Н08");
			Операция.Кредит.ВнереализационныеДоходы = Перечисление.ВнереализационныеДоходы.КупляПродажаИностраннойВалюты;
			Операция.Сумма = Разница;
			
		ИначеЕсли Разница < 0 Тогда // расход
			
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "БК";
			Операция.СодержаниеПроводки = "Отклонение курса покупки валюты от курса ЦБ";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетПоКоду("91.2");
			Операция.Дебет.ПрочиеДоходыИРасходы = ПолучитьЭлементПрочихДоходовРасходов();
			Операция.Кредит.Счет = КоррСчет;
			Для а = 1 по КоррСчет.КоличествоСубконто() Цикл
				Операция.Кредит.Субконто(а, ПолучитьАтрибут("Субконто" +а));
			КонецЦикла;
			Операция.Сумма = -Разница;
 			
			// Отражение курсовых разниц в налоговом учете.
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Отклонение курса покупки валюты от курса ЦБ";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетПоКоду("Н09");
			Операция.Дебет.ВнереализационныеРасходы = Перечисление.ВнереализационныеРасходы.КупляПродажаИностраннойВалюты;
			Операция.Сумма = -Разница;
 		КонецЕсли;
		
	Иначе // продажа валюы (поступление денежных средств на расчетный счет)
		
		Если СуммаПроданнойВалюты * КурсПокупкиПродажи = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		Кратность = 1;
		Если ПустоеЗначение(ПроданнаяВалюта) = 0 Тогда
			Кратность = ПроданнаяВалюта.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность=0,1,Кратность);    
		КонецЕсли;
		
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "БК";
		Операция.СодержаниеПроводки = "Сумма проданной валюты по курсу ЦБ";
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчетПоКоду("91.2");
		Операция.Дебет.ПрочиеДоходыИРасходы = ПолучитьЭлементПрочихДоходовРасходов();
		Операция.Кредит.Счет = СчетПоКоду("57.11");
		Операция.ВалСумма = СуммаПроданнойВалюты;
		Операция.Валюта = ПроданнаяВалюта;
		Операция.Сумма = СуммаПроданнойВалюты * КурсПокупкиПродажи / Кратность;
		
 		Разница = Приход - (СуммаПроданнойВалюты * КурсПокупкиПродажи) / Кратность;
 		Если Разница > 0 Тогда // доход (курс ЦБ на дату поступления д. средств на счет меньше курса покупки)
 			
			// Отражение курсовых разниц в налоговом учете.
 			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Отклонение курса продажи валюты от курса ЦБ";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетПоКоду("Н08");
			Операция.Кредит.ВнереализационныеДоходы = Перечисление.ВнереализационныеДоходы.КупляПродажаИностраннойВалюты;
			Операция.Сумма = Разница;
			
		ИначеЕсли Разница < 0 Тогда // расход
			
			// Отражение курсовых разниц в налоговом учете.
			Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
			Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = "Отклонение курса продажи валюты от курса ЦБ";
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетПоКоду("Н09");
			Операция.Дебет.ВнереализационныеРасходы = Перечисление.ВнереализационныеРасходы.КупляПродажаИностраннойВалюты;
			Операция.Сумма = -Разница;
 		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // КупляПродажаВалюты()

//******************************************************************************
// ДобавитьСтрокуВТаблицуПереоценки()
//
Процедура ДобавитьСтрокуВТаблицуПереоценки(Счет, Аванс=0, Субк3="")
	
	глТаблицаСчетов.НоваяСтрока();
	глТаблицаСчетов.Счет = Счет;
	глТаблицаСчетов.Субконто1 = Субконто1;
	Если Аванс = 0 Тогда
	    глТаблицаСчетов.Субконто2 = Субконто2;
	Иначе
		глТаблицаСчетов.Субконто2 = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Субконто1, 1);
	КонецЕсли;
	глТаблицаСчетов.Субконто3 = Субконто3;	    
	Если Найти("60.6,62.6,76.6",КоррСчет.Код) > 0 Тогда
		глТаблицаСчетов.Валюта = Субконто2.ВалютаДоговора; 
		глТаблицаСчетов.РублевыйОстаток = 	БухИт.СКД(Счет, "С", глТаблицаСчетов.Валюта, глТаблицаСчетов.Субконто1, глТаблицаСчетов.Субконто2, глТаблицаСчетов.Субконто3)
											- БухИт.СКК(Счет, "С", глТаблицаСчетов.Валюта, глТаблицаСчетов.Субконто1, глТаблицаСчетов.Субконто2, глТаблицаСчетов.Субконто3);
		глТаблицаСчетов.ВалютныйОстаток = 	БухИт.СКД(Счет, "В", глТаблицаСчетов.Валюта, глТаблицаСчетов.Субконто1, глТаблицаСчетов.Субконто2, глТаблицаСчетов.Субконто3)
											- БухИт.СКК(Счет, "В", глТаблицаСчетов.Валюта, глТаблицаСчетов.Субконто1, глТаблицаСчетов.Субконто2, глТаблицаСчетов.Субконто3);
	Иначе
		глТаблицаСчетов.Валюта = Валюта;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВТаблицуПереоценки()

//******************************************************************************
// СформироватьПроводки(КоррСч, Субк1="", Субк2="", Субк3="", Прих, Расх, Вал, ВалПрих, ВалРасх)
//
Процедура СформироватьПроводки(КоррСч, Субк1="", Субк2="", Субк3="", Прих, Расх, Вал="", ВалПрих=0, ВалРасх=0)
	
	Перем Субк[3];

	Субк[1] = Субк1;
	Субк[2] = Субк2;
	Субк[3] = Субк3;
            
	СуммаРасходов    = 0;
	СуммаПоступления = 0; 
	
	//Основная проводка
	Если Прих > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "БК";
		Операция.СодержаниеПроводки = НазначениеПлатежа;
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = СчБезНалРасч;
		Операция.Дебет.БанковскиеСчета = БанковскийСчет;
		Операция.Дебет.ДвиженияДенежныхСредств = ВидДвижения;
		Операция.Кредит.Счет = КоррСч;
		Для а = 1 по КоррСч.КоличествоСубконто() Цикл
			Операция.Кредит.Субконто(а, Субк[а]);
		КонецЦикла;
		
		Если Валютный = 2 Тогда
			СуммаПоступления = Окр(Прих*Курс/Кратность,2,1);
			Операция.ВалСумма = Прих;
			Операция.Валюта = Валюта;
		
		Иначе
			Если (ПустоеЗначение(Вал) = 0) и (КоррСч.Валютный = 1) Тогда
				Операция.ВалСумма = ВалПрих;
				Операция.Валюта = Вал;
			КонецЕсли;
			СуммаПоступления = Прих;
		КонецЕсли;
		
		Операция.Сумма = СуммаПоступления;
		
	ИначеЕсли Расх > 0 Тогда
		Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		Операция.НомерЖурнала = "БК";
		Операция.СодержаниеПроводки = НазначениеПлатежа;
		Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
		Операция.Дебет.Счет = КоррСч;
		Для а = 1 по КоррСч.КоличествоСубконто() Цикл
			Операция.Дебет.Субконто(а, Субк[а]);
		КонецЦикла;
		Операция.Кредит.Счет = СчБезНалРасч;
		Операция.Кредит.БанковскиеСчета = БанковскийСчет;
		Операция.Кредит.ДвиженияДенежныхСредств = ВидДвижения;
		
		Если Валютный = 2 Тогда
			СуммаРасходов = Окр(Расх*Курс/Кратность,2,1);
			Операция.ВалСумма = Расх;
			Операция.Валюта = Валюта;
			
		Иначе
			Если (ПустоеЗначение(Вал) = 0) и (КоррСч.Валютный = 1) Тогда
				Операция.ВалСумма = ВалРасх;
				Операция.Валюта = Вал;
			КонецЕсли;
			СуммаРасходов = Расх;
		КонецЕсли;
		
		Операция.Сумма = СуммаРасходов;
        
	Иначе
		Возврат;
	КонецЕсли;

	Если КоррСч.Количественный = 1 Тогда
		Операция.Количество = Количество;
	КонецЕсли;
    
	// Отражение операций в налоговом учете.
	Если СуммаРасходов > 0 Тогда
		ОбъектыАналитикиНУ = глСчетИАналитикаРасходовНУ(Контекст, КоррСч, Субк[1], Субк[2], Субк[3], ПереченьСтатейЗатрат, СчБезНалРасч);
		
		// Если опредлен налоговый счет, то необходимо
		// сформировать проводку для целей налогового учета.
		СчетНУ = ОбъектыАналитикиНУ.Получить("Счет");
		Если ПустоеЗначение(СчетНУ) = 0 Тогда
		    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		    Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = НазначениеПлатежа;
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Дебет.Счет = СчетНУ;
			Для СчетчикЦикла = 1 По СчетНУ.КоличествоСубконто() Цикл
				ИдентификаторСубконто = СчетНУ.ВидСубконто(СчетчикЦикла,,).Идентификатор();
				Операция.Дебет.Субконто(СчетчикЦикла, ОбъектыАналитикиНУ.Получить(ИдентификаторСубконто));
			КонецЦикла;
			
			// Условие выбытия указывается только в случае оказания банковских услуг.
			Если КоррСч.Код = "91.2" Тогда
			    Если Субк[1].ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.УслугиБанков Тогда
			        Операция.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Другие;
			    КонецЕсли;
			КонецЕсли;
			
			Операция.Сумма = СуммаРасходов;
			Если СчетНУ.Количественный = 1 Тогда
			    Операция.Количество = Количество;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СуммаПоступления > 0 Тогда
		ОбъектыАналитикиНУ = глСчетИАналитикаДоходовНУ(Контекст, КоррСчет, Субконто1, Субконто2, Субконто3);
		
		// Если опредлен налоговый счет, то необходимо
		// сформировать проводку для целей налогового учета.
		СчетНУ = ОбъектыАналитикиНУ.Получить("Счет");
		Если ПустоеЗначение(СчетНУ) = 0 Тогда
		    Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
		    Операция.НомерЖурнала = "НУ";
			Операция.СодержаниеПроводки = НазначениеПлатежа;
			Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
			Операция.Кредит.Счет = СчетНУ;
			Для СчетчикЦикла = 1 По СчетНУ.КоличествоСубконто() Цикл
				ИдентификаторСубконто = СчетНУ.ВидСубконто(СчетчикЦикла,,).Идентификатор();
				Операция.Кредит.Субконто(СчетчикЦикла, ОбъектыАналитикиНУ.Получить(ИдентификаторСубконто));
			КонецЦикла;
			Операция.Сумма = СуммаПоступления;
			Если СчетНУ.Количественный = 1 Тогда
			    Операция.Количество = Количество;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;                   

	//********************************************************************
	//Проводки по расчетам в у.е.	
	Если ПустоеЗначение(ДокументПоставки) = 0 Тогда  
		
		Если ДокументПоставки.Вид() <> "Счет" Тогда
			
			Если ДатаДок >= '01.01.2007' Тогда
				Если Найти("60.6,62.6,76.6",КоррСч.Код) > 0 Тогда 
					
					Если (Прих <> 0) или (Расх <> 0) Тогда  
						глТаблицаСчетов.УдалитьСтроки();
						Если КоррСч = Сч60_6 Тогда
							ДобавитьСтрокуВТаблицуПереоценки(Сч60_6, 0);
						ИначеЕсли КоррСч = Сч76_6 Тогда 
							ДобавитьСтрокуВТаблицуПереоценки(Сч76_6, 0);
						ИначеЕсли КоррСч =  Сч62_6 Тогда
							ДобавитьСтрокуВТаблицуПереоценки(Сч62_6, 0);
						КонецЕсли;
						глПереоценкаСчетов(Контекст, глТаблицаСчетов, 0);
						глТаблицаСчетов.УдалитьСтроки();
					КонецЕсли;			
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Найти("60.6,62.6,76.6",КоррСч.Код) > 0 Тогда
		ТекстСообщения = "=> Строка № " + НомерСтроки + " - не указан документ поставки. Суммовые разницы по расчетам в условных единицах с контрагентом: " + Субконто1 + " по договору: " + Субконто2 + " не рассчитаны."; 	
		глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1); 
	КонецЕсли;	
	//********************************************************************
	
	//********************************************************************
	//Проводки по расчетам в валюте 	
	Если ДатаДок >= '01.01.2008' Тогда	
		Если Валютный = 2 Тогда
			Если Найти("60.22,62.22",КоррСч.Код) > 0 Тогда 
				глТаблицаСчетов.УдалитьСтроки(); 
				
				Операция.НоваяПроводка(); Операция.РазделительУчета = ЮрЛицо;
				Операция.НомерЖурнала = "ВЛ";
				Операция.СодержаниеПроводки = НазначениеПлатежа;
				Операция.ПервичныйДокумент  = глПредставлениеПервичногоДокумента(Контекст);
				Операция.Валюта = Валюта;
				
				Если Расх <> 0 Тогда
					
					Если КоррСч.Код = "60.22" Тогда
						ДобавитьСтрокуВТаблицуПереоценки(СчВАЛ_60, 0);
						Операция.Дебет.Счет = СчВАЛ_60;
					Иначе
						ДобавитьСтрокуВТаблицуПереоценки(СчВАЛ_62, 0);
						Операция.Дебет.Счет = СчВАЛ_62;
					КонецЕсли;
					
					Для а = 1 по СчВАЛ_60.КоличествоСубконто() Цикл
						Операция.Дебет.Субконто(а, Субк[а]);
					КонецЦикла;
					СуммаОперацииВал = Расх;
					СуммаОперацииРуб = Окр(Расх*Курс/Кратность,2,1);
					
				Иначе
					
					Если КоррСч.Код = "62.22" Тогда
						ДобавитьСтрокуВТаблицуПереоценки(СчВАЛ_62, 0);
						Операция.Кредит.Счет = СчВАЛ_62;
					Иначе                               						
						ДобавитьСтрокуВТаблицуПереоценки(СчВАЛ_60, 0);
						Операция.Кредит.Счет = СчВАЛ_60;
					КонецЕсли;
					
					Для а = 1 по СчВАЛ_62.КоличествоСубконто() Цикл
						Операция.Кредит.Субконто(а, Субк[а]);
					КонецЦикла;
					СуммаОперацииВал = Прих;
					СуммаОперацииРуб = Окр(Прих*Курс/Кратность,2,1);
					
				КонецЕсли; 
				
				Операция.Сумма = СуммаОперацииРуб;
				Операция.ВалСумма = СуммаОперацииВал;
				
				Если глТаблицаСчетов.количествоСтрок() <> 0 Тогда
					глПереоценкаСчетов(Контекст, глТаблицаСчетов, 1);
					глТаблицаСчетов.УдалитьСтроки();
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//********************************************************************

КонецПроцедуры // СформироватьПроводки()
                                   
Процедура ПослеИзмененияСчета()
	
	Если ПустоеЗначение(БанковскийСчет) = 0 Тогда
		спрП20 = СоздатьОбъект("Справочник.БанковскиеСчета");  
		спрП20.НайтиПоНаименованию("П20");
		спрПерс = СоздатьОбъект("Справочник.БанковскиеСчета");  
		спрПерс.НайтиПоНаименованию("Перс");
		
		Если БанковскийСчет = спрП20.ТекущийЭлемент() Тогда
			ГруппаСчет = Перечисление.ГруппыСчета.П20;
		ИначеЕсли БанковскийСчет = спрПерс.ТекущийЭлемент() Тогда  
			ГруппаСчет = Перечисление.ГруппыСчета.Перс;
		Иначе  
			ГруппаСчет = Перечисление.ГруппыСчета.Универсам;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПроведения()    
	
	Если ПустоеЗначение(ГруппаСчет) = 1 Тогда
		ПослеИзмененияСчета();
	КонецЕсли;
	
	Сч51 = СчетПоКоду("51");
	Сч52 = СчетПоКоду("52");
	Сч60_1 = СчетПоКоду("60.1");
	Сч60_6 = СчетПоКоду("60.6");
	Сч60_11 = СчетПоКоду("60.11");
	Сч60_2 = СчетПоКоду("60.2");
	Сч60_7 = СчетПоКоду("60.7");
	Сч60_22 = СчетПоКоду("60.22");
	Сч62_1 = СчетПоКоду("62.1");
	Сч62_6 = СчетПоКоду("62.6");
	Сч62_2 = СчетПоКоду("62.2");
	Сч62_7 = СчетПоКоду("62.7");
	Сч62_11 = СчетПоКоду("62.11");
	Сч62_22 = СчетПоКоду("62.22");
	Сч62_4 = СчетПоКоду("62.4");
	Сч62_8 = СчетПоКоду("62.8");
	Сч62_44 = СчетПоКоду("62.44");
	Сч76_1 = СчетПоКоду("76.5");
	Сч76_6 = СчетПоКоду("76.6");
	Сч76_2 = СчетПоКоду("76.55");
	
	СчУЕ_60 = СчетПоКоду("УЕ.60");
	СчУЕ_62 = СчетПоКоду("УЕ.62");


	СчВАЛ_60 = СчетПоКоду("ВАЛ.60");
	СчВАЛ_62 = СчетПоКоду("ВАЛ.62");

	МетодОпределенияВыручки = Константа.МетодОпределенияВыручки.Получить(ДатаДок);

	БухИт = СоздатьОбъект("БухгалтерскиеИтоги"); БухИт.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИт.Актуальность(1);
	Если БанковскийСчет.ТипСчета = Перечисление.ТипыБанковскихСчетов.Валютный Тогда
		Валютный = 2;
		СчБезНалРасч = Сч52;
		БухИт.Рассчитать(,ТекущийДокумент(), "60.11,62.11,62.44");

	Иначе 
		Валютный = 1;
		СчБезНалРасч = Сч51;
		БухИт.Рассчитать(,ТекущийДокумент(), "60.1,60.6,62.1,62.4,62.6,62.8,76.5,76.6,УЕ.60,УЕ.62");
	КонецЕсли;  
	
	ПереченьСтатейЗатрат = глПолучитьПереченьСтатейЗатрат(ДатаДок);

	//Переоценка счета 52 и корреспондирующих валютных счетов
	Если Валютный = 2 Тогда
		Курс = Валюта.Курс.Получить(ДатаДок);
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность=0,1,Кратность);

		глТаблицаСчетов.УдалитьСтроки(); 
		
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = СчБезНалРасч;
		глТаблицаСчетов.Субконто1 = БанковскийСчет;
		глТаблицаСчетов.Субконто2 = ВидДвижения;
		глТаблицаСчетов.Субконто3 = "";
		глТаблицаСчетов.Валюта = Валюта;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если КоррСчет.Выбран() = 1 Тогда
				Если КоррСчет.Валютный = 1 Тогда
					Если КоррСчет = СчетПоКоду("50.2") Тогда
						Продолжить;
					ИначеЕсли (КоррСчет = СчетПоКоду("52"))	и (Расход <> 0) Тогда
						Продолжить;
					Иначе
						ДобавитьСтрокуВТаблицуПереоценки(КоррСчет, 0);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВидДвижения.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности Тогда
				ДобавитьСтрокуВТаблицуПереоценки(Сч62_11, 0);
				ДобавитьСтрокуВТаблицуПереоценки(Сч62_22, 1);
				
			ИначеЕсли ВидДвижения.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
				ДобавитьСтрокуВТаблицуПереоценки(Сч60_11, 0);
				ДобавитьСтрокуВТаблицуПереоценки(Сч60_22, 1);

			КонецЕсли;
		КонецЦикла;
		глПереоценкаСчетов(Контекст, глТаблицаСчетов);
				
	Иначе
		// Если отражено поступление денежных средств, связанное
		// с продажей валюты, то необходимо произвести переоценку сета 57.11.
		глТаблицаСчетов.УдалитьСтроки();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ВидДвижения.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КупляПродажаИностраннойВалюты Тогда
				Если (Валютный <> 2) и (СуммаПроданнойВалюты * КурсПокупкиПродажи <> 0) Тогда // продажа валюты (поступление рублевых средств)
					глТаблицаСчетов.НоваяСтрока();
					глТаблицаСчетов.Счет = СчетПоКоду("57.11");
					глТаблицаСчетов.Валюта = ПроданнаяВалюта;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		глПереоценкаСчетов(Контекст, глТаблицаСчетов);	
		глТаблицаСчетов.УдалитьСтроки();
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		ПривязыватьСтроку(НомерСтроки);
		
		ДокПоставки = ДокументПоставки;
		
		Если КоррСчет.ПринадлежитГруппе(СчетПоКоду("50")) = 1 Тогда
			ТекстСообщения = "Проводки по кассе формируются только кассовыми документами.";
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			Продолжить;
			
		ИначеЕсли ((КоррСчет = СчетПоКоду("51")) или (КоррСчет = СчетПоКоду("52"))) и (Расход <> 0) Тогда
			ТекстСообщения = "Проводки по перечислению денежных средств с одного банковского счета на другой формируются выпиской по тому счету, на который денежные средства поступают.";
			глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), -1);
			Продолжить;
		КонецЕсли;
		
		Конт = глВзятьКонтекст(Контекст);
		
		Если КоррСчет.Выбран() = 0 Тогда
			ТипСуммы = ?(Валютный = 1, "С", "В");
			ВалютаРасчетов = ?(Валютный = 1, "", Валюта);
			Если ВидДвижения.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности Тогда
				
				Поступило = Приход;
				
				Сч = ?(Валютный = 1, Сч62_1, Сч62_11); ВалютаДоговора = ""; СуммаОплатыВал = 0; СуммаОплатыРуб = 0; СуммоваяРазница = 0; ВыбКурс = КурсОплаты;
				глУчестьСуммовыеРазницы(Конт, Субконто2, ДокПоставки, БухИт, Сч, 1, Поступило, ВыбКурс, ВалютаДоговора, СуммаОплатыВал, СуммаОплатыРуб, СуммоваяРазница, ПереченьСтатейЗатрат);
				Если Валютный = 2 Тогда
				    СформироватьПроводки(Сч, Субконто1, Субконто2,, СуммаОплатыВал, 0);
					Поступило = Поступило - СуммаОплатыВал;
					
				Иначе
					Сч = ?(ПустоеЗначение(ВалютаДоговора) = 1, Сч62_1, Сч62_6);
					СформироватьПроводки(Сч, Субконто1, Субконто2,, СуммаОплатыРуб, 0, ВалютаДоговора, СуммаОплатыВал, 0);
					Поступило = Поступило - СуммаОплатыРуб;
				КонецЕсли;
						
				Сч = ?(Валютный = 1, Сч62_4, Сч62_44); ВалютаДоговора = ""; СуммаОплатыВал = 0; СуммаОплатыРуб = 0; СуммоваяРазница = 0; ВыбКурс = КурсОплаты;
				глУчестьСуммовыеРазницы(Конт, Субконто2, ДокПоставки, БухИт, Сч, 1, Поступило, ВыбКурс, ВалютаДоговора, СуммаОплатыВал, СуммаОплатыРуб, СуммоваяРазница, ПереченьСтатейЗатрат);
				Если Валютный = 2 Тогда
				    СформироватьПроводки(Сч, Субконто1, Субконто2,, СуммаОплатыВал, 0);
					Поступило = Поступило - СуммаОплатыВал;
					
				Иначе
					Сч = ?(ПустоеЗначение(ВалютаДоговора) = 1, Сч62_4, Сч62_8);
					СформироватьПроводки(Сч, Субконто1, Субконто2,, СуммаОплатыРуб, 0, ВалютаДоговора, СуммаОплатыВал, 0);
					Поступило = Поступило - СуммаОплатыРуб;
				КонецЕсли;
					
				Аванс = Поступило;
				Сч = ?(Валютный = 1, ?(ПустоеЗначение(ВалютаДоговора) = 1, Сч62_2, Сч62_7), Сч62_22);
				БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Субконто1, 1);
				Если ПустоеЗначение(ВалютаДоговора) = 1 Тогда
				    СформироватьПроводки(Сч, Субконто1, БезДоговора,, Аванс, 0); 
					
				Иначе
					АвансВал = ?(ВыбКурс = 0, 0, Аванс / ВыбКурс);
					СформироватьПроводки(Сч, Субконто1, БезДоговора,, Аванс, 0, ВалютаДоговора, АвансВал, 0); 
				КонецЕсли;
				
			ИначеЕсли ВидДвижения.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
				Списано = Расход;
				Сч = ?(Валютный = 1, Сч60_1, Сч60_11); ВалютаДоговора = ""; СуммаОплатыВал = 0; СуммаОплатыРуб = 0; СуммоваяРазница = 0; ВыбКурс = КурсОплаты;
				глУчестьСуммовыеРазницы(Конт, Субконто2, ДокПоставки, БухИт, Сч, 2, Списано, ВыбКурс, ВалютаДоговора, СуммаОплатыВал, СуммаОплатыРуб, СуммоваяРазница, ПереченьСтатейЗатрат);
				Если Валютный = 2 Тогда
				    СформироватьПроводки(Сч, Субконто1, Субконто2,, 0, СуммаОплатыВал);
					Списано = Списано - СуммаОплатыВал;
					
				Иначе
					Сч = ?(ПустоеЗначение(ВалютаДоговора) = 1, Сч60_1, Сч60_6);
					СформироватьПроводки(Сч, Субконто1, Субконто2,, 0, СуммаОплатыРуб, ВалютаДоговора, 0, СуммаОплатыВал);
					Списано = Списано - СуммаОплатыРуб;
				КонецЕсли;
				
				Аванс = Списано;
				Сч = ?(Валютный = 1, ?(ПустоеЗначение(ВалютаДоговора) = 1, Сч60_2, Сч60_7), Сч60_22);
				БезДоговора = глДоговор(глИмяДоговораДляПлатежейБезДоговора, Субконто1, 1); 
				Если ПустоеЗначение(ВалютаДоговора) = 1 Тогда
					СформироватьПроводки(Сч, Субконто1, БезДоговора,, 0, Аванс);
					
				Иначе
					АвансВал = ?(ВыбКурс = 0, 0, Аванс / ВыбКурс);
					СформироватьПроводки(Сч, Субконто1, БезДоговора,, 0, Аванс, ВалютаДоговора, 0, АвансВал); 
				КонецЕсли;
				
			Иначе
				ТекстСообщения = "Не указан корреспондирующий счет.";
				глНеПроводить(Контекст, ТекстСообщения);
				Возврат;
			КонецЕсли;
			
		ИначеЕсли Приход <> 0 Тогда 
			
			ВалютаДоговора = ""; СуммаОплатыВал = 0; СуммаОплатыРуб = 0; СуммоваяРазница = 0; ВыбКурс = КурсОплаты;
			глУчестьСуммовыеРазницы(Конт, Субконто2, ДокПоставки, БухИт, КоррСчет, 1, Приход, ВыбКурс, ВалютаДоговора, СуммаОплатыВал, СуммаОплатыРуб, СуммоваяРазница, ПереченьСтатейЗатрат);
			Если Валютный = 2 Тогда
			    СформироватьПроводки(КоррСчет, Субконто1, Субконто2, Субконто3, Приход, 0);
				
			Иначе
			    ПриходВал = ?(ВыбКурс = 0, 0, Приход / ВыбКурс);
				СформироватьПроводки(КоррСчет, Субконто1, Субконто2, Субконто3, Приход, 0, ВалютаДоговора, ПриходВал, 0);
			КонецЕсли;

			Если ВидДвижения.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КупляПродажаИностраннойВалюты Тогда
				КупляПродажаВалюты();
			КонецЕсли;
			
		ИначеЕсли Расход <> 0 Тогда
            ВалютаДоговора = ""; СуммаОплатыВал = 0; СуммаОплатыРуб = 0; СуммоваяРазница = 0; ВыбКурс = КурсОплаты;
			глУчестьСуммовыеРазницы(Конт, Субконто2, ДокПоставки, БухИт, КоррСчет, 2, Расход, ВыбКурс, ВалютаДоговора, СуммаОплатыВал, СуммаОплатыРуб, СуммоваяРазница, ПереченьСтатейЗатрат);
			Если Валютный = 2 Тогда
			    СформироватьПроводки(КоррСчет, Субконто1, Субконто2, Субконто3, 0, Расход);
				
			Иначе
				РасходВал = ?(ВыбКурс = 0, 0, Расход / ВыбКурс);
				СформироватьПроводки(КоррСчет, Субконто1, Субконто2, Субконто3, 0, Расход, ВалютаДоговора, 0, РасходВал);
			КонецЕсли;
		КонецЕсли; 
		
		Операция.ЗаписатьПроводки();		
		
	КонецЦикла; 
	
	Операция.Записать();
		
	//ТекстСообщения = "Р/с № "+СокрЛП(БанковскийСчет.Номер)+" в "+СокрЛП(БанковскийСчет.БанкОрганизации.Наименование);
	//глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0 ,,,,,0);
	//
	//ТекстСообщения = "Поступило: "+СокрЛП(Формат(Итог("Приход"),"Ч15.2.,"))+"; "+"Списано: "+СокрЛП(Формат(Итог("Расход"),"Ч15.2.,"));
	//глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,,,,,0);
	//
	//ТекстСообщения = "Документ проведен.";
	//глСообщениеПроведения(ТекстСообщения, ТекущийДокумент(), 0,,,,,0);
	
//	глПриПроведении(Контекст);  Трассировка сообщений. комментарий выполняемых действий
	
КонецПроцедуры // ОбработкаПроведения()