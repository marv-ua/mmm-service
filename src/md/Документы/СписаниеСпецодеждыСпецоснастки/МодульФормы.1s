////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем НачальнаяДатаДокумента;
Перем СписокДействий;
Перем Новый;

//******************************************************************************
// Заполнить()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка "Заполнить".
//
// Описание:
//  Заполняется табличная чать документа..
//
Процедура Заполнить()
	
	Если Выбран() = 0 Тогда
	    Предупреждение("Перед заполнением документ необходимо записать!", 60);
		Возврат;
	КонецЕсли;
	
	Если  КоличествоСтрок() > 0 Тогда
		Если
			Вопрос("Таблица будет очищена, а существующие строки удалены.
				   |Продолжить?","Да+Нет") <> "Да" Тогда
						
			Возврат;
		КонецЕсли;
		
		УдалитьСтроки();
	КонецЕсли;
	
	БухИтоги = СоздатьОбъект("БухгалтерскиеИтоги"); БухИтоги.ИспользоватьРазделительУчета(ЮрЛицо);
	БухИтоги.ИспользоватьСубконто(ВидыСубконто.Материалы);
	Если ВидМатериалов<>3 Тогда
		БухИтоги.ИспользоватьСубконто(ВидыСубконто.НазначенияИспользования);    
	КонецЕсли;
		
	Если ВидМатериалов = 1 Тогда // спецодежда
		БухИтоги.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
		БухИтоги.ВыполнитьЗапрос(ТекущийДокумент(),, "10.11.1",,,,, "СК");
	
	ИначеЕсли ВидМатериалов = 2 Тогда // спецоснастка
		
		Если ПустоеЗначение(Подразделение) = 1 Тогда
			Предупреждение("Не указано подразделение!", 60);
			Возврат;
		КонецЕсли;
		
		БухИтоги.ИспользоватьСубконто(ВидыСубконто.Подразделения, Подразделение);
		БухИтоги.ВыполнитьЗапрос(ТекущийДокумент(),, "10.11.2",,,,, "СК");
		
	ИначеЕсли ВидМатериалов = 3 Тогда //инвентарь
		БухИтоги.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
		БухИтоги.ВыполнитьЗапрос(ТекущийДокумент(),, "МЦ.04",,,,, "К");
	КонецЕсли;
	
	БухИтоги.ВыбратьСчета();
	Пока БухИтоги.ПолучитьСчет() = 1 Цикл
		
		БухИтоги.ВыбратьСубконто(ВидыСубконто.Материалы);
		Пока БухИтоги.ПолучитьСубконто(ВидыСубконто.Материалы) = 1 Цикл
			//_____________________________________________________________________________   
			Если ВидМатериалов = 3 Тогда
				БухИтоги.ВыбратьСубконто(2);
				Пока БухИтоги.ПолучитьСубконто(2) = 1 Цикл
					КоличествоСписать = БухИтоги.СНД("К");
					Если КоличествоСписать <= 0 Тогда 
						Продолжить;
					КонецЕсли;
					НоваяСтрока();
					Материал = БухИтоги.Субконто(ВидыСубконто.Материалы);
					Сотрудник = БухИтоги.Субконто(2);
					Количество = КоличествоСписать;
				КонецЦикла;
				//_____________________________________________________________________________                
			Иначе
				
				БухИтоги.ВыбратьСубконто(ВидыСубконто.НазначенияИспользования);
				Пока БухИтоги.ПолучитьСубконто(ВидыСубконто.НазначенияИспользования) = 1 Цикл
					НазначениеИспользования_ = БухИтоги.Субконто(ВидыСубконто.НазначенияИспользования);
					
					НезаполненныйРеквизит      = "";
					ДатаВводаВЭксплуатацию     = НазначениеИспользования_.ДатаВводаВЭксплуатацию;
					СпособПогашенияСтоимости   = НазначениеИспользования_.СпособПогашенияСтоимости;
					СрокПолезногоИспользования = НазначениеИспользования_.СрокПолезногоИспользования;
					
					Если ПустоеЗначение(НазначениеИспользования_) = 1 Тогда
						Продолжить;
					ИначеЕсли ПустоеЗначение(ДатаВводаВЭксплуатацию) = 1 Тогда
						Продолжить;
					ИначеЕсли ПустоеЗначение(СпособПогашенияСтоимости) = 1 Тогда
						Продолжить;
					ИначеЕсли ПустоеЗначение(СрокПолезногоИспользования) = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Если СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.ПропорциональноОбъемуПродукцииРабот Тогда
						
						// Рассчитаем количество выпущенной продукции с начала ввода
						// в эксплуатацию спецоснастки.
						КоличествоВыпущеннойПродукции = 0;
						КонецМесяца = КонМесяца(ДобавитьМесяц(ДатаВводаВЭксплуатацию, 1)); // месяц с которого начинается погашение стоимости
						Пока КонецМесяца <= КонМесяца(ДатаДок) Цикл
							
							КоличествоВыпущеннойПродукции = КоличествоВыпущеннойПродукции
							+ НазначениеИспользования_.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(КонецМесяца);
							КонецМесяца = КонМесяца(ДобавитьМесяц(КонецМесяца, 1));
						КонецЦикла;
						
						Если СрокПолезногоИспользования > КоличествоВыпущеннойПродукции Тогда
							// Списывать еще не пора.
							Продолжить;
						КонецЕсли;
						
					ИначеЕсли (СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.Линейный) 
					или (СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.ПогашатьСтоимостьВМоментПередачиВПроизводство) Тогда
						КонецМесяца = КонМесяца(ДобавитьМесяц(ДатаВводаВЭксплуатацию, 1)); // месяц с которого начинается погашение стоимости
						КоличествоМесяцевВЭксплуатации = (ДатаГод(КонМесяца(ДатаДок)) - ДатаГод(КонецМесяца)) * 12 
						+ ДатаМесяц(КонМесяца(ДатаДок)) - ДатаМесяц(КонецМесяца) + 1;
						Если СрокПолезногоИспользования > КоличествоМесяцевВЭксплуатации Тогда
							// Списывать еще не пора.
							Продолжить;
						КонецЕсли;
						
					Иначе
						Продолжить;
					КонецЕсли;
					
					БухИтоги.ВыбратьСубконто(3);
					Пока БухИтоги.ПолучитьСубконто(3) = 1 Цикл
						ПодразделениеСотрудник = БухИтоги.Субконто(3);
						
						КоличествоСписать = БухИтоги.СНД("К");
						Если КоличествоСписать <= 0 Тогда 
							Продолжить;
						КонецЕсли;
						
						НоваяСтрока();
						Материал = БухИтоги.Субконто(ВидыСубконто.Материалы);
						НазначениеИспользования = НазначениеИспользования_;
						Сотрудник = БухИтоги.Субконто(3);
						Количество = КоличествоСписать;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // Заполнить()

//******************************************************************************
// 
Процедура Печать()
	    
	СтруктурноеПодразделение = "";
	Если ВидМатериалов = 2 Тогда // спецоснастка
		СтруктурноеПодразделение = Подразделение;
	КонецЕсли;
	
	Если ВидСписания = 1 Тогда // списание по назначению использования
		Счет = "";
	ИначеЕсли ВидСписания = 2 Тогда // списание в дебет счета 91.2
	    Счет = "91.2";
	ИначеЕсли ВидСписания = 3 Тогда // черезвычайные расходы
		Счет = "99";
	КонецЕсли;
	
	КоличествоСтрок1 = 9; //на лицевой стороне
	КоличествоСтрок2 = 5; //на оборотной стороне
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("МБ-8");
	ПредставлениеГода = Лев(ДатаГод(ДатаДок),2);

	Если Проведен() = 0 Тогда
		ТекстПредупреждения = "Для непроведенного некорреткно заполняется графы ""Цена"" и ""Сумма"".";
		Таб.ВывестиСекцию("Предупреждение");
		
	ИначеЕсли Модифицированность() = 1 Тогда
		Предупреждение("Для печати документ необходимо перепровести.");
		Возврат;
	КонецЕсли;
	
	Таб.ВывестиСекцию("ШапкаФормы");
	Таб.ВывестиСекцию("ШапкаТаблицы");
	
	ИтогоСуммаПервоначальнойСтоимости = Итог("СуммаПервоначальнойСтоимости"); 
	ИтогоСуммаПогашеннойСтоимости     = Итог("СуммаПогашеннойСтоимости"); 
	
	ИтогКоличество = 0;
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
		Если Ном > (КоличествоСтрок1 + КоличествоСтрок2) Тогда
			Таб.ВывестиСекцию("Итого");
			Прервать;
		ИначеЕсли Ном = КоличествоСтрок1 + 1 Тогда
			Таб.ВывестиСекцию("ПоследняяСтрока");
			Таб.НоваяСтраница();
			Таб.ВывестиСекцию("ШапкаТаблицы");
		КонецЕсли;
		Цена = Окр(?(Количество = 0, 0, СуммаПервоначальнойСтоимости / Количество), 2);
		
		СрокСлужбы = "";
		Если (НазначениеИспользования.СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.Линейный)
		 или (НазначениеИспользования.СпособПогашенияСтоимости = Перечисление.СпособПогашенияСтоимости.ПогашатьСтоимостьВМоментПередачиВПроизводство) Тогда
		 	Если ПустоеЗначение(НазначениеИспользования.ДатаВводаВЭксплуатацию) = 0 Тогда
		 		СрокСлужбы = (ДатаГод(КонМесяца(ДатаДок)) - ДатаГод(НазначениеИспользования.ДатаВводаВЭксплуатацию)) * 12 
						+ ДатаМесяц(КонМесяца(ДатаДок)) - ДатаМесяц(НазначениеИспользования.ДатаВводаВЭксплуатацию);    
		 	КонецЕсли;
		КонецЕсли;
		
		ИтогКоличество = ИтогКоличество + Количество;
		
		Таб.ВывестиСекцию("Строка");
		Ном = Ном + 1;
	КонецЦикла;
	
	Для i=Ном по (КоличествоСтрок1 + КоличествоСтрок2) Цикл
		Если i = КоличествоСтрок1 + 1 Тогда
			Таб.ВывестиСекцию("ПоследняяСтрока");
			Таб.НоваяСтраница();
			Таб.ВывестиСекцию("ШапкаТаблицы");
			Таб.ВывестиСекцию("ПустаяСтрока");
			
		ИначеЕсли i = КоличествоСтрок1 + КоличествоСтрок2 Тогда
			Таб.ВывестиСекцию("Итого");
			
		Иначе
			Таб.ВывестиСекцию("ПустаяСтрока");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0, 0, ?(Проведен() = 0, 1, 0), 0, "ОпцииПечатиМБ8", "ОкноМБ8");
	Таб.ПараметрыСтраницы(2);
	Таб.ОбластьПечати(?(Проведен() = 0, 2, 1), 2,,);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
	
КонецПроцедуры // Печать
   
//******************************************************************************
// ПоКнопкеПечать()
// 
// Вызывается из формул элементов диалога:
//  Кнопка "кнПечать".
//
// Описание:
//  Определяется соответствующая печатная форма.
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнВыбПечать".
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
//
Процедура УправлениеДиалогом()
	
	ВидимостьЭлементовДляСпецоснастки = ?(ВидМатериалов = 2, 1, 0);
	Форма.СтатикПодразделение.Видимость(ВидимостьЭлементовДляСпецоснастки);
	Форма.Подразделение.Видимость(ВидимостьЭлементовДляСпецоснастки);
	
	ВидимостьЭлементовДляСпецодежды   = ?((ВидМатериалов = 1) ИЛИ (ВидМатериалов=3), 1, 0);
	Форма.Сотрудник.Видимость(ВидимостьЭлементовДляСпецодежды);
	
	ВидимостьСтатьиРасходов = ?((ВидСписания = 2) И (ВидМатериалов<>3), 1, 0);
	Форма.СтатикСтатьяРасходов.Видимость(ВидимостьСтатьиРасходов);
	Форма.СтатьяРасходов.Видимость(ВидимостьСтатьиРасходов);
	
	ВидимостьЭлементовДляИнвентаря=?(ВидМатериалов=3,0,1);
	Форма.СтатикВидСписания.Видимость(ВидимостьЭлементовДляИнвентаря);
	Форма.ВидСписанияСписок.Видимость(ВидимостьЭлементовДляИнвентаря);
	Форма.НазначениеИспользования.Видимость(ВидимостьЭлементовДляИнвентаря);
	
КонецПроцедуры // УправлениеДиалогом()
                                       
//_____________________________________________________________________________
//ПриСменеДатыДок()
//
Процедура ПриСменеДатыДок()
	Если ДатаДок>='01.01.2006' Тогда
		Если ВидМатериаловСписок.РазмерСписка()<3 Тогда
			ВидМатериаловСписок.ДобавитьЗначение("Инвентарь и хоз. принадлежности");    
		КонецЕсли;
	Иначе
		Если ВидМатериаловСписок.РазмерСписка()=3 Тогда
			ВидМатериаловСписок.УдалитьЗначение(3);
			Если ВидМатериаловСписок.ТекущаяСтрока() <> ВидМатериалов Тогда
				ВидМатериалов = ВидМатериаловСписок.ТекущаяСтрока();
				УправлениеДиалогом();
			КонецЕсли;
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// ПриВыбореВидаСпецматериалов()
//
Процедура ПриВыбореВидаСпецматериалов()
	
	Если ВидМатериаловСписок.ТекущаяСтрока() <> ВидМатериалов Тогда
		ВидМатериалов = ВидМатериаловСписок.ТекущаяСтрока();
		УправлениеДиалогом();
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаСпецматериалов()

//******************************************************************************
// ПриВыбореВидаСписания()
//
Процедура ПриВыбореВидаСписания()
	
	Если ВидСписанияСписок.ТекущаяСтрока() <> ВидСписания Тогда
		ВидСписания = ВидСписанияСписок.ТекущаяСтрока();
		УправлениеДиалогом();
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаСпецматериалов()

//******************************************************************************
// ПриВыбореМатериала()
//
Процедура ПриВыбореМатериала()
	
	Если НазначениеИспользования.Владелец <> Материал Тогда
	    НазначениеИспользования = "";
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореМатериала()

//******************************************************************************
//
Процедура ВводНового(Копирование)
	глЗаполнитьШапку(Контекст, Копирование);
	Новый = 1;
	Если Копирование = 1 Тогда //копирование документа
	    Возврат;
	КонецЕсли;
                   
	ВидМатериалов = 1;
	ВидСписания   = 1;
КонецПроцедуры

//******************************************************************************
// ПриВыбореВидаСпецМатериалов()
//
Процедура ПриОткрытии()
	
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаПровести.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаЗаполнить.Доступность(0);
		Форма.КнопкаОчистить.Доступность(0);
	КонецЕсли;
	
	Форма.Материал.ВыполнятьФормулуТолькоПриИзменении(1);
	                                
	ВидМатериаловСписок.ДобавитьЗначение("Спецодежда");
	ВидМатериаловСписок.ДобавитьЗначение("Спецоснастка");

	ПриСменеДатыДок();
	
	ВидМатериаловСписок.ТекущаяСтрока(ВидМатериалов);
	
	ВидСписанияСписок.ДобавитьЗначение("По назначению использования");
	ВидСписанияСписок.ДобавитьЗначение("На прочие расходы (счет 91.2)");
	ВидСписанияСписок.ДобавитьЗначение("На чрезвычайные расходы (счет 99)");
	ВидСписанияСписок.ТекущаяСтрока(ВидСписания);

	НачальнаяДатаДокумента = ДатаДок;
	УправлениеДиалогом();
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры

//******************************************************************************
//
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Если ВидМатериалов=3 Тогда
		Операция.Содержание = "Списание инвентаря (хоз.принадлежностей)";    
	Иначе
		Операция.Содержание = "Списание спецодежды (спецоснастки)";
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если ИдентЭлемДиалога = "Материал" Тогда
		Если ВидМатериалов=3 Тогда
			ОткрытьФорму("Справочник.Материалы.ДляВыбора", СчетПоКоду("10.9"));    
		Иначе
			ОткрытьФорму("Справочник.Материалы.ДляВыбора", СчетПоКоду("10.10"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Новый = 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Акт на списание МБ-8";
ТаблицаПечФорм.Кнопка       = "Печать";

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании"); 
СписокДействий.ДобавитьЗначение("Перейти  в журнал");