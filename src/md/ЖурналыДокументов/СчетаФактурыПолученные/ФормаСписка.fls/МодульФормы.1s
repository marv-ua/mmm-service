////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем БухИт, ДатаБИ;
Перем Сч19_1, Сч19_2, Сч19_3, Сч76_ВА;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
Функция ЗначениеАванса()
	Стр = "";
	Если ТекущийДокумент.Выбран()=1 Тогда
		Если ТекущийДокумент.Вид() = "СчетФактураПолученный" Тогда
		    Стр = ?(ТекущийДокумент.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс, "с/ф на аванс","");
		КонецЕсли;	    
	КонецЕсли;
	Возврат Стр;
КонецФункции


//******************************************************************************
// Субсчет19()
//
// Возвращаемое значение:
//  Счет.Основной - Счет учета НДС поставщика.
//
// Описание:
//  Определяет субсчет на счете 19 для текущего документа.
// 
Функция Субсчет19()
	
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Вид = ТекущийДокумент.Вид();
		Док = ТекущийДокумент;
		
		Если Вид = "УслугиСтороннихОрганизаций" Тогда
		    Если ТекущийДокумент.ДокументПоступления.Выбран() = 1 Тогда
		        Вид = ТекущийДокумент.ДокументПоступления.Вид();
				Док = ТекущийДокумент.ДокументПоступления;
		    КонецЕсли;
		КонецЕсли;
		
		Если (Вид = "ПоступлениеТоваров") или
		     (Вид = "ПоступлениеМатериалов") или
			 (Вид = "УслугиСтороннихОрганизаций") Тогда
			Возврат Сч19_3;
		
		ИначеЕсли Вид = "СчетФактураПолученный" Тогда
			Возврат Док.Субсчет19;
			
		ИначеЕсли (Вид = "ПоступлениеОС") или
			 (Вид = "ПоступлениеОборудования") Тогда
		    Возврат Сч19_1;
		
		ИначеЕсли Вид = "ПоступлениеНМА" Тогда
			Возврат Сч19_2;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПолучитьПустоеЗначение("Счет.Основной"); 
	
КонецФункции // Субсчет19()

//******************************************************************************
// СКД19()
//
// Возвращаемое значение:
//  Строка - сальдо по счету 19.
//
// Описание:
//  Определяет сальдо по счету 19 для текущего документа.
// 
Функция СКД19()
	Если ФлагОстаткиВКолонке = 0 Тогда //NDline
		Возврат 0;
	КонецЕсли; //NDline
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() = "СчетФактураПолученный" Тогда
			Если ТекущийДокумент.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс Тогда
				СуммаНДС = БухИт.СКК(Сч76_ВА,,,ТекущийДокумент.Контрагент,ТекущийДокумент);
				Возврат СокрЛ(Формат(СуммаНДС,"Ч015.2.,"));
			КонецЕсли;
		КонецЕсли;
		
		СуммаНДС = БухИт.СКД(Субсчет19(),,,ТекущийДокумент.Контрагент,ТекущийДокумент);
		Возврат СокрЛ(Формат(СуммаНДС,"Ч015.2.,"));
		
	Иначе
		Возврат 0; 
	КонецЕсли;

КонецФункции // СКД19()

//******************************************************************************
// Отчет()
//
// Вызывается из формул элементов диалога:
//  КнопкаПечатьКарточки.
//
// Описание:
//  Вызывается стандартный отчет "Карточка счета".
//
Процедура Отчет()
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "КарточкаСчета");
	Расшифровка.Установить("Дата1", НачМесяца(РабочаяДата()));
	Расшифровка.Установить("Дата2", КонМесяца(РабочаяДата()));
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если НачМесяца(ТекущийДокумент.ДатаДок) < КонМесяца(РабочаяДата()) Тогда
			Расшифровка.Установить("Дата1", НачМесяца(ТекущийДокумент.ДатаДок));
		КонецЕсли;
		
		Счет19 = Субсчет19();
		Расшифровка.Установить("Счет", Счет19);
		Расшифровка.Установить("ВидСубконто1", Счет19.ВидСубконто(1));
		Расшифровка.Установить("ВидСубконто2", Счет19.ВидСубконто(2));
		Расшифровка.Установить("Субконто1", ТекущийДокумент.Контрагент);
		Расшифровка.Установить("Субконто2", ТекущийДокумент);
		Расшифровка.Установить("ОтборСубконто1", 2);
		Расшифровка.Установить("ОтборСубконто2", 2);
	КонецЕсли;

	глРасшифровка = Расшифровка;
	глОбновить = 2;
	глТаблица = "";
	глФлагРасшифровки = 1;
	ОткрытьФорму("Отчет.КарточкаСчета");
	глФлагРасшифровки = 0;
	глОбновить = 0;
	
КонецПроцедуры // Отчет()

//******************************************************************************
// ИнформационнаяСтрока()
//
// Возвращаемое значение:
//  Строка - сведения о незачтенном НДС.
//
// Вызывается из формул элементов диалога:
//  Текст "ИнформационнаяСтрока()".
//
// Описание:
//  Формирует строку с датой расчета бухгалтерских итогов и конечным дебетовым
// сальдо на счете 19.
//  
Функция ИнформационнаяСтрока()
	
	Стр = "";
	
	Если КонМесяца(ДатаБИ) > КонецРассчитанногоПериодаБИ() Тогда
		Стр = "На " + Формат(ДатаБИ, "Д (0)ДДММГГГГ") + " бухгалтерские итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме ""Операции - Управление бухгалтерскими итогами"".";
		
	Иначе
		Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
			
			Если ТекущийДокумент.Вид() = "СчетФактураПолученный" Тогда
				Если ТекущийДокумент.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс Тогда
					СтрокаСчета = Сч76_ВА;
					СтрокаСчета = ?(ПустоеЗначение(СтрокаСчета) = 1, "", " по кредиту счета " + СтрокаСчета);
					Стр = "Сальдо на конец дня " + Формат(КонМесяца(ДатаБИ), "Д") + СтрокаСчета + " : " + СКД19();
					Возврат Стр;
				КонецЕсли;
			КонецЕсли;
			
			
			СтрокаСчета = Субсчет19();
			СтрокаСчета = ?(ПустоеЗначение(СтрокаСчета) = 1, "", " по дебету счета " + СтрокаСчета);
			Стр = "Сальдо на конец дня " + Формат(КонМесяца(ДатаБИ), "Д") + СтрокаСчета + " : " + СКД19();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции // ИнформационнаяСтрока()

//******************************************************************************
// ВвестиДокумент()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Новый документ".
//
// Описание:
//  Создает новый полученный счет-фактуру.
//
Процедура ВвестиДокумент()

	Перем Отбр;
	ПолучитьОтбор("Контрагент", Отбр);
	Парам = СоздатьОбъект("СписокЗначений");
	Парам.Установить("Контрагент", Отбр);
	Парам.Установить("КонтекстЖурнала", Контекст);
	Журнал = Метаданные.Журнал("СчетаФактурыПолученные");
	Если Журнал.Графа(1).Выбран() <> 0 Тогда
		Если Журнал.Графа(1).Ссылки.Количество() = 1 Тогда
			ОткрытьФорму(Журнал.Графа(1).Ссылки.Получить(1).Родитель().ПолныйИдентификатор(), Парам);
		ИначеЕсли Журнал.Графа(1).Ссылки.Количество() > 1 Тогда
			Док = СоздатьОбъект("СписокЗначений");
			Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
			    ВидДокумента = ТекущийДокумент.Вид();
			Иначе
				ВидДокумента = "";
			КонецЕсли;
			Для а = 1 по Журнал.Графа(1).Ссылки.Количество() Цикл
				Представление = Журнал.Графа(1).Ссылки.Получить(а).Родитель().Синоним +
							"(" + Журнал.Графа(1).Ссылки.Получить(а).Родитель().Комментарий + ")";
				Док.ДобавитьЗначение(Журнал.Графа(1).Ссылки.Получить(а).Родитель().ПолныйИдентификатор(), Представление);
			КонецЦикла;
			Если Док.ВыбратьЗначение(ВидДокумента, "Выбор вида документа") = 1 Тогда
				ОткрытьФорму(ВидДокумента, Парам);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ВвестиДокумент()

//******************************************************************************
// ПриВыбореПоказаОстатковВКолонке()
//
// Вызывается из формул элементов диалога:
//  Флажок "Показывать остатки в колонке".
//
// Описание:
//  Управляет видимостью колонки остатка.
// 
Процедура ПриВыбореПоказаОстатковВКолонке()
	
	Если ФлагОстаткиВКолонке = 0 Тогда
		Форма.КолонкаОстатка.Видимость(0);
	Иначе
		Форма.КолонкаОстатка.Видимость(1);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореПоказаОстатковВКолонке()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()

	Контрагент_Продавец = "";
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
			Если Форма.Параметр.Вид() = "Контрагенты" Тогда
				Контрагент_Продавец = Форма.Параметр;
			КонецЕсли;
			
		ИначеЕсли ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
			Контрагент_Продавец = Форма.Параметр.Получить("Контрагент");
			ДатаБИ = Форма.Параметр.Получить("ДатаБИ");
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(Контрагент_Продавец) = 1 Тогда
	    Спр = СоздатьОбъект("Справочник.Контрагенты");
		Если Спр.Выбрать("Укажите продавца",) = 1 Тогда
		    Контрагент_Продавец = Спр.ТекущийЭлемент();
		Иначе
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Форма.МодальныйРежим() = 1 Тогда
		Форма.ОбработкаВыбораСтроки(1);
	КонецЕсли;
    УстановитьОтбор("Продавец", Контрагент_Продавец);
	ВидыОтбора("");
	
	Если ПустоеЗначение(ДатаБИ) = 1 Тогда
		ДатаБИ = РабочаяДата();
	КонецЕсли;
	ФлагОстаткиВКолонке = 0; //NDline ФлагОстаткиВКолонке = ВосстановитьЗначение("СчетаФактурыПолученные_ФлагОстаткиВКолонке");
    БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ПериодМ(ДатаБИ);
	Сч19_1 = СчетПоКоду("19.1");
	Сч19_2 = СчетПоКоду("19.2");
	Сч19_3 = СчетПоКоду("19.3");
	Сч76_ВА = СчетПоКоду("76.ВА");
	
	ПриВыбореПоказаОстатковВКолонке();
	
	глСписокОбщихЖурналов.Пометка(глСписокОбщихЖурналов.НайтиЗначение("СчетаФактурыПолученные"), 1);

КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореСтроки()
    
    Форма.Параметр = ТекущийДокумент;
    
КонецПроцедуры // ПриВыбореСтроки()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("СчетаФактурыПолученные_ФлагОстаткиВКолонке", ФлагОстаткиВКолонке);
	глСписокОбщихЖурналов.Пометка(глСписокОбщихЖурналов.НайтиЗначение("СчетаФактурыПолученные"), 0);
	
КонецПроцедуры // ПриЗакрытии()