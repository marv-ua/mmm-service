Перем СписокДействий;

//******************************************************************************
Процедура ОткрытьПутеводитель()
	
	ОткрытьФорму("Обработка.Путеводитель", "УчетМатериалов");
	
КонецПроцедуры // ОткрытьПутеводитель()

//******************************************************************************
Процедура ПолучитьПравовуюСправку()
	
    Норм_ПолучитьСправку("Count_&10");
	
КонецПроцедуры // ВыбратьПравовуюСправку()

//******************************************************************************
Процедура ПечатьТребованияНакладной()
	
	Параметр = СоздатьОбъект("СписокЗначений");
	Параметр.Установить("Печать", 1);
	ОткрытьФорму(ТекущийДокумент, Параметр,);
	
КонецПроцедуры // ПечатьТребованияНакладной()

//******************************************************************************
Процедура Печать()
	Если ТекущийДокумент.Выбран() = 0 Тогда
	    Предупреждение("Не выбран документ ""Требование-накладная"" для печати.");
	
	ИначеЕсли ТекущийДокумент.Вид() = "ТребованиеНакладная" Тогда
	    ПечатьТребованияНакладной();
		
	Иначе
	    Предупреждение("Из журнала документов возможна печать только
						|документа ""Требование-накладная"".");
	КонецЕсли;
КонецПроцедуры // Печать()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Форма.Кн_Справка.Видимость(?(ТипЗначения(Норм_Компонента) = 0, 0, 1));
	
	Если ТипЗначенияСтр(Форма.Параметр) = "Документ" Тогда
		глАктивизироватьДокумент(Контекст, Форма.Параметр);
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриПовторномОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) = "Документ" Тогда
		глАктивизироватьДокумент(Контекст, Форма.Параметр);
	КонецЕсли;

КонецПроцедуры // ПриПовторномОткрытии()

//******************************************************************************

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Ввести на основании");