Перем СписокДействий;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ПолучитьВремяДокументаЧислом(Док)
//
// Параметры: 
//  Док - документ, чьё время надо получить
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Преобразует время документа в число.
//
Функция ПолучитьВремяДокументаЧислом(Док)
    Перем Ч,М,С;  
	Док.ПолучитьВремя(Ч,М,С);
	Возврат 3600*Ч+60*М+С;
КонецФункции // ПолучитьВремяДокументаЧислом()

//******************************************************************************
// УстановитьВремяДокументаЧислом(Док, Сек)
//
// Параметры: 
//  Док - документ, чьё время надо установить
//  Сек - число, новое время документа в секундах (с начала дня)
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Устанавливает новое время документа.
//
Процедура УстановитьВремяДокументаЧислом(Док, Сек)
    Перем Ч,М,С;
	Ч=Цел(Сек/3600);
	Сек=Сек-Ч*3600;
	М=Цел(Сек/60);
	С=Сек-М*60;
	Док.УстановитьВремя(Ч,М,С);
КонецПроцедуры // УстановитьВремяДокументаЧислом()


//******************************************************************************
// ПоКнопкеВремя()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Пок кнопке "Время".
// 
// Описание:
//  Отрабатывает нажатие кнопки "Время".
//  Служит для изменения времени документа в пределах дня.
//
Процедура ПоКнопкеВремя()
	
	ТекДок=ТекущийДокумент;       
	Если ТекДок.Выбран()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДок.ДатаДок <= Константа.ДатаЗапретаРедактирования Тогда
	    
		Предупреждение("Нельзя изменять документы с датой, более ранней чем дата запрета редактирования документов!",60);
		Возврат;
	КонецЕсли;

	
	Меню=СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Назад",  "Переместить назад");
	Меню.ДобавитьЗначение("Вперед", "Переместить вперед");
	Меню.ДобавитьЗначение("ВНачало","Переместить в начало дня");
	Меню.ДобавитьЗначение("ВКонец", "Переместить в конец дня");
	
	Вариант="";
	Если Меню.ВыбратьЗначение(Вариант,,,,1)=0 Тогда
		Возврат;
	КонецЕсли;	
	
	Док=СоздатьОбъект("Документ");
	
	Попытка;
		НачатьТранзакцию();
		
		Если Вариант="Назад" Тогда
			Док.ОбратныйПорядок(1);
			Док.ВыбратьДокументы(ТекДок.ДатаДок,СформироватьПозициюДокумента(ТекДок.ПолучитьПозицию(),-1));               
			Если Док.ПолучитьДокумент()=0 Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			Время2=ПолучитьВремяДокументаЧислом(Док);
			Если Док.ПолучитьДокумент()=1 Тогда
				Время1=ПолучитьВремяДокументаЧислом(Док);
			Иначе
				Время1=0;
			КонецЕсли;
			Время=Время2-60;
			Если Время<=Время1 Тогда
				Время=Окр((Время2+Время1)/2);
			КонецЕсли;
			Если (Время<=Время1) или (Время>=Время2) Тогда
				Предупреждение("Нет возможности переставить документ!", 60);
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
		ИначеЕсли Вариант="Вперед" Тогда
			Док.ОбратныйПорядок(0);
			Док.ВыбратьДокументы(СформироватьПозициюДокумента(ТекДок.ПолучитьПозицию(),1),ТекДок.ДатаДок);               
			Если Док.ПолучитьДокумент()=0 Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			Время1=ПолучитьВремяДокументаЧислом(Док);
			Если Док.ПолучитьДокумент()=1 Тогда
				Время2=ПолучитьВремяДокументаЧислом(Док);
			Иначе
				Время2=3600*23+60*59+59+1;
			КонецЕсли;
			Время=Время1+60;
			Если Время>=Время2 Тогда
				Время=Окр((Время2+Время1)/2);
			КонецЕсли;
			Если (Время<=Время1) или (Время>=Время2) Тогда
				Предупреждение("Нет возможности переставить документ!", 60);
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
		ИначеЕсли Вариант="ВНачало" Тогда
			Док.ОбратныйПорядок(0);
			Док.ВыбратьДокументы(ТекДок.ДатаДок,СформироватьПозициюДокумента(ТекДок.ПолучитьПозицию(),-1));               
			Если Док.ПолучитьДокумент()=0 Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;                 
			Время2=ПолучитьВремяДокументаЧислом(Док);
			Время1=0;
			Время=Время2-60;
			Если Время<=Время1 Тогда
				Время=Окр((Время2+Время1)/2);
			КонецЕсли;
			Если (Время<=Время1) или (Время>=Время2) Тогда
				Предупреждение("Нет возможности переставить документ!", 60);
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
		ИначеЕсли Вариант="ВКонец" Тогда
			Док.ОбратныйПорядок(1);
			Док.ВыбратьДокументы(СформироватьПозициюДокумента(ТекДок.ПолучитьПозицию(),1),ТекДок.ДатаДок);               
			Если Док.ПолучитьДокумент()=0 Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;                 
			Время1=ПолучитьВремяДокументаЧислом(Док);
			Время2=3600*23+60*59+59+1;
			Время=Время1+60;
			Если Время>=Время2 Тогда
				Время=Окр((Время2+Время1)/2);
			КонецЕсли;
			Если (Время<=Время1) или (Время>=Время2) Тогда
				Предупреждение("Нет возможности переставить документ!", 60);
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		КомментироватьВыполняемыеДействия = ПустоеЗначение(ВосстановитьЗначение("НеКомментироватьВыполняемыеДействия"));
		СохранитьЗначение("НеКомментироватьВыполняемыеДействия", 1);
		
		Провести=0;	
		Док.НайтиДокумент(ТекДок);
		Если Док.Проведен()=1 Тогда
			Док.СделатьНеПроведенным();
			Провести=1;	
		КонецЕсли;
		
		УстановитьВремяДокументаЧислом(Док,Время);	
		Док.Записать();
		
		Если Провести=1 Тогда
			Док.Провести();
		КонецЕсли;         
		
		СохранитьЗначение("НеКомментироватьВыполняемыеДействия", ПустоеЗначение(КомментироватьВыполняемыеДействия));
		
		ЗафиксироватьТранзакцию();
	Исключение
		Сообщить(ОписаниеОшибки(),"!");  
	КонецПопытки;
	
КонецПроцедуры // ПоКнопкеВремя()

//*****************************************************************************
// ПолучитьПравовуюСправку()
//
// Описание:
//  Вызывает процедуру правовой поддержки.
//
Процедура ПолучитьПравовуюСправку()
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("BU_PRAV", "Общие вопросы бухгалтерского учета");
	Меню.ДобавитьЗначение("BUH_POL", "Положения по бухгалтерскому учету");
	Ссылка = "";
	Если Меню.ВыбратьЗначение(Ссылка,,,,1) = 1 Тогда
	    Норм_ПолучитьСправку(Ссылка);
	КонецЕсли;
	
КонецПроцедуры // ПолучитьПравовуюСправку()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Форма.Кн_Видеокурс.Видимость(?(ТипЗначения(Видео_Компонента) = 0, 0, 1));
	Форма.Кн_Справка.Видимость(?(ТипЗначения(Норм_Компонента) = 0, 0, 1));
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    ТекДок = Форма.Параметр;
	Иначе
		ТекДок = ВосстановитьЗначение("ТекДок");
	КонецЕсли;
	АктивизироватьОбъект(ТекДок);
	глСписокОбщихЖурналов.Пометка(глСписокОбщихЖурналов.НайтиЗначение("Общий"), 1);
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриПовторномОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) = "Документ" Тогда
		глАктивизироватьДокумент(Контекст, Форма.Параметр);
	КонецЕсли;

КонецПроцедуры // ПриПовторномОткрытии()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ТекДок", ТекущийДокумент);
	глСписокОбщихЖурналов.Пометка(глСписокОбщихЖурналов.НайтиЗначение("Общий"), 0);
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
//
СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Ввести на основании");