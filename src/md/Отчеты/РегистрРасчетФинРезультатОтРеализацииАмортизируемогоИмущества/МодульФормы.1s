//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
// ПолучитьИтоги()
//
// Параметры:
//  БухИт  - бухгалтерские итоги
//  Объект - ОС или НМА,
//  ПервоначальнаяСтоимость - в переменной возвращается первоначальная (бухгалтерская) стоимость объекта;
//  СуммаАморизации - сумма начисленной по объекту амортизации;
//  ОбщаяСуммаРасходов - остточная стоимость объекта и дополнительные расходы по его реализации;
//
// Вызывается из формул элементов диалога:
//  Нет.
//
Процедура ПолучитьИтоги(БухИт, Объект, ПервоначальнаяСтоимость, СуммаАморизации, ОбщаяСуммаРасходов)
	Если БухИт.ПолучитьСубконто(1,, Объект) = 1 Тогда
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1  Цикл
			Счет = БухИт.Счет;
		    Если Найти("Н05.01, Н05.03", Счет.Код) <> 0 Тогда
				ПервоначальнаяСтоимость = БухИт.КО();
				
			ИначеЕсли Найти("Н05.02, Н05.04", Счет.Код) <> 0 Тогда
				СуммаАморизации = БухИт.ДО();
				
			Иначе              
				ОбщаяСуммаРасходов = БухИт.ДО();
		    КонецЕсли;
		КонецЦикла
	КонецЕсли; 
КонецПроцедуры // ПолучитьИтоги()

//******************************************************************************
Процедура Сформировать()                                               
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	
	// Заполнение шапки печатной формы
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	
	Таб.ВывестиСекцию("Шапка");
	          
	// таблица, в которую помещаются релизованные за указанный период объекты,
	// для того, чтобы в следующем запросе получить итоги только по реализованным объектам
    ТаблицаОбъектов = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаОбъектов.НоваяКолонка("ДатаОперации", "Дата");
	ТаблицаОбъектов.НоваяКолонка("Объект");
	ТаблицаОбъектов.НоваяКолонка("Выручка", "Число", 15, 2);
	ТаблицаОбъектов.НоваяКолонка("Документ", "Документ");
	                       
	// отбор и запись в таблицу реализованных за указанный период объектов (ОС и НМА)
	БухИтВыручка = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтВыручка.ИспользоватьСубконто();
	БухИтВыручка.ВыполнитьЗапрос(НачДата, КонДата, "Н06.05, Н06.06",,,, "Операция",);
	БухИтВыручка.ВыбратьПериоды();
	Пока БухИтВыручка.ПолучитьПериод() = 1 Цикл
		ДатаОперации = БухИтВыручка.НачДата;
		БухИтВыручка.ВыбратьСубконто(1);
		Пока БухИтВыручка.ПолучитьСубконто(1) = 1 Цикл
			БухИтВыручка.ВыбратьСчета();
			Пока БухИтВыручка.ПолучитьСчет() = 1 Цикл
				Если БухИтВыручка.КО() > 0 Тогда
					ТаблицаОбъектов.НоваяСтрока();
					ТаблицаОбъектов.ДатаОперации = ДатаОперации;
					ТаблицаОбъектов.Объект = БухИтВыручка.Субконто(1);
					ТаблицаОбъектов.Выручка = БухИтВыручка.КО();
					ТаблицаОбъектов.Документ = БухИтВыручка.Операция.Документ;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// для реализованных объектов (ОС и НМА) рассчитываем первоначальную стоимость, сумму амортизации и
	// сумму расходов, связанных с их реализацией.
	СписокОбъектов = СоздатьОбъект("СписокЗначений");
	ТаблицаОбъектов.Выгрузить(СписокОбъектов,,, "Объект");
	
	БухИтОС = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтОС.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства, СписокОбъектов);
	БухИтОС.ВыполнитьЗапрос(НачДата, КонДата, "Н05.01, Н05.02, Н07.07",,,,,);
	
	БухИтНМА = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтНМА.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы, СписокОбъектов);
	БухИтНМА.ВыполнитьЗапрос(НачДата, КонДата, "Н05.03, Н05.04, Н07.08",,,,,);
	
	ИтогоСуммаРасходов = 0;
	ИтогоСуммаУбытка   = 0;
	ИтогоВыручка       = 0;
	
	ТаблицаОбъектов.ВыбратьСтроки();
	Пока ТаблицаОбъектов.ПолучитьСтроку() = 1 Цикл
		Объект = ТаблицаОбъектов.Объект;
		НаименованиеОбъекта = Объект.Наименование + ", Инв. №" + Объект.Код;
		Док = ТаблицаОбъектов.Документ;
		ДатаОперации = ТаблицаОбъектов.ДатаОперации;
		Выручка = ТаблицаОбъектов.Выручка;
		СуммаАморизации = 0;
	 	ОбщаяСуммаРасходов = 0;
	 	ПервоначальнаяСтоимость = 0;
	 	Если Объект.Вид() = "ОсновныеСредства" Тогда
	 		ПолучитьИтоги(БухИтОС, Объект, ПервоначальнаяСтоимость, СуммаАморизации, ОбщаяСуммаРасходов)
	 		
	 	Иначе
	 		ПолучитьИтоги(БухИтНМА, Объект, ПервоначальнаяСтоимость, СуммаАморизации, ОбщаяСуммаРасходов)
	 	КонецЕсли;
		       
		РасходыПоРеализации = ОбщаяСуммаРасходов - (ПервоначальнаяСтоимость - СуммаАморизации);
		СуммаУбытка = Макс(ОбщаяСуммаРасходов - Выручка, 0);
		ИтогоСуммаРасходов = ИтогоСуммаРасходов + ОбщаяСуммаРасходов;
		ИтогоСуммаУбытка   = ИтогоСуммаУбытка + СуммаУбытка;
		ИтогоВыручка       = ИтогоВыручка + Выручка;
		Таб.ВывестиСекцию("Строка");    
	КонецЦикла;
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");    
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетФинРезультатаОтРеализацииАмортизируемогоИмущества", "ОкноРегистрРасчетФинРезультатаОтРеализацииАмортизируемогоИмущества");
	Таб.Показать("Регистр-расчет финансового результата от реализации амортизируемого имущества");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии() //предопределенная
	
	НачДата = НачГода(РабочаяДата());
	КонДата = КонКвартала(РабочаяДата());
	
КонецПроцедуры //ПриОткрытии()                                                    
