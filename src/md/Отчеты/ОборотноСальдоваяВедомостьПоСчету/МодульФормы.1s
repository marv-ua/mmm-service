//-----------------------------------------------
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем Закрыть;
Перем ПредставлениеРУ;
Перем ВидСубконто[3], Субконто[3], ОтборСубконто[3], ПоГруппам[3], Номер[3];

// Массивы для расчета развернутого сальдо.
Перем СумСальдо, КолСальдо;
Перем УровеньГруппировкиДляРасчетаСальдо[3];
Перем ВыборкаИтоговПоГруппеСправочника[3];

//-----------------------------------------------
Процедура ПолучитьУровниГруппировокДляРасчетаСальдо(БухИт)
	
	Индекс = 3;
	Для ТипСуммы = 1 по 3 Цикл
		УровеньГруппировкиДляРасчетаСальдо[ТипСуммы] = 0;
	КонецЦикла;
	
	Пока Индекс > 0 Цикл
		// Если установлен режим "разворачивать" и по субконто ведется учет остатков:
		Если ОтборСубконто[Индекс] = 1 Тогда
			Для НомерСубконто = 1 по 3 Цикл
				Если ВидСубконто[Индекс] = БухИт.Счет.ВидСубконто(НомерСубконто) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если БухИт.Счет.ТолькоОбороты(НомерСубконто) = 0 Тогда
				Если (БухИт.Счет.УчетПоСумме(НомерСубконто) = 1) и (УровеньГруппировкиДляРасчетаСальдо[1] = 0) Тогда
				    УровеньГруппировкиДляРасчетаСальдо[1] = Индекс;
				КонецЕсли;	
				
				Если (БухИт.Счет.УчетПоВалютнойСумме(НомерСубконто) = 1) и (УровеньГруппировкиДляРасчетаСальдо[2] = 0) Тогда
				    УровеньГруппировкиДляРасчетаСальдо[2] = Индекс;
				КонецЕсли;
				
				Если (БухИт.Счет.УчетПоКоличеству(НомерСубконто) = 1) и (УровеньГруппировкиДляРасчетаСальдо[3] = 0) Тогда
				    УровеньГруппировкиДляРасчетаСальдо[3] = Индекс;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Индекс = Индекс - 1;
	КонецЦикла;
	
КонецПроцедуры // ПолучитьУровниГруппировокДляРасчетаСальдо()

//-----------------------------------------------
Процедура ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(БухИт, Индекс, ТЗ, ТипСуммы)
	
	Если (УровеньГруппировкиДляРасчетаСальдо[ТипСуммы] = Индекс) и
		 (ВыборкаИтоговПоГруппеСправочника[Индекс] = 0) Тогда
		 	
		ТЗ.НоваяСтрока();
		
		СН = БухИт.СНД(ТипСуммы) - БухИт.СНК(ТипСуммы);
		Если СН > 0 Тогда
			ТЗ.СНД = ТЗ.СНД + СН;
			
		Иначе
			ТЗ.СНК = ТЗ.СНК - СН;
		КонецЕсли;

		СК = БухИт.СКД(ТипСуммы) - БухИт.СКК(ТипСуммы);
		Если СК > 0 Тогда
			ТЗ.СКД = ТЗ.СКД + СК;
			
		Иначе
			ТЗ.СКК = ТЗ.СКК - СК;
		КонецЕсли;
		
		Если ТипСуммы = 2 Тогда
		    ТЗ.Валюта = БухИт.Валюта;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьИтогиПоСубконтоКРазвернутомуСальдо()

//-----------------------------------------------
Функция ИтогиНеРавныНулю(БухИт, Индекс)
	
	Для ТипСуммы = 1 по 3 Цикл
		Если БухИт.СНД(ТипСуммы) <> 0 Тогда
			Возврат 1;

		ИначеЕсли БухИт.СНК(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.ДО(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.КО(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.СКД(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.СКК(ТипСуммы) <> 0 Тогда
			Возврат 1;
		КонецЕсли;
	КонецЦикла;
	
	Если Индекс < 3 Тогда
		СледующийИндекс = Индекс + 1;
	    Если ОтборСубконто[СледующийИндекс] = 1 Тогда
		    БухИт.ВыбратьСубконто(СледующийИндекс);
		    Пока БухИт.ПолучитьСубконто(СледующийИндекс) = 1 Цикл
				Если ИтогиНеРавныНулю(БухИт, СледующийИндекс) = 1 Тогда
					БухИт.ПолучитьСубконто(СледующийИндекс,, "");
				    Возврат 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;

КонецФункции // ИтогиНеРавныНулю()

//-----------------------------------------------
Процедура УстановитьВладельца(ПоВсем, РУ, Субконто)
	Назначить = 0;
	Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
 		МДСубконто = Метаданные.Справочник(Субконто.Вид());
		Если МДСубконто.Выбран() = 1 Тогда
	 		Назначить = 1;                      
			Если (ПоВсем = 0) И (ТипЗначенияСтр(РУ) = "Справочник") Тогда
				Если МДСубконто.Владелец.Выбран() = 1 Тогда
					Если МДСубконто.Владелец.Идентификатор = РУ.Вид() Тогда
						Назначить = 2;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Назначить = 1 Тогда
		Субконто.ИспользоватьВладельца("");
	ИначеЕсли Назначить = 2 Тогда
		Субконто.ИспользоватьВладельца(РУ);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Функция ПроверкаПериода()
	Если ПустоеЗначение(Дата1) = 1 Тогда
	    Предупреждение("Не указана дата начала периода отчета!");
		Возврат 0;
	КонецЕсли;
	Если Дата1 > Дата2 Тогда
		Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(Субконто[Поз1], Субконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
	ПоменятьЗначения(ПоГруппам[Поз1], ПоГруппам[Поз2]);
	ПоменятьЗначения(Номер[Поз1], Номер[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Процедура ПоСубконто(Ит, Т, ФлВал)
	
	ПолучитьУровниГруппировокДляРасчетаСальдо(Ит);
	
	Если ОтборСубконто[1] = 1 Тогда // разворачивать
	    Ит.ВыбратьСубконто();
	    Пока Ит.ПолучитьСубконто() = 1 Цикл
			Если ИтогиНеРавныНулю(Ит, 1) = 0 Тогда
			    Продолжить;
			КонецЕсли;
			
			ВыборкаИтоговПоГруппеСправочника[1] = Ит.ЭтоГруппа();
		    ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(Ит, 1, СумСальдо, 1);
			
			Расшифровка.Установить("ОтборСубконто"+Номер[1], 2);
		   	Расшифровка.Установить("Субконто"+Номер[1], Ит.Субконто());
	        Т.ВывестиСекцию("Секция_2");

	        Если Ит.Счет.Количественный = 1 Тогда
				ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(Ит, 1, КолСальдо, 3);
	            Т.ВывестиСекцию("Секция_3");
	        КонецЕсли;
	        Если ФлВал = 1 Тогда
	            Ит.ВыбратьВалюты();
	            Пока Ит.ПолучитьВалюту()=1 Цикл
				   	Расшифровка.Установить("Валюта",Ит.Валюта);
				   	Расшифровка.Установить("ПоВалюте",1);
		            Т.ВывестиСекцию("Секция_4");
	            КонецЦикла;
			   	Расшифровка.Установить("Валюта");
				Расшифровка.Установить("ПоВалюте");
			КонецЕсли;

			Если ОтборСубконто[2] = 1 Тогда // разворачивать
			    Ит.ВыбратьСубконто(2);
			    Пока Ит.ПолучитьСубконто(2) = 1 Цикл
					Если ИтогиНеРавныНулю(Ит, 2) = 0 Тогда
					    Продолжить;
					КонецЕсли;
					
					ВыборкаИтоговПоГруппеСправочника[2] = Макс(Ит.ЭтоГруппа(), ВыборкаИтоговПоГруппеСправочника[1]);
					ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(Ит, 2, СумСальдо, 1);
					
					Расшифровка.Установить("ОтборСубконто"+Номер[2], 2);
				   	Расшифровка.Установить("Субконто"+Номер[2], Ит.Субконто(2));
		    	    Т.ВывестиСекцию("Секция_5");
		        	Если Ит.Счет.Количественный = 1 Тогда
						ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(Ит, 2, КолСальдо, 3);
		            	Т.ВывестиСекцию("Секция_6");
		        	КонецЕсли;
		        	Если ФлВал = 1 Тогда
		        		Ит.ВыбратьВалюты(,,1);
		        		Пока Ит.ПолучитьВалюту(1)=1 Цикл
						   	Расшифровка.Установить("Валюта",Ит.Валюта);
						   	Расшифровка.Установить("ПоВалюте",1);
		        			Т.ВывестиСекцию("Секция_7");
		        		КонецЦикла;
					   	Расшифровка.Установить("Валюта");
						Расшифровка.Установить("ПоВалюте");
					КонецЕсли;

					Если ОтборСубконто[3] = 1 Тогда // разворачивать
					    Ит.ВыбратьСубконто(3);
					    Пока Ит.ПолучитьСубконто(3) = 1 Цикл
							Если ИтогиНеРавныНулю(Ит, 3) = 0 Тогда
							    Продолжить;
							КонецЕсли;
							
							ВыборкаИтоговПоГруппеСправочника[3] = Макс(Ит.ЭтоГруппа(), ВыборкаИтоговПоГруппеСправочника[2]);
							ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(Ит, 3, СумСальдо, 1);
				
							Расшифровка.Установить("ОтборСубконто"+Номер[3], 2);
						   	Расшифровка.Установить("Субконто"+Номер[3], Ит.Субконто(3));
				    	    Т.ВывестиСекцию("Секция_9");
				        	Если Ит.Счет.Количественный = 1 Тогда
								ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(Ит, 3, КолСальдо, 3);
				            	Т.ВывестиСекцию("Секция_10");
				        	КонецЕсли;
				        	Если ФлВал = 1 Тогда
				        		Ит.ВыбратьВалюты(,,2);
				        		Пока Ит.ПолучитьВалюту(2)=1 Цикл
								   	Расшифровка.Установить("Валюта",Ит.Валюта);
								   	Расшифровка.Установить("ПоВалюте",1);
				        			Т.ВывестиСекцию("Секция_11");
				        		КонецЦикла;
							   	Расшифровка.Установить("Валюта");
								Расшифровка.Установить("ПоВалюте");
				        	КонецЕсли;
				        КонецЦикла;
					   	Расшифровка.Установить("Субконто"+Номер[3]);
					   	Расшифровка.Установить("ОтборСубконто"+Номер[3]);
					КонецЕсли;
		        КонецЦикла;
			   	Расшифровка.Установить("Субконто"+Номер[2]);
			   	Расшифровка.Установить("ОтборСубконто"+Номер[2]);
			КонецЕсли;
		КонецЦикла;
	   	Расшифровка.Установить("Субконто"+Номер[1]);
	   	Расшифровка.Установить("ОтборСубконто"+Номер[1]);
	КонецЕсли;
КонецПроцедуры	

//-----------------------------------------------
Процедура Сформировать(Ручн = 0, ФлагЗакрытияФормы = 0)
	Если Счет.Выбран() = 0 Тогда
		Предупреждение("Не указан счет!");
		Возврат;                           
	КонецЕсли;

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	СумСальдо = СоздатьОбъект("ТаблицаЗначений");
	СумСальдо.НоваяКолонка("Валюта");
	СумСальдо.НоваяКолонка("СНД", "Число");
	СумСальдо.НоваяКолонка("СНК", "Число");
	СумСальдо.НоваяКолонка("СКД", "Число");
	СумСальдо.НоваяКолонка("СКК", "Число");

	КолСальдо = СоздатьОбъект("ТаблицаЗначений");
	КолСальдо.НоваяКолонка("Валюта");
	КолСальдо.НоваяКолонка("СНД", "Число");
	КолСальдо.НоваяКолонка("СНК", "Число");
	КолСальдо.НоваяКолонка("СКД", "Число");
	КолСальдо.НоваяКолонка("СКК", "Число");
	
	ВидСубконто[1] = ВыбВидСубконто1; Субконто[1] = Субконто1; ОтборСубконто[1] = ?(ВидСубконто[1].Выбран()=1, ОтборСубконто1.ТекущаяСтрока(), 3); ПоГруппам[1] = ПоГруппам1; Номер[1] = 1;
	ВидСубконто[2] = ВыбВидСубконто2; Субконто[2] = Субконто2; ОтборСубконто[2] = ?(ВидСубконто[2].Выбран()=1, ОтборСубконто2.ТекущаяСтрока(), 3); ПоГруппам[2] = ПоГруппам2; Номер[2] = 2;
	ВидСубконто[3] = ВыбВидСубконто3; Субконто[3] = Субконто3; ОтборСубконто[3] = ?(ВидСубконто[3].Выбран()=1, ОтборСубконто3.ТекущаяСтрока(), 3); ПоГруппам[3] = ПоГруппам3; Номер[3] = 3;

	Если (ВидСубконто[1] = ВидСубконто[2]) И (ОтборСубконто[1] <> 3) И (ОтборСубконто[2] <> 3) Или
		 (ВидСубконто[2] = ВидСубконто[3]) И (ОтборСубконто[2] <> 3) И (ОтборСубконто[3] <> 3) Или
		 (ВидСубконто[3] = ВидСубконто[1]) И (ОтборСубконто[3] <> 3) И (ОтборСубконто[1] <> 3) Тогда
		Предупреждение("Выбраны одинаковые виды субконто!");
		Возврат;
	КонецЕсли;

	Если Ручн = 1 Тогда
	    СохранитьЗначение("ОтчРабСчет",Счет);
	КонецЕсли;

	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;

	ФлВал = Счет.Валютный;

   	Расшифровка = СоздатьОбъект("СписокЗначений");
    Ит = СоздатьОбъект("БухгалтерскиеИтоги");

    Ит.ИспользоватьРазделительУчета(РазделительУчета);
	КолПоСчету = 0;
    Заголовок1 = "";
    Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
		    Ит.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
		    Если А <> 1 Тогда
		    	Заголовок1 = Заголовок1+"; ";
		    КонецЕсли;
		    Заголовок1 = Заголовок1+ВидСубконто[А];
		    Если ОтборСубконто[А] = 2 Тогда
		    	Заголовок1 = Заголовок1+": "+Субконто[А];
				КолПоСчету = Счет.УчетПоКоличеству(А);
		    КонецЕсли;
		КонецЕсли;
	КонецЦикла;
                          
	Ит.ВключатьСубсчета(ДанныеПоСубсчетам);
	Если Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет) = 0 Тогда
		Возврат;
	КонецЕсли;

	Если (ТипЗначенияСтр(Т) <> "Таблица") Или (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
	Т.ИсходнаяТаблица("Таблица");
	
	НазваниеОрганизации = глНазваниеОрганизации(Контекст);

	Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомостьПоСчету");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
   	Расшифровка.Установить("Дата1", Дата1);
   	Расшифровка.Установить("Дата2", Дата2);
   	Расшифровка.Установить("Счет", Счет);
   	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
    Для А=1 По 3 Цикл
   		Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
   		Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
   		Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
   		Расшифровка.Установить("ПоГруппам"+Номер[А], ПоГруппам[А]);
	КонецЦикла;
    Т.ВывестиСекцию("Секция_12");
    Т.ВывестиСекцию("Секция_1");
	ФиксСтрок = 7;
	Если ПустоеЗначение(Заголовок1) = 0 Тогда
		Т.ВывестиСекцию("Секция_19");
		ФиксСтрок = ФиксСтрок + 1;
	КонецЕсли;
	Т.ВывестиСекцию("Секция_20");

    Расшифровка.УдалитьВсе();
   	Расшифровка.Установить("Отчет", "КарточкаСчета");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
   	Расшифровка.Установить("Дата1", Дата1);
   	Расшифровка.Установить("Дата2", Дата2);
   	Расшифровка.Установить("Счет", Счет);

    Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
			Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
			Если ОтборСубконто[А] = 2 Тогда
				Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
			Иначе
				Если ПустоеЗначение(Субконто[А]) = 0 Тогда
				    Расшифровка.Установить("ОтборСубконто"+Номер[А], 2);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеПоСубсчетам = 1 Тогда
		// Для расчета сальдо, развернутого только по субсчетам
		СНДР = 0;
		СНКР = 0;
		СКДР = 0;
		СККР = 0;
		
		Ит.ВыбратьСчета();
		Ит.ПолучитьСчет();
		Пока Ит.ПолучитьСчет() = 1 Цикл
		   	Расшифровка.Установить("Счет", Ит.Счет);
			Т.ВывестиСекцию("Секция_14");
			Если КолПоСчету = 1 Тогда
				Т.ВывестиСекцию("Секция_15");
			КонецЕсли;
			ФлВал = Ит.Счет.Валютный;
	        Если ФлВал = 1 Тогда
	            Ит.ВыбратьВалюты();
	            Пока Ит.ПолучитьВалюту()=1 Цикл
				   	Расшифровка.Установить("Валюта",Ит.Валюта);
				   	Расшифровка.Установить("ПоВалюте",1);
		            Т.ВывестиСекцию("Секция_16");
	            КонецЦикла;
			   	Расшифровка.Установить("Валюта");
				Расшифровка.Установить("ПоВалюте");
			КонецЕсли;
			Если Ит.Счет.ЭтоГруппа() = 0 Тогда
			    ПоСубконто(Ит, Т, ФлВал);
				
				СН = Ит.СНД(1)-Ит.СНК(1);
				Если СН > 0 Тогда
					СНДР = СНДР+СН;
				Иначе
					СНКР = СНКР-СН;
				КонецЕсли;
	
				СК = Ит.СКД(1)-Ит.СКК(1);
				Если СК > 0 Тогда
					СКДР = СКДР+СК;
				Иначе
					СККР = СККР-СК;
				КонецЕсли;
			КонецЕсли;
		   	Расшифровка.Установить("Отчет", "КарточкаСчета");
		КонецЦикла;
		   
	Иначе
		ПоСубконто(Ит, Т, ФлВал);
	КонецЕсли;

	Если КолПоСчету = 0 Тогда
		Если ОтборСубконто[1] <> 3 Тогда
			Т.ВывестиСекцию("Секция_8");
		ИначеЕсли ДанныеПоСубсчетам = 1 Тогда
			Т.ВывестиСекцию("Секция_21");
		Иначе
	    	Т.ВывестиСекцию("Секция_17");
		КонецЕсли;
	Иначе
		Если ОтборСубконто[1] <> 3 Тогда
			Т.ВывестиСекцию("Секция_13");
		Иначе
			Т.ВывестиСекцию("Секция_18");
		КонецЕсли;
	КонецЕсли;
    Ит = 0;
	
	НазваниеОрганизации = ?(ПустоеЗначение(НазваниеОрганизации)=1, "", " "+НазваниеОрганизации);
	ПериодИОрганизация = " ("+ПериодСтр(Дата1, Дата2)+")"+НазваниеОрганизации;
	ВерхнийКолонтитул = "Оборотно-сальдовая ведомость по счету "+Счет+ПериодИОрганизация;
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
    Т.ТолькоПросмотр(1);
    Т.Опции(0, 0, ФиксСтрок, 1, "ОпцииПечатиОСВПоСчету", "ОСВПоСчету");
	Т.ОбластьПечати(2);
	Т.ПовторятьПриПечатиСтроки(ФиксСтрок-1,ФиксСтрок);
	Т.ПараметрыСтраницы(,,,,,,,,, 1);
    Т.Показать(ВерхнийКолонтитул, "");
    Если Закрыть = 1 Тогда
    	СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;

	Если (ФлагЗакрытияФормы = 1) Или (Обновить = 2) Или (Закрыть = 1) Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСчета()
	Если Счет.КоличествоСубконто() > 0 Тогда
		НазначитьСчет(ВыбВидСубконто1, Счет, 1);
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто1 = "";
		Субконто1 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		ОтборСубконто1.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто1) = 1 Тогда
	    ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;                
	
	Форма.Субконто1.Доступность(Доступность);
	Форма.ОтборСубконто1.Доступность(Доступность);
	Форма.ВыбВидСубконто1.Доступность(Доступность);
	Форма.ПоГруппам1.Доступность(Доступность);
	Форма.ОчиститьСубконто1.Доступность(Доступность);

	//-----
	Если Счет.КоличествоСубконто() > 1 Тогда
		НазначитьСчет(ВыбВидСубконто2, Счет, 2);
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		Доступность = 1;
	Иначе
		ВыбВидСубконто2 = "";
		Субконто2 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто2.Выбран() = 0 Тогда
		ОтборСубконто2.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто2) = 1 Тогда
	    ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;                
	
	Форма.Субконто2.Доступность(Доступность);
	Форма.ОтборСубконто2.Доступность(Доступность);
	Форма.ВыбВидСубконто2.Доступность(Доступность);
	Форма.ПоГруппам2.Доступность(Доступность);
	Форма.ОчиститьСубконто2.Доступность(Доступность);
	
	//-----
	Если Счет.КоличествоСубконто() > 2 Тогда
		НазначитьСчет(ВыбВидСубконто3, Счет, 3);
		Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		Доступность = 1;
	Иначе
		ВыбВидСубконто3 = "";
		Субконто3 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто3.Выбран() = 0 Тогда
		ОтборСубконто3.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто3) = 1 Тогда
	    ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;                
	
	Форма.Субконто3.Доступность(Доступность);
	Форма.ОтборСубконто3.Доступность(Доступность);
	Форма.ВыбВидСубконто3.Доступность(Доступность);
	Форма.ПоГруппам3.Доступность(Доступность);
	Форма.ОчиститьСубконто3.Доступность(Доступность);
	
	Если Счет.ЭтоГруппа() = 0 Тогда
		ДанныеПоСубсчетам = 0;
		Форма.ДанныеПоСубсчетам.Доступность(0);
	Иначе
		Форма.ДанныеПоСубсчетам.Доступность(1);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто1()
	Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто2()
	Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто3()
	Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	Если ПустоеЗначение(Субконто1) = 0 Тогда
	    Если ТипЗначения(Субконто1) = 11 Тогда //Справочник
	    	Если Субконто1.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
	    Если ТипЗначения(Субконто2) = 11 Тогда //Справочник
	    	Если Субконто2.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	Если ПустоеЗначение(Субконто3) = 0 Тогда
	    Если ТипЗначения(Субконто3) = 11 Тогда //Справочник
	    	Если Субконто3.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1.ТекущаяСтрока(1);
	Субконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2.ТекущаяСтрока(1);
	Субконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3.ТекущаяСтрока(1);
	Субконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореРУ()
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры	

//-----------------------------------------------
Процедура ПриОткрытии()
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;

	Форма.Кн_Видеокурс.Видимость( ?(ТипЗначения(Видео_Компонента)=0,0,1 ));
	ОтборСубконто1.УдалитьВсе();
	ОтборСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто1.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто1.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто2.УдалитьВсе();
	ОтборСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто2.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто2.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто3.УдалитьВсе();
	ОтборСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто3.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто3.ДобавитьЗначение(3, "Не учитывать");

	Если глФлагРасшифровки = 1 Тогда
		Закрыть = 1;
		Обновить = глОбновить;
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
	   	Дата1 = глРасшифровка.Получить("Дата1");
	   	Дата2 = глРасшифровка.Получить("Дата2");
	   	Счет = глРасшифровка.Получить("Счет");
	   	ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
	   	ПриВыбореСчета();

		Если ПустоеЗначение(глРасшифровка.Получить("ВидСубконто1")) = 0 Тогда
	   		ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
			Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
	   	КонецЕсли;
	   	Если ТипЗначения(глРасшифровка.Получить("Субконто1")) > 0 Тогда
	   		Субконто1 = глРасшифровка.Получить("Субконто1");
	   	КонецЕсли;
		ОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1"));
		ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
		
		Если ПустоеЗначение(глРасшифровка.Получить("ВидСубконто2")) = 0 Тогда
			ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
			Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		КонецЕсли;
	   	Если ТипЗначения(глРасшифровка.Получить("Субконто2")) > 0 Тогда
			Субконто2 = глРасшифровка.Получить("Субконто2");
		КонецЕсли;
		ОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2"));
		ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2"); 
		
		Если ПустоеЗначение(глРасшифровка.Получить("ВидСубконто3")) = 0 Тогда
			ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
			Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		КонецЕсли;
	   	Если ТипЗначения(глРасшифровка.Получить("Субконто3")) > 0 Тогда
			Субконто3 = глРасшифровка.Получить("Субконто3");
		КонецЕсли;
		ОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3"));
		ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
		
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Закрыть = 0;
		Обновить = 0;
		ВыбРазделительУчета = 1;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
		РУ = БухИтоги.ИспользоватьРазделительУчета();
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Если Счет.Выбран()=0 Тогда
		    ВосстановитьЗначение("ОтчРабСчет",Счет);
		КонецЕсли;
		ПриВыбореСчета();
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового()
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
	ПриВыбореСчета();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, Флаг)
	//Обработка выбора субконто типа "Документ"
	Если Лев(ИдентЭлемДиалога, 8) = "Субконто" Тогда
		Ном = Число(Прав(ИдентЭлемДиалога, 1));
		Если Ном = 1 Тогда
		    _ВидСубконто = ВыбВидСубконто1;
		ИначеЕсли Ном = 2 Тогда
		    _ВидСубконто = ВыбВидСубконто2;
		ИначеЕсли Ном = 3 Тогда
		    _ВидСубконто = ВыбВидСубконто3;
		КонецЕсли;
		Если Лев(_ВидСубконто.ТипСубконто(), 8) = "Документ" Тогда
			//Предусмотрена возможность выбора субконто типа "Документ" из специально созданного в конфигурации журнала
			//Идентификатор такого журнала должен быть такой же, как у вида субконто
			Журнал = Метаданные.Журнал(_ВидСубконто.Идентификатор());
		    Если Журнал.Выбран() = 0 Тогда
		        Флаг = 1;
				Возврат;
			КонецЕсли;
			//Тип первой ссылки первой графы этого журнала может определять тип параметра,
			//передаваемого в форму журнала документов.
			//Данный параметр может использоваться, например, для установки отбора документов в открываемой форме
			Флаг = 0;
			Если Журнал.Графа(1).Выбран() = 0 Тогда
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				Возврат;
			КонецЕсли;
			Если Журнал.Графа(1).Ссылки.Количество() > 0 Тогда
				РеквизитОтбора = Журнал.Графа(1).Ссылки.Получить(1).Тип+"."+Журнал.Графа(1).Ссылки.Получить(1).Вид;
				Если РеквизитОтбора = ВыбВидСубконто1.ТипСубконто() Тогда
					КонтекстЖурнала = Субконто1;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто2.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто2;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто3.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто3;
				Иначе
					ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				КонецЕсли;
				ОткрытьФорму("Журнал."+Журнал.Идентификатор, КонтекстЖурнала);
			Иначе
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
			КонецЕсли;
		КонецЕсли;
		глРазделительУчета = РазделительУчета;
	КонецЕсли;
КонецПроцедуры