// 1С:Предприятие 7.7
// Отчетность за I квартал 2003 года
// Анализ бухгалтерского учета

// Переменные для работы со счетами
Перем СчетТ;
Перем Ит;
Перем Сч;
Перем С;
Перем Проводка;
Перем Наименование;
Перем Пер;
Перем Свойства;
Перем СтрокаБ;
// Разделы анализа
Перем П1;
Перем П2;
Перем П3;
Перем П4;
// Учет обнаруженных ошибок
Перем Ошибка;
Перем Ошибка1;
Перем ВсегоОшибок;
// Начальные установки для анализа
Перем КварталОтчета;
Перем ГодОтчета;
Перем ИдентификаторОтчета;
Перем Период, ПериодОтчета;
Перем Дата1;
Перем Дата2;
Перем ДатаВМесяце;
Перем ПланСчетов;
Перем Расшифровка;
Перем Валюта;
Перем Курс;
Перем Вал;
Перем Опер;
// Таблицы значений
Перем ТЗБ;
Перем ТЗП;
// Таблицы
Перем Т1;
Перем Т2;
Перем КолСтр;
// Идентификатор конфигурации
Перем ИдКонфигурации;

//******************************************************************************  
Функция ПериодОтчетаСтр(ДатаНач,ДатаКон)                                   
	СтрПериод="";
	Если НачМесяца(ДатаКон) = ДатаНач Тогда
		СтрПериод = ПериодСтр(ДатаНач,ДатаКон);
	Иначе
		СтрПериод = "Январь - "+ПериодСтр(НачМесяца(ДатаКон),ДатаКон);
	КонецЕсли;
	Возврат СтрПериод; 
КонецФункции // ПериодОтчетаСтр   

//******************************************************************************

Процедура ИзменитьПериод(Шаг) 
	
	ИсхДата=Дата2;

	ДатаВМесяце=ДобавитьМесяц(Дата2,Шаг);
	Дата2=КонМесяца(ДатаВМесяце); 
	
	Если Дата2<'01.01.2001' Тогда	
		// технологический анализ выполняется
		// только по новому плану счетов
		Дата2=ИсхДата;		
		Возврат;
	КонецЕсли;			
	Дата1=НачГода(Дата2);
		
	// Период для показа в шапке отчета
	ПериодОтчета = Строка (" период с 1 Января по "+ Формат(Дата2,"Д ДДММММГГГГ"));

КонецПроцедуры // ИзменитьПериод	

//****************************************************************************
Функция ТипСчетаТ(Свойство)
	
	Если Свойство = "1" Тогда
		Возврат "активным.";
	ИначеЕсли Свойство = "2" Тогда
		Возврат "пассивным.";
	ИначеЕсли Свойство = "3" Тогда
		Возврат "активно-пассивным.";
	КонецЕсли;  
	
	Возврат "";
КонецФункции	

//****************************************************************************
// СчетРекомендован
// Функция определяет, является ли текущий счет из рабочего плана счетов
// рекомендованным и используется ли при автоматическом заполнении
// регламентированных отчетных форм. Если да, то текст сообщения, полученный
// в качестве параметра ИсхНаименование дополняет сообщением о возможности
// некорректного заполнения форм
//
Функция СчетРекоменд(ИсхНаименование) 
	Перем С;
	
	С=0;                   
	ТекСчет=Ит.Счет;
	Если ТЗБ.НайтиЗначение(СокрЛП(ТекСчет.Код), С, 1)>0 Тогда
		Если ТЗБ.ПолучитьЗначение(С,2)<>"0" Тогда
			ДопНаименование=ИсхНаименование+РазделительСтрок+
		"   Это может повлиять на корректное заполнение форм бухгалтерской отчетности!!";
			
			Возврат ДопНаименование;
		КонецЕсли;	
	КонецЕсли;	
	          
	Возврат ИсхНаименование;

КонецФункции

//****************************************************************************
Процедура Установить()
	Таблица.ИсходнаяТаблица("РезультатыАнализа");
	Таблица.ВывестиСекцию("Секция_1");
	Таблица.ВывестиСекцию("Секция_7");
	Таблица.ВывестиСекцию("Секция_7");
	Таблица.ВывестиСекцию("Секция_7");
	Таблица.Опции(0,0,4);
	Таблица.Показать();
	Т1=СоздатьОбъект("Таблица");
	Т1.ИсходнаяТаблица("СвойстваСчетов");
	Т1.Вывести();
	
	Если ПустоеЗначение(ВыбраннаяФирма)=0 Тогда
		Ит.ИспользоватьРазделительУчета( ВыбраннаяФирма );
	КонецЕсли;
	
	//ПланСчетов=ВыбранныйПланСчетов();
	ПланСчетов = ОсновнойПланСчетов();
	
	Ит.ПериодД(Дата1,Дата2);
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("КарточкаСчета", "Карточка счета");
	Меню.ДобавитьЗначение("ОборотноСальдоваяВедомостьПоСчету", "Ведомость по счету");
	Меню.ДобавитьЗначение("АнализСчета", "Анализ счета");
	Меню.ДобавитьЗначение("ОтчетПоПроводкам", "Отчет по проводкам");
	Меню.ДобавитьЗначение("ГлавнаяКнига", "Обороты счета (Гл. книга)");
	Меню.ДобавитьЗначение("ЖурналОрдер", "Журнал-ордер (ведомость) по счету");
	
	Расшифровка = СоздатьОбъект("СписокЗначений");	
	Расшифровка.Установить("Меню",Меню);	
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("ПланСчетов", ПланСчетов);
	Расшифровка.Установить("РазделительУчета", ВыбраннаяФирма);
	Расшифровка.Установить("ДанныеПоСубсчетам", 1);
	Расшифровка.Установить("ДанныеПоВалютам", 1);
	Расшифровка.Установить("Обновить", 0);
	Расшифровка.Установить("Отчет", "АнализСчета");
	//Расшифровка.Установить("Меню", 1);
КонецПроцедуры

//******************************************************************************
//  К проверке валют подойдем "интеллектуально".
//  Необходимо проверить только те валюты, по которым были проводки.
//  Пропускаем валюты с кодом "0" (по умолчанию рубли"), "000" (на всякий случай),
// "810" (рубли по классификатору валют);
//  Выдаем сообщения об установке курса для валют, по которым были проводки,
// но не указан курс валюты на дату конца периода анализа.
// Для валют, у которых курс равен 1 и не менялся в течение всего периода анализа,
// сообщений не выдаем.
Процедура Валюта()
	СчетТ="";
	Состояние("Анализ валют");
    
	// Создаем объект для работы с валютами.
	БухИтВал=СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтВал.ВыполнитьЗапрос(Дата1,Дата2,,,,,,2);
	
	СписокВалют = СоздатьОбъект( "СписокЗначений" );

	БухИтВал.ВыбратьВалюты(1);

	Пока БухИтВал.ПолучитьВалюту() = 1 Цикл
		// Проходим по валютам
		Состояние( БухИтВал.Валюта.Наименование );
		
		// Не проверяем валюты с кодом "0", "000" и "810"
		Если (БухИтВал.Валюта.Код <> "0") И
			 (БухИтВал.Валюта.Код <> "000") И
			 (БухИтВал.Валюта.Код <> "810") Тогда

			// Для других валют анализируем курс.
			
			// Флаг выдачи сообщения об установке курсов валют на последнюю дату анализируемого приода.
			Сообщать = 0;

			ИсторияКурса = СоздатьОбъект("Периодический");
			ИсторияКурса.ИспользоватьОбъект("Курс", БухИтВал.Валюта );
			ИсторияКурса.ОбратныйПорядок(1);
			ИсторияКурса.ВыбратьЗначения( , Дата2 );
			
			ИсторияКурса.ПолучитьЗначение();

			// Запомним курс и дату курса для первого элемента из выборки
			// (это последний элемент в истории). Это потребуется при создании сообщения.
			ЗначениеКурса = ИсторияКурса.Значение;
			ДатаКурса = ИсторияКурса.ДатаЗнач;

			// Какие могут быть ситуации?
			Если ЗначениеКурса = 0 Тогда 
				// Курс равен 0. Могут быть варианты:
				//  - курс не указан вообще;
				//  - последний установленный курс равен 0.
				// В обоих случаях это неправильно.
                                             
				Если ПустоеЗначение( ДатаКурса ) = 1 Тогда
					// Курс не указан вообще
					Наименование="Валюта - "+БухИтВал.Валюта.Наименование+", курс "+ЗначениеКурса+" установлен ранее "+Дата2+".";
				Иначе
					// Курс действительно равен 0, но установлен не на последнюю дату 
					// анализируемого периода.
					Наименование="Валюта - "+БухИтВал.Валюта.Наименование+", курс "+ЗначениеКурса+" установлен на "+ДатаКурса+".";
				КонецЕсли;
				Таблица.ВывестиСекцию("Валюта");

				// Устанавливаем флаг необходимости выдачи сообщения.
				Сообщать = 1;
				ВсегоОшибок=ВсегоОшибок+1;
				
			ИначеЕсли ЗначениеКурса = 1 Тогда
					
				// Если у валюты курс равен 1, проверяем, не изменялся ли он 
				// в течение периода анализа.
				// Если изменялся, значит курс 1 - правильный,
				// и надо выдать сообщение.
				Пока ИсторияКурса.ПолучитьЗначение() = 1 Цикл;
						
					Если ИсторияКурса.Значение <> ЗначениеКурса Тогда
						
						Наименование="Валюта - "+БухИтВал.Валюта.Наименование+", курс "+ЗначениеКурса+" установлен на "+ДатаКурса+".";
						Таблица.ВывестиСекцию("Валюта");

						// Устанавливаем флаг необходимости выдачи сообщения.
						Сообщать = 1;
						ВсегоОшибок=ВсегоОшибок+1;
	
						// Проверять далее нет необходимости
						Прервать;
							
					КонецЕсли;
				КонецЦикла;
			
			Иначе
								
				Если ДатаКурса < Дата2 Тогда
	
					// Выдаем сообщение, если курс валюты не равен 1
					// и дата установки курса - ранее даты конца периода анализа.
	
					Наименование="Валюта - "+БухИтВал.Валюта.Наименование+", курс "+ЗначениеКурса+" установлен на "+ДатаКурса+".";
					Таблица.ВывестиСекцию("Валюта");

					// Устанавливаем флаг необходимости выдачи сообщения.
					Сообщать = 1;
					ВсегоОшибок=ВсегоОшибок+1;
	
				КонецЕсли;
			
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	Если Сообщать = 1 Тогда
		Наименование="Рекомендуется установить курсы иностранных валют в справочнике ""Валюты"" на "+Дата2+"г.";
		Таблица.ВывестиСекцию("Секция_5");
		Таблица.ВывестиСекцию("Секция_7");
	КонецЕсли;
КонецПроцедуры // Валюта


//*************Проверка структуры аналитического учета******************
// Процедура просматривает список видов субконто, которые должны быть 
// у выбранного счета, и ищет их в плане счетов. 
// Если не находит - выдает строку в результаты анализа.
Процедура Аналитика()
	Перем ФлагВыдачиЗаголовкаРаздела;
	
	ФлагВыдачиЗаголовкаРаздела=0; 
	КолСтр=ТЗБ.КоличествоСтрок();

	// Обработка видов субконто	
	Для НомСтр=1 По КолСтр Цикл
		// получаем очередной счет из рекомендованного плана
		// и проверяем наличие аналитики на счете
		КодСч=ТЗБ.ПолучитьЗначение(НомСтр,1);    
		КодСубк1=ТЗБ.ПолучитьЗначение(НомСтр,8);
		КодСубк2=ТЗБ.ПолучитьЗначение(НомСтр,9);
		КодСубк3=ТЗБ.ПолучитьЗначение(НомСтр,10);
		
		Если (ПустоеЗначение(КодСубк1)=1) И 
			 (ПустоеЗначение(КодСубк2)=1) И
			 (ПустоеЗначение(КодСубк3)=1) Тогда
			
			// пропускаем синтетические счета 	
			Продолжить;		
		КонецЕсли;	
		
		Если Сч.НайтиПоКоду(КодСч)=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Счет=Сч.ТекущийСчет(); 
		
		// Последовательно перебираем все уровни аналитики
		// и проверяем их наличие в текущем плане счетов
		Для НомКолонки=8 По 10 Цикл
			
			// Получим наименование вида субконто, которое должно быть у выбранного счета
			ВыбНаимСубк=СокрЛП(ТЗБ.ПолучитьЗначение(НомСтр,НомКолонки));
			
			Если ПустоеЗначение(ВыбНаимСубк)=0 Тогда
				// используется аналитика
								
				Найден = 0;
				КолСубк=Счет.КоличествоСубконто();
				Если КолСубк>0 Тогда
					Для НомСубк = 1	По КолСубк Цикл
						// Получим наименование очередного вида субконто выбранного счета
						ВидСубк = Счет.ВидСубконто(НомСубк);
						
						Если СокрП(ВидСубк.Идентификатор())=ВыбНаимСубк Тогда
							// Если выбранное субконто существует у счета, идем дальше.
							Найден = 1;
							Прервать;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;
				
				Если Найден = 0 Тогда
					
					Если ПустоеЗначение(ИдКонфигурации)=0 Тогда 					
						// проверяем, необходимо ли по данному счету
						// аналитический учет в используемой конфигурации
						СписокКонф=ТЗБ.ПолучитьЗначение(НомСтр,12);
						Если ПустоеЗначение(СписокКонф)=0 Тогда
							Если Найти(СписокКонф,"(А)")=1 Тогда								
								Если Найти(СписокКонф,ИдКонфигурации)=0 Тогда
									// аналитический учет не является рекомендованным 
									// для используемой конфигурации
									Продолжить;
								КонецЕсли;
							КонецЕсли;	
						КонецЕсли;
					КонецЕсли;	
					
					Если ФлагВыдачиЗаголовкаРаздела = 0 Тогда
						Наименование="Выявлены отклонения в организации аналитического учета, которые могут повлиять на корректное заполнение форм бухгалтерской отчетности.";
						Таблица.ВывестиСекцию("Секция_3");
						Таблица.ВывестиСекцию("Секция_7");
						ФлагВыдачиЗаголовкаРаздела = 1;
					КонецЕсли;
					СчетТ="Счет "+СокрЛП(Счет.Код);
					Наименование="Для корректного заполнения форм отчетности рекомендуется на данном счете вести аналитический учет по субконто "+ВыбНаимСубк;
					Таблица.ВывестиСекцию("Секция_6");
					Таблица.ВывестиСекцию("Секция_7");
					ВсегоОшибок=ВсегоОшибок+1;
					Ошибка1=1;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	

	Таблица.Показать();
	
КонецПроцедуры // Аналитика

//****************************** Функция расшифровки ******************************
Функция РасшифровкаДтКт(ДтКт)
	Расшифровка.Установить("ДтКт", ДтКт);
	Возврат Расшифровка;
КонецФункции

//*******************Процедуры вывода результатов анализа бух.итогов***************
Процедура ВыводИт1()
	Если Ошибка=0 Тогда
		Таблица.ВывестиСекцию("Секция_4");
		Ошибка=1;
		ВсегоОшибок=ВсегоОшибок+1;
	КонецЕсли;
	Таблица.ВывестиСекцию("Секция_5");
КонецПроцедуры
Процедура ВыводИт2()
	Если Ошибка=0 Тогда
		Таблица.ВывестиСекцию("Секция_4");
		Ошибка=1;
		ВсегоОшибок=ВсегоОшибок+1;
	КонецЕсли;
	Таблица.ВывестиСекцию("Секция_8");
КонецПроцедуры
Процедура ВыводИт3()
	Если Ошибка=0 Тогда
		Таблица.ВывестиСекцию("Секция_4");
		Ошибка=1;
		ВсегоОшибок=ВсегоОшибок+1;
	КонецЕсли;
	Таблица.ВывестиСекцию("Секция_12");
КонецПроцедуры
Процедура ВыводИт4()
	Если Ошибка=0 Тогда
		Таблица.ВывестиСекцию("Секция_4");
		Ошибка=1;
		ВсегоОшибок=ВсегоОшибок+1;
	КонецЕсли;
	Таблица.ВывестиСекцию("Секция_13");
КонецПроцедуры

//***************************** Поиск недопустимых проводок **************************
Функция КодСчета(ТекСчет, Список)
	
	ДлинаКода=2;
	
	Если Список.Принадлежит(ТекСчет)=1 Тогда
		ДлинаКода=СтрДлина(ТекСчет);
	КонецЕсли;	
		
	Возврат Лев(ТекСчет, ДлинаКода);		             	
КонецФункции
//***************************** Поиск недопустимых проводок **************************
Процедура Проводки()
	Перем СписокСубсчетов;
	
	Таблица.Область(7,4).Текст=" ";
	Таблица.Область(8,4).Текст="<";
	Таблица.Показать();
	Таблица.ВывестиСекцию("Секция_7");
	Наименование=П4;
	Таблица.ВывестиСекцию("Секция_2");
	Ошибка=0;
	Т2=СоздатьОбъект("Таблица"); 
	Т2.ИсходнаяТаблица("НедопустимыеПроводки");
	Т2.Вывести();
	
	// Создаем таблицу значений для хранение информации о составе 
	// подозрительных проводок.
	// Эта информация будет считана из таблицы "НедопустимыеПроводки".	
	ТЗП=СоздатьОбъект("ТаблицаЗначений");
	ТЗП.КоличествоКолонок(4);
	// структура таблицы значений ТЗП
	// колонки:
	// 1 - код счета по дебету недопустимой корреспонденции;
	// 2 - код счета по кредиту недопустимой корреспонденции;
	// 3 - коды возможных (допустимых) счетов по дебету корреспонденции;
	// 4 - коды возможных (допустимых) счетов по дебету корреспонденции.
    // Коды счетов могут указываться последовательно, через запятую.
	
	С=1;
	Пока (Т2.Область(С+1,1).Текст<>"К") Цикл
		ТЗП.НоваяСтрока();
		ТЗП.УстановитьЗначение(С,1,Т2.Область(С+1,1).Текст);
		ТЗП.УстановитьЗначение(С,2,Т2.Область(С+1,2).Текст);
		ТЗП.УстановитьЗначение(С,3,Т2.Область(С+1,3).Текст);
		ТЗП.УстановитьЗначение(С,4,Т2.Область(С+1,4).Текст);

		С=С+1;
	КонецЦикла;                         
	
	// в список значений необходимо добавить те субсчета,
	// по которым выполняется проверка наличия некорректных проводок
	СписокСубсч=СоздатьОбъект("СписокЗначений");
	СписокСубсч.ДобавитьЗначение("16.2");
	СписокСубсч.ДобавитьЗначение("76.Н");                       
	СписокСубсч.ДобавитьЗначение("76.АВ");    
	
	Расшифровка = СоздатьОбъект("СписокЗначений");	
		
	Опер=СоздатьОбъект("Операция");     
	Если ПустоеЗначение(ВыбраннаяФирма) = 1 Тогда
		Опер.ВыбратьОперацииСПроводками(Дата1,Дата2,,,ПланСчетов,);
	Иначе
		Опер.ВыбратьОперацииСПроводками(Дата1,Дата2,,,ПланСчетов,ВыбраннаяФирма);
	КонецЕсли; 

	Пока Опер.ПолучитьПроводку()=1 Цикл
		ДПров=СокрП(Опер.Дебет.Счет.Код);
		КПров=СокрП(Опер.Кредит.Счет.Код);
		
		Если (ПустоеЗначение(ДПров)=1) ИЛИ (ПустоеЗначение(КПров)=1) Тогда			
			// проводки по забалансовым счетам не проверяем
			Продолжить;
		КонецЕсли;	
				
		ДПров=КодСчета(ДПров, СписокСубсч);
		КПров=КодСчета(КПров, СписокСубсч);
		         
		С=0;    
		Найден=0;
		Если ТЗП.НайтиЗначение(ДПров,С,1)>0 Тогда
			// проверим код счета по кредиту некорректной проводки
			СписокК=ТЗП.ПолучитьЗначение(С,2);
			// проверяем наличие в по номеру строки C списка недопустимых проводок
			// кода счета по кредиту проводки
			Если Найти(СписокК,КПров)>0 Тогда
				Найден=1;
			Иначе
				// попробуем найти корр. счет проводки в списке допустимых
				СписокКДоп=ТЗП.ПолучитьЗначение(С,4);
				Если ПустоеЗначение(СписокКДоп)=1 Тогда					
					// такая проводка не найдена в списке некорректных
					Продолжить;
				КонецЕсли;	
				
				Если Найти(СписокКДоп,КПров)>0 Тогда
					// это допустимая проводка
					Продолжить;
				Иначе
					Найден=1;
				КонецЕсли;
			КонецЕсли;					
		Иначе           
			// найдем код счета по кредиту корреспонденции
			// в списке некорректных проводок
			Если ТЗП.НайтиЗначение(КПров,С,2)>0 Тогда
				// проверим код счета по дебету некорректной проводки
				СписокДДоп=ТЗП.ПолучитьЗначение(С,3);  
				Если ПустоеЗначение(СписокДДоп)=1 Тогда
					// такая проводка не найдена в списке некорректных
					Продолжить;
				КонецЕсли;	
				
				Если Найти(СписокДДоп,ДПров)>0 Тогда
					// это допустимая проводка
					Продолжить;
				Иначе
					Найден=1;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	    
		Если Найден=1 Тогда
			Если Ошибка=0 Тогда
				Наименование="Обнаружены некоторые проводки, которые возможно, являются некорректными или "+
							"требуют дополнительной проверки!";
				Таблица.ВывестиСекцию("Секция_3");
				Таблица.ВывестиСекцию("Секция_7");
				Ошибка=1;
			КонецЕсли;     
			
			Наименование="Сумма проводки : "+Формат(Опер.Сумма,"Ч015.2");
			Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
			Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
			Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
			Таблица.ВывестиСекцию("Проводки");
			Наименование=Т2.Область(С+1,5).Текст;
			Таблица.ВывестиСекцию("Секция_5");
			Таблица.ВывестиСекцию("Секция_7");
			ВсегоОшибок=ВсегоОшибок+1;
		КонецЕсли;;

	КонецЦикла;
	
	                           
	Если Ошибка=0 Тогда
		Наименование="По разделу ошибок не обнаружено.";
		Таблица.ВывестиСекцию("Секция_3");
		Таблица.ВывестиСекцию("Секция_7");
	КонецЕсли;
КонецПроцедуры

//***************************** ОСНОВНОЙ АНАЛИЗ ИНФОРМАЦИИ ****************************
//Проводится анализ информационной базы пользователя, рассчитывается
//баланс счетов, формируется основной отчет. В результате работы взаимодействует с процедурами
//и функциями Установить,Аналитика, Проводки, ПриОткрытии, ВыводИт1, ВывотИт2, ВыводИт3, ВыводИт4,
//РасшифровкаДтКт
Процедура Анализ();

	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат;
	КонецЕсли;

	Таблица.Очистить();
	Установить();   
	       
	Таблица.Область(3,1,3,4).Текст="за "+ПериодОтчета;
	Таблица.Область(5,3,8,3).ГоризонтальноеПоложение(2);
	Таблица.Область(5,3,8,3).ВертикальноеПоложение(2);
	Таблица.Область(5,3,8,3).Курсив(1);
	Таблица.Область(5,3,8,3).РазмерШрифта(8);
	Таблица.Область(5,3).Текст="Раздел 1";
	Таблица.Область(6,3).Текст="Раздел 2";
	Таблица.Область(7,3).Текст="Раздел 3";
	Таблица.Область(8,3).Текст="Раздел 4";
	Таблица.Область(5,4,8,4).ЦветТекста(250,0,0);
	Таблица.Область(5,4,8,4).Полужирный(1);
	Таблица.Область(5,4).Текст="<";
	Таблица.Показать();
	                                     
	
	// Создаем таблицу значений для хранение информации о составе и свойствах
	// рекомендуемого плана счетов.
	// Эта информация будет считана из таблицы "СвойстваСчетов".	
	ТЗБ=СоздатьОбъект("ТаблицаЗначений");
	ТЗБ.КоличествоКолонок(12);	
	// структура таблицы значений ТЗБ
	// колонки:
	// 1 - код счета
	// 2 - тип сальдо (активный, пассивный, активно-пассивный) по рекоменд. плану счетов
	// 3 - тип сальдо по текущему плану счетов
	// 4 - признак несоответствия св-ва счета рекоменд. значению
	// 5 - признак проверки наличия остатков по закрываемому счету
	// 6 - СКД по счету
	// 7 - СКК по счету     
	// 8 - Субконто 1
	// 9 - Субконто 2
	// 10- Субконто 3
	// 11- признак ведения на счете только колич. учета
	// 12- признак наличия счета в отдельных конфигурациях -
	//     если счет присутствует не во всех типовых конфигурациях,
	//     то в колонке перечисляют идентификаторы конфигураций

	С=1;
	Пока (Т1.Область(С+1,1).Текст<>"К") Цикл
		ТЗБ.НоваяСтрока();
		ТЗБ.УстановитьЗначение(С,1,Т1.Область(С+1,1).Текст);
		ТЗБ.УстановитьЗначение(С,2,Т1.Область(С+1,3).Текст);
		ТЗБ.УстановитьЗначение(С,5,Т1.Область(С+1,4).Текст);
		ТЗБ.УстановитьЗначение(С,8,Т1.Область(С+1,5).Текст);
		ТЗБ.УстановитьЗначение(С,9,Т1.Область(С+1,6).Текст);
		ТЗБ.УстановитьЗначение(С,10,Т1.Область(С+1,7).Текст);
		ТЗБ.УстановитьЗначение(С,11,Т1.Область(С+1,9).Текст); 
		ТЗБ.УстановитьЗначение(С,12,Т1.Область(С+1,10).Текст);

		С=С+1;
	КонецЦикла;
	
	// Обработка бухгалтерских данных
	КолСтр=ТЗБ.КоличествоСтрок();
	Для НомСтр=1 По КолСтр Цикл
		КодСч=ТЗБ.ПолучитьЗначение(НомСтр,1);
		Свойства=ТЗБ.ПолучитьЗначение(НомСтр,2);
		СтрокаБ=ТЗБ.ПолучитьЗначение(НомСтр,5);
		Если Сч.НайтиПоКоду(КодСч)>0 Тогда
			СчетТ=Сч.ТекущийСчет();
			// проверяем, есть ли остатки на выбранном счете
			Если (Ит.СКД(СчетТ.Код)=0) И (Ит.СКК(СчетТ.Код)=0) Тогда
				Продолжить;
			КонецЕсли;	
			
			// проверяем свойства счета
			Если Свойства<>"0" Тогда
				Если СокрП(Свойства)<>СокрП(СчетТ.Активный) Тогда  
					// тип сальдо не соответствует
					ТЗБ.УстановитьЗначение(НомСтр,4,1);
					ТЗБ.УстановитьЗначение(НомСтр,3,СокрП(СчетТ.Активный));
				КонецЕсли;	
				
				Если (СокрП(СтрокаБ)="1") Тогда 
					ОстД=Ит.СКД(СчетТ.Код);
					ОстК=Ит.СКК(СчетТ.Код);
					Если (ОстД<>0) ИЛИ (ОстК<>0) Тогда
						// имеется сальдо по закрываемым счетам
						ТЗБ.УстановитьЗначение(НомСтр,4,2);
						ТЗБ.УстановитьЗначение(НомСтр,6,ОстД);
						ТЗБ.УстановитьЗначение(НомСтр,7,ОстК);
					КонецЕсли;	
				КонецЕсли;	
		    КонецЕсли;
	
		Иначе						
			//Счет не найден
			ТЗБ.УстановитьЗначение(НомСтр,4,3);
			
		КонецЕсли;          
		
	КонецЦикла;
	
	// Вывод комментариев
	ВсегоОшибок=0;              
	
	// Комментарии по 1 разделу
	Наименование=П1;
	Таблица.ВывестиСекцию("Секция_2");
	Ошибка=0;
	Для С=1 По КолСтр Цикл                    
		
		ТипОшибки=ТЗБ.ПолучитьЗначение(С,4);
		Если (ПустоеЗначение(ТипОшибки)=0) И 
			 (ПустоеЗначение(ИдКонфигурации)=0) Тогда 

			// проверяем, должен ли данный счет
			// находится в рабочем плане счетов
			// используемой конфигурации
			СписокКонф=ТЗБ.ПолучитьЗначение(С,12);
			Если ПустоеЗначение(СписокКонф)=0 Тогда
				Если Найти(СписокКонф,"(А)")=1 Тогда
					// Рекомендован только для ведения аналитич. учета.
					// Здесь пропускаем. Проверка выполняется в разделе "Аналитика".
					Продолжить;
				КонецЕсли;	
				Если Найти(СписокКонф,ИдКонфигурации)=0 Тогда
					// этот счет не является рекомендованным 
					// для используемой конфигурации
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
				
				
		Если ТипОшибки=3 Тогда
			Если Ошибка=0 Тогда
				Наименование="Приведите план счетов в соответствие с рекомендованным фирмой 1С. В противном случае, возможно, формы бухгалтерской отчетности будут заполнены некорректно.";
				Таблица.ВывестиСекцию("Секция_3");
				Таблица.ВывестиСекцию("Секция_7");
				Ошибка=1;
			КонецЕсли;
			СчетТ="Счет "+ТЗБ.ПолучитьЗначение(С,1);
			Наименование=СчетТ+" """+СокрП(Т1.Область(С+1,2).Текст)+""""+РазделительСтрок+
						"Счет не найден в списке счетов, рекомендованном фирмой 1С.";
			Таблица.ВывестиСекцию("Секция_6");
			Таблица.ВывестиСекцию("Секция_7");
			ВсегоОшибок=ВсегоОшибок+1;
		КонецЕсли;    
		
		Если ТипОшибки=1 Тогда			
			Если Ошибка=0 Тогда
				Наименование="Приведите план счетов в соответствие с рекомендованным фирмой 1С. В противном случае, возможно, формы бухгалтерской отчетности будут заполнены некорректно.";
				Таблица.ВывестиСекцию("Секция_3");
				Таблица.ВывестиСекцию("Секция_7");
				Ошибка=1;
			КонецЕсли;
			СчетТ="Счет "+ТЗБ.ПолучитьЗначение(С,1);     
			// тип счета по текущему плану
			Наименование="Тип счета установлен: "+ТипСчетаТ(ТЗБ.ПолучитьЗначение(С,3));
			Таблица.ВывестиСекцию("Секция_6"); 
			// тип счета по рекомендованному плану
			СвойствоТ= ТипСчетаТ(ТЗБ.ПолучитьЗначение(С,2));
			Наименование=СчетТ+" """+СокрП(Т1.Область(С+1,2).Текст)+""" является "+СвойствоТ;
			Таблица.ВывестиСекцию("Секция_5");
			Таблица.ВывестиСекцию("Секция_7");
			ВсегоОшибок=ВсегоОшибок+1;
		КонецЕсли;
		
	КонецЦикла;
	
	Ошибка1=0;
	Если СтруктураАналит=1 Тогда
		Аналитика();
	КонецЕсли;
	
	Если (Ошибка=0) И (Ошибка1=0) Тогда
		Наименование="По разделу ошибок не обнаружено.";
		Таблица.ВывестиСекцию("Секция_3");
		Таблица.ВывестиСекцию("Секция_7");
	КонецЕсли;
	
	// Комментарии по 2 разделу
	Таблица.Область(5,4).Текст=" ";
	Таблица.Область(6,4).Текст="<";
	Таблица.Показать();
	Наименование=П2;
	Таблица.ВывестиСекцию("Секция_2");
	Ошибка=0;
	Для С=1 По КолСтр Цикл
		Если ТЗБ.ПолучитьЗначение(С,4)=2 Тогда
			Если Ошибка=0 Тогда
				Наименование="Ошибки, выявленные в настоящем разделе, возможно, не позволят свести баланс и корректно заполнить  формы бухгалтерской отчетности. Указанные счета не должны иметь сальдо на конец отчетного периода!";
				Таблица.ВывестиСекцию("Секция_3");
				Таблица.ВывестиСекцию("Секция_7");
				Ошибка=1;
			КонецЕсли; 
			
			Счет=ТЗБ.ПолучитьЗначение(С,1);
			СчетТ="Счет "+Счет;
			Сч.НайтиПоКоду(Счет);
			Ит.ВыполнитьЗапрос(Дата1,Дата2,Сч);
			Расшифровка.Установить("Счет",Ит.Счет);
			
			ДебетовыйОст=ТЗБ.ПолучитьЗначение(С,6);
			КредитовыйОст=ТЗБ.ПолучитьЗначение(С,7);
			Наименование=?(ДебетовыйОст<>0,"Дебетовый остаток: "+Формат(ДебетовыйОст,"Ч-15.2"),"") + 
						?(КредитовыйОст<>0,"Кредитовый остаток: "+Формат(КредитовыйОст,"Ч-15.2"),"");
			Таблица.ВывестиСекцию("Баланс");
			
			// инструкция
			Наименование=Т1.Область(С+1,8).Текст;
			Таблица.ВывестиСекцию("Секция_5");
			Таблица.ВывестиСекцию("Секция_7");
			ВсегоОшибок=ВсегоОшибок+1; 
			
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибка=0 Тогда
		Наименование="По разделу ошибок не обнаружено.";
		Таблица.ВывестиСекцию("Секция_3");
		Таблица.ВывестиСекцию("Секция_7");
	КонецЕсли;
	Таблица.Показать();
	
	//Валюта
	Пер=ВсегоОшибок;	
	Ошибка=0;
	Валюта();       	
	
	//Анализ бухгалтерских итогов
	Таблица.Область(6,4).Текст=" ";
	Таблица.Область(7,4).Текст="<";
	Таблица.Показать();
	К1=7;
	Х=1;
	Наименование=П3;
	Таблица.ВывестиСекцию("Секция_2");
	               
	Сч.ВыбратьСчета();
	Пока Сч.ПолучитьСчет() = 1 Цикл		
		СчетТ=Сч.ТекущийСчет();

		С=0;
		Найден=ТЗБ.НайтиЗначение(СокрЛП(СчетТ.Код), С, 1);		
		Если СчетТ.Забалансовый = 1 Тогда
			// забалансовые счета из рабочего плана счетов проверяем
			// только при наличии их в рекомендованном плане
			Если Найден=0 Тогда		
				Продолжить;
			КонецЕсли;
		КонецЕсли;	
		
		Если Сч.КоличествоСубконто()=0 Тогда
			// обороты счетов без субконто
			Если Ит.ВыполнитьЗапрос(Дата1,Дата2,СчетТ)>0 Тогда
				Расшифровка.Установить("Счет",Ит.Счет);
				Ошибка=0;
				
				// Контроль в рублях
				Если (Ит.СКД()<0)Тогда
					Наименование=СчетРекоменд("-  Отрицательный остаток -  "+Ит.СКД()+" (в рублях!) - по дебету активного счета.");
					ВыводИт1();
				КонецЕсли;
				Если (Ит.СКК()<0)Тогда
					Наименование=СчетРекоменд("-  Отрицательный остаток -  "+Ит.СКК()+" (в рублях!) - по кредиту пассивного счета.");
					ВыводИт1();
				КонецЕсли;
				
				// Контроль в валюте
				Если (Ит.СКД(2)<0)Тогда
					Наименование=СчетРекоменд("-  Отрицательный остаток -  "+Ит.СКД(2)+" (в валюте!) - по дебету активного счета.");
					ВыводИт1();
				КонецЕсли;
				Если (Ит.СКК(2)<0)Тогда
					Наименование=СчетРекоменд("- Отрицательный остаток -  "+Ит.СКК(2)+" (в валюте!) - по кредиту пассивного счета.");
					ВыводИт1();
				КонецЕсли;    
				
				// Контроль по количеству
				Если СчетТ.Количественный = 1 Тогда 
					// Сначала проверим, не ведется ли по счету
					// только количественный учет (например, по счету "ГТД")
					Если Найден=1 Тогда
						Если СокрЛП(ТЗБ.ПолучитьЗначение(С,11))="1" Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;                                           
					
					Если ((Ит.СКД()=0) И (Ит.СКД(3)<>0)) Тогда
						Наименование=СчетРекоменд("-  Отсутствует денежная оценка количественного остатка ( "+Ит.СКД(3)+") по дебету счета!");
						ВыводИт1();
					КонецЕсли;
					Если ((Ит.СКК()=0) И (Ит.СКК(3)<>0)) Тогда
						Наименование=СчетРекоменд("-  Отсутствует денежная оценка количественного остатка ( "+Ит.СКК(3)+") по кредиту счета!");
						ВыводИт1();              
					КонецЕсли;
					Если ((Ит.СКД()<>0) И (Ит.СКД(3)=0)) Тогда
						Наименование=СчетРекоменд("-  По дебету счета: отсутствует остаток на конец периода в количественном выражении, при остатке в денежном выражении на сумму ( "+Ит.СКД()+" )!");
						ВыводИт1();
					КонецЕсли;
					Если ((Ит.СКК()<>0) И (Ит.СКК(3)=0)) Тогда
						Наименование=СчетРекоменд("-  По кредиту счета: отсутствует остаток на конец периода в количественном выражении, при остатке в денежном выражении на сумму ( "+Ит.СКК()+" )!");
						ВыводИт1();
					КонецЕсли;                                       				
				КонецЕсли;		                                         
					
				//Проверка валютных итогов
				Если СчетТ.Валютный=1 Тогда
					Ит.ВыбратьВалюты();
					Пока Ит.ПолучитьВалюту()=1 Цикл
						Вал.ВыбратьЭлементы();
						Вал.НайтиПоКоду(Ит.Валюта.Код);
						Если Вал.Выбран()>0 Тогда
							Кратность=Вал.Кратность.Получить(Дата2);
							Курс=Вал.Курс.Получить(Дата2)/?(Кратность=0,1,Кратность);
							Курс=?(Курс=0,1,Курс);
							Если Ит.СКД(2)<0 Тогда
								Наименование="- Отрицательный остаток в валюте - ("+Ит.СКД(2)+") - по дебету активного счета!";
								ВыводИт1();
							КонецЕсли;
							Если Ит.СКК(2)<0 Тогда
								Наименование="- Отрицательный остаток в валюте - ("+Ит.СКК(2)+") - по кредиту пассивного счета!";
								ВыводИт1();
							КонецЕсли;   
							
							// Проверка сделана ли переоценка счета (счета, переоцениваемые в особом порядке, не проверяются)
							Если Найти(Константа.СчетаПереоцениваемыеВОсобомПорядке.Получить(Дата2), СчетТ.Код) > 0 Тогда
							ИначеЕсли (ОКР(Ит.СКД()/Курс,2,1)<>Ит.СКД(2)) ИЛИ (ОКР(Ит.СКК()/Курс,2,1)<>Ит.СКК(2)) Тогда
								Наименование="- Пересчитайте валютные остатки по курсу - "+Курс+"!";
								ВыводИт1();
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		Иначе
			//Обработка счетов с субконто
			КСубк=Сч.КоличествоСубконто();
			Ит.ИспользоватьСубконто(СчетТ.ВидСубконто(1));
			Если (КСубк-2)>=0 Тогда
				Ит.Использоватьсубконто(СчетТ.ВидСубконто(2));
			КонецЕсли;
			Если КСубк-3>=0 Тогда
				Ит.Использоватьсубконто(СчетТ.ВидСубконто(3));
			КонецЕсли;
			Если Ит.ВыполнитьЗапрос(Дата1,Дата2,СчетТ)>0 Тогда
				Расшифровка.Установить("Счет",Ит.Счет);
				Ошибка=0;
				Ит.ВыбратьСубконто();
				Пока Ит.ПолучитьСубконто(1)=1 Цикл
					Если (Ит.СКД()<0)Тогда
						Наименование=СчетРекоменд("-  Отрицательный остаток в рублях - ("+Ит.СКД()+") - по дебету активного счета!");
						ВыводИт2();
					КонецЕсли;
					Если (Ит.СКК()<0)Тогда
						Наименование=СчетРекоменд("-  Отрицательный остаток в рублях - ("+Ит.СКК()+") - по кредиту пассивного счета!");
						ВыводИт2();
					КонецЕсли;
					
					//Проверка валютных итогов
					Если СчетТ.Валютный=1 Тогда
						Ит.ВыбратьВалюты();
						Пока Ит.ПолучитьВалюту()=1 Цикл
							Вал.ВыбратьЭлементы();
							Вал.НайтиПоКоду(Ит.Валюта.Код);
							Если Вал.Выбран()>0 Тогда
								Кратность=Вал.Кратность.Получить(Дата2);
								Курс=Вал.Курс.Получить(Дата2)/?(Кратность=0,1,Кратность);
								Курс=?(Курс=0,1,Курс); 
								Если Ит.СКД(2)<0 Тогда
									Наименование="- Отрицательный остаток в валюте - ("+Ит.СКД(2)+") по дебету активного счета!";
									ВыводИт2();
								КонецЕсли;
								Если Ит.СКК(2)<0 Тогда
									Наименование="- Отрицательный остаток в валюте - ("+Ит.СКК(2)+") по кредиту пассивного счета!";
									ВыводИт2();
								КонецЕсли;
								
								// Проверка сделана ли переоценка счета (счета, переоцениваемые в особом порядке, не проверяются)
								Если Найти(Константа.СчетаПереоцениваемыеВОсобомПорядке.Получить(Дата2), СчетТ.Код) > 0 Тогда
								ИначеЕсли (ОКР(Ит.СКД()/Курс,2,1)<>Ит.СКД(2))ИЛИ(ОКР(Ит.СКК()/Курс,2,1)<>Ит.СКК(2)) Тогда
									Наименование="- Пересчитайте валютные остатки по курсу - "+Курс+"!";
									ВыводИт2();
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
			
					//Анализ по количеству
					Если (Ит.СКД(3)<0)Тогда
						Наименование="-  Отрицательный остаток в количественном выражении - ("+Ит.СКД(3)+") по дебету активного счета.";
						ВыводИт2();
					КонецЕсли;
					Если (Ит.СКК(3)<0)Тогда
						Наименование="-  Отрицательный остаток в количественном выражении - ("+Ит.СКК(3)+") по кредиту пассивного счета!";
						ВыводИт2();
					КонецЕсли;  
					
					// Контроль по количеству
					Если СчетТ.Количественный = 1 Тогда 
						// Сначала проверим, не ведется ли по счету
						// только количественный учет (например, по счету "ГТД")
						Если Найден=1 Тогда
							Если СокрЛП(ТЗБ.ПолучитьЗначение(С,11))="1" Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли; 
						
						Если ((Ит.СКД()=0) И (Ит.СКД(3)<>0)) Тогда
							Наименование="-  Отсутствует денежная оценка количественных остатков ( "+Ит.СКД(3)+") по дебету счета!";
							ВыводИт2();
						КонецЕсли;
						Если ((Ит.СКК()=0) И (Ит.СКК(3)<>0)) Тогда
							Наименование="-  Отсутствует денежная оценка количественных остатков ( "+Ит.СКК(3)+") по кредиту счета!";
							ВыводИт2();
						КонецЕсли;
						Если ((Ит.СКД()<>0) И (Ит.СКД(3)=0)) Тогда
							Если Ошибка=0 Тогда
								Наименование="-  По дебету счета: отсутствует остаток в количественном выражении, при остатках в рублях на сумму ( "+Ит.СКД()+" )!";
								ВыводИт2();
							КонецЕсли;
							Если ((Ит.СКК()<>0) И (Ит.СКК(3)=0)) Тогда
								Наименование="-  По кредиту счета: отсутствует остаток в количественном выражении, при остатках в рублях на сумму ( "+Ит.СКК()+" )!";
								ВыводИт2();
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					Если Ксубк-2>=0 Тогда

						// Проверка по субконто 3						
						Ит.ВыбратьСубконто(2);
						Пока Ит.ПолучитьСубконто(2)=1 Цикл
							Если (Ит.СКД()<0)Тогда
								Наименование="-  Отрицательный остаток в рублях - ("+Ит.СКД()+") - по дебету активного счета!";
								ВыводИт3();
							КонецЕсли;
							Если (Ит.СКК()<0)Тогда
								Наименование="-  Отрицательный остаток в рублях - ("+Ит.СКК()+") - по кредиту пассивного счета!";
								ВыводИт3();
							КонецЕсли;
							
							// Проверка валютных итогов
							Если СчетТ.Валютный=1 Тогда
								Ит.ВыбратьВалюты();
								Пока Ит.ПолучитьВалюту()=1 Цикл
									Вал.ВыбратьЭлементы();
									Вал.НайтиПоКоду(Ит.Валюта.Код);
									Если Вал.Выбран()>0 Тогда
										Кратность=Вал.Кратность.Получить(Дата2);
										Курс=Вал.Курс.Получить(Дата2)/?(Кратность=0,1,Кратность);
										Курс=?(Курс=0,1,Курс);
										Если Ит.СКД(2)<0 Тогда
											Наименование="- Отрицательный остаток в валюте - ("+Ит.СКД(2)+") - по дебету активного счета!";
											ВыводИт3();
										КонецЕсли;
										Если Ит.СКК(2)<0 Тогда
											Наменование="- Отрицательный остаток в валюте - ("+Ит.СКК(2)+") - по кредиту пассивного счета!";
											ВыводИт3();
										КонецЕсли;
										
										// Проверка сделана ли переоценка счета (счета, переоцениваемые в особом порядке, не проверяются)
										Если Найти(Константа.СчетаПереоцениваемыеВОсобомПорядке.Получить(Дата2), СчетТ.Код) > 0 Тогда
										ИначеЕсли (ОКР(Ит.СКД()/Курс,2,1)<>Ит.СКД(2))ИЛИ(ОКР(Ит.СКК()/Курс,2,1)<>Ит.СКК(2)) Тогда
											Наименование="- Пересчитайте валютные остатки по курсу - "+Курс+"!";
											ВыводИт3();
										КонецЕсли;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
							
							// По количеству
							Если (Ит.СКД(3)<0)Тогда
								Наименование="-  Отрицательный остаток в количественном выражении - ("+Ит.СКД(3)+") по дебету активного счета!";
								ВыводИт3();
							КонецЕсли;
							Если (Ит.СКК(3)<0)Тогда
								Наименование="-  Отрицательный остаток в количественном выражении - ("+Ит.СКК(3)+") по кредиту пассивного счета!";
								ВыводИт3();
							КонецЕсли;
						КонецЦикла;
						
						//Проверка по субконто 3
						Если Ксубк-3>=0 Тогда
							Ит.ВыбратьСубконто(3);
							Пока Ит.ПолучитьСубконто(3)=1 Цикл
								Если (Ит.СКД()<0)Тогда
									Наименование="-  Отрицательный остаток в рублях - ("+Ит.СКД()+") - по дебету активного счета!";
									ВыводИт4();
								КонецЕсли;
								Если (Ит.СКК()<0)Тогда
									Наименование="-  Отрицательный остаток в рублях - ("+Ит.СКК()+") - по кредиту пассивного счета!";
									ВыводИт4();
								КонецЕсли;
								
								//Проверка валютных итогов
								Если СчетТ.Валютный=1 Тогда
									Ит.ВыбратьВалюты();
									Пока Ит.ПолучитьВалюту()=1 Цикл
										Вал.ВыбратьЭлементы();
										Вал.НайтиПоКоду(Ит.Валюта.Код);
										Если Вал.Выбран()>0 Тогда
											Кратность=Вал.Кратность.Получить(Дата2);
											Курс=Вал.Курс.Получить(Дата2)/?(Кратность=0,1,Кратность);
											Курс=?(Курс=0,1,Курс);
											Если Ит.СКД(2)<0 Тогда
												Наименование="- Отрицательный остаток в валюте - ("+Ит.СКД(2)+") - по дебету активного счета!";
												ВыводИт4();
											КонецЕсли;
											Если Ит.СКК(2)<0 Тогда
												Наименование="- Отрицательный остаток в валюте - ("+Ит.СКК(2)+") - по кредиту пассивного счета!";
												ВыводИт4();
											КонецЕсли; 
											
											// Проверка сделана ли переоценка счета (счета, переоцениваемые в особом порядке, не проверяются)
											Если Найти(Константа.СчетаПереоцениваемыеВОсобомПорядке.Получить(Дата2), СчетТ.Код) > 0 Тогда
											ИначеЕсли (ОКР(Ит.СКД()/Курс,2,1)<>Ит.СКД(2))ИЛИ(ОКР(Ит.СКК()/Курс,2,1)<>Ит.СКК(2)) Тогда
												Наименование="- Пересчитайте валютные остатки по курсу - "+Курс+"!";
												ВыводИт4();
											КонецЕсли;
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;								

								// Проверка по количеству								
								Если (Ит.СКД(3)<0) Тогда
									Наименование="-  Отрицательный остаток в количественном выражении - ("+Ит.СКД(3)+") - по дебету активного счета!";
									ВыводИт4();
								КонецЕсли;
								Если (Ит.СКК(3)<0) Тогда
									Наименование="-  Отрицательный остаток в количественном выражении - ("+Ит.СКК(3)+") - по кредиту пассивного счета!";
									ВыводИт4();
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				//Конец проверки счетов с субконто
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
		
	Если Пер=ВсегоОшибок Тогда
		Наименование="По разделу ошибок не обнаружено";
		Таблица.ВывестиСекцию("Секция_3");
	КонецЕсли;
	
	//Анализ проводок  
	Если АнализПроводок=1 Тогда
		Проводки();
	КонецЕсли;	
	
	// Итоговый вывод ошибок
	Таблица.Область(5,3,7,4).Полужирный(1);
	Таблица.Область(5,3,8,4).Текст=" ";
	Таблица.Область(5,3,7,3).ГоризонтальноеПоложение(2);
	Таблица.Область(5,3,7,3).ВертикальноеПоложение(2);
	Таблица.Область(5,3,7,4).Курсив(1);
	Таблица.Область(5,3,7,4).ЦветТекста(240,0,0);
	Таблица.Область(5,3,7,4).РазмерШрифта(9);
	Если ВсегоОшибок=0 Тогда
		Таблица.Область(6,3).Текст="Ошибок не обнаружено";
	Иначе
		Таблица.Область(6,3).Текст="Всего обнаружено ошибок";
		Таблица.Область(7,3).Текст="( "+ВсегоОшибок+" )                        ";
	КонецЕсли;
	
	Стр=Стр+1;
	Таблица.ВывестиСекцию("Конец");
	Таблица.Показать();
КонецПроцедуры // Анализ

//******************************************************************************
Процедура ПриВыбореФирмы()
	СохранитьЗначение("ФирмаРегламентированныхОтчетов",ВыбраннаяФирма);
КонецПроцедуры // ПриВыбореФирмы

//******************************************************************************
Процедура ПриОткрытии()
	Если Метаданные.ПланСчетов()=0 Тогда
		Сообщить("Анализ бухгалтерского учета может быть выполнен только при наличии плана счетов.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;                       
	
	Дата2 = ВосстановитьЗначение(ИдентификаторОтчета+"ДатаОтчета");
	Если ПустоеЗначение(Дата2)=1 Тогда
		// при первом открытии период определяем  
		// по году и кварталу отчета
		Дата2=КонМесяца(Дата(ГодОтчета, КварталОтчета*3, 1));
	КонецЕсли;	
	
	Дата1=НачГода(Дата2); 
	ДатаВМесяце=Дата2-1;  
	// Период для показа в шапке отчета
	ПериодОтчета = Строка (" период с 1 Января по "+ Формат(Дата2,"Д ДДММММГГГГ"));
	
	// определим идентификатор конфигурации
	Попытка 
		ИдКонфигурации=глИдентификаторКонфигурации();
	Исключение
	КонецПопытки;	
		
	П1="1. Результаты анализа рабочего плана счетов:";
	П2="2. Результаты анализа счетов, подлежащих закрытию в конце отчетного периода:";
	П3="3. Результаты анализа бухгалтерских итогов:  ";
	П4="4. Результаты анализа бухгалтерских проводок:"; 
		
	Сч=СоздатьОбъект("Счет.Основной");
	Ит=СоздатьОбъект("БухгалтерскиеИтоги");
	Вал=СоздатьОбъект("Справочник.Валюты");
	
	Если Метаданные.Справочник("СвоиЮрЛица").Выбран()=1 Тогда
		Форма.ВыбраннаяФирма.НазначитьТип("Справочник.СвоиЮрЛица");
		ВыбраннаяФирма=ВосстановитьЗначение("ФирмаРегламентированныхОтчетов");
		Если ВыбраннаяФирма.Выбран()=0 Тогда
			Спр=СоздатьОбъект("Справочник.СвоиЮрЛица");
			Спр.ВыбратьЭлементы();
			Спр.ПолучитьЭлемент();
			ВыбраннаяФирма=Спр.ТекущийЭлемент();
		КонецЕсли; 
	
		Ит.ИспользоватьРазделительУчета( ВыбраннаяФирма );
	ИначеЕсли Метаданные.Справочник("Фирмы").Выбран()=1 Тогда
		Форма.ВыбраннаяФирма.НазначитьТип("Справочник.Фирмы");
		ВыбраннаяФирма=ВосстановитьЗначение("ФирмаРегламентированныхОтчетов");
		Если ВыбраннаяФирма.Выбран()=0 Тогда
			Спр=СоздатьОбъект("Справочник.Фирмы");
			Спр.ВыбратьЭлементы();
			Спр.ПолучитьЭлемент();
			ВыбраннаяФирма=Спр.ТекущийЭлемент();
		КонецЕсли; 
	
		Ит.ИспользоватьРазделительУчета( ВыбраннаяФирма );		
	Иначе     
		
		Форма.ВыбраннаяФирма.Видимость(0);
	КонецЕсли;	
	
	Таблица.ИсходнаяТаблица("РезультатыАнализа");
	Таблица.ВывестиСекцию("Секция_1");
	Таблица.ВывестиСекцию("Секция_7");
	Таблица.ВывестиСекцию("Секция_7");
	Таблица.ВывестиСекцию("Секция_7");
	Таблица.Опции(0,0,3);
	Таблица.Показать();
КонецПроцедуры // ПриОткрытии

//******************************************************************************
Процедура ПриЗакрытии() // Предопределенная процедура 
	
	СохранитьЗначение(ИдентификаторОтчета+"ДатаОтчета", Дата2);
	
КонецПроцедуры // ПриЗакрытии
           
//******************************************************************************
ИдентификаторОтчета="Analiz02";

ГодОтчета = 2003;
КварталОтчета = 1;
