Перем ДатаНачалаНалоговогоПериода2003;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПриВыбореПериода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Да.
//
// Описание:
//  Дата начала формирования регистра - первый день месяца,
//  а дата конца - последняя дата месяца.
//
Процедура ПриВыбореПериода()
	
	НачДата = НачМесяца(НачДата);
	КонДата = КонМесяца(КонДата);
	
КонецПроцедуры // ПриВыбореПериода()

//******************************************************************************
// ПриВыбореВидаНоменклатуры()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Да.
//
// Описание:
//  Обеспечивает согласованность вида номенклатуры и продукции.
//
Процедура ПриВыбореВидаНоменклатуры()
	
	Если ВыбранныйВидНоменклатуры.Выбран() = 0 Тогда
	ИначеЕсли ВыбраннаяПродукция.Выбран() = 0 Тогда
	ИначеЕсли ВыбраннаяПродукция.ВидНоменклатуры = ВыбранныйВидНоменклатуры Тогда
	Иначе ВыбраннаяПродукция = 0;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореВидаНоменклатуры()

//******************************************************************************
// ПриВыбореПродукции()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Да.
//
// Описание:
//  Обеспечивает согласованность вида номенклатуры и продукции.
//
Процедура ПриВыбореПродукции()
	
	Если ВыбранныйВидНоменклатуры.Выбран() = 0 Тогда
	ИначеЕсли ВыбраннаяПродукция.Выбран() = 0 Тогда
	ИначеЕсли ВыбраннаяПродукция.ВидНоменклатуры = ВыбранныйВидНоменклатуры Тогда
	Иначе ВыбранныйВидНоменклатуры = 0;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореПродукции()

//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если (НачДата > КонДата) Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.", 60);
		Возврат 0;

	ИначеЕсли ПустоеЗначение(ДатаНачалаНалоговогоПериода2003) = 0 Тогда
		
		Если ((НачДата < ДатаНачалаНалоговогоПериода2003)
		   и  (КонДата >= ДатаНачалаНалоговогоПериода2003)) Тогда
			Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
			               "В выбранном интервале налоговый учет велся по"+РазделительСтрок+
						   "разным правилам."+РазделительСтрок+
						   "Отчет за данный период сформировать невозможно!", 60);
			Возврат 0;
		    
		КонецЕсли;

	КонецЕсли;

	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".", 60);
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура Сформировать()    
	
	глНовыеПравилаВеденияНУ(КонДата, ДатаНачалаНалоговогоПериода2003);

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// подготовка "Шапки"
	Таб = СоздатьОбъект("Таблица"); 
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
	СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;

	Заголовок = "Регистр информации о движении готовой продукции, учитываемой по методу средней себестоимости";
	
	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4
		СпособРасчетаСебестоимости = "по средневзвешенной";
		ВыбранныйОбъект = ВыбраннаяПродукция;

		Если БезРеализацииПродукцииОтгруженной = 1 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(по продукции на складе)";
			Таб.ИсходнаяТаблица("ПродукцияНаСкладах2003");
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.03");
			
		ИначеЕсли БезРеализацииПродукцииОтгруженной = 2 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(по продукции отгруженной)";
			Таб.ИсходнаяТаблица("ПродукцияОтгруженная2003");
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.04.2");

		ИначеЕсли БезРеализацииПродукцииОтгруженной = 3 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(по полуфабрикатам на складе)";
			Таб.ИсходнаяТаблица("ПродукцияНаСкладах2003");
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.07");

		Иначе
			Заголовок = Заголовок + РазделительСтрок + "(по полуфабрикатам отгруженным)";
			Таб.ИсходнаяТаблица("ПродукцияОтгруженная2003");
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.04.3");

		КонецЕсли;
		
		// таблица значений для обобщения результов расчета
        ТаблицаНоменклатуры = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаНоменклатуры.НоваяКолонка("Номенклатура", "Справочник");
		ТаблицаНоменклатуры.НоваяКолонка("НачСальдоКол", "Число", 15, 3);
		ТаблицаНоменклатуры.НоваяКолонка("НачСальдо",    "Число", 15, 2);
		ТаблицаНоменклатуры.НоваяКолонка("РасшифровкаДвижений", "ТаблицаЗначений");
		
		ДатаВМесяце = НачМесяца(НачДата);

		Пока НачМесяца(ДатаВМесяце) <= НачМесяца(КонДата) Цикл

			НачДатаРасчета = Макс(НачДата, НачМесяца(ДатаВМесяце));
			КонДатаРасчета = Мин(КонДата, КонМесяца(ДатаВМесяце));
			
			Если СпособРасчетаСебестоимости <> "по средней" Тогда
				// подготовка итогов для расчета фактической себестоимости за месяц
				ИтогиДляРасчета = СоздатьОбъект("БухгалтерскиеИтоги");
				ИтогиДляРасчета.ПериодМ(ДатаВМесяце);
			КонецЕсли;
	
			БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
			БухИт.ИспользоватьПланСчетов(ОсновнойПланСчетов());

			Если ВыбранныйОбъект.Выбран() = 1 Тогда
				БухИт.ИспользоватьСубконто(СчетУчетаНоменклатуры.ВидСубконто(1), ВыбранныйОбъект, 1);
				
			Иначе
				БухИт.ИспользоватьСубконто(СчетУчетаНоменклатуры.ВидСубконто(1), , 1);
				
			КонецЕсли;
				
			БухИт.ВыполнитьЗапрос(НачДатаРасчета, КонДатаРасчета, СчетУчетаНоменклатуры,,, 1, "Проводка", "СК");
	
			БухИт.ВыбратьСубконто(1);
			Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
				
				Если ПустоеЗначение(ВыбранныйВидНоменклатуры) = 0 Тогда
					Если БухИт.Субконто(1).ВидНоменклатуры <> ВыбранныйВидНоменклатуры Тогда
					    Продолжить;
					КонецЕсли;
				КонецЕсли;
                
				Стр = "";
				Если ТаблицаНоменклатуры.НайтиЗначение(БухИт.Субконто(1), Стр, "Номенклатура") = 1 Тогда
                    // По этой номенклатурной позиции уже были движения
					ТаблицаДвижений = ТаблицаНоменклатуры.ПолучитьЗначение(Стр, "РасшифровкаДвижений");
					
				Иначе
					// Создаем новый элемент таблицы
					ТаблицаНоменклатуры.НоваяСтрока();
                    Стр = ТаблицаНоменклатуры.НомерСтроки;
					
					ТаблицаДвижений = СоздатьОбъект("ТаблицаЗначений");
					ТаблицаДвижений.НоваяКолонка("ДатаОперации","Дата");
					ТаблицаДвижений.НоваяКолонка("ТекДок");
					ТаблицаДвижений.НоваяКолонка("ОснованиеОперации");
					ТаблицаДвижений.НоваяКолонка("ПриходКоличество",   "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ПриходСумма",		   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("ВозвратКоличество",  "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ВозвратСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("ОтгруженоКоличество","Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ОтгруженоСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("СписаниеКоличество", "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("СписаниеСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("ИзлишкиКоличество", "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ИзлишкиСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("СписаниеЦена",	   "Число", 15, 2);

					ТаблицаНоменклатуры.Номенклатура = БухИт.Субконто(1);
					ТаблицаНоменклатуры.НачСальдоКол = БухИт.СНД("К");
					ТаблицаНоменклатуры.НачСальдо	 = БухИт.СНД("С");

				КонецЕсли;

				Если СпособРасчетаСебестоимости <> "по средней" Тогда
					// Для алгоритма расчета себестоимости по средневзвешенной
					ВозвратНаСкладЗаМесКол = -ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
					ВозвратНаСкладЗаМесСум = -ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
					СписаноЗаМесКол = ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1)) + ВозвратНаСкладЗаМесКол;
					СписаноЗаМесСум = ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1)) + ВозвратНаСкладЗаМесСум;
					ПриходЗаМесКол  = ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1));
					ПриходЗаМесСум  = ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1));
					                                              
					// Необходимо учесть, что возврат товаров отгруженных без перехода
					// права собственности, но еще не релизованных, корректируется
					// в конце месяца.
					ВозвратТоваровОтгруженныхЗаМесКол = 0;
					ВозвратТоваровОтгруженныхЗаМесСум = 0;
					Если (БезРеализацииПродукцииОтгруженной = 1) 
					 или (БезРеализацииПродукцииОтгруженной = 3) Тогда
						БухИт.ВыбратьПериоды(, 2);    
						Пока БухИт.ПолучитьПериод() = 1 Цикл
							Если БухИт.Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							    Если Найти(БухИт.Операция.Дебет.Счет.Код, "Н02.04") <> 0 Тогда
									ВозвратТоваровОтгруженныхЗаМесКол = ВозвратТоваровОтгруженныхЗаМесКол + (-БухИт.КО("К"));
									ВозвратТоваровОтгруженныхЗаМесСум = ВозвратТоваровОтгруженныхЗаМесСум + (-БухИт.КО("С"));
								КонецЕсли;		
							КонецЕсли;
						КонецЦикла;
						
					Иначе
						ВозвратТоваровОтгруженныхЗаМесКол = -ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
						ВозвратТоваровОтгруженныхЗаМесСум = -ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
						ПриходЗаМесКол  = ПриходЗаМесКол + ВозвратТоваровОтгруженныхЗаМесКол;
						ПриходЗаМесСум  = ПриходЗаМесСум + ВозвратТоваровОтгруженныхЗаМесСум;
					КонецЕсли;

					ПриходПоРасчетуКол = 0;
					ПриходПоРасчету = 0;
					СписаноПоРасчетуКол = 0;
					СписаноПоРасчету = 0;
					ВозвратПоРасчетуКол = 0;
					ВозвратПоРасчету = 0;
				КонецЕсли;

				БухИт.ВыбратьПериоды();
				Пока БухИт.ПолучитьПериод() = 1 Цикл
	
					Если СпособРасчетаСебестоимости <> "по средней" Тогда
						Если (БухИт.ДО("К") = 0) и (БухИт.КО("К") = 0)  Тогда
						    Продолжить;
						КонецЕсли;
					КонецЕсли; 
					
					// Определение даты операции
					ТаблицаДвижений.НоваяСтрока();
					
					Опер = БухИт.Операция;
					ТаблицаДвижений.ДатаОперации = Опер.ДатаОперации;
					ТаблицаДвижений.ТекДок = Опер.Документ.ТекущийДокумент();
					
					// Определение сумм и количества

					Если БухИт.ВыбранаПоДт() = 1 Тогда
						// поступление или отгрузка без перехода права собственности
						ОснОпер = Опер.Дебет.Основание;
						
						Если (БезРеализацииПродукцииОтгруженной = 1)
						 или (БезРеализацииПродукцииОтгруженной = 3) Тогда // продукция на складе 
							
							Если Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   	// возврат ТМЦ поставщику
								ТаблицаДвижений.ВозвратКоличество = -БухИт.ДО("К");
								ТаблицаДвижений.ВозвратСумма      = -БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ВозвратКоличество <> 0, ТаблицаДвижений.ВозвратСумма/ТаблицаДвижений.ВозвратКоличество,0), 2);
								
							ИначеЕсли Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ИзлишкиИнвентаризации Тогда
								ТаблицаДвижений.ИзлишкиКоличество = БухИт.ДО("К");
								ТаблицаДвижений.ИзлишкиСумма      = БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ИзлишкиКоличество <> 0, ТаблицаДвижений.ИзлишкиСумма/ТаблицаДвижений.ИзлишкиКоличество,0), 2);
								
							Иначе
								// поступление ТМЦ
								ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
								ПриходПоРасчетуКол = ПриходПоРасчетуКол + ТаблицаДвижений.ПриходКоличество;
								Если ПриходПоРасчетуКол <> 0 Тогда
									ТаблицаДвижений.ПриходСумма= Окр(ПриходПоРасчетуКол * ПриходЗаМесСум/ПриходЗаМесКол, 2) - ПриходПоРасчету;
								КонецЕсли;
								ПриходПоРасчету = ПриходПоРасчету + ТаблицаДвижений.ПриходСумма;
								ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество, 2);
							КонецЕсли;
							
						Иначе // продукция, отгруженная без перехода права собственности
							
							Если Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   	// возврат ТМЦ на склад
								ТаблицаДвижений.ВозвратКоличество = -БухИт.ДО("К");
								
								Если СпособРасчетаСебестоимости = "по средней" Тогда
									ТаблицаДвижений.ВозвратСумма = -БухИт.ДО("С");
									
								Иначе
									Если БухИт.ДО("К") = 0 Тогда // это корректировка
										ТаблицаДвижений.УдалитьСтроку();
									    Продолжить;
									КонецЕсли;
									
									ВозвратПоРасчетуКол = ВозвратПоРасчетуКол + ТаблицаДвижений.ВозвратКоличество;
									Если ВозвратПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ВозвратСумма = Окр(ВозвратПоРасчетуКол * ВозвратТоваровОтгруженныхЗаМесСум/ВозвратТоваровОтгруженныхЗаМесКол, 2) - ВозвратПоРасчету;
									КонецЕсли;
									ВозвратПоРасчету = ВозвратПоРасчету + ТаблицаДвижений.ВозвратСумма;
								КонецЕсли;
								ТаблицаДвижений.СписаниеЦена = 		Окр(?(ТаблицаДвижений.ВозвратКоличество <> 0, ТаблицаДвижений.ВозвратСумма/ТаблицаДвижений.ВозвратКоличество,0), 2);
								
							Иначе // поступление ТМЦ
								
								Если СпособРасчетаСебестоимости = "по средней" Тогда
									ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
									ТаблицаДвижений.ПриходСумма 	 = БухИт.ДО("С");
									ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПриходКоличество <> 0, ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество,0), 2);
									
								Иначе // расчет по средневзвешенной
									Если БухИт.ДО("К") = 0 Тогда // это корректировка
										ТаблицаДвижений.УдалитьСтроку();
									    Продолжить;
									КонецЕсли;
									
									ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
									ПриходПоРасчетуКол = ПриходПоРасчетуКол + ТаблицаДвижений.ПриходКоличество;
									Если ПриходПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ПриходСумма= Окр(ПриходПоРасчетуКол * ПриходЗаМесСум/ПриходЗаМесКол, 2) - ПриходПоРасчету;
									КонецЕсли;
									ПриходПоРасчету = ПриходПоРасчету + ТаблицаДвижений.ПриходСумма;
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество, 2);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
					Иначе // выбытие
						
						ОснОпер = Опер.Кредит.Основание;

						Если СпособРасчетаСебестоимости = "по средней" Тогда
							// расчет себестоимости ведется по "средней цене"
							
							Если Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ОтгрузкаБезПереходаПраваСобственности Тогда
								ТаблицаДвижений.ОтгруженоКоличество = БухИт.КО("К");
								ТаблицаДвижений.ОтгруженоСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена = Окр(?(ТаблицаДвижений.ОтгруженоКоличество <> 0, ТаблицаДвижений.ОтгруженоСумма/ТаблицаДвижений.ОтгруженоКоличество, 0), 2);
							Иначе
								ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
								ТаблицаДвижений.СписаниеСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена = Окр(?(ТаблицаДвижений.СписаниеКоличество <> 0, ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 0), 2);
							КонецЕсли;
							
						Иначе // расчет себестоимости ведется по "средневзвешенной цене" за месяц
							Если БухИт.КО("К") = 0 Тогда // это корректировка
								ТаблицаДвижений.УдалитьСтроку();
							    Продолжить;
							КонецЕсли;
							
							Если Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   Если Найти(БухИт.Операция.Дебет.Счет.Код, "Н02.04") <> 0 Тогда // возврат товаров отгруженных
									ТаблицаДвижений.ОтгруженоКоличество = БухИт.КО("К");    
									ВозвратПоРасчетуКол = ВозвратПоРасчетуКол + (-ТаблицаДвижений.ОтгруженоКоличество);
									Если ВозвратПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ОтгруженоСумма = -(Окр(ВозвратПоРасчетуКол * ВозвратТоваровОтгруженныхЗаМесСум/ВозвратТоваровОтгруженныхЗаМесКол, 2) - ВозвратПоРасчету);
									КонецЕсли;
									ВозвратПоРасчету = ВозвратПоРасчету + (-ТаблицаДвижений.ОтгруженоСумма);
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ОтгруженоСумма/ТаблицаДвижений.ОтгруженоКоличество, 2);
									
								Иначе
									ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
									ТаблицаДвижений.СписаниеСумма      = БухИт.КО("С");
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 2);
								КонецЕсли;
							
							ИначеЕсли Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ОтгрузкаБезПереходаПраваСобственности Тогда
								ТаблицаДвижений.ОтгруженоКоличество = БухИт.КО("К");
								СписаноПоРасчетуКол = СписаноПоРасчетуКол + ТаблицаДвижений.ОтгруженоКоличество;
								Если СписаноПоРасчетуКол <> 0 Тогда
									ТаблицаДвижений.ОтгруженоСумма = Окр(СписаноПоРасчетуКол * СписаноЗаМесСум/СписаноЗаМесКол, 2) - СписаноПоРасчету;
								КонецЕсли;
								СписаноПоРасчету = СписаноПоРасчету + ТаблицаДвижений.ОтгруженоСумма;
								ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ОтгруженоСумма/ТаблицаДвижений.ОтгруженоКоличество, 2);
								
							Иначе // списание
								ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
								СписаноПоРасчетуКол = СписаноПоРасчетуКол + ТаблицаДвижений.СписаниеКоличество;
								Если СписаноПоРасчетуКол <> 0 Тогда
									ТаблицаДвижений.СписаниеСумма = Окр(СписаноПоРасчетуКол * СписаноЗаМесСум/СписаноЗаМесКол, 2) - СписаноПоРасчету;
								КонецЕсли;
								СписаноПоРасчету = СписаноПоРасчету + ТаблицаДвижений.СписаниеСумма;
								ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 2);
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
	
					// определяем основание списания 
					Если ПустоеЗначение(ОснОпер) = 0 Тогда
						ТаблицаДвижений.ОснованиеОперации = "" + глПолноеНаименование(ОснОпер.Владелец);
						ТаблицаДвижений.ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации + ", " + ОснОпер;
						ТаблицаДвижений.ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации + " на основании: " + СокрЛП(Опер.ПервичныйДокумент);
				
					Иначе
						ТаблицаДвижений.ОснованиеОперации = "" + СокрЛП(Опер.СодержаниеПроводки) + " на основании: " + СокрЛП(Опер.ПервичныйДокумент);
						
					КонецЕсли;
					
				КонецЦикла;
				
				ТаблицаНоменклатуры.УстановитьЗначение(Стр, "РасшифровкаДвижений", ТаблицаДвижений);

			КонецЦикла;

			// переходим к следующему месяцу в периоде формирования отчета
			ДатаВМесяце = ДобавитьМесяц(ДатаВМесяце, 1);
			
		КонецЦикла;

		ТаблицаНоменклатуры.Сортировать("Номенклатура");
		
		// печать таблицы
		Таб.ВывестиСекцию("Шапка");

		ВсегоПриходКоличество = 	0;
		ВсегоПриходСумма = 			0;
		ВсегоВозвратКоличество = 	0;
		ВсегоВозвратСумма = 		0;
		ВсегоСписаниеКоличество = 	0;
		ВсегоСписаниеСумма = 		0;
		ВсегоОтгруженоКоличество= 	0;
		ВсегоОтгруженоСумма = 		0;

		ТаблицаНоменклатуры.ВыбратьСтроки();

		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			ИтоговаяСтрока = "По продукции: """ + ТаблицаНоменклатуры.Номенклатура + """   Сальдо на начало периода (кол): " +
							 Формат(ТаблицаНоменклатуры.НачСальдоКол, "Ч10.2") + "; Сальдо на начало периода (сумма): " + Формат(ТаблицаНоменклатуры.НачСальдо, "Ч10.2");
	
			Таб.ВывестиСекцию("Номенклатура");

			ТаблицаДвижений = ТаблицаНоменклатуры.РасшифровкаДвижений;
			
			ОстатокКоличество = ТаблицаНоменклатуры.НачСальдоКол;
			ОстатокСумма 	  = ТаблицаНоменклатуры.НачСальдо;

			Если ТаблицаДвижений.КоличествоСтрок() <> 0 Тогда
				ТаблицаДвижений.ВыбратьСтроки();
				Пока ТаблицаДвижений.ПолучитьСтроку() = 1 Цикл
				    ДатаОперации =      ТаблицаДвижений.ДатаОперации;
					ТекДок = 			ТаблицаДвижений.ТекДок;
					ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации;
					ПриходКоличество =  ТаблицаДвижений.ПриходКоличество + ТаблицаДвижений.ИзлишкиКоличество;
					ПриходСумма =       ТаблицаДвижений.ПриходСумма + ТаблицаДвижений.ИзлишкиСумма;
					ВозвратКоличество = ТаблицаДвижений.ВозвратКоличество;
					ВозвратСумма =      ТаблицаДвижений.ВозвратСумма;
					СписаниеКоличество =ТаблицаДвижений.СписаниеКоличество;
					СписаниеСумма =     ТаблицаДвижений.СписаниеСумма;
					ОтгруженоКоличество=ТаблицаДвижений.ОтгруженоКоличество;
					ОтгруженоСумма =    ТаблицаДвижений.ОтгруженоСумма;
					СписаниеЦена =      ТаблицаДвижений.СписаниеЦена;
					
					// подсчет итогов операции
					ОстатокКоличество = ОстатокКоличество + (ПриходКоличество - ВозвратКоличество - СписаниеКоличество - ОтгруженоКоличество);
					ОстатокСумма 	  = ОстатокСумма + (ПриходСумма - ВозвратСумма - СписаниеСумма - ОтгруженоСумма);

					Таб.ВывестиСекцию("Строка");

				КонецЦикла;
			КонецЕсли;
			
			// подсчет итогов по таблице
			ВсегоПриходКоличество = 	ВсегоПриходКоличество 	+ ТаблицаДвижений.Итог("ПриходКоличество") + ТаблицаДвижений.Итог("ИзлишкиКоличество");
			ВсегоПриходСумма = 			ВсегоПриходСумма 		+ ТаблицаДвижений.Итог("ПриходСумма") + ТаблицаДвижений.Итог("ИзлишкиСумма");
			ВсегоВозвратКоличество = 	ВсегоВозвратКоличество 	+ ТаблицаДвижений.Итог("ВозвратКоличество");
			ВсегоВозвратСумма = 		ВсегоВозвратСумма 		+ ТаблицаДвижений.Итог("ВозвратСумма");
			ВсегоСписаниеКоличество = 	ВсегоСписаниеКоличество + ТаблицаДвижений.Итог("СписаниеКоличество");
			ВсегоСписаниеСумма = 		ВсегоСписаниеСумма 		+ ТаблицаДвижений.Итог("СписаниеСумма");
			ВсегоОтгруженоКоличество= 	ВсегоОтгруженоКоличество+ ТаблицаДвижений.Итог("ОтгруженоКоличество");
			ВсегоОтгруженоСумма = 		ВсегоОтгруженоСумма		+ ТаблицаДвижений.Итог("ОтгруженоСумма");

		КонецЦикла;

		Таб.ВывестиСекцию("Итоги");

	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

		Если (БезРеализацииПродукцииОтгруженной = 1)
		 или (БезРеализацииПродукцииОтгруженной = 3) Тогда
			Заголовок = Заголовок + РазделительСтрок + "(без учета реализации продукции отгруженной)";
			Таб.ИсходнаяТаблица("ПродукцияНаСкладах");
			ФразаИтоговойСтроки = "выпущено продукции";
			
		Иначе
			Заголовок = Заголовок + РазделительСтрок + "(по продукции отгруженной)";
			Таб.ИсходнаяТаблица("ПродукцияОтгруженная");
			ФразаИтоговойСтроки = "отгружено без перехода права собственности";
			
		КонецЕсли;
		
		ТаблицаОбъектов = глСоздатьТаблицуОбъектов();
		Если ПустоеЗначение(ВыбраннаяПродукция) = 1 Тогда
			глЗаполнитьТаблицуОперациями(ТаблицаОбъектов, "Продукция", НачДата, КонДата, 0, 1, 2);    
			
		Иначе
			глЗаполнитьТаблицуОперациями(ТаблицаОбъектов, ВыбраннаяПродукция, НачДата, КонДата, 1, 1, 2);
		КонецЕсли;
		
		// Вывод шапки, если отбор осуществляется по определенному виду номенклатуры,
		// то название этого вида номенклатуры будет указано в шапке.
		Таб.ВывестиСекцию("Шапка<");
		Если ПустоеЗначение(ВыбранныйВидНоменклатуры) = 0 Тогда
			Таб.ВывестиСекцию("Шапка-");
		КонецЕсли;
		Таб.ВывестиСекцию("Шапка>");
		
		// Переменные для посчета общего итога по регистру
		ИтогоПриходСумма    = 0;
		ИтогоСписаниеСумма  = 0;
		ИтогоОтгруженоСумма = 0;
		
		ТаблицаОбъектов.ВыбратьСтроки();
		Пока ТаблицаОбъектов.ПолучитьСтроку() = 1 Цикл
			Объект = ТаблицаОбъектов.Объект;
			
			Если ПустоеЗначение(ВыбраннаяПродукция) = 0 Тогда
				Если Объект <> ВыбраннаяПродукция Тогда
				    Продолжить;
				КонецЕсли;	
			КонецЕсли;
			
			Если Объект.Вид() <> "Номенклатура" Тогда
				Продолжить;
				
			ИначеЕсли Объект.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Продукция Тогда
				Продолжить;
			
			ИначеЕсли ПустоеЗначение(ВыбранныйВидНоменклатуры) = 0 Тогда
				Если Объект.ВидНоменклатуры <> ВыбранныйВидНоменклатуры Тогда
				    Продолжить;
				КонецЕсли;
			КонецЕсли;
			      
			ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийПоОбъекту;
			ИтогРасчета = глРассчитатьСтоимостьОбъекта(ТаблицаОбъектов,, Объект,,, НачДата, КонДата, 2);
			Если ТипЗначенияСтр(ИтогРасчета) = "Строка" Тогда // если расчет стоимости продукции не может быть выполнен
				Сообщить(ИтогРасчета, "!");
				Продолжить;
			КонецЕсли;
			      
			// Для товаров ранее отгруженных остатки на начало формирования регистра записаны в других реквизитах таблицы
			Если БезРеализацииПродукцииОтгруженной = 1 Тогда
				ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийПоОбъекту;
				ОстатокКоличество = ТаблицаОбъектов.Количество;
				ОстатокСумма      = ТаблицаОбъектов.Сумма;
				
			Иначе
				ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийДляТоваровОтруженных;
				ОстатокКоличество = ТаблицаОбъектов.КоличествоТоваровОтгруженных;
				ОстатокСумма      = ТаблицаОбъектов.СуммаТоваровОтгруженных;
			КонецЕсли;
			                                                                        
			ДатаОперации = Формат(НачДата, "Д ММММГГГГ");
			
			// Если не было движений по данной продукции, то просто покажем остатки.
			Если ТипЗначенияСтр(ТаблицаОперацийПоОбъекту) <> "ТаблицаЗначений" Тогда
				КоличествоСтрокВТаблице = 0;
			Иначе 
				КоличествоСтрокВТаблице = ТаблицаОперацийПоОбъекту.КоличествоСтрок();
			КонецЕсли;
			
			Если КоличествоСтрокВТаблице = 0 Тогда
				Если  (ОстатокКоличество <> 0) или (ОстатокСумма <> 0) Тогда
					Таб.ВывестиСекцию("Наименование");
			    	Таб.ВывестиСекцию("ОстаткиТовара");
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			Таб.ВывестиСекцию("Наименование");
			ТаблицаОперацийПоОбъекту.ВыбратьСтроки();
			Пока ТаблицаОперацийПоОбъекту.ПолучитьСтроку() = 1 Цикл
				
				ПриходКоличествоЗаМесяц    = 0;
				ПриходСуммаЗаМесяц         = 0;
				СписаниеКоличествоЗаМесяц  = 0;
				СписаниеСуммаЗаМесяц       = 0;
				ОтгруженоКоличествоЗаМесяц = 0;
				ОтгруженоСуммаЗаМесяц      = 0;
				КоличествоНаНачалоМесяца   = ОстатокКоличество;
				СуммаНаНачалоМесяца        = ОстатокСумма;
				
				ДатаОперации = Формат(ТаблицаОперацийПоОбъекту.ДатаОперации, "Д ММММГГГГ");
				Таб.ВывестиСекцию("НачалоМесяца");
				
				ТаблицаОперацийЗаДень = ТаблицаОперацийПоОбъекту.ТаблицаОперацийЗаДень;
				ТаблицаОперацийЗаДень.ВыбратьСтроки();
				Пока ТаблицаОперацийЗаДень.ПолучитьСтроку() = 1 Цикл
					
					ДатаОперации = ТаблицаОперацийЗаДень.ДатаОперации;
					КодОперации = ТаблицаОперацийЗаДень.КодОперации;
					Док = ТаблицаОперацийЗаДень.Документ;
					СтрокаДокумента = ТаблицаОперацийЗаДень.СтрокаДокумента;
					ОснованиеОперации = "";
					
					ПриходКоличество    = 0;
					ПриходСумма         = 0;
					СписаниеКоличество  = 0;
					СписаниеСумма       = 0;
					ОтгруженоКоличество = 0;
					ОтгруженоСумма      = 0;
					
					Если КодОперации = 2 Тогда // выпуск продукции
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;
						ОснованиеОперации = "Выпуск продукции";
						
					ИначеЕсли КодОперации = 3 Тогда // отгрузка продукции без перехода права собственнности (для товаров отгруженных) 
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;	
						
					ИначеЕсли КодОперации = 5 Тогда // отгрузка продукции без перехода права собственнности (для товаров на складах) 
						ОтгруженоКоличество = -ТаблицаОперацийЗаДень.Количество;
						ОтгруженоСумма      = -ТаблицаОперацийЗаДень.Сумма;	
						
					ИначеЕсли КодОперации = 6 Тогда // списание
						СписаниеКоличество = -ТаблицаОперацийЗаДень.Количество;
						СписаниеСумма      = -ТаблицаОперацийЗаДень.Сумма;
				
					ИначеЕсли КодОперации = 9 Тогда // списание
						Если ТаблицаОперацийЗаДень.Количество > 0 Тогда
							ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
							ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;
							
						Иначе
							СписаниеКоличество = ТаблицаОперацийЗаДень.Количество;
							СписаниеСумма      = ТаблицаОперацийЗаДень.Сумма;
						КонецЕсли;
						
						ОснованиеОперации = "Корректировка стоимости";
					КонецЕсли;
					
					ОстатокКоличество = ОстатокКоличество + ПриходКоличество - ОтгруженоКоличество - СписаниеКоличество;
					ОстатокСумма      = ОстатокСумма + ПриходСумма - ОтгруженоСумма - СписаниеСумма;
					
					ПриходКоличествоЗаМесяц   = ПриходКоличествоЗаМесяц + ПриходКоличество;
					ПриходСуммаЗаМесяц        = ПриходСуммаЗаМесяц + ПриходСумма;
					СписаниеКоличествоЗаМесяц = СписаниеКоличествоЗаМесяц + СписаниеКоличество;
					СписаниеСуммаЗаМесяц      = СписаниеСуммаЗаМесяц + СписаниеСумма;
					ОтгруженоКоличествоЗаМесяц= ОтгруженоКоличествоЗаМесяц + ОтгруженоКоличество;
					ОтгруженоСуммаЗаМесяц     = ОтгруженоСуммаЗаМесяц + ОтгруженоСумма;
					
					Если ПустоеЗначение(СтрокаДокумента) = 0 Тогда
						Док.ПолучитьСтрокуПоНомеру(СтрокаДокумента);
				    	Если Док.Вид() = "СписаниеМатериаловТоваровПродукции" Тогда
							ОснованиеОперации = СокрЛП(Док.НаименованиеОперации);
					
						ИначеЕсли (Док.Вид() = "ОперацииВыбытияИмущества") или (Док.Вид() = "ОперацииПриобретенияИмущества") Тогда
							ОснованиеОперации = "" + глПолноеНаименование(Док.Контрагент);
							Если ПустоеЗначение(Док.Договор) = 0 Тогда
								 ОснованиеОперации = ОснованиеОперации + ", " + Док.Договор;
							КонецЕсли;
						КонецЕсли;
						
					ИначеЕсли Док.Вид() = "РасходнаяНакладная" Тогда 
						ОснованиеОперации = "" + глПолноеНаименование(Док.Контрагент);
						Если ПустоеЗначение(Док.Договор) = 0 Тогда
							 ОснованиеОперации = ОснованиеОперации + ", " + Док.Договор;
						КонецЕсли;
					КонецЕсли;
					
					Таб.ВывестиСекцию("Строка");                      
				КонецЦикла;
			
				Цена = Окр(ТаблицаОперацийПоОбъекту.Цена, 2);
				ОстатокКоличество = ТаблицаОперацийПоОбъекту.КоличествоНаКонецДня;
				ОстатокСумма      = ТаблицаОперацийПоОбъекту.СуммаНаКонецДня;
				Итог = "Итого:";
				ИтоговаяСтрока = ФразаИтоговойСтроки + " на сумму: " + Формат(ПриходСуммаЗаМесяц, "Ч15.2") + "; стоимость единицы " + Формат(Цена, "Ч10.2") + 
				                 "; сумма списания : " + Формат(СписаниеСуммаЗаМесяц, "Ч15.2") +
								 ?(ОтгруженоСуммаЗаМесяц = 0, "", "; отгружено продукции (без перехода права собственности) на сумму: " + Формат(ОтгруженоСуммаЗаМесяц, "Ч15.2"));
									 
				Таб.ВывестиСекцию("КонецМесяца");
				
				// Подсчет общего итога по регистру.
				ИтогоПриходСумма    = ИтогоПриходСумма + ПриходСуммаЗаМесяц;
				ИтогоСписаниеСумма  = ИтогоСписаниеСумма + СписаниеСуммаЗаМесяц;
				ИтогоОтгруженоСумма = ИтогоОтгруженоСумма + ОтгруженоСуммаЗаМесяц;
			КонецЦикла;	
		КонецЦикла;

	КонецЕсли;

	ИтоговаяСтрока = "Всего " + ФразаИтоговойСтроки + " на сумму: " + Формат(ИтогоПриходСумма, "Ч15.2") + 
			         ";  всего сумма списания: " + Формат(ИтогоСписаниеСумма, "Ч15.2") +
					 ?(ИтогоОтгруженоСумма = 0, "", "; всего отгружено продукции (без перехода права собственности) на сумму: " + Формат(ИтогоОтгруженоСумма, "Ч15.2"));
					 
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрИнформацииОДвиженииГотовойПродукции", "ОкноРегистрИнформацииОДвиженииГотовойПродукции");
	Таб.Показать("Регистр информации о движении готовой продукции, учитываемой по методу средней себестоимост");

КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки) //предопределенная
	
	Если ФлагЧтенияНастройки = 1 Тогда
		Возврат
	КонецЕсли;
	НачДата = НачМесяца(РабочаяДата());
	КонДата = КонМесяца(РабочаяДата()); 
	БезРеализацииПродукцииОтгруженной = 1;
КонецПроцедуры // ПриОткрытии()