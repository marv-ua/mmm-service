//******************************************************************************
//	ПриВыбореГода()
//
//	Параметры:
//		нет
//
//	Вызывается из формул элементов диалога:
//		СпЛет и ПриОткрытии
//
//	Описание:
//		Управляет видимостью элементов диалога:
//		"ТВидыОтчета" и "ВидыОтчета"
//
Процедура ПриВыбореГода()                                  
	
	Год = СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока());
	
	Если Год < 2004 Тогда
		Форма.ТВидыОтчета.Видимость(0);
		Форма.ВидыОтчета.Видимость(0);
	Иначе                                            
		Форма.ТВидыОтчета.Видимость(1);
		Форма.ВидыОтчета.Видимость(1);
	КонецЕсли;  
	
КонецПроцедуры // ПриВыбореГода() 

//******************************************************************************************** 
// ПодобратьСотрудников()
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//  список сотрудников, по которым ведется расчет или строится отчет
//
// Описание:
//  строит запрос по сотрудникам, кроме внутренних совместителей, и
//  создает список таких сотрудников
//
Функция ПодобратьСотрудников()
	
	СписокСотров = СоздатьОбъект("СписокЗначений"); 
	
	Если СпособВыборкиСотрудников = 2 Тогда
		
		Сотрудники.Выгрузить(СписокСотров);
		
	Иначе
		
		// запрос по сотрудникам, кроме внутренних совместителей, с учетом указанного
		// обособленного подразделения
		
		ТекстЗапроса  = 
		"//{{ЗАПРОС(ПодборСотрудников)
		|Сотрудник = Справочник.Сотрудники.ТекущийЭлемент;
		|Группировка Сотрудник без групп;
		|"//}}ЗАПРОС
		;
		Запрос = СоздатьОбъект("Запрос");
		глСтатусСтрока(Контекст,"Обрабатывается справочник Сотрудники");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Сообщить("Не удалось обработать справочник Сотрудники");
			Возврат СписокСотров
		КонецЕсли;
		
		// выгрузим запрос в таблицу, а затем в список
		ВременнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
		Запрос.Выгрузить(ВременнаяТаблица,,0);
		ВременнаяТаблица.Выгрузить(СписокСотров,,,"Сотрудник");
		
	КонецЕсли;
	
	Возврат СписокСотров
	
КонецФункции // ПодобратьСотрудников()

//******************************************************************************
// ПодсчетИтоговСНачалаГода(Карточка,ИмяИтоговойОбласти,ПоследнийМесяц)
//
Процедура ЕСНПодсчетИтоговСНачалаГода(Карточка,ИмяИтоговойОбласти,ПоследнийМесяц)
		
	Если Лев(ИмяИтоговойОбласти,1) = "П" Тогда
		Раздел = Прав(ИмяИтоговойОбласти,2);
	Иначе
		НомерСимвола = Найти(ИмяИтоговойОбласти,"_СНГ");
		Если НомерСимвола > 0 Тогда
			ИмяЗаМесяц = Лев(ИмяИтоговойОбласти,НомерСимвола-1) + Сред(ИмяИтоговойОбласти,НомерСимвола+4); 
		КонецЕсли;		
	КонецЕсли;
		
	Для СчМес = 1 По ПоследнийМесяц Цикл                  
		ИтоговыйМесяцСтрокой = глДополнитьСтроку(СчМес,2);
		Если Лев(ИмяИтоговойОбласти,1) = "П" Тогда			
			ИмяСНГ	= "СНГ" + ИтоговыйМесяцСтрокой + Раздел;
		Иначе
			ИмяСНГ = ИмяИтоговойОбласти + ИтоговыйМесяцСтрокой;
		КонецЕсли;		
		Для СчМес2 = 1 По СчМес Цикл
			МесяцСтрокой = глДополнитьСтроку(СчМес2,2);                                                                                                  
			Если Лев(ИмяИтоговойОбласти,1) = "П" Тогда
				Имя		= "П" + МесяцСтрокой + Раздел;				
			Иначе
				Имя = ИмяЗаМесяц + МесяцСтрокой;
			КонецЕсли;
			Карточка.Область(ИмяСНГ).Текст = Формат(Число(Карточка.Область(ИмяСНГ).Текст) + Число(Карточка.Область(Имя).Текст),"Ч018.5.");			
			Карточка.Область(Имя).Текст = Формат(Окр(Число(Карточка.Область(Имя).Текст),2),"Ч015.2.");
		КонецЦикла;
		Карточка.Область(ИмяСНГ).Текст = Формат(Окр(Число(Карточка.Область(ИмяСНГ).Текст),2),"Ч015.2.");
	КонецЦикла;
	

КонецПроцедуры	// ПодсчетИтоговСНачалаГода

//******************************************************************************
// Сформировать()
//
// Параметры:
//		нет
//
// Вызывается из формул элементов диалога:
//		Сформировать
//
// Описание:
//  
//
Процедура Сформировать(Сотрудник = "")
	Перем МесяцыИнвалидности[12];
	
	Если Сотрудник = "" Тогда
		СписокСотров = ПодобратьСотрудников();
	Иначе   
		НомерШкалыВзносов = глНомерШкалыСтраховыхВзносовПФР(Сотрудник);
		Если НомерШкалыВзносов < 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;		
		СписокСотров = СоздатьОбъект("СписокЗначений");
		СписокСотров.ДобавитьЗначение(Сотрудник);
	КонецЕсли;
	
	Год = СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока());
	ПорядокИсчисленияЕСН = Константа.ПорядокИсчисленияЕСН.Получить(Дата("31.12."+Год));	
	
	ВидыОтчетаСтрокой = ВидыОтчета.ПолучитьЗначение(ВидыОтчета.ТекущаяСтрока());
	
	Если (ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН") или (ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаОПС") Тогда	
		ВыходнаяТаблица = СоздатьОбъект("Таблица");
		ПоследнийМесяц = 0;
		Если ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН" Тогда
			ВыходнаяТаблица.ИсходнаяТаблица("Свод2004");
		Иначе                                           
			ВыходнаяТаблица.ИсходнаяТаблица("СводОПС");
		КонецЕсли;
		Карточка=ВыходнаяТаблица.ПолучитьСекцию("ВсяТаблица");
	КонецЕсли;
	
	ВсегоСотров = СписокСотров.РазмерСписка();
	Если ВсегоСотров > 0 Тогда
		
		глСтатусСтрока(Контекст,"Подготовка данных о доходах сотрудников");										
		
		ДоходыВычетыНалогиСотрудников = "";
		ДопДанныеФизЛица = "";
		Если глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников,?(Сотрудник = "",СписокСотров,Сотрудник),КонГода(Дата(Год,12,15)),Контекст,,,,,,ДопДанныеФизЛица) <> 1 Тогда
		    Возврат
		КонецЕсли;
		
		РегрессивнаяШкала = Константа.ИспользоватьРегрессивнуюШкалу.Получить(Дата("31.12."+Год));
		
		Буфер = СоздатьОбъект("СписокЗначений");
		
		ПараметрыКоманды = СоздатьОбъект("СписокЗначений");  
		ПараметрыКоманды.ДобавитьЗначение(Год,"Год");
		
		Расшифровка = СоздатьОбъект("СписокЗначений");
		Расшифровка.ДобавитьЗначение("РасшифровкаОтчетов","Отчет");
		
		Если (ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиЕСН") или (ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиОПС") Тогда
			ВыходнаяТаблица = СоздатьОбъект("Таблица");
		КонецЕсли;
		
		Для СчСотров = 1 По СписокСотров.РазмерСписка()  Цикл
				                              						
			СтрокаИтоговойТаблицы = (СчСотров-1)*12;
			ФизЛицо = СписокСотров.ПолучитьЗначение(СчСотров);     						
			
			НомерШкалыВзносов = глНомерШкалыСтраховыхВзносовПФР(ФизЛицо);
			Если НомерШкалыВзносов < 0 Тогда
				Продолжить;
			КонецЕсли;				
			
			глСтатусСтрока(Контекст,"Выводится Индивидуальная карточка ("+Окр(СчСотров/ВсегоСотров*100)+"%): "+ФизЛицо.Наименование);
			
			Буфер.УдалитьВсе();
									
			
			// заполняем буфер и часть ячеек таблицы
			Если (ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиЕСН") или (ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН") Тогда
				Если ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН" Тогда
					глЗаполнитьИндивидуальнуюКарточкуПоЕСН2004(ФизЛицо,Год,1,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,,,,1,ДопДанныеФизЛица);
				Иначе
					Если Год = 2001 Тогда
						ВыходнаяТаблица.ИсходнаяТаблица("2001");
					ИначеЕсли Год < 2004 Тогда
						ВыходнаяТаблица.ИсходнаяТаблица("2002");
					ИначеЕсли Год >= 2004 Тогда
						ВыходнаяТаблица.ИсходнаяТаблица("2004");
					КонецЕсли;
					Карточка=ВыходнаяТаблица.ПолучитьСекцию("ВсяТаблица");
					
					//Если Год = 2001 Тогда
					//	глЗаполнитьИндивидуальнуюКарточкуПоЕСН2001(ФизЛицо,1,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Карточка,Буфер);
					//ИначеЕсли Год < 2004 Тогда
					//	глЗаполнитьИндивидуальнуюКарточкуПоЕСН2002(ФизЛицо,Год,1,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер);
					//ИначеЕсли Год >= 2004 Тогда
						глЗаполнитьИндивидуальнуюКарточкуПоЕСН2004(ФизЛицо,Год,1,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,,,,,ДопДанныеФизЛица);
					//КонецЕсли;
					
				КонецЕсли; 
			ИначеЕсли (ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиОПС") или  (ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаОПС") Тогда
				Если ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиОПС" Тогда
					ВыходнаяТаблица.ИсходнаяТаблица("ОПС");
					Карточка=ВыходнаяТаблица.ПолучитьСекцию("ВсяТаблица");
					глЗаполнитьИндивидуальнуюКарточкуПоОПС(ФизЛицо,Год,1,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,,,,,ДопДанныеФизЛица);
				Иначе
					глЗаполнитьИндивидуальнуюКарточкуПоОПС(ФизЛицо,Год,1,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,,,,1,ДопДанныеФизЛица);
				КонецЕсли;								
			КонецЕсли;	
			
			//Карточка,			
			ПараметрыКоманды.Установить("Сотрудник",ФизЛицо);
			
			// Значения, сохраненные в буфере переносим в ячейки таблицы вручную
			Для Сч = 1 По Буфер.РазмерСписка()  Цикл
				Имя="";
				Зн=Буфер.ПолучитьЗначение(Сч,Имя);				
				Если ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиЕСН" Тогда
					КодКолонки = Прав(Имя,2);
					Если (ПустаяСтрока(Имя)=0) и (Прав(Имя,3)<>"19а") и (Прав(Имя,3)<>"20а") Тогда
						Карточка.Область(Имя).Текст = ?(ТипЗначения(Зн)=1,Формат(Зн,"Ч015.2."),Зн);
						Если РегрессивнаяШкала = Да Тогда 
							Если (Число(Зн)<>0) и (Найти(Имя,"СНГ") > 0) Тогда// отбрасываен данные за месяц 
								// подготовим данные для расшифровки
								КодКолонки = Прав(Имя,2);
								Если (Лев(Имя,9) = "НБ_ФБ_СНГ") или (Лев(Имя,10) = "НБ_ОМС_СНГ") или (Лев(Имя,10) = "НБ_ФСС_СНГ") или (Лев(Имя,10) = "ОБЛ_ФБ_СНГ") или (Лев(Имя,11) = "ОБЛ_ОМС_СНГ") или (Лев(Имя,11) = "ОБЛ_ФСС_СНГ")									   		
								или (год < 2004) и ((КодКолонки = "15") или (КодКолонки = "16") или (КодКолонки = "17") или (КодКолонки = "18"))
								или (год >= 2004) и ((КодКолонки = "28") или (КодКолонки = "29") или (КодКолонки = "30") или (КодКолонки = "31")) Тогда
									
									Месяц = Прав(Имя,2); 				            
									МесяцЧислом = Число(Месяц);     
									Если (МесяцЧислом = 0) или (МесяцЧислом > 12) Тогда // расшифровываем ячейку из колонки с налогом
										Месяц = Прав(Лев(Имя,СтрДлина(Имя)-2),2);     
										МесяцЧислом = Число(Месяц);   
									КонецЕсли;
									
									СтрокаИтоговойТаблицы = ""; 
									ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(ФизЛицо) + глДополнитьСтроку(МесяцЧислом,2),СтрокаИтоговойТаблицы,1);     
									
									ОстатокОтБазыИностранца = 0;
									ИностраннаяБазаИнвалида = 0;
									
									Если СтрокаИтоговойТаблицы > 0 Тогда
										БазаФБ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2);
										БазаОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,3);
										БазаФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,4);									
										БазаСтраховая = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,23);
										Если (Имя = ("СНГ" + Месяц + 15)) и (Константа.ПорядокИсчисленияЕСН.Получить(Дата("31.12."+Год)) = 2) Тогда
											ОстатокОтБазыИностранца = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИностраннаяБаза");				
											ИностраннаяБазаИнвалида = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИностраннаяБазаИнвалида");
										КонецЕсли;									
									Иначе
										БазаФБ = 0;
										БазаОМС = 0;
										БазаФСС = 0;	
										БазаСтраховая = 0;
									КонецЕсли;								
									ПараметрыКоманды.Установить("БазаСтраховая",БазаСтраховая);
									ПараметрыКоманды.Установить("БазаФБ",БазаФБ);
									ПараметрыКоманды.Установить("БазаОМС",БазаОМС);
									ПараметрыКоманды.Установить("БазаФСС",БазаФСС);
									ПараметрыКоманды.Установить("Буфер",Буфер);   
									ПараметрыКоманды.Установить("ИмяЯчейки",Имя); 
									Если ПорядокИсчисленияЕСН  = 2 Тогда
										Если (Год < 2004) и (Имя = ("СНГ" + Месяц + 15)) или (Год >= 2004) и (Имя = ("СНГ" + Месяц + 28)) Тогда
											ПараметрыКоманды.Установить("ОстатокОтБазыИностранца",ОстатокОтБазыИностранца);				
											ПараметрыКоманды.Установить("ИностраннаяБазаИнвалида",ИностраннаяБазаИнвалида);
										КонецЕсли;
									КонецЕсли;
									Расшифровка.Установить("РасшифровкаКарточкиЕСН",ПараметрыКоманды);						
									Карточка.Область(Имя).Расшифровка(Расшифровка);		              
								КонецЕсли;					
							КонецЕсли;					
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиОПС" Тогда
					Карточка.Область(Имя).Текст = ?(ТипЗначения(Зн)=1,Формат(Зн,"Ч015.2."),Зн);					
				Иначе
					// данных колонок с своде нет
					Если Найти(Имя,"СНГ") > 0 Тогда
						//Итоги посчитаем потом
						Продолжить
					КонецЕсли;					
					Если ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаОПС" Тогда
						КодКолонки = Сред(Имя,3,2);
						Если (КодКолонки = "06") или (КодКолонки = "07") Тогда						
							Продолжить
						КонецЕсли;
						Если (Лев(Имя,4) = "П302")  Тогда
							ТекущийМесяц = Число(Прав(Имя,2));
							Если ТекущийМесяц > ПоследнийМесяц Тогда
								ПоследнийМесяц = ТекущийМесяц;
							КонецЕсли;
						КонецЕсли;
					Иначе
						КодКолонки = Прав(Имя,2);
						Если (Лев(Имя,1) = "П") и ((КодКолонки = "08") или (КодКолонки = "10") или (КодКолонки = "12") или (КодКолонки = "18") или (КодКолонки = "19")) Тогда
							Продолжить
						КонецЕсли;
						Если (Лев(Имя,1) = "П") и (Прав(Имя,2) = "02") Тогда
							ТекущийМесяц = Число(Сред(Имя,2,2));
							Если ТекущийМесяц > ПоследнийМесяц Тогда
								ПоследнийМесяц = ТекущийМесяц;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Если (Имя = "Название") или (Имя = "НаименованиеНалогоплательщика") или (Имя = "ИНН") или (Имя = "КПП") Тогда 
						Карточка.Область(Имя).Текст = ЗН;
					Иначе
						Карточка.Область(Имя).Текст = Формат(Число(Карточка.Область(Имя).Текст) + Число(Зн),"Ч018.5.");
					КонецЕсли;													
				КонецЕсли;
			КонецЦикла;
			                                                              
			Если (ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиЕСН") или (ВидыОтчетаСтрокой = "ИндивидуальныеКарточкиОПС") Тогда
				// секция полность заполнена - выводим ее в табличный документ			
				ВыходнаяТаблица.ВывестиСекцию(Карточка);
				ВыходнаяТаблица.НоваяСтраница();
			КонецЕсли;
			
		КонецЦикла;
		
		Если (ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаОПС") или (ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН") Тогда
									
			Если ПоследнийМесяц > 0 Тогда
				
				// Получение данных о средствах, возмещенных ФСС.
				Если ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН" Тогда
					ДатаРасчетаИтогов = КонецРассчитанногоПериодаБИ();
					БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
					
					Если ДатаГод(ДатаРасчетаИтогов) = Год Тогда
						КоличествоРассчитанных = ДатаМесяц(ДатаРасчетаИтогов);
						
					ИначеЕсли ДатаГод(ДатаРасчетаИтогов) > Год Тогда
						КоличествоРассчитанных = 12;
						
					Иначе
						КоличествоРассчитанных = 0;
					КонецЕсли;
					
					СНГПФСС = 0;
					ПоследнийМесяцДляГр28 = Мин(КоличествоРассчитанных, ПоследнийМесяц);
				    
					Для НомерМесяца = 1 по ПоследнийМесяцДляГр28 Цикл
						БухИт.ПериодМ(НомерМесяца, Год);
						ПолученоИзФонда = БухИт.КО("69.1",,, Перечисление.ВидыПлатежейВФонды.ПолученоИзфонда);
						МесяцСтрокой = глДополнитьСтроку(НомерМесяца,2);
						Карточка.Область("ПФСС"+МесяцСтрокой).Текст = Формат(ПолученоИзФонда,"Ч015.2.");
						
						СНГПФСС = СНГПФСС + ПолученоИзФонда;
						Карточка.Область("СНГПФСС"+МесяцСтрокой).Текст = Формат(СНГПФСС,"Ч015.2.");
					КонецЦикла;
				КонецЕсли;
					
				// подсчитаем итоги с начала года
				Состояние("Подсчет итогов с начала года");			
				Если ВидыОтчетаСтрокой = "СводнаяКарточкаУчетаЕСН" Тогда									
					ЕСНПодсчетИтоговСНачалаГода(Карточка,"ВСЕГО_СНГ",ПоследнийМесяц);
					ЕСНПодсчетИтоговСНачалаГода(Карточка,"НБ_ФБ_СНГ",ПоследнийМесяц);
					ЕСНПодсчетИтоговСНачалаГода(Карточка,"НБ_ФСС_СНГ",ПоследнийМесяц);
					ЕСНПодсчетИтоговСНачалаГода(Карточка,"НБ_ОМС_СНГ",ПоследнийМесяц);
					ЕСНПодсчетИтоговСНачалаГода(Карточка,"ОБЛ_ПФР_СНГ",ПоследнийМесяц);
					Для СчКолонок = 2 По 3 Цикл                                       						
						ЕСНПодсчетИтоговСНачалаГода(Карточка,"П"+ глДополнитьСтроку(СчКолонок,2),ПоследнийМесяц);
					КонецЦикла;
					Для СчКолонок = 5 По 6 Цикл                                       						
						ЕСНПодсчетИтоговСНачалаГода(Карточка,"П"+ глДополнитьСтроку(СчКолонок,2),ПоследнийМесяц);
					КонецЦикла;
					Для СчКолонок = 13 По 16 Цикл                                       						
						ЕСНПодсчетИтоговСНачалаГода(Карточка,"П"+ глДополнитьСтроку(СчКолонок,2),ПоследнийМесяц);
					КонецЦикла;
					Для СчКолонок = 20 По 33 Цикл
						ЕСНПодсчетИтоговСНачалаГода(Карточка,"П"+ глДополнитьСтроку(СчКолонок,2),ПоследнийМесяц);
					КонецЦикла;
					Для СчМес = 1 По 12 Цикл
						МесяцСтрокой = глДополнитьСтроку(СчМес,2);
						Карточка.Область("ВФСС"+МесяцСтрокой).Текст = Формат(Число(Карточка.Область("П"+МесяцСтрокой+"29").Текст) -Число(Карточка.Область("П"+МесяцСтрокой+"32").Текст),"Ч015.2.");
						Карточка.Область("СНГВФСС"+МесяцСтрокой).Текст = Формат(Число(Карточка.Область("СНГ"+МесяцСтрокой+"29").Текст) -Число(Карточка.Область("СНГ"+МесяцСтрокой+"32").Текст),"Ч015.2.");
					КонецЦикла;
				Иначе
					Для СчРаздел = 1 По 3 Цикл
						Для СчКолонок = 2 По 10 Цикл
							Если (СчКолонок = 6) или (СчКолонок = 7) или (СчРаздел = 2) и (СчКолонок = 3)  Тогда
								Продолжить;
							КонецЕсли;
							Для СчМес = 1 По ПоследнийМесяц Цикл
								ИмяСНГ = "СНГ" + СчРаздел + глДополнитьСтроку(СчКолонок,2) + глДополнитьСтроку(СчМес,2);								
								Для СчМес2 = 1 По СчМес Цикл
									Имя = "П"+СчРаздел+глДополнитьСтроку(СчКолонок,2)+глДополнитьСтроку(СчМес2,2);
									Карточка.Область(ИмяСНГ).Текст = Формат(Число(Карточка.Область(ИмяСНГ).Текст) + Число(Карточка.Область(Имя).Текст),"Ч018.5.");										
									Карточка.Область(Имя).Текст = Формат(Окр(Число(Карточка.Область(Имя).Текст),2),"Ч015.2.");
								КонецЦикла;								
								Карточка.Область(ИмяСНГ).Текст = Формат(Окр(Число(Карточка.Область(ИмяСНГ).Текст),2),"Ч015.2.");								
							КонецЦикла;	
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			ВыходнаяТаблица.ВывестиСекцию(Карточка);
		КонецЕсли;			
		
		ВыходнаяТаблица.Опции(0,0,0,0, "ИндивидуальныеКарточкиПоЕСН", "ИндивидуальныеКарточкиПоЕСН");
		ВыходнаяТаблица.ПараметрыСтраницы(2,,,0,0,0,0,0,0,0,1);
		ВыходнаяТаблица.ТолькоПросмотр(1);
		Если Сотрудник = "" Тогда					
			ВыходнаяТаблица.Показать(ВидыОтчетаСтрокой);
		Иначе                                                                                                          
			ВыходнаяТаблица.Показать("Индивидуальные карточки по ЕСН: " + ?(Сотрудник = "","",Сотрудник.Наименование));
		КонецЕсли;
		
		глСтатусСтрока(Контекст,"");
		
	Иначе
		
		Предупреждение("Не обнаружено ни одного сотрудника!");
		
	КонецЕсли;

КонецПроцедуры // Сформировать()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки)
	
	НачальныйГод = 2004;
	КонечныйГод = 2009;
	
	Если НачальныйГод>КонечныйГод Тогда
		СпЛет.ДобавитьЗначение(2004,"2004 г.");
		СпЛет.ТекущаяСтрока(1);
	Иначе
		Для ГодВСписок = НачальныйГод По КонечныйГод Цикл
			СпЛет.ДобавитьЗначение(ГодВСписок,Строка(ГодВСписок)+" г.");	
		КонецЦикла;	
		//в 1-м квартале будем устанавливать по умолчанию прошлый год, а дальше текущий год
		НомерМесяца = ДатаМесяц(РабочаяДата());
		Если НомерМесяца<=3 Тогда
			СпЛет.ТекущаяСтрока(СпЛет.РазмерСписка()-1);
		Иначе
			СпЛет.ТекущаяСтрока(СпЛет.РазмерСписка());
		КонецЕсли;
	КонецЕсли;
	
	ВидыОтчета.ТекущаяСтрока(1);

		
	Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда

		ВидыОтчета.ДобавитьЗначение("ИндивидуальныеКарточкиЕСН","Индивидуальные карточки по ЕСН");
		ВидыОтчета.ДобавитьЗначение("СводнаяКарточкаУчетаЕСН","Сводная карточка учета ЕСН");
		ВидыОтчета.ДобавитьЗначение("ИндивидуальныеКарточкиОПС","Индивидуальные карточки по ОПС");
		ВидыОтчета.ДобавитьЗначение("СводнаяКарточкаУчетаОПС","Сводная карточка учета ОПС");	
		
		Параметры = Форма.Параметр;
		
		// основные параметры
	    ДатаГода = Параметры.Получить("ДатаАктуальности");
	    ФизЛицо = Параметры.Получить("Сотрудник");
		ТипОтчета = Параметры.Получить("ТипОтчета");
		Если ТипОтчета = "ИндивидуальнаяКарточкаОПС" Тогда
            ВидыОтчета.ТекущаяСтрока(3);
		КонецЕсли;
		
		Год = ДатаГод(ДатаГода);
		
		СтрокаТекущегоГода = СпЛет.НайтиЗначение(Год);
		
		Если СтрокаТекущегоГода <> 0 Тогда
			СпЛет.ТекущаяСтрока(СтрокаТекущегоГода);
			Сформировать(ФизЛицо)
		Иначе
			Предупреждение("За "+Год+" год формирование Индивидуальных карточек по ЕСН не поддерживается!");	
		КонецЕсли;
		
		СтатусВозврата(0);
		
	Иначе
		
		Если Сотрудники.РазмерСписка() > 0 Тогда
			Сотрудники.ТекущаяСтрока(1);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да Тогда
		Форма.СтатикНазванияОтчета.Заголовок("Индивидуальные карточки и своды по ЕСН и ОПС");
	КонецЕсли;
	
	Если ФлагЧтенияНастройки = 0 Тогда   		
		ВидыОтчета.ДобавитьЗначение("ИндивидуальныеКарточкиЕСН","Индивидуальные карточки по ЕСН");
		ВидыОтчета.ДобавитьЗначение("СводнаяКарточкаУчетаЕСН","Сводная карточка учета ЕСН");
		
		Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да Тогда
			ВидыОтчета.ДобавитьЗначение("ИндивидуальныеКарточкиОПС","Индивидуальные карточки по ОПС");
			ВидыОтчета.ДобавитьЗначение("СводнаяКарточкаУчетаОПС","Сводная карточка учета ОПС");
		КонецЕсли;
		
		СпособВыборкиСотрудников = 1;
		
	КонецЕсли;
	
	ПриВыбореГода();	
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
//	Предопределенная процедура
//
Процедура ОбработкаПодбора(Элемент,КонтФормы)
	Если ПустоеЗначение(Элемент)=0 Тогда
		Если Элемент.ЭтоГруппа()=0 Тогда
			Если Элемент.Выбран() = 1 Тогда
				Если Сотрудники.НайтиЗначение(Элемент) = 0 Тогда
					Сотрудники.ДобавитьЗначение(Элемент);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	СпособВыборкиСотрудников = ?((Сотрудники.РазмерСписка()>0) и (СпособВыборкиСотрудников = 1),2,СпособВыборкиСотрудников);
КонецПроцедуры	// ОбработкаПодбора()

