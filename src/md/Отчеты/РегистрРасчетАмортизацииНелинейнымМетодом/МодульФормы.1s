Перем НормаАмортизацииПоГруппировке;
Перем ЗначениеГруппировкиГруппа;
Перем ЗначениеГруппировкиКоэффициент;
//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//*****************************************************************************
Процедура КорректировкаПериода()
	НачДата = НачМесяца(НачДата);
	КонДата = КонМесяца(КонДата);
КонецПроцедуры //ВводПериода

//*****************************************************************************
Процедура ВводПериода()
	ВвестиПериод(НачДата,КонДата);
	КорректировкаПериода();
КонецПроцедуры //ВводПериода 

//*****************************************************************************
Функция НормаАмортизации(Объект)
	
	Если Пустоезначение(Объект) = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	Если Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ПерваяГруппа Тогда
		НормаАмортизации = 14.3;									
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВтораяГруппа Тогда
		НормаАмортизации = 8.8;									
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ТретьяГруппа Тогда
		НормаАмортизации = 5.6;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа Тогда
		НормаАмортизации = 3.8;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ПятаяГруппа Тогда
		НормаАмортизации = 2.7;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ШестаяГруппа Тогда
		НормаАмортизации = 1.8;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.СедьмаяГруппа Тогда
		НормаАмортизации = 1.3;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа Тогда
		НормаАмортизации = 1;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа Тогда
		НормаАмортизации = 0.8;
	ИначеЕсли Объект.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа Тогда
		НормаАмортизации = 0.7;
	Иначе
		НормаАмортизации = 0;
	КонецЕсли;
	
	Возврат НормаАмортизации;
	
КонецФункции //НормаАмортизации	

//*****************************************************************************
Процедура СформироватьСтрокиПоГруппировкам(ТабОСиНМА,Таб,ТекДата,ИтогПоОбъекту, ТекАмГр, ТекСпецКоэф, ИтогСтоимость)
	Если ТабОСиНМА.КоличествоСтрок() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Если ТекДата <> ТабОСиНМА.ДатаОперации Тогда
		Если (ТабОСиНМА.НомерСтроки <> 1) Тогда
			ИтогСуммаПоГруппировке = ИтогПоОбъекту;
			ИтогПоОбъекту = 0;
			ИтогСуммастоимостиПоГруппировке = ИтогСтоимость;
			ИтогСтоимость = 0;			
			ЗначениеГруппировки = ЗначениеГруппировкиГруппа + "; " + ЗначениеГруппировкиКоэффициент;
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ИтогПоГруппировке");
			Иначе
				Таб.ВывестиСекцию("СтрокаГруппы");
			КонецЕсли;
		КонецЕсли;
		ЗначениеГруппировкиГруппа = "Амортизационная группа: " + ТабОСиНМА.АмортизационнаяГруппа; 
		ЗначениеГруппировкиКоэффициент = "   Специальный коэффициент: " + ФорматС(ТабОСиНМА.СпециальныйКоэффициент);
		Если ТабОСиНМА.НомерСтроки > 0 Тогда
			ДатаОперации = Формат(ТабОСиНМА.ДатаОперации,"Д ММММГГГГ");
			Таб.ВывестиСекцию("ГруппировкаДата");			
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ГруппировкаГруппа");
			КонецЕсли;			
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ГруппировкаКоэффициент");
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли ТекАмГр <> ТабОСиНМА.АмортизационнаяГруппа Тогда
		Если (ТабОСиНМА.НомерСтроки <> 1) Тогда
			ИтогСуммаПоГруппировке = ИтогПоОбъекту;
			ИтогПоОбъекту = 0;
			ИтогСуммастоимостиПоГруппировке = ИтогСтоимость;
			ИтогСтоимость = 0;
			ЗначениеГруппировки = ЗначениеГруппировкиГруппа + "; " + ЗначениеГруппировкиКоэффициент;
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ИтогПоГруппировке");
			Иначе
				Таб.ВывестиСекцию("СтрокаГруппы");
			КонецЕсли;
		КонецЕсли;
		ЗначениеГруппировкиГруппа = "Амортизационная группа: " + ТабОСиНМА.АмортизационнаяГруппа; 
		ЗначениеГруппировкиКоэффициент = "   Специальный коэффициент: " + ФорматС(ТабОСиНМА.СпециальныйКоэффициент);
		Если ТабОСиНМА.НомерСтроки > 0 Тогда
			ДатаОперации = Формат(ТабОСиНМА.ДатаОперации,"Д ММММГГГГ");			
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ГруппировкаГруппа");
			КонецЕсли;
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ГруппировкаКоэффициент");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТекСпецКоэф <> ТабОСиНМА.СпециальныйКоэффициент Тогда
		Если (ТабОСиНМА.НомерСтроки <> 1) Тогда
			ИтогСуммаПоГруппировке = ИтогПоОбъекту;
			ИтогПоОбъекту = 0;
			ИтогСуммастоимостиПоГруппировке = ИтогСтоимость;
			ИтогСтоимость = 0;
			ЗначениеГруппировки = ЗначениеГруппировкиГруппа + "; " + ЗначениеГруппировкиКоэффициент;
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ИтогПоГруппировке");
			Иначе
				Таб.ВывестиСекцию("СтрокаГруппы");
			КонецЕсли;
		КонецЕсли; 
		ЗначениеГруппировкиГруппа = "Амортизационная группа: " + ТабОСиНМА.АмортизационнаяГруппа; 
		ЗначениеГруппировкиКоэффициент = "   Специальный коэффициент: " + ФорматС(ТабОСиНМА.СпециальныйКоэффициент);
		Если ТабОСиНМА.НомерСтроки > 0 Тогда
			ДатаОперации = Формат(ТабОСиНМА.ДатаОперации,"Д ММММГГГГ");
			Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
				Таб.ВывестиСекцию("ГруппировкаКоэффициент");
			КонецЕсли;
			
		КонецЕсли;
		
		
	КонецЕсли;
КонецПроцедуры //СформироватьСтрокиПоГруппировкам

//******************************************************************************
//
Процедура Сформировать()
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (НачДата < '01.01.2009') или (КонДата < '01.01.2009') Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Регистр предназначен для формирования отчетных данных с 2009 года.");
		Возврат;
	КонецЕсли;
	
	Если (Константа.МетодНачисленияАмортизацииНУ.Получить(НачДата) = Перечисление.МетодыНачисленияАмортизации.Линейный)
	ИЛИ (Константа.МетодНачисленияАмортизацииНУ.Получить(КонДата) = Перечисление.МетодыНачисленияАмортизации.Линейный) Тогда
				Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Регистр формируется только за период, в котором применялся нелинейный метод начисления амортизации.");
		Возврат;
	КонецЕсли;

	
	Состояние("Заполнение выходной таблицы...");
	
	Таб = СоздатьОбъект("Таблица");
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации; 
	НазваниеАмортизационнойГруппы = ?(ПустоеЗначение(АмортизационнаяГруппа) = 1, "по всем", АмортизационнаяГруппа);
	
	Таб.ВывестиСекцию("Шапка1");
	
	Таб.ВывестиСекцию("Шапка2");
	
	ТабОСиНМА = СоздатьОбъект("ТаблицаЗначений");
	ТабОСиНМА.НоваяКолонка("ДатаОперации","Дата");
	ТабОСиНМА.НоваяКолонка("Объект","Справочник");
	ТабОСиНМА.НоваяКолонка("ИнвентарныйНомер");
	ТабОСиНМА.НоваяКолонка("МетодНачисленияАмортизации");
	ТабОСиНМА.НоваяКолонка("СпециальныйКоэффициент","Число");
	ТабОСиНМА.НоваяКолонка("НормаАмортизации","Число");
	ТабОСиНМА.НоваяКолонка("Стоимость","Число");
	ТабОСиНМА.НоваяКолонка("ПолезныйСрок","Число");
	ТабОСиНМА.НоваяКолонка("ПолныйСрок","Число");
	ТабОСиНМА.НоваяКолонка("СуммаАмортизации","Число");
	ТабОСиНМА.НоваяКолонка("АмортизационнаяГруппа");
	
	БИ = СоздатьОбъект("БухгалтерскиеИтоги");
	БИ.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства,,1,0);
	БИ.ВыполнитьЗапрос(НачДата,КонДата,"Н05.02",,,3,"Месяц","С");

	БИН0501 = СоздатьОбъект("БухгалтерскиеИтоги");
	БИН0501.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства,,1,0);
	БИН0501.ВыполнитьЗапрос(НачДата, КонДата, "Н05.01,Н05.МЦ",,,, "Месяц", "С");
        
	НачислятьАмортизацию = СоздатьОбъект("Периодический");
	
	БИ.ВыбратьСубконто(ВидыСубконто.ОсновныеСредства);
	Пока БИ.ПолучитьСубконто(ВидыСубконто.ОсновныеСредства) = 1 Цикл
		ОсновноеСредство = БИ.Субконто(ВидыСубконто.ОсновныеСредства);
		
		// фильтр по указанной в диалоге амортизационной группе (если она выбрана).
		Если (ПустоеЗначение(АмортизационнаяГруппа) = 0) и (АмортизационнаяГруппа <> ОсновноеСредство.АмортизационнаяГруппа) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если (((ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
		ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
		ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
		И ((ОсновноеСредство.Группа = Перечисление.ГруппыОС.Здания) 
		ИЛИ (ОсновноеСредство.Группа = Перечисление.ГруппыОС.Сооружения) 
		ИЛИ (ОсновноеСредство.Группа = Перечисление.ГруппыОС.ПередаточныеУстройства))) 
		ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа) Тогда
			Продолжить;
		КонецЕсли;
		
		МетодНачисленияАмортизации = ОсновноеСредство.МетодНачисленияАмортизации;
		НачислятьАмортизацию.ИспользоватьОбъект("НачислятьАмортизацию", ОсновноеСредство);
		ДатаНачисленияАмортизации = Макс(ДобавитьМесяц(ОсновноеСредство.ДатаВводаВЭксплуатацию, 1), '01.01.02');
		КоличествоМесяцевПолезногоИспользования = 0;
		
		БИН0501.ПолучитьСубконто(ВидыСубконто.ОсновныеСредства,,ОсновноеСредство);
		БИ.ВыбратьПериоды(, 2);
		Пока БИ.ПолучитьПериод() = 1 Цикл
			ТабОСиНМА.НоваяСтрока();
			ТабОСиНМА.ДатаОперации = НачМесяца(БИ.НачДата);
			ОсновноеСредство.ИспользоватьДату(БИ.КонДата,1);
			ТабОСиНМА.ИнвентарныйНомер = ОсновноеСредство.Код;
			ТабОСиНМА.Объект = ОсновноеСредство;
			ТабОСиНМА.СпециальныйКоэффициент = ОсновноеСредство.СпециальныйКоэффициент;
			ТабОСиНМА.АмортизационнаяГруппа = ОсновноеСредство.АмортизационнаяГруппа;
			ТабОСиНМА.НормаАмортизации = НормаАмортизации(ОсновноеСредство);
			Стоимость = 0;
			
			Пока ДатаНачисленияАмортизации < БИ.НачДата Цикл
				КоличествоМесяцевПолезногоИспользования = КоличествоМесяцевПолезногоИспользования + НачислятьАмортизацию.ЗначениеНаДату(ДатаНачисленияАмортизации);
				ДатаНачисленияАмортизации = КонМесяца(ДобавитьМесяц(ДатаНачисленияАмортизации, 1));
			КонецЦикла;                               
			КоличествоМесяцевДоКонцаПолезногоСрока = Макс(ОсновноеСредство.СрокПолезногоИспользованияН - КоличествоМесяцевПолезногоИспользования, 0);
			
			Если БИН0501.Субконто(ВидыСубконто.ОсновныеСредства) = ОсновноеСредство Тогда
				Если БИН0501.ПолучитьПериод(,БИ.НачДата) = 1 Тогда 
					БИН0501.ВыбратьСчета();					
					Пока БИН0501.ПолучитьСчет() = 1 Цикл
						ПервоначальнаяСтоимость = БИН0501.СНД() + БИН0501.ДО();										
						Стоимость = ПервоначальнаяСтоимость - БИ.СНК(); //остаточная
					КонецЦикла;					
				КонецЕсли;
			КонецЕсли;
			ТабОСиНМА.МетодНачисленияАмортизации = МетодНачисленияАмортизации;
			ТабОСиНМА.Стоимость = Стоимость;
			ТабОСиНМА.СуммаАмортизации = БИ.КО();

			ТабОСиНМА.ПолезныйСрок = КоличествоМесяцевДоКонцаПолезногоСрока; 
			ТабОСиНМА.ПолныйСрок = ОсновноеСредство.СрокПолезногоИспользованияН;
		КонецЦикла;
	КонецЦикла;
	
	БИ = СоздатьОбъект("БухгалтерскиеИтоги");
	БИ.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы,,1,0);
	БИ.ВыполнитьЗапрос(НачДата,КонДата,"Н05.04",,,3,"Месяц","С");

	БИН0501 = СоздатьОбъект("БухгалтерскиеИтоги");
	БИН0501.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы,,1,0);
	БИН0501.ВыполнитьЗапрос(НачДата, КонДата, "Н05.03",,,, "Месяц", "С");
        
	БИ.ВыбратьСубконто(ВидыСубконто.НематериальныеАктивы);
	Пока БИ.ПолучитьСубконто(ВидыСубконто.НематериальныеАктивы) = 1 Цикл
		НМА = БИ.Субконто(ВидыСубконто.НематериальныеАктивы);
		
		// фильтр по указанной в диалоге амортизационной группе (если она выбрана).
		Если (ПустоеЗначение(АмортизационнаяГруппа) = 0) и (АмортизационнаяГруппа <> НМА.АмортизационнаяГруппа) Тогда
		    Продолжить;
		КонецЕсли;
		
		Если (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
		ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
		ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа) 
		ИЛИ (НМА.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа) Тогда
			Продолжить;
		КонецЕсли;
					
		МетодНачисленияАмортизации = НМА.МетодНачисленияАмортизации;
		ДатаНачисленияАмортизации = Макс(ДобавитьМесяц(НМА.ДатаПринятияКУчету, 1), '01.01.02');
		КоличествоМесяцевПолезногоИспользования = 0;
		
		БИН0501.ПолучитьСубконто(ВидыСубконто.НематериальныеАктивы,,НМА);
		БИ.ВыбратьПериоды(, 2);
		Пока БИ.ПолучитьПериод() = 1 Цикл
			ТабОСиНМА.НоваяСтрока();
			ТабОСиНМА.ДатаОперации = НачМесяца(БИ.НачДата);
			НМА.ИспользоватьДату(БИ.КонДата,1);
			ТабОСиНМА.ИнвентарныйНомер = НМА.Код;
			ТабОСиНМА.Объект = НМА;
			ТабОСиНМА.СпециальныйКоэффициент = НМА.СпециальныйКоэффициент;
			ТабОСиНМА.АмортизационнаяГруппа = НМА.АмортизационнаяГруппа;
			ТабОСиНМА.НормаАмортизации = НормаАмортизации(НМА);
			Стоимость = 0;
			
			Если ДатаНачисленияАмортизации < БИ.НачДата Тогда
				Если НМА.ПорядокНачисленияАмортизации <> 1 Тогда
					СрокЭксплуатацииЛет = Макс(0, (ДатаГод(БИ.НачДата) - ДатаГод(НМА.ДатаПринятияКУчету))*12 - 1);
					КоличествоМесяцевПолезногоИспользования = СрокЭксплуатацииЛет + (ДатаМесяц(БИ.НачДата) - ДатаМесяц(НМА.ДатаПринятияКУчету));
				КонецЕсли;
			КонецЕсли;                               
			КоличествоМесяцевДоКонцаПолезногоСрока = Макс(НМА.СрокПолезногоИспользованияН - КоличествоМесяцевПолезногоИспользования, 0);
			
			Если БИН0501.Субконто(ВидыСубконто.НематериальныеАктивы) = НМА Тогда
				Если БИН0501.ПолучитьПериод(,БИ.НачДата) = 1 Тогда 
					БИН0501.ВыбратьСчета();					
					Пока БИН0501.ПолучитьСчет() = 1 Цикл
						ПервоначальнаяСтоимость = БИН0501.СНД() + БИН0501.ДО();										
						Стоимость = ПервоначальнаяСтоимость - БИ.СНК(); //остаточная
					КонецЦикла;					
				КонецЕсли;
			КонецЕсли;
			ТабОСиНМА.МетодНачисленияАмортизации = МетодНачисленияАмортизации;
			ТабОСиНМА.Стоимость = Стоимость;
			ТабОСиНМА.СуммаАмортизации = БИ.КО();

			ТабОСиНМА.ПолезныйСрок = КоличествоМесяцевДоКонцаПолезногоСрока; 
			ТабОСиНМА.ПолныйСрок = НМА.СрокПолезногоИспользованияН;
		КонецЦикла;
	КонецЦикла;
    
	СтрокаСортировки = "ДатаОперации, АмортизационнаяГруппа, СпециальныйКоэффициент";
	ТабОСиНМА.Сортировать(СтрокаСортировки);

	ИтогПоОбъекту = 0;
	ИтогСтоимость = 0;
	ТабОСиНМА.ВыбратьСтроки();
	ТекДата = Дата(0);
	ТекАмГр = "";
	ТекСпецКоэф = 0;
	Пока ТабОСиНМА.ПолучитьСтроку() = 1 Цикл
		
		СформироватьСтрокиПоГруппировкам(ТабОСиНМА,Таб,ТекДата,ИтогПоОбъекту, ТекАмГр, ТекСпецКоэф, ИтогСтоимость);
		
		НаименованиеОбъекта = ТабОСиНМА.Объект.Наименование + ", Инв. №" + ТабОСиНМА.Объект.Код;
		ДатаОперации = Формат(ТабОСиНМА.ДатаОперации,"Д ММММГГГГ");
		СпециальныйКоэффициент = ТабОСиНМА.СпециальныйКоэффициент;
		МетодНачисленияАмортизации = Сред(Строка(ТабОСиНМА.МетодНачисленияАмортизации),1,Найти(Строка(ТабОСиНМА.МетодНачисленияАмортизации),"метод")-1);
		Стоимость = ТабОСиНМА.Стоимость;
		СуммаАмортизации = ТабОСиНМА.СуммаАмортизации;
		НормаАмортизации = ТабОСиНМА.НормаАмортизации;
		НормаАмортизацииПоГруппировке = НормаАмортизации;
		ИтогПоОбъекту = ИтогПоОбъекту + СуммаАмортизации;
		ИтогСтоимость = ИтогСтоимость + Стоимость;
		ПолезныйСрок = ТабОСиНМА.ПолезныйСрок;
		ПолныйСрок = ТабОСиНМА.ПолныйСрок;
		Если РазвернутьПоОтдельнымОбъектам = 1 Тогда
			Таб.ВывестиСекцию("Строка");
		КонецЕсли;
		ТекДата = ТабОСиНМА.ДатаОперации;
		ТекАмГр = ТабОСиНМА.АмортизационнаяГруппа;
		ТекСпецКоэф = ТабОСиНМА.СпециальныйКоэффициент;
	КонецЦикла;
	ТекДата = Дата(0);
	ТекАмГр = "";
	ТекСпецКоэф = 0;
	
	СуммаАмортизацииОбщ = ТабОСиНМА.Итог("СуммаАмортизации");
	СформироватьСтрокиПоГруппировкам(ТабОСиНМА,Таб,ТекДата,ИтогПоОбъекту, ТекАмГр, ТекСпецКоэф, ИтогСтоимость);
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
   
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетАмортизацииНелинейнымМетодом", "ОкноРегистрРасчетАмортизацииНелинейнымМетодом");
	Таб.Показать("Регистр-расчет амортизации нелинейным методом");
	
КонецПроцедуры // Сформировать


//*****************************************************************************
//
// Предопределенная процедура
//
Процедура ПриОткрытии()
	НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
КонецПроцедуры //ПриОткрытии
