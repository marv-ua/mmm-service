////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - на указанную дату итоги рассчитаны
//  0 - на указанную дату итоги не рассчитаны
//
// Описание:
// Функция проверяет рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На отчетную дату итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура Сформировать()    
	                        
	Таб = СоздатьОбъект("Таблица");
	СчН13_02 = СчетПоКоду("Н13.02");
	СчН13_03 = СчетПоКоду("Н13.03");
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// подготовка реквизитов шапки
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	
	Таб.ВывестиСекцию("Шапка");
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	
	ОбщийНДС = 0;           
	ОбщаяСуммаЗадолженности = 0;
	
	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4

		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|Период с (НачГода(КонДата)) по (КонДата);
		|Обрабатывать НеПомеченныеНаУдаление;
		|ТекущийДокумент = Документ.Взаимозачет.ТекущийДокумент;
		|ВидКорректировки = Документ.Взаимозачет.ВидКорректировки;
		|СуммаНУ = Документ.Взаимозачет.СуммаНУ;
		|СуммаНДСНУ = Документ.Взаимозачет.СуммаНДСНУ;
		|Договор = Документ.Взаимозачет.Договор;
		|Условие (ВидКорректировки = 4);
		|Функция ВсегоСуммаНУ = Сумма(СуммаНУ);
		|Функция ВсегоСуммаНДСНУ = Сумма(СуммаНДСНУ);
		|Группировка Договор;
		|"//}}ЗАПРОС
		;
		// Если ошибка в запросе, то выход из процедуры
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;
	
		Пока Запрос.Группировка(1) = 1 Цикл
			ОбъектУчета = "" + глПолноеНаименование(Запрос.Договор.Владелец) + ", " + Запрос.Договор.Наименование;
			СуммаЗадолженности = Запрос.ВсегоСуммаНУ;
			НДС = Запрос.ВсегоСуммаНДСНУ;

			Таб.ВывестиСекцию("Строка");
			
		КонецЦикла;
		
		ОбщаяСуммаЗадолженности = Запрос.ВсегоСуммаНУ;
		ОбщийНДС = Запрос.ВсегоСуммаНДСНУ;
	
	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

		// Разворачиваем по договорам, и смотрим, имеется ли кредиторская задолженность по данному,
		// если имеется, то проверяем истек ли срок исковой давности.
		БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры,, 1);
		БухИт.ВыполнитьЗапрос(, КонДата, "Н13.02, Н13.03",,,,, "С");
		БухИт.ВыбратьСубконто();
		Пока БухИт.ПолучитьСубконто() = 1 Цикл
			
			// сумма кредиторской задолженности
			Если БухИт.ПолучитьСчет(, СчН13_02) = 1 Тогда
				СуммаЗадолженности = БухИт.СКК();
			Иначе
				СуммаЗадолженности = 0;
			КонецЕсли;
			       
			// сумма НДС
			Если БухИт.ПолучитьСчет(, СчН13_03) = 1 Тогда
				НДС = БухИт.СКК();    
			Иначе
				НДС = 0;
			КонецЕсли;
			
			Если (СуммаЗадолженности > 0) или (НДС > 0) Тогда
				
				Договор = БухИт.Субконто(ВидыСубконто.Договоры);  
				
				// проверяем выбран ли договор, указанна ли у него дата погашения обязательств
				Если ПустоеЗначение(Договор) = 0 Тогда
					Если ПустоеЗначение(Договор.ДатаПогашенияОбязательства) = 1 Тогда
						Предупреждение(" У договора - " + Договор + " не указана дата погашения обязательств!", 60);
						Продолжить;	
					КонецЕсли;
						
					// если истек срока исковой давности (3 года), то выводим данный договор
					Если ДобавитьМесяц(Договор.ДатаПогашенияОбязательства, 36) < КонДата Тогда
						
						ОбъектУчета = "" + глПолноеНаименование(Договор.Владелец) + ", " + Договор.Наименование;
						Таб.ВывестиСекцию("Строка");  
						
						ОбщаяСуммаЗадолженности = ОбщаяСуммаЗадолженности + СуммаЗадолженности;
						ОбщийНДС = ОбщийНДС + НДС;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
    
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьАктИнвентаризацииКредиторскойЗадолженности", "ОкноАктИнвентаризацииКредиторскойЗадолженности");
	Таб.Показать("Акт инвентаризации кредиторской задолженности");

КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии() //предопределенная
	
	КонДата = КонКвартала(РабочаяДата());
	
КонецПроцедуры // ПриОткрытии()                                                    
