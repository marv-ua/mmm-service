//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//*****************************************************************************
Процедура КорректировкаПериода()
	НачДата = НачМесяца(НачДата);
	КонДата = КонМесяца(КонДата);
КонецПроцедуры //ВводПериода

//*****************************************************************************
Процедура ВводПериода()
	ВвестиПериод(НачДата,КонДата);
	КорректировкаПериода();
КонецПроцедуры //ВводПериода

//*****************************************************************************
Процедура СформироватьСтрокиПоГруппировкам(ТабНМА,Таб,ТекОбъект,ИтогПоОбъекту)
	Если ТабНМА.КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если (ТекОбъект <> ТабНМА.Объект) и (ГруппироватьПоОбъектам = 1) Тогда
		Если (ТабНМА.НомерСтроки <> 1) Тогда
			ИтогСуммаПоГруппировке = ИтогПоОбъекту;
			ИтогПоОбъекту = 0;
			Таб.ВывестиСекцию("ИтогПоГруппировке|Общая1");
			Если ГруппироватьПоОбъектам = 0 Тогда
				Таб.ПрисоединитьСекцию("ИтогПоГруппировке|Объект");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("ИтогПоГруппировке|Общая2");
		КонецЕсли;
		Если ТабНМА.НомерСтроки > 0 Тогда
			ЗначениеГруппировки = "Наименование объекта: " + ТабНМА.Объект;
			Таб.ВывестиСекцию("Группировка|Общая1");
			Если ГруппироватьПоОбъектам = 0 Тогда
				Таб.ПрисоединитьСекцию("Группировка|Объект");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("Группировка|Общая2");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //СформироватьСтрокиПоГруппировкам
//******************************************************************************
//
Процедура Сформировать()
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	Состояние("Заполнение выходной таблицы...");
	
	Таб = СоздатьОбъект("Таблица");
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации; 
	НазваниеАмортизационнойГруппы = ?(ПустоеЗначение(АмортизационнаяГруппа) = 1, "по всем", АмортизационнаяГруппа);
	
	Таб.ВывестиСекцию("Шапка1");
	
	Таб.ВывестиСекцию("Шапка2|Общая1");
	НК = 1;
	Если ГруппироватьПоОбъектам = 0 Тогда
		НК = 2;
		Таб.ПрисоединитьСекцию("Шапка2|Объект");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка2|Общая2");
	
	ТабНМА = СоздатьОбъект("ТаблицаЗначений");
	ТабНМА.НоваяКолонка("ДатаОперации","Дата");
	ТабНМА.НоваяКолонка("ИнвентарныйНомер");
	ТабНМА.НоваяКолонка("Объект","Справочник.НематериальныеАктивы");
	ТабНМА.НоваяКолонка("МетодНачисленияАмортизации");
	ТабНМА.НоваяКолонка("СпециальныйКоэффициент","Число");
	ТабНМА.НоваяКолонка("Стоимость","Число");
	ТабНМА.НоваяКолонка("ПолезныйСрок","Число");
	ТабНМА.НоваяКолонка("СуммаАмортизации","Число"); 
	
	ДатаПереходаНаЛинейныйМетод ='01.01.2009';
	МатодНачисленияАмортизацииНУ = СоздатьОбъект("Периодический");
	МатодНачисленияАмортизацииНУ.ИспользоватьОбъект("МетодНачисленияАмортизацииНУ",);
	МатодНачисленияАмортизацииНУ.ОбратныйПорядок();
	МатодНачисленияАмортизацииНУ.ВыбратьЗначения('01.01.2009', КонДата);
	Пока МатодНачисленияАмортизацииНУ.ПолучитьЗначение() = 1 Цикл
		Если МатодНачисленияАмортизацииНУ.Значение = Перечисление.МетодыНачисленияАмортизации.Линейный Тогда
			ДатаПереходаНаЛинейныйМетод = МатодНачисленияАмортизацииНУ.ДатаЗнач;
		Иначе
			Прервать;
		КонецЕсли;											
	КонецЦикла;
	
	БИ = СоздатьОбъект("БухгалтерскиеИтоги");
	БИ.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы,,1,0);
	БИ.ВыполнитьЗапрос('01.01.02', КонДата, "Н05.04",,,, "Месяц", "С");
	
	БИН0503 = СоздатьОбъект("БухгалтерскиеИтоги");
	БИН0503.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы,,1,0);
	БИН0503.ВыполнитьЗапрос(НачДата, КонДата, "Н05.03" ,,,, "Месяц", "С");
	
	БухИтЛ = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтЛ .Актуальность(1);
	БухИтЛ.ПериодМ(ДатаПереходаНаЛинейныйМетод);
	
	СуммаАмортизацииПроизв = 0;
	СуммаАмортизацииНеПроизв = 0;
	
	БИ.ВыбратьСубконто(ВидыСубконто.НематериальныеАктивы);
	Пока БИ.ПолучитьСубконто(ВидыСубконто.НематериальныеАктивы) = 1 Цикл
		НематериальныйАктив = БИ.Субконто(ВидыСубконто.НематериальныеАктивы);
		
		// фильтр по указанной в диалоге амортизационной группе (если она выбрана).
		Если (ПустоеЗначение(АмортизационнаяГруппа) = 0) и (АмортизационнаяГруппа <> НематериальныйАктив.АмортизационнаяГруппа) Тогда
		    Продолжить;
		КонецЕсли;
		
		Состояние1 = НематериальныйАктив.Состояние.Получить(ДатаПереходаНаЛинейныйМетод); 
		Состояние2 = НематериальныйАктив.Состояние.Получить('31.12.2008'); 
		
		МетодНачисленияАмортизации = НематериальныйАктив.МетодНачисленияАмортизации;
		КоличествоМесяцевПолезногоИспользования = 0;
		ДатаНачисленияАмортизации = Макс(ДобавитьМесяц(НематериальныйАктив.ДатаПринятияКУчету, 1), '01.01.02');
		БИН0503.ПолучитьСубконто(ВидыСубконто.НематериальныеАктивы,,НематериальныйАктив);
		БИ.ВыбратьПериоды(, 2);
		Пока БИ.ПолучитьПериод() = 1 Цикл
			
			Если (БИ.НачДата >='01.01.2009') Тогда
				Если (Константа.МетодНачисленияАмортизацииНУ.Получить(БИ.НачДата) = Перечисление.МетодыНачисленияАмортизации.Нелинейный) Тогда
					
					Если (НематериальныйАктив.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
					ИЛИ (НематериальныйАктив.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
					ИЛИ (НематериальныйАктив.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа) 
					ИЛИ (НематериальныйАктив.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа) Тогда
						
					Иначе						
						Продолжить;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Пока ДатаНачисленияАмортизации < БИ.НачДата Цикл
				КоличествоМесяцевПолезногоИспользования = КоличествоМесяцевПолезногоИспользования + 1;
				ДатаНачисленияАмортизации = КонМесяца(ДобавитьМесяц(ДатаНачисленияАмортизации, 1));
			КонецЦикла;      
			
			// если было начисление амортизации, то это месяц полезного использования
			Если БИ.НачДата < НачДата Тогда
			    Продолжить;
			КонецЕсли;

			НематериальныйАктив.ИспользоватьДату(БИ.КонДата,1);
			ТабНМА.НоваяСтрока();
			ТабНМА.ДатаОперации = БИ.НачДата;
			ТабНМА.ИнвентарныйНомер = НематериальныйАктив.Код;
			ТабНМА.Объект = НематериальныйАктив;
			ТабНМА.СпециальныйКоэффициент = НематериальныйАктив.СпециальныйКоэффициент;
			ТабНМА.МетодНачисленияАмортизации = МетодНачисленияАмортизации;
			Стоимость = 0;
			Если БИН0503.Субконто(ВидыСубконто.НематериальныеАктивы) = НематериальныйАктив Тогда
				Если БИН0503.ПолучитьПериод(,БИ.НачДата) = 1 Тогда
					ПервоначальнаяСтоимость = БИН0503.СНД() + БИН0503.ДО();
					Если (БИ.НачДата >='01.01.2009') И (МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный) Тогда
						
						Если (ПустоеЗначение(Состояние1) = 1)
						ИЛИ ((ПустоеЗначение(Состояние2) = 0) И (НематериальныйАктив.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный)) Тогда 
							Стоимость = ПервоначальнаяСтоимость; // балансовая
							МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный;
						Иначе
							
							ЛинейныйБалансоваяСтоимостьНалог       = ПервоначальнаяСтоимость;   
							ЛинейныйНачисленнаяАмортизацияНалог    = БухИтЛ.СНК("Н05.04",,, НематериальныйАктив);
							Если ЛинейныйБалансоваяСтоимостьНалог <> 0 Тогда
								ЛинейныйОстаточнаяСтоимостьНалог = ЛинейныйБалансоваяСтоимостьНалог - ЛинейныйНачисленнаяАмортизацияНалог;
							КонецЕсли;
							
							Стоимость = ЛинейныйОстаточнаяСтоимостьНалог; //остаточная
							МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный;
						КонецЕсли;
					ИначеЕсли МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный Тогда
						Стоимость = ПервоначальнаяСтоимость; // балансовая
					ИначеЕсли МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
						Стоимость = ПервоначальнаяСтоимость - БИ.СНК(); //остаточная
						Если Стоимость < 0.2 * ПервоначальнаяСтоимость Тогда
							Стоимость = НематериальныйАктив.БазоваяСтоимость; //базовая
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ТабНМА.Стоимость = Стоимость;
			ТабНМА.СуммаАмортизации = БИ.КО();
			ТабНМА.ПолезныйСрок = Макс(НематериальныйАктив.СрокПолезногоИспользованияН - КоличествоМесяцевПолезногоИспользования, 0);
			Если НематериальныйАктив.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
				Если Стоимость < 0.2 * ПервоначальнаяСтоимость Тогда
					ДатаПринятияКУчету = Макс(НематериальныйАктив.ДатаПринятияКУчету, '31.12.2001');
					КоличествоПолныхМесяцев = (ДатаГод(КонМесяца(БИ.КонДата)) - ДатаГод(КонМесяца(ДатаПринятияКУчету)+1)) * 12 
					+ ДатаМесяц(КонМесяца(БИ.КонДата)) - ДатаМесяц(КонМесяца(ДатаПринятияКУчету)+1);
					ТабНМА.ПолезныйСрок = НематериальныйАктив.СрокПолезногоИспользованияН - КоличествоПолныхМесяцев;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
    
	СтрокаСортировки = "";
	Если ГруппироватьПоОбъектам = 1 Тогда
		СтрокаСортировки = "ИнвентарныйНомер";
	КонецЕсли;
    СтрокаСортировки = СтрокаСортировки  + ?(ПустаяСтрока(СтрокаСортировки) = 0, ",","") + "ДатаОперации";
	ТабНМА.Сортировать(СтрокаСортировки);

	ИтогПоОбъекту = 0;
	ИтогПоНазначению = 0;
	ТабНМА.ВыбратьСтроки();
	ТекОбъект = "";
	Пока ТабНМА.ПолучитьСтроку() = 1 Цикл
		
		СформироватьСтрокиПоГруппировкам(ТабНМА,Таб,ТекОбъект,ИтогПоОбъекту);
		НаименованиеОбъекта = ТабНМА.Объект.Наименование + ", Инв. №" + ТабНМА.Объект.Код;
		ДатаОперации = Формат(ТабНМА.ДатаОперации,"Д ММММГГГГ");
		СпециальныйКоэффициент = ТабНМА.СпециальныйКоэффициент;
		МетодНачисленияАмортизации = Сред(Строка(ТабНМА.МетодНачисленияАмортизации),1,Найти(Строка(ТабНМА.МетодНачисленияАмортизации),"метод")-1);
		Стоимость = ТабНМА.Стоимость;
		СуммаАмортизации = ТабНМА.СуммаАмортизации;
		ИтогПоОбъекту = ИтогПоОбъекту + СуммаАмортизации;
		ИтогПоНазначению = ИтогПоНазначению + СуммаАмортизации;
		ПолезныйСрок = ТабНМА.ПолезныйСрок;
		Таб.ВывестиСекцию("Строка|Общая1");
		Если ГруппироватьПоОбъектам = 0 Тогда
			Таб.ПрисоединитьСекцию("Строка|Объект");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Общая2");
		ТекОбъект = ТабНМА.Объект;
	КонецЦикла;
	ТекОбъект = 0;
	СформироватьСтрокиПоГруппировкам(ТабНМА,Таб,ТекОбъект,ИтогПоОбъекту);
	Таб.Область(Таб.ВысотаТаблицы(),2,Таб.ВысотаТаблицы(), 8 - ГруппироватьПоОбъектам).РамкаСнизу(3);	
	ИтогСуммаАмортизации = ТабНМА.Итог("СуммаАмортизации");
	Таб.ВывестиСекцию("Подвал1|Общая1");
	Если ГруппироватьПоОбъектам = 0 Тогда
		Таб.ПрисоединитьСекцию("Подвал1|Объект");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Подвал1|Общая2");
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал2");
   
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетАмортизацииНМА", "ОкноРегистрРасчетАмортизацииНМА");
	Таб.Показать("Регистр-расчет амортизации нематериальных активов");
	
КонецПроцедуры // Сформировать


//*****************************************************************************
//
// Предопределенная процедура
//
Процедура ПриОткрытии() 
	НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
КонецПроцедуры //ПриОткрытии