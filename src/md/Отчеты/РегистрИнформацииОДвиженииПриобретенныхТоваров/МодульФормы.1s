Перем ДатаНачалаНалоговогоПериода2003;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПриВыбореПериодаОтчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореПериодаОтчета()
	
	НачДата = НачМесяца(НачДата);
	КонДата = КонМесяца(КонДата);
	
	Если (Константа.РаздельныйУчетТоваровОптРозница.Получить(КонДата) = Да)
	   и (глНовыеПравилаВеденияНУ(КонДата) = 1) Тогда
	    Форма.Розница.Видимость(1);
		
	Иначе
		Форма.Розница.Видимость(0);
		Если БезРеализацииТоваровОтгруженных = 2 Тогда
		    БезРеализацииТоваровОтгруженных = 1;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореПериодаОтчета()
//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если (НачДата > КонДата) Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.", 60);
		Возврат 0;

	ИначеЕсли ПустоеЗначение(ДатаНачалаНалоговогоПериода2003) = 0 Тогда
		
		Если ((НачДата < ДатаНачалаНалоговогоПериода2003)
		   и  (КонДата >= ДатаНачалаНалоговогоПериода2003)) Тогда
			Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
			               "В выбранном интервале налоговый учет велся по"+РазделительСтрок+
						   "разным правилам."+РазделительСтрок+
						   "Отчет за данный период сформировать невозможно!", 60);
			Возврат 0;
		    
		КонецЕсли;

	КонецЕсли;

	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".", 60);
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура Сформировать()    
	
	ДатаНачалаНалоговогоПериода2003 = ПолучитьПустоеЗначение("Дата");
	глНовыеПравилаВеденияНУ(КонДата, ДатаНачалаНалоговогоПериода2003);

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// подготовка "Шапки"
	Таб = СоздатьОбъект("Таблица"); 
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
	СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	                                                                           
	Заголовок = "Регистр информации о движении приобретенных товаров, учитываемых по методу средней себестоимости";
		
	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4
		СпособРасчетаСебестоимости = глСпособРасчетаСебестоимостиНоменклатуры(КонДата);
		ВыбранныйОбъект = ВыбранныйТовар;
		
		Если БезРеализацииТоваровОтгруженных = 1 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(по товарам на складе)";
			Если Константа.РаздельныйУчетТоваровОптРозница.Получить(КонДата) = Да Тогда
				Таб.ИсходнаяТаблица("Опт");
			Иначе
				Таб.ИсходнаяТаблица("ТоварыНаСкладах2003");
			КонецЕсли;
			
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.02.1");
			
		ИначеЕсли БезРеализацииТоваровОтгруженных = 3 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(по товарам отгруженным)";
			Таб.ИсходнаяТаблица("ТоварыОтгруженные2003");
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.04.1");
			
		ИначеЕсли БезРеализацииТоваровОтгруженных = 2 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(по товарам в розничной торговле)";
			Таб.ИсходнаяТаблица("Розница");
			СчетУчетаНоменклатуры = СчетПоКоду("Н02.02.2");
		КонецЕсли;
		
		// таблица значений для обобщения результов расчета
        ТаблицаНоменклатуры = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаНоменклатуры.НоваяКолонка("Номенклатура", "Справочник");
		ТаблицаНоменклатуры.НоваяКолонка("НачСальдоКол", "Число", 15, 3);
		ТаблицаНоменклатуры.НоваяКолонка("НачСальдо",    "Число", 15, 2);
		ТаблицаНоменклатуры.НоваяКолонка("РасшифровкаДвижений", "ТаблицаЗначений");
		
		ДатаВМесяце = НачМесяца(НачДата);
		    
		Пока НачМесяца(ДатаВМесяце) <= НачМесяца(КонДата) Цикл

			НачДатаРасчета = Макс(НачДата, НачМесяца(ДатаВМесяце));
			КонДатаРасчета = Мин(КонДата, КонМесяца(ДатаВМесяце));
			
			Если СпособРасчетаСебестоимости <> "по средней" Тогда
				// подготовка итогов для расчета средневзешенной цены за месяц
				ИтогиДляРасчета = СоздатьОбъект("БухгалтерскиеИтоги");
				ИтогиДляРасчета.ПериодМ(ДатаВМесяце);
			КонецЕсли;
	
			БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
			БухИт.ИспользоватьПланСчетов(ОсновнойПланСчетов());
			Если ВыбранныйОбъект.Выбран() = 1 Тогда
				БухИт.ИспользоватьСубконто(СчетУчетаНоменклатуры.ВидСубконто(1), ВыбранныйОбъект, 1);
				
			Иначе
				БухИт.ИспользоватьСубконто(СчетУчетаНоменклатуры.ВидСубконто(1), , 1);
			КонецЕсли;
			БухИт.ВыполнитьЗапрос(НачДатаРасчета, КонДатаРасчета, СчетУчетаНоменклатуры,,, 1, "Проводка", "СК");
	
			БухИт.ВыбратьСубконто(1);
			Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
                
				Стр = "";
				Если ТаблицаНоменклатуры.НайтиЗначение(БухИт.Субконто(1), Стр, "Номенклатура") = 1 Тогда
                    // По этой номенклатурной позиции уже были движения
					ТаблицаДвижений = ТаблицаНоменклатуры.ПолучитьЗначение(Стр, "РасшифровкаДвижений");
					
				Иначе
					// Создаем новый элемент таблицы
					ТаблицаНоменклатуры.НоваяСтрока();
                    Стр = ТаблицаНоменклатуры.НомерСтроки;
					
					ТаблицаДвижений = СоздатьОбъект("ТаблицаЗначений");
					ТаблицаДвижений.НоваяКолонка("ДатаОперации","Дата");
					ТаблицаДвижений.НоваяКолонка("ТекДок");
					ТаблицаДвижений.НоваяКолонка("ОснованиеОперации");
					ТаблицаДвижений.НоваяКолонка("ПриходКоличество",   "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ПриходСумма",		   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("ВозвратКоличество",  "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ВозвратСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("ОтгруженоКоличество","Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ОтгруженоСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("СписаниеКоличество", "Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("СписаниеСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("СписаниеЦена",	   "Число", 15, 2);
					
					ТаблицаДвижений.НоваяКолонка("ПоступлениеОптРозницаКоличество","Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ПоступлениеОптРозницаСумма",	   "Число", 15, 2);
					ТаблицаДвижений.НоваяКолонка("ПередачаОптРозницаКоличество","Число", 15, 3);
					ТаблицаДвижений.НоваяКолонка("ПередачаОптРозницаСумма",	    "Число", 15, 2);
					
					ТаблицаНоменклатуры.Номенклатура = БухИт.Субконто(1);
					ТаблицаНоменклатуры.НачСальдоКол = БухИт.СНД("К");
					ТаблицаНоменклатуры.НачСальдо	 = БухИт.СНД("С");

				КонецЕсли;

				Если СпособРасчетаСебестоимости <> "по средней" Тогда
					
					// Для алгоритма расчета себестоимости по средневзвешенной
					ВозвратНаСкладЗаМесКол = -ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
					ВозвратНаСкладЗаМесСум = -ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
					СписаноЗаМесКол = ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1)) + ВозвратНаСкладЗаМесКол;
					СписаноЗаМесСум = ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1)) + ВозвратНаСкладЗаМесСум;
					                                              
					// Необходимо учесть, что возврат товаров отгруженных без перехода
					// права собственности, но еще не релизованных, корректируется
					// в конце месяца.
					ВозвратТоваровОтгруженныхЗаМесКол = 0;
					ВозвратТоваровОтгруженныхЗаМесСум = 0;
					ПеремещениеОптРозницаЗаМесКол     = 0;
					ПеремещениеОптРозницаЗаМесСум     = 0;
					Если БезРеализацииТоваровОтгруженных = 1 Тогда // регстр формируется по товарам на складах
						БухИт.ВыбратьПериоды(,);    
						Пока БухИт.ПолучитьПериод() = 1 Цикл
							Если БухИт.Операция.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							    Если Найти(БухИт.Операция.Дебет.Счет.Код, "Н02.04") <> 0 Тогда
									ВозвратТоваровОтгруженныхЗаМесКол = ВозвратТоваровОтгруженныхЗаМесКол + (-БухИт.КО("К"));
									ВозвратТоваровОтгруженныхЗаМесСум = ВозвратТоваровОтгруженныхЗаМесСум + (-БухИт.КО("С"));
								КонецЕсли;
							
							// Перемещение товаров из опта в розницу учитываются отдельно от общей суммы списания
							ИначеЕсли БухИт.Операция.Дебет.Счет.Код = "Н02.02.2" Тогда
								СписаноЗаМесКол = СписаноЗаМесКол - БухИт.КО("К");
								СписаноЗаМесСум = СписаноЗаМесСум - БухИт.КО("С");
								
							ИначеЕсли БухИт.Операция.Кредит.Счет.Код = "Н02.02.2" Тогда // перемещение из розницы в опт
								ПеремещениеОптРозницаЗаМесКол = ПеремещениеОптРозницаЗаМесКол + БухИт.ДО("К");
								ПеремещениеОптРозницаЗаМесСум = ПеремещениеОптРозницаЗаМесСум + БухИт.ДО("С");
							КонецЕсли;
						КонецЦикла;
						
					ИначеЕсли БезРеализацииТоваровОтгруженных = 3 Тогда // регстр формируется по товарам отгруженным без перехода права собственности
						ВозвратТоваровОтгруженныхЗаМесКол = -ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
						ВозвратТоваровОтгруженныхЗаМесСум = -ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1), Перечисление.УсловияПоступленияИВыбытия.Возврат);
						ПриходЗаМесКол  = ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1));
						ПриходЗаМесСум  = ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1));
						ПриходЗаМесКол  = ПриходЗаМесКол + ВозвратТоваровОтгруженныхЗаМесКол;
						ПриходЗаМесСум  = ПриходЗаМесСум + ВозвратТоваровОтгруженныхЗаМесСум;
						
					Иначе // реестр формируется по товарам в рознице
						
						// Перемещение товаров из розницы в опт учитываются отдельно от общей суммы списания
						ПеремещениеОптРозницаЗаМесКол = 0;
						ПеремещениеОптРозницаЗаМесСум = 0;
						БухИт.ВыбратьПериоды(, 2);    
						Пока БухИт.ПолучитьПериод() = 1 Цикл             
							Если БухИт.Операция.Дебет.Счет.Код = "Н02.02.1" Тогда
								ПеремещениеОптРозницаЗаМесКол = ПеремещениеОптРозницаЗаМесКол + БухИт.КО("К");
								ПеремещениеОптРозницаЗаМесСум = ПеремещениеОптРозницаЗаМесСум + БухИт.КО("С");
							КонецЕсли;
						КонецЦикла;
						СписаноЗаМесКол = СписаноЗаМесКол - ПеремещениеОптРозницаЗаМесКол;
						СписаноЗаМесСум = СписаноЗаМесСум - ПеремещениеОптРозницаЗаМесСум;
					КонецЕсли;

					ПриходПоРасчетуКол = 0;
					ПриходПоРасчету = 0;
					СписаноПоРасчетуКол = 0;
					СписаноПоРасчету = 0;
					ВозвратПоРасчетуКол = 0;
					ВозвратПоРасчету = 0;
				КонецЕсли;

				БухИт.ВыбратьПериоды();
				Пока БухИт.ПолучитьПериод() = 1 Цикл
	
					ТаблицаДвижений.НоваяСтрока();
					
					// Определение даты операции
					Опер = БухИт.Операция;
					ТаблицаДвижений.ДатаОперации = Опер.ДатаОперации;
					ТаблицаДвижений.ТекДок = Опер.Документ.ТекущийДокумент();
					
					// Определение сумм и количества
					Если БухИт.ВыбранаПоДт() = 1 Тогда
						// поступление или отгрузка без перехода права собственности
						
						ОснОпер = Опер.Дебет.Основание;
						
						Если БезРеализацииТоваровОтгруженных = 1 Тогда // товары на складе 
							
							Если Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   	// возврат ТМЦ поставщику
								ТаблицаДвижений.ВозвратКоличество = -БухИт.ДО("К");
								ТаблицаДвижений.ВозвратСумма      = -БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ВозвратКоличество <> 0, ТаблицаДвижений.ВозвратСумма/ТаблицаДвижений.ВозвратКоличество,0), 2);
								
							ИначеЕсли Опер.Кредит.Счет.Код = "Н02.02.2" Тогда // перемещение из розницы в опт
								ТаблицаДвижений.ПоступлениеОптРозницаКоличество = БухИт.ДО("К");
								
								Если СпособРасчетаСебестоимости = "по средней" Тогда
									ТаблицаДвижений.ПоступлениеОптРозницаСумма      = БухИт.ДО("С");
									
								Иначе
									Если БухИт.ДО("К") = 0 Тогда // это корректировка
										ТаблицаДвижений.УдалитьСтроку();
									    Продолжить;
									КонецЕсли;
									
									ВозвратПоРасчетуКол = ВозвратПоРасчетуКол + ТаблицаДвижений.ПоступлениеОптРозницаКоличество;
									Если ВозвратПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ПоступлениеОптРозницаСумма = Окр(ВозвратПоРасчетуКол * ПеремещениеОптРозницаЗаМесСум/ПеремещениеОптРозницаЗаМесКол, 2) - ВозвратПоРасчету;
									КонецЕсли;
									ВозвратПоРасчету = ВозвратПоРасчету + ТаблицаДвижений.ПоступлениеОптРозницаСумма;
								КонецЕсли;
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПоступлениеОптРозницаКоличество <> 0, ТаблицаДвижений.ПоступлениеОптРозницаСумма/ТаблицаДвижений.ПоступлениеОптРозницаКоличество,0), 2);
								
							Иначе // поступление ТМЦ
								ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
								ТаблицаДвижений.ПриходСумма 	 = БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПриходКоличество <> 0, ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество,0), 2);
							КонецЕсли;
							
						ИначеЕсли БезРеализацииТоваровОтгруженных = 3 Тогда // товары отгруженные
							
							Если Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   	// возврат ТМЦ на склад
								ТаблицаДвижений.ВозвратКоличество = -БухИт.ДО("К");
								
								Если СпособРасчетаСебестоимости = "по средней" Тогда
									ТаблицаДвижений.ВозвратСумма = -БухИт.ДО("С");
									
								Иначе
									Если БухИт.ДО("К") = 0 Тогда // это корректировка
										ТаблицаДвижений.УдалитьСтроку();
									    Продолжить;
									КонецЕсли;
									
									ВозвратПоРасчетуКол = ВозвратПоРасчетуКол + ТаблицаДвижений.ВозвратКоличество;
									Если ВозвратПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ВозвратСумма = Окр(ВозвратПоРасчетуКол * ВозвратТоваровОтгруженныхЗаМесСум/ВозвратТоваровОтгруженныхЗаМесКол, 2) - ВозвратПоРасчету;
									КонецЕсли;
									ВозвратПоРасчету = ВозвратПоРасчету + ТаблицаДвижений.ВозвратСумма;
								КонецЕсли;
								ТаблицаДвижений.СписаниеЦена = 		Окр(?(ТаблицаДвижений.ВозвратКоличество <> 0, ТаблицаДвижений.ВозвратСумма/ТаблицаДвижений.ВозвратКоличество,0), 2);
								
							Иначе // поступление ТМЦ
								
								Если СпособРасчетаСебестоимости = "по средней" Тогда
									ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
									ТаблицаДвижений.ПриходСумма 	 = БухИт.ДО("С");
									ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПриходКоличество <> 0, ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество,0), 2);
									
								Иначе // расчет по средневзвешенной
									Если БухИт.ДО("К") = 0 Тогда // это корректировка
										ТаблицаДвижений.УдалитьСтроку();
									    Продолжить;
									КонецЕсли;
									
									ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
									ПриходПоРасчетуКол = ПриходПоРасчетуКол + ТаблицаДвижений.ПриходКоличество;
									Если ПриходПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ПриходСумма = Окр(ПриходПоРасчетуКол * ПриходЗаМесСум/ПриходЗаМесКол, 2) - ПриходПоРасчету;
									КонецЕсли;
									ПриходПоРасчету = ПриходПоРасчету + ТаблицаДвижений.ПриходСумма;
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество, 2);
								КонецЕсли;
							КонецЕсли;
							
						ИначеЕсли БезРеализацииТоваровОтгруженных = 2 Тогда // товары в рознице
							
							Если Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   	// возврат ТМЦ поставщику
								ТаблицаДвижений.ВозвратКоличество = БухИт.ДО("К");
								ТаблицаДвижений.ВозвратСумма      = БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ВозвратКоличество <> 0, ТаблицаДвижений.ВозвратСумма/ТаблицаДвижений.ВозвратКоличество,0), 2);
								
							ИначеЕсли Опер.Кредит.Счет.Код = "Н02.02.1" Тогда // перемещение из опта
								ТаблицаДвижений.ПоступлениеОптРозницаКоличество = БухИт.ДО("К");
								ТаблицаДвижений.ПоступлениеОптРозницаСумма      = БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПоступлениеОптРозницаКоличество <> 0, ТаблицаДвижений.ПоступлениеОптРозницаСумма/ТаблицаДвижений.ПоступлениеОптРозницаКоличество,0), 2);
								
							Иначе // поступление ТМЦ
								ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
								ТаблицаДвижений.ПриходСумма 	 = БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПриходКоличество <> 0, ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество,0), 2);
							КонецЕсли;
						КонецЕсли;
					
					Иначе // выбытие
						
						ОснОпер = Опер.Кредит.Основание;

						Если СпособРасчетаСебестоимости = "по средней" Тогда
							// расчет себестоимости ведется по "средней цене"
							
							// Если отгрузка или возврат отгруженных товаров
							Если (Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ОтгрузкаБезПереходаПраваСобственности)
						     или ((Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат)
							    и (Найти(БухИт.Операция.Дебет.Счет.Код, "Н02.04") <> 0)) Тогда
								ТаблицаДвижений.ОтгруженоКоличество = БухИт.КО("К");
								ТаблицаДвижений.ОтгруженоСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена = Окр(?(ТаблицаДвижений.ОтгруженоКоличество <> 0, ТаблицаДвижений.ОтгруженоСумма/ТаблицаДвижений.ОтгруженоКоличество, 0), 2);
								
							ИначеЕсли (БезРеализацииТоваровОтгруженных = 1)
							        и (БухИт.Операция.Дебет.Счет.Код = "Н02.02.2") Тогда // перемещение из опта в розницу
								ТаблицаДвижений.ПередачаОптРозницаКоличество = БухИт.КО("К");
								ТаблицаДвижений.ПередачаОптРозницаСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПередачаОптРозницаКоличество<> 0, ТаблицаДвижений.ПередачаОптРозницаСумма/ТаблицаДвижений.ПередачаОптРозницаКоличество,0), 2);
								
							ИначеЕсли (БезРеализацииТоваровОтгруженных = 2)
							        и (БухИт.Операция.Дебет.Счет.Код = "Н02.02.1") Тогда // перемещение из розницы в опт
								ТаблицаДвижений.ПередачаОптРозницаКоличество = БухИт.КО("К");
								ТаблицаДвижений.ПередачаОптРозницаСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПередачаОптРозницаКоличество <> 0, ТаблицаДвижений.ПередачаОптРозницаСумма/ТаблицаДвижений.ПередачаОптРозницаКоличество,0), 2);
								
							Иначе
								ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
								ТаблицаДвижений.СписаниеСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена = Окр(?(ТаблицаДвижений.СписаниеКоличество <> 0, ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 0), 2);
							КонецЕсли;
							
						Иначе // расчет себестоимости ведется по "средневзвешенной цене" за месяц
							Если БухИт.КО("К") = 0 Тогда // это корректировка
								ТаблицаДвижений.УдалитьСтроку();
							    Продолжить;
							КонецЕсли;
							
							Если Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
							   Если Найти(БухИт.Операция.Дебет.Счет.Код, "Н02.04") <> 0 Тогда // возврат товаров отгруженных
									ТаблицаДвижений.ОтгруженоКоличество = БухИт.КО("К");    
									ВозвратПоРасчетуКол = ВозвратПоРасчетуКол + (-ТаблицаДвижений.ОтгруженоКоличество);
									Если ВозвратПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.ОтгруженоСумма = -(Окр(ВозвратПоРасчетуКол * ВозвратТоваровОтгруженныхЗаМесСум/ВозвратТоваровОтгруженныхЗаМесКол, 2) - ВозвратПоРасчету);
									КонецЕсли;
									ВозвратПоРасчету = ВозвратПоРасчету + (-ТаблицаДвижений.ОтгруженоСумма);
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ОтгруженоСумма/ТаблицаДвижений.ОтгруженоКоличество, 2);
									
								Иначе
									ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
									ТаблицаДвижений.СписаниеСумма      = БухИт.КО("С");
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 2);
								КонецЕсли;
							
							ИначеЕсли Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.ОтгрузкаБезПереходаПраваСобственности Тогда
								ТаблицаДвижений.ОтгруженоКоличество = БухИт.КО("К");
								СписаноПоРасчетуКол = СписаноПоРасчетуКол + ТаблицаДвижений.ОтгруженоКоличество;
								Если СписаноПоРасчетуКол <> 0 Тогда
									ТаблицаДвижений.ОтгруженоСумма = Окр(СписаноПоРасчетуКол * СписаноЗаМесСум/СписаноЗаМесКол, 2) - СписаноПоРасчету;
								КонецЕсли;
								СписаноПоРасчету = СписаноПоРасчету + ТаблицаДвижений.ОтгруженоСумма;
								ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.ОтгруженоСумма/ТаблицаДвижений.ОтгруженоКоличество, 2);
								 
							ИначеЕсли (БезРеализацииТоваровОтгруженных = 1)
							        и (БухИт.Операция.Дебет.Счет.Код = "Н02.02.2") Тогда // перемещение из опта в розницу
								ТаблицаДвижений.ПередачаОптРозницаКоличество = БухИт.КО("К");
								ТаблицаДвижений.ПередачаОптРозницаСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПередачаОптРозницаКоличество<> 0, ТаблицаДвижений.ПередачаОптРозницаСумма/ТаблицаДвижений.ПередачаОптРозницаКоличество,0), 2);
								
							ИначеЕсли (БезРеализацииТоваровОтгруженных = 2)
							        и (БухИт.Операция.Дебет.Счет.Код = "Н02.02.1") Тогда // перемещение из розницы в опт
								Если БухИт.КО("К") = 0 Тогда // это корректировка
									ТаблицаДвижений.УдалитьСтроку();
								    Продолжить;
								КонецЕсли;
								
								ТаблицаДвижений.ПередачаОптРозницаКоличество = БухИт.КО("К");
								ВозвратПоРасчетуКол = ВозвратПоРасчетуКол + ТаблицаДвижений.ПередачаОптРозницаКоличество;
								Если ВозвратПоРасчетуКол <> 0 Тогда
									ТаблицаДвижений.ПередачаОптРозницаСумма = Окр(ВозвратПоРасчетуКол * ПеремещениеОптРозницаЗаМесСум/ПеремещениеОптРозницаЗаМесКол, 2) - ВозвратПоРасчету;
								КонецЕсли;
								ВозвратПоРасчету = ВозвратПоРасчету + ТаблицаДвижений.ПередачаОптРозницаСумма;
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПередачаОптРозницаКоличество <> 0, ТаблицаДвижений.ПередачаОптРозницаСумма/ТаблицаДвижений.ПередачаОптРозницаКоличество,0), 2);
								
							Иначе // списание
								ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
								СписаноПоРасчетуКол = СписаноПоРасчетуКол + ТаблицаДвижений.СписаниеКоличество;
								Если СписаноПоРасчетуКол <> 0 Тогда
									ТаблицаДвижений.СписаниеСумма = Окр(СписаноПоРасчетуКол * СписаноЗаМесСум/СписаноЗаМесКол, 2) - СписаноПоРасчету;
								КонецЕсли;
								СписаноПоРасчету = СписаноПоРасчету + ТаблицаДвижений.СписаниеСумма;
								ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 2);
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
	
					// определяем основание списания 
					Если ПустоеЗначение(ОснОпер) = 0 Тогда
						ТаблицаДвижений.ОснованиеОперации = "" + глПолноеНаименование(ОснОпер.Владелец);
						ТаблицаДвижений.ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации + ", " + ОснОпер;
						ТаблицаДвижений.ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации + " на основании: " + СокрЛП(Опер.ПервичныйДокумент);
				
					Иначе
						ТаблицаДвижений.ОснованиеОперации = "" + СокрЛП(Опер.СодержаниеПроводки) + " на основании: " + СокрЛП(Опер.ПервичныйДокумент);
						
					КонецЕсли;
					
				КонецЦикла;
				
				ТаблицаНоменклатуры.УстановитьЗначение(Стр, "РасшифровкаДвижений", ТаблицаДвижений);

			КонецЦикла;

			// переходим к следующему месяцу в периоде формирования отчета
			ДатаВМесяце = ДобавитьМесяц(ДатаВМесяце, 1);
			
		КонецЦикла;

		ТаблицаНоменклатуры.Сортировать("Номенклатура");
		
		// печать таблицы
		Таб.ВывестиСекцию("Шапка");

		ВсегоПриходКоличество = 	0;
		ВсегоПриходСумма = 			0;
		ВсегоВозвратКоличество = 	0;
		ВсегоВозвратСумма = 		0;
		ВсегоСписаниеКоличество = 	0;
		ВсегоСписаниеСумма = 		0;
		ВсегоОтгруженоКоличество= 	0;
		ВсегоОтгруженоСумма = 		0;
		ВсегоПоступлениеОптРозницаКоличество = 0;
		ВсегоПоступлениеОптРозницаСумма      = 0;
		ВсегоПередачаОптРозницаКоличество = 0;
		ВсегоПередачаОптРозницаСумма      = 0;

		ТаблицаНоменклатуры.ВыбратьСтроки();

		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			ИтоговаяСтрока = "По товару: """ + ТаблицаНоменклатуры.Номенклатура + """   Сальдо на начало периода (кол): " +
							 Формат(ТаблицаНоменклатуры.НачСальдоКол, "Ч10.2") + "; Сальдо на начало периода (сумма): " + Формат(ТаблицаНоменклатуры.НачСальдо, "Ч10.2");
	
			Таб.ВывестиСекцию("Номенклатура");

			ТаблицаДвижений = ТаблицаНоменклатуры.РасшифровкаДвижений;
			
			ОстатокКоличество = ТаблицаНоменклатуры.НачСальдоКол;
			ОстатокСумма 	  = ТаблицаНоменклатуры.НачСальдо;

			Если ТаблицаДвижений.КоличествоСтрок() <> 0 Тогда
				ТаблицаДвижений.ВыбратьСтроки();
				Пока ТаблицаДвижений.ПолучитьСтроку() = 1 Цикл
				    ДатаОперации =      ТаблицаДвижений.ДатаОперации;
					ТекДок = 			ТаблицаДвижений.ТекДок;
					ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации;
					ПриходКоличество =  ТаблицаДвижений.ПриходКоличество;
					ПриходСумма =       ТаблицаДвижений.ПриходСумма;
					ВозвратКоличество = ТаблицаДвижений.ВозвратКоличество;
					ВозвратСумма =      ТаблицаДвижений.ВозвратСумма;
					СписаниеКоличество =ТаблицаДвижений.СписаниеКоличество;
					СписаниеСумма =     ТаблицаДвижений.СписаниеСумма;
					ОтгруженоКоличество=ТаблицаДвижений.ОтгруженоКоличество;
					ОтгруженоСумма =    ТаблицаДвижений.ОтгруженоСумма;
					ПоступлениеОптРозницаКоличество = ТаблицаДвижений.ПоступлениеОптРозницаКоличество;
					ПоступлениеОптРозницаСумма = ТаблицаДвижений.ПоступлениеОптРозницаСумма;
					ПередачаОптРозницаКоличество = ТаблицаДвижений.ПередачаОптРозницаКоличество;
					ПередачаОптРозницаСумма = ТаблицаДвижений.ПередачаОптРозницаСумма;
					СписаниеЦена =      ТаблицаДвижений.СписаниеЦена;
					
					// подсчет итогов операции
					ОстатокКоличество = ОстатокКоличество + (ПриходКоличество - ВозвратКоличество - СписаниеКоличество - ОтгруженоКоличество + ПоступлениеОптРозницаКоличество - ПередачаОптРозницаКоличество);
					ОстатокСумма 	  = ОстатокСумма + (ПриходСумма - ВозвратСумма - СписаниеСумма - ОтгруженоСумма + ПоступлениеОптРозницаСумма - ПередачаОптРозницаСумма);

					Таб.ВывестиСекцию("Строка");

				КонецЦикла;
			КонецЕсли;
			
			// подсчет итогов по таблице
			ВсегоПриходКоличество = 	ВсегоПриходКоличество 	+ ТаблицаДвижений.Итог("ПриходКоличество");
			ВсегоПриходСумма = 			ВсегоПриходСумма 		+ ТаблицаДвижений.Итог("ПриходСумма");
			ВсегоВозвратКоличество = 	ВсегоВозвратКоличество 	+ ТаблицаДвижений.Итог("ВозвратКоличество");
			ВсегоВозвратСумма = 		ВсегоВозвратСумма 		+ ТаблицаДвижений.Итог("ВозвратСумма");
			ВсегоСписаниеКоличество = 	ВсегоСписаниеКоличество + ТаблицаДвижений.Итог("СписаниеКоличество");
			ВсегоСписаниеСумма = 		ВсегоСписаниеСумма 		+ ТаблицаДвижений.Итог("СписаниеСумма");
			ВсегоОтгруженоКоличество= 	ВсегоОтгруженоКоличество+ ТаблицаДвижений.Итог("ОтгруженоКоличество");
			ВсегоОтгруженоСумма = 		ВсегоОтгруженоСумма		+ ТаблицаДвижений.Итог("ОтгруженоСумма");
			ВсегоПоступлениеОптРозницаКоличество = ВсегоПоступлениеОптРозницаКоличество + ТаблицаДвижений.Итог("ПоступлениеОптРозницаКоличество");
			ВсегоПоступлениеОптРозницаСумма      = ВсегоПоступлениеОптРозницаСумма      + ТаблицаДвижений.Итог("ПоступлениеОптРозницаСумма");
			ВсегоПередачаОптРозницаКоличество = ВсегоПередачаОптРозницаКоличество + ТаблицаДвижений.Итог("ПередачаОптРозницаКоличество");
			ВсегоПередачаОптРозницаСумма      = ВсегоПередачаОптРозницаСумма      + ТаблицаДвижений.Итог("ПередачаОптРозницаСумма");
		КонецЦикла;

		Таб.ВывестиСекцию("Итоги");

	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

		Если БезРеализацииТоваровОтгруженных = 1 Тогда
			Заголовок = Заголовок + РазделительСтрок + "(без учета реализации товаров отгруженных)";
			Таб.ИсходнаяТаблица("ТоварыНаСкладах");
			
		Иначе
			Заголовок = Заголовок + РазделительСтрок + "(по товарам отгруженным)";
			Таб.ИсходнаяТаблица("ТоварыОтгруженные");
		КонецЕсли;
		                                        
		ТипИтогов = БезРеализацииТоваровОтгруженных - 1;
		Если БезРеализацииТоваровОтгруженных = 3 Тогда
			ТипИтогов = 1;
		КонецЕсли;
		
		ТаблицаОбъектов = глСоздатьТаблицуОбъектов();
		Если ПустоеЗначение(ВыбранныйТовар) = 1 Тогда
			глЗаполнитьТаблицуОперациями(ТаблицаОбъектов, "Товары", НачДата, КонДата, ТипИтогов, 1, 2);    
		Иначе
			глЗаполнитьТаблицуОперациями(ТаблицаОбъектов, ВыбранныйТовар, НачДата, КонДата, ТипИтогов, 1, 2);
		КонецЕсли;
		
		
		Таб.ВывестиСекцию("Шапка");
		
		ТаблицаОбъектов.ВыбратьСтроки();
		Пока ТаблицаОбъектов.ПолучитьСтроку() = 1 Цикл
			Объект = ТаблицаОбъектов.Объект;
			
			Если ПустоеЗначение(ВыбранныйТовар) = 0 Тогда
				Если Объект <> ВыбранныйТовар Тогда
				    Продолжить;
				КонецЕсли;	
			КонецЕсли;
			
			Если Объект.Вид() <> "Номенклатура" Тогда
				Продолжить;
				
			ИначеЕсли Объект.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
				Продолжить;
			КонецЕсли;
			      
			ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийПоОбъекту;
			ИтогРасчета = глРассчитатьСтоимостьОбъекта(ТаблицаОбъектов,, Объект,,, НачДата, КонДата, 2);
			Если ТипЗначенияСтр(ИтогРасчета) = "Строка" Тогда
				Сообщить(ИтогРасчета, "!");
				Продолжить;
			КонецЕсли;
			
			Если БезРеализацииТоваровОтгруженных = 1 Тогда
				ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийПоОбъекту;
				ОстатокКоличество = ТаблицаОбъектов.Количество;
				ОстатокСумма      = ТаблицаОбъектов.Сумма;
				
			Иначе
				ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийДляТоваровОтруженных;
				ОстатокКоличество = ТаблицаОбъектов.КоличествоТоваровОтгруженных;
				ОстатокСумма      = ТаблицаОбъектов.СуммаТоваровОтгруженных;
			КонецЕсли;
			
			ДатаОперации = НачДата;
			// если не было движений по данному материалу, то просто покажем остатки
			Если  ТаблицаОперацийПоОбъекту.КоличествоСтрок() = 0 Тогда
				Если  (ОстатокКоличество <> 0) или (ОстатокСумма <> 0) Тогда
					Таб.ВывестиСекцию("Наименование");
			    	Таб.ВывестиСекцию("ОстаткиТовара");
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			Таб.ВывестиСекцию("Наименование");
			
			ТаблицаОперацийПоОбъекту.ВыбратьСтроки();
			Пока ТаблицаОперацийПоОбъекту.ПолучитьСтроку() = 1 Цикл
				     
				ДатаОперации = ТаблицаОперацийПоОбъекту.ДатаОперации;
				СуммаСписания  = 0;
				СуммаОтгружено = 0;
				
				ПриходКоличествоЗаДень   = 0;
				ПриходСуммаЗаДень        = 0;
				ВозвратКоличествоЗаДень  = 0;
				ВозвратСуммаЗаДень       = 0;
				СписаниеКоличествоЗаДень = 0;
				ОтгруженоКоличествоЗаДень= 0;
				
				Таб.ВывестиСекцию("НачалоДня");
				ТаблицаОперацийЗаДень = ТаблицаОперацийПоОбъекту.ТаблицаОперацийЗаДень;
				ТаблицаОперацийЗаДень.ВыбратьСтроки();
				Пока ТаблицаОперацийЗаДень.ПолучитьСтроку() = 1 Цикл
					КодОперации = ТаблицаОперацийЗаДень.КодОперации;
					Док = ТаблицаОперацийЗаДень.Документ;
					СтрокаДокумента = ТаблицаОперацийЗаДень.СтрокаДокумента;
					ОснованиеОперации = "";
					
					ПриходКоличество   = 0;
					ПриходСумма        = 0;
					ВозвратКоличество  = 0;
					ВозвратСумма       = 0;
					СписаниеКоличество = 0;
					ОтгруженоКоличество= 0;
					
					Если КодОперации = 1 Тогда // расходы по приобретению 
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;
						
					ИначеЕсли КодОперации = 3 Тогда // отгрузка товаров без перехода права собственнности (для товаров отгруженных) 
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;	
						
					ИначеЕсли КодОперации = 4 Тогда // возврат поставщикам
						ВозвратКоличество = -ТаблицаОперацийЗаДень.Количество;
						ВозвратСумма      = -ТаблицаОперацийЗаДень.Сумма;
					
					ИначеЕсли КодОперации = 5 Тогда // отгрузка товаров без перехода права собственнности (для товаров на складах) 
						ОтгруженоКоличество = -ТаблицаОперацийЗаДень.Количество;
						СуммаОтгружено = СуммаОтгружено - ТаблицаОперацийЗаДень.Сумма;	
						
					ИначеЕсли КодОперации = 6 Тогда // списание
						СписаниеКоличество = -ТаблицаОперацийЗаДень.Количество;
						СуммаСписания = СуммаСписания - ТаблицаОперацийЗаДень.Сумма;
				
					ИначеЕсли КодОперации = 9 Тогда // списание
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;	
						ОснованиеОперации = "Корректировка стоимости";
					КонецЕсли;
					ПриходКоличествоЗаДень   = ПриходКоличествоЗаДень + ПриходКоличество;
					ПриходСуммаЗаДень        = ПриходСуммаЗаДень + ПриходСумма;
					ВозвратКоличествоЗаДень  = ВозвратКоличествоЗаДень + ВозвратКоличество;
					ВозвратСуммаЗаДень       = ВозвратСуммаЗаДень + ВозвратСумма;
					СписаниеКоличествоЗаДень = СписаниеКоличествоЗаДень + СписаниеКоличество;
					ОтгруженоКоличествоЗаДень= ОтгруженоКоличествоЗаДень + ОтгруженоКоличество;
				
					
					Если ПустоеЗначение(СтрокаДокумента) = 0 Тогда
						Док.ПолучитьСтрокуПоНомеру(СтрокаДокумента);
				    	Если Док.Вид() = "СписаниеМатериаловТоваровПродукции" Тогда
							ОснованиеОперации = СокрЛП(Док.НаименованиеОперации);
					
						ИначеЕсли (Док.Вид() = "ОперацииВыбытияИмущества") или (Док.Вид() = "ОперацииПриобретенияИмущества") Тогда
							ОснованиеОперации = "" + глПолноеНаименование(Док.Контрагент);
							Если ПустоеЗначение(Док.Договор) = 0 Тогда
								 ОснованиеОперации = ОснованиеОперации + ", " + Док.Договор;
							КонецЕсли;
					
						ИначеЕсли Док.Вид() = "РасходыНаОплатуТруда" Тогда	
							ОснованиеОперации = "Расходы на оплату труда (" + Док.Сотрудник + ")";
							
						ИначеЕсли Док.Вид() = "НачислениеНалогов" Тогда	
							ОснованиеОперации = "Начисление налогов (" + Док.ВидНалога + ")";
						КонецЕсли;
						
					ИначеЕсли Док.Вид() = "РасходнаяНакладная" Тогда 
						ОснованиеОперации = "" + глПолноеНаименование(Док.Контрагент);
						Если ПустоеЗначение(Док.Договор) = 0 Тогда
							 ОснованиеОперации = ОснованиеОперации + ", " + Док.Договор;
						КонецЕсли;	
					КонецЕсли;
					
					Таб.ВывестиСекцию("Строка");                      
				КонецЦикла;
			
				Цена = Окр(ТаблицаОперацийПоОбъекту.Цена, 2);
				ОстатокКоличество = ТаблицаОперацийПоОбъекту.КоличествоНаКонецДня;
				ОстатокСумма      = ТаблицаОперацийПоОбъекту.СуммаНаКонецДня;
				ИтоговаяСтрока = "Цена за единицу на " + ДатаОперации + ": " + Формат(Цена, "Ч10.2") + "; сумма списания за день: "
					                 + Формат(СуммаСписания, "Ч15.2") + ?(СуммаОтгружено = 0, "", "; сумма товаров отгруженных (без перехода права собственности): " + Формат(СуммаОтгружено, "Ч15.2"));
									 
				Таб.ВывестиСекцию("КонецДня");
			КонецЦикла;	
		КонецЦикла;
		
	КонецЕсли;
    
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);

	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрИнформацииОДвиженииПриобретенныхТоваров", "ОкноРегистрИнформацииОДвиженииПриобретенныхТоваров");
	Таб.Показать("Регистр информации о движении приобретенных товаров, учитываемых по методу средней себестоимости");

КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки) //предопределенная
	
	Если ФлагЧтенияНастройки = 1 Тогда
		ПриВыбореПериодаОтчета();
		Возврат;
	КонецЕсли;
	
	НачДата = НачМесяца(РабочаяДата());
	КонДата = КонМесяца(РабочаяДата()); 
	БезРеализацииТоваровОтгруженных = 1;
	ПриВыбореПериодаОтчета();

КонецПроцедуры // ПриОткрытии()