//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура Сформировать()                                               
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	
	// Заполнение шапки
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	
	Таб.ВывестиСекцию("Шапка");
	
	ТаблицаДоговоров = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаДоговоров.НоваяКолонка("Договор");
	ТаблицаДоговоров.НоваяКолонка("ЦенаПродажи", "Число", 15, 2);
	ТаблицаДоговоров.НоваяКолонка("РасходыПоПриобретению", "Число", 15, 2);
	ТаблицаДоговоров.НоваяКолонка("Документ", "Документ");
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
	БухИт.ВыполнитьЗапрос(НачДата, КонДата, "Н06.07, Н07.09",,,, "Операция",);
	БухИт.ВыбратьСубконто();
	Пока БухИт.ПолучитьСубконто() = 1 Цикл
		Если БухИт.ПолучитьСчет(, "Н06.07") = 1 Тогда
			Если БухИт.КО() > 0 Тогда
				ТаблицаДоговоров.НоваяСтрока();
				ТаблицаДоговоров.Договор = БухИт.Субконто(ВидыСубконто.Договоры);
				ТаблицаДоговоров.ЦенаПродажи = БухИт.КО();
				БухИт.ВыбратьПериоды();
				Если БухИт.ПолучитьПериод() = 1 Тогда
					ТаблицаДоговоров.Документ = БухИт.Операция.Документ;	
				КонецЕсли;
				Если БухИт.ПолучитьСчет(, "Н07.09") = 1 Тогда
					ТаблицаДоговоров.РасходыПоПриобретению = БухИт.ДО();		
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
    
	ТаблицаДоговоров.Сортировать("Документ", 1);           
	ИтогоРасходыПоПриобретению = 0;
	ИтогоСуммаКУменьшениюНБ    = 0;
	ИтогоЦенаПродажи           = 0;
	
    ТаблицаДоговоров.ВыбратьСтроки();
	Пока ТаблицаДоговоров.ПолучитьСтроку() = 1 Цикл               
		Док = ТаблицаДоговоров.Документ;
		ДатаОперации = ?(ПустоеЗначение(Док) = 0, Док.ДатаДок, "");
		Договор = ТаблицаДоговоров.Договор;
		Контрагент = Договор.Владелец;
		НаименованиеОбъекта = "" + глПолноеНаименование(Контрагент) + ", " + Договор;
		ЦенаПродажи = ТаблицаДоговоров.ЦенаПродажи;
		РасходыПоПриобретению = ТаблицаДоговоров.РасходыПоПриобретению;
		СуммаКУменьшениюНБ = Макс(РасходыПоПриобретению - ЦенаПродажи, 0);
		Таб.ВывестиСекцию("Строка");
		
		ИтогоРасходыПоПриобретению = ИтогоРасходыПоПриобретению + РасходыПоПриобретению;
		ИтогоСуммаКУменьшениюНБ    = ИтогоСуммаКУменьшениюНБ + СуммаКУменьшениюНБ;
		ИтогоЦенаПродажи           = ИтогоЦенаПродажи + ЦенаПродажи;
	КонецЦикла;
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
	
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетФинРезультатаОтРеализацииПрав", "ОкноРегистрРасчетФинРезультатаОтРеализацииПрав");
	Таб.Показать("Регистр-расчет финансового результата от реализации прав, которые были приобретены ранее в рамках операции по оказанию финансовых услуг");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии() //предопределенная
	
	НачДата = НачГода(РабочаяДата());
	КонДата = КонКвартала(РабочаяДата());
	
КонецПроцедуры //ПриОткрытии()                                                    
