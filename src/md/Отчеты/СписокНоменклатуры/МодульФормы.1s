Перем Тов;
Перем ВсегоСтрок;
// __________________________________________________________________________
//
Процедура Сформировать()
	
   	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка|Основная");
	Для Счетчик = 1 По Колонки.РазмерСписка() Цикл
		Если Колонки.Пометка(Счетчик) > 0 Тогда
			Колонка = Колонки.ПолучитьЗначение(Счетчик);
			Если ТипЗначенияСтр(Колонка) = "Справочник" Тогда
				
				
				ШапкаЦены	= СокрЛП(Колонка.Наименование);
				НалогиЦены = ". Цена указана в "+ Колонка.Валюта;
				Если Колонка.ЦенаВклНДС = Колонка.ЦенаВклНП Тогда
					Если Колонка.ЦенаВклНДС = 1 Тогда
						НалогиЦены = "(включая НДС и НП)"
					Иначе
						НалогиЦены = "(без учета НДС и НП)";
					КонецЕсли;
				Иначе
					Если Колонка.ЦенаВклНДС = 1 Тогда
						НалогиЦены = "(включая НДС," + РазделительСтрок;
					Иначе
						НалогиЦены = "(без учета НДС," + РазделительСтрок;
					КонецЕсли;
					
					Если Колонка.ЦенаВклНП = 1 Тогда
						НалогиЦены = НалогиЦены + " включая НП)";
					Иначе
						НалогиЦены = НалогиЦены + " без учета НП)";
					КонецЕсли;
					
				КонецЕсли;
				
				ПодписьЦены = ШапкаЦены;
				Таб.ПрисоединитьСекцию("Шапка|ЦенаПоТипу");
			Иначе
				Таб.ПрисоединитьСекцию("Шапка|"+Колонка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ВсегоСтрок = 5;
	
	//НачДата = РабочаяДата();
	
	ТЗ = "
		|Период С НачДата По НачДата;
		|Товар 			= Справочник.Номенклатура.ТекущийЭлемент,Справочник.Цены.Владелец.ТекущийЭлемент;
		|Тип			= Справочник.Цены.ТипЦен.ТекущийЭлемент;
		|Цена			= Справочник.Цены.Цена;
		|Валюта			= Справочник.Цены.Валюта;";
	Если ПустоеЗначение(ФильтроватьПо) = 0 Тогда
		ТЗ = ТЗ + "
		|Рек = Справочник.Номенклатура."+Фильтр.ПолучитьЗначение(Фильтр.ТекущаяСтрока())+",Справочник.Цены.Владелец."+Фильтр.ПолучитьЗначение(Фильтр.ТекущаяСтрока())+";";
	КонецЕсли;
	Если Сортировать = 1 Тогда
	    ТЗ = ТЗ + "
		|Группировка Товар Упорядочить по Товар.Код;";
	Иначе
		ТЗ = ТЗ + "
		|Группировка Товар Упорядочить по Товар.Наименование;";
	КонецЕсли;
	ТЗ = ТЗ + "
		|Группировка Тип Упорядочить по Тип.Код;";
	Если ВыбРодитель.Выбран() = 1 Тогда
	    ТЗ = ТЗ + "
		|Условие (Товар в ВыбРодитель);";		
	КонецЕсли;
	Если ПустоеЗначение(ФильтроватьПо) = 0 Тогда
		Если ТипЗначенияСтр(ФильтроватьПо) = "Строка" Тогда
			ТЗ = ТЗ + "
			|Условие (Найти(НРег(Рек),НРег(ФильтроватьПо)) > 0);";
		Иначе
			ТЗ = ТЗ + "
			|Условие (Рек = ФильтроватьПо);";
		КонецЕсли;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Запрос.Выполнить(ТЗ);
		
    Пока Запрос.Группировка(1) = 1 Цикл
		Тов = Запрос.Товар;
		Если (Тов.ПометкаУдаления() = 0) Тогда
	        Если Тов.ЭтоГруппа() = 1 Тогда
				Таб.ВывестиСекцию("Группа|Основная");
				
				Для Счетчик = 1 По Колонки.РазмерСписка() Цикл
					Если Колонки.Пометка(Счетчик) > 0 Тогда
						Колонка = Колонки.ПолучитьЗначение(Счетчик);
						Если ТипЗначенияСтр(Колонка) = "Справочник" Тогда
						    Таб.ПрисоединитьСекцию("Группа|ЦенаПоТипу");
						Иначе
							Таб.ПрисоединитьСекцию("Группа|"+Колонка);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				ВсегоСтрок = ВсегоСтрок + 1;
				
			Иначе
				Если Тов.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
					Страна = ?(Тов.СтранаПроисхожд = 1, "Да", "Нет");
				    ТипТовара = Тов.ТипТовара;
				Иначе
					Страна = "";
					ТипТовара = "";
				КонецЕсли;
				Таб.ВывестиСекцию("Товар|Основная");
				Для Счетчик = 1 По Колонки.РазмерСписка() Цикл
					Если Колонки.Пометка(Счетчик) > 0 Тогда
						Колонка = Колонки.ПолучитьЗначение(Счетчик);
						Если ТипЗначенияСтр(Колонка) = "Справочник" Тогда
							ПечЦена = 0;
							Пока Запрос.Группировка(2) = 1 Цикл
								Если Запрос.Тип = Колонка Тогда
									ПечЦена	= глПересчет(Запрос.Цена, Запрос.Валюта, НачДата, Колонка.Валюта, НачДата);
								КонецЕсли;
							КонецЦикла;        
							ПечЦена = Формат(ПечЦена,"Ч15.2.,") + " " + ?(Колонка.Валюта.Выбран() = 1,  Колонка.Валюта, "руб.");
							Таб.ПрисоединитьСекцию("Товар|ЦенаПоТипу");
						Иначе
							Таб.ПрисоединитьСекцию("Товар|"+Колонка);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				ВсегоСтрок = ВсегоСтрок + 1;
	        КонецЕсли;
	    КонецЕсли;	
	КонецЦикла;
	
 	Таб.ТолькоПросмотр(1);
 	Таб.Опции(0,0,5,2);
 	Таб.Показать("Список номенклатуры");
    Таб.ПараметрыСтраницы(2);

КонецПроцедуры
// __________________________________________________________________________
//
Процедура НовыйТипФильтра()
	Если Фильтр.ТекущаяСтрока() > 2 Тогда
		Атрибут = Метаданные.Справочник("Номенклатура").Реквизит(Фильтр.ПолучитьЗначение(Фильтр.ТекущаяСтрока()));
	    Если ((Атрибут.Тип<>"Число") и (Атрибут.Тип<>"Дата") и (Атрибут.Тип<>"Строка")) Тогда
		    НовыйТип = Строка(Атрибут.Тип) + "." + Строка(Атрибут.Вид);
		Иначе
			НовыйТип = Строка(Атрибут.Тип);
		КонецЕсли;
	Иначе 
		НовыйТип = "Строка";
	КонецЕсли;
	Форма.ФильтроватьПо.НазначитьТип(НовыйТип);
	ФильтроватьПо = ПолучитьПустоеЗначение(НовыйТип);
КонецПроцедуры  

//******************************************************************************
// СформироватьСписокПомеченных()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Список значений, состоящий из помеченных значений из списка значений ТипыЦен
//
// Описание:
//  Формирует список значений, состоящий только из помеченных значений из списка
//  значений ТипыЦен.
//
Функция СформироватьСписокПомеченных()
	
	РезСписок = СоздатьОбъект("СписокЗначений");
	Для Счетчик = 1 По Колонки.РазмерСписка() Цикл
		Если Колонки.Пометка(Счетчик) = 1 Тогда
			РезСписок.ДобавитьЗначение(Колонки.ПолучитьЗначение(Счетчик));
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезСписок;
	
КонецФункции // СформироватьСписокПомеченных()

//******************************************************************************
// ОбработкаСпискаТиповЦен(Пометки)
//
// Параметры: 
//  ВклТипы - список значений, содержащий типы цен, которые нужно пометить.
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Зполняет из справочника ТипыЦен список значений ТипыЦен и устанавливает
//  пометки у тех типов, которые находятся в списке значений ВклТипы.
//
Процедура ОбработкаСпискаТиповЦен(ВклКолонки)
	
	// очистим список
	Колонки.УдалитьВсе();
	
	Колонки.ДобавитьЗначение("Страна", "Страна происхождния - Россия");
	Колонки.ДобавитьЗначение("ТипНоменклатуры", "Тип номенклатуры");
	Колонки.ДобавитьЗначение("ТипТовара", "Тип товара");
	Колонки.ДобавитьЗначение("СтавкаНДС", "Ставка НДС");
	Колонки.ДобавитьЗначение("СтавкаНП", "Ставка НП");
	Колонки.ДобавитьЗначение("Единица", "Ед. измерения");
	
	
	Если Константа.ИспользоватьТипыЦен = Нет Тогда
		Колонки.ДобавитьЗначение("Цена", "Цена");
		Колонки.ДобавитьЗначение("Себестоимость", "Себестоимость");
	Иначе
		// перезаполним список из справочника
		СпрТипыЦен = СоздатьОбъект("Справочник.ТипыЦен");
		СпрТипыЦен.ВыбратьЭлементы();
		Пока СпрТипыЦен.ПолучитьЭлемент() = 1 Цикл
			Колонки.ДобавитьЗначение(СпрТипыЦен.ТекущийЭлемент(), "Цена: "+СпрТипыЦен.ТекущийЭлемент().Наименование);
		КонецЦикла;
	КонецЕсли;
	
	// проставим пометки
	Для Счетчик = 1 По ВклКолонки.РазмерСписка() Цикл
		Поз = Колонки.НайтиЗначение(ВклКолонки.ПолучитьЗначение(Счетчик));
		Если Поз > 0 Тогда
		    Колонки.Пометка(Поз, 1);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ОбработкаСпискаТиповЦен()

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНового()
	
	// восстановим из настройки пометки у типов цен
	ОбработкаСпискаТиповЦен(СформироватьСписокПомеченных());
	
КонецПроцедуры // ВводНового()

// __________________________________________________________________________
//
Процедура ПриОткрытии()
	НачДата = РабочаяДата();
	Фильтр.УдалитьВсе();
	Фильтр.ДобавитьЗначение("Код");
	Фильтр.ДобавитьЗначение("Наименование");
	Для Инд = 1 По Метаданные.Справочник("Номенклатура").Реквизит() Цикл
		ТовМД = Метаданные.Справочник("Номенклатура").Реквизит(Инд);
		Если (СокрЛП(ТовМД.Идентификатор) <> "ПолнНаименование")
		   и (СокрЛП(ТовМД.Комментарий)   <> "Не используется") Тогда
		    Фильтр.ДобавитьЗначение(СокрЛП(ТовМД.Идентификатор),ТовМД.Представление());
		КонецЕсли;
	КонецЦикла;
	Фильтр.ТекущаяСтрока(Фильтр.НайтиЗначение("Наименование"));
	НовыйТипФильтра();          
	Если глФлагРасшифровки = 0 Тогда
		Если ПустоеЗначение(Сортировать) = 1 Тогда
			Сортировать = 2;    
		КонецЕсли;
	Иначе
		П = глРасшифровка;
		Фильтр.ТекущаяСтрока(П.Получить("ТекФильтр"));
		НовыйТипФильтра();
		ФильтроватьПо = П.Получить("ФильтроватьПо");
		ВыбРодитель = П.Получить("ВыбРодитель");
		Сортировать = П.Получить("Сортировать");
	КонецЕсли;
	//ОбработкаСпискаТиповЦен();
КонецПроцедуры
// __________________________________________________________________________
//
Функция СтрокаФильтра()
	Перем Синоним;
	Значение = Фильтр.ПолучитьЗначение(Фильтр.ТекущаяСтрока(), Синоним);
	Синоним = ?(ПустоеЗначение(Синоним) = 1, Значение, Синоним);
	Рез = ?(ПустоеЗначение(ФильтроватьПо)=0,("Установлен фильтр """+Синоним+""" по значению """+Строка(ФильтроватьПо))+"""","");
	Возврат Рез;
КонецФункции
// __________________________________________________________________________
//