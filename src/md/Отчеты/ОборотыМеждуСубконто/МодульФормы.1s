//-----------------------------------------------
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем ОтборСубк1;
Перем ОтборСубк2;
Перем ОтборСубк3;
Перем ОтборКорСубк1;
Перем ОтборКорСубк2;
Перем ОтборКорСубк3;
Перем ПланСчетов;
Перем ВыбПланСчетов;
Перем ПредставлениеРУ;
Перем ВидСубконто[3], Субконто[3], ОтборСубконто[3], ПоГруппам[3], Номер[3];
Перем ВидКорСубконто[3], КорСубконто[3], ОтборКорСубконто[3], ПоКорГруппам[3], КорНомер[3];

//-----------------------------------------------
Процедура УстановитьВладельца(ПоВсем, РУ, Субконто)
	Назначить = 0;
	Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
		МДСубконто = Метаданные.Справочник(Субконто.Вид());
		Если МДСубконто.Выбран() = 1 Тогда
	 		Назначить = 1;                      
			Если (ПоВсем = 0) И (ТипЗначенияСтр(РУ) = "Справочник") Тогда
				Если МДСубконто.Владелец.Выбран() = 1 Тогда
					Если МДСубконто.Владелец.Идентификатор = РУ.Вид() Тогда
						Назначить = 2;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Назначить = 1 Тогда
		Субконто.ИспользоватьВладельца("");
	ИначеЕсли Назначить = 2 Тогда
		Субконто.ИспользоватьВладельца(РУ);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Функция ПроверкаПериода()
	Если ПустоеЗначение(Дата1) = 1 Тогда
	    Предупреждение("Не указана дата начала периода отчета!");
		Возврат 0;
	КонецЕсли;
	Если Дата1 > Дата2 Тогда
		Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(Субконто[Поз1], Субконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
	ПоменятьЗначения(ПоГруппам[Поз1], ПоГруппам[Поз2]);
	ПоменятьЗначения(Номер[Поз1], Номер[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Процедура ПоменятьКор(Поз1, Поз2)
	ПоменятьЗначения(ВидКорСубконто[Поз1], ВидКорСубконто[Поз2]);
	ПоменятьЗначения(КорСубконто[Поз1], КорСубконто[Поз2]);
	ПоменятьЗначения(ОтборКорСубконто[Поз1], ОтборКорСубконто[Поз2]);
	ПоменятьЗначения(ПоКорГруппам[Поз1], ПоКорГруппам[Поз2]);
	ПоменятьЗначения(КорНомер[Поз1], КорНомер[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаДтКт(ДтКт)
	Расшифровка.Установить("ДтКт", ДтКт);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Процедура ЦиклПоСчетам(Ит, Расшифровка, Т)
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Расшифровка.Установить("Счет", Ит.Счет);
		Ит.ВыбратьКорСчета();
		Пока Ит.ПолучитьКорСчет() = 1 Цикл
			Расшифровка.Установить("КорСчет", Ит.КорСчет);
			Т.ВывестиСекцию("Секция_4");
		КонецЦикла;
	КонецЦикла;
	Расшифровка.Установить("Счет");
	Расшифровка.Установить("КорСчет");
КонецПроцедуры

//-----------------------------------------------
Процедура ЦиклПоКорСубконто(Ит, Расшифровка, Т)
	Если ОтборКорСубконто[1] = 1 Тогда
		Ит.ВыбратьКорСубконто();
		Пока Ит.ПолучитьКорСубконто() = 1 Цикл
			Состояние(""+Ит.Субконто()+";"+Ит.КорСубконто());
			Расшифровка.Установить("КорСубконто"+КорНомер[1], Ит.КорСубконто());
			Т.ВывестиСекцию("Секция_3");
			Если ОтборКорСубконто[2] = 1 Тогда
				Ит.ВыбратьКорСубконто(2);
				Пока Ит.ПолучитьКорСубконто(2) = 1 Цикл
					Расшифровка.Установить("КорСубконто"+КорНомер[2], Ит.КорСубконто(2));
					Т.ВывестиСекцию("Секция_3_1");
					Если ОтборКорСубконто[3] = 1 Тогда
						Ит.ВыбратьКорСубконто(3);
						Пока Ит.ПолучитьКорСубконто(3) = 1 Цикл
							Расшифровка.Установить("КорСубконто"+КорНомер[3], Ит.КорСубконто(3));
							Т.ВывестиСекцию("Секция_3_2");
							ЦиклПоСчетам(Ит, Расшифровка, Т);
							Т.ВывестиСекцию("Секция_5_2");
						КонецЦикла;
						Расшифровка.Установить("КорСубконто"+КорНомер[3]);
					Иначе
						ЦиклПоСчетам(Ит, Расшифровка, Т);
					КонецЕсли;
					Т.ВывестиСекцию("Секция_5_1");
				КонецЦикла;
				Расшифровка.Установить("КорСубконто"+КорНомер[2]);
			Иначе
				ЦиклПоСчетам(Ит, Расшифровка, Т);
			КонецЕсли;
			Т.ВывестиСекцию("Секция_5");
		КонецЦикла;
		Расшифровка.Установить("КорСубконто"+КорНомер[1]);
	Иначе
		ЦиклПоСчетам(Ит, Расшифровка, Т);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура Сформировать(ФлагЗакрытияФормы = 0)
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	ВидСубконто[1] = ВыбВидСубконто1; Субконто[1] = Субконто1; ОтборСубконто[1] = ?(ВидСубконто[1].Выбран()=1, ОтборСубконто1.ТекущаяСтрока(), 3); ПоГруппам[1] = ПоГруппам1; Номер[1] = 1;
	ВидСубконто[2] = ВыбВидСубконто2; Субконто[2] = Субконто2; ОтборСубконто[2] = ?(ВидСубконто[2].Выбран()=1, ОтборСубконто2.ТекущаяСтрока(), 3); ПоГруппам[2] = ПоГруппам2; Номер[2] = 2;
	ВидСубконто[3] = ВыбВидСубконто3; Субконто[3] = Субконто3; ОтборСубконто[3] = ?(ВидСубконто[3].Выбран()=1, ОтборСубконто3.ТекущаяСтрока(), 3); ПоГруппам[3] = ПоГруппам3; Номер[3] = 3;

	Если (ВидСубконто[1] = ВидСубконто[2]) И (ОтборСубконто[1] <> 3) И (ОтборСубконто[2] <> 3) Или
		 (ВидСубконто[2] = ВидСубконто[3]) И (ОтборСубконто[2] <> 3) И (ОтборСубконто[3] <> 3) Или
		 (ВидСубконто[3] = ВидСубконто[1]) И (ОтборСубконто[3] <> 3) И (ОтборСубконто[1] <> 3) Тогда
		Предупреждение("Выбраны одинаковые виды субконто!");
		Возврат;
	КонецЕсли;

	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;

	Если ОтборСубконто[1] = 3 Тогда
		Предупреждение("Не указан вид субконто!");
		Возврат;
	КонецЕсли;

	ВидКорСубконто[1] = ВыбКорВидСубконто1; КорСубконто[1] = КорСубконто1; ОтборКорСубконто[1] = ?(ВидКорСубконто[1].Выбран()=1, ОтборКорСубконто1.ТекущаяСтрока(), 3); ПоКорГруппам[1] = ПоКорГруппам1; КорНомер[1] = 1;
	ВидКорСубконто[2] = ВыбКорВидСубконто2; КорСубконто[2] = КорСубконто2; ОтборКорСубконто[2] = ?(ВидКорСубконто[2].Выбран()=1, ОтборКорСубконто2.ТекущаяСтрока(), 3); ПоКорГруппам[2] = ПоКорГруппам2; КорНомер[2] = 2;
	ВидКорСубконто[3] = ВыбКорВидСубконто3; КорСубконто[3] = КорСубконто3; ОтборКорСубконто[3] = ?(ВидКорСубконто[3].Выбран()=1, ОтборКорСубконто3.ТекущаяСтрока(), 3); ПоКорГруппам[3] = ПоКорГруппам3; КорНомер[3] = 3;

	Если (ВидКорСубконто[1] = ВидКорСубконто[2]) И (ОтборКорСубконто[1] <> 3) И (ОтборКорСубконто[2] <> 3) Или
		 (ВидКорСубконто[2] = ВидКорСубконто[3]) И (ОтборКорСубконто[2] <> 3) И (ОтборКорСубконто[3] <> 3) Или
		 (ВидКорСубконто[3] = ВидКорСубконто[1]) И (ОтборКорСубконто[3] <> 3) И (ОтборКорСубконто[1] <> 3) Тогда
		Предупреждение("Выбраны одинаковые виды корреспондирующих субконто!");
		Возврат;
	КонецЕсли;

	Если ОтборКорСубконто[1] > ОтборКорСубконто[2] Тогда
		ПоменятьКор(1, 2);
	КонецЕсли;
	Если ОтборКорСубконто[2] > ОтборКорСубконто[3] Тогда
		ПоменятьКор(2, 3);
		Если ОтборКорСубконто[1] > ОтборКорСубконто[2] Тогда
			ПоменятьКор(1, 2);
		КонецЕсли;
	КонецЕсли;

	Если ОтборКорСубконто[1] = 3 Тогда
		Предупреждение("Не указан вид субконто!");
		Возврат;
	КонецЕсли;
	
	ВсегоКО = 0;
	ВсегоДО = 0;
	ВсегоКО2 = 0;
	ВсегоДО2 = 0;

	Расшифровка = СоздатьОбъект("СписокЗначений");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");

	Заголовок = "";
	ВыбВидыСубконто = "";
	Ит.ВключатьСубсчета(ДанныеПоСубсчетам, ДанныеПоСубсчетам);
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Ит.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
			ВыбВидыСубконто = ВыбВидыСубконто+?(А=1, " ", ", ")+ВидСубконто[А];
			Заголовок = Заголовок+?(А=1, " ", "; ")+ВидСубконто[А];
			Если ОтборСубконто[А] = 2 Тогда
				Заголовок = Заголовок+": "+Субконто[А];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Заголовок = Заголовок+"; ";
	Для А=1 По 3 Цикл
		Если ОтборКорСубконто[А] <> 3 Тогда
			Ит.ИспользоватьКорСубконто(ВидКорСубконто[А], КорСубконто[А], ОтборКорСубконто[А], ПоКорГруппам[А]);
			ВыбВидыСубконто = ВыбВидыСубконто+?(А=1, " и ", ", ")+ВидКорСубконто[А];
			Заголовок = Заголовок+?(А=1, " ", "; ")+ВидКорСубконто[А];
			Если ОтборКорСубконто[А] = 2 Тогда
				Заголовок = Заголовок+": "+КорСубконто[А];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

    Если ВыбПланСчетов = 1 Тогда
        ПланСчетов = ВыбранныйПланСчетов();
    КонецЕсли;
    Ит.ИспользоватьПланСчетов(ПланСчетов);
    Ит.ИспользоватьРазделительУчета(РазделительУчета);
	Если ПоВалюте = 1 Тогда
		Если Ит.ВыполнитьЗапрос(Дата1, Дата2,,, Валюта, 2) = 0 Тогда
			Возврат;
		КонецЕсли;
		Расшифровка.Установить("Валюта", Валюта);
		Расшифровка.Установить("ПоВалюте", 1);
	Иначе
		Если Ит.ВыполнитьЗапрос(Дата1, Дата2,,,, 2) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если (ТипЗначенияСтр(Т) <> "Таблица")ИЛИ(Обновить=0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
 	Т.ИсходнаяТаблица("Таблица");
 	
 	НазваниеОрганизации = глНазваниеОрганизации(Контекст);

	Расшифровка.Установить("Отчет", "ОборотыМеждуСубконто");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
    Расшифровка.Установить("ПланСчетов", ПланСчетов);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);

	Для А=1 По 3 Цикл
		Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
		Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
		Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
		Расшифровка.Установить("ПоГруппам"+Номер[А], ПоГруппам[А]);
	КонецЦикла;

	Для А=1 По 3 Цикл
		Расшифровка.Установить("КорВидСубконто"+КорНомер[А], ВидКорСубконто[А]);
		Расшифровка.Установить("КорСубконто"+КорНомер[А], КорСубконто[А]);
		Расшифровка.Установить("ОтборКорСубконто"+КорНомер[А], ОтборКорСубконто[А]);
		Расшифровка.Установить("ПоКорГруппам"+КорНомер[А], ПоКорГруппам[А]);
	КонецЦикла;

	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);

	Т.ВывестиСекцию("Секция_14");
	Т.ВывестиСекцию("Секция_1");
	Если ПустоеЗначение(Заголовок) = 0 Тогда
		Т.ВывестиСекцию("Секция_17");
	КонецЕсли;
	Т.ВывестиСекцию("Секция_18");
	Расшифровка.УдалитьВсе();

	Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
    Расшифровка.Установить("ПланСчетов", ПланСчетов);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);

	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
			Если ОтборСубконто[А] = 2 Тогда
				Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Для А=1 По 3 Цикл
		Если ОтборКорСубконто[А] <> 3 Тогда
			Расшифровка.Установить("КорВидСубконто"+КорНомер[А], ВидКорСубконто[А]);
			Если ОтборКорСубконто[А] = 2 Тогда
				Расшифровка.Установить("КорСубконто"+КорНомер[А], КорСубконто[А]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если ОтборСубконто[1] = 1 Тогда
		Ит.ВыбратьСубконто();
		Пока Ит.ПолучитьСубконто() = 1 Цикл
			Состояние(""+Ит.Субконто());
			Расшифровка.Установить("Субконто"+Номер[1], Ит.Субконто());
			Т.ВывестиСекцию("Секция_2");

			Если ОтборСубконто[2] = 1 Тогда
				Ит.ВыбратьСубконто(2);
				Пока Ит.ПолучитьСубконто(2) = 1 Цикл
					Расшифровка.Установить("Субконто"+Номер[2], Ит.Субконто(2));
					Т.ВывестиСекцию("Секция_2_1");

					Если ОтборСубконто[3] = 1 Тогда
						Ит.ВыбратьСубконто(3);
						Пока Ит.ПолучитьСубконто(3) = 1 Цикл
							Расшифровка.Установить("Субконто"+Номер[3], Ит.Субконто(3));
							Т.ВывестиСекцию("Секция_2_2");
							ЦиклПоКорСубконто(Ит, Расшифровка, Т);
							Т.ВывестиСекцию("Секция_6_2");
						КонецЦикла;
						Расшифровка.Установить("Субконто"+Номер[3]);
					Иначе
						ЦиклПоКорСубконто(Ит, Расшифровка, Т);
					КонецЕсли;

					Т.ВывестиСекцию("Секция_6_1");
				КонецЦикла;
				Расшифровка.Установить("Субконто"+Номер[2]);
			Иначе
				ЦиклПоКорСубконто(Ит, Расшифровка, Т);
			КонецЕсли;

			Т.ВывестиСекцию("Секция_6");
			
			ВсегоКО = ВсегоКО + Ит.КО();
			ВсегоДО = ВсегоДО + Ит.ДО();
			ВсегоКО2 = ВсегоКО2 + Ит.КО(2);
			ВсегоДО2 = ВсегоДО2 + Ит.ДО(2);
		КонецЦикла;
		Расшифровка.Установить("Субконто"+Номер[1]);
		
	Иначе
		ЦиклПоКорСубконто(Ит, Расшифровка, Т);
		
		ВсегоКО = Ит.КО();
		ВсегоДО = Ит.ДО();
		ВсегоКО2 = Ит.КО(2);
		ВсегоДО2 = Ит.ДО(2);
		//Если ОтборКорСубконто[1] <> 1 Тогда
		//	Т.ВывестиСекцию("Секция_7");
		//КонецЕсли;
	КонецЕсли;
	
	Т.ВывестиСекцию("Секция_7");
	
    Ит = 0;
	ФиксСтрок = ?(ПустоеЗначение(Заголовок)=1,7,8);
	
	НазваниеОрганизации = ?(ПустоеЗначение(НазваниеОрганизации)=1, "", " "+НазваниеОрганизации);
	ПериодИОрганизация = " ("+ПериодСтр(Дата1, Дата2)+")"+НазваниеОрганизации;
	ВерхнийКолонтитул = "Обороты между субконто"+ВыбВидыСубконто+ПериодИОрганизация;
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
    Т.ТолькоПросмотр(1);
	Т.Опции(0, 0, ФиксСтрок, 0, "ОпцииПечатиОборотыМеждуСубконто", "ОборотыМеждуСубконто");
	Т.ОбластьПечати(2);
	Т.ПовторятьПриПечатиСтроки(ФиксСтрок-1, ФиксСтрок);
	Т.ПараметрыСтраницы(1,,,,,,,,, 1);
	Т.Показать(ВерхнийКолонтитул, "");

	Если (ФлагЗакрытияФормы = 1) Или (Обновить = 2) Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВалюты()
	ПоВалюте = Валюта.Выбран();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто1()
	Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		ОтборСубконто1.ТекущаяСтрока(3);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто2()
	Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
	Если ВыбВидСубконто2.Выбран() = 0 Тогда
		ОтборСубконто2.ТекущаяСтрока(3);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто3()
	Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
	Если ВыбВидСубконто3.Выбран() = 0 Тогда
		ОтборСубконто3.ТекущаяСтрока(3);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаКорСубконто1()
	Форма.КорСубконто1.НазначитьТип(ВыбКорВидСубконто1);
	Если ВыбКорВидСубконто1.Выбран() = 0 Тогда
		ОтборКорСубконто1.ТекущаяСтрока(3);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто1);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаКорСубконто2()
	Форма.КорСубконто2.НазначитьТип(ВыбКорВидСубконто2);
	Если ВыбКорВидСубконто2.Выбран() = 0 Тогда
		ОтборКорСубконто2.ТекущаяСтрока(3);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто2);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаКорСубконто3()
	Форма.КорСубконто3.НазначитьТип(ВыбКорВидСубконто3);
	Если ВыбКорВидСубконто3.Выбран() = 0 Тогда
		ОтборКорСубконто3.ТекущаяСтрока(3);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	Если ПустоеЗначение(Субконто1) = 0 Тогда
	    Если ТипЗначения(Субконто1) = 11 Тогда //Справочник
	    	Если Субконто1.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
	    Если ТипЗначения(Субконто2) = 11 Тогда //Справочник
	    	Если Субконто2.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	Если ПустоеЗначение(Субконто3) = 0 Тогда
	    Если ТипЗначения(Субконто3) = 11 Тогда //Справочник
	    	Если Субконто3.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1.ТекущаяСтрока(1);
	Субконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2.ТекущаяСтрока(1);
	Субконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3.ТекущаяСтрока(1);
	Субконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореКорСубконто1()
	Если ПустоеЗначение(КорСубконто1) = 0 Тогда
	    Если ТипЗначения(КорСубконто1) = 11 Тогда //Справочник
	    	Если КорСубконто1.ЭтоГруппа() = 1 Тогда
    			ОтборКорСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборКорСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборКорСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборКорСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореКорСубконто2()
	Если ПустоеЗначение(КорСубконто2) = 0 Тогда
	    Если ТипЗначения(КорСубконто2) = 11 Тогда //Справочник
	    	Если КорСубконто2.ЭтоГруппа() = 1 Тогда
    			ОтборКорСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборКорСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборКорСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборКорСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореКорСубконто3()
	Если ПустоеЗначение(КорСубконто3) = 0 Тогда
	    Если ТипЗначения(КорСубконто3) = 11 Тогда //Справочник
	    	Если КорСубконто3.ЭтоГруппа() = 1 Тогда
    			ОтборКорСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборКорСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборКорСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборКорСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьКорСубконто1()
	ОтборКорСубконто1.ТекущаяСтрока(1);
	КорСубконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьКорСубконто2()
	ОтборКорСубконто2.ТекущаяСтрока(1);
	КорСубконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьКорСубконто3()
	ОтборКорСубконто3.ТекущаяСтрока(1);
	КорСубконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);

	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореРУ()
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);

	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, КорСубконто3);
КонецПроцедуры	

//-----------------------------------------------
Процедура ПриОткрытии()
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
		Форма.Текст1.Видимость(0);
	КонецЕсли;

	ОтборСубконто1.УдалитьВсе();
	ОтборСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто1.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто1.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто2.УдалитьВсе();
	ОтборСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто2.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто2.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто3.УдалитьВсе();
	ОтборСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто3.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто3.ДобавитьЗначение(3, "Не учитывать");

	ОтборКорСубконто1.УдалитьВсе();
	ОтборКорСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ОтборКорСубконто1.ДобавитьЗначение(2, "Отбирать");
	ОтборКорСубконто1.ДобавитьЗначение(3, "Не учитывать");

	ОтборКорСубконто2.УдалитьВсе();
	ОтборКорСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ОтборКорСубконто2.ДобавитьЗначение(2, "Отбирать");
	ОтборКорСубконто2.ДобавитьЗначение(3, "Не учитывать");

	ОтборКорСубконто3.УдалитьВсе();
	ОтборКорСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ОтборКорСубконто3.ДобавитьЗначение(2, "Отбирать");
	ОтборКорСубконто3.ДобавитьЗначение(3, "Не учитывать");

	Если Метаданные.Валюта.Выбран() = 1 Тогда
		Форма.Валюта.НазначитьТип("Справочник."+Метаданные.Валюта.Идентификатор);
	Иначе
		Форма.Валюта.Доступность(0);
		Форма.ПоВалюте.Доступность(0);
	КонецЕсли;

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		ВыбПланСчетов = 0;
		Если Обновить <> 0 Тогда
			ПланСчетов = глРасшифровка.Получить("ПланСчетов");
			РУ = глРасшифровка.Получить("РазделительУчета");
			Если ТипЗначенияСтр(РУ) <> "" Тогда
				РазделительУчета = РУ;
				ПоВсемРУ = 0;
			Иначе
				Форма.РазделительУчета.НазначитьТип("");
				ПоВсемРУ = 1;
			КонецЕсли;
			Дата1 = глРасшифровка.Получить("Дата1");
			Дата2 = глРасшифровка.Получить("Дата2");
			Валюта = глРасшифровка.Получить("Валюта");
			ПоВалюте = глРасшифровка.Получить("ПоВалюте");
			ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
			Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
			Субконто1 = глРасшифровка.Получить("Субконто1");
			ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
			ОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1"));
			ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
			Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
			Субконто2 = глРасшифровка.Получить("Субконто2");
			ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");
			ОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2"));
			ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
			Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
			Субконто3 = глРасшифровка.Получить("Субконто3");
			ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
			ОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3"));

			ВыбКорВидСубконто1 = глРасшифровка.Получить("КорВидСубконто1");
			Форма.КорСубконто1.НазначитьТип(ВыбКорВидСубконто1);
			КорСубконто1 = глРасшифровка.Получить("КорСубконто1");
			ПоКорГруппам1 = глРасшифровка.Получить("КорПоГруппам1");
			ОтборКорСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборКорСубконто1"));
			ВыбКорВидСубконто2 = глРасшифровка.Получить("КорВидСубконто2");
			Форма.КорСубконто2.НазначитьТип(ВыбКорВидСубконто2);
			КорСубконто2 = глРасшифровка.Получить("КорСубконто2");
			ПоКорГруппам2 = глРасшифровка.Получить("ПоКорГруппам2");
			ОтборКорСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборКорСубконто2"));
			ВыбКорВидСубконто3 = глРасшифровка.Получить("КорВидСубконто3");
			Форма.КорСубконто3.НазначитьТип(ВыбКорВидСубконто3);
			КорСубконто3 = глРасшифровка.Получить("КорСубконто3");
			ПоКорГруппам3 = глРасшифровка.Получить("ПоКорГруппам3");
			ОтборКорСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборКорСубконто3"));

			ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
			Т = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбПланСчетов = 1;
		ПланСчетов = ВыбранныйПланСчетов();
		РУ = БухИтоги.ИспользоватьРазделительУчета();
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Если МаксимальноеКоличествоСубконто() > 1 Тогда
			Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
			Форма.КорСубконто2.НазначитьТип(ВыбКорВидСубконто2);
		Иначе
			Форма.ОтборСубконто2.Доступность(0);
			Форма.Субконто2.Доступность(0);
			Форма.ВыбВидСубконто2.Доступность(0);
			Форма.ПоГруппам2.Доступность(0);
			Форма.ОчиститьСубконто2.Доступность(0);

			Форма.ОтборКорСубконто2.Доступность(0);
			Форма.КорСубконто2.Доступность(0);
			Форма.ВыбКорВидСубконто2.Доступность(0);
			Форма.ПоКорГруппам2.Доступность(0);
			Форма.ОчиститьКорСубконто2.Доступность(0);
		КонецЕсли;

		Если МаксимальноеКоличествоСубконто() > 2 Тогда
			Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
			Форма.КорСубконто3.НазначитьТип(ВыбКорВидСубконто3);
		Иначе
			Форма.ОтборСубконто3.Доступность(0);
			Форма.Субконто3.Доступность(0);
			Форма.ВыбВидСубконто3.Доступность(0);
			Форма.ПоГруппам3.Доступность(0);
			Форма.ОчиститьСубконто3.Доступность(0);

			Форма.ОтборКорСубконто3.Доступность(0);
			Форма.КорСубконто3.Доступность(0);
			Форма.ВыбКорВидСубконто3.Доступность(0);
			Форма.ПоКорГруппам3.Доступность(0);
			Форма.ОчиститьКорСубконто3.Доступность(0);
		КонецЕсли;

		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Форма.КорСубконто1.НазначитьТип(ВыбКорВидСубконто1);
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового()
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
	ПриВыбореВидаСубконто1();
	ПриВыбореВидаСубконто2();
	ПриВыбореВидаСубконто3();
	ПриВыбореВидаКорСубконто1();
	ПриВыбореВидаКорСубконто2();
	ПриВыбореВидаКорСубконто3();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, Флаг)
	//Обработка выбора субконто типа "Документ"
	Если Лев(ИдентЭлемДиалога, 8) = "Субконто" Тогда
		Ном = Число(Прав(ИдентЭлемДиалога, 1));
		Если Ном = 1 Тогда
		    _ВидСубконто = ВыбВидСубконто1;
		ИначеЕсли Ном = 2 Тогда
		    _ВидСубконто = ВыбВидСубконто2;
		ИначеЕсли Ном = 3 Тогда
		    _ВидСубконто = ВыбВидСубконто3;
		КонецЕсли;
		Если Лев(_ВидСубконто.ТипСубконто(), 8) = "Документ" Тогда
			//Предусмотрена возможность выбора субконто типа "Документ" из специально созданного в конфигурации журнала
			//Идентификатор такого журнала должен быть такой же, как у вида субконто
			Журнал = Метаданные.Журнал(_ВидСубконто.Идентификатор());
		    Если Журнал.Выбран() = 0 Тогда
		        Флаг = 1;
				Возврат;
			КонецЕсли;
			//Тип первой ссылки первой графы этого журнала может определять тип параметра,
			//передаваемого в форму журнала документов.
			//Данный параметр может использоваться, например, для установки отбора документов в открываемой форме
			Флаг = 0;
			Если Журнал.Графа(1).Выбран() = 0 Тогда
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				Возврат;
			КонецЕсли;
			Если Журнал.Графа(1).Ссылки.Количество() > 0 Тогда
				РеквизитОтбора = Журнал.Графа(1).Ссылки.Получить(1).Тип+"."+Журнал.Графа(1).Ссылки.Получить(1).Вид;
				Если РеквизитОтбора = ВыбВидСубконто1.ТипСубконто() Тогда
					КонтекстЖурнала = Субконто1;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто2.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто2;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто3.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто3;
				Иначе
					ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				КонецЕсли;
				ОткрытьФорму("Журнал."+Журнал.Идентификатор, КонтекстЖурнала);
			Иначе
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
			КонецЕсли;
		КонецЕсли;
		глРазделительУчета = РазделительУчета;
		
	ИначеЕсли Лев(ИдентЭлемДиалога, 11) = "КорСубконто" Тогда
		Ном = Число(Прав(ИдентЭлемДиалога, 1));
		Если Ном = 1 Тогда
		    _ВидСубконто = ВыбКорВидСубконто1;
		ИначеЕсли Ном = 2 Тогда
		    _ВидСубконто = ВыбКорВидСубконто2;
		ИначеЕсли Ном = 3 Тогда
		    _ВидСубконто = ВыбКорВидСубконто3;
		КонецЕсли;
		Если Лев(_ВидСубконто.ТипСубконто(), 8) = "Документ" Тогда
			Журнал = Метаданные.Журнал(_ВидСубконто.Идентификатор());
		    Если Журнал.Выбран() = 0 Тогда
		        Флаг = 1;
				Возврат;
			КонецЕсли;
			Флаг = 0;
			Если Журнал.Графа(1).Выбран() = 0 Тогда
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				Возврат;
			КонецЕсли;
			Если Журнал.Графа(1).Ссылки.Количество() > 0 Тогда
				РеквизитОтбора = Журнал.Графа(1).Ссылки.Получить(1).Тип+"."+Журнал.Графа(1).Ссылки.Получить(1).Вид;
				Если РеквизитОтбора = ВыбКорВидСубконто1.ТипСубконто() Тогда
					КонтекстЖурнала = КорСубконто1;
				ИначеЕсли РеквизитОтбора = ВыбКорВидСубконто2.ТипСубконто() Тогда
			        КонтекстЖурнала = КорСубконто2;
				ИначеЕсли РеквизитОтбора = ВыбКорВидСубконто3.ТипСубконто() Тогда
			        КонтекстЖурнала = КорСубконто3;
				Иначе
					ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				КонецЕсли;
				ОткрытьФорму("Журнал."+Журнал.Идентификатор, КонтекстЖурнала);
			Иначе
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
			КонецЕсли;
		КонецЕсли;
		глРазделительУчета = РазделительУчета;
	КонецЕсли;
КонецПроцедуры