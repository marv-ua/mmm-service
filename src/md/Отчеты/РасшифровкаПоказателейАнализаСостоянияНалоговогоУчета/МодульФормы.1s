//-----------------------------------------------
Перем Счет;
Перем КорСчет;
Перем Субконто1;
Перем ВидСубк1;
Перем Реквизит1;
Перем Значение1;
Перем КорСубконто1;
Перем КорВидСубк1;
Перем КорРеквизит1;
Перем КорЗначение1;
Перем Субконто2;
Перем ВидСубк2;
Перем КорСубконто2;
Перем КорВидСубк2;
Перем Субконто3;
Перем ВидСубк3;
Перем КорСубконто3;
Перем КорВидСубк3;
Перем ДтКт;
Перем ИспФильтр;
Перем Дата1, Дата2;
Перем РазделительУчета;

//******************************************************************************
// ЗначениеСубконтоУдовлетворяетУсловию()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция ЗначениеСубконтоУдовлетворяетУсловию(ЗначениеСубконто, НаименованиеРеквизита, ЗначениеРеквизита)
	
	Если ПустоеЗначение(НаименованиеРеквизита) = 0 Тогда
		ЗначениеСубконто.ИспользоватьДату(Дата2, 1);
		ЗначениеРеквизтаИзПроводки = ЗначениеСубконто.ПолучитьАтрибут(НаименованиеРеквизита);
		Если ТипЗначенияСтр(ЗначениеРеквизита) = "СписокЗначений" Тогда
			Если ЗначениеРеквизита.НайтиЗначение(ЗначениеРеквизтаИзПроводки) = 0 Тогда
				Возврат 0;    
			КонецЕсли;
			
		ИначеЕсли ЗначениеРеквизита <> ЗначениеРеквизтаИзПроводки Тогда
			Возврат 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ЗначениеСубконтоУдовлетворяетУсловию()

//-----------------------------------------------
Функция ЗначенияВСтроку(Значения)
	Если ТипЗначенияСтр(Значения) = "СписокЗначений" Тогда
		С = "";
		Для А=1 По Значения.РазмерСписка() Цикл
			Если А <> 1 Тогда
				С = С+" ";
			КонецЕсли;
			С = С+Значения.ПолучитьЗначение(А);
		КонецЦикла;
		Возврат С;
	Иначе
		Возврат Значения;
	КонецЕсли;
КонецФункции

//-----------------------------------------------
Функция ВидСубконтоСтр(ВидСубк, Субк, РеквизитСубк = "", ЗначРеквизитСубк = "", КорВидСубк, КорСубк,  КорРеквизитСубк = "", КорЗначРеквизитСубк = "")
	с = "";
	Если (ПустоеЗначение(Субк) = 1)  и (ПустоеЗначение(КорСубк) = 1) 
	   и (ПустоеЗначение(ЗначРеквизитСубк) = 1)  и (ПустоеЗначение(КорЗначРеквизитСубк) = 1) Тогда
	    Возврат "";
	КонецЕсли;
	Если (ТипЗначения(ВидСубк) = 16) Или (ТипЗначения(КорВидСубк) = 16) Тогда
		с = "; """;
		Если ТипЗначения(ВидСубк) = 16 Тогда
			Если ВидСубк.Выбран() = 1 Тогда
				с = с+Строка(ВидСубк);
				Если ТипЗначения(Субк) > 0 Тогда
				    с = с+": "+ЗначенияВСтроку(Субк);
				ИначеЕсли ТипЗначения(ЗначРеквизитСубк) > 0 Тогда
					с = с+": реквизит """+РеквизитСубк+""" = "+ЗначенияВСтроку(ЗначРеквизитСубк);
				КонецЕсли;
			Иначе
				с = с+"*";
			КонецЕсли;
		Иначе
			с = с+"*";
		КонецЕсли;
		с = с+", ";
		Если ТипЗначения(КорВидСубк) = 16 Тогда
			Если КорВидСубк.Выбран() = 1 Тогда
				с = с+Строка(КорВидСубк);
				Если ТипЗначения(КорСубк) > 0 Тогда
				    с = с+": "+ЗначенияВСтроку(КорСубк);
				ИначеЕсли ТипЗначения(КорЗначРеквизитСубк) > 0 Тогда
					с = с+": реквизит """+КорРеквизитСубк+""" = "+ЗначенияВСтроку(КорЗначРеквизитСубк);
				КонецЕсли;
			Иначе
				с = с+"*""";
			КонецЕсли;
		Иначе
			с = с+"*""";
		КонецЕсли;
	КонецЕсли;
	Возврат с;
КонецФункции

//-----------------------------------------------
Процедура Сформировать(Фильтр, ФлагЗакрытияФормы = 0)
	Перем ФильтрДебета[3], ФильтрКредита[3];
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Опер = СоздатьОбъект("Операция");
	Сумма = 0;
	
	Т = СоздатьОбъект("Таблица");
 	Т.ИсходнаяТаблица("Таблица");

	Если ИспФильтр=1 Тогда
		Опер.ВыбратьОперацииСПроводками(Дата1, Дата2, Фильтр,,, РазделительУчета);
		Заголовок = Фильтр;
	Иначе
		Для а = 1 по 3 Цикл
			ФильтрДебета[а] = "";
			ФильтрКредита[а] = "";
		КонецЦикла;		
		
		Если МаксимальноеКоличествоСубконто() > 0 Тогда
			Если ТипЗначения(Субконто1) > 0 Тогда
				Опер.ИспользоватьСубконто(ВидСубк1, Субконто1);
				
			ИначеЕсли ТипЗначения(ВидСубк1) > 0 Тогда
				Если ДтКт = 1 Тогда
			    	ФильтрДебета[1] = ВидСубк1;
				Иначе
					ФильтрКредита[1] = ВидСубк1;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗначения(КорСубконто1) > 0 Тогда
				Опер.ИспользоватьКорСубконто(КорВидСубк1, КорСубконто1);
				
			ИначеЕсли ТипЗначения(КорВидСубк1) > 0 Тогда
				Если ДтКт = 2 Тогда
			    	ФильтрДебета[1] = КорВидСубк1;
				Иначе
					ФильтрКредита[1] = КорВидСубк1;
				КонецЕсли;
			КонецЕсли;
			
			Если МаксимальноеКоличествоСубконто() > 1 Тогда
				Если ТипЗначения(Субконто2) > 0 Тогда
					Опер.ИспользоватьСубконто(ВидСубк2, Субконто2);
					
				ИначеЕсли ТипЗначения(ВидСубк2) > 0 Тогда
					Если ДтКт = 1 Тогда
				    	ФильтрДебета[2] = ВидСубк2;
					Иначе
						ФильтрКредита[2] = ВидСубк2;
					КонецЕсли;
				КонецЕсли;
				
				Если ТипЗначения(КорСубконто2) > 0 Тогда
					Опер.ИспользоватьКорСубконто(КорВидСубк2, КорСубконто2);
					
				ИначеЕсли ТипЗначения(КорВидСубк2) > 0 Тогда
					Если ДтКт = 2 Тогда
				    	ФильтрДебета[2] = КорВидСубк2;
					Иначе
						ФильтрКредита[2] = КорВидСубк2;
					КонецЕсли;
				КонецЕсли;
				
				Если МаксимальноеКоличествоСубконто() > 2 Тогда
					Если ТипЗначения(Субконто3) > 0 Тогда
						Опер.ИспользоватьСубконто(ВидСубк3, Субконто3);
						
					ИначеЕсли ТипЗначения(ВидСубк3) > 0 Тогда
						Если ДтКт = 1 Тогда
					    	ФильтрДебета[3] = ВидСубк3;
						Иначе
							ФильтрКредита[3] = ВидСубк3;
						КонецЕсли;
					КонецЕсли;
					
					Если ТипЗначения(КорСубконто3) > 0 Тогда
						Опер.ИспользоватьКорСубконто(КорВидСубк3, КорСубконто3);
						
					ИначеЕсли ТипЗначения(КорВидСубк3) > 0 Тогда
						Если ДтКт = 2 Тогда
					    	ФильтрДебета[3] = КорВидСубк3;
						Иначе
							ФильтрКредита[3] = КорВидСубк3;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Опер.ВыбратьОперацииСПроводками(Дата1, Дата2, Счет, КорСчет, ДтКт,,, РазделительУчета);
		Если ДтКт = 1 Тогда
			Фильтр = ""+?(ПустоеЗначение(Счет)=1,"*",Счет)+","+?(ПустоеЗначение(КорСчет)=1,"*",КорСчет);
			Заголовок = Фильтр+ВидСубконтоСтр(ВидСубк1, Субконто1, Реквизит1, Значение1, КорВидСубк1, КорСубконто1, КорРеквизит1, КорЗначение1);
			Заголовок = Заголовок+ВидСубконтоСтр(ВидСубк2, Субконто2,,, КорВидСубк2, КорСубконто2,,);
			Заголовок = Заголовок+ВидСубконтоСтр(ВидСубк3, Субконто3,,, КорВидСубк3, КорСубконто3,,);
		ИначеЕсли ДтКт = 2 Тогда
			Фильтр = ""+?(ПустоеЗначение(КорСчет)=1,"*",КорСчет)+","+?(ПустоеЗначение(Счет)=1,"*",Счет);
			Заголовок = Фильтр+ВидСубконтоСтр(КорВидСубк1, КорСубконто1, КорРеквизит1, КорЗначение1, ВидСубк1, Субконто1, Реквизит1, Значение1);
			Заголовок = Заголовок+ВидСубконтоСтр(КорВидСубк2, КорСубконто2,,, ВидСубк2, Субконто2,,);
			Заголовок = Заголовок+ВидСубконтоСтр(КорВидСубк3, КорСубконто3,,, ВидСубк3, Субконто3,,);
		Иначе
			Фильтр = ""+?(ПустоеЗначение(Счет)=1,"*",Счет)+","+?(ПустоеЗначение(КорСчет)=1,"*",КорСчет)+"; "+?(ПустоеЗначение(КорСчет)=1,"*",КорСчет)+","+?(ПустоеЗначение(Счет)=1,"*",Счет);
			Заголовок = Фильтр+ВидСубконтоСтр(ВидСубк1, Субконто1, Реквизит1, Значение1, КорВидСубк1, КорСубконто1, Реквизит1, Значение1);
			Заголовок = Заголовок+ВидСубконтоСтр(КорВидСубк1, КорСубконто1, КорРеквизит1, КорЗначение1, ВидСубк1, Субконто1, Реквизит1, Значение1);
			Заголовок = Заголовок+ВидСубконтоСтр(КорВидСубк3, КорСубконто3,,, ВидСубк3, Субконто3,,);
			Заголовок = Заголовок+ВидСубконтоСтр(ВидСубк2, Субконто2,,, КорВидСубк2, КорСубконто2,,);
			Заголовок = Заголовок+ВидСубконтоСтр(КорВидСубк2, КорСубконто2,,, ВидСубк2, Субконто2,,);
			Заголовок = Заголовок+ВидСубконтоСтр(КорВидСубк3, КорСубконто3,,, ВидСубк3, Субконто3,,);
		КонецЕсли;
	КонецЕсли;

	Т.ВывестиСекцию("Секция_1");

	Пока Опер.ПолучитьПроводку() = 1 Цикл
		Если ИспФильтр <> 1 Тогда
			ФильтрНеПройден = 0;
			Для а = 1 по 3 Цикл
				Если ФильтрДебета[а] <> "" Тогда
					ВидСубконтоНайден = 0;
					Для б = 1 по 3 Цикл
						Если (ФильтрДебета[а] = Опер.Дебет.Счет.ВидСубконто(б)) Тогда
							ВидСубконтоНайден = ЗначениеСубконтоУдовлетворяетУсловию(Опер.Дебет.Субконто(б), Реквизит1, Значение1);
						КонецЕсли;
					КонецЦикла;
					
					Если ВидСубконтоНайден = 0 Тогда
					    ФильтрНеПройден = 1;
					КонецЕсли;
				КонецЕсли;
				
				Если ФильтрКредита[а] <> "" Тогда
					ВидСубконтоНайден = 0;
					Для б = 1 по 3 Цикл
						Если (ФильтрКредита[а] = Опер.Кредит.Счет.ВидСубконто(б)) Тогда
							ВидСубконтоНайден = ЗначениеСубконтоУдовлетворяетУсловию(Опер.Кредит.Субконто(б), КорРеквизит1, КорЗначение1);;
						КонецЕсли;
					КонецЦикла;
					
					Если ВидСубконтоНайден = 0 Тогда
					    ФильтрНеПройден = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если ФильтрНеПройден = 1 Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если ДтКт=1 Тогда
				Если Реквизит1<>Опер.Дебет.Субконто(ВидСубк1) Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если Реквизит1<>Опер.Кредит.Субконто(ВидСубк1) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если (Опер.СложнаяПроводка() = 0) Или (Опер.НомерКорреспонденции() > 1) Тогда
			Сумма = Сумма+Опер.Сумма;
		КонецЕсли;
		Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
		Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
		Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
		Т.ВывестиСекцию("Секция_2");
	КонецЦикла;
	Т.ВывестиСекцию("Секция_3");
	Т.ТолькоПросмотр(1);
	Т.Опции(0, 0, 3, 0, "ОпцииПечатиРасшифровкаПоказателейОтчета", "ОтчетРасшифровкаПоказателейОтчета");
	Т.ПовторятьПриПечатиСтроки(3,3);
	Т.ПараметрыСтраницы(,,,,,,,,, 1);
	Т.Показать("Расшифровка показателей отчета ""Анализ состояния налогового учета"" ("+Дата1+"-"+Дата2+")"+?(ТипЗначения(РазделительУчета)=0, "", " "+РазделительУчета), "");

КонецПроцедуры

//-----------------------------------------------
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		СписокПараметров = Форма.Параметр;
		РазделительУчета = СписокПараметров.Получить("РазделительУчета");
		Дата1 = СписокПараметров.Получить("Дата1");
		Дата2 = СписокПараметров.Получить("Дата2");
		ИспФильтр=Число(СписокПараметров.Получить("ИспФильтр"));

		Если ИспФильтр=1 Тогда
			ВыбФильтр = СписокПараметров.Получить("Фильтр");
			
			ДтКт = СписокПараметров.Получить("ДтКт");
			ВидСубк1 = СписокПараметров.Получить("ВидСубконто1");
			Реквизит1 = СписокПараметров.Получить("Реквизит1");
			
		Иначе
			Счет = СписокПараметров.Получить("Счет");
			КорСчет = СписокПараметров.Получить("КорСчет");
			ДтКт = СписокПараметров.Получить("ДтКт");
			ВидСубк1 = СписокПараметров.Получить("ВидСубконто1");
			Субконто1 = СписокПараметров.Получить("Субконто1");
			Реквизит1 = СписокПараметров.Получить("Реквизит1");
			Значение1 = СписокПараметров.Получить("Значение1");
			ВидСубк2 = СписокПараметров.Получить("ВидСубконто2");
			Субконто2 = СписокПараметров.Получить("Субконто2");
			ВидСубк3 = СписокПараметров.Получить("ВидСубконто3");
			Субконто3 = СписокПараметров.Получить("Субконто3");
			КорВидСубк1 = СписокПараметров.Получить("КорВидСубконто1");
			КорСубконто1 = СписокПараметров.Получить("КорСубконто1");
			КорРеквизит1 = СписокПараметров.Получить("КорРеквизит1");
			КорЗначение1 = СписокПараметров.Получить("КорЗначение1");
			КорВидСубк2 = СписокПараметров.Получить("КорВидСубконто2");
			КорСубконто2 = СписокПараметров.Получить("КорСубконто2");
			КорВидСубк3 = СписокПараметров.Получить("КорВидСубконто3");
			КорСубконто3 = СписокПараметров.Получить("КорСубконто3");
			ВыбФильтр = "";
		КонецЕсли;
		Сформировать(ВыбФильтр);
	КонецЕсли;
	
	СтатусВозврата(0);
	
КонецПроцедуры