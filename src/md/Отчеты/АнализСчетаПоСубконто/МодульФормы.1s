//-----------------------------------------------
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем ПредставлениеРУ;
Перем ВидСубконто[3], Субконто[3], ОтборСубконто[3], ПоГруппам[3], Номер[3];
Перем Количественный;
Перем тИтСб, тРазворотСубконто;
Перем ПутьКОтчету;
Перем ВидПериода;

//-----------------------------------------------
Функция ИтогиНеРавныНулю(БухИт, Индекс)
	
	КодВозврата = 0;
	
	Для ТипСуммы = 1 по 3 Цикл
		Если БухИт.СНД(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;

		ИначеЕсли БухИт.СНК(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.ДО(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.КО(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.СКД(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.СКК(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
		КонецЕсли;
	КонецЦикла;
	
	БухИт.ВыбратьКорСчета(1);
	Пока БухИт.ПолучитьКорСчет() = 1 Цикл
		Для ТипСуммы = 1 по 3 Цикл
			Если БухИт.КорДО(ТипСуммы) <> 0 Тогда
				КодВозврата = 1;
				
			ИначеЕсли БухИт.КорКО(ТипСуммы) <> 0 Тогда
				КодВозврата = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Индекс < 3 Тогда
		СледующийИндекс = Индекс + 1;
	    Если ОтборСубконто[СледующийИндекс] = 1 Тогда
		    БухИт.ВыбратьСубконто(СледующийИндекс);
		    Пока БухИт.ПолучитьСубконто(СледующийИндекс) = 1 Цикл
				Если ИтогиНеРавныНулю(БухИт, СледующийИндекс) = 1 Тогда
					БухИт.ПолучитьСубконто(СледующийИндекс,, "");
				    КодВозврата = 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КодВозврата;

КонецФункции // ИтогиНеРавныНулю()

//-----------------------------------------------
Процедура УстановитьВладельца(ПоВсем, РУ, Субконто)
	Назначить = 0;
	Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
 		МДСубконто = Метаданные.Справочник(Субконто.Вид());
		Если МДСубконто.Выбран() = 1 Тогда
	 		Назначить = 1;                      
			Если (ПоВсем = 0) И (ТипЗначенияСтр(РУ) = "Справочник") Тогда
				Если МДСубконто.Владелец.Выбран() = 1 Тогда
					Если МДСубконто.Владелец.Идентификатор = РУ.Вид() Тогда
						Назначить = 2;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Назначить = 1 Тогда
		Субконто.ИспользоватьВладельца("");
	ИначеЕсли Назначить = 2 Тогда
		Субконто.ИспользоватьВладельца(РУ);
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Функция ИтогиПоКорСубконто(Ит, ВидПериода)
	Если ДанныеПоСубсчетам = 0 Тогда
		Возврат 1;
	КонецЕсли;                 
	
	тИтСб = СоздатьОбъект("ТаблицаЗначений");
	тИтСб.НоваяКолонка("КорСчет");
	тИтСб.НоваяКолонка("Ит");
	тИтСб.НоваяКолонка("ВидыКорСубконто");
	
	Ит.ВыбратьКорСчета();
	Пока Ит.ПолучитьКорСчет() = 1 Цикл
		КорСчет = Ит.КорСчет;
	
		Стр = 0;
		Если тРазворотСубконто.НайтиЗначение(КорСчет, Стр, "Счет") = 0 Тогда
			Продолжить;
		КонецЕсли;    
		 
		ВидыКорСубконто = СоздатьОбъект("СписокЗначений");
		тРазворотСубконто.ПолучитьСтрокуПоНомеру(Стр);
		ИтСб = СоздатьОбъект("БухгалтерскиеИтоги");
		ИтСб.ИспользоватьРазделительУчета(РазделительУчета);


		Для А=1 По 3 Цикл
			Если ОтборСубконто[А] <> 3 Тогда
				ИтСб.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
			КонецЕсли;
		КонецЦикла;

		КолВидовКорСубконто = 0;
		Для А=1 По тРазворотСубконто.Список.РазмерСписка() Цикл
			Если тРазворотСубконто.Список.Пометка(А) = 1 Тогда
				ИтСб.ИспользоватьКорСубконто(тРазворотСубконто.Список.ПолучитьЗначение(А),, 1);
				КолВидовКорСубконто = КолВидовКорСубконто+1;         
				ВидыКорСубконто.ДобавитьЗначение(тРазворотСубконто.Список.ПолучитьЗначение(А));
			КонецЕсли;
		КонецЦикла;
	
		Если КолВидовКорСубконто = 0 Тогда
			Продолжить;
		КонецЕсли;                             
		
		тИтСб.НоваяСтрока();
		тИтСб.КорСчет = КорСчет;
		тИтСб.Ит = ИтСб;
		тИтСб.ВидыКорСубконто = ВидыКорСубконто;

		ИтСб.ВключатьСубсчета(0, ДанныеПоСубсчетам);
		Если ПоВалюте = 1 Тогда
			Если ИтСб.ВыполнитьЗапрос(Дата1, Дата2, Счет, КорСчет, Валюта, 3, ВидПериода) = 0 Тогда
				Возврат 0;
			КонецЕсли;
		Иначе
			Если ИтСб.ВыполнитьЗапрос(Дата1, Дата2, Счет, КорСчет,, 3, ВидПериода) = 0 Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 1;
КонецФункции

//----------------------------------------------------------------------
Процедура ПоКорСубконто(Ит, ВидПериода)
	Если ДанныеПоСубсчетам = 0 Тогда
		Возврат;
	КонецЕсли;                 
	
	КорСчет = Ит.КорСчет;             
	Стр = 0;
	Если тИтСб.НайтиЗначение(КорСчет, Стр, "КорСчет") = 0 Тогда
		Возврат;
	КонецЕсли; 
	тИтСб.ПолучитьСтрокуПоНомеру(Стр);
	
	ИтСб = тИтСб.Ит;
	ВидыКорСубконто = тИтСб.ВидыКорСубконто;

	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] = 1 Тогда
			Если ИтСб.ПолучитьСубконто(ВидСубконто[А],, Ит.Субконто(ВидСубконто[А])) = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;                       
	
	Если ВидПериода <> 1 Тогда
		Если ИтСб.ПолучитьПериод(, Ит.НачДата) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	           
	КолВидовКорСубконто = ВидыКорСубконто.РазмерСписка();
	Если КолВидовКорСубконто > 0 Тогда
		КорВидСубконто1 = ВидыКорСубконто.ПолучитьЗначение(1);
		Расшифровка.Установить("КорВидСубконто1", КорВидСубконто1);
		ИтСб.ВыбратьКорСубконто(КорВидСубконто1);
		Пока ИтСб.ПолучитьКорСубконто(КорВидСубконто1) = 1 Цикл
			КорСубконто = ИтСб.КорСубконто(КорВидСубконто1);
			Расшифровка.Установить("КорСубконто1", КорСубконто);
			Т.ВывестиСекцию("Секция_24");
			Если Количественный = 1 Тогда
				Т.ВывестиСекцию("Секция_25");
			КонецЕсли;
			
			Если КолВидовКорСубконто > 1 Тогда
				КорВидСубконто2 = ВидыКорСубконто.ПолучитьЗначение(2);
				Расшифровка.Установить("КорВидСубконто2", КорВидСубконто2);
				ИтСб.ВыбратьКорСубконто(КорВидСубконто2);
				Пока ИтСб.ПолучитьКорСубконто(КорВидСубконто2) = 1 Цикл
					КорСубконто = ИтСб.КорСубконто(КорВидСубконто2);
					Расшифровка.Установить("КорСубконто2", КорСубконто);
					Т.ВывестиСекцию("Секция_24");
					Если Количественный = 1 Тогда
						Т.ВывестиСекцию("Секция_25");
					КонецЕсли;

					Если КолВидовКорСубконто > 2 Тогда
						КорВидСубконто3 = ВидыКорСубконто.ПолучитьЗначение(3);
						Расшифровка.Установить("КорВидСубконто3", КорВидСубконто3);
						ИтСб.ВыбратьКорСубконто(КорВидСубконто3);
						Пока ИтСб.ПолучитьКорСубконто(КорВидСубконто3) = 1 Цикл
							КорСубконто = ИтСб.КорСубконто(КорВидСубконто3);
							Расшифровка.Установить("КорСубконто3", КорСубконто);
							Т.ВывестиСекцию("Секция_24");
							Если Количественный = 1 Тогда
								Т.ВывестиСекцию("Секция_25");
							КонецЕсли;
						КонецЦикла;
						Расшифровка.Установить("КорВидСубконто3");
						Расшифровка.Установить("КорСубконто3");
					КонецЕсли;
				КонецЦикла;
				Расшифровка.Установить("КорВидСубконто2");
				Расшифровка.Установить("КорСубконто2");
			КонецЕсли;
		КонецЦикла;
		Расшифровка.Установить("КорВидСубконто1");
		Расшифровка.Установить("КорСубконто1");
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Функция ПечататьПоКорСчету(КорСчет)
	Если (ДанныеПоСубсчетам = 0) И (КорСчет.Уровень() > 1) Тогда
		Возврат 0;
	КонецЕсли;            
	Сч1 = КорСчет.Родитель();
	Пока Сч1.Выбран() = 1 Цикл                                          
		Стр = 0;
	    Если тРазворотСубконто.НайтиЗначение(Сч1, Стр, "Счет") = 1 Тогда
			тРазворотСубконто.ПолучитьСтрокуПоНомеру(Стр);
			Если тРазворотСубконто.СубСчета = " " Тогда
				Возврат 0;
			КонецЕсли; 
		КонецЕсли;
		Сч1 = Сч1.Родитель();
	КонецЦикла;
	Возврат 1;
КонецФункции
		
//-----------------------------------------------
Функция ПроверкаПериода()
	Если ПустоеЗначение(Дата1) = 1 Тогда
	    Предупреждение("Не указана дата начала периода отчета!");
		Возврат 0;
	КонецЕсли;
	Если Дата1 > Дата2 Тогда
		Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	Если ВидПериода = 7 Тогда
		Если НачМесяца(Дата1) <> Дата1 Тогда
			Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
			"При установке значения периодичности отчета - ""Месяц"","+РазделительСтрок+ 
			"дата начала должна совпадать с первым числом месяца.");
			Возврат 0;
		КонецЕсли; 
		Если КонМесяца(Дата2) <> Дата2 Тогда
			Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
			"При установке значения периодичности отчета - ""Месяц"","+РазделительСтрок+ 
			"дата окончания должна совпадать с последним числом месяца.");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(Субконто[Поз1], Субконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
	ПоменятьЗначения(ПоГруппам[Поз1], ПоГруппам[Поз2]);
	ПоменятьЗначения(Номер[Поз1], Номер[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаДтКт(ДтКт)
	Расшифровка.Установить("ДтКт", ДтКт);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Процедура ЦиклПоКорСчетам(Ит, Расшифровка, Т, ВидПериода)
	Ит.ВыбратьКорСчета();
	Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
	Пока Ит.ПолучитьКорСчет() = 1 Цикл
		Если ПечататьПоКорСчету(Ит.КорСчет) = 0 Тогда
			Продолжить;
		КонецЕсли;
		Расшифровка.Установить("КорСчет", Ит.КорСчет);
		Т.ВывестиСекцию("Секция_4");
		Если Количественный = 1 Тогда
			Т.ВывестиСекцию("Секция_4_1");
		КонецЕсли;
		
		ПоКорСубконто(Ит, ВидПериода);
	КонецЦикла;
	Расшифровка.Установить("Отчет", "КарточкаСчета");
	Расшифровка.Установить("КорСчет");
	Расшифровка.Установить("ДтКт");
КонецПроцедуры

//-----------------------------------------------
Процедура ЦиклПоПериодам(Ит, Расшифровка, Т, ВидПериода)
	Если ВидПериода  = 1 Тогда
		ЦиклПоКорСчетам(Ит, Расшифровка, Т, ВидПериода);
	Иначе
		Ит.ВыбратьПериоды();
		Пока Ит.ПолучитьПериод() = 1 Цикл
			Расшифровка.Установить("Дата1", Ит.НачДата);
			Расшифровка.Установить("Дата2", Ит.КонДата);
			Если ВидПериода = 4 Тогда // Периодичность день
				Период = Ит.НачДата;
			Иначе
				Период = ПериодСтр(Ит.НачДата, Ит.КонДата);
			КонецЕсли;         
			Если Количественный = 1 Тогда
				Т.ВывестиСекцию("Секция_26_1");
			Иначе
				Т.ВывестиСекцию("Секция_26");
			КонецЕсли;
			ЦиклПоКорСчетам(Ит, Расшифровка, Т, ВидПериода);
			Т.ВывестиСекцию("Секция_27");
			Если Количественный = 1 Тогда
				Т.ВывестиСекцию("Секция_27_1");
			КонецЕсли;
			Т.ВывестиСекцию("Секция_28");
			Если Количественный = 1 Тогда
				Т.ВывестиСекцию("Секция_28_1");
			КонецЕсли;
		КонецЦикла;
		Расшифровка.Установить("Дата1", Дата1);
		Расшифровка.Установить("Дата2", Дата2);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура Сформировать(Ручн = 0, ФлагЗакрытияФормы = 0)
	Если Счет.Выбран() = 0 Тогда
		Предупреждение("Не указан счет!");
		Возврат;
	КонецЕсли;

	Количественный = Счет.Количественный;
	
	ВидПериода = Периодичность.ПолучитьЗначение(Периодичность.ТекущаяСтрока());

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	ВидСубконто[1] = ВыбВидСубконто1; Субконто[1] = Субконто1; ОтборСубконто[1] = ?(ВидСубконто[1].Выбран()=1, ОтборСубконто1.ТекущаяСтрока(), 3); ПоГруппам[1] = ПоГруппам1; Номер[1] = 1;
	ВидСубконто[2] = ВыбВидСубконто2; Субконто[2] = Субконто2; ОтборСубконто[2] = ?(ВидСубконто[2].Выбран()=1, ОтборСубконто2.ТекущаяСтрока(), 3); ПоГруппам[2] = ПоГруппам2; Номер[2] = 2;
	ВидСубконто[3] = ВыбВидСубконто3; Субконто[3] = Субконто3; ОтборСубконто[3] = ?(ВидСубконто[3].Выбран()=1, ОтборСубконто3.ТекущаяСтрока(), 3); ПоГруппам[3] = ПоГруппам3; Номер[3] = 3;

	Если (ВидСубконто[1] = ВидСубконто[2]) И (ОтборСубконто[1] <> 3) И (ОтборСубконто[2] <> 3) Или
		 (ВидСубконто[2] = ВидСубконто[3]) И (ОтборСубконто[2] <> 3) И (ОтборСубконто[3] <> 3) Или
		 (ВидСубконто[3] = ВидСубконто[1]) И (ОтборСубконто[3] <> 3) И (ОтборСубконто[1] <> 3) Тогда
		Предупреждение("Выбраны одинаковые виды субконто!");
		Возврат;
	КонецЕсли;

	Если Ручн = 1 Тогда
	    СохранитьЗначение("ОтчРабСчет",Счет);
	КонецЕсли;

	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;

	Если ОтборСубконто[1] = 3 Тогда
		Предупреждение("Не указан вид субконто!");
		Возврат;
	КонецЕсли;
    	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
    Ит.ИспользоватьРазделительУчета(РазделительУчета);

    Заголовок = "";
	ВыбВидыСубконто = "";
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			ВыбВидыСубконто = ВыбВидыСубконто+?(А=1, " ", ", ")+Строка(ВидСубконто[А]);
			Заголовок = Заголовок+?(А=1, "", "; ")+Строка(ВидСубконто[А])+?(ОтборСубконто[А] = 2, ": "+Субконто[А], "");
			Ит.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
		КонецЕсли;
	КонецЦикла;

	Ит.ВключатьСубсчета(0, ДанныеПоСубсчетам);
	Если ПоВалюте = 1 Тогда
		Если Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет,, Валюта, 3, ВидПериода) = 0 Тогда
			Возврат;
		КонецЕсли;
		Расшифровка.Установить("Валюта", Валюта);
		Расшифровка.Установить("ПоВалюте", 1);
	Иначе
		Если Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет,,, 3, ВидПериода) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;                    
	
	тРазворотСубконто = СоздатьОбъект("ТаблицаЗначений");
	тРазворотСубконто.НоваяКолонка("Счет",,,, "Счет", 16);
	тРазворотСубконто.НоваяКолонка("Субсчета",,,, "Субсчета", 9);
	тРазворотСубконто.НоваяКолонка("Субконто",,,, "Субконто", 9);
	тРазворотСубконто.НоваяКолонка("Список");
	тРазворотСубконто.ВидимостьКолонки("Список", 0);
	ВосстановитьЗначение("ОСВРазворотСубконто", тРазворотСубконто);

	Если ИтогиПоКорСубконто(Ит, ВидПериода) = 0 Тогда
		Возврат;
	КонецЕсли;

	Если (ТипЗначенияСтр(Т) <> "Таблица") Или (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
 	Т.ИсходнаяТаблица("Таблица");
 	
 	НазваниеОрганизации = глНазваниеОрганизации(Контекст);

 	Расшифровка.Установить("Отчет", "АнализСчетаПоСубконто");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("Счет", Счет);
	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
   	Расшифровка.Установить("Валюта", Валюта);
   	Расшифровка.Установить("ПоВалюте", ПоВалюте);
	Для А=1 По 3 Цикл
		Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
		Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
		Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
		Расшифровка.Установить("ПоГруппам"+Номер[А], ПоГруппам[А]);
	КонецЦикла;
	Расшифровка.Установить("ВидПериода", ВидПериода);
	ФиксСтрок = 7;
	Если ПутьКОтчету = "" Тогда
		ФиксСтрок = ФиксСтрок+1;
		Т.ВывестиСекцию("Секция_22");
	КонецЕсли;
	Т.ВывестиСекцию("Секция_1");
	Расшифровка.УдалитьВсе();
	Расшифровка.Установить("Отчет", "КарточкаСчета");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("Счет", Счет);
	Расшифровка.Установить("Валюта", Валюта);
	Расшифровка.Установить("ПоВалюте", ПоВалюте);
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
			Если ОтборСубконто[А] = 2 Тогда
				Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
				Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Ит.ВыбратьСубконто();
	Пока Ит.ПолучитьСубконто() = 1 Цикл
		Если ИтогиНеРавныНулю(Ит, 1) = 0 Тогда
	    	Продолжить;
		КонецЕсли;
				
		Расшифровка.Установить("ОтборСубконто"+Номер[1], 2);
		Расшифровка.Установить("Субконто"+Номер[1], Ит.Субконто());
		Если Количественный = 1 Тогда
			Т.ВывестиСекцию("Секция_2_1");
		Иначе
			Т.ВывестиСекцию("Секция_2");
		КонецЕсли;
		Если ОтборСубконто[2] = 1 Тогда
			Ит.ВыбратьСубконто(2);
			Пока Ит.ПолучитьСубконто(2) = 1 Цикл
				Если ИтогиНеРавныНулю(Ит, 2) = 0 Тогда
			    	Продолжить;
				КонецЕсли;
				
				Расшифровка.Установить("ОтборСубконто"+Номер[2], 2);
				Расшифровка.Установить("Субконто"+Номер[2], Ит.Субконто(2));
				Если Количественный = 1 Тогда
					Т.ВывестиСекцию("Секция_3_1");
				Иначе
					Т.ВывестиСекцию("Секция_3");
				КонецЕсли;

				Если ОтборСубконто[3] = 1 Тогда
					Ит.ВыбратьСубконто(3);
					Пока Ит.ПолучитьСубконто(3) = 1 Цикл
						Если ИтогиНеРавныНулю(Ит, 3) = 0 Тогда
					    	Продолжить;
						КонецЕсли;
				
						Расшифровка.Установить("ОтборСубконто"+Номер[3], 2);
						Расшифровка.Установить("Субконто"+Номер[3], Ит.Субконто(3));
						Если Количественный = 1 Тогда
							Т.ВывестиСекцию("Секция_17_1");
						Иначе
							Т.ВывестиСекцию("Секция_17");
						КонецЕсли;
						ЦиклПоПериодам(Ит, Расшифровка, Т, ВидПериода);
						Т.ВывестиСекцию("Секция_19");
						Если Количественный = 1 Тогда
							Т.ВывестиСекцию("Секция_19_1");
						КонецЕсли;
						Т.ВывестиСекцию("Секция_20");
						Если Количественный = 1 Тогда
							Т.ВывестиСекцию("Секция_20_1");
						КонецЕсли;
					КонецЦикла;
					Расшифровка.Установить("Субконто"+Номер[3]);
					Расшифровка.Установить("ОтборСубконто"+Номер[3]);
				Иначе
					ЦиклПоПериодам(Ит, Расшифровка, Т, ВидПериода);
				КонецЕсли;

				Т.ВывестиСекцию("Секция_5");
				Если Количественный = 1 Тогда
					Т.ВывестиСекцию("Секция_5_1");
				КонецЕсли;
				Т.ВывестиСекцию("Секция_6");
				Если Количественный = 1 Тогда
					Т.ВывестиСекцию("Секция_6_1");
				КонецЕсли;
			КонецЦикла;
			Расшифровка.Установить("Субконто"+Номер[2]);
			Расшифровка.Установить("ОтборСубконто"+Номер[2]);
		Иначе
			ЦиклПоПериодам(Ит, Расшифровка, Т, ВидПериода);
		КонецЕсли;

		Т.ВывестиСекцию("Секция_7");
		Если Количественный = 1 Тогда
			Т.ВывестиСекцию("Секция_7_1");
		КонецЕсли;
		Т.ВывестиСекцию("Секция_8");
		Если Количественный = 1 Тогда
			Т.ВывестиСекцию("Секция_8_1");
		КонецЕсли;
	КонецЦикла;
	Расшифровка.Установить("Субконто"+Номер[1]);
	Расшифровка.Установить("ОтборСубконто"+Номер[1]);
	Т.ВывестиСекцию("Секция_9");
	Ит = 0;
	
	НазваниеОрганизации = ?(ПустоеЗначение(НазваниеОрганизации)=1, "", " "+НазваниеОрганизации);
	ПериодИОрганизация = " ("+ПериодСтр(Дата1, Дата2)+")"+НазваниеОрганизации;
	ВерхнийКолонтитул = "Анализ счета "+Счет+" по субконто"+ВыбВидыСубконто+ПериодИОрганизация;
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	Т.ТолькоПросмотр(1);
	Т.Опции(0, 0, ФиксСтрок, 0, "ОпцииПечатиАнализСчетаПоСубконто", "АнализСчетаПоСубконто");
	Т.ОбластьПечати(2);
	Т.ПовторятьПриПечатиСтроки(ФиксСтрок-1,ФиксСтрок);
	Т.ПараметрыСтраницы(1,,,,,,,,, 1);
	Т.Показать(" ("+Субконто1+") "); //NDline Т.Показать(ВерхнийКолонтитул);

	Если (ФлагЗакрытияФормы = 1) Или (Обновить = 2) Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСчета()
	Если Счет.КоличествоСубконто() > 0 Тогда
		НазначитьСчет(ВыбВидСубконто1, Счет, 1);
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто1 = "";
		Субконто1 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		ОтборСубконто1.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто1) = 1 Тогда
	    ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;                
	
	Форма.Субконто1.Доступность(Доступность);
	Форма.ОтборСубконто1.Доступность(Доступность);
	Форма.ВыбВидСубконто1.Доступность(Доступность);
	Форма.ПоГруппам1.Доступность(Доступность);
	Форма.ОчиститьСубконто1.Доступность(Доступность);

	Если Счет.КоличествоСубконто() > 1 Тогда
		НазначитьСчет(ВыбВидСубконто2, Счет, 2);
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		Доступность = 1;
	Иначе
		ВыбВидСубконто2 = "";
		Субконто2 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто2.Выбран() = 0 Тогда
		ОтборСубконто2.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто2) = 1 Тогда
	    ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;                
	
	Форма.Субконто2.Доступность(Доступность);
	Форма.ОтборСубконто2.Доступность(Доступность);
	Форма.ВыбВидСубконто2.Доступность(Доступность);
	Форма.ПоГруппам2.Доступность(Доступность);
	Форма.ОчиститьСубконто2.Доступность(Доступность);

	Если Счет.КоличествоСубконто() > 2 Тогда
		НазначитьСчет(ВыбВидСубконто3, Счет, 3);
		Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		Доступность = 1;
	Иначе
		ВыбВидСубконто3 = "";
		Субконто3 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто3.Выбран() = 0 Тогда
		ОтборСубконто3.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто3) = 1 Тогда
	    ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;                
	
	Форма.Субконто3.Доступность(Доступность);
	Форма.ОтборСубконто3.Доступность(Доступность);
	Форма.ВыбВидСубконто3.Доступность(Доступность);
	Форма.ПоГруппам3.Доступность(Доступность);
	Форма.ОчиститьСубконто3.Доступность(Доступность);

	Если Счет.Валютный = 0 Тогда
	    ПоВалюте = 0;
		Если Метаданные.Валюта.Выбран() = 1 Тогда
	    	Валюта = ПолучитьПустоеЗначение("Справочник."+Метаданные.Валюта.Идентификатор);
		КонецЕсли;
	КонецЕсли;
	Форма.ПоВалюте.Доступность(Счет.Валютный);
	Форма.Валюта.Доступность(Счет.Валютный);

	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВалюты()
	ПоВалюте = Валюта.Выбран();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто1()
	Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто2()
	Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто3()
	Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	Если ПустоеЗначение(Субконто1) = 0 Тогда
	    Если ТипЗначения(Субконто1) = 11 Тогда //Справочник
	    	Если Субконто1.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
	    Если ТипЗначения(Субконто2) = 11 Тогда //Справочник
	    	Если Субконто2.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	Если ПустоеЗначение(Субконто3) = 0 Тогда
	    Если ТипЗначения(Субконто3) = 11 Тогда //Справочник
	    	Если Субконто3.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1.ТекущаяСтрока(1);
	Субконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2.ТекущаяСтрока(1);
	Субконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3.ТекущаяСтрока(1);
	Субконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореРУ()
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры	

//-----------------------------------------------
Процедура ОткрытьНастройку()              
	ОткрытьФормуМодально("Обработка.РазворотСубконто", 1);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОткрытии()
	РасположениеФайла(ПутьКОтчету, "");
	
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;

	ОтборСубконто1.УдалитьВсе();
	ОтборСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто1.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто1.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто2.УдалитьВсе();
	ОтборСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто2.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто2.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто3.УдалитьВсе();
	ОтборСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто3.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто3.ДобавитьЗначение(3, "Не учитывать");
	
	Периодичность.УдалитьВсе();
	Периодичность.ДобавитьЗначение(1, "Период в целом");
	Периодичность.ДобавитьЗначение(4, "День");
	Периодичность.ДобавитьЗначение(5, "Неделя");
	Периодичность.ДобавитьЗначение(6, "Декада");
	Периодичность.ДобавитьЗначение(7, "Месяц");
	Периодичность.ДобавитьЗначение(8, "Квартал");
	Периодичность.ДобавитьЗначение(9, "Год");

	Если Метаданные.Валюта.Выбран() = 1 Тогда
		Форма.Валюта.НазначитьТип("Справочник."+Метаданные.Валюта.Идентификатор);
	Иначе
		Форма.ВалютаТекст.Доступность(0);
		Форма.Валюта.Доступность(0);
		Форма.ПоВалюте.Доступность(0);
	КонецЕсли;

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
	   	Дата1 = глРасшифровка.Получить("Дата1");
	   	Дата2 = глРасшифровка.Получить("Дата2");
	   	Счет = глРасшифровка.Получить("Счет");
	   	ПриВыбореСчета();
	   	ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
		Валюта = глРасшифровка.Получить("Валюта");
		ПоВалюте = глРасшифровка.Получить("ПоВалюте");
	   	ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Субконто1 = глРасшифровка.Получить("Субконто1");
		ОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1"));
		ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
	   	ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		Субконто2 = глРасшифровка.Получить("Субконто2");
		ОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2"));
		ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");
	   	ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
		Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		Субконто3 = глРасшифровка.Получить("Субконто3");
		ОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3"));
		ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
		
		ВидПериода = глРасшифровка.Получить("ВидПериода");
		Если ТипЗначенияСтр(ВидПериода) = "Число" Тогда
			Если (ВидПериода < 4) Или (ВидПериода > 9) Тогда
				ВидПериода = 1;
			Иначе
				ВидПериода = ВидПериода-2;
			КонецЕсли;                          
		Иначе     
			ВидПериода = 1;
		КонецЕсли;
		Периодичность.ТекущаяСтрока(ВидПериода);
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбРазделительУчета = 1;
		РУ = БухИтоги.ИспользоватьРазделительУчета();
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
		Если Счет.Выбран()=0 Тогда
		    ВосстановитьЗначение("ОтчРабСчет",Счет);
		КонецЕсли;
		ПриВыбореСчета();
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового()
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
	ПриВыбореСчета();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, Флаг)
	//Обработка выбора субконто типа "Документ"
	Если Лев(ИдентЭлемДиалога, 8) = "Субконто" Тогда
		Ном = Число(Прав(ИдентЭлемДиалога, 1));
		Если Ном = 1 Тогда
		    _ВидСубконто = ВыбВидСубконто1;
		ИначеЕсли Ном = 2 Тогда
		    _ВидСубконто = ВыбВидСубконто2;
		ИначеЕсли Ном = 3 Тогда
		    _ВидСубконто = ВыбВидСубконто3;
		КонецЕсли;
		Если Лев(_ВидСубконто.ТипСубконто(), 8) = "Документ" Тогда
			//Предусмотрена возможность выбора субконто типа "Документ" из специально созданного в конфигурации журнала
			//Идентификатор такого журнала должен быть такой же, как у вида субконто
			Журнал = Метаданные.Журнал(_ВидСубконто.Идентификатор());
		    Если Журнал.Выбран() = 0 Тогда
		        Флаг = 1;
				Возврат;
			КонецЕсли;
			//Тип первой ссылки первой графы этого журнала может определять тип параметра,
			//передаваемого в форму журнала документов.
			//Данный параметр может использоваться, например, для установки отбора документов в открываемой форме
			Флаг = 0;
			Если Журнал.Графа(1).Выбран() = 0 Тогда
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				Возврат;
			КонецЕсли;
			Если Журнал.Графа(1).Ссылки.Количество() > 0 Тогда
				РеквизитОтбора = Журнал.Графа(1).Ссылки.Получить(1).Тип+"."+Журнал.Графа(1).Ссылки.Получить(1).Вид;
				Если РеквизитОтбора = ВыбВидСубконто1.ТипСубконто() Тогда
					КонтекстЖурнала = Субконто1;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто2.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто2;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто3.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто3;
				Иначе
					ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				КонецЕсли;
				ОткрытьФорму("Журнал."+Журнал.Идентификатор, КонтекстЖурнала);
			Иначе
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
			КонецЕсли;
		КонецЕсли;
		глРазделительУчета = РазделительУчета;
	КонецЕсли;
КонецПроцедуры