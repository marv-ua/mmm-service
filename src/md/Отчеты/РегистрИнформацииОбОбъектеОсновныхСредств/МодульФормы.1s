//******************************************************************************
// Производственное(ВидРасхода)
//
// Параметры:
//  ВидРасхода - вид расхода для целей налогового учета.
//
// Возвращаемое значение:
//  "Да" - основное средство непосредственно используется при производстве товаров (работ, услуг);
//  "Нет" - иное.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Функция определяет, используется ли основное средство непосредственно при производстве товаров (работ, услуг).
//
Функция Производственное(ВидРасхода)
	Перем НепосредственноИспользуетсяПриПроизводстве;
	
	НепосредственноИспользуетсяПриПроизводстве = "Нет";
    Если ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
        НепосредственноИспользуетсяПриПроизводстве = "Да";
    КонецЕсли;
	
	Возврат НепосредственноИспользуетсяПриПроизводстве;
	
КонецФункции // Производственное()

//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
//
Процедура Сформировать()
	
	Если ПустоеЗначение(ОсновноеСредство) = 1 Тогда
	    Предупреждение("Не указано основное средство!", 60);
		Возврат;
	КонецЕсли;
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Сч_Н05_01 = СчетПоКоду("Н05.01");
	Сч_Н05_02 = СчетПоКоду("Н05.02");
	
	
	Состояние("Заполнение выходной таблицы...");

	Таб = СоздатьОбъект("Таблица");
    
	//Налогоплательщик
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
	СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	
	//ИНН
	ИНН = Константа.ИННОрганизации;

	// Наименование объекта
	Наименование = ОсновноеСредство.Наименование + ", Инв. №" + ОсновноеСредство.Код;
    
	// Дата приобретения
	ДатаПриобретения = ОсновноеСредство.ДатаПриобретения;
	
	// Первоначальная стоимость
	ПервоначальнаяСтоимость = ОсновноеСредство.ПервоначальнаяСтоимостьН.Получить(КонДата);
	Если ПервоначальнаяСтоимость = 0 Тогда
		Сообщить("Не задана первоначальная стоимость для целей налогового учета.", "!");
	КонецЕсли;

	// Амортизационная группа
	АмортизационнаяГруппа = ОсновноеСредство.АмортизационнаяГруппа;

	// Срок полезного использования
	СрокПолезногоИспользования = ОсновноеСредство.СрокПолезногоИспользованияН.Получить(КонДата);

	// Метод начисления амортизации
	МетодНачисленияАмортизации = ОсновноеСредство.МетодНачисленияАмортизации;
	
	// Базовая стоимость основного средства
    БазоваяСтоимость = ОсновноеСредство.БазоваяСтоимость.Получить(КонДата);
    
	// Дата снятия объекта с учета и основание
	ДатаСнятияОбъектаСУчета = ?(ОсновноеСредство.ДатаВыбытия <= КонДата,ОсновноеСредство.ДатаВыбытия,"");
	ОснованиеДляСнятияОбъектаСУчета = "";

	Если ПустоеЗначение(ДатаСнятияОбъектаСУчета) = 0 Тогда
		СостояниеОС = СоздатьОбъект("Периодический");
		СостояниеОС.ИспользоватьОбъект("Состояние", ОсновноеСредство);
		СостояниеОС.ВыбратьЗначения();
		Пока СостояниеОС.ПолучитьЗначение() = 1 Цикл
			
			Если (СостояниеОС.Значение = Перечисление.СостоянияОС.Выбыло) Тогда
				ОснованиеДляСнятияОбъектаСУчета = ?(ПустоеЗначение(СостояниеОС.ТекущийДокумент()) = 1, "", глПредставлениеДокумента(СостояниеОС.ТекущийДокумент()));
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// II. Принадлежность к основным средствам, непосредственно используемым при производстве товаров, работ, услуг
	
	Таб.ВывестиСекцию("Шапка1");
    
	ДатаНачалаНачисленияАмортизации = Макс(ОсновноеСредство.ДатаВводаВЭксплуатацию, '01.01.2002');
	ДатаГраница = Макс(ДатаНачалаНачисленияАмортизации, НачДата);
	
	Если ДатаГраница <= КонДата Тогда
		
		Если ДатаГраница = НачДата Тогда
			ДатаСовершенияОперации = "На дату начала регистра";
			
		Иначе
			ДатаСовершенияОперации = ДатаГраница;
		КонецЕсли;
		
		// Принадлежность к основным средствам, непосредственно участвующим при производстве товаров (работ, услуг)
		Принадлежность = СоздатьОбъект("Периодический");
		Принадлежность.ИспользоватьОбъект("ВидРасхода", ОсновноеСредство);
		ПризнакПринадлежности = Производственное(Принадлежность.ЗначениеНаДату(ДатаГраница));
		Таб.ВывестиСекцию("Строка1");
		
		Принадлежность.ВыбратьЗначения(ДатаГраница + 1,КонДата);
		Пока Принадлежность.ПолучитьЗначение() = 1 Цикл
			СледующийПризнакПринадлежности = Производственное(Принадлежность.Значение);
			Если ПризнакПринадлежности <> СледующийПризнакПринадлежности Тогда
				ПризнакПринадлежности = СледующийПризнакПринадлежности;
				ДатаСовершенияОперации = Принадлежность.ДатаЗнач;
				Таб.ВывестиСекцию("Строка1");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// III. Применение специального коэффициента
	
	Таб.ВывестиСекцию("Шапка2");
                  
	Если ДатаГраница <= КонДата Тогда                                           
		Если ДатаГраница = НачДата Тогда
			ДатаНачалаПримененияСпециальногоКоэффициента = "На дату начала регистра";
			
		Иначе
			ДатаНачалаПримененияСпециальногоКоэффициента = ДатаГраница;	
		КонецЕсли;
	
		// Применение специального коэффициента
		СпецКоэффициент = СоздатьОбъект("Периодический");
		СпецКоэффициент.ИспользоватьОбъект("СпециальныйКоэффициент",ОсновноеСредство);
		
		//Первое значение
		СпециальныйКоэффициент = Число(СпецКоэффициент.ЗначениеНаДату(ДатаГраница));
		ПредСпециальныйКоэффициент = СпециальныйКоэффициент; //запоминаем предыдущее значение
		Если СпециальныйКоэффициент = 1 Тогда
			СпециальныйКоэффициент = "---";
		КонецЕсли;                       
		Таб.ВывестиСекцию("Строка2");
	    
		СпецКоэффициент.ВыбратьЗначения(ДатаГраница + 1,КонДата);
		Пока СпецКоэффициент.ПолучитьЗначение() = 1 Цикл
			СпециальныйКоэффициент = СпецКоэффициент.Значение;
			Если ПредСпециальныйКоэффициент <> СпециальныйКоэффициент Тогда
				ДатаНачалаПримененияСпециальногоКоэффициента = СпецКоэффициент.ДатаЗнач;
				Таб.ВывестиСекцию("Строка2");
			КонецЕсли;
			ПредСпециальныйКоэффициент = СпециальныйКоэффициент;
		КонецЦикла;
	КонецЕсли;
		
	// IV. Изменение первоначальной стоимости объекта основных средств
	        
	Таб.ВывестиСекцию("Шапка3");
	
	Если ДатаГраница <= КонДата Тогда
		
		БИ = СоздатьОбъект("БухгалтерскиеИтоги");
		БИ.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства, ОсновноеСредство);
		БИ.ВыполнитьЗапрос(ДатаГраница, КонДата, "Н05.01", , , , "Операция","С");
		
		ТекПервоначальнаяСтоимость = 0;
		Если ДатаГраница = НачДата Тогда
			
			// Первоначальная стоимость на дату ввода в эксплуатацию.
			ПервоначальнаяСтоимостьНаНачало = ОсновноеСредство.ПервоначальнаяСтоимостьН.Получить(ДатаНачалаНачисленияАмортизации);
			Если ПервоначальнаяСтоимостьНаНачало <= 0 Тогда
				ПериодическийРеквизит = СоздатьОбъект("Периодический"); 
				ПериодическийРеквизит.ИспользоватьОбъект("ПервоначальнаяСтоимостьН", ОсновноеСредство);
				ПериодическийРеквизит.ВыбратьЗначения(ДатаНачалаНачисленияАмортизации,);
				Пока (ПервоначальнаяСтоимостьНаНачало <= 0) и (ПериодическийРеквизит.ПолучитьЗначение() = 1) Цикл
					ПервоначальнаяСтоимостьНаНачало = ПериодическийРеквизит.Значение;
				КонецЦикла;
			КонецЕсли;
		
			ДатаСовершенияОперации = "На дату начала регистра";
			ТекПервоначальнаяСтоимость = БИ.СНД();
			ИзменениеПервоначальнойСтоимости = ТекПервоначальнаяСтоимость - ПервоначальнаяСтоимостьНаНачало;
			Таб.ВывестиСекцию("Строка3");
		КонецЕсли;
		
		БИ.ВыбратьПериоды();
		Пока БИ.ПолучитьПериод() = 1 Цикл
			ДатаСовершенияОперации = БИ.Операция.ДатаОперации;
			ИзменениеПервоначальнойСтоимости = БИ.СКД() - ТекПервоначальнаяСтоимость;
			Если ИзменениеПервоначальнойСтоимости <> 0 Тогда
				
				Если ТекПервоначальнаяСтоимость = 0 Тогда // принятие к учету
					ТекПервоначальнаяСтоимость = ТекПервоначальнаяСтоимость + ИзменениеПервоначальнойСтоимости;
					ИзменениеПервоначальнойСтоимости = 0;
					
				Иначе
					ТекПервоначальнаяСтоимость = ТекПервоначальнаяСтоимость + ИзменениеПервоначальнойСтоимости;
				КонецЕсли;
				
				Таб.ВывестиСекцию("Строка3");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
    
	// V. Перерывы в начислении амортизации
	
	// Дата начала прекращения начисления амортизации
	// Основание прекращения начисления амортизации
	// Количество месяцев перерыва в начислении амортизации
	// Дата окончания прекращения начисления амортизации 
	// Основание окончания прекращения начисления амортизации 
	Таб.ВывестиСекцию("Шапка4");     
	
	Если ДатаГраница <= КонДата Тогда
	
		ТабЗнач = СоздатьОбъект("ТаблицаЗначений");
		ТабЗнач.НоваяКолонка("ДатаНачалаПрекращенияНачисленияАмортизации", "Дата");
		ТабЗнач.НоваяКолонка("ОснованиеПрекращенияНачисленияАмортизации", "Документ");
		ТабЗнач.НоваяКолонка("ДатаОкончанияПрекращенияНачисленияАмортизации", "Дата");
		ТабЗнач.НоваяКолонка("ОснованиеОкончанияПрекращенияНачисленияАмортизации", "Документ");
		
		НачислятьАмортизацию = СоздатьОбъект("Периодический");
		НачислятьАмортизацию.ИспользоватьОбъект("НачислятьАмортизацию", ОсновноеСредство);
		                                   
		ФлажокНачислятьАмортизацию = 1;
		
		// Подсчет кол-ва месяцев полезного использования на начало регистра
		КоличествоМесяцевПолезногоИспользованияНаНач = 0;
		КонецМесяца = КонМесяца(ДатаНачалаНачисленияАмортизации);                                                     
		Пока КонецМесяца < НачДата Цикл
			ФлажокНачислятьАмортизацию = НачислятьАмортизацию.ЗначениеНаДату(КонецМесяца);
			Если (ФлажокНачислятьАмортизацию = 1)
			   и (КонецМесяца <> КонМесяца(ОсновноеСредство.ДатаВводаВЭксплуатацию)) Тогда
			    КоличествоМесяцевПолезногоИспользованияНаНач = КоличествоМесяцевПолезногоИспользованияНаНач + 1;
			КонецЕсли;
			КонецМесяца = ДобавитьМесяц(КонецМесяца, 1);
		КонецЦикла;
		 
		// Если на начало регистра ОС было введено в эксплуатацию и был перерыв начисления амортизации,
		// то находим дату и документ, которым был введен этот перерыв.
		ФлажокНачислятьАмортизацию = НачислятьАмортизацию.ЗначениеНаДату(ДатаГраница);
		Если ДатаНачалаНачисленияАмортизации < НачДата Тогда
			Если ФлажокНачислятьАмортизацию = 0 Тогда
				ДатаНачалаПрекращенияНачисленияАмортизации = НачДата; // на тот случай, если не найдем дату и документ
				ОснованиеПрекращенияНачисленияАмортизации = "";       // на тот случай, если не найдем дату и документ
				НачислятьАмортизацию.ВыбратьЗначения(ДатаНачалаНачисленияАмортизации, НачДата - 1);
				Если НачислятьАмортизацию.ОбратныйПорядок() = 1 Тогда
					НачислятьАмортизацию.ВыбратьЗначения(, НачДата - 1);
					Если НачислятьАмортизацию.ПолучитьЗначение() = 1 Тогда
						ДатаНачалаПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ДатаЗнач;
						ОснованиеПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ТекущийДокумент();
					КонецЕсли;
				КонецЕсли;
				ТабЗнач.НоваяСтрока();
				ТабЗнач.ДатаНачалаПрекращенияНачисленияАмортизации = ДатаНачалаПрекращенияНачисленияАмортизации;
				ТабЗнач.ОснованиеПрекращенияНачисленияАмортизации = ОснованиеПрекращенияНачисленияАмортизации;
			КонецЕсли;
		КонецЕсли;
		    
		// Выбираем изменение флажка начисления амортизации за период отчета
		НачислятьАмортизацию.ОбратныйПорядок(0);
		НачислятьАмортизацию.ВыбратьЗначения(ДатаГраница, );
		Пока НачислятьАмортизацию.ПолучитьЗначение() = 1 Цикл
			
			// Если на конец отчета был перерыв начисления амортзации, тогда попытаемся найти его окончание
		    Если НачислятьАмортизацию.ДатаЗнач > КонДата Тогда
				Если ФлажокНачислятьАмортизацию = 1 Тогда 
				    Прервать; 
					
				Иначе
					Если НачислятьАмортизацию.Значение = 1 Тогда
						ТабЗнач.ДатаОкончанияПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ДатаЗнач;
						ТабЗнач.ОснованиеОкончанияПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ТекущийДокумент();
						Прервать
					Иначе
						Продолжить;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
			
			Если (ФлажокНачислятьАмортизацию = 1) и
			     (НачислятьАмортизацию.Значение = 0) Тогда
				ТабЗнач.НоваяСтрока();
				ТабЗнач.ДатаНачалаПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ДатаЗнач;
				ТабЗнач.ОснованиеПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ТекущийДокумент();
				
			ИначеЕсли (ФлажокНачислятьАмортизацию = 0) и
			          (НачислятьАмортизацию.Значение = 1) Тогда
				ТабЗнач.ДатаОкончанияПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ДатаЗнач;
				ТабЗнач.ОснованиеОкончанияПрекращенияНачисленияАмортизации = НачислятьАмортизацию.ТекущийДокумент();
	
			КонецЕсли;
	
			ФлажокНачислятьАмортизацию = НачислятьАмортизацию.Значение;
		КонецЦикла;
	    
		Если (ТабЗнач.КоличествоСтрок() > 0) Тогда
			ТабЗнач.ВыбратьСтроки();
			Пока ТабЗнач.ПолучитьСтроку() = 1 Цикл
			
				ДатаПрекращенияНачисленияАмортизации = ТабЗнач.ДатаНачалаПрекращенияНачисленияАмортизации;
				ОснованиеПрекращения = ?(ПустоеЗначение(ТабЗнач.ОснованиеПрекращенияНачисленияАмортизации) = 1, "", глПредставлениеДокумента(ТабЗнач.ОснованиеПрекращенияНачисленияАмортизации));
				ДатаВозобновленияНачисленияАмортизации = ТабЗнач.ДатаОкончанияПрекращенияНачисленияАмортизации;
				ОснованиеВозобновления = ?(ПустоеЗначение(ТабЗнач.ОснованиеОкончанияПрекращенияНачисленияАмортизации) = 1, "", глПредставлениеДокумента(ТабЗнач.ОснованиеОкончанияПрекращенияНачисленияАмортизации));
	
				Таб.ВывестиСекцию("Строка4");
	        КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	          
	// IV. Суммы начисленной амортизации
	
	Если ДатаГраница <= КонДата Тогда
		
		БИ.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства, ОсновноеСредство);
		БИ.ВыполнитьЗапрос(НачМесяца(ДатаГраница), КонДата, "Н05.02", , , , "Месяц");
		
		Если (ДатаГраница = НачДата)Тогда
			СуммаНакопленнойАмортизацииНаНач = БИ.СНК();
		Иначе
			СуммаНакопленнойАмортизацииНаНач = 0;
		КонецЕсли;
		
		Таб.НоваяСтраница();
		Таб.ВывестиСекцию("Шапка5");
		
		МесяцПолезногоИспользования = КоличествоМесяцевПолезногоИспользованияНаНач;
		СуммаНачисленнойАмортизацииНарастающимИтогом = СуммаНакопленнойАмортизацииНаНач;
		НачалоМесяца = НачМесяца(ДатаГраница);
		Пока НачалоМесяца < КонДата Цикл
			СуммаНачисленнойАмортизации = 0;
			МесяцГодНачисленияАмортизации = Формат(НачалоМесяца,"Д ММММГГГГ");
			Если БИ.ПолучитьПериод(, НачалоМесяца) = 1 Тогда
				СуммаНачисленнойАмортизации = БИ.КО(); 
				СуммаНачисленнойАмортизацииНарастающимИтогом = СуммаНачисленнойАмортизацииНарастающимИтогом + СуммаНачисленнойАмортизации;
				Если СуммаНачисленнойАмортизации <> 0 Тогда
					МесяцПолезногоИспользования = МесяцПолезногоИспользования + 1;
					Таб.ВывестиСекцию("Строка5");
				КонецЕсли;
			КонецЕсли;                           
			
			// Проверим начиление амортизации (должно ли вообще оно быть в этом месяце)
			ДолжнаБытьНачисленаАмортизация = глРасчетАмортизацииОС(ОсновноеСредство, НачалоМесяца).Получить("РассчитаннаяАмортизацияНалог");
			Если (СуммаНачисленнойАмортизации = 0) и (ДолжнаБытьНачисленаАмортизация <> 0)  Тогда
				Сообщить("За " + МесяцГодНачисленияАмортизации + " должно быть начисление амортизации","!");
			ИначеЕсли (СуммаНачисленнойАмортизации <> 0) и (ДолжнаБытьНачисленаАмортизация = 0) и (НачМесяца(ДатаСнятияОбъектаСУчета) <> НачалоМесяца) Тогда
				Сообщить("За " + МесяцГодНачисленияАмортизации + " амортизация не должна быть начислена","!");
			КонецЕсли;
			
			НачалоМесяца = ДобавитьМесяц(НачалоМесяца, 1);
		КонецЦикла
	КонецЕсли;
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
    Таб.ВывестиСекцию("Подвал");
	
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрИнформацииОбОбъектеОсновныхСредств", "ОкноРегистрИнформацииОбОбъектеОсновныхСредств");
	Таб.Показать("Регистр информации об объекте основных средств");

КонецПроцедуры // Сформировать  

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
    НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
	
	ОсновноеСредство.ВыборГруппы(0);
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбОсновноеСредство,ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если ИдентЭлемДиалога = "ОсновноеСредство" Тогда
		Если ВыбОсновноеСредство.СрокПолезногоИспользованияН.Получить(КонДата) = 0 Тогда
			Предупреждение("Основное средство не входит в состав амортизируемого имущества!", 60);
			СтатусВозврата(0); 
		КонецЕсли;                                      
	КонецЕсли;
	
КонецПроцедуры
