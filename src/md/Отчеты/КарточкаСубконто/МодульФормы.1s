//-----------------------------------------------
Перем ОтборСубк1, ОтборСубк2, ОтборСубк3;
Перем Субконто1, Субконто2, Субконто3;
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем ПланСчетов;
Перем ВыбПланСчетов;
Перем ПредставлениеРУ;
Перем Количественный, Валютный;
Перем ВидПериода, НачалоПериода, КонецПериода;
Перем ДО, ДОКол, ДОВал, КО, КОКол, КОВал;

//-----------------------------------------------
Процедура УстановитьВладельца(ПоВсем, РУ, Субконто)
	Назначить = 0;
	Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
 		МДСубконто = Метаданные.Справочник(Субконто.Вид());
		Если МДСубконто.Выбран() = 1 Тогда
	 		Назначить = 1;                      
			Если (ПоВсем = 0) И (ТипЗначенияСтр(РУ) = "Справочник") Тогда
				Если МДСубконто.Владелец.Выбран() = 1 Тогда
					Если МДСубконто.Владелец.Идентификатор = РУ.Вид() Тогда
						Назначить = 2;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Назначить = 1 Тогда
		Субконто.ИспользоватьВладельца("");
	ИначеЕсли Назначить = 2 Тогда
		Субконто.ИспользоватьВладельца(РУ);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Функция ПроверкаПериода()
	Если ПустоеЗначение(Дата1) = 1 Тогда
	    Предупреждение("Не указана дата начала периода отчета!");
		Возврат 0;
	КонецЕсли;
	Если Дата1 > Дата2 Тогда
		Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//-----------------------------------------------
Функция ЗначенияВСтроку(Значения)
	Если ТипЗначенияСтр(Значения) = "СписокЗначений" Тогда
		С = "";
		Для А=1 По Значения.РазмерСписка() Цикл
			Если А <> 1 Тогда
				С = С+" ";
			КонецЕсли;
			С = С+Значения.ПолучитьЗначение(А);
		КонецЦикла;
		Возврат СокрЛП(С);
	Иначе
		Возврат СокрЛП(Значения);
	КонецЕсли;
КонецФункции

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Функция НачПериода(Д)
Перем Д1;
	Если ВидПериода = 4 Тогда // День
		Д1 = Д;
	ИначеЕсли ВидПериода = 5 Тогда // Неделя
		Д1 = НачНедели(Д);
	ИначеЕсли ВидПериода = 6 Тогда // Декада
		Ч = ДатаЧисло(Д);
		Если Ч < 10 Тогда
			Ч = 1;
		ИначеЕсли Ч < 20 Тогда
			Ч = 10;
		Иначе
			Ч = 20;
		КонецЕсли;
		Д1 = Дата(ДатаГод(Д), ДатаМесяц(Д), Ч);
	ИначеЕсли ВидПериода = 7 Тогда // Месяц
		Д1 = НачМесяца(Д);
	ИначеЕсли ВидПериода = 8 Тогда // Квартал
		Д1 = НачКвартала(Д);
	ИначеЕсли ВидПериода = 9 Тогда // Год
		Д1 = НачГода(Д);                  
	КонецЕсли;
	Возврат Д1;
КонецФункции

//-----------------------------------------------
Функция КонПериода(Д)
Перем Д1;
	Если ВидПериода = 4 Тогда // День
		Д1 = Д;
	ИначеЕсли ВидПериода = 5 Тогда // Неделя
		Д1 = КонНедели(Д);
	ИначеЕсли ВидПериода = 6 Тогда // Декада
		Ч = ДатаЧисло(Д);
		Если Ч < 10 Тогда
			Ч = 9;
		ИначеЕсли Ч < 20 Тогда
			Ч = 19;
		Иначе
			Ч = ДатаЧисло(КонМесяца(Д));
		КонецЕсли;
		Д1 = Дата(ДатаГод(Д), ДатаМесяц(Д), Ч);
	ИначеЕсли ВидПериода = 7 Тогда // Месяц
		Д1 = КонМесяца(Д);
	ИначеЕсли ВидПериода = 8 Тогда // Квартал
		Д1 = КонКвартала(Д);
	ИначеЕсли ВидПериода = 9 Тогда // Год
		Д1 = КонГода(Д);                  
	КонецЕсли;
	Возврат Д1;
КонецФункции

//-----------------------------------------------
Процедура ДобавитьОбороты(Опер, Дт, Кт)
Перем Стр;
	Если Дт = 1 Тогда
		ДО = ДО+Опер.Сумма;
		Если Количественный = 1 Тогда
			ДОКол = ДОКол+Опер.Количество;
 		КонецЕсли;
		Если (Валютный = 1) И (ПоВалюте = 1) Тогда
	 		ДОВал = ДОВал+Опер.ВалСумма;
 		КонецЕсли;
	КонецЕсли;
	Если Кт = 1 Тогда
		КО = КО+Опер.Сумма;
		Если Количественный = 1 Тогда
			КОКол = КОКол+Опер.Количество;
 		КонецЕсли;
		Если (Валютный = 1) И (ПоВалюте = 1) Тогда
 			КОВал = КОВал+Опер.ВалСумма;
 		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВывестиОбороты()
	Если ПустоеЗначение(НачалоПериода) = 1 Тогда
	    Возврат;
	КонецЕсли;
	Период = "Обороты за ";
	Если ВидПериода = 4 Тогда                  
		Период = Период+НачалоПериода;
	Иначе     
		Период = Период+ПериодСтр(НачалоПериода, КонецПериода);
	КонецЕсли;
	
	Секция = Т.ПолучитьСекцию("Секция_17");
	Если (Валютный = 1) И (ПоВалюте = 1) Тогда       
		Т.ВывестиСекцию(Секция);
		Секция = Т.ПолучитьСекцию("Секция_18");
	КонецЕсли;
	Если Количественный = 1 Тогда
		Т.ВывестиСекцию(Секция);
		Секция = Т.ПолучитьСекцию("Секция_19");
	КонецЕсли;                              
	Область = Секция.Область(1, 1, 1, 9);
	Область.РамкаСнизу(4);
	Т.ВывестиСекцию(Секция);
КонецПроцедуры

//-----------------------------------------------
Процедура СформироватьОтчет(ФлагЗакрытияФормы = 0)
	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		Предупреждение("Не указан вид субконто!");
		Возврат;
	КонецЕсли;

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
                   
	Если ОтборСубконто1 = 1 Тогда
		ОтборСубк1 = 2;
		Субк1 = Субконто1;
	Иначе              
		ОтборСубк1 = 1;
		Субк1 = ПолучитьПустоеЗначение();
	КонецЕсли;
		
	Если ОтборСубконто2 = 1 Тогда
		ОтборСубк2 = 2;
		Субк2 = Субконто2;
	Иначе              
		ОтборСубк2 = 1;
		Субк2 = ПолучитьПустоеЗначение();
	КонецЕсли;
		
	Если ОтборСубконто3 = 1 Тогда
		ОтборСубк3 = 2;
		Субк3 = Субконто3;
	Иначе              
		ОтборСубк3 = 1;
		Субк3 = ПолучитьПустоеЗначение();
	КонецЕсли;
		

	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		ОтборСубк1 = 3;
	КонецЕсли;

	Если ВыбВидСубконто2.Выбран() = 0 Тогда
		ОтборСубк2 = 3;
	КонецЕсли;

	Если ВыбВидСубконто3.Выбран() = 0 Тогда
		ОтборСубк3 = 3;
	КонецЕсли;
	
	Если (ВыбВидСубконто1 = ВыбВидСубконто2) И (ОтборСубк1 <> 3) И (ОтборСубк2 <> 3) Или
		 (ВыбВидСубконто1 = ВыбВидСубконто3) И (ОтборСубк1 <> 3) И (ОтборСубк3 <> 3) Или
		 (ВыбВидСубконто3 = ВыбВидСубконто2) И (ОтборСубк3 <> 3) И (ОтборСубк2 <> 3) Тогда
		Предупреждение("Выбраны одинаковые виды субконто!");
		Возврат;
	КонецЕсли;

	ВидПериода = 1;
	Если Периодичность.ТекущаяСтрока() <> 0 Тогда
		ВидПериода = Периодичность.ПолучитьЗначение(Периодичность.ТекущаяСтрока());
	КонецЕсли;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	
	ВыбВидыСубконто = "";
	Если ОтборСубк1 <> 3 Тогда
		ВыбВидыСубконто = ВыбВидыСубконто+?(ВыбВидыСубконто=""," ",", ")+Строка(ВыбВидСубконто1);
		Заголовок = СокрЛП(ВыбВидСубконто1)+?(ОтборСубк1=2,": "+ЗначенияВСтроку(Субк1),"");
		Ит.ИспользоватьСубконто(ВыбВидСубконто1, Субк1, ОтборСубк1);
	КонецЕсли;
	Если ОтборСубк2 <> 3 Тогда
		ВыбВидыСубконто = ВыбВидыСубконто+?(ВыбВидыСубконто=""," ",", ")+Строка(ВыбВидСубконто2);
		Заголовок = Заголовок+?(Заголовок="","","; ")+ВыбВидСубконто2+?(ОтборСубк2=2,": "+ЗначенияВСтроку(Субк2), "");
		Ит.ИспользоватьСубконто(ВыбВидСубконто2, Субк2, ОтборСубк2);
	КонецЕсли;
	Если ОтборСубк3 <> 3 Тогда
		ВыбВидыСубконто = ВыбВидыСубконто+?(ВыбВидыСубконто=""," ",", ")+Строка(ВыбВидСубконто3);
		Заголовок = Заголовок+?(Заголовок="","","; ")+ВыбВидСубконто3+?(ОтборСубк3=2,": "+ЗначенияВСтроку(Субк3), "");
		Ит.ИспользоватьСубконто(ВыбВидСубконто3, Субк3, ОтборСубк3);
	КонецЕсли;

    Если ВыбПланСчетов = 1 Тогда
        ПланСчетов = ВыбранныйПланСчетов();
    КонецЕсли;
    Ит.ИспользоватьРазделительУчета(РазделительУчета);
    Ит.ИспользоватьПланСчетов(ПланСчетов);
	Если ПоВалюте = 1 Тогда
		Заголовок=Заголовок+" : "+Валюта;
		Если Ит.ВыполнитьЗапрос(Дата1, Дата2,,, Валюта,, "Проводка") = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Если Ит.ВыполнитьЗапрос(Дата1, Дата2,,,,, "Проводка") = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если (ТипЗначенияСтр(Т) <> "Таблица")ИЛИ(Обновить=0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
 	Т.ИсходнаяТаблица("Таблица");
 	
 	НазваниеОрганизации = глНазваниеОрганизации(Контекст);

	Расшифровка.Установить("Отчет", "КарточкаСубконто");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
    Расшифровка.Установить("ПланСчетов", ПланСчетов);
	Расшифровка.Установить("Обновить", 1);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("ВидСубконто1", ВыбВидСубконто1);
	Расшифровка.Установить("Субконто1", Субк1);
	Расшифровка.Установить("ОтборСубконто1", ОтборСубк1);
	Расшифровка.Установить("ВидСубконто2", ВыбВидСубконто2);
	Расшифровка.Установить("Субконто2", Субк2);
	Расшифровка.Установить("ОтборСубконто2", ОтборСубк2);
	Расшифровка.Установить("ВидСубконто3", ВыбВидСубконто3);
	Расшифровка.Установить("Субконто3", Субк3);
	Расшифровка.Установить("ОтборСубконто3", ОтборСубк3);
	Расшифровка.Установить("Валюта", Валюта);
	Расшифровка.Установить("ПоВалюте", ПоВалюте);
	Расшифровка.Установить("ВидПериода", ВидПериода);
	Т.ВывестиСекцию("Секция_9");
	Т.ВывестиСекцию("Секция_1");
	Если ПустоеЗначение(Заголовок) = 0 Тогда
		Т.ВывестиСекцию("Секция_20");
	КонецЕсли;
	Т.ВывестиСекцию("Секция_21");
	Расшифровка.УдалитьВсе();

	Если (ОтборСубк1 = 2) Или (ОтборСубк2 = 2) Или (ОтборСубк3 = 2) Тогда
		Т.ВывестиСекцию("Секция_2");
		Если ПоВалюте = 1 Тогда
			Т.ВывестиСекцию("Секция_10");
		КонецЕсли;
		Т.ВывестиСекцию("Секция_11");
	КонецЕсли;

	НачалоПериода = 0;
	СДКол = 0;
	Ит.ВыбратьПериоды();
	Пока Ит.ПолучитьПериод() = 1 Цикл
		Опер = Ит.Операция;
		Если ВидПериода <> 1 Тогда
			Если НачалоПериода <> НачПериода(Опер.ДатаОперации) Тогда
				Если НачалоПериода <> 0 Тогда
					ВывестиОбороты();
				КонецЕсли;
				ДО = 0;
				ДОКол = 0;
				ДОВал = 0;
				КО = 0;
				КОКол = 0;
				КОВал = 0;
				НачалоПериода = НачПериода(Опер.ДатаОперации);
				КонецПериода = КонПериода(Опер.ДатаОперации);
			КонецЕсли;
		КонецЕсли;

		Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
		Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
		Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
		
		Дт = Ит.ВыбранаПоДт();
		Кт = Ит.ВыбранаПоКт();
		СД = Ит.СКД()-Ит.СКК();
		Т.ВывестиСекцию("Секция_3");

		Если Опер.ВалСумма > 0 Тогда
			Т.ВывестиСекцию("Секция_6");
		КонецЕсли;

		Если (ОтборСубк1 = 2) или (ОтборСубк2 = 2) или (ОтборСубк3 = 2)Тогда
			СДКол = Ит.СКД(3)-Ит.СКК(3);
		КонецЕсли;
		Т.ВывестиСекцию("Секция_5");

		Если ВидПериода <> 1 Тогда
			ДобавитьОбороты(Опер, Дт, Кт);
		КонецЕсли;
	КонецЦикла;

	Если ВидПериода <> 1 Тогда
		Если (ДО <> 0) Или (ДОКол <> 0) Или (ДОВал <> 0) Или 
		     (КО <> 0) Или (КОКол <> 0) Или (КОВал <> 0) Тогда
			ВывестиОбороты();
		КонецЕсли;
	КонецЕсли;

	Если (ОтборСубк1 = 2) или (ОтборСубк2 = 2) или (ОтборСубк3 = 2)Тогда
		Т.ВывестиСекцию("Секция_7");
		Если ПоВалюте = 1 Тогда
			Т.ВывестиСекцию("Секция_12");
		КонецЕсли;
		Т.ВывестиСекцию("Секция_13");
		Т.ВывестиСекцию("Секция_14");
		ФиксСтрок = 10;
		Если ПоВалюте = 1 Тогда
			Т.ВывестиСекцию("Секция_15");
			ФиксСтрок = 11;
		КонецЕсли;
		Т.ВывестиСекцию("Секция_16");
	Иначе
		Т.ВывестиСекцию("Секция_8");
		
	КонецЕсли;
	Ит = 0;
	
	ФиксСтрок = 7;
	Если Заголовок <> "" Тогда
		ФиксСтрок = ФиксСтрок+1;
	КонецЕсли;
	
	НазваниеОрганизации = ?(ПустоеЗначение(НазваниеОрганизации)=1, "", " "+НазваниеОрганизации);
	ПериодИОрганизация = " ("+ПериодСтр(Дата1, Дата2)+")"+НазваниеОрганизации;
	ВерхнийКолонтитул = "Карточка субконто"+ВыбВидыСубконто+ПериодИОрганизация;
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	Т.ТолькоПросмотр(1);
	Т.Опции(0, 0, ФиксСтрок, 2, "ОпцииПечатиКарточкаСубконто", "КарточкаСубконто");
	Т.ОбластьПечати(2);
	Т.ПовторятьПриПечатиСтроки(ФиксСтрок-1, ФиксСтрок);
	Т.ПараметрыСтраницы(,,,,,,,,, 1);
	Т.Показать(ВерхнийКолонтитул, "");
	Если (ФлагЗакрытияФормы = 1) Или (Обновить = 2) Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВалюты()
	ПоВалюте = Валюта.Выбран();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто1()
	Форма.ВыбСубконто1.НазначитьТип(ВыбВидСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто1);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто2()
	Форма.ВыбСубконто2.НазначитьТип(ВыбВидСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто2);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто3()
	Форма.ВыбСубконто3.НазначитьТип(ВыбВидСубконто3);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	ОтборСубконто1 = ?(ПустоеЗначение(ВыбСубконто1)=0, 1, 0);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	ОтборСубконто2 = ?(ПустоеЗначение(ВыбСубконто2)=0, 1, 0);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	ОтборСубконто3 = ?(ПустоеЗначение(ВыбСубконто3)=0, 1, 0);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1 = 0;
	ВыбСубконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2 = 0;
	ВыбСубконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3 = 0;
	ВыбСубконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореРУ()
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, ВыбСубконто3);
КонецПроцедуры	

//-----------------------------------------------
Процедура ПриОткрытии()
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;

	Периодичность.УдалитьВсе();
	Периодичность.ДобавитьЗначение(1, "За период");
	Периодичность.ДобавитьЗначение(4, "По дням");
	Периодичность.ДобавитьЗначение(5, "По неделям");
	Периодичность.ДобавитьЗначение(6, "По декадам");
	Периодичность.ДобавитьЗначение(7, "По месяцам");
	Периодичность.ДобавитьЗначение(8, "По кварталам");
	Периодичность.ДобавитьЗначение(9, "По годам");

	Если Метаданные.Валюта.Выбран() = 1 Тогда
		Форма.Валюта.НазначитьТип("Справочник."+Метаданные.Валюта.Идентификатор);
	Иначе
		Форма.ВалютаТекст.Доступность(0);
		Форма.Валюта.Доступность(0);
		Форма.ПоВалюте.Доступность(0);
	КонецЕсли;

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		ВыбПланСчетов = 0;
		ПланСчетов = глРасшифровка.Получить("ПланСчетов");
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Дата1 = глРасшифровка.Получить("Дата1");
		Дата2 = глРасшифровка.Получить("Дата2");
	   	ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
		Субконто1 = глРасшифровка.Получить("Субконто1");
		Если глРасшифровка.Получить("ОтборСубконто1") = 2 Тогда
			ОтборСубконто1 = 1;
		Иначе
			ОтборСубконто1 = 0;
		КонецЕсли;
		ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
	   	ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
		Субконто2 = глРасшифровка.Получить("Субконто2");
		Если глРасшифровка.Получить("ОтборСубконто2") = 2 Тогда
			ОтборСубконто2 = 1;
		Иначе
			ОтборСубконто2 = 0;
		КонецЕсли;
		ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");
	   	ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
		Субконто3 = глРасшифровка.Получить("Субконто3");
		Если глРасшифровка.Получить("ОтборСубконто3") = 2 Тогда
			ОтборСубконто3 = 1;
		Иначе
			ОтборСубконто3 = 0;
		КонецЕсли;
		ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
	    Валюта = глРасшифровка.Получить("Валюта");
	    ПоВалюте = глРасшифровка.Получить("ПоВалюте");

		ВидПериода = глРасшифровка.Получить("ВидПериода");
		Позиция = Периодичность.НайтиЗначение(ВидПериода);
		Если Позиция = 0 Тогда
			Позиция = 1;
		КонецЕсли;                 
		Периодичность.ТекущаяСтрока(Позиция);

		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			СформироватьОтчет();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;

		Форма.ВыбСубконто1.НазначитьТип(ВыбВидСубконто1);
		ВыбСубконто1 = Субконто1;
		Если ТипЗначенияСтр(Субконто1) = "СписокЗначений" Тогда
			Если Субконто1.РазмерСписка() = 1 Тогда
				ВыбСубконто1 = Субконто1.ПолучитьЗначение(0);
			КонецЕсли;
		КонецЕсли;

		Форма.ВыбСубконто2.НазначитьТип(ВыбВидСубконто2);
		ВыбСубконто2 = Субконто2;
		Если ТипЗначенияСтр(Субконто2) = "СписокЗначений" Тогда
			Если Субконто2.РазмерСписка() = 1 Тогда
				ВыбСубконто2 = Субконто2.ПолучитьЗначение(0);
			КонецЕсли;
		КонецЕсли;

		Форма.ВыбСубконто3.НазначитьТип(ВыбВидСубконто3);
		ВыбСубконто3 = Субконто3;
		Если ТипЗначенияСтр(Субконто3) = "СписокЗначений" Тогда
			Если Субконто3.РазмерСписка() = 1 Тогда
				ВыбСубконто3 = Субконто3.ПолучитьЗначение(0);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбПланСчетов = 1;
		ПланСчетов = ВыбранныйПланСчетов();
		РУ = БухИтоги.ИспользоватьРазделительУчета();
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
	КонецЕсли;
	Форма.ВыбСубконто1.НазначитьТип(ВыбВидСубконто1);
	Если МаксимальноеКоличествоСубконто() > 1 Тогда
		Форма.ВыбСубконто2.НазначитьТип(ВыбВидСубконто2);
	Иначе
		Форма.ВыбСубконто2.Доступность(0);
		Форма.ВыбВидСубконто2.Доступность(0);
		Форма.ОтборСубконто2.Доступность(0);
		Форма.ОчиститьСубконто2.Доступность(0);
	КонецЕсли;
	Если МаксимальноеКоличествоСубконто() > 2 Тогда
		Форма.ВыбСубконто3.НазначитьТип(ВыбВидСубконто3);
	Иначе
		Форма.ВыбСубконто3.Доступность(0);
		Форма.ВыбВидСубконто3.Доступность(0);
		Форма.ОтборСубконто3.Доступность(0);
		Форма.ОчиститьСубконто3.Доступность(0);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура Сформировать(ФлагЗакрытияФормы = 0)
	Субконто1 = ВыбСубконто1;
	Субконто2 = ВыбСубконто2;
	Субконто3 = ВыбСубконто3;
	СформироватьОтчет(ФлагЗакрытияФормы);
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового()
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
	ПриВыбореВидаСубконто1();
	ПриВыбореВидаСубконто2();
	ПриВыбореВидаСубконто3();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, Флаг)
	//Обработка выбора субконто типа "Документ"
	Если Лев(ИдентЭлемДиалога, 11) = "ВыбСубконто" Тогда
		Ном = Число(Прав(ИдентЭлемДиалога, 1));
		Если Ном = 1 Тогда
		    ВидСубконто = ВыбВидСубконто1;
		ИначеЕсли Ном = 2 Тогда
		    ВидСубконто = ВыбВидСубконто2;
		ИначеЕсли Ном = 3 Тогда
		    ВидСубконто = ВыбВидСубконто3;
		КонецЕсли;
		Если Лев(ВидСубконто.ТипСубконто(), 8) = "Документ" Тогда
			//Предусмотрена возможность выбора субконто типа "Документ" из специально созданного в конфигурации журнала
			//Идентификатор такого журнала должен быть такой же, как у вида субконто
			Журнал = Метаданные.Журнал(ВидСубконто.Идентификатор());
		    Если Журнал.Выбран() = 0 Тогда
		        Флаг = 1;
				Возврат;
			КонецЕсли;
			//Тип первой ссылки первой графы этого журнала может определять тип параметра,
			//передаваемого в форму журнала документов.
			//Данный параметр может использоваться, например, для установки отбора документов в открываемой форме
			Флаг = 0;
			Если Журнал.Графа(1).Выбран() = 0 Тогда
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				Возврат;
			КонецЕсли;
			Если Журнал.Графа(1).Ссылки.Количество() > 0 Тогда
				РеквизитОтбора = Журнал.Графа(1).Ссылки.Получить(1).Тип+"."+Журнал.Графа(1).Ссылки.Получить(1).Вид;
				Если РеквизитОтбора = ВыбВидСубконто1.ТипСубконто() Тогда
					ОткрытьФорму("Журнал."+Журнал.Идентификатор, ?(ОтборСубконто1 = 1, ВыбСубконто1, ""));
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто2.ТипСубконто() Тогда
			        ОткрытьФорму("Журнал."+Журнал.Идентификатор, ?(ОтборСубконто2 = 1, ВыбСубконто2, ""));
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто3.ТипСубконто() Тогда
			        ОткрытьФорму("Журнал."+Журнал.Идентификатор, ?(ОтборСубконто3 = 1, ВыбСубконто3, ""));
				Иначе
					ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				КонецЕсли;
			Иначе
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
			КонецЕсли;
		КонецЕсли;
		глРазделительУчета = РазделительУчета;
	КонецЕсли;
КонецПроцедуры