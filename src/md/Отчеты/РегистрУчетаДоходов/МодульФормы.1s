//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
//	Установить(Режим="") 
//
//	Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
//	Описание: Устанавливает, снимает или инвертирует отметки выбора строк 
//
Процедура Установить(Список, Режим="") 
	Для Н = 1 По Список.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			Список.Пометка(Н, 1);
		ИначеЕсли Режим="Сброс" Тогда
			Список.Пометка(Н, 0); 
		Иначе
			Список.Пометка(Н, ?(Список.Пометка(Н) = 1, 0, 1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  Установить()

//******************************************************************************
// ПолучитьСписокОбъектовФильтра()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Список значений - список, объектов, которые должны попасть в регистр.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция ПолучитьСписокОбъектовФильтра(ПолныйСписокОбъектов)
	
	СписокОтбираемыхОбъектов = СоздатьОбъект("СписокЗначений");
	РазмерСписка = ПолныйСписокОбъектов.РазмерСписка();
	Для СчетчикЦикла = 1 По РазмерСписка Цикл
		Если ПолныйСписокОбъектов.Пометка(СчетчикЦикла) = 1 Тогда
		    СписокОтбираемыхОбъектов.ДобавитьЗначение(ПолныйСписокОбъектов.ПолучитьЗначение(СчетчикЦикла));
		КонецЕсли;	
	КонецЦикла;
	
	Возврат СписокОтбираемыхОбъектов;
	
КонецФункции // ПолучитьСписокОбъектовФильтра()

//******************************************************************************
// СостояниеОтбора()
//
// Параметры:
//  Список - список значенний - список который необходимо проанализировать.
//
// Возвращаемое значение:
//  Строка - отражает, помечены ли в списке все элементы, помечены некоторые или вообще все пометки сняты.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция СостояниеОтбора(Список)
	
	СписокОтбираемыхОбъектов = ПолучитьСписокОбъектовФильтра(Список);
	Если СписокОтбираемыхОбъектов.РазмерСписка() = 0 Тогда
		ТипФильтра = "Не выбраны";
		
	ИначеЕсли СписокОтбираемыхОбъектов.РазмерСписка() = Список.РазмерСписка() Тогда
		ТипФильтра = "По всем";
		
	Иначе
		ТипФильтра = "Выборочно";
	КонецЕсли;                 
	
	Возврат ТипФильтра;
	
КонецФункции // СостояниеОтбора()

//******************************************************************************
Процедура Сформировать()                                               
	
	Перем ВидДохода;
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// создание объекта "Таблица"
	Таб = СоздатьОбъект("Таблица");
	
	// подготовка реквизитов шапки
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
	СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;                                              
	Таб.ВывестиСекцию("Шапка");        
	
	// Подготовка фильтра по счетам.
	СчетЗапроса = "";
	РазмерСписка = СписокВидовДохода.РазмерСписка();
	Для СчетчикЦикла = 1 По РазмерСписка Цикл
		Если СписокВидовДохода.Пометка(СчетчикЦикла) = 1 Тогда
			СчетЗапроса = СчетЗапроса + "*," + СписокВидовДохода.ПолучитьЗначение(СчетчикЦикла)+ ";";
		КонецЕсли;	
	КонецЦикла;                                                 
	
	Если ПустоеЗначение(СчетЗапроса) = 1 Тогда
		Предупреждение("Регистр не может быть сформирован,
						|т.к. на закладке ""Виды дохода"" не установлен ни один вид дохода,
						|которому соответствует включаемая в регистр операция.");
		Возврат;
	КонецЕсли;
	
	// Удалим из сроки-фильтра счетов последний символ (не нужный символ - ";").
	СчетЗапроса = Лев(СчетЗапроса, СтрДлина(СчетЗапроса)-1); 
	
	ИтогоСуммаДохода = 0;
	
	Опер = СоздатьОбъект("Операция");  
	Опер.ВыбратьОперацииСПроводками(НачДата, КонДата, СчетЗапроса,,,);
	Пока Опер.ПолучитьПроводку() = 1 Цикл
		Док = Опер.Документ;
		СчетКт = Опер.Кредит.Счет.Код;
		Субконто1 = Опер.Кредит.Субконто(1);
		
		Если СчетКт = "Н08" Тогда
			Если  (Субконто1 = Перечисление.ВнереализационныеДоходы.ПроцентыПоГосударственнымЦеннымБумагам) или
				(Субконто1 = Перечисление.ВнереализационныеДоходы.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0) или
				(Субконто1 = Перечисление.ВнереализационныеДоходы.ДолевоеУчастиеВИностранныхОрганизациях) или
				(Субконто1 = Перечисление.ВнереализационныеДоходы.ОперацииСФинансовымиИнструментамиНеОбращающимися) Тогда
			    Продолжить;
			КонецЕсли;
		    ВидДохода = "Внереализационные доходы";
			
		ИначеЕсли (СчетКт = "Н06.05") или (СчетКт = "Н06.06") Тогда
			ВидДохода = "Выручка от реализации амортизируемого имущества";
			
		Иначе                                                                       
			// вид дохода определяется в соответствии со списком "ВидыДоходов"
			СписокВидовДохода.ПолучитьЗначение(СписокВидовДохода.НайтиЗначение(СчетКт),ВидДохода);
		КонецЕсли;
		
		Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

			// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4

			Если ТипЗначенияСтр(Опер.Кредит.Субконто(1)) = "Справочник" Тогда
				ОбъектУчета = "" + Опер.Кредит.Субконто(1);
				
			ИначеЕсли СчетКт = "Н08" Тогда
				ОбъектУчета = "" + Опер.Кредит.Субконто(1);
				
			Иначе
				ОбъектУчета = "";
			КонецЕсли;
		
		Иначе

			// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

			// в некоторых случаях Объект учета берем из документов
			Если (Док.Вид() = "ОперацииВыбытияИмущества") или (Док.Вид() = "ОперацииПриобретенияИмущества") Тогда
				Док.ПолучитьСтрокуПоНомеру(Опер.НомерСтрокиДокумента());
				ОбъектУчета = Док.Объект;
		
			Иначе                                   
				ОбъектУчета = "" + Опер.Кредит.Субконто(1);
				Если ПустоеЗначение(Опер.Кредит.Субконто(2)) = 0 Тогда
					ОбъектУчета = ОбъектУчета + ", "+Опер.Кредит.Субконто(2);
				КонецЕсли;                                              
			КонецЕсли;
			
		КонецЕсли;
		
		ДатаОперации = Опер.ДатаОперации;
		Сумма        = Опер.Сумма;
		Таб.ВывестиСекцию("Строка");	
		
		ИтогоСуммаДохода = ИтогоСуммаДохода + Сумма;
	КонецЦикла;
	                             
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");    
	
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрУчетаДоходовТекущегоПериода", "ОкноРегистрУчетаДоходовТекущегоПериода");
	Таб.Показать("Регистр учета доходов текущего периода");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки) //предопределенная
	                                
	Форма.ИспользоватьЗакладки(1);
	Форма.ИспользоватьСлой("Параметры, Основной", 2);
	Форма.Закладки.ДобавитьЗначение("Параметры", "Параметры");
	Форма.Закладки.ДобавитьЗначение("Виды дохода");
	
	Если ФлагЧтенияНастройки = 1 Тогда
		                                 
		Если СписокВидовДохода.РазмерСписка() <> 0 Тогда
		
			// отразим состояние выбранных условий формирования регистра в диалоге на первой закладке
			Форма.ВидыДоходаФильтр.Заголовок(СостояниеОтбора(СписокВидовДохода));
			Возврат;
		КонецЕсли;
	КонецЕсли;	         
	
	НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
	
	// Заполнение списка видов дохода.
	СписокВидовДохода.ДобавитьЗначение("Н06.01", "Выручка от реализации товаров (работ, услуг) собственного производства");
	СписокВидовДохода.ДобавитьЗначение("Н06.02", "Выручка от реализации имущественных прав, за исключением доходов от реализации права требования");
	СписокВидовДохода.ДобавитьЗначение("Н06.03", "Выручка от реализации прочего имущества");
	СписокВидовДохода.ДобавитьЗначение("Н06.04", "Выручка от реализации покупных товаров");
	СписокВидовДохода.ДобавитьЗначение("Н06.05", "Выручка от реализации основных средств");
	СписокВидовДохода.ДобавитьЗначение("Н06.06", "Выручка от реализации нематериальных активов");
	СписокВидовДохода.ДобавитьЗначение("Н06.07", "Выручка от реализации права требования как реализации финансовых услуг");
	СписокВидовДохода.ДобавитьЗначение("Н06.08", "Выручка от реализации права требования (до наступления срока платежа)");
	СписокВидовДохода.ДобавитьЗначение("Н06.09", "Выручка от реализации права требования (после наступления срока платежа)");
	СписокВидовДохода.ДобавитьЗначение("Н06.10", "Выручка от реализации товаров (работ, услуг)по объектам обслуживающих производств и хозяйств");
	СписокВидовДохода.ДобавитьЗначение("Н06.11", "Выручка от реализации ценных бумаг");
	СписокВидовДохода.ДобавитьЗначение("Н08",    "Внереализационные доходы ");
	Установить(СписокВидовДохода, "Все"); // установить пометки у всех элементов списка
	Форма.ВидыДоходаФильтр.Заголовок(СостояниеОтбора(СписокВидовДохода));
	
КонецПроцедуры //ПриОткрытии()                                                    

//******************************************************************************
Процедура ПриВыбореЗакладки(Номер, Значение)                                    

	Если Значение = "Параметры" Тогда
		
		// при переходе на первую закладку отразим на ней состояние выбранных условий формирования регистра
		Форма.ИспользоватьСлой("Параметры, Основной", 2);
		Форма.ВидыДоходаФильтр.Заголовок(СостояниеОтбора(СписокВидовДохода));

	ИначеЕсли Значение = "Виды дохода" Тогда
		Форма.ИспользоватьСлой("ВидыДохода, Основной", 2);
	КонецЕсли;
	
КонецПроцедуры