Перем НашаОрг;
Перем Сч50, Сч51, Сч52, Сч55, Сч60, Сч62, Сч66, Сч67, Сч76, Сч76_2, Сч90, Сч91, Сч91_1, Сч91_2;
Перем ТКонтрагент, ТДоговор;

//******************************************************************************
// ДобавитьСчетВСписок(Сч)
//
// Параметры:
//  Сч - счет, который нужно добавить в список.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Добавляет в СписокСчетов счет, переданный в качестве параметра.
//
Процедура ДобавитьСчетВСписок(Сч)
	
	СписокСчетов.ДобавитьЗначение(Сч, Сч.Код + " """ + Сч.ПолнНаименование+ """");
	
КонецПроцедуры // ДобавитьСчетВСписок()

//******************************************************************************
// ОборотыЗаПериод(ИдентификаторКолонки)
//
// Параметры:
//  ИдентификаторКолонки - Строка - колонка по данным которой рассчитываются обороты.
//
// Возвращаемое значение:
//  Возвращаются обороты за период по дебету или кредиту
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Подсчет суммы оборотов по дебету или по кредиту.
//
Функция ОборотыЗаПериод(ИдентификаторКолонки)
	                                                                                     
	// Оборот рассчитывается как итог по колонке за минусом
	// значений первой, предпоследней и последней строк.
	Оборот = ТаблицаДвижений.Итог(ИдентификаторКолонки);
	Оборот = Оборот - ТаблицаДвижений.ПолучитьЗначение( 1, ИдентификаторКолонки);
	Оборот = Оборот - ТаблицаДвижений.ПолучитьЗначение( ТаблицаДвижений.КоличествоСтрок() - 1, ИдентификаторКолонки);
	Оборот = Оборот - ТаблицаДвижений.ПолучитьЗначение( ТаблицаДвижений.КоличествоСтрок(), ИдентификаторКолонки);
	
	Возврат Оборот;
	
КонецФункции // ОборотыЗаПериод()

//******************************************************************************
// УстановитьОборотыЗаПериод()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  В таблице устанавливаются: общий оборот по дебету и по кредиту.
//
Процедура УстановитьОборотыЗаПериод()
	Если ТаблицаДвижений.КоличествоСтрок() <> 0 Тогда
		ТаблицаДвижений.ПолучитьстрокуПоНомеру(ТаблицаДвижений.КоличествоСтрок() - 1);
		ТаблицаДвижений.Дебет  = ОборотыЗаПериод("Дебет");
		ТаблицаДвижений.Кредит = ОборотыЗаПериод("Кредит");
	КонецЕсли;
	
КонецПроцедуры // УстановитьОборотыЗаПериод()

//******************************************************************************
// КонечноеСальдо()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Возвращается новое значение конечного сальдо.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Подсчет суммы начального сальдо и всех оборотов за период сверки.
//
Функция КонечноеСальдо()
	
	Сальдо = ТаблицаДвижений.Итог("Дебет") - ТаблицаДвижений.Итог("Кредит");
	
	// Вычтем обороты отраженные в строке оборотов за период.
	ТаблицаДвижений.ПолучитьСтрокуПоНомеру(ТаблицаДвижений.КоличествоСтрок() - 1);
	Сальдо = Сальдо - ТаблицаДвижений.Дебет + ТаблицаДвижений.Кредит;
	                                                        
	// Вычтем ранее рассчитанное сальдо на конец периода.
	ТаблицаДвижений.ПолучитьСтрокуПоНомеру(ТаблицаДвижений.КоличествоСтрок());
	Сальдо = Сальдо - ТаблицаДвижений.Дебет + ТаблицаДвижений.Кредит;
	
	Возврат Сальдо;
	
КонецФункции // КонечноеСальдо()

//******************************************************************************
// УстановитьКонечноеСальдо()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура УстановитьКонечноеСальдо()
	
	Если ТаблицаДвижений.КоличествоСтрок() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СальдоКон = КонечноеСальдо();	
	Если СальдоКон > 0 Тогда
	    ТаблицаДвижений.Дебет = СальдоКон;
		ТаблицаДвижений.Кредит = 0;
	Иначе
		ТаблицаДвижений.Дебет = 0;
		ТаблицаДвижений.Кредит = - СальдоКон;
	КонецЕсли;
	
КонецПроцедуры // УстановитьКонечноеСальдо()

//******************************************************************************
// РезультатыСверки()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция РезультатыСверки()
	
   	Если ТаблицаДвижений.КоличествоСтрок() = 0 Тогда
   	    Стр = "<сверка не проведена>";
   	    
	ИначеЕсли ПустоеЗначение(КонДата) = 1 Тогда
   	    Стр = "<не указана дата сверки>";
   		
   	ИначеЕсли ПустоеЗначение(Контрагент) = 1 Тогда
   	    Стр = "<не указан контрагент>";
   	
   	Иначе
		Стр = "на " + Формат(КонДата, "Д ДДММГГГГ") + " задолженность ";
		СальдоКон = КонечноеСальдо();
			
	   	Если СальдоКон > 0 Тогда
			Стр = Стр + "в пользу " + НашаОрг + " " + СокрЛП(Формат(СальдоКон, "Ч18.2-,")) + " руб.";
	
	   	ИначеЕсли СальдоКон < 0 Тогда
			Стр = Стр + "в пользу " + глПолноеНаименование(Контрагент) + " " + СокрЛП(Формат(-СальдоКон, "Ч18.2-,")) + " руб.";
	
	   	Иначе
	   		Стр = Стр + "отсутствует.";
	   	КонецЕсли;
   	КонецЕсли;
   	
	Возврат Стр;
	
КонецФункции // РезультатыСверки()

//******************************************************************************
// Процедура Заполнить()
// 
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка Заполнить
//         
// Описание:
//  Заполняется таблица значений ТаблицаДвижений. В нее включаются все операции
//  по расчетам с контрагентом (если выбран договор - то только в рамках
//  этого договора) за период сверки по данным бухгалтерского учета. 
//  Первая строка таблицы - сальдо расчетов на 
//  начало периода, последняя - сальдо на конец периода.
//  Вначале определяется дата, с которой начато ведение учета в данной 
//  информационной базе. Начало периода сверки выбирается как наиболее поздняя
//  из двух дат - даты, указанной как дата предыдущей сверки + 1 день и даты 
//  начала ведения учета в информационной базе. Если дата сверки указана более
//  ранняя, чем дата начала ведения учета в базе, то автозаполнение таблицы 
//  не производится и акт сверки не составляется. 
//
Процедура Заполнить()
	
	Если КонДата < НачДата Тогда
	    Предупреждение("Неверно задан период сверки расчетов.", "!");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Предупреждение("Сначала, пожалуйста, выберите контрагента.");
		Возврат;
	КонецЕсли;
	
	Форма.ИспользоватьСлой("Таблица, Основной", 2);
	Форма.Закладки.ТекущаяСтрока(2);
	Если ТаблицаДвижений.КоличествоСтрок() > 0 Тогда
	    Если Вопрос("Перед заполнением таблица движений будет очищена.
					|Продолжать?", "Да+Нет") = "Нет" Тогда
	        Возврат;
	    КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаДвижений.УдалитьСтроки();
	ТКонтрагент = Контрагент;
	ТДоговор = Договор;
	//ищем документы, в т.ч. операции, по расчетам с выбранным контрагентом, по проводкам
	СписокВыбранныхСчетов = СоздатьОбъект("СписокЗначений");
	Фильтр = "";
	Для СчетчикЦикла = 1 По СписокСчетов.РазмерСписка() Цикл
		Если СписокСчетов.Пометка(СчетчикЦикла) = 1 Тогда
			Сч = СписокСчетов.ПолучитьЗначение(СчетчикЦикла);
		    СписокВыбранныхСчетов.ДобавитьЗначение(Сч);
			КодСчета = СокрЛП(Сч.Код);
			Фильтр = Фильтр + КодСчета + ",*;*," + КодСчета + ";";
		КонецЕсли;
	КонецЦикла;
	Если ПустоеЗначение(Фильтр) = 0 Тогда
		Фильтр = Лев(Фильтр, СтрДлина(Фильтр)-1);
	КонецЕсли;
	
	ЕстьВалютныеОперации = 0;
	Опер = СоздатьОбъект("Операция");
	Опер.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент);
	Если ПустоеЗначение(Договор) = 0 Тогда
		Если Договор.ЭтоГруппа() = 0 Тогда
			Опер.ИспользоватьСубконто(ВидыСубконто.Договоры, Договор);
		Иначе
			//Опер.ИспользоватьСубконто(ВидыСубконто.Договоры,);
		КонецЕсли;
	КонецЕсли;
	Опер.ВыбратьОперацииСПроводками(НачДата, КонДата, Фильтр);
	Пока Опер.ПолучитьПроводку() = 1 Цикл
		
		СчДт = Опер.Дебет.Счет;
		СчКт = Опер.Кредит.Счет;
		ПервичныйДокумент = СокрЛП(Опер.ПервичныйДокумент);
		СчетГруппаДт = СчДт.Родитель(1);
		СчетГруппаКт = СчКт.Родитель(1);
		
		// Если проводка сложная, то не рассматриваем проводку
		// в которой не указан один из счетов.
		Если Опер.СложнаяПроводка() = 1 Тогда
			Если (ПустоеЗначение(СчДт)=1) или (ПустоеЗначение(СчКт) = 1) Тогда
				Продолжить;
       		КонецЕсли;
		КонецЕсли;
	   	                                            
		// Отсекаем корреспонденции выбранных счетов между собой с одним контрагентом.
		Если (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаДт) > 0) и (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаКт) > 0) Тогда
			Если Опер.Дебет.Субконто(ВидыСубконто.Контрагенты) = Опер.Кредит.Субконто(ВидыСубконто.Контрагенты) Тогда 
				Если ПустоеЗначение(Договор) = 0 Тогда
					Если Договор.ЭтоГруппа() = 0 Тогда
						Если Опер.Дебет.Субконто(ВидыСубконто.Договоры) = Опер.Кредит.Субконто(ВидыСубконто.Договоры) Тогда 
							Продолжить;	
						КонецЕсли;
					Иначе
						Если (Опер.Дебет.Субконто(ВидыСубконто.Договоры).Родитель = Договор)
						   и (Опер.Кредит.Субконто(ВидыСубконто.Договоры).Родитель = Договор)  Тогда
							Продолжить;	
						КонецЕсли;
					КонецЕсли;
				Иначе
					Продолжить;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Определим содержание операции для проводок по счетам 60, 62 и 76,
		// для случаев, когда нам важна корреспонденция.
		Операция = "";
		Если ПустоеЗначение(Операция) = 1 Тогда
			Если СчДт <> Сч76_2 Тогда
				Если (СчДт.ПринадлежитГруппе(Сч50) = 1) или (СчДт = Сч51) или (СчДт = Сч52) или (СчДт.ПринадлежитГруппе(Сч55) = 1) Тогда
					Если СчКт.ПринадлежитГруппе(Сч60) = 1 Тогда
						Операция = "Возврат средств";
						
					ИначеЕсли СчКт.ПринадлежитГруппе(Сч62) = 1 Тогда
						Операция = "Оплата";
					КонецЕсли;
					
				ИначеЕсли (СчКт.ПринадлежитГруппе(Сч50) = 1) или (СчКт = Сч51) или (СчКт = Сч52) или (СчКт.ПринадлежитГруппе(Сч55) = 1) Тогда
					Если (СчДт.ПринадлежитГруппе(Сч60) = 1) или (СчДт.ПринадлежитГруппе(Сч76) = 1) Тогда
						Операция = "Оплата";
						
					ИначеЕсли СчДт.ПринадлежитГруппе(Сч62) = 1 Тогда
						Операция = "Возврат средств";
					КонецЕсли;
					
				ИначеЕсли (СчДт.ПринадлежитГруппе(Сч60) = 1) или (СчДт.ПринадлежитГруппе(Сч76) = 1) Тогда
					Если (СчКт.ПринадлежитГруппе(Сч50) = 0) и (СчКт.ПринадлежитГруппе(Сч51) = 0) Тогда
						Операция = "Оплата";
					КонецЕсли;
					
				ИначеЕсли СчДт.ПринадлежитГруппе(Сч62) = 1 Тогда
					Если (СчКт.ПринадлежитГруппе(Сч90) = 1) или (СчКт.ПринадлежитГруппе(Сч91) = 1) Тогда
						Операция = "Продажа";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Для проводок по счетам 60, 62 и 76 очистим корреспондирующий счет
		Если ПустоеЗначение(Договор) = 0 Тогда
			Если Договор.ЭтоГруппа() = 0 Тогда
				Если (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаДт) > 0)
				и (Опер.Дебет.Субконто(ВидыСубконто.Договоры) = Договор) Тогда
					СчКт = ПолучитьПустоеЗначение("Счет");
					СчетГруппаКт = ПолучитьПустоеЗначение("Счет");
					
				ИначеЕсли (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаКт) > 0)
				и (Опер.Кредит.Субконто(ВидыСубконто.Договоры) = Договор) Тогда
					СчДт = ПолучитьПустоеЗначение("Счет");
					СчетГруппаДт = ПолучитьПустоеЗначение("Счет");
					
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе
				Если (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаДт) > 0)
				и (ПустоеЗначение(Опер.Дебет.Субконто(ВидыСубконто.Договоры)) = 0) Тогда
					Если Опер.Дебет.Субконто(ВидыСубконто.Договоры).Родитель = Договор Тогда
						СчКт = ПолучитьПустоеЗначение("Счет");
						СчетГруппаКт = ПолучитьПустоеЗначение("Счет");
					КонецЕсли;
				КонецЕсли; 
				
				Если (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаКт) > 0)
				и (ПустоеЗначение(Опер.Кредит.Субконто(ВидыСубконто.Договоры)) = 0) Тогда
					Если Опер.Кредит.Субконто(ВидыСубконто.Договоры).Родитель = Договор Тогда
						СчДт = ПолучитьПустоеЗначение("Счет");
						СчетГруппаДт = ПолучитьПустоеЗначение("Счет");
					КонецЕсли;					
				КонецЕсли; 
				
				Если (ПустоеЗначение(СчДт) = 0) и (ПустоеЗначение(СчКт) = 0) Тогда
					Продолжить;
				КонецЕсли;				
				
			КонецЕсли;
			
		ИначеЕсли (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаДт) > 0)
			    и (Опер.Дебет.Субконто(ВидыСубконто.Контрагенты) = Контрагент) Тогда
			СчКт = ПолучитьПустоеЗначение("Счет");
			СчетГруппаКт = ПолучитьПустоеЗначение("Счет");
				
		ИначеЕсли (СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаКт) > 0)
			и (Опер.Кредит.Субконто(ВидыСубконто.Контрагенты) = Контрагент) Тогда
			СчДт = ПолучитьПустоеЗначение("Счет");
			СчетГруппаДт = ПолучитьПустоеЗначение("Счет");
			
		Иначе
			Продолжить;
		КонецЕсли;
		
    	Если Опер.Сумма = 0 Тогда
		    Продолжить;
		
		ИначеЕсли СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаДт) > 0 Тогда
			Если (Найти(СчДт.Код, "76.Н") <> 0) или (Найти(СчДт.Код, "76.АВ") <>  0) или (Найти(СчДт.Код, "76.ВА") <>  0) Тогда
		    	Продолжить;
			КонецЕсли;
			Дебет = Опер.Сумма;
			Кредит = 0;
			
		Иначе
			Если (Найти(СчКт.Код, "76.Н") <> 0) или (Найти(СчКт.Код, "76.АВ") <>  0) или (Найти(СчКт.Код, "76.ВА") <>  0) Тогда
		    	Продолжить;
			КонецЕсли;
			Дебет = 0;
			Кредит = Опер.Сумма;
		КонецЕсли;
		
		Если (СчДт.Валютный = 1) или (СчКт.Валютный = 1) Тогда
		    ВалСумма = Опер.ВалСумма;
		    Валюта = Опер.Валюта;
			ЕстьВалютныеОперации = 1;
			
		Иначе
		    ВалСумма = 0;
		    Валюта = "";
		КонецЕсли;
		
		// Определим содержание операции (если до сих пор не определили)
		Если ПустоеЗначение(Операция) = 1 Тогда
			Если СчДт = Сч91_2 Тогда
				ПрочиеДоходыИРасходы = Опер.Дебет.ПрочиеДоходыИРасходы;
				Если ПустоеЗначение(ПрочиеДоходыИРасходы) = 0 Тогда
				    Если ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда
				        Операция = "Курсовые разницы";
						
					ИначеЕсли ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ШтрафыПоДоговорам Тогда
				        Операция = "Санкции";
						
					ИначеЕсли (ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы)
					и (ПрочиеДоходыИРасходы.Наименование = "Суммовые разницы") Тогда
						Операция = "Суммовые разницы";
						
				    КонецЕсли;
				КонецЕсли;
	
			ИначеЕсли СчКт = Сч91_1 Тогда
				ПрочиеДоходыИРасходы = Опер.Кредит.ПрочиеДоходыИРасходы;
				Если ПустоеЗначение(ПрочиеДоходыИРасходы) = 0 Тогда
				    Если ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда
				        Операция = "Курсовые разницы";
						
					ИначеЕсли ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ШтрафыПоДоговорам Тогда
				        Операция = "Санкции"; 
						
					ИначеЕсли (ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы)
					и (ПрочиеДоходыИРасходы.Наименование = "Суммовые разницы") Тогда
						Операция = "Суммовые разницы";
	
				    КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		
			Если (СчКт.ПринадлежитГруппе(Сч66) = 1) или (СчКт.ПринадлежитГруппе(Сч67) = 1) Тогда
		        Операция = "Займ";

			ИначеЕсли (СчДт.ПринадлежитГруппе(Сч66) = 1) или (СчДт.ПринадлежитГруппе(Сч67) = 1) Тогда
		        Операция = "Возврат займа";
			
			ИначеЕсли (СчДт = Сч76_2) или (СчКт = Сч76_2) Тогда
		        Операция = "Претензия";
			
			ИначеЕсли (СчДт.ПринадлежитГруппе(Сч50) = 1) или (СчДт = Сч51) или (СчДт = Сч52) или (СчДт.ПринадлежитГруппе(Сч55) = 1) Тогда
				Операция = "Перевод средств";
				
			ИначеЕсли (СчКт.ПринадлежитГруппе(Сч50) = 1) или (СчКт = Сч51) или (СчКт = Сч52) или (СчКт.ПринадлежитГруппе(Сч55) = 1) Тогда
				Операция = "Перевод средств";

			ИначеЕсли (СчКт.ПринадлежитГруппе(Сч60) = 1) или (СчКт.ПринадлежитГруппе(Сч76) = 1) Тогда
		        Операция = "Приход";

			ИначеЕсли СчКт.ПринадлежитГруппе(Сч62) = 1 Тогда
		        Операция = "Оплата";
			КонецЕсли;
		КонецЕсли;

		Если ПустоеЗначение(Операция) = 1 Тогда
			Если СписокВыбранныхСчетов.НайтиЗначение(СчетГруппаДт) > 0 Тогда
		        Операция = "Передано";
				
			Иначе
		        Операция = "Принято";
			КонецЕсли;
		КонецЕсли;
		
		Документ = Опер.Документ;
		Если ПустоеЗначение(СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(ПервичныйДокумент,".",""),",",""),"№",""))) = 0 Тогда
		    Операция=Операция+" ("+ПервичныйДокумент+")";
		Иначе
			Операция=Операция+" ("+Опер.ДатаОперации+")";
		КонецЕсли;
				
		ТаблицаДвижений.НоваяСтрока();
		ТаблицаДвижений.Операция = Операция;
		ТаблицаДвижений.Документ = Документ;
		ТаблицаДвижений.Дебет = Дебет;
		ТаблицаДвижений.Кредит = Кредит;
		ТаблицаДвижений.ВалСумма = ВалСумма;
		ТаблицаДвижений.Валюта = Валюта;
	КонецЦикла;
	
	ТаблицаДвижений.Свернуть("Документ, Операция, Валюта", "Дебет, Кредит, ВалСумма");
	Если ЕстьВалютныеОперации = 1 Тогда
		ТаблицаДвижений.ВыбратьСтроки();
		Пока ТаблицаДвижений.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТаблицаДвижений.ВалСумма) = 0 Тогда
			    ТаблицаДвижений.Операция = ТаблицаДвижений.Операция + " (" + ТаблицаДвижений.ВалСумма + " " + ТаблицаДвижений.Валюта + ")";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	БИ = СоздатьОбъект("БухгалтерскиеИтоги"); 
	БИ.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент);
	Если Договор.Выбран() = 1 Тогда
		Если Договор.ЭтоГруппа() = 0 Тогда
			БИ.ИспользоватьСубконто(ВидыСубконто.Договоры, Договор);
		Иначе
			БИ.ИспользоватьСубконто(ВидыСубконто.Договоры, );
		КонецЕсли;
	КонецЕсли;
    БИ.ВключатьСубсчета(0, 0);
	БИ.ВыполнитьЗапрос(НачДата, КонДата, СписокВыбранныхСчетов);
	
	Если Договор.ЭтоГруппа() = 0 Тогда
		//Сообщить("За период "+ПериодСтр(НачДата, КонДата)+" движений по расчетам с "+Контрагент+" не найдено.");
		СальдоНач = БИ.СНД() - БИ.СНК();
		СальдоКон = БИ.СКД() - БИ.СКК();
	Иначе
		СальдоНач = 0;
		СальдоКон = 0;
		БИ.ВыбратьСубконто(2);
		Пока БИ.ПолучитьСубконто(2) = 1 Цикл
			Если БИ.Субконто(2).Родитель = Договор Тогда
				СальдоНач = СальдоНач + БИ.СНД() - БИ.СНК();
				СальдоКон = СальдоКон + БИ.СКД() - БИ.СКК();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
			
	Если СписокВыбранныхСчетов.НайтиЗначение(СчетПоКоду("76")) > 0 Тогда
		БИ = СоздатьОбъект("БухгалтерскиеИтоги"); 
		БИ.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент);
		Если Договор.Выбран() = 1 Тогда
			Если Договор.ЭтоГруппа() = 0 Тогда
				БИ.ИспользоватьСубконто(ВидыСубконто.Договоры, Договор);
			Иначе
				БИ.ИспользоватьСубконто(ВидыСубконто.Договоры, );
			КонецЕсли;
		КонецЕсли;
		БИ.ВключатьСубсчета(0, 0);
		БИ.ВыполнитьЗапрос(НачДата, КонДата, "76.АВ, 76.ВА, 76.Н"); 
		
		Если Договор.ЭтоГруппа() = 0 Тогда
			СальдоНач = СальдоНач + БИ.СНК() - БИ.СНД();
			СальдоКон = СальдоКон + БИ.СКК() - БИ.СКД();
		Иначе
			БИ.ВыбратьСубконто(2);
			Пока БИ.ПолучитьСубконто(2) = 1 Цикл
				Если БИ.Субконто(2).Родитель = Договор Тогда
					СальдоНач = СальдоНач + БИ.СНК() - БИ.СНД();
					СальдоКон = СальдоКон + БИ.СКК() - БИ.СКД();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

	КонецЕсли;
	
	ТаблицаДвижений.НоваяСтрока(1);
	ТаблицаДвижений.Операция = "Сальдо на " + Формат(НачДата, "Д ДДММГГГГ");
	ТаблицаДвижений.Дебет = 0;
	ТаблицаДвижений.Кредит = 0;
	Если СальдоНач > 0 Тогда
	    ТаблицаДвижений.Дебет = СальдоНач;
	Иначе
		ТаблицаДвижений.Кредит = - СальдоНач;
	КонецЕсли;                    
	
	ТаблицаДвижений.НоваяСтрока();
	ТаблицаДвижений.Операция = "Обороты за период";
	
	ТаблицаДвижений.НоваяСтрока();
	ТаблицаДвижений.Операция = "Сальдо на " + Формат(КонДата, "Д ДДММГГГГ");
	ТаблицаДвижений.Дебет = 0;
	ТаблицаДвижений.Кредит = 0;
	Если СальдоКон > 0 Тогда
	    ТаблицаДвижений.Дебет = СальдоКон;
	Иначе
		ТаблицаДвижений.Кредит = - СальдоКон;
	КонецЕсли;                    
	
	УстановитьОборотыЗаПериод();
	ТаблицаДвижений.ТекущаяСтрока(ТаблицаДвижений.КоличествоСтрок());
	
КонецПроцедуры // Заполнить

//******************************************************************************
Процедура ПриВыбореКонтрагента()
	Если ТаблицаДвижений.КоличествоСтрок() > 0 Тогда
	    Если Контрагент <> ТКонтрагент Тогда
	        Если Вопрос("При изменении контрагента таблица операций по расчетам будет очищена
			|                    изменить контрагента?","Да+Нет",60) = "Да" Тогда
			    ТаблицаДвижений.УдалитьСтроки();
				ТДоговор = "";
				ТКонтрагент = "";
			Иначе
				Контрагент = ТКонтрагент;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	глПриВыбореКонтрагента(Контрагент,Договор);
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореДоговора()
	Если ТаблицаДвижений.КоличествоСтрок() > 0 Тогда
	    Если ТДоговор <> Договор Тогда
	        Если Вопрос("При изменении договора таблица операций по расчетам будет очищена
			|                    изменить договор?","Да+Нет",60) = "Да" Тогда
			    ТаблицаДвижений.УдалитьСтроки();
				ТДоговор = "";
				ТКонтрагент = "";
			Иначе
				Договор = ТДоговор;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	глПриВыбореДоговора(Контрагент, Договор, 1);
КонецПроцедуры

//******************************************************************************
// Процедура ВставитьСтроку()
// 
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка ВставитьСтроку
//         
// Описание:
//  Вставляется новая строка в таблицу ТаблицаДвижений на место текущей строки,
//  новая строка становится текущей
//
Процедура ВставитьСтроку()
	
	Номер = ТаблицаДвижений.ТекущаяСтрока();
	ТаблицаДвижений.НоваяСтрока(Номер);
	ТаблицаДвижений.ТекущаяСтрока(Номер);
		
КонецПроцедуры	

//******************************************************************************
// Процедура УдалитьСтроку()
// 
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка УдалитьСтроку
//         
// Описание:
//  Удаляется текущая строка таблицы ТаблицаДвижений,
//  производится пересчет сальдо расчетов на дату сверки
//
Процедура УдалитьСтроку()
	
	Номер = ТаблицаДвижений.ТекущаяСтрока();
	Если (Номер=1) ИЛИ (Номер=ТаблицаДвижений.КоличествоСтрок()) Тогда
	    Предупреждение("Строку сальдо расчетов удалять нельзя.");
		Возврат;
		
	ИначеЕсли Номер = ТаблицаДвижений.КоличествоСтрок() - 1 Тогда
		Предупреждение("Строку с оборотами за период удалять нельзя.");
		Возврат;
	КонецЕсли;
	ТаблицаДвижений.УдалитьСтроку();      
	ТаблицаДвижений.ТекущаяСтрока(Номер);
	УстановитьОборотыЗаПериод();
	УстановитьКонечноеСальдо();	
	
КонецПроцедуры //УдалитьСтроку()


//******************************************************************************
// Процедура РедактироватьЯчейку()
// 
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  ТаблицаЗначений ТаблицаДвижений
//         
// Описание:
//  При попытке изменить ячейку таблицы, содержащую документ, открывается
//  этот документ.
//  При попытке изменить числовое или строковое значение вызывается соответст-
//  вующий диалог ввода.
//  Если введена сумма, то пересчитывается сальдо на дату сверки с учетом
//  внесенного изменения
//
Процедура РедактироватьЯчейку()

	Если ТаблицаДвижений.ТекущаяКолонка() = "Документ" Тогда
		ОткрытьФорму(ТаблицаДвижений.Документ);
	
	ИначеЕсли ТаблицаДвижений.ТекущаяКолонка()="Операция" Тогда
		СодОпер=ТаблицаДвижений.Операция;
		ВвестиСтроку(СодОпер, "Содержание операции:", 30);
		ТаблицаДвижений.Операция=СодОпер;

	ИначеЕсли ТаблицаДвижений.ТекущаяКолонка() = "Дебет" Тогда
		Если ТаблицаДвижений.НомерСтроки = ТаблицаДвижений.КоличествоСтрок() Тогда
		    Предупреждение("Конечное сальдо редактировать нельзя.");
			
		ИначеЕсли ТаблицаДвижений.НомерСтроки = ТаблицаДвижений.КоличествоСтрок() - 1 Тогда
		    Предупреждение("Обороты за период редактировать нельзя.
						   |Воспользуйтесь корректировкой операций.");
			
		Иначе
			Дебет = ТаблицаДвижений.Дебет;
			ВвестиЧисло(Дебет, "Оборот по дебету:", 15, 2);
			ТаблицаДвижений.Дебет = Дебет;
			УстановитьОборотыЗаПериод();
			УстановитьКонечноеСальдо();
		КонецЕсли;

	ИначеЕсли ТаблицаДвижений.ТекущаяКолонка() = "Кредит" Тогда
		Если ТаблицаДвижений.НомерСтроки = ТаблицаДвижений.КоличествоСтрок() Тогда
		    Предупреждение("Конечное сальдо редактировать нельзя.");
			
		ИначеЕсли ТаблицаДвижений.НомерСтроки = ТаблицаДвижений.КоличествоСтрок() - 1 Тогда
		    Предупреждение("Обороты за период редактировать нельзя.
						   |Воспользуйтесь корректировкой операций.");
			
		Иначе
			Кредит = ТаблицаДвижений.Кредит;
			ВвестиЧисло(Кредит, "Оборот по кредиту:", 15, 2);
			ТаблицаДвижений.Кредит = Кредит;
			УстановитьОборотыЗаПериод();
			УстановитьКонечноеСальдо();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //РедактироватьЯчейку

//******************************************************************************
// Процедура Печать()
// 
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка Печать
//         
// Описание:
//  Формируется отчет "Акт сверки" по данным таблицы значений ТаблицаДвижений
//  с учетом флажка Согласован: если он выставлен, то заполение идет не только 
//  данных нашей организации, но и данных контрагента
//
Процедура Печать()
    
	Если ТаблицаДвижений.КоличествоСтрок() = 0 Тогда
	    Предупреждение("Нет данных для печати.
						|Используйте кнопку ""Заполнить.""");
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
    ОбъектМД = Метаданные.Константа("ПолноеНаименованиеОрганизации");
	Если ОбъектМД.Выбран()=1 Тогда
    	НашаОрг = СокрЛП(Константа.ПолноеНаименованиеОрганизации);
	Иначе
		НашаОрг = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	КонецЕсли;
	Контр = глПолноеНаименование(Контрагент);
	Если ПредставительОрганизации.Выбран()=1 Тогда
	    ФИОПредставителя = ФИО(ПредставительОрганизации);
		Должность = СокрЛП(ПредставительОрганизации.Должность);
	Иначе
		ФИОПредставителя ="";
		Должность="";
	КонецЕсли;
	
	ФИОПредставителяК = СокрЛП(ФИОПредставителяКонтрагента);
	ДолжностьК = СокрЛП(ДолжностьПредставителяКонтрагента);
	
	ТекстЗаголовка = "взаимных расчетов по состоянию на " + Формат(КонДата, "Д ДДММГГГГ") + РазделительСтрок
					+ "между " + НашаОрг + РазделительСтрок + "и " + Контр;
	Если ПустоеЗначение(Договор) = 0 Тогда 
		Если Договор.ЭтоГруппа() = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + РазделительСтрок + "по договору " + СокрЛП(Договор.Наименование);
		Иначе
			ТекстЗаголовка = ТекстЗаголовка + РазделительСтрок + "по группе договоров " + СокрЛП(Договор.Наименование);
		КонецЕсли;
	КонецЕсли;
	
	ТекстШапки = "Мы, нижеподписавшиеся, " + ?(Должность<>"",Должность,"________________") + " " + НашаОрг 
				+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"_______________________") + ", с одной стороны, "
				+ "и " + ?(ДолжностьК<>"",ДолжностьК,"________________") + " " + Контр + " " 
				+ ?(ФИОПредставителяК<>"",ФИОПредставителяК,"_______________________") + ", с другой стороны, "
				+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
	
	Таб.ВывестиСекцию("Шапка");		
    
	Ном = 1;                         
	НомК = "";
	ОперК = "";
	ДебетК = "";
	КредитК = "";
	ТаблицаДвижений.ВыбратьСтроки();
	Пока ТаблицаДвижений.ПолучитьСтроку()=1 Цикл
	    Если Согласован = 1 Тогда
	        НомК = Ном;
			ДебетК = ТаблицаДвижений.Кредит;
			КредитК = ТаблицаДвижений.Дебет;
			
			Операция = СокрЛП(ТаблицаДвижений.Операция);
			Если Лев(Операция, 8) = "Передано" Тогда
				ОперК = "Принято" + Сред(Операция, 9);
				
			ИначеЕсли Лев(Операция, 7) = "Принято" Тогда
				ОперК = "Передано" + Сред(Операция, 8);

			ИначеЕсли Лев(Операция, 7) = "Продажа" Тогда
				ОперК = "Приход" + Сред(Операция, 8);

			ИначеЕсли Лев(Операция, 6) = "Приход" Тогда
				ОперК = "Продажа" + Сред(Операция, 7);
			
			Иначе
				ОперК = Операция;
			КонецЕсли;
	    КонецЕсли;
		Таб.ВывестиСекцию("Строка");
		Ном = Ном + 1;
	КонецЦикла;
	
	ПоДаннымКонтрагента = "";
	Результаты = "";
   	Если Согласован = 1 Тогда
   	    ПоДаннымКонтрагента = "По данным " + глПолноеНаименование(Контрагент);
   		Результаты = РезультатыСверки();
   	КонецЕсли;
   	
   	Таб.ВывестиСекцию("Подвал");
   	Таб.ТолькоПросмотр(1);
   	Таб.Опции(0, 0, 0, 0, "ПечатьАктСверкиРасчетов", "ОкноАктСверкиРасчетов");
   	Таб.ОбластьПечати(1, 2, 1, 1);
   	Таб.Показать("Акт сверки на " + Формат(КонДата, "Д ДДММГГГГ") + ", " + Контрагент + ?(ПустоеЗначение(Договор) = 0, ", " + Договор, ""));
	
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер, Значение)
	
	Если Значение = "Параметры" Тогда
		Форма.ИспользоватьСлой("Параметры, Основной", 2);
	
	ИначеЕсли Значение = "Таблица" Тогда
		Форма.ИспользоватьСлой("Таблица, Основной", 2);

	ИначеЕсли Значение = "Лица" Тогда
		Форма.ИспользоватьСлой("Лица, Основной", 2);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки)
	
	Сч50 = СчетПоКоду("50");
	Сч51 = СчетПоКоду("51");
	Сч52 = СчетПоКоду("52");
	Сч55 = СчетПоКоду("55");
	Сч60 = СчетПоКоду("60");
	Сч62 = СчетПоКоду("62");
	Сч66 = СчетПоКоду("66");
	Сч67 = СчетПоКоду("67");
	Сч75 = СчетПоКоду("75");
	Сч76 = СчетПоКоду("76");
	Сч76_2 = СчетПоКоду("76.2");
	Сч79 = СчетПоКоду("79");
	Сч90 = СчетПоКоду("90");
	Сч91 = СчетПоКоду("91");
	Сч91_1 = СчетПоКоду("91.1");
	Сч91_2 = СчетПоКоду("91.2");

	Если ФлагЧтенияНастройки = 0 Тогда
		НачДата = НачалоПериодаБИ();
		КонДата = КонецПериодаБИ();
		
		ДобавитьСчетВСписок(Сч60);
		ДобавитьСчетВСписок(Сч62);
		ДобавитьСчетВСписок(Сч66);
		ДобавитьСчетВСписок(Сч67);
		ДобавитьСчетВСписок(Сч75);
		ДобавитьСчетВСписок(Сч76);
		ДобавитьСчетВСписок(Сч79);

		Для СчетчикЦикла = 1 По СписокСчетов.РазмерСписка() Цикл
			СписокСчетов.Пометка(СчетчикЦикла, 1)
		КонецЦикла;		
	КонецЕсли;
	
	Если ТаблицаДвижений.КоличествоСтрок() = 0 Тогда
		//заполняем таблицу движений по расчетам с выбранным контрагентом
		ТаблицаДвижений.НоваяКолонка("Операция", "Текст", 30,, "Содержание операции");
		ТаблицаДвижений.НоваяКолонка("Документ", "Документ");
		ТаблицаДвижений.НоваяКолонка("Дебет", "Число", 15, 2);
		ТаблицаДвижений.НоваяКолонка("Кредит", "Число", 15, 2);
		ТаблицаДвижений.НоваяКолонка("Валюта", "Справочник.Валюта");
		ТаблицаДвижений.НоваяКолонка("ВалСумма", "Число", 15, 2);
		ТаблицаДвижений.ВидимостьКолонки("Валюта, ВалСумма", 0);
	КонецЕсли;
	Форма.Контрагент.ВыборГруппы(0);	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Параметры", "Параметры сверки");
	Форма.Закладки.ДобавитьЗначение("Таблица", "Таблица операций по расчетам");
	Форма.Закладки.ДобавитьЗначение("Лица", "Лица, подписывающие акт");
	Форма.ИспользоватьСлой("Основной, Параметры", 2);
	
КонецПроцедуры // ПриОткрытии()