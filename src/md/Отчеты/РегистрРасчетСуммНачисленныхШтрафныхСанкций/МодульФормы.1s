Перем ДатаНачалаНалоговогоПериода2003;

//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге
//
Функция ПроверкаПериода()
	
	Если (НачДата > КонДата) Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.", 60);
		Возврат 0;

	ИначеЕсли ПустоеЗначение(ДатаНачалаНалоговогоПериода2003) = 0 Тогда
		
		Если ((НачДата < ДатаНачалаНалоговогоПериода2003)
		   и  (КонДата >= ДатаНачалаНалоговогоПериода2003)) Тогда
			Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
			               "В выбранном интервале налоговый учет велся по"+РазделительСтрок+
						   "разным правилам."+РазделительСтрок+
						   "Отчет за данный период сформировать невозможно!", 60);
			Возврат 0;
		    
		КонецЕсли;

	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//*****************************************************************************
Процедура Сформировать()
	           
	ДатаНачалаНалоговогоПериода2003 = ПолучитьПустоеЗначение("Дата");
	глНовыеПравилаВеденияНУ(КонДата, ДатаНачалаНалоговогоПериода2003);

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	Состояние("Заполнение выходной таблицы...");
    
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	
	Таб = СоздатьОбъект("Таблица"); 
	Таб.ВывестиСекцию("Шапка");
	СуммаДохода = 0;
	СуммаРасхода = 0;
	
	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4
		ТабРасчет = СоздатьОбъект("ТаблицаЗначений");
		ТабРасчет.НоваяКолонка("ТекДок");
		ТабРасчет.НоваяКолонка("РеквизитыДоговора");
		ТабРасчет.НоваяКолонка("ПризнакДоходаРасхода");
		ТабРасчет.НоваяКолонка("Период"); 
		ТабРасчет.НоваяКолонка("База");
		ТабРасчет.НоваяКолонка("Ставка");
		ТабРасчет.НоваяКолонка("ВременнаяЕдиницаРасчета");
		ТабРасчет.НоваяКолонка("Сумма");
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");   	

		Для т = 1 По 2 Цикл	
			БухИт.ИспользоватьПланСчетов(ОсновнойПланСчетов());
			Если т =1 Тогда
				// ВНЕРЕАЛИЗАЦИОННЫЕ ДОХОДЫ
				БухИт.ИспользоватьСубконто(ВидыСубконто.ВнереализационныеДоходы, Перечисление.ВнереализационныеДоходы.Штрафы, 2);
				БухИт.ВыполнитьЗапрос(НачДата, КонДата, "Н08",,, 2, "Проводка", "С");
			Иначе
				// ВНЕРЕАЛИЗАЦИОННЫЕ РАСХОДЫ
				БухИт.ИспользоватьСубконто(ВидыСубконто.ВнереализационныеРасходы, Перечисление.ВнереализационныеРасходы.Штрафы, 2);
				БухИт.ВыполнитьЗапрос(НачДата, КонДата, "Н09",,, 2, "Проводка", "С");
			КонецЕсли;
	
			БухИт.ВыбратьПериоды();
			Пока БухИт.ПолучитьПериод() = 1 Цикл
				ТабРасчет.НоваяСтрока();
				Опер = БухИт.Операция;
				ТабРасчет.ТекДок = Опер.Документ.ТекущийДокумент();
	            
				Если (Опер.Документ.Выбран() = 1)
				   и (Опер.Документ.Вид() = "НачислениеШтрафныхСанкций") Тогда
					// Штраф начислен при помощи документа "Начисление штрафных санкций"
					ДокНачШтраф = Опер.Документ.ТекущийДокумент();
					ДокНачШтраф.ПолучитьСтрокуПоНомеру(Опер.НомерСтрокиДокумента());
					
				   	ТабРасчет.РеквизитыДоговора = "" + глПолноеНаименование(ДокНачШтраф.Контрагент);
					Если ПустоеЗначение(ДокНачШтраф.Договор) = 0 Тогда
						 ТабРасчет.РеквизитыДоговора = ТабРасчет.РеквизитыДоговора + ", " + ДокНачШтраф.Договор;
					КонецЕсли;
					ТабРасчет.ПризнакДоходаРасхода = ДокНачШтраф.ПризнакДоходаРасхода;
					ТабРасчет.Период = ПериодСтр(ДокНачШтраф.НачалоПериода, ДокНачШтраф.ОкончаниеПериода);
			        ТабРасчет.База = ФорматС(ДокНачШтраф.База);
					ТабРасчет.Ставка = ФорматС(ДокНачШтраф.Ставка);
					ТабРасчет.ВременнаяЕдиницаРасчета = ДокНачШтраф.ВременнаяЕдиницаРасчета;
					ТабРасчет.Сумма = ФорматС(ДокНачШтраф.Сумма);
	
				Иначе
			        Если т =1 Тогда
						ТабРасчет.ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Доход;
					Иначе
						ТабРасчет.ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Расход;
					КонецЕсли;
					// В проводках не содержится никаких данных о расчете штрафа кроме его суммы
					ТабРасчет.Сумма = ФорматС(Опер.Сумма);
				   	
				КонецЕсли;
	
				Если т = 1 Тогда
					СуммаДохода = СуммаДохода + Опер.Сумма;
				Иначе
					СуммаРасхода = СуммаРасхода + Опер.Сумма;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;

		ТабРасчет.Сортировать("ТекДок");

		ТабРасчет.ВыбратьСтроки();
		Пока ТабРасчет.ПолучитьСтроку() = 1 Цикл
			РеквизитыДоговора = ТабРасчет.РеквизитыДоговора;
			ПризнакДоходаРасхода = ТабРасчет.ПризнакДоходаРасхода;
			Период = ТабРасчет.Период; 
			База = ТабРасчет.База;
			Ставка = ТабРасчет.Ставка;
			ВременнаяЕдиницаРасчета = ТабРасчет.ВременнаяЕдиницаРасчета;
			Сумма = ТабРасчет.Сумма;
			ТекДок = ТабРасчет.ТекДок;
			
			Таб.ВывестиСекцию("Строка");
		КонецЦикла;
	
	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|ОбрабатыватьДокументы все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Период с НачДата по КонДата;
		|
		|Контрагент = Документ.НачислениеШтрафныхСанкций.Контрагент;
		|Договор = Документ.НачислениеШтрафныхСанкций.Договор;
		|ПризнакДоходаРасхода = Документ.НачислениеШтрафныхСанкций.ПризнакДоходаРасхода;
		|НачалоПериода = Документ.НачислениеШтрафныхСанкций.НачалоПериода;
		|ОкончаниеПериода = Документ.НачислениеШтрафныхСанкций.ОкончаниеПериода;
		|База = Документ.НачислениеШтрафныхСанкций.База;
		|Ставка = Документ.НачислениеШтрафныхСанкций.Ставка;
		|ВременнаяЕдиницаРасчета = Документ.НачислениеШтрафныхСанкций.ВременнаяЕдиницаРасчета;
		|Сумма = Документ.НачислениеШтрафныхСанкций.Сумма;
		|
		|Группировка Документ;
		|Группировка СтрокаДокумента;
		|
		|"//}}ЗАПРОС
		;
	
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;
	
		Пока Запрос.Группировка("Документ") = 1 Цикл
			Пока Запрос.Группировка("СтрокаДокумента") = 1 Цикл
				РеквизитыДоговора = "" + глПолноеНаименование(Запрос.Контрагент);
				Если ПустоеЗначение(Запрос.Договор) = 0 Тогда
					 РеквизитыДоговора = РеквизитыДоговора + ", " + Запрос.Договор;
				КонецЕсли;
				ПризнакДоходаРасхода = Запрос.ПризнакДоходаРасхода;
				Период = ПериодСтр(Запрос.НачалоПериода, Запрос.ОкончаниеПериода);
		        База = ФорматС(Запрос.База);
				Ставка = ФорматС(Запрос.Ставка);
				ВременнаяЕдиницаРасчета = Запрос.ВременнаяЕдиницаРасчета;
				Сумма = ФорматС(Запрос.Сумма);
				ТекДок = Запрос.Документ;
				Таб.ВывестиСекцию("Строка");
				
				Если ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Доход Тогда
					СуммаДохода = СуммаДохода + Запрос.Сумма;
	
				ИначеЕсли ПризнакДоходаРасхода = Перечисление.ПризнакДоходаРасхода.Расход Тогда
					СуммаРасхода = СуммаРасхода + Запрос.Сумма;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	
		СуммаДохода = ФорматС(СуммаДохода);
		СуммаРасхода = ФорматС(СуммаРасхода);
	КонецЕсли;

	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетСуммШтрафныхСанкций", "ОкноРегистрРасчетСуммШтрафныхСанкций");
	Таб.Показать("Регистр-расчет сумм начисленных штрафны санкций за отчетный период");

КонецПроцедуры // Сформировать()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()

    НачДата = НачГода(РабочаяДата());
	КонДата = КонКвартала(РабочаяДата()); 
	
КонецПроцедуры