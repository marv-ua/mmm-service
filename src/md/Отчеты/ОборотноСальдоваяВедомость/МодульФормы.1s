Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем СНД, СНК, СКД, СКК;
Перем ПланСчетов;
Перем ВыбПланСчетов;
Перем Субконто;
Перем Ит, РазвСальдоИт, ТЗСальдо;
Перем ПредставлениеРУ;
Перем тРазворотСубконто;
Перем Меню;

// Массивы для расчета развернутого сальдо.
Перем УровеньГруппировкиДляРасчетаСальдо[3];
Перем ВыборкаИтоговПоГруппеСправочника[3];
Перем ВидСубконто[3], ОтборСубконто[3];

//----------------------------------------------------------------------
Процедура ВосстановитьНастройкиПоУмолчанию(БезВопросов = 1)
	
	НастройкаРазвернутогоСальдо = СоздатьОбъект("Таблица");
	НастройкаРазвернутогоСальдо.ИсходнаяТаблица("НастройкаРазвернутогоСальдо");
	Если ПустоеЗначение(НастройкаРазвернутогоСальдо) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если БезВопросов = 1 Тогда
		Если Вопрос("Восстановить исходный список счетов," + РазделительСтрок + 
					"поставляемый фирмой 1С ?", "Да+Нет") <> "Да" Тогда
			Возврат;
		
		КонецЕсли;
	КонецЕсли;
	
	ФормРазворот.УдалитьСтроки();
	
	НастройкаРазвернутогоСальдо.Вывести();
	Счет = СоздатьОбъект("Счет." + ВыбранныйПланСчетов().Идентификатор());
	НомерСтроки = 1;
	Пока ПустоеЗначение(НастройкаРазвернутогоСальдо.Область(НомерСтроки, 1).Текст) = 0 Цикл
		КодСчета = НастройкаРазвернутогоСальдо.Область(НомерСтроки, 1).Текст;
		Если Счет.НайтиПоКоду(КодСчета) = 1 Тогда
			ФормРазворот.НоваяСтрока();
			ФормРазворот.Счет = СчетПоКоду(КодСчета);
			ФормРазворот.Субсчета = НастройкаРазвернутогоСальдо.Область(НомерСтроки, 2).Текст;
			ФормРазворот.Субконто = НастройкаРазвернутогоСальдо.Область(НомерСтроки, 3).Текст;
			ФормРазворот.Список = СоздатьОбъект("СписокЗначений");
			
			Для Индекс = 1 по 3 Цикл
				ВрСуб = Счет.ВидСубконто(Индекс);
				Если ПустоеЗначение(ВрСуб) = 0 Тогда
					ЕстьПометка = Число(НастройкаРазвернутогоСальдо.Область(НомерСтроки, 3 + Индекс).Текст);
					Если ПустоеЗначение(ЕстьПометка) = 0 Тогда
					    ФормРазворот.Список.ДобавитьЗначение(Счет.ВидСубконто(Индекс));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры // ВосстановитьНастройкиПоУмолчанию()

//----------------------------------------------------------------------
Функция РазвСальдоЕстьПравило(ПарамСчет, Стр = 0)
	// ПАРАМЕТРЫ:
	//  ДЕЙСТВИЕ: 0 - правила нет. 2 - Есть. 1 - есть в поддереве.

	ЕстьВПоддереве = 0;
	Если ПарамСчет.ЭтоГруппа() = 1 Тогда
		ФормРазворот.ВыбратьСтроки();
		Пока ФормРазворот.ПолучитьСтроку() = 1 Цикл
			Если ФормРазворот.Счет.ПринадлежитГруппе(ПарамСчет) = 1 Тогда
				ЕстьВПоддереве = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ФормРазворот.НайтиЗначение(ПарамСчет, Стр,"Счет") = 1 Тогда
		Если ФормРазворот.ПолучитьЗначение(Стр, "Субконто") = "Х" Тогда
		    Возврат 2;
			
		ИначеЕсли ФормРазворот.ПолучитьЗначение(Стр, "Субсчета") = "Х" Тогда
			Если ЕстьВПоддереве = 1 Тогда
				Возврат 1;
			
			Иначе
				Возврат 2;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции

//-----------------------------------------------
Процедура ПолучитьУровниГруппировокДляРасчетаСальдо(БухИт)
	
	Индекс = 3;
	Для ТипСуммы = 1 по 3 Цикл
		УровеньГруппировкиДляРасчетаСальдо[ТипСуммы] = 0;
	КонецЦикла;
	
	Пока Индекс > 0 Цикл
		// Если установлен режим "разворачивать" и по субконто ведется учет остатков:
		Если ОтборСубконто[Индекс] = 1 Тогда
			Для НомерСубконто = 1 по 3 Цикл
				Если ВидСубконто[Индекс] = БухИт.Счет.ВидСубконто(НомерСубконто) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если БухИт.Счет.ТолькоОбороты(НомерСубконто) = 0 Тогда
				Если (БухИт.Счет.УчетПоСумме(НомерСубконто) = 1) и (УровеньГруппировкиДляРасчетаСальдо[1] = 0) Тогда
				    УровеньГруппировкиДляРасчетаСальдо[1] = Индекс;
				КонецЕсли;	
				
				Если (БухИт.Счет.УчетПоВалютнойСумме(НомерСубконто) = 1) и (УровеньГруппировкиДляРасчетаСальдо[2] = 0) Тогда
				    УровеньГруппировкиДляРасчетаСальдо[2] = Индекс;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Индекс = Индекс - 1;
	КонецЦикла;
	
КонецПроцедуры // ПолучитьУровниГруппировокДляРасчетаСальдо()

//-----------------------------------------------
Процедура ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(БухИт, Индекс, ТЗ, ТипСуммы, ДанныеПоВалютам = 0)
	
	Если (УровеньГруппировкиДляРасчетаСальдо[ТипСуммы] = Индекс) и
		 (ВыборкаИтоговПоГруппеСправочника[Индекс] = 0) Тогда
		 	
		ТЗ.НоваяСтрока();
		
		СН = БухИт.СНД(ТипСуммы) - БухИт.СНК(ТипСуммы);
		Если СН > 0 Тогда
			ТЗ.СНД = ТЗ.СНД + СН;
			
		Иначе
			ТЗ.СНК = ТЗ.СНК - СН;
		КонецЕсли;

		СК = БухИт.СКД(ТипСуммы) - БухИт.СКК(ТипСуммы);
		Если СК > 0 Тогда
			ТЗ.СКД = ТЗ.СКД + СК;
			
		Иначе
			ТЗ.СКК = ТЗ.СКК - СК;
		КонецЕсли;
		
		Если ДанныеПоВалютам = 1 Тогда
		    ТЗ.Валюта = БухИт.Валюта;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьИтогиПоСубконтоКРазвернутомуСальдо()

//-----------------------------------------------
Функция ИтогиНеРавныНулю(БухИт, Индекс)
	
	Для ТипСуммы = 1 по 2 Цикл
		Если БухИт.СНД(ТипСуммы) <> 0 Тогда
			Возврат 1;

		ИначеЕсли БухИт.СНК(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.ДО(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.КО(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.СКД(ТипСуммы) <> 0 Тогда
			Возврат 1;
			
		ИначеЕсли БухИт.СКК(ТипСуммы) <> 0 Тогда
			Возврат 1;
		КонецЕсли;
	КонецЦикла;
	
	Если Индекс < 3 Тогда
		СледующийИндекс = Индекс + 1;
	    Если ОтборСубконто[СледующийИндекс] = 1 Тогда
		    БухИт.ВыбратьСубконто(СледующийИндекс);
		    Пока БухИт.ПолучитьСубконто(СледующийИндекс) = 1 Цикл
				Если ИтогиНеРавныНулю(БухИт, СледующийИндекс) = 1 Тогда
					БухИт.ПолучитьСубконто(СледующийИндекс,, "");
				    Возврат 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;

КонецФункции // ИтогиНеРавныНулю()

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
КонецПроцедуры

//----------------------------------------------------------------------
Процедура РассчитатьСальдоПоПравилам(ПланСчетов)
	ТЗСальдо = СоздатьОбъект("ТаблицаЗначений");
	ТЗСальдо.НоваяКолонка("СумСальдо");
	Если ДанныеПоВалютам = 1 Тогда
		ТЗСальдо.НоваяКолонка("ВалСальдо");
	КонецЕсли;

	ФормРазворот.ВыбратьСтроки();
	Пока ФормРазворот.ПолучитьСтроку() = 1 Цикл
		ТЗСальдо.НоваяСтрока();

		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ТЗ.НоваяКолонка("Валюта");
		ТЗ.НоваяКолонка("СНД", "Число");
		ТЗ.НоваяКолонка("СНК", "Число");
		ТЗ.НоваяКолонка("СКД", "Число");
		ТЗ.НоваяКолонка("СКК", "Число");
		ТЗСальдо.СумСальдо = ТЗ;

		Если (ФормРазворот.Счет.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
			ТЗВ = СоздатьОбъект("ТаблицаЗначений");
			ТЗВ.НоваяКолонка("Валюта");
			ТЗВ.НоваяКолонка("СНД", "Число");
			ТЗВ.НоваяКолонка("СНК", "Число");
			ТЗВ.НоваяКолонка("СКД", "Число");
			ТЗВ.НоваяКолонка("СКК", "Число");
			ТЗСальдо.ВалСальдо = ТЗВ;
		КонецЕсли;

		Если ПланСчетов <> ФормРазворот.Счет.ПланСчетов() Тогда
			Продолжить;
		КонецЕсли;

		Если ФормРазворот.Субсчета = "Х" Тогда
			// ...по субсчетам...
			Если Ит.ПолучитьСчет(, ФормРазворот.Счет) = 1 Тогда
				ТЗ.НоваяСтрока();
				ТЗ.СНД = 0;
				ТЗ.СНК = 0;
				ТЗ.СКД = 0;
				ТЗ.СКК = 0;
				Пока Ит.ПолучитьСчет() = 1 Цикл
					Если Ит.Счет.ПринадлежитГруппе(ФормРазворот.Счет) = 0 Тогда
						Прервать;

					ИначеЕсли Ит.Счет.ЭтоГруппа() = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					СН = Ит.СНД(1)-Ит.СНК(1);
					Если СН > 0 Тогда
						ТЗ.СНД = ТЗ.СНД+СН;
					Иначе
						ТЗ.СНК = ТЗ.СНК-СН;
					КонецЕсли;

					СК = Ит.СКД(1)-Ит.СКК(1);
					Если СК > 0 Тогда
						ТЗ.СКД = ТЗ.СКД+СК;
					Иначе
						ТЗ.СКК = ТЗ.СКК-СК;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

			Если (ФормРазворот.Счет.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
				Ит.ПолучитьСчет(, "");
				Ит.ВыбратьВалюты();
				Пока Ит.ПолучитьВалюту() = 1 Цикл
					Если Ит.ПолучитьСчет(, ФормРазворот.Счет) = 1 Тогда
						ТЗ.НоваяСтрока();
						ТЗ.Валюта = Ит.Валюта;
						ТЗ.СНД = 0;
						ТЗ.СНК = 0;
						ТЗ.СКД = 0;
						ТЗ.СКК = 0;
						ТЗВ.НоваяСтрока();
						ТЗВ.Валюта = Ит.Валюта;
						ТЗВ.СНД = 0;
						ТЗВ.СНК = 0;
						ТЗВ.СКД = 0;
						ТЗВ.СКК = 0;
						Пока Ит.ПолучитьСчет() = 1 Цикл
							Если Ит.Счет.ПринадлежитГруппе(ФормРазворот.Счет) = 0 Тогда
								Прервать;
		
							ИначеЕсли Ит.Счет.ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
					
							СН = Ит.СНД(1)-Ит.СНК(1);
							Если СН > 0 Тогда
								ТЗ.СНД = ТЗ.СНД+СН;
							Иначе
								ТЗ.СНК = ТЗ.СНК-СН;
							КонецЕсли;

							СК = Ит.СКД(1)-Ит.СКК(1);
							Если СК > 0 Тогда
								ТЗ.СКД = ТЗ.СКД+СК;
							Иначе
								ТЗ.СКК = ТЗ.СКК-СК;
							КонецЕсли;

							СН = Ит.СНД(2)-Ит.СНК(2);
							Если СН > 0 Тогда
								ТЗВ.СНД = ТЗВ.СНД+СН;
							Иначе
								ТЗВ.СНК = ТЗВ.СНК-СН;
							КонецЕсли;

							СК = Ит.СКД(2)-Ит.СКК(2);
							Если СК > 0 Тогда
								ТЗВ.СКД = ТЗВ.СКД+СК;
							Иначе
								ТЗВ.СКК = ТЗВ.СКК-СК;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
				Ит.ПолучитьВалюту(, "");
			КонецЕсли;
		Иначе
			// ...по субконто - выполним запрос...
			//
			Для А = 1 по 3 Цикл
				ВидСубконто[А] = 0;
				ОтборСубконто[А] = 3;
			КонецЦикла;
			
			Субконто = ФормРазворот.Список;
			Для А = 1 По ФормРазворот.Счет.КоличествоСубконто() Цикл
				Если (ФормРазворот.Счет.ТолькоОбороты(А) = 0) и (Субконто.НайтиЗначение(ФормРазворот.Счет.ВидСубконто(А)) <> 0)  Тогда
					ВидСубконто[А] = ФормРазворот.Счет.ВидСубконто(А);
					ОтборСубконто[А] = 1;
				КонецЕсли;
			КонецЦикла;
			
			Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
				Поменять(1, 2);
			КонецЕсли;
			Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
				Поменять(2, 3);
				Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
					Поменять(1, 2);
				КонецЕсли;
			КонецЕсли;
			
			Для А=1 По 3 Цикл
				Если ОтборСубконто[А] <> 3 Тогда
				    РазвСальдоИт.ИспользоватьСубконто(ВидСубконто[А],, ОтборСубконто[А], 0);
				КонецЕсли;
			КонецЦикла;

			Если (ДанныеПоВалютам = 1) И (ФормРазворот.Счет.Валютный = 1) Тогда
				РазвСальдоИт.ВыполнитьЗапрос(Дата1, Дата2, ФормРазворот.Счет,,,  1,, "СВ");
			Иначе
				РазвСальдоИт.ВыполнитьЗапрос(Дата1, Дата2, ФормРазворот.Счет,,,  1,, "С");
			КонецЕсли;
			
			ПолучитьУровниГруппировокДляРасчетаСальдо(РазвСальдоИт);
			
			Если ОтборСубконто[1] = 1 Тогда // разворачивать
			    РазвСальдоИт.ВыбратьСубконто();
			    Пока РазвСальдоИт.ПолучитьСубконто() = 1 Цикл
					Если ИтогиНеРавныНулю(РазвСальдоИт, 1) = 0 Тогда
					    Продолжить;
					КонецЕсли;
					
					ВыборкаИтоговПоГруппеСправочника[1] = РазвСальдоИт.ЭтоГруппа();
					ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 1, ТЗ, 1, 0);
					
					Если (ДанныеПоВалютам = 1) И (ФормРазворот.Счет.Валютный = 1) Тогда
			            РазвСальдоИт.ВыбратьВалюты();
			            Пока РазвСальдоИт.ПолучитьВалюту()=1 Цикл
							ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 1, ТЗ, 1, 1);
			            	ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 1, ТЗВ, 2, 1);
						КонецЦикла;
					КонецЕсли;
		
					Если ОтборСубконто[2] = 1 Тогда // разворачивать
					    РазвСальдоИт.ВыбратьСубконто(2);
					    Пока РазвСальдоИт.ПолучитьСубконто(2) = 1 Цикл
							Если ИтогиНеРавныНулю(РазвСальдоИт, 2) = 0 Тогда
							    Продолжить;
							КонецЕсли;
							
							ВыборкаИтоговПоГруппеСправочника[2] = Макс(РазвСальдоИт.ЭтоГруппа(), ВыборкаИтоговПоГруппеСправочника[1]);
							ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 2, ТЗ, 1, 0);
							
				        	Если (ДанныеПоВалютам = 1) И (ФормРазворот.Счет.Валютный = 1) Тогда
				        		РазвСальдоИт.ВыбратьВалюты(,,1);
				        		Пока РазвСальдоИт.ПолучитьВалюту(1)=1 Цикл
									ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 2, ТЗ, 1, 1);	
			            			ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 2, ТЗВ, 2, 1);
								КонецЦикла;
							КонецЕсли;
		
							Если ОтборСубконто[3] = 1 Тогда // разворачивать
							    РазвСальдоИт.ВыбратьСубконто(3);
							    Пока РазвСальдоИт.ПолучитьСубконто(3) = 1 Цикл
									Если ИтогиНеРавныНулю(РазвСальдоИт, 3) = 0 Тогда
									    Продолжить;
									КонецЕсли;
									
									ВыборкаИтоговПоГруппеСправочника[3] = Макс(РазвСальдоИт.ЭтоГруппа(), ВыборкаИтоговПоГруппеСправочника[2]);
						        	ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 3, ТЗ, 1, 0);
									
									Если (ДанныеПоВалютам = 1) И (ФормРазворот.Счет.Валютный = 1) Тогда
						        		РазвСальдоИт.ВыбратьВалюты(,,2);
						        		Пока РазвСальдоИт.ПолучитьВалюту(2)=1 Цикл
											ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 3, ТЗ, 1, 1);
		            						ДобавитьИтогиПоСубконтоКРазвернутомуСальдо(РазвСальдоИт, 3, ТЗВ, 2, 1);
										КонецЦикла;
						        	КонецЕсли;
						        КонецЦикла;
							КонецЕсли;
				        КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ТЗ.Свернуть("Валюта", "СНД,СНК,СКД,СКК");
			
			СальдоНеРавноНулю = 0;
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				Если (ТЗ.СНД <> 0) Тогда
					СальдоНеРавноНулю = 1;
					Прервать;
					
				ИначеЕсли (ТЗ.СНК <> 0) Тогда
					СальдоНеРавноНулю = 1;
					Прервать;
					
				ИначеЕсли (ТЗ.СКД <> 0) Тогда
					СальдоНеРавноНулю = 1;
					Прервать;
					
				ИначеЕсли (ТЗ.СКК <> 0) Тогда
					СальдоНеРавноНулю = 1;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если СальдоНеРавноНулю = 0 Тогда
			    ТЗ.НоваяСтрока();
				ТЗ.Валюта = ПолучитьПустоеЗначение();
				ТЗ.СНД = РазвСальдоИт.СНД(1);
				ТЗ.СНК = РазвСальдоИт.СНК(1);
				ТЗ.СКД = РазвСальдоИт.СКД(1);
				ТЗ.СКК = РазвСальдоИт.СКК(1);
			КонецЕсли;
			
			
			Если (ФормРазворот.Счет.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
				ТЗВ.Свернуть("Валюта", "СНД,СНК,СКД,СКК");
				
				ВалСальдоНеРавноНулю = 0;
				ТЗВ.ВыбратьСтроки();
				Пока ТЗВ.ПолучитьСтроку() = 1 Цикл
					Если (ТЗВ.СНД <> 0) Тогда
						ВалСальдоНеРавноНулю = 1;
						Прервать;
						
					ИначеЕсли (ТЗВ.СНК <> 0) Тогда
						ВалСальдоНеРавноНулю = 1;
						Прервать;
						
					ИначеЕсли (ТЗВ.СКД <> 0) Тогда
						ВалСальдоНеРавноНулю = 1;
						Прервать;
						
					ИначеЕсли (ТЗВ.СКК <> 0) Тогда
						ВалСальдоНеРавноНулю = 1;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				РазвСальдоИт.ВыбратьВалюты();
				Пока РазвСальдоИт.ПолучитьВалюту() = 1 Цикл
					Если ВалСальдоНеРавноНулю = 0 Тогда
					    ТЗВ.НоваяСтрока();
						ТЗВ.Валюта = РазвСальдоИт.Валюта;
						ТЗВ.СНД = РазвСальдоИт.СНД(2);
						ТЗВ.СНК = РазвСальдоИт.СНК(2);
						ТЗВ.СКД = РазвСальдоИт.СКД(2);
						ТЗВ.СКК = РазвСальдоИт.СКК(2);
					КонецЕсли;
					
					Если СальдоНеРавноНулю = 0 Тогда
						ТЗ.НоваяСтрока();
						ТЗ.Валюта = РазвСальдоИт.Валюта;
						ТЗ.СНД = РазвСальдоИт.СНД(1);
						ТЗ.СНК = РазвСальдоИт.СНК(1);
						ТЗ.СКД = РазвСальдоИт.СКД(1);
						ТЗ.СКК = РазвСальдоИт.СКК(1);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//----------------------------------------------------------------------
Функция СальдоПолучить(ПарамСчет, СНД, СНК, СКД, СКК, ТипСуммы, ПарамВалюта)
	// ПАРАМЕТРЫ: ФормРазворот содержит правила разорота сальдо.
	//  ДЕЙСТВИЕ: возвращает разверутое сальдо по ПарамСчет в соотв. с зад. правилами.

	Перем ВремСНД, ВремСНК, ВремСКД, ВремСКК;

	Стр = 0;
	Правило = РазвСальдоЕстьПравило(ПарамСчет, Стр);
	Если Правило = 2 Тогда
		// Считаем сальдо в соотв. с правилами...
		// Развернутое сальдо...
		ТЗСальдо.ПолучитьСтрокуПоНомеру(Стр);
		Если ТипСуммы = 1 Тогда
			ТЗ = ТЗСальдо.СумСальдо;
		Иначе
			ТЗ = ТЗСальдо.ВалСальдо;
		КонецЕсли;
		Стр = 0;
		Если ТЗ.НайтиЗначение(ПарамВалюта, Стр, "Валюта") = 0 Тогда
			Возврат 0;
		КонецЕсли;
		ТЗ.ПолучитьСтрокуПоНомеру(Стр);
		СНД = ТЗ.СНД;
		СНК = ТЗ.СНК;
		СКД = ТЗ.СКД;
		СКК = ТЗ.СКК;
	
	ИначеЕсли Правило = 0 Тогда
		// Запомнить позицию в объекте бух. итогов
		Счет = Ит.Счет;
		Валюта = Ит.Валюта;
		
		// Спозиционируемся на указанные субсчет и валюту
		Найдено = Ит.ПолучитьСчет(, ПарамСчет);
		Если Найдено = 1 Тогда
			Если ПарамВалюта <> ПолучитьПустоеЗначение() Тогда
				// Выберем итоги по уаказанной валюте
				Найдено = Ит.ПолучитьВалюту(, ПарамВалюта);
			КонецЕсли;
		КонецЕсли;
		
		Если Найдено = 1 Тогда
			СНД = Ит.СНД(ТипСуммы);
			СНК = Ит.СНК(ТипСуммы);
			СКД = Ит.СКД(ТипСуммы);
			СКК = Ит.СКК(ТипСуммы);
		
		Иначе
			СНД = 0;
			СНК = 0;
			СКД = 0;
			СКК = 0;
		КонецЕсли;

		// Восстановить позицию в объекте бух. итогов
		Если ПарамВалюта <> ПолучитьПустоеЗначение() Тогда
			Ит.ПолучитьСчет(, Счет);
			Ит.ПолучитьВалюту(, Валюта);
		Иначе
			Ит.ПолучитьСчет(, Счет);
		КонецЕсли;
		
	Иначе // = 1
		// Есть правила в поддереве. Рекурсия...
		Найдено = 0;
        СНД = 0;
		СНК = 0;
		СКД = 0;
		СКК = 0;
		Субсчета = СоздатьОбъект("Счет");
		Субсчета.ИспользоватьРодителя(ПарамСчет);
		Субсчета.ВыбратьСчета();
		Пока Субсчета.ПолучитьСчет(0) = 1 Цикл
			Если СальдоПолучить(Субсчета.ТекущийСчет(), ВремСНД, ВремСНК, ВремСКД, ВремСКК, ТипСуммы, ПарамВалюта) = 1 Тогда
				Найдено = 1;
				СНД = СНД + ВремСНД;
				СНК = СНК + ВремСНК;
				СКД = СКД + ВремСКД;
				СКК = СКК + ВремСКК;
			КонецЕсли;
		КонецЦикла;

		Возврат Найдено;
	КонецЕсли;

	Найдено = 0;
	Если СНД <> 0 Тогда
	    Найдено = 1;
		
	ИначеЕсли СНК <> 0 Тогда
	    Найдено = 1;
		
	ИначеЕсли СКД <> 0 Тогда
	    Найдено = 1;
		
	ИначеЕсли СКК <> 0 Тогда
	    Найдено = 1;
	КонецЕсли;
	
	Возврат Найдено;
	
КонецФункции

//-------------------------------------------------------------------
Функция ИтогиПолучить(ПарамСчет, СНД, СНК, СКД, СКК, ДО, КО, ТипСуммы, ПарамВалюта)
	СНД = 0;
	СНК = 0;
	СКД = 0;
	СКК = 0;
	ДО = 0;
	КО = 0;
	
	Найдено = 1;
	Если ПарамСчет <> Ит.Счет Тогда
		Найдено = 0;
	КонецЕсли;
	Если (Найдено = 1) И (ПарамВалюта <> ПолучитьПустоеЗначение()) Тогда
		Если ПарамВалюта <> Ит.Валюта Тогда
			Найдено = 0;
		КонецЕсли;
	КонецЕсли;

	Если Найдено = 1 Тогда
		ДО = Ит.ДО(ТипСуммы);
		КО = Ит.КО(ТипСуммы);
	КонецЕсли;

	Если СальдоПолучить(ПарамСчет, СНД, СНК, СКД, СКК, ТипСуммы, ПарамВалюта) = 1 Тогда
		Найдено = 1;
	КонецЕсли;

	Возврат Найдено;
КонецФункции                      

//----------------------------------------------------------------------
Процедура ПоВалюте(ИтСб)
	Если ДанныеПоВалютам = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИтСб.ВыбратьВалюты();
	Пока ИтСб.ПолучитьВалюту() = 1 Цикл
		Т.ВывестиСекцию("Секция_11");
	КонецЦикла;
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПоСубконто(Счет)
	Если ДанныеПоСубсчетам = 0 Тогда
		Возврат;
	КонецЕсли;
	Стр = 0;
	Если тРазворотСубконто.НайтиЗначение(Счет, Стр, "Счет") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для А = 1 по 3 Цикл
		ВидСубконто[А] = 0;
		ОтборСубконто[А] = 3;
	КонецЦикла;
			
	тРазворотСубконто.ПолучитьСтрокуПоНомеру(Стр);
	ИтСб = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтСб.ИспользоватьРазделительУчета(РазделительУчета);
	Для А=1 По тРазворотСубконто.Список.РазмерСписка() Цикл
		Если тРазворотСубконто.Список.Пометка(А) = 1 Тогда
			ВидСубконто[А] = тРазворотСубконто.Список.ПолучитьЗначение(А);
			ОтборСубконто[А] = 1;
		КонецЕсли;
	КонецЦикла;
	
	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;
	
	Если ОтборСубконто[1] <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
		    ИтСб.ИспользоватьСубконто(ВидСубконто[А],, ОтборСубконто[А], 0);
		КонецЕсли;
	КонецЦикла;
	
	ИтСб.ВыполнитьЗапрос(Дата1, Дата2, Счет);
	ПолучитьУровниГруппировокДляРасчетаСальдо(ИтСб);
	
	Расшифровка.Установить("Меню");
	Расшифровка.Установить("Отчет", "КарточкаСчета");

	Расшифровка.Установить("ВидСубконто1", ВидСубконто[1]);
	Расшифровка.Установить("ОтборСубконто1", 2);
	ИтСб.ВыбратьСубконто(1);
	Пока ИтСб.ПолучитьСубконто(1) = 1 Цикл
		Если ИтогиНеРавныНулю(ИтСб, 1) = 0 Тогда
		    Продолжить;
		КонецЕсли;
		
		Расшифровка.Установить("Субконто1", ИтСб.Субконто(1));
		НомерСубконто = 1;
		Т.ВывестиСекцию("Секция_10");
		ПоВалюте(ИтСб);
		Если ОтборСубконто[2] = 1 Тогда
			Расшифровка.Установить("ВидСубконто2", ВидСубконто[2]);
			Расшифровка.Установить("ОтборСубконто2", 2);
			ИтСб.ВыбратьСубконто(2);
			Пока ИтСб.ПолучитьСубконто(2) = 1 Цикл
				Если ИтогиНеРавныНулю(ИтСб, 2) = 0 Тогда
				    Продолжить;
				КонецЕсли;
					
				Расшифровка.Установить("Субконто2", ИтСб.Субконто(2));
				НомерСубконто = 2;
				Т.ВывестиСекцию("Секция_10");
				ПоВалюте(ИтСб);
				Если ОтборСубконто[3] = 1 Тогда
					Расшифровка.Установить("ВидСубконто3", ВидСубконто[3]);
					Расшифровка.Установить("ОтборСубконто3", 2);
					ИтСб.ВыбратьСубконто(3);
					Пока ИтСб.ПолучитьСубконто(3) = 1 Цикл
						Если ИтогиНеРавныНулю(ИтСб, 3) = 0 Тогда
						    Продолжить;
						КонецЕсли;
						
						НомерСубконто = 3;  
						Расшифровка.Установить("Субконто3", ИтСб.Субконто(3));
						Т.ВывестиСекцию("Секция_10");
						ПоВалюте(ИтСб);
					КонецЦикла;
					Расшифровка.Установить("ВидСубконто3");
					Расшифровка.Установить("Субконто3");
					Расшифровка.Установить("ОтборСубконто3");
				КонецЕсли;
			КонецЦикла;
			Расшифровка.Установить("ВидСубконто2");       
			Расшифровка.Установить("Субконто2");
			Расшифровка.Установить("ОтборСубконто2");
		КонецЕсли;
	КонецЦикла;
	Расшифровка.Установить("Субконто1");
	Расшифровка.Установить("ВидСубконто1");
	Расшифровка.Установить("ОтборСубконто1");
	Расшифровка.Установить("ПоГруппам1");

    Расшифровка.Установить("Меню", Меню);
	Расшифровка.Установить("Отчет");
КонецПроцедуры

//----------------------------------------------------------------------
Функция ПроверкаПериода()
	Если ПустоеЗначение(Дата1) = 1 Тогда
	    Предупреждение("Не указана дата начала периода отчета!");
		Возврат 0;
	КонецЕсли;
	Если Дата1 > Дата2 Тогда
		Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//----------------------------------------------------------------------
Функция РасшифровкаДтКт(ДтКт)
	Расшифровка.Установить("ДтКт", ДтКт);
	Возврат Расшифровка;
КонецФункции

//----------------------------------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//----------------------------------------------------------------------
Функция ПечататьПосчету(Сч)
	Если (ДанныеПоСубсчетам = 0) И (Сч.Уровень() > 1) Тогда
		Возврат 0;
	КонецЕсли;            
	Сч1 = Сч.Родитель();
	Пока Сч1.Выбран() = 1 Цикл                                          
		Стр = 0;
	    Если тРазворотСубконто.НайтиЗначение(Сч1, Стр, "Счет") = 1 Тогда
			тРазворотСубконто.ПолучитьСтрокуПоНомеру(Стр);
			Если тРазворотСубконто.СубСчета = " " Тогда
				Возврат 0;
			КонецЕсли; 
		КонецЕсли;
		Сч1 = Сч1.Родитель();
	КонецЦикла;
	Возврат 1;
КонецФункции
		
//----------------------------------------------------------------------
Процедура Сформировать(ФлагЗакрытияФормы = 0)
	Перем ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, МаскаСубконто[5];

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	Расшифровка = СоздатьОбъект("СписокЗначений");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	РазвСальдоИт = СоздатьОбъект("БухгалтерскиеИтоги");

	СНД = 0;
	СНК = 0;
	СКД = 0;
	СКК = 0;
	Если ВыбПланСчетов = 1 Тогда
		ПланСчетов = ВыбранныйПланСчетов();
	КонецЕсли;
	Ит.ИспользоватьПланСчетов(ПланСчетов);
	Ит.ИспользоватьРазделительУчета(РазделительУчета);
	Ит.ВключатьСубсчета(1);
	Если Ит.ВыполнитьЗапрос(Дата1, Дата2) = 0 Тогда
		Возврат;
	КонецЕсли;

	тРазворотСубконто = СоздатьОбъект("ТаблицаЗначений");
	тРазворотСубконто.НоваяКолонка("Счет",,,, "Счет", 16);
	тРазворотСубконто.НоваяКолонка("Субсчета",,,, "Субсчета", 9);
	тРазворотСубконто.НоваяКолонка("Субконто",,,, "Субконто", 9);
	тРазворотСубконто.НоваяКолонка("Список");
	тРазворотСубконто.ВидимостьКолонки("Список", 0);
	ВосстановитьЗначение("ОСВРазворотСубконто", тРазворотСубконто);

	Если (ТипЗначенияСтр(Т) <> "Таблица")ИЛИ(Обновить=0) Тогда
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	Т.ИсходнаяТаблица("Таблица");
	
	НазваниеОрганизации = глНазваниеОрганизации(Контекст);
                  
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("КарточкаСчета", "Карточка счета");
	Меню.ДобавитьЗначение("ОборотноСальдоваяВедомостьПоСчету", "Ведомость по счету");
	Меню.ДобавитьЗначение("АнализСчета", "Анализ счета");
	Меню.ДобавитьЗначение("ОтчетПоПроводкам", "Отчет по проводкам");
	Меню.ДобавитьЗначение("ГлавнаяКнига", "Обороты счета (Гл. книга)");
	Меню.ДобавитьЗначение("ЖурналОрдер", "Журнал-ордер (ведомость) по счету");

	Если РазвернутоеСальдо = 1 Тогда
		РазвСальдоИт.ИспользоватьПланСчетов(ПланСчетов);
		РазвСальдоИт.ИспользоватьРазделительУчета(РазделительУчета);
		РассчитатьСальдоПоПравилам(ПланСчетов);
		Счет = СоздатьОбъект("Счет");
		Счет.ИспользоватьПланСчетов(ПланСчетов);

		Расшифровка.Установить("Дата1", Дата1);
		Расшифровка.Установить("Дата2", Дата2);
		Расшифровка.Установить("РазделительУчета", РазделительУчета);
		Расшифровка.Установить("ПланСчетов", ПланСчетов);
		Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомость");
		Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
		Расшифровка.Установить("ДанныеПоВалютам", ДанныеПоВалютам);
		Расшифровка.Установить("РазвернутоеСальдо", РазвернутоеСальдо);
		Расшифровка.Установить("ЗабалансовыеСчета", ЗабалансовыеСчета);
		Расшифровка.Установить("ФормРазворот", ФормРазворот);
		Т.ВывестиСекцию("Секция_6");
	    Расшифровка.Установить("Отчет");
	    Расшифровка.Установить("ДанныеПоСубсчетам");
	    Расшифровка.Установить("ДанныеПоВалютам");
		Расшифровка.Установить("РазвернутоеСальдо");
		Расшифровка.Установить("ЗабалансовыеСчета");
		Расшифровка.Установить("ФормРазворот");
	    Расшифровка.Установить("Обновить");
		
		Т.ВывестиСекцию("Секция_1");
	    Расшифровка.Установить("Меню", Меню);
		
        СНД = 0;
		СНК = 0;
		СКД = 0;
		СКК = 0;
		Счет.ВыбратьСчета();
		Ит.ВыбратьСчета();
		Ит.ПолучитьСчет();
		Пока Счет.ПолучитьСчет() = 1 Цикл
			Сч = Счет.ТекущийСчет();
			Если ПечататьПоСчету(Сч) = 0 Тогда
				Если Ит.Счет = Сч Тогда
					Ит.ПолучитьСчет();
				КонецЕсли;
				Продолжить;
				
			ИначеЕсли ЗабалансовыеСчета = 0 Тогда
				Если Сч.Забалансовый = 1 Тогда
					Если Ит.Счет = Сч Тогда
						Ит.ПолучитьСчет();
					КонецЕсли;
					Продолжить;
				КонецЕсли;
			КонецЕсли;

			Расшифровка.Установить("Счет", Сч);
			Если ИтогиПолучить(Сч, ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, 1, ПолучитьПустоеЗначение()) = 1 Тогда
				
				Стр = 0;
                Правило = РазвСальдоЕстьПравило(Сч, Стр);
                Если Правило > 0 Тогда
                    Если ФормРазворот.ПолучитьЗначение(Стр, "Субсчета") = "Х" Тогда
                        Расшифровка.Установить("ДанныеПоСубсчетам", 1);
						
						Если Правило = 2 Тогда
	                        Расшифровка.Установить("ОтборСубконто1", 3);
	                        Расшифровка.Установить("ОтборСубконто2", 3);
	                        Расшифровка.Установить("ОтборСубконто3", 3);
	                    КонецЕсли;
                    КонецЕсли;
                КонецЕсли;

                Т.ВывестиСекцию("Секция_7");
                Если Стр <> 0 Тогда
                    Расшифровка.Установить("ОтборСубконто1");
                    Расшифровка.Установить("ОтборСубконто2");
                    Расшифровка.Установить("ОтборСубконто3");
                    Расшифровка.Установить("ДанныеПоСубсчетам");
                КонецЕсли;
				
				Если (Сч.Уровень() = 1) И (Сч.Забалансовый = 0) Тогда
					СНД = СНД + ВремСНД;
					СНК = СНК + ВремСНК;
					СКД = СКД + ВремСКД;
					СКК = СКК + ВремСКК;
				КонецЕсли;
				Если (Сч.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
					Валюта = СоздатьОбъект("Справочник.Валюты");
					ТекВалюта = Валюта.ТекущийЭлемент();
					Валюта.ВыбратьЭлементы();
					Ит.ВыбратьВалюты();
					Ит.ПолучитьВалюту();
					Пока 1=1 Цикл
					    Расшифровка.Установить("Валюта", ТекВалюта);
					    Расшифровка.Установить("ПоВалюте", 1);
						Если ИтогиПолучить(Сч, ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, 1, ТекВалюта) = 1 Тогда
							Т.ВывестиСекцию("Секция_8");
						КонецЕсли;
						Если ИтогиПолучить(Сч, ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, 2, ТекВалюта) = 1 Тогда
							Т.ВывестиСекцию("Секция_9");
						КонецЕсли;
						Если Ит.Валюта = ТекВалюта Тогда
							Ит.ПолучитьВалюту();
						КонецЕсли;
						Если Валюта.ПолучитьЭлемент() = 0 Тогда
							Прервать;
						КонецЕсли;
						ТекВалюта = Валюта.ТекущийЭлемент();
					КонецЦикла;
				    Расшифровка.Установить("Валюта");
				    Расшифровка.Установить("ПоВалюте");
				КонецЕсли;
			КонецЕсли;
			ПоСубконто(Сч);
			Если Ит.Счет = Сч Тогда
				Ит.ПолучитьСчет();
			КонецЕсли;
		КонецЦикла;
		Т.ВывестиСекцию("Секция_5");
		РазвСальдоИт = 0;
		ТЗСальдо = 0;
	
	Иначе
		Расшифровка.Установить("Дата1", Дата1);
		Расшифровка.Установить("Дата2", Дата2);
		Расшифровка.Установить("РазделительУчета", РазделительУчета);
		Расшифровка.Установить("ПланСчетов", ПланСчетов);
		Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомость");
		Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
		Расшифровка.Установить("ДанныеПоВалютам", ДанныеПоВалютам);
		Расшифровка.Установить("РазвернутоеСальдо", РазвернутоеСальдо);
		Расшифровка.Установить("ЗабалансовыеСчета", ЗабалансовыеСчета);
		Расшифровка.Установить("ФормРазворот", ФормРазворот);
		Т.ВывестиСекцию("Секция_6");
	    Расшифровка.Установить("Отчет");
	    Расшифровка.Установить("ДанныеПоСубсчетам");
	    Расшифровка.Установить("ДанныеПоВалютам");
		Расшифровка.Установить("РазвернутоеСальдо");
		Расшифровка.Установить("ЗабалансовыеСчета");
		Расшифровка.Установить("ФормРазворот");
	    Расшифровка.Установить("Обновить");
	    Т.ВывестиСекцию("Секция_1");
	    Расшифровка.Установить("Меню", Меню);
	    Ит.ВыбратьСчета();
	    Пока Ит.ПолучитьСчет() = 1 Цикл
			Если ПечататьПоСчету(Ит.Счет) = 0 Тогда
				Продолжить;
				
			ИначеЕсли ЗабалансовыеСчета = 0 Тогда
				Если Ит.Счет.Забалансовый = 1 Тогда
				    Продолжить;
				КонецЕсли;
			КонецЕсли;
			
		    Расшифровка.Установить("Счет", Ит.Счет);
			
	        Т.ВывестиСекцию("Секция_2");

	        Если (Ит.Счет.Уровень() = 1) и (Ит.Счет.Забалансовый = 0) Тогда
			    СНД = СНД + Ит.СНД();
			    СНК = СНК + Ит.СНК();
			    СКД = СКД + Ит.СКД();
			    СКК = СКК + Ит.СКК();
			КонецЕсли;

			Если ДанныеПоВалютам = 1 Тогда
		        Ит.ВыбратьВалюты();
		        Пока Ит.ПолучитьВалюту() = 1 Цикл
				    Расшифровка.Установить("Валюта", Ит.Валюта);
				    Расшифровка.Установить("ПоВалюте", 1);
		            Т.ВывестиСекцию("Секция_3");
		            Если Ит.Валюта.Выбран() = 1 Тогда
			            Т.ВывестиСекцию("Секция_4");
			        КонецЕсли;
		        КонецЦикла;
			    Расшифровка.Установить("Валюта");
			    Расшифровка.Установить("ПоВалюте");
		    КонецЕсли;
			ПоСубконто(Ит.Счет);
	    КонецЦикла;
	    Т.ВывестиСекцию("Секция_5");
	КонецЕсли;
    Ит = 0;
	НазваниеОрганизации = ?(ПустоеЗначение(НазваниеОрганизации)=1, "", " "+НазваниеОрганизации);
    ПериодИОрганизация = " ("+ПериодСтр(Дата1, Дата2)+")"+НазваниеОрганизации;
    ВерхнийКолонтитул = "Оборотно-сальдовая ведомость" + ПериодИОрганизация;
    НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
    Т.ТолькоПросмотр(1);
    Т.Опции(0, 0, 7, 2,,"ОСВР");
    Т.ОбластьПечати(2);
    Т.ПовторятьПриПечатиСтроки(6,7);
	Т.ПараметрыСтраницы(,,,,,,,,, 1);
    Т.Показать(ВерхнийКолонтитул, "");

	СохранитьЗначение("ОСВФормРазворот", ФормРазворот);
	СохранитьЗначение("ОСВДанныеПоСубсчетам", ДанныеПоСубсчетам);
	СохранитьЗначение("ОСВДанныеПоВалютам", ДанныеПоВалютам);
	СохранитьЗначение("ОСВРазвернутоеСальдо", РазвернутоеСальдо);
	СохранитьЗначение("ОСВЗабалансовыеСчета", ЗабалансовыеСчета);

	Если (ФлагЗакрытияФормы = 1) Или (Обновить = 2) Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ОткрытьНастройку()              
	ОткрытьФормуМодально("Обработка.РазворотСубконто", 1);
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПриОткрытии(ИспНастройки)

	// Установим закладки...
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Параметры", "Параметры");
	Форма.Закладки.ДобавитьЗначение("Сальдо", "Развернутое сальдо");
	Форма.ИспользоватьСлой("Параметры, Основной", 2);

	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;

	Форма.Кн_Видеокурс.Видимость( ?(ТипЗначения(Видео_Компонента)=0,0,1 ));
	Если ИспНастройки = 0 Тогда
		ДанныеПоСубсчетам = ВосстановитьЗначение("ОСВДанныеПоСубсчетам");
		Если ТипЗначения(ДанныеПоСубсчетам) = 0 Тогда
			ДанныеПоСубсчетам = 1;
		КонецЕсли;
			
		ДанныеПоВалютам = ВосстановитьЗначение("ОСВДанныеПоВалютам");
		РазвернутоеСальдо = ВосстановитьЗначение("ОСВРазвернутоеСальдо");
		ЗабалансовыеСчета = ВосстановитьЗначение("ОСВЗабалансовыеСчета");

		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
	КонецЕсли;

	// Инициализируем таблицу значений...
	ФормРазворот.Очистить();
	ФормРазворот.НоваяКолонка("Счет",,,, "Счет", 16);
	ФормРазворот.НоваяКолонка("Субсчета",,,, "Субсчета", 9);
	ФормРазворот.НоваяКолонка("Субконто",,,, "Субконто", 9);
	ФормРазворот.НоваяКолонка("Список");
	
	ПарамРазворот = ВосстановитьЗначение("ОСВФормРазворот");
	Если ТипЗначения(ПарамРазворот) = 0 Тогда
		ВосстановитьНастройкиПоУмолчанию(0);
		
	Иначе
		ПарамРазворот.Выгрузить(ФормРазворот);
	КонецЕсли;
	
	ФормРазворот.ВидимостьКолонки("Список", 0);
	
	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		ВыбПланСчетов = 0;
		Если Обновить <> 0 Тогда
			ПланСчетов = глРасшифровка.Получить("ПланСчетов");
			РУ = глРасшифровка.Получить("РазделительУчета");
			Если ТипЗначенияСтр(РУ) <> "" Тогда
				РазделительУчета = РУ;
				ПоВсемРУ = 0;
			Иначе
				Форма.РазделительУчета.НазначитьТип("");
				ПоВсемРУ = 1;
			КонецЕсли;
			Дата1 = глРасшифровка.Получить("Дата1");
			Дата2 = глРасшифровка.Получить("Дата2");
			ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
			ДанныеПоВалютам = глРасшифровка.Получить("ДанныеПоВалютам");
			РазвернутоеСальдо = глРасшифровка.Получить("РазвернутоеСальдо");
			ЗабалансовыеСчета = глРасшифровка.Получить("ЗабалансовыеСчета");
			глРасшифровка.Получить("ФормРазворот").Выгрузить(ФормРазворот);
			ФормРазворот.ВидимостьКолонки("Список", 0);
			Т = глТаблица;
		Иначе
			ПланСчетов = ВыбранныйПланСчетов();
			РУ = БухИтоги.ИспользоватьРазделительУчета();
			Если ТипЗначенияСтр(РУ) <> "" Тогда
				РазделительУчета = РУ;
				ПоВсемРУ = 0;
			Иначе
				Форма.РазделительУчета.НазначитьТип("");
				ПоВсемРУ = 1;
			КонецЕсли;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбПланСчетов = 1;
		ПланСчетов = ВыбранныйПланСчетов();
		РазделительУчета = БухИтоги.ИспользоватьРазделительУчета();
	КонецЕсли;
	
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПриЗакрытии()
	СохранитьЗначение("ОСВФормРазворот", ФормРазворот);
КонецПроцедуры


//----------------------------------------------------------------------
Процедура ВводНового() //Считывание существующей настройки
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
КонецПроцедуры

//----------------------------------------------------------------------
Процедура РазворотИзменить(Колонка)
	Перем Счет, Вариант;

	Если ФормРазворот.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;

	Если Колонка = "Счет" Тогда
		Счет = ФормРазворот.Счет;
		Если ВвестиЗначение (Счет, "Введите счет", "Счет",,) = 0 Тогда
			Если Счет = "<Счет>" Тогда
				ФормРазворот.УдалитьСтроку(ФормРазворот.ТекущаяСтрока());
			КонецЕсли;
			Возврат;
		КонецЕсли;
		ФормРазворот.Счет = Счет;

		// Заполним список субконто для счета...
		Субконто = СоздатьОбъект("СписокЗначений");
		Для Индекс = 1 по 3 Цикл
			ВрСуб = ФормРазворот.Счет.ВидСубконто(Индекс);
			Если ПустоеЗначение(ВрСуб) = 0 Тогда
				Субконто.ДобавитьЗначение(ФормРазворот.Счет.ВидСубконто(Индекс));
			КонецЕсли;
		КонецЦикла;

		ФормРазворот.Список = Субконто;

		Если Счет.ЭтоГруппа() = 0 Тогда
			ФормРазворот.Субсчета = "-";
		Иначе
			ФормРазворот.Субсчета = " ";
		КонецЕсли;

		Если Субконто.РазмерСписка() = 0 Тогда
			ФормРазворот.Субконто = "-";
		Иначе
			ФормРазворот.Субконто = " ";
		КонецЕсли;
		
		ФормРазворот.Сортировать("Счет");
		НомСтр = 0;
		Если ФормРазворот.НайтиЗначение(Счет, НомСтр, "Счет") = 1 Тогда
		    ФормРазворот.ТекущаяСтрока(НомСтр);
		КонецЕсли;

	ИначеЕсли (Колонка = "Субсчета") и (ФормРазворот.Субсчета <> "-") Тогда
		ФормРазворот.Субсчета = "Х";
		Если ФормРазворот.Субконто <> "-" Тогда
			ФормРазворот.Субконто = " ";
		КонецЕсли;

	ИначеЕсли (Колонка = "Субконто") и (ФормРазворот.Субконто <> "-") Тогда
		ФормРазворот.Субконто = "Х";
		Если ФормРазворот.Субсчета <> "-" Тогда
			ФормРазворот.Субсчета = " ";
		КонецЕсли;
		// Выберем субконто...
		СЗ = СоздатьОбъект("СписокЗначений");
		Для А=1 По ФормРазворот.Счет.КоличествоСубконто() Цикл
			СЗ.ДобавитьЗначение(ФормРазворот.Счет.ВидСубконто(А));
			Если ФормРазворот.Список.НайтиЗначение(ФормРазворот.Счет.ВидСубконто(А)) <> 0 Тогда
				СЗ.Пометка(А, 1);
			КонецЕсли;
		КонецЦикла;
		СЗ.ОтметитьЗначения(,"Разворачивать сальдо по:");
		ФормРазворот.Список.УдалитьВсе();
		Для А=1 По СЗ.РазмерСписка() Цикл
			Если СЗ.Пометка(А) = 1 Тогда
				ФормРазворот.Список.ДобавитьЗначение(СЗ.ПолучитьЗначение(А));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Процедура РазворотДобавить()
	ФормРазворот.НоваяСтрока();
	ФормРазворот.Счет = "<Счет>";
	ФормРазворот.ТекущаяКолонка(1);
	ФормРазворот.ТекущаяСтрока(ФормРазворот.КоличествоСтрок());

	РазворотИзменить("Счет");
КонецПроцедуры

//----------------------------------------------------------------------
Процедура РазворотУдалить()
	Если ФормРазворот.КоличествоСтрок() > 0 Тогда
		ФормРазворот.УдалитьСтроку(ФормРазворот.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПриВыбореЗакладки(Номер, Значение)
	Если Значение = "Параметры" Тогда
		Форма.ИспользоватьСлой("Параметры, Основной", 2);
	ИначеЕсли Значение = "Сальдо" Тогда
		Форма.ИспользоватьСлой("Разворот, Основной", 2);
		НастройкаРазвернутогоСальдо = СоздатьОбъект("Таблица");
		НастройкаРазвернутогоСальдо.ИсходнаяТаблица("НастройкаРазвернутогоСальдо");
		Если ПустоеЗначение(НастройкаРазвернутогоСальдо) = 1 Тогда
			Форма.кнВосстановитьНастройку.Видимость(0);
		КонецЕсли;
	КонецЕсли;
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		Форма.Текст.Видимость(0);
    Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;
	Форма.Кн_Видеокурс.Видимость( ?(ТипЗначения(Видео_Компонента)=0,0,1 ));
КонецПроцедуры