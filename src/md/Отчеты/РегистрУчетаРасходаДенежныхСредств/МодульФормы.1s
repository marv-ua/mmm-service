Перем ДатаНачалаНалоговогоПериода2003;

//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге
//
Функция ПроверкаПериода()
	
	Если (НачДата > КонДата) Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.", 60);
		Возврат 0;
	
	ИначеЕсли ПустоеЗначение(ДатаНачалаНалоговогоПериода2003) = 0 Тогда
		
		Если ((НачДата < ДатаНачалаНалоговогоПериода2003)
		   и  (КонДата >= ДатаНачалаНалоговогоПериода2003)) Тогда
			Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
			               "В выбранном интервале налоговый учет велся по"+РазделительСтрок+
						   "разным правилам."+РазделительСтрок+
						   "Отчет за данный период сформировать невозможно!", 60);
			Возврат 0;
		    
		КонецЕсли;

	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
//
Процедура Сформировать()
	
	глНовыеПравилаВеденияНУ(КонДата, ДатаНачалаНалоговогоПериода2003);

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	Состояние("Заполнение выходной таблицы...");

	Таб = СоздатьОбъект("Таблица"); 
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	Таб.ВывестиСекцию("Шапка");

	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4
	   	
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт.ИспользоватьПланСчетов(ОсновнойПланСчетов());
		БухИт.ВыполнитьЗапрос(НачДата, КонДата, "50,51,52,55",,, 1, "Проводка", "С");
	
		БухИт.ВыбратьПериоды(, 2);
		Пока БухИт.ПолучитьПериод() = 1 Цикл
	
			Опер = БухИт.Операция;
			ДатаРасхода = Опер.ДатаОперации;
			
			// определяем основание поступления денежных средств
			Если ПустоеЗначение(Опер.Дебет.Договоры) = 0 Тогда
				ОснованиеРасхода = "" + глПолноеНаименование(Опер.Дебет.Договоры.Владелец);
				ОснованиеРасхода = ОснованиеРасхода + ", " + Опер.Дебет.Договоры;
				ОснованиеРасхода = ОснованиеРасхода + ", на основании: " + Опер.ПервичныйДокумент;
	
			Иначе
				ОснованиеРасхода = СокрЛП(Опер.СодержаниеПроводки) + ", на основании: " + Опер.ПервичныйДокумент;
				
			КонецЕсли;
	
			// определяем условие или вид поступления денежных средств
			Если (Найти(Опер.Дебет.Счет, "76.1.1") <> 0) Тогда
				УсловиеРасхода = "";
				ВидРасхода = "Страхование имущества";
			 	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "76.1.2") <> 0) Тогда
				УсловиеРасхода = "";
				ВидРасхода = "Долгосрочное страхование жизни";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "76.1.3") <> 0) Тогда
				УсловиеРасхода = "";
				ВидРасхода = "Страхование на оплату медицинских расходов";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "76.1.4") <> 0) Тогда
				УсловиеРасхода = "";
				ВидРасхода = "Страхование на случай смерти или утраты трудоспособности";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "60.2") <> 0)
				  или (Найти(Опер.Дебет.Счет, "60.7") <> 0)
				  или (Найти(Опер.Дебет.Счет, "60.22") <> 0) Тогда
				УсловиеРасхода = "Аванс выданный";
				ВидРасхода = "";

			ИначеЕсли (Найти(Опер.Дебет.Счет, "60.1") <> 0)
				  или (Найти(Опер.Дебет.Счет, "60.6") <> 0)
				  или (Найти(Опер.Дебет.Счет, "60.11") <> 0) Тогда
				УсловиеРасхода = "Оплата ранее полученного имущества, работ, услуг прав";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "62.2") <> 0)
				  или (Найти(Опер.Дебет.Счет, "62.7") <> 0)
				  или (Найти(Опер.Дебет.Счет, "62.22") <> 0) Тогда
				УсловиеРасхода = "Возврат ранее полученных авансов";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "58.1") <> 0) Тогда
				УсловиеРасхода = "Приобретение паев и акций";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "58.2") <> 0) Тогда
				УсловиеРасхода = "Приобретение ценных бумаг";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "58.3") <> 0) Тогда
				УсловиеРасхода = "На условиях возврата";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "58.4") <> 0) Тогда
				УсловиеРасхода = "Вклады в простое товарищество";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "58.5") <> 0) Тогда
				УсловиеРасхода = "Приобретение имущественных прав";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "68") <> 0)
				  или (Найти(Опер.Дебет.Счет, "69") <> 0) Тогда
				УсловиеРасхода = "Обязательные платежи в бюджет и внебюджетные фонды";
				ВидРасхода = "";
	
			ИначеЕсли (Найти(Опер.Дебет.Счет, "70") <> 0) Тогда
				УсловиеРасхода = "Оплата труда";
				ВидРасхода = "";
			 
			ИначеЕсли (Найти(Опер.Дебет.Счет, "91.2") <> 0) Тогда
				// Необходим анализ вида расхода
				Если (Опер.Дебет.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.УслугиБанков) Тогда
					УсловиеРасхода = "";
					ВидРасхода = "Услуги банков";
				
				ИначеЕсли (Опер.Дебет.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения) Тогда
					УсловиеРасхода = "Прочие расходы, не принимаемые для налогообложения";
					ВидРасхода = "";
	            
				Иначе
					УсловиеРасхода = "Прочие расходы, не связанные с движением задолженности";
					ВидРасхода = "";
					
				КонецЕсли;
			
			ИначеЕсли (Найти(Опер.Дебет.Счет, "50") <> 0)
			      или (Найти(Опер.Дебет.Счет, "51") <> 0)
				  или (Найти(Опер.Дебет.Счет, "52") <> 0)
				  или (Найти(Опер.Дебет.Счет, "55.") <> 0) Тогда
				УсловиеРасхода = "Внутреннее перемещение (из кассы в банк и т.п.)";
				ВидРасхода = "";
	
			ИначеЕсли ПустоеЗначение(Опер.Дебет.Контрагенты) = 0 Тогда
				УсловиеРасхода = "Прочие расходы, связанные с движением задолженности";
				ВидРасхода = "";
	
			Иначе
	            УсловиеРасхода = "Прочие расходы, не связанные с движением задолженности";
			 	ВидРасхода = "";
				
			КонецЕсли;
	
			Сумма = ФорматС(Опер.Сумма); 
			
			Если Опер.ВалСумма <> 0 Тогда
				ВалСумма = ФорматС(Опер.ВалСумма);
			Иначе
				ВалСумма = "";
			КонецЕсли;
			Валюта = Опер.Валюта;

			ТекДок = Опер.Документ;

			Таб.ВывестиСекцию("Строка");
	
		КонецЦикла;
	
		ИтогСумма = ФорматС(БухИт.КО());

	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|ОбрабатыватьДокументы все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Период с НачДата по КонДата;
		|
		|ДатаРасхода = Документ.РасходДенежныхСредств.ДатаДок;
		|Контрагент = Документ.РасходДенежныхСредств.Контрагент;
		|Договор = Документ.РасходДенежныхСредств.Договор;
		|УсловиеИлиВидРасхода = Документ.РасходДенежныхСредств.УсловиеИлиВидРасхода;
		|Сумма = Документ.РасходДенежныхСредств.Сумма;
		|Валюта = Документ.РасходДенежныхСредств.Валюта;
		|ВалСумма = Документ.РасходДенежныхСредств.ВалСумма;
		|
		|Функция СуммаСумма = Сумма(Сумма);
		|
		|Группировка Документ;
		|Группировка СтрокаДокумента;
		|"//}}ЗАПРОС
		;
	
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;
	
		Пока Запрос.Группировка("Документ") = 1 Цикл
	
			Пока Запрос.Группировка("СтрокаДокумента") = 1 Цикл
				ДатаРасхода = Запрос.ДатаРасхода;
				ОснованиеРасхода = "" + глПолноеНаименование(Запрос.Контрагент);
				Если ПустоеЗначение(Запрос.Договор) = 0 Тогда
					 ОснованиеРасхода = ОснованиеРасхода + ", " + Запрос.Договор;
				КонецЕсли;
				Если (Запрос.УсловиеИлиВидРасхода = Перечисление.УсловияИлиВидыРасходов.ВзносыПоДобровольномуСтрахованию) 
					или (Запрос.УсловиеИлиВидРасхода = Перечисление.УсловияИлиВидыРасходов.ВзносыПоДобровольномуСтрахованиюНаОплатуМедицинскихРасходов)
					или (Запрос.УсловиеИлиВидРасхода = Перечисление.УсловияИлиВидыРасходов.ВзносыПоДобровольномуСтрахованиюНаСлучайСмерти)
					или (Запрос.УсловиеИлиВидРасхода = Перечисление.УсловияИлиВидыРасходов.ПрочиеРасходы)
					или (Запрос.УсловиеИлиВидРасхода = Перечисление.УсловияИлиВидыРасходов.ВзносыВкладыОбязательныеПлатежи)
					или (Запрос.УсловиеИлиВидРасхода = Перечисление.УсловияИлиВидыРасходов.УслугиБанков) Тогда
					ВидРасхода = Запрос.УсловиеИлиВидРасхода;
					УсловиеРасхода = "";
				Иначе
					УсловиеРасхода = Запрос.УсловиеИлиВидРасхода;
					ВидРасхода = "";
				КонецЕсли;
				Сумма = ФорматС(Запрос.СуммаСумма); 
				Если Запрос.ВалСумма > 0 Тогда
					ВалСумма = ФорматС(Запрос.ВалСумма);
				Иначе
					ВалСумма = "";
				КонецЕсли;
				Валюта = Запрос.Валюта;

				ТекДок = Запрос.Документ;
				
				Таб.ВывестиСекцию("Строка");
	
			КонецЦикла;
	
		КонецЦикла;
	
		ИтогСумма = ФорматС(Запрос.СуммаСумма);
		
	КонецЕсли;
		
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);

	Таб.ВывестиСекцию("Подвал"); 
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрУчетаРасходаДенежныхСредств", "ОкноРегистрУчетаРасходаДенежныхСредств");
	Таб.Показать("Регистр учета расхода денежных средств");

КонецПроцедуры // Сформировать    

//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
КонецПроцедуры //ПриОткрытии
