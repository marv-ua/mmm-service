//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура Сформировать()
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СчН01_07 = СчетПоКоду("Н01.07");
	СчН02_02 = СчетПоКоду("Н02.02");
	СчН02_04 = СчетПоКоду("Н02.04.1");
	СчН07_03 = СчетПоКоду("Н07.03");
	
	Таб = СоздатьОбъект("Таблица"); 
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = СокрЛП(Константа.ИННОрганизации);
	Таб.ВывестиСекцию("Шапка");
	
	Таб.ИспользоватьФормат("Ч15.2.,");
	
	БухОбороты = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтРасходы = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтогоСуммаРасходовЗаПериод = 0;
	                                                      
	Бухит.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
	Бухит.ИспользоватьСубконто(ВидыСубконто.УсловияПоступленияИВыбытия);
	Бухит.Опции(1,);
	Бухит.ВключатьСубсчета(, -1);
	БухИт.ВыполнитьЗапрос(НачДата, КонДата, "Н02.02, Н02.04.1",,, 3, "Месяц",);
	БухИт.ВыбратьПериоды();
    Пока БухИт.ПолучитьПериод() = 1 Цикл
		БухОбороты.ПериодМ(БухИт.НачДата);
		ДатаОперации = ПериодСтр(БухИт.НачДата, БухИт.КонДата);
		БухИтРасходы.ПериодМ(БухИт.КонДата);
		
		ОстатокТовараНаНачало       = 0;
		ОстатокТовараНаКонец        = 0;
		ПриобретеноТоваровЗаМесяц   = 0;
		РеализованноТоваровЗаМесяц  = 0;
		ВыбылоПоЕНДВЗаМесяц         = 0;
		                                   
		СуммаПрямыхРасходовНаНачало      = БухИтРасходы.СНД(СчН01_07);
		СуммаТранспортныхРасходовЗаМесяц = БухИтРасходы.ДО(СчН01_07);
		СписаноТранспортныхРасходов      = БухИтРасходы.КО(СчН01_07);
		СуммаРасходаТекущегоМесяца       = БухИтРасходы.ОБ(СчН07_03, СчН01_07);
		                                                                     
		БухИт.ВыбратьСубконто(ВидыСубконто.Номенклатура);
		Пока БухИт.ПолучитьСубконто(ВидыСубконто.Номенклатура) = 1 Цикл
		    Если ПустоеЗначение(БухИт.Субконто(ВидыСубконто.Номенклатура)) = 1 Тогда
			    Продолжить;
			КонецЕсли;     
			
			Если БухИт.Субконто(ВидыСубконто.Номенклатура).ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
				Продолжить;
			КонецЕсли;     
			
			ОстатокТовараНаНачало = ОстатокТовараНаНачало + БухИт.СНД() - БухИт.СНК();
			ОстатокТовараНаКонец  = ОстатокТовараНаКонец  + БухИт.СКД() - БухИт.СКК();
			
			// Определим стоимость поступивших товаров.
			Если БухИт.ПолучитьСчет(, "Н02.02") = 1 Тогда
				ПриобретеноТоваровЗаМесяц = ПриобретеноТоваровЗаМесяц + БухИт.ДО();
				БухИт.ПолучитьСчет(, 0);
			КонецЕсли;
			
			// Определим стоимость реализованных товаров.
			Если БухИт.ПолучитьКорСчет(, "Н07.05") = 1 Тогда
				РеализованноТоваровЗаМесяц = РеализованноТоваровЗаМесяц + БухИт.КорКО();    
				БухИт.ПолучитьКорСчет(, 0);
			КонецЕсли;
			                                            
			// Определим стоимость товаров, выбывших по деятельности не облагаемой налогом на прибыль.
			Если БухИт.ПолучитьСубконто(ВидыСубконто.УсловияПоступленияИВыбытия,, Перечисление.УсловияПоступленияИВыбытия.НеОблагается) = 1 Тогда
				ВыбылоПоЕНДВЗаМесяц = ВыбылоПоЕНДВЗаМесяц + БухИт.КО();
			КонецЕсли;
		КонецЦикла;
		                                                              
		ПрочееВыбытиеЗаМесяц = ОстатокТовараНаНачало + ПриобретеноТоваровЗаМесяц - РеализованноТоваровЗаМесяц - ВыбылоПоЕНДВЗаМесяц - ОстатокТовараНаКонец;
		ТранспортныеРасходы  = СуммаПрямыхРасходовНаНачало + СуммаТранспортныхРасходовЗаМесяц;
		
		Если (РеализованноТоваровЗаМесяц + ВыбылоПоЕНДВЗаМесяц + ОстатокТовараНаКонец) <> 0 Тогда
			СреднийПроцент = Окр(ТранспортныеРасходы / (РеализованноТоваровЗаМесяц + ВыбылоПоЕНДВЗаМесяц + ОстатокТовараНаКонец), 8);
			
		Иначе
			СреднийПроцент = 0;
		КонецЕсли;
		
		СуммаПрямыхРасходовДляОстаткаТоваров = ТранспортныеРасходы - СписаноТранспортныхРасходов;
		
		Таб.ВывестиСекцию("Строка");
		ИтогоСуммаРасходовЗаПериод = ИтогоСуммаРасходовЗаПериод + СуммаРасходаТекущегоМесяца;
	КонецЦикла;                 
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(, 2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетОстаткаТранспортныхРасходов", "ОкноРегистрРасчетОстаткаТранспортныхРасходов");
	Таб.Показать("Регистр-расчет остатка транспортных расходов");

КонецПроцедуры // Сформировать    

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
    НачДата = НачГода(РабочаяДата());
	КонДата = КонМесяца(РабочаяДата()); 
	
КонецПроцедуры // ПриОткрытии()