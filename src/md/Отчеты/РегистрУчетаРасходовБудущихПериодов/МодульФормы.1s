////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем РасходыБудущихПериодов;          
Перем БухИт;
Перем Таб;  
Перем ДатаНачалаУчета;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура ПриВыбореСтатьиРасхода()
	
	Если ПустоеЗначение(СтатьяРасхода) = 0 Тогда
		Если СтатьяРасхода.НазначениеСтатьиРасходов = 2 Тогда 
			Форма.ТекстСотрудник.Видимость(1); 
			Форма.Сотрудник.Видимость(1); 
			Форма.ПоВсемСотрудникам.Видимость(1); 
			
		Иначе                       
			Форма.ТекстСотрудник.Видимость(0);
			Форма.Сотрудник.Видимость(0);         
			Форма.ПоВсемСотрудникам.Видимость(0); 
		КонецЕсли;
		
	Иначе
		Форма.Сотрудник.Видимость(0);
		Форма.ТекстСотрудник.Видимость(0);     
		Форма.ПоВсемСотрудникам.Видимость(0); 
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСтатьиРасхода()                                      
//******************************************************************************
// КолвоМесяцев(ДатаН, ДатаК)
//
// Параметры:
//  ДатаН - дата, начало периода
//  ДатаН - дата, конец периода
//
// Возвращаемое значение:
//  Число - количество месяцев от ДатаН до ДатаК
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция КолвоМесяцев(ДатаН, ДатаК)
	                         
	Если ДатаН > ДатаК Тогда
	    Колво = 0;
	
	// если ДатаН и ДатаК в одном году
	ИначеЕсли ДатаГод(ДатаН) = ДатаГод(ДатаК) Тогда
		Колво = ДатаМесяц(ДатаК) - ДатаМесяц(ДатаН) + 1;                          
		                              
	// если ДатаН и ДатаК принадлежат разным годам
	Иначе
	    Колво = 12 + 1 - ДатаМесяц(ДатаН) + ДатаМесяц(ДатаК);
		ГодНачала = ДатаГод(ДатаН);
		ГодКонца  = ДатаГод(ДатаК);
		ГодНачала = ГодНачала + 1;
		Пока ГодНачала <> ГодКонца Цикл
		    Колво = Колво + 12;
			ГодНачала = ГодНачала + 1;
		КонецЦикла;
	КонецЕсли;  
	
	Возврат Колво;
	
КонецФункции // КолвоМесяцев()

//******************************************************************************
Процедура ВывестиСтрокуТаблицы()
	
	СуммаНаНачалоПериода  = ФорматС(БухИт.СНД());                                         
	Если ПустаяСтрока(СуммаНаНачалоПериода) = 0 Тогда
		Таб.ВывестиСекцию("НаНачало");
	КонецЕсли;
	
	ИтогоСуммаСписания = 0;
	
	БухИт.ВыбратьПериоды(, 2);
	Пока БухИт.ПолучитьПериод() = 1  Цикл
		
		Док = БухИт.Операция.Документ;
		ДатаОперации  = БухИт.КонДата;
		СуммаСписания = БухИт.КО();
		КолвоМесяцевФактическогоСписания = КолвоМесяцев(ДатаНачалаУчета, ДатаОперации);
		НеСписаннаяСумма = ФорматС(БухИт.СКД());
		Таб.ВывестиСекцию("Строка");
		
		ИтогоСуммаСписания = ИтогоСуммаСписания + СуммаСписания;
		
	КонецЦикла;	 
	Если ИтогоСуммаСписания <> 0 Тогда
	    Таб.ВывестиСекцию("Итого");
	КонецЕсли;
	
КонецПроцедуры //ОбработкаСтатьи()

//******************************************************************************
Процедура Сформировать() 
	
	Перем ВидРасхода;
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СчН04 = СчетПоКоду("Н04");                                             
	
	Таб = СоздатьОбъект("Таблица");
	
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	
	Таб.ВывестиСекцию("Шапка");
	ВысотаШапки = Таб.ВысотаТаблицы();
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	Если ПустоеЗначение(СтатьяРасхода) = 1 Тогда
		БухИт.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
		БухИт.ИспользоватьСубконто();
	Иначе
		БухИт.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов, СтатьяРасхода, 2);
		
		Если СтатьяРасхода.НазначениеСтатьиРасходов = 2 Тогда
			Если ПустоеЗначение(Сотрудник) = 1 Тогда
				 БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
				 
			Иначе
				БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники, Сотрудник, 2);
			КонецЕсли;
			
		Иначе
			БухИт.ИспользоватьСубконто();
		КонецЕсли;
	КонецЕсли;
	                                              
	БухИт.ВключатьСубсчета(-1,);
	БухИт.ВыполнитьЗапрос(НачДата, КонДата, СчН04,,,, "Проводка",);     
	БухИт.ВыбратьСубконто(ВидыСубконто.РасходыБудущихПериодов);
	Пока БухИт.ПолучитьСубконто(ВидыСубконто.РасходыБудущихПериодов) = 1 Цикл
		
		// подготовка данных к заполнению "Заголовка"
		СтатьяРасходаБП = БухИт.Субконто(ВидыСубконто.РасходыБудущихПериодов);
		РасходыБудущихПериодов.ПолучитьЗначение(РасходыБудущихПериодов.НайтиЗначение(БухИт.Счет.Код), ВидРасхода);
		ДатаПризнанияРасходов = СтатьяРасходаБП.ДатаПризнанияРасхода;	
		СрокВключенияРасходов = СтатьяРасходаБП.ДатаОкончанияСписания;
		ДатаНачалаУчета       = СтатьяРасходаБП.ДатаНачалаСписания;
		ОбщаяСуммаРасходов    = 0;
		
		Если ПустоеЗначение(ДатаНачалаУчета) = 1 Тогда
			Предупреждение(" У вида расхода - " + СтатьяРасходаБП.Наименование + " не выбрана дата начала списания!", 60);
			Продолжить;
		КонецЕсли;          
		
		//*****Для определения первоначальной суммы РБП
		БухИтС = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИтС.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов, СтатьяРасходаБП, 2);
		БухИтС.ВключатьСубсчета(-1,);  
		БухИтС.ВыполнитьЗапрос(, ДатаНачалаУчета, СчН04);     		
		Если БухИтС.ПолучитьСубконто(ВидыСубконто.РасходыБудущихПериодов, , СтатьяРасходаБП) = 1 Тогда
			ОбщаяСуммаРасходов = БухИтС.СКД();
		КонецЕсли;
			
		Если (СтатьяРасходаБП.НазначениеСтатьиРасходов = 1) или (СтатьяРасходаБП.НазначениеСтатьиРасходов = 2) Тогда
			БухИт.ВыбратьСубконто(2);
			Пока БухИт.ПолучитьСубконто(2) = 1 Цикл   
				
				Статья = СтатьяРасходаБП.Наименование;
				Если БухИт.Счет.ВидСубконто(2) = ВидыСубконто.Сотрудники Тогда
				    Сотр = БухИт.Субконто(2);
					Статья = Статья + " " + ФИО(Сотр) + " (таб.№" + Сотр.Код + ")";
					Если Сотр.Подразделение.Получить(КонДата).Административное = 1 Тогда
					    Статья = Статья + ", вид персонала: АУП";
						
					Иначе
					    Статья = Статья + ", вид персонала: прочие";
					КонецЕсли;
					ОбщаяСуммаРасходов    = ФорматС(СтатьяРасходаБП.Сумма);
					РасходыБудущихПериодов.ПолучитьЗначение(РасходыБудущихПериодов.НайтиЗначение(БухИт.Счет.Код), ВидРасхода);
					
				ИначеЕсли БухИт.Счет.ВидСубконто(2) = ВидыСубконто.НалогиИОтчисления Тогда
					ТекНалог = БухИт.Субконто(2);
					Статья = Статья + " (" + ТекНалог + ")";
					ОбщаяСуммаРасходов = ФорматС(СтатьяРасходаБП.ПолучитьАтрибут("Сумма" + СокрЛП(ТекНалог.Код)));
					РасходыБудущихПериодов.ПолучитьЗначение(РасходыБудущихПериодов.НайтиЗначение(БухИт.Счет.Код), ВидРасхода);
				КонецЕсли;
				
				Таб.ВывестиСекцию("Заголовок");
				ВывестиСтрокуТаблицы();
			КонецЦикла;
			
		Иначе   
			Статья = СтатьяРасходаБП.Наименование;
			Таб.ВывестиСекцию("Заголовок");
			ВывестиСтрокуТаблицы();
		КонецЕсли;
	    
	КонецЦикла;
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, ВысотаШапки, 0, "ПечатьРегистрУчетаРасходовБудущихПериодов", "ОкноРегистрУчетаРасходовБудущихПериодов");
	Таб.Показать("Регистр учета расходов будущих периодов");

КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии() //предопределенная
	
	НачДата = НачГода(РабочаяДата());
	КонДата = КонКвартала(РабочаяДата());
	
	ПриВыбореСтатьиРасхода();
	
КонецПроцедуры // ПриОткрытии()                                                    

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
РасходыБудущихПериодов = СоздатьОбъект("СписокЗначений");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.02", "Убытки от реализации амортизируемого имущества");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.03", "Расходы  на НИОКР");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.04", "Расходы на освоение природных ресурсов");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.05", "Расходы по добровольному страхованию по договорам долгосрочного страхования жизни работников, пенсионного страхования и (или) негосударственного пенсионного обеспечения работников");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.06", "Расходы по добровольному личному страхованию, предусматривающему оплату страховщиками медицинских расходов");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.07", "Расходы по договорам добровольного личного страхования, заключаемым исключительно на случай наступления смерти или утраты трудоспособности");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.08", "Расходы по страхованию имущества.");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.10", "Расходы будущих периодов на оплату труда");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.11", "Налоги и сборы с расходов на оплату труда будущих периодов");
РасходыБудущихПериодов.ДобавитьЗначение("Н04.09", "Прочие расходы будущих периодов");



