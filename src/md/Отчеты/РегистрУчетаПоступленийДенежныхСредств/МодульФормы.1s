Перем ДатаНачалаНалоговогоПериода2003;

//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге
//
Функция ПроверкаПериода()
	
	Если (НачДата > КонДата) Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.", 60);
		Возврат 0;
	
	ИначеЕсли ПустоеЗначение(ДатаНачалаНалоговогоПериода2003) = 0 Тогда
		
		Если ((НачДата < ДатаНачалаНалоговогоПериода2003)
		   и  (КонДата >= ДатаНачалаНалоговогоПериода2003)) Тогда
			Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
			               "В выбранном интервале налоговый учет велся по"+РазделительСтрок+
						   "разным правилам."+РазделительСтрок+
						   "Отчет за данный период сформировать невозможно!", 60);
			Возврат 0;
		    
		КонецЕсли;

	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
//
Процедура Сформировать()
	
	глНовыеПравилаВеденияНУ(КонДата, ДатаНачалаНалоговогоПериода2003);

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	Состояние("Заполнение выходной таблицы...");

	Таб = СоздатьОбъект("Таблица"); 
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	Таб.ВывестиСекцию("Шапка");

	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4
	   	
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт.ИспользоватьПланСчетов(ОсновнойПланСчетов());
		БухИт.ВыполнитьЗапрос(НачДата, КонДата, "50,51,52,55",,, 1, "Проводка", "С");
	
		БухИт.ВыбратьПериоды(, 1);
		Пока БухИт.ПолучитьПериод() = 1 Цикл
	
			Опер = БухИт.Операция;
			ДатаПоступления = Опер.ДатаОперации;
			
			// определяем основание поступления денежных средств
			Если ПустоеЗначение(Опер.Кредит.Договоры) = 0 Тогда
				ОснованиеПоступления = "" + глПолноеНаименование(Опер.Кредит.Договоры.Владелец);
				ОснованиеПоступления = ОснованиеПоступления + ", " + Опер.Кредит.Договоры;
				ОснованиеПоступления = ОснованиеПоступления + ", на основании: " + Опер.ПервичныйДокумент;
	
			Иначе
				ОснованиеПоступления = СокрЛП(Опер.СодержаниеПроводки) + " на основании: " + Опер.ПервичныйДокумент;
			КонецЕсли;

			// определяем условие или вид поступления денежных средств
			Если Найти(Опер.Кредит.Счет, "90.1.2") <> 0 Тогда
			    УсловиеИлиВидПоступления = "В рамках деятельности, облагаемой ЕНВД";
				
			ИначеЕсли (Найти(Опер.Кредит.Счет, "62.1") <> 0)
			 или (Найти(Опер.Кредит.Счет, "62.6") <> 0)
			 или (Найти(Опер.Кредит.Счет, "62.11") <> 0)
			 или (Найти(Опер.Кредит.Счет, "90") <> 0) Тогда
				УсловиеИлиВидПоступления = "В счет оплаты за ранее переданное имущество, работы, услуги, права";
			 	
			ИначеЕсли (Найти(Опер.Кредит.Счет, "62.2") <> 0)
				  или (Найти(Опер.Кредит.Счет, "62.7") <> 0)
			      или (Найти(Опер.Кредит.Счет, "62.22") <> 0) Тогда
				УсловиеИлиВидПоступления = "Авансы полученные";
				
			ИначеЕсли (Найти(Опер.Кредит.Счет, "62.4") <> 0)
				  или (Найти(Опер.Кредит.Счет, "62.8") <> 0)
			      или (Найти(Опер.Кредит.Счет, "62.44") <> 0) Тогда
				УсловиеИлиВидПоступления = "В рамках посреднических договоров";
	
			ИначеЕсли (Найти(Опер.Кредит.Счет, "86") <> 0) Тогда
				УсловиеИлиВидПоступления = "Целевое финансирование и поступления";
	
			ИначеЕсли (Найти(Опер.Кредит.Счет, "58.3") <> 0) Тогда
				УсловиеИлиВидПоступления = "Возврат ранее выданных займов";
	
			ИначеЕсли (Найти(Опер.Кредит.Счет, "60.2") <> 0)
				  или (Найти(Опер.Кредит.Счет, "60.7") <> 0)
			      или (Найти(Опер.Кредит.Счет, "60.22") <> 0) Тогда
				УсловиеИлиВидПоступления = "Возврат авансов выданных";
	
			ИначеЕсли (Найти(Опер.Кредит.Счет, "91.1") <> 0) Тогда
				// Необходим анализ вида дохода
				Если (Опер.Кредит.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ВыбытиеОС)
				 или (Опер.Кредит.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ВыбытиеНМА)
				 или (Опер.Кредит.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.ВыбытиеАктивов) Тогда
					УсловиеИлиВидПоступления = "В счет оплаты за ранее переданное имущество, работы, услуги, права";
				
				ИначеЕсли (Опер.Кредит.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.АктивыПолученныеБезвозмездно) Тогда
					УсловиеИлиВидПоступления = "Безвозмездно";
				
				ИначеЕсли (Опер.Кредит.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.НеПринимаемыеДляЦелейНалогообложения) Тогда
					УсловиеИлиВидПоступления = "Не принимаемые для налогообложения";
	            
				Иначе
					УсловиеИлиВидПоступления = "Иные условия, не связанные с движением задолженности";
				КонецЕсли;
				
			ИначеЕсли (Найти(Опер.Кредит.Счет, "50") <> 0)
			      или (Найти(Опер.Кредит.Счет, "51") <> 0)
				  или (Найти(Опер.Кредит.Счет, "52") <> 0)
				  или (Найти(Опер.Кредит.Счет, "55.") <> 0) Тогда
				УсловиеИлиВидПоступления = "Внутреннее перемещение (из кассы в банк и т.п.)";
	
			ИначеЕсли ПустоеЗначение(Опер.Кредит.Контрагенты) = 0 Тогда
				УсловиеИлиВидПоступления = "Иные условия, связанные с движением задолженности";
	
			Иначе
				УсловиеИлиВидПоступления = "Иные условия, не связанные с движением задолженности";
				
			КонецЕсли;
	
			Сумма = СокрЛП(ФорматС(Опер.Сумма)); 
			
			Если Опер.ВалСумма <> 0 Тогда
				ВалСумма = ФорматС(Опер.ВалСумма);
			Иначе
				ВалСумма = "";
			КонецЕсли;
			Валюта = Опер.Валюта;

			ТекДок = Опер.Документ;

			Таб.ВывестиСекцию("Строка");
	
		КонецЦикла;

		ИтогСумма = ФорматС(БухИт.ДО());

	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4

		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|ОбрабатыватьДокументы все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Период с НачДата по КонДата;
		|
		|ДатаПоступления = Документ.ПоступленияДенежныхСредств.ДатаДок;
		|Контрагент = Документ.ПоступленияДенежныхСредств.Контрагент;
		|Договор = Документ.ПоступленияДенежныхСредств.Договор;
		|УсловиеИлиВидПоступления = Документ.ПоступленияДенежныхСредств.УсловиеИлиВидПоступления;
		|Сумма = Документ.ПоступленияДенежныхСредств.Сумма;
		|Валюта = Документ.ПоступленияДенежныхСредств.Валюта;
		|ВалСумма = Документ.ПоступленияДенежныхСредств.ВалСумма;
		|
		|Функция СуммаСумма = Сумма(Сумма);
		|
		|Группировка Документ;
		|Группировка СтрокаДокумента;
		|"//}}ЗАПРОС
		;
	
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;

		Пока Запрос.Группировка("Документ") = 1 Цикл
	
			Пока Запрос.Группировка("СтрокаДокумента") = 1 Цикл
				ДатаПоступления = Запрос.ДатаПоступления;
				ОснованиеПоступления = "" + глПолноеНаименование(Запрос.Контрагент);
				Если ПустоеЗначение(Запрос.Договор) = 0 Тогда
					 ОснованиеПоступления = ОснованиеПоступления + ", " + Запрос.Договор;
				КонецЕсли;
				УсловиеИлиВидПоступления = Запрос.УсловиеИлиВидПоступления;
				Сумма = ФорматС(Запрос.СуммаСумма); 
				Если Запрос.ВалСумма > 0 Тогда
					ВалСумма = СокрЛП(ФорматС(Запрос.ВалСумма));
				Иначе
					ВалСумма = "";
				КонецЕсли;
				Валюта = Запрос.Валюта;

				ТекДок = Запрос.Документ;

				Таб.ВывестиСекцию("Строка");

			КонецЦикла;
	
		КонецЦикла;
	
		ИтогСумма = ФорматС(Запрос.СуммаСумма);

	КонецЕсли;

	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);

	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрУчетаПоступленийДенежныхСредств", "ОкноРегистрУчетаПоступленийДенежныхСредств");
	Таб.Показать("Регистр учета поступлений денежных средств");

КонецПроцедуры // Сформировать    


//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
КонецПроцедуры //ПриОткрытии
