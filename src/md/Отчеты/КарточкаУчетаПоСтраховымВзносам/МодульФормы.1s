Перем Год;

//******************************************************************************************** 
// ПодобратьСотрудников()
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//  список сотрудников, по которым ведется расчет или строится отчет
//
// Описание:
//  строит запрос по сотрудникам, кроме внутренних совместителей, и
//  создает список таких сотрудников
//
Функция ПодобратьСотрудников()
	
	СписокСотров = СоздатьОбъект("СписокЗначений"); 
	
	Если СпособВыборкиСотрудников = 2 Тогда
		
		Сотрудники.Выгрузить(СписокСотров);
		
	Иначе
		
		// запрос по сотрудникам, кроме внутренних совместителей, с учетом указанного
		// обособленного подразделения
		
		ТекстЗапроса  = 
		"//{{ЗАПРОС(ПодборСотрудников)
		|Сотрудник = Справочник.Сотрудники.ТекущийЭлемент;
		|Группировка Сотрудник без групп;
		|"//}}ЗАПРОС
		;
		Запрос = СоздатьОбъект("Запрос");
		глСтатусСтрока(Контекст,"Обрабатывается справочник Сотрудники");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Сообщить("Не удалось обработать справочник Сотрудники");
			Возврат СписокСотров
		КонецЕсли;
		
		// выгрузим запрос в таблицу, а затем в список
		ВременнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
		Запрос.Выгрузить(ВременнаяТаблица,,0);
		ВременнаяТаблица.Выгрузить(СписокСотров,,,"Сотрудник");
		
	КонецЕсли;
	
	Возврат СписокСотров
	
КонецФункции // ПодобратьСотрудников()

//******************************************************************************
// ЗаполнитьЗаголовок()
//
Процедура ЗаполнитьЗаголовокИндКарточки(Физлицо,пОрганизация,пФИО,пГражданство,пДатаРождения,пИнвалидность)
	
	пОрганизация = Константа.НазваниеОрганизации;
	пФИО = ФизЛицо.Наименование;
	пДатаРождения = ФизЛицо.ДатаРождения;
	пГражданство  = ФизЛицо.Страна.Наименование;
	пИнвалидность = ?(ФизЛицо.Инвалид.Получить(КонГода(Дата(Год,12,15))) = 1, "Инвалид", "");
	
КонецПроцедуры //ЗаполнитьЗаголовок

//******************************************************************************
// Сформировать()
//
// Параметры:
//		нет
//
// Вызывается из формул элементов диалога:
//		Сформировать
//
// Описание:
//  
//
Процедура Сформировать(Сотрудник = "") 
	
	
	Год = СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока());
	ДатаКонцаГода = КонГода(Дата(Год,12,15));
	
	Если Сотрудник = "" Тогда
		СписокСотров = ПодобратьСотрудников();
	Иначе		
		НомерШкалыВзносов = глНомерШкалыСтраховыхВзносовПФР(Сотрудник);
		Если НомерШкалыВзносов <= 0 Тогда
			Если НомерШкалыВзносов = 0 Тогда
				Сообщить(СокрЛП(Сотрудник.Наименование)+": не указана дата рождения, невозможно получить ставку взносов в ПФР!");
			ИначеЕсли НомерШкалыВзносов < 0 Тогда	
				Сообщить(СокрЛП(Сотрудник.Наименование)+": неправильно указана дата рождения, невозможно получить ставку взносов в ПФР!");
			КонецЕсли;
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;		
		СписокСотров = СоздатьОбъект("СписокЗначений");
		СписокСотров.ДобавитьЗначение(Сотрудник);
	КонецЕсли;
	
	Год = СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока());
	
	ВидыОтчетаСтрокой = ВидыОтчета.ПолучитьЗначение(ВидыОтчета.ТекущаяСтрока());
	ЭтоСвод = 0;
	Если (ВидыОтчетаСтрокой = "СводнаяКарточкаСтраховыхВзносов") Тогда	
		ЭтоСвод = 1;
	КонецЕсли;
	
	ВсегоСотров = СписокСотров.РазмерСписка();
	Если ВсегоСотров > 0 Тогда
		
		глСтатусСтрока(Контекст,"Подготовка данных о доходах сотрудников");
		
		ПоследнийМесяцДоходов = 0;
		
		ДоходыВычетыНалогиСотрудников = "";
		Если глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников,?(Сотрудник = "",СписокСотров,Сотрудник),ДатаКонцаГода,Контекст) <> 1 Тогда
			Возврат
		КонецЕсли;
		
		Буфер = СоздатьОбъект("СписокЗначений"); 
		
		ВыходнаяТаблица = СоздатьОбъект("Таблица");
		Раздел1=ВыходнаяТаблица.ПолучитьСекцию("Раздел1");
		Раздел2=ВыходнаяТаблица.ПолучитьСекцию("Раздел2");
		Раздел3=ВыходнаяТаблица.ПолучитьСекцию("Раздел3");
		
		// проверим, какие разделы надо выводить
		ЕстьЕНВД = ?(Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да, 1, 0); 
		БылРаздел2 = 0;
		
		Для СчСотров = 1 По СписокСотров.РазмерСписка()  Цикл  
			
			
			СтрокаИтоговойТаблицы = (СчСотров-1)*12;
			ФизЛицо = СписокСотров.ПолучитьЗначение(СчСотров);     						
			
			НомерШкалыВзносов = глПолучитНомерШкалыСтраховыхВзносовПФР(ФизЛицо);
			Если НомерШкалыВзносов = 0 Тогда
				Сообщить(СокрЛП(ФизЛицо.Наименование)+": не указана дата рождения, невозможно получить ставку взносов в ПФР!");				
			ИначеЕсли НомерШкалыВзносов < 0 Тогда	
				Сообщить(СокрЛП(ФизЛицо.Наименование)+": неправильно указана дата рождения, невозможно получить ставку взносов в ПФР!");				
			КонецЕсли;
			
			глСтатусСтрока(Контекст,"Выводится карточка страховых взносов ("+Окр(СчСотров/ВсегоСотров*100)+"%): "+ФизЛицо.Наименование);
			
			Буфер.УдалитьВсе();
			
			ПоследнийМесяц = 0;
			глЗаполнитьКарточкаУчетаПоСтраховымВзносам(ФизЛицо,Год,1,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,ПоследнийМесяц);
			
			Если ЭтоСвод=1 Тогда
				ПоследнийМесяцДоходов = ?(ПоследнийМесяц > ПоследнийМесяцДоходов,ПоследнийМесяц,ПоследнийМесяцДоходов);
			КонецЕсли;
			
			// Значения, сохраненные в буфере переносим в ячейки таблицы вручную
			Для Сч = 1 По Буфер.РазмерСписка()  Цикл  
				
				Имя="";
				Зн=Буфер.ПолучитьЗначение(Сч,Имя);
				Если Найти(Имя,"СНГ") > 0 Тогда
					НомерРаздела = Число(Сред(Имя,4,1));
				Иначе
					НомерРаздела = Число(Сред(Имя,2,1));
				КонецЕсли;
				Карточка = ?(НомерРаздела = 1,Раздел1,?(НомерРаздела = 2,Раздел2,Раздел3));
				Если НомерРаздела = 2 Тогда
					БылРаздел2 = 1;
				КонецЕсли;
				
				Если ЭтоСвод = 1 Тогда 
					Если (Найти(Имя,"СНГ") > 0) или  (Найти(Имя,"Т") > 0) Тогда
						//Итоги посчитаем потом
						Продолжить;
					КонецЕсли;
					Карточка.Область(Имя).Текст = Формат(Число(Карточка.Область(Имя).Текст) + Число(СокрЛП(Зн)),"Ч015.2.");
				Иначе  
					Карточка.Область(Имя).Текст = Зн;
				КонецЕсли; 
				
			КонецЦикла;
			
			Если ЭтоСвод = 0 Тогда
				// секция полность заполнена - выводим ее в табличный документ
				пОрганизация ="";
				пФИО ="";
				пГражданство="";
				пДатаРождения="";
				пИнвалидность=""; 
				ЗаполнитьЗаголовокИндКарточки(ФизЛицо,пОрганизация,пФИО,пГражданство,пДатаРождения,пИнвалидность);
				ЗаголовокОтчета = ВыходнаяТаблица.ПолучитьСекцию("ЗаголовокИндКарточка");				
				ВыходнаяТаблица.ВывестиСекцию(ЗаголовокОтчета);
				
				ВыходнаяТаблица.ВывестиСекцию(Раздел1);
				Если БылРаздел2 = 1 Тогда
					ВыходнаяТаблица.ВывестиСекцию(Раздел2);    
				КонецЕсли;
				Если ЕстьЕНВД = 1 Тогда
					ВыходнаяТаблица.ВывестиСекцию(Раздел3);    
				КонецЕсли;				
				
				ВыходнаяТаблица.НоваяСтраница();    
				
			КонецЕсли;
			
		КонецЦикла; 
		
		Если ЭтоСвод = 1 Тогда
			Если ПоследнийМесяцДоходов > 0 Тогда
				// подсчитаем итоги с начала года
				Состояние("Подсчет итогов с начала года");
				
				Для СчРаздел = 1 По 3 Цикл
					Карточка = ?(СчРаздел = 1,Раздел1,?(СчРаздел = 2,Раздел2,Раздел3));
					Для СчКолонок = 2 По 26 Цикл
						Если (СчКолонок = 15) или (СчКолонок = 17) или (СчКолонок = 19) или (СчКолонок = 21) или (СчКолонок = 23)  или (СчКолонок = 25) Тогда
							Продолжить;
						КонецЕсли;
						Для СчМес = 1 По ПоследнийМесяцДоходов Цикл
							ИмяСНГ = "СНГ" + СчРаздел + глДополнитьСтроку(СчКолонок,2) + глДополнитьСтроку(СчМес,2);								
							Для СчМес2 = 1 По СчМес Цикл
								Имя = "П"+СчРаздел+глДополнитьСтроку(СчКолонок,2)+глДополнитьСтроку(СчМес2,2);
								Карточка.Область(ИмяСНГ).Текст = Формат(Число(Карточка.Область(ИмяСНГ).Текст) + Число(Карточка.Область(Имя).Текст),"Ч015.2.");										
								Карточка.Область(Имя).Текст = Формат(Окр(Число(Карточка.Область(Имя).Текст),2),"Ч015.2.");
							КонецЦикла;								
							Карточка.Область(ИмяСНГ).Текст = Формат(Окр(Число(Карточка.Область(ИмяСНГ).Текст),2),"Ч015.2.");								
						КонецЦикла;	
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			
			НаименованиеПолное =Константа.ОфициальноеНазваниеОрганизации; 
			ИНН = Константа.ИННОрганизации;
			Позиция = Найти(ИНН,"\");
			Если Позиция > 0 Тогда
				ИНН = Лев(ИНН,Позиция-1);
			Иначе
				ИНН = ИНН;
			КонецЕсли;
			КПП = Прав(Константа.ИННОрганизации,9); 
			ЗаголовокОтчета = ВыходнаяТаблица.ПолучитьСекцию("ЗаголовокСвод");
			ВыходнаяТаблица.ВывестиСекцию(ЗаголовокОтчета);
			
			ВыходнаяТаблица.ВывестиСекцию(Раздел1);
			Если БылРаздел2 = 1 Тогда
				ВыходнаяТаблица.ВывестиСекцию(Раздел2);    
			КонецЕсли;
			Если ЕстьЕНВД = 1 Тогда
				ВыходнаяТаблица.ВывестиСекцию(Раздел3);    
			КонецЕсли;
			
		КонецЕсли;
		
		ВыходнаяТаблица.Опции(0,0,0,0, "КарточкиУчетаСтраховыхВзносов", "КарточкиУчетаСтраховыхВзносов");
		ВыходнаяТаблица.ПараметрыСтраницы(2,,,0,0,0,0,0,0,0,1);
		ВыходнаяТаблица.ТолькоПросмотр(1);
		Если Сотрудник = "" Тогда					
			ВыходнаяТаблица.Показать(ВидыОтчетаСтрокой);
		Иначе                                                                                                          
			ВыходнаяТаблица.Показать("Карточнка учета страховых взносов: " + ?(Сотрудник = "","",Сотрудник.Наименование));
		КонецЕсли;
		
		глСтатусСтрока(Контекст,"");
		
	Иначе
		
		Предупреждение("Не обнаружено ни одного сотрудника!");
		
	КонецЕсли;	
	
КонецПроцедуры // Сформировать()   

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки)
	
	НачальныйГод = 2010;
	КонечныйГод = Мин(ДатаГод(РабочаяДата()), 2010);
	
	Если НачальныйГод>КонечныйГод Тогда
		СпЛет.ДобавитьЗначение(2010,"2010 г.");
		СпЛет.ТекущаяСтрока(1);
	Иначе
		Для ГодВСписок = НачальныйГод По КонечныйГод Цикл
			СпЛет.ДобавитьЗначение(ГодВСписок,Строка(ГодВСписок)+" г.");	
		КонецЦикла;	
		СпЛет.ТекущаяСтрока(СпЛет.РазмерСписка());
	КонецЕсли;
	
	ВидыОтчета.ТекущаяСтрока(1);
	ВидыОтчета.ДобавитьЗначение("ИндивидуальныеКарточки","Индивидуальные карточки по страховым взносам");
	ВидыОтчета.ДобавитьЗначение("СводнаяКарточкаСтраховыхВзносов","Сводная карточка учета по страховым взносам");
	
	Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
		
		Параметры = Форма.Параметр;
		
		// основные параметры
		ДатаГода = Параметры.Получить("ДатаАктуальности");
		ФизЛицо = Параметры.Получить("Сотрудник");
		ТипОтчета = Параметры.Получить("ТипОтчета");
		Если ТипОтчета = "СводнаяКарточкаСтраховыхВзносов" Тогда
			ВидыОтчета.ТекущаяСтрока(2);
		КонецЕсли;
		
		Год = ДатаГод(ДатаГода);
		
		СтрокаТекущегоГода = СпЛет.НайтиЗначение(Год);
		
		Если СтрокаТекущегоГода <> 0 Тогда
			СпЛет.ТекущаяСтрока(СтрокаТекущегоГода);
			Сформировать(ФизЛицо)
		Иначе
			Предупреждение("За "+Год+" год формирование Индивидуальные карточки учета страховых взносов не поддерживается!");	
		КонецЕсли;
		
		СтатусВозврата(0);
		
	Иначе
		
		Если Сотрудники.РазмерСписка() > 0 Тогда
			Сотрудники.ТекущаяСтрока(1);
		КонецЕсли;
		
	КонецЕсли;
	
	ДатаОтчета = КонГода("01.01."+СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока()));
	Если ФлагЧтенияНастройки = 0 Тогда   		
		СпособВыборкиСотрудников = 1;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()  

//******************************************************************************
//	Предопределенная процедура
//
Процедура ОбработкаПодбора(Элемент,КонтФормы)
	Если ПустоеЗначение(Элемент)=0 Тогда
		Если Элемент.ЭтоГруппа()=0 Тогда
			Если Элемент.Выбран() = 1 Тогда
				Если Сотрудники.НайтиЗначение(Элемент) = 0 Тогда
					Сотрудники.ДобавитьЗначение(Элемент);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	СпособВыборкиСотрудников = ?((Сотрудники.РазмерСписка()>0) и (СпособВыборкиСотрудников = 1),2,СпособВыборкиСотрудников);
КонецПроцедуры	// ОбработкаПодбора()
