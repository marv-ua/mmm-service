Перем Расшифровка;
Перем Обновить;
Перем Таб;

//******************************************************************************
// 
Функция РасшифровкаОбновить(Обновить, Расшифровка) Экспорт
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции // РасшифровкаОбновить

//******************************************************************************
// 
Функция НайтиКорень(Док)
	// Эта процедура помогает формировать Дерево подчиненных документов
	КореньДок = 0;
	ВД = Док.Вид();
	Для Н = 1 По Метаданные.Документ(ВД).РеквизитШапки() Цикл
		РеквДок = Док.ПолучитьАтрибут(Метаданные.Документ(ВД).РеквизитШапки(Н));
		Если ТипЗначенияСтр(РеквДок) = "Документ" Тогда
			Если РеквДок.Выбран() = 1 Тогда
				КореньДок = РеквДок;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если ПустоеЗначение(КореньДок) = 1 Тогда
		Возврат Док;
	Иначе
		Возврат НайтиКорень(КореньДок);
	КонецЕсли;
КонецФункции // НайтиКорень

//******************************************************************************
// 
Процедура ВывестиПодчиненные(Докум, Док, Последний, Таб, Уровень, Уровни)
	// Эта процедура помогает формировать Дерево подчиненных документов
	// каждый раз локально!!! создаем справочник подразделений
	// подчиненные документы
	ДокПодч = СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч = СоздатьОбъект("Документ");
	А = "";

	Таб.ВывестиСекцию("GrHook|In");
	// если это первый уровень...
	Если Уровень = 1 Тогда
		//...выведем Г-образную линию...
		Если Последний = 1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
		// ...или Т-образную линию
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	Иначе
		// для первого уровня выведем линию или пустоту
		Если Уровни.ПолучитьЗначение(1, А) = 1 Тогда
			Таб.ПрисоединитьСекцию("GrLine|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrEmpty|Lines");
		КонецЕсли;
		// для остальных уровней присоединим линию или пустоту
		Для Сч = 2 По Уровень - 1 Цикл
			Если Уровни.ПолучитьЗначение(Сч, А) = 1 Тогда
				Таб.ПрисоединитьСекцию("GrLine|Lines");
			Иначе
				Таб.ПрисоединитьСекцию("GrEmpty|Lines");
			КонецЕсли;
		КонецЦикла;
		Если Последний = 1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	КонецЕсли;
	// только теперь - присоединим секцию документа
	ПечДок = глПредставлениеДокумента(Док);
	Если Док.Проведен() = 0 Тогда
		ПечДок = ПечДок + " (Не проведен!)";
	КонецЕсли;
	Расшифровка.Установить("ДокументЖурнала", Док);
	Если Докум = Док Тогда
		Таб.ПрисоединитьСекцию("ТекДок|Body");
	Иначе
		Таб.ПрисоединитьСекцию("Group|Body");
	КонецЕсли;
	Уровень = Уровень + 1;
	ДокПодч.ВыбратьПодчиненныеДокументы(Док.ДатаДок - 30, , Док);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(Док.ДатаДок - 30, , Док);
	Начало = 1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если Начало = 1 Тогда
			А = ПровДокПодч.ПолучитьДокумент();
			Начало = 0;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент() = 1 Тогда
			Уровни.УстановитьЗначение(Уровень, 1, "");
			Последний = 0;
		Иначе
			Уровни.УстановитьЗначение(Уровень, 0, "");
			Последний = 1;
		КонецЕсли;
		ВывестиПодчиненные(Докум, ДокПодч.ТекущийДокумент(), Последний, Таб, Уровень, Уровни);
	КонецЦикла;
   Уровень = Уровень - 1;
КонецПроцедуры // ВывестиПодчиненные

//******************************************************************************
// 
Процедура Сформировать()
	// Эта процедура формирует Дерево подчиненных документов
	Докум = ВыбДокумент;
	Если Докум.Выбран() = 0 Тогда
		Предупреждение("Не указан документ для построения дерева!");
		Возврат;
	КонецЕсли;

	Если Обновить = 2 Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;

	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ДеревоДокументов");
	Расшифровка.Установить("Док", ВыбДокумент);

	// сначала поднимемся по подчиненности вверх и найдем корень
	КореньДок = НайтиКорень(Докум);

	// теперь от корня спускаемся вниз, показывая все на своем пути
	// сначала заполним массив уровней нулями
	Уровень = 0;
	Уровни = СоздатьОбъект("СписокЗначений");
	Для Сч = 1 По 20 Цикл
		Уровни.ДобавитьЗначение(0,"");
	КонецЦикла;

	Если (ТипЗначенияСтр(Таб) <> "Таблица") или (Обновить = 0) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	Таб.ИсходнаяТаблица("ДеревоДокументов");
	Таб.ВывестиСекцию("Кнопки");

	Расшифровка.УдалитьВсе();
	Расшифровка.Установить("ОткрытьЖурналДокументов", 1);
	Расшифровка.Установить("ДокументЖурнала", КореньДок);

	// подчиненные документы
	ДокПодч = СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч = СоздатьОбъект("Документ");

	ДокПодч.ВыбратьПодчиненныеДокументы(КореньДок.ДатаДок - 30, , КореньДок);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(КореньДок.ДатаДок - 30, , КореньДок);

	Уровень = 1;
	ПечДок = глПредставлениеДокумента(КореньДок);
	Если Докум = КореньДок Тогда
		Таб.ВывестиСекцию("КореньТекДок");
	Иначе
		Таб.ВывестиСекцию("Header");
	КонецЕсли;
	Начало = 1;
	Пока ДокПодч.ПолучитьДокумент() = 1 Цикл
		Если Начало = 1 Тогда
			А = ПровДокПодч.ПолучитьДокумент();
			Начало = 0;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент() = 1 Тогда
			Уровни.УстановитьЗначение(1, 1, "");
			Последний = 0;
		Иначе
			Уровни.УстановитьЗначение(1, 0, "");
			Последний = 1;
		КонецЕсли;
		ВывестиПодчиненные(Докум, ДокПодч.ТекущийДокумент(), Последний, Таб, Уровень, Уровни);
	КонецЦикла;

	Таб.ТолькоПросмотр(1);
	Таб.Опции(0, 0, 1, 0, "ПечатьОтчетаДеревоДокументов", "ОкноОтчетаДеревоДокументов");
	Таб.Показать("Структура подчиненных документов", "");
КонецПроцедуры // Сформировать

//******************************************************************************
// 
Процедура ПриОткрытии() // Предопределенная процедура
	Если ТипЗначенияСтр(Форма.Параметр) = "Документ" Тогда
		ВыбДокумент = Форма.Параметр;
		Сформировать();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Обновить = 0;
	Если глФлагРасшифровки = 1 Тогда
		Обновить = Число(глРасшифровка.Получить("Обновить"));
		ВыбДокумент = глРасшифровка.Получить("Док");

		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//******************************************************************************
// 
Процедура ПриНачалеВыбораЗначения(ИдентЭлементаДиалога, ФлагСтандартнойОбработки) // Предопределенная процедура
	Если ИдентЭлементаДиалога = "ВыбДокумент" Тогда
		ФлагСтандартнойОбработки = 0;
		ОткрытьФорму("Журнал.Общий");
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения
