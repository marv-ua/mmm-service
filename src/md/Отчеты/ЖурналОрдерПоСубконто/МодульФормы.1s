Перем Таб;
Перем Обновить;
Перем Расшифровка;
Перем ПредставлениеРУ;
Перем ВидСубконто[3], Субконто[3], ОтборСубконто[3], ПоГруппам[3], Номер[3];

//-----------------------------------------------
Процедура УстановитьВладельца(ПоВсем, РУ, Субконто)
	Назначить = 0;
	Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
 		МДСубконто = Метаданные.Справочник(Субконто.Вид());
		Если МДСубконто.Выбран() = 1 Тогда
	 		Назначить = 1;                      
			Если (ПоВсем = 0) И (ТипЗначенияСтр(РУ) = "Справочник") Тогда
				Если МДСубконто.Владелец.Выбран() = 1 Тогда
					Если МДСубконто.Владелец.Идентификатор = РУ.Вид() Тогда
						Назначить = 2;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Назначить = 1 Тогда
		Субконто.ИспользоватьВладельца("");
	ИначеЕсли Назначить = 2 Тогда
		Субконто.ИспользоватьВладельца(РУ);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Функция ПроверкаПериода()
	Если ПустоеЗначение(Дата1) = 1 Тогда
	    Предупреждение("Не указана дата начала периода отчета!");
		Возврат 0;
	КонецЕсли;
	Если Дата1 > Дата2 Тогда
		Предупреждение("Неправильно задан период отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если Дата2 > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//-----------------------------------------------
Функция ИтогиНеРавныНулю(БухИт, Индекс)
	
	КодВозврата = 0;
	
	Для ТипСуммы = 1 по 3 Цикл
		Если БухИт.СНД(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;

		ИначеЕсли БухИт.СНК(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.ДО(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.КО(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.СКД(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;
			
		ИначеЕсли БухИт.СКК(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;                    
			
		ИначеЕсли БухИт.СНКРС(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;                     
			
		ИначеЕсли БухИт.СККРС(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;                    
			
		ИначеЕсли БухИт.СНДРС(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;   
			
		ИначеЕсли БухИт.СКДРС(ТипСуммы) <> 0 Тогда
			КодВозврата = 1;                    
			
		КонецЕсли;
	КонецЦикла;
	
	БухИт.ВыбратьКорСчета(1);
	Пока БухИт.ПолучитьКорСчет() = 1 Цикл
		Для ТипСуммы = 1 по 3 Цикл
			Если БухИт.КорДО(ТипСуммы) <> 0 Тогда
				КодВозврата = 1;
				
			ИначеЕсли БухИт.КорКО(ТипСуммы) <> 0 Тогда
				КодВозврата = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Индекс < 3 Тогда
		СледующийИндекс = Индекс + 1;
	    Если ОтборСубконто[СледующийИндекс] = 1 Тогда
		    БухИт.ВыбратьСубконто(СледующийИндекс);
		    Пока БухИт.ПолучитьСубконто(СледующийИндекс) = 1 Цикл
				Если ИтогиНеРавныНулю(БухИт, СледующийИндекс) = 1 Тогда
					БухИт.ПолучитьСубконто(СледующийИндекс,, "");
				    КодВозврата = 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КодВозврата;

КонецФункции // ИтогиНеРавныНулю()

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(Субконто[Поз1], Субконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
	ПоменятьЗначения(ПоГруппам[Поз1], ПоГруппам[Поз2]);
	ПоменятьЗначения(Номер[Поз1], Номер[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Функция РасшифровкаДтКт(ДтКт)
	Расшифровка.Установить("ДтКт", ДтКт);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Процедура Сформировать_Колонки(Ит, Таб, Стр)
	Таб.ВывестиСекцию(Стр+"|Начало");

	Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
	Расшифровка.Установить("ДтКт", 1);
	Ит.ВыбратьКорСчета(1, 1);
	Пока Ит.ПолучитьКорСчет() = 1 Цикл
		Расшифровка.Установить("КорСчет", Ит.КорСчет);
		Таб.ПрисоединитьСекцию(Стр+"|КорСчет_Дт");
	КонецЦикла;
	Расшифровка.Установить("КорСчет");
	Таб.ПрисоединитьСекцию(Стр+"|Оборот_Дт");

	Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
	Расшифровка.Установить("ДтКт", 2);
	Ит.ВыбратьКорСчета(1, 2);
	Пока Ит.ПолучитьКорСчет() = 1 Цикл
		Расшифровка.Установить("КорСчет", Ит.КорСчет);
		Таб.ПрисоединитьСекцию(Стр+"|КорСчет_Кт");
	КонецЦикла;
	Расшифровка.Установить("КорСчет");
	Таб.ПрисоединитьСекцию(Стр+"|Оборот_Кт");
	Расшифровка.Установить("Отчет", "КарточкаСчета");
	Расшифровка.Установить("ДтКт");
	
	Таб.ПрисоединитьСекцию(Стр+"|Конец");
КонецПроцедуры

//-----------------------------------------------
Процедура Сформировать(ФлагЗакрытияФормы = 0)
	Если Счет.Выбран() = 0 Тогда
		Предупреждение("Не указан счет!");
		Возврат;
	КонецЕсли;

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;           

	СохранитьЗначение("ОтчРабСчет", Счет);
	    
	ВидСубконто[1] = ВыбВидСубконто1; Субконто[1] = Субконто1; ОтборСубконто[1] = ?(ВидСубконто[1].Выбран()=1, ОтборСубконто1.ТекущаяСтрока(), 3); ПоГруппам[1] = ПоГруппам1; Номер[1] = 1;
	ВидСубконто[2] = ВыбВидСубконто2; Субконто[2] = Субконто2; ОтборСубконто[2] = ?(ВидСубконто[2].Выбран()=1, ОтборСубконто2.ТекущаяСтрока(), 3); ПоГруппам[2] = ПоГруппам2; Номер[2] = 2;
	ВидСубконто[3] = ВыбВидСубконто3; Субконто[3] = Субконто3; ОтборСубконто[3] = ?(ВидСубконто[3].Выбран()=1, ОтборСубконто3.ТекущаяСтрока(), 3); ПоГруппам[3] = ПоГруппам3; Номер[3] = 3;

	Если (ВидСубконто[1] = ВидСубконто[2]) И (ОтборСубконто[1] <> 3) И (ОтборСубконто[2] <> 3) Или
		 (ВидСубконто[2] = ВидСубконто[3]) И (ОтборСубконто[2] <> 3) И (ОтборСубконто[3] <> 3) Или
		 (ВидСубконто[3] = ВидСубконто[1]) И (ОтборСубконто[3] <> 3) И (ОтборСубконто[1] <> 3) Тогда
		Предупреждение("Выбраны одинаковые виды субконто!");
		Возврат;
	КонецЕсли;

	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;

	Если ОтборСубконто[1] = 3 Тогда
		Предупреждение("Не указан вид субконто!");
		Возврат;
	КонецЕсли;
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;
	Таб.ИсходнаяТаблица("Сформировать");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(РазделительУчета);
	
	ВыбВидыСубконто = "";
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			ВыбВидыСубконто = ВыбВидыСубконто+?(А=1, " ", ", ")+Строка(ВидСубконто[А]);
			Заголовок = Строка(?(Заголовок="","",Заголовок+"; "))+Строка(ВидСубконто[А])+?(ОтборСубконто[А] = 2, ": "+Субконто[А], "");
			Ит.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
		КонецЕсли;
	КонецЦикла;
	    
	Ит.ВключатьСубсчета(0, ДанныеПоСубсчетам);
	Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет,, ?(ПоВалюте = 1, Валюта, ""), 3);
	     
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ЖурналОрдерПоСубконто");
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("Счет", Счет);
	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
    Расшифровка.Установить("РазделительУчета", РазделительУчета);

	Для А=1 По 3 Цикл
		Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
		Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
		Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
		Расшифровка.Установить("ПоГруппам"+Номер[А], ПоГруппам[А]);
	КонецЦикла;
	
	Расшифровка.Установить("Валюта", Валюта);
    Расшифровка.Установить("ПоВалюте", ПоВалюте);

	Таб.ВывестиСекцию("Обновить");
	Расшифровка.УдалитьВсе();
	          
	НазваниеОрганизации = глНазваниеОрганизации(Контекст);
	
	ФиксСтрок = 7;
	Таб.ВывестиСекцию("Заголовок");
	Если ПустоеЗначение(Заголовок) = 0 Тогда
		Таб.ВывестиСекцию("Заголовок1");
		ФиксСтрок = ФиксСтрок + 1;
	КонецЕсли;
	Таб.ВывестиСекцию("Заголовок2");
	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы()+2, 4);
	Расшифровка.УдалитьВсе();
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("Счет", Счет);
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
	Расшифровка.Установить("Отчет", "КарточкаСчета");
	Расшифровка.Установить("Валюта", Валюта);
	Расшифровка.Установить("ПоВалюте", ПоВалюте);
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Если ОтборСубконто[А] = 2 Тогда
 				Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
				Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
				Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если (Счет.Количественный = 1) и (ПоВалюте = 1) Тогда 
		ГрКол = "КолВал";
		
	ИначеЕсли (Счет.Количественный = 1) и (ПоВалюте = 0) Тогда 
		ГрКол = "Кол";
		
	ИначеЕсли (Счет.Количественный = 0) и (ПоВалюте = 1) Тогда 
		ГрКол = "Вал";
		
	Иначе
		ГрКол = "";
	КонецЕсли;
	
	Сформировать_Колонки(Ит, Таб, "Шапка");
	Если ОтборСубконто[1] = 1 Тогда
		Расшифровка.Установить("ВидСубконто"+Номер[1], ВидСубконто[1]);
		Ит.ВыбратьСубконто(1);
		Пока Ит.ПолучитьСубконто(1) = 1 Цикл
			Если ИтогиНеРавныНулю(Ит, 1) = 0 Тогда
			    Продолжить;
			КонецЕсли;
			Расшифровка.Установить("Субконто"+Номер[1], Ит.Субконто(1));
			Расшифровка.Установить("ОтборСубконто"+Номер[1], 2);
			Сформировать_Колонки(Ит, Таб, "Субконто1"+ГрКол);
			Если ОтборСубконто[2] = 1 Тогда
				Расшифровка.Установить("ВидСубконто"+Номер[2], ВидСубконто[2]);
				Ит.ВыбратьСубконто(2);
				Пока Ит.ПолучитьСубконто(2) = 1 Цикл
					Если ИтогиНеРавныНулю(Ит, 2) = 0 Тогда
					    Продолжить;
					КонецЕсли;
					Расшифровка.Установить("Субконто"+Номер[2], Ит.Субконто(2));
					Расшифровка.Установить("ОтборСубконто"+Номер[2], 2);
					Сформировать_Колонки(Ит, Таб, "Субконто2"+ГрКол);
					Если ОтборСубконто[3] = 1 Тогда
						Расшифровка.Установить("ВидСубконто"+Номер[3], ВидСубконто[3]);
						Ит.ВыбратьСубконто(3);
						Пока Ит.ПолучитьСубконто(3) = 1 Цикл
							Если ИтогиНеРавныНулю(Ит, 3) = 0 Тогда
							    Продолжить;
							КонецЕсли;
							Расшифровка.Установить("Субконто"+Номер[3], Ит.Субконто(3));
							Расшифровка.Установить("ОтборСубконто"+Номер[3], 2);
							Сформировать_Колонки(Ит, Таб, "Субконто3"+ГрКол);
						КонецЦикла;                           
						Расшифровка.Установить("Субконто"+Номер[3]);
						Расшифровка.Установить("ОтборСубконто"+Номер[3]);
						Расшифровка.Установить("ВидСубконто"+Номер[3]);
					КонецЕсли;
				КонецЦикла;
				Расшифровка.Установить("Субконто"+Номер[2]);
				Расшифровка.Установить("ОтборСубконто"+Номер[2]);
				Расшифровка.Установить("ВидСубконто"+Номер[2]);
			КонецЕсли;
		КонецЦикла;
		Расшифровка.Установить("Субконто"+Номер[1]);
		Расшифровка.Установить("ОтборСубконто"+Номер[1]);
		Расшифровка.Установить("ВидСубконто"+Номер[1]);
	КонецЕсли;
	
	Для А=1 По 3 Цикл
		Если ПустоеЗначение(Субконто[А]) = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если ОтборСубконто[А] <> 3 Тогда
			Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
			Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
			Если ОтборСубконто[А] = 2 Тогда
				Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
			Иначе
				Если ПустоеЗначение(Субконто[А]) = 0 Тогда
				    Расшифровка.Установить("ОтборСубконто"+Номер[А], 2);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Сформировать_Колонки(Ит, Таб, "Подвал"+ГрКол);
	
	НазваниеОрганизации = ?(ПустоеЗначение(НазваниеОрганизации)=1, "", " "+НазваниеОрганизации);
	ПериодИОрганизация = " ("+ПериодСтр(Дата1, Дата2)+")"+НазваниеОрганизации;
	ВерхнийКолонтитул = "Журнал-ордер по счету "+Счет+" по субконто "+ВыбВидыСубконто+ПериодИОрганизация;
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	Таб.ТолькоПросмотр(1);
    Таб.Опции(0, 0, ФиксСтрок, 4, "ОпцииПечатиЖурналОрдерСубконто", "ЖурналОрдерСубконто");
	Таб.ОбластьПечати(2);
	Таб.ПовторятьПриПечатиСтолбцы(1,4);
	Таб.ПовторятьПриПечатиСтроки(ФиксСтрок-1,ФиксСтрок);
	Таб.ПараметрыСтраницы(2,,,,,,,,, 0);
	Таб.Показать(ВерхнийКолонтитул, "");

	Если (ФлагЗакрытияФормы = 1) Или (Обновить = 2) Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСчета()
	Если Счет.КоличествоСубконто() > 0 Тогда
		НазначитьСчет(ВыбВидСубконто1, Счет, 1);
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто1 = "";
		Субконто1 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		ОтборСубконто1.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто1) = 1 Тогда
	    ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
	
	Форма.Субконто1.Доступность(Доступность);
	Форма.ОтборСубконто1.Доступность(Доступность);
	Форма.ВыбВидСубконто1.Доступность(Доступность);
	Форма.ПоГруппам1.Доступность(Доступность);
	Форма.ОчиститьСубконто1.Доступность(Доступность);

	Если Счет.КоличествоСубконто() > 1 Тогда
		НазначитьСчет(ВыбВидСубконто2, Счет, 2);
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		Доступность = 1;
	Иначе
		ВыбВидСубконто2 = "";
		Субконто2 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто2.Выбран() = 0 Тогда
		ОтборСубконто2.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто2) = 1 Тогда
	    ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
	
	Форма.Субконто2.Доступность(Доступность);
	Форма.ОтборСубконто2.Доступность(Доступность);
	Форма.ВыбВидСубконто2.Доступность(Доступность);
	Форма.ПоГруппам2.Доступность(Доступность);
	Форма.ОчиститьСубконто2.Доступность(Доступность);

	Если Счет.КоличествоСубконто() > 2 Тогда
		НазначитьСчет(ВыбВидСубконто3, Счет, 3);
		Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		Доступность = 1;
	Иначе
		ВыбВидСубконто3 = "";
		Субконто3 = "";
		Доступность = 0;
	КонецЕсли;
	
	Если ВыбВидСубконто3.Выбран() = 0 Тогда
		ОтборСубконто3.ТекущаяСтрока(3);
	ИначеЕсли ПустоеЗначение(Субконто3) = 1 Тогда
	    ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
	
	Форма.Субконто3.Доступность(Доступность);
	Форма.ОтборСубконто3.Доступность(Доступность);
	Форма.ВыбВидСубконто3.Доступность(Доступность);
	Форма.ПоГруппам3.Доступность(Доступность);
	Форма.ОчиститьСубконто3.Доступность(Доступность);

	Если Счет.Валютный = 0 Тогда
	    ПоВалюте = 0;
		Если Метаданные.Валюта.Выбран() = 1 Тогда
	    	Валюта = ПолучитьПустоеЗначение("Справочник."+Метаданные.Валюта.Идентификатор);
		КонецЕсли;
	КонецЕсли;
	Форма.ПоВалюте.Доступность(Счет.Валютный);
	Форма.Валюта.Доступность(Счет.Валютный);

	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВалюты()
	ПоВалюте = Валюта.Выбран();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто1()
	Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто2()
	Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореВидаСубконто3()
	Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры
                      
//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	Если ПустоеЗначение(Субконто1) = 0 Тогда
	    Если ТипЗначения(Субконто1) = 11 Тогда //Справочник
	    	Если Субконто1.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
	    Если ТипЗначения(Субконто2) = 11 Тогда //Справочник
	    	Если Субконто2.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	Если ПустоеЗначение(Субконто3) = 0 Тогда
	    Если ТипЗначения(Субконто3) = 11 Тогда //Справочник
	    	Если Субконто3.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1.ТекущаяСтрока(1);
	Субконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2.ТекущаяСтрока(1);
	Субконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3.ТекущаяСтрока(1);
	Субконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореРУ()
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто1);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто2);
	УстановитьВладельца(ПоВсемРУ, РазделительУчета, Субконто3);
КонецПроцедуры	

//-----------------------------------------------
Процедура ПриОткрытии(ФлагЧтенияНастройки)
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;
	
	ОтборСубконто1.УдалитьВсе();
	ОтборСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто1.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто1.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто2.УдалитьВсе();
	ОтборСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто2.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто2.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто3.УдалитьВсе();
	ОтборСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто3.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто3.ДобавитьЗначение(3, "Не учитывать");

	Если Метаданные.Валюта.Выбран() = 1 Тогда
		Форма.Валюта.НазначитьТип("Справочник."+Метаданные.Валюта.Идентификатор);
	Иначе
		Форма.ВалютаТекст.Доступность(0);
		Форма.Валюта.Доступность(0);
		Форма.ПоВалюте.Доступность(0);
	КонецЕсли;

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Дата1 = глРасшифровка.Получить("Дата1");
		Дата2 = глРасшифровка.Получить("Дата2");
		Счет = глРасшифровка.Получить("Счет");
	   	ПриВыбореСчета();
	   	ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");

	   	ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Субконто1 = глРасшифровка.Получить("Субконто1");
		ОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1"));
		ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
	   	
		ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		Субконто2 = глРасшифровка.Получить("Субконто2");
		ОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2"));
		ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");

		ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
	   	Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		Субконто3 = глРасшифровка.Получить("Субконто3");
		ОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3"));
		ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
		
		Валюта = глРасшифровка.Получить("Валюта");
		ПоВалюте = глРасшифровка.Получить("ПоВалюте");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		РУ = БухИтоги.ИспользоватьРазделительУчета();
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
		Если ФлагЧтенияНастройки = 0 Тогда
		    ВосстановитьЗначение("ОтчРабСчет", Счет);
		КонецЕсли;
		ПриВыбореСчета();
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового()
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
    ПриВыбореСчета();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, Флаг)
	//Обработка выбора субконто типа "Документ"
	Если Лев(ИдентЭлемДиалога, 8) = "Субконто" Тогда
		Ном = Число(Прав(ИдентЭлемДиалога, 1));
		Если Ном = 1 Тогда
		    _ВидСубконто = ВыбВидСубконто1;
		ИначеЕсли Ном = 2 Тогда
		    _ВидСубконто = ВыбВидСубконто2;
		ИначеЕсли Ном = 3 Тогда
		    _ВидСубконто = ВыбВидСубконто3;
		КонецЕсли;
		Если Лев(_ВидСубконто.ТипСубконто(), 8) = "Документ" Тогда
			//Предусмотрена возможность выбора субконто типа "Документ" из специально созданного в конфигурации журнала
			//Идентификатор такого журнала должен быть такой же, как у вида субконто
			Журнал = Метаданные.Журнал(_ВидСубконто.Идентификатор());
		    Если Журнал.Выбран() = 0 Тогда
		        Флаг = 1;
				Возврат;
			КонецЕсли;
			//Тип первой ссылки первой графы этого журнала может определять тип параметра,
			//передаваемого в форму журнала документов.
			//Данный параметр может использоваться, например, для установки отбора документов в открываемой форме
			Флаг = 0;
			Если Журнал.Графа(1).Выбран() = 0 Тогда
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				Возврат;
			КонецЕсли;
			Если Журнал.Графа(1).Ссылки.Количество() > 0 Тогда
				РеквизитОтбора = Журнал.Графа(1).Ссылки.Получить(1).Тип+"."+Журнал.Графа(1).Ссылки.Получить(1).Вид;
				Если РеквизитОтбора = ВыбВидСубконто1.ТипСубконто() Тогда
					КонтекстЖурнала = Субконто1;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто2.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто2;
				ИначеЕсли РеквизитОтбора = ВыбВидСубконто3.ТипСубконто() Тогда
			        КонтекстЖурнала = Субконто3;
				Иначе
					ОткрытьФорму("Журнал."+Журнал.Идентификатор);
				КонецЕсли;
				ОткрытьФорму("Журнал."+Журнал.Идентификатор, КонтекстЖурнала);
			Иначе
				ОткрытьФорму("Журнал."+Журнал.Идентификатор);
			КонецЕсли;
		КонецЕсли;
		глРазделительУчета = РазделительУчета;
	КонецЕсли;
КонецПроцедуры