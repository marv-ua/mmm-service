////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем ТекущийВариантФормирования; 
Перем ИтогСуммаБезНДС20,ИтогНДС20,ИтогСуммаБезНДС18,ИтогНДС18,ИтогСуммаБезНДС10,ИтогНДС10,ИтогНДС0,ИтогСуммаСовсемБезНДС,ИтогВсего;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//*****************************************************************************
Функция РасшифровкаОбновить(Обновить)
	
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
	
КонецФункции

//*****************************************************************************
Функция ДатаНомер(Док)
	
	Если Док.Вид() = "ЗаписьКнигиПродаж" Тогда
		Возврат Док.ДатаНомерСчетаФактуры;
	
	ИначеЕсли Док.Вид() = "ЗаписьКнигиПродажТорг" Тогда
		Возврат Док.НомерДата;
		
	Иначе
		Если ДатаКонца >= '30.05.2006' Тогда
			Возврат Формат(Док.ДатаДок, "Д") + " №" + Док.НомерДок;
		Иначе
			Возврат Формат(Док.ДатаДок, "Д") + " №" + 
			СокрЛП(глПреобразоватьНомерДок(Док.НомерДок, 0, 0));
		КонецЕсли;
	КонецЕсли;

КонецФункции

//*****************************************************************************
Функция Наименование(Покупатель)
	
	Если ПустаяСтрока(Покупатель.ПолнНаименование) = 1 Тогда
		Возврат Покупатель.Наименование;
	Иначе
		Возврат Покупатель.ПолнНаименование;	
	КонецЕсли;

КонецФункции

//*****************************************************************************
Функция ТоварНаКомиссии(Товар)
	
	Если ТипЗначенияСтр(Товар) = "Справочник" Тогда
		Если Товар.Вид() = "Номенклатура" Тогда
			Если Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
    Возврат 0;

КонецФункции

//*****************************************************************************
Функция Пересчет(Док, Сумма)
	
	ЦеныВДокументе = 1; // в рублях
	Если Док.Договор.Выбран() = 1 Тогда
		Если Док.Договор.ВалютаДоговора.Выбран() = 1 Тогда
			
			Кратность =  Док.Договор.ВалютаДоговора.Кратность.Получить(Док.ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			
		    Если Док.Вид() = "СчетФактура" Тогда
				
				// Если счет-фактура на аванс по УЕ-договору, то перечитывать суммы не надо.
				Если ((Док.Аванс = 1) или (Док.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница)) и (Док.Договор.ОплатаДоговора = 1) Тогда
				Иначе
					ЦеныВДокументе = 2; // в валюте
					
					Если Док.Договор.ВестиУчетРасчетовУЕ = 1 Тогда
						Кратность = Кратность * 100 / (100 + Док.Договор.ПроцентКорректировкиКурсаУЕ);
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Док.Договор.ОплатаДоговора = 2 Тогда
				ЦеныВДокументе = 2; // в валюте
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	Если ЦеныВДокументе = 2 Тогда
	    Возврат Сумма*Док.Курс/Кратность;
		
	Иначе
		Возврат Сумма;
	КонецЕсли;
		
КонецФункции // Пересчет()

//*****************************************************************************
// УправлениеДиалогом()
//
// Вызывается из формул элементов диалога:
//  Флаг СтандартнаяФорма.
//
// Описание:
//  Процедура управляет составом параметров отбора документов в зависимости от 
// выбранного режима формирования отчета
//
Процедура УправлениеДиалогом()
	
	Если СтандартнаяФорма = 1 Тогда
		Форма.ИспользоватьСлой("Основной, Информация", 2);
		
	Иначе
		Форма.ИспользоватьСлой("Основной, Отбор", 2);
	КонецЕсли;
	
	Если ВариантФормирования = 1 Тогда
		Форма.ПризнакЧастичнойОплаты.Видимость(1);
	Иначе
		Форма.ПризнакЧастичнойОплаты.Видимость(0);
	КонецЕсли; 
	
	Если ВариантФормирования = 3 Тогда
		Форма.ИспользоватьСлой("Основной, Информация", 2);
		Форма.Рамка1.Видимость(0);
		Форма.Рамка2.Видимость(1);
		Форма.Рамка3.Видимость(1);
		Форма.РежиФормированияДопЛистов.Видимость(1);
		Форма.РежиФормированияДопЛистов1.Видимость(1);
		Форма.СтатикРежиФормированияДопЛистов.Видимость(1);
		СтандартнаяФорма = 1;
		Форма.СтандартнаяФорма.Доступность(0); 
	Иначе
		Форма.Рамка1.Видимость(1);
		Форма.Рамка2.Видимость(0);
		Форма.Рамка3.Видимость(0);
		Форма.РежиФормированияДопЛистов.Видимость(0);
		Форма.РежиФормированияДопЛистов1.Видимость(0);
		Форма.СтатикРежиФормированияДопЛистов.Видимость(0);
		Форма.СтандартнаяФорма.Доступность(1);
	КонецЕсли;  

	Если ДатаКонца >= '01.01.2006' Тогда
		ПризнакЧастичнойОплаты = 0;
		Форма.ПризнакЧастичнойОплаты.Видимость(0);
	Иначе
		Форма.ПризнакЧастичнойОплаты.Видимость(1);
	КонецЕсли;
	
КонецПроцедуры // УправлениеДиалогом() 

//*****************************************************************************
Процедура КнигаПродаж(НачДата, КонДата)
	
	Если ВариантФормирования <>3 Тогда
		ТабОтчета = СоздатьОбъект("ТаблицаЗначений");
		Таб.ИсходнаяТаблица("КнигаПродаж");
		Таб.ИспользоватьФормат("Ч-15.2-");
	КонецЕсли;
	   
	УстановленныйОтбор = "";
	Если СтандартнаяФорма = 0 Тогда
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    УстановленныйОтбор = "Установлен отбор по контрагенту: "+СокрЛП(ВыбКонтрагент.Наименование);
		КонецЕсли;
		ТекстВШапке = "";
		
	Иначе
		ТекстВШапке = "Приложение N 3
                      |к Правилам ведения журналов учета полученных и выставленных счетов-фактур,
                      |книг покупок и книг продаж при расчетах по налогу на добавленную стоимость";
	КонецЕсли;
	                                       
	ТекстЗапроса = "Период с НачДата по КонДата;
		|ОбрабатыватьДокументы Все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Док = Документ.ЗаписьКнигиПродаж.ТекущийДокумент,
		|      Документ.ЗаписьКнигиПродажТорг.ТекущийДокумент;
		|Контрагент = Документ.ЗаписьКнигиПродаж.Контрагент,
		|             Документ.ЗаписьКнигиПродажТорг.Контрагент;
		|Всего = Документ.ЗаписьКнигиПродаж.Всего,
		|        Документ.ЗаписьКнигиПродажТорг.ВсегоПродаж;
		|ВсегоТорг = Документ.ЗаписьКнигиПродажТорг.ВсегоПродаж;
		|Сумма = Документ.ЗаписьКнигиПродаж.Сумма;
		|СтавкаНДС = Документ.ЗаписьКнигиПродаж.СтавкаНДС,
		|            Документ.ЗаписьКнигиПродажТорг.СтавкаНДС;
		|НДС = Документ.ЗаписьКнигиПродаж.НДС,
		|      Документ.ЗаписьКнигиПродажТорг.НДС;
		|НДСТорг = Документ.ЗаписьКнигиПродажТорг.НДС;
		|СтавкаНоль = Документ.ЗаписьКнигиПродаж.НДСпоСтавкеНольПроцентов,
		|             Документ.ЗаписьКнигиПродажТорг.НДСпоСтавкеНольПроцентов;
		|ЗаписьДопЛиста  =  Документ.ЗаписьКнигиПродаж.ЗаписьДопЛистаПР;
		|Группировка Док;
		|Функция ВсегоПродаж = Сумма(Пересчет(Док,Всего));
		|Функция НДС20 = Сумма(Пересчет(Док,НДС)) Когда ((СтавкаНДС.Ставка > 10.5) и (СтавкаНоль = 0));
		|Функция СуммаБезНДС20 = Сумма(Пересчет(Док,Сумма)) Когда ((СтавкаНДС.Ставка > 10.5) и (СтавкаНоль = 0));
		|Функция СуммаБезНДС20Торг = Сумма(ВсегоТорг - НДСТорг) Когда ((СтавкаНДС.Ставка = 20) и (СтавкаНоль = 0));
		|Функция СуммаБезНДС16Торг = Сумма(ВсегоТорг) Когда ((СтавкаНДС.Ставка = 16.67) и (СтавкаНоль = 0));
		|Функция НДС10 = Сумма(Пересчет(Док,НДС)) Когда ((СтавкаНДС.Ставка < 10.5) и (СтавкаНДС.Ставка > 0) и (СтавкаНоль = 0));
		|Функция СуммаБезНДС10 = Сумма(Пересчет(Док,Сумма)) Когда ((СтавкаНДС.Ставка < 10.5) и (СтавкаНДС.Ставка > 0) и (СтавкаНоль = 0));
		|Функция СуммаБезНДС10Торг = Сумма(ВсегоТорг - НДСТорг) Когда ((СтавкаНДС.Ставка = 10) и (СтавкаНоль = 0));
		|Функция СуммаБезНДС09Торг = Сумма(ВсегоТорг) Когда ((СтавкаНДС.Ставка = 9.09) и (СтавкаНоль = 0));
		|Функция НДС0 = Сумма(Пересчет(Док,Всего)) Когда (СтавкаНоль = 1);
		|Функция СуммаСовсемБезНДС = Сумма(Пересчет(Док,Всего)) Когда ((СтавкаНДС = глБезНалога(""НДС"")) и (СтавкаНоль = 0));
		|Условие (Всего <> 0);
		|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
		|Условие (ЗаписьДопЛиста <>1);";
		
		Если СтандартнаяФорма = 0 Тогда
			Если ВыбКонтрагент.Выбран() = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Условие (Контрагент в ВыбКонтрагент);";
			КонецЕсли;
		КонецЕсли;
		
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;
	Запрос.Выгрузить(ТабОтчета,,0);
	ТабОтчета.НоваяКолонка("ДатаДок","Дата"); 
	ТабОтчета.НоваяКолонка("ДатаНомер"); 
	ТабОтчета.НоваяКолонка("ДатаОплаты");
	ТабОтчета.НоваяКолонка("СчетФактура");
	ТабОтчета.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	ТабОтчета.НоваяКолонка("ИНН");
	ТабОтчета.НоваяКолонка("КПП");
	ТабОтчета.НоваяКолонка("ПозицияДок");
	ТабОтчета.НоваяКолонка("Аванс","Число");
	ТабОтчета.ВыбратьСтроки();
	Пока ТабОтчета.ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(ТабОтчета.Док)=1 Тогда
			ТабОтчета.СуммаБезНДС20 	= ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС20Торг + ТабОтчета.СуммаБезНДС16Торг;
			ТабОтчета.СуммаБезНДС10 	= ТабОтчета.СуммаБезНДС10 + ТабОтчета.СуммаБезНДС10Торг + ТабОтчета.СуммаБезНДС09Торг;
		    Продолжить;
		КонецЕсли;
		ТабОтчета.ДатаДок			= ТабОтчета.Док.ДатаДок;
		ТабОтчета.ДатаНомер			= ДатаНомер(ТабОтчета.Док); 
		ТабОтчета.ДатаОплаты		= ТабОтчета.Док.ДатаОплаты;
		ТабОтчета.Контрагент        = ТабОтчета.Док.Контрагент;
		ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
		ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
		ТабОтчета.ПозицияДок		= ТабОтчета.Док.ПолучитьПозицию();
	    ТабОтчета.СчетФактура		= ТабОтчета.Док.ДокументОснование;
        ТабОтчета.Аванс             = ?(ТабОтчета.Док.ДокументОснование.Выбран()=1,?(ТабОтчета.Док.ДокументОснование.Вид() = "СчетФактураПолученный",?(ТабОтчета.Док.ДокументОснование.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс,2,0),ТабОтчета.Док.ДокументОснование.Аванс),0);
		
		Если ТабОтчета.СчетФактура.Выбран() = 1 Тогда
			Если ТабОтчета.СчетФактура.Вид() = "СчетФактура" Тогда
				Если (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс)
				или (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
					ТабОтчета.Аванс = 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ТабОтчета.СуммаБезНДС20 	= ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС20Торг + ТабОтчета.СуммаБезНДС16Торг;
		ТабОтчета.СуммаБезНДС10 	= ТабОтчета.СуммаБезНДС10 + ТабОтчета.СуммаБезНДС10Торг + ТабОтчета.СуммаБезНДС09Торг;
	КонецЦикла;
	
	ДокАвто = СоздатьОбъект("Документ.ЗаписиКнигиПродаж");
	ДокАвто.ВыбратьДокументы(НачДата,КонДата);
	Всего 		= 0;
	БезНДС20 	= 0;
	НДС20 		= 0;
	БезНДС10	= 0;
	НДС10		= 0;
	НДС0		= 0;
	Освобождаемые = 0;
	
	Пока ДокАвто.ПолучитьДокумент()=1 Цикл
		Если ДокАвто.ЮрЛицо <> ЮрЛицо Тогда //NDline
			Продолжить;
		КонецЕсли; //NDline
		Если ДокАвто.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;
		ДокАвто.ВыбратьСтроки();
		Пока ДокАвто.ПолучитьСтроку() = 1 Цикл
			Если (ВыбКонтрагент.Выбран() = 1)и
			     (ВыбКонтрагент<>ДокАвто.Контрагент)и
				 (ДокАвто.Контрагент.ПринадлежитГруппе(ВыбКонтрагент)=0) Тогда
				Продолжить;
			КонецЕсли;
			
			Если (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратНеОплаченного) Тогда
			    Продолжить;
			КонецЕсли;
			
			Если ДокАвто.ЗаписьДопЛиста = 1 Тогда
				Продолжить;
			КонецЕсли;
		
			ТабОтчета.НоваяСтрока();
			
			ТабОтчета.Док	 			= ДокАвто.ТекущийДокумент();
			ТабОтчета.ДатаДок			= ДокАвто.Оплата.ДатаДок;  
			
			Если КонДата >= '30.05.2006' Тогда 
				
				Если ДокАвто.СчетФактура.Вид() = "СчетФактура" Тогда
					ТабОтчета.ДатаНомер			= ДатаНомер(ДокАвто.СчетФактура); 
				Иначе
					ТабОтчета.ДатаНомер			= ДокАвто.ДатаНомерСчетаФактуры; 
				КонецЕсли;
				
			Иначе
				ТабОтчета.ДатаНомер			= ДокАвто.ДатаНомерСчетаФактуры; 
			КонецЕсли;
			
			ТабОтчета.СчетФактура 		= ДокАвто.СчетФактура;
			ТабОтчета.Контрагент        = ДокАвто.Контрагент;
			ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
			ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
			Если ДокАвто.СчетФактура.Вид() = "СчетФактура" Тогда
				ТабОтчета.Аванс             = ?((ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратНеОплаченногоПК )или (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратОплаченногоПК ),0,ДокАвто.СчетФактура.Аванс);
			ИначеЕсли ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ЗачетАванса Тогда
				ТабОтчета.Аванс = 2;
			Иначе
				ТабОтчета.Аванс = 0;
			КонецЕсли;
			
			Если ТабОтчета.СчетФактура.Выбран() = 1 Тогда
				Если ТабОтчета.СчетФактура.Вид() = "СчетФактура" Тогда
					Если (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс)
					или (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
						ТабОтчета.Аванс = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратНеОплаченногоПК )или (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратОплаченногоПК) или (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ЗачетАванса) Тогда
				ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
			Иначе
				Если ПустоеЗначение(ДокАвто.СчетФактура)=0 Тогда
					Если ДокАвто.СчетФактура.Вид() = "СчетФактураПолученный" Тогда
						ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
					Иначе
						Если ПустоеЗначение(ДокАвто.СчетФактура.ДатаОплаты) = 0 Тогда
							ТабОтчета.ДатаОплаты = ДокАвто.СчетФактура.ДатаОплаты;
							ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
							
						ИначеЕсли (ДокАвто.СчетФактура.ДатаДок < '01.01.2006') или (ДокАвто.СчетФактура.ДокументОснование <> ДокАвто.Оплата) Тогда
							ТабОтчета.ДатаОплаты = ДокАвто.Оплата.ДатаДок;
							ТабОтчета.ПозицияДок		= ДокАвто.СчетФактура.ПолучитьПозицию();
							
						Иначе
							ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
						КонецЕсли;  
					КонецЕсли;
					Если (ДокАвто.СчетФактура.ДатаДок >= '01.01.2006') И (Константа.МетодОпределенияВыручки.Получить(ДокАвто.СчетФактура.ДатаДок) = Перечисление.МетодыОпределенияВыручки.ПоОтгрузке) Тогда
						ТабОтчета.ПозицияДок		= ДокАвто.СчетФактура.ПолучитьПозицию();
					КонецЕсли;
				Иначе
					ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
				КонецЕсли;  				
			КонецЕсли;  
			
			
			ТабОтчета.ВсегоПродаж 		= ДокАвто.Всего;
			ТабОтчета.СуммаБезНДС20 	= ДокАвто.БезНДС20;
			ТабОтчета.НДС20 			= ДокАвто.НДС20;
			ТабОтчета.СуммаБезНДС10 	= ДокАвто.БезНДС10;
			ТабОтчета.НДС10 			= ДокАвто.НДС10;
			ТабОтчета.НДС0 				= ДокАвто.НДС0;
			ТабОтчета.СуммаСовсемБезНДС = ДокАвто.Освобождаемые; 
			
			Всего 		= Всего + ДокАвто.Всего;
			БезНДС20 	= БезНДС20 + ДокАвто.БезНДС20;
			НДС20 		= НДС20 + ДокАвто.НДС20;
			БезНДС10 	= БезНДС10 + ДокАвто.БезНДС10;
			НДС10 		= НДС10 + ДокАвто.НДС10;
			НДС0		= НДС0 + ДокАвто.НДС0;
			Освобождаемые = Освобождаемые + ДокАвто.Освобождаемые;
						
		КонецЦикла;
	КонецЦикла;

	НачГода2006 = '01.01.2006';
	
	ТекстЗапроса = "Период с НачДата по КонДата;
		|ОбрабатыватьДокументы Все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Док =	Документ.СчетФактура.ТекущийДокумент;
		|ДатаДок = Документ.СчетФактура.ДатаДок;
		|СчетНДС = Документ.СчетФактура.СчетНДС;
		|СтавкаНоль = Документ.СчетФактура.НДСпоСтавкеНольПроцентов;
		|Контрагент =	Документ.СчетФактура.Контрагент; 
		|ВключатьВКнигуПродаж =	Документ.СчетФактура.ВключатьВКнигуПродаж;
		|АвтоНДС =	Документ.СчетФактура.Договор.АвтоОбработкаНДС;
		|Аванс =	Документ.СчетФактура.Аванс;
		|Группировка Док;
		|Условие (СтавкаНоль = 0);
		|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
		|Условие ((((АвтоНДС = 0) или (Аванс = 1)) и (ВключатьВКнигуПродаж = 1) и (ДатаДок >= НачГода2006)) или ((СчетНДС = 1) и (ДатаДок < НачГода2006)));";
		
		Если СтандартнаяФорма = 0 Тогда
			Если ВыбКонтрагент.Выбран() = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Условие (Контрагент в ВыбКонтрагент);";
			КонецЕсли;
		КонецЕсли;
		
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;
	
	ТаблЧасть = СоздатьОбъект("ТаблицаЗначений");
	Опер = СоздатьОбъект("Операция");
	Сч68_2 = СчетПоКоду("68.2");
	Сч90_1_1 = СчетПоКоду("90.1.1");
	Сч91_1 = СчетПоКоду("91.1");
	
	Пока Запрос.Группировка(1) = 1 Цикл
	    Если ПустоеЗначение(Запрос.Док)=1 Тогда
		    Продолжить;
		КонецЕсли;
		
		ТаблЧасть.Очистить();
		Запрос.Док.ВыгрузитьТабличнуюЧасть(ТаблЧасть);
		
		ВсегоВал	= 0;
		Всего 		= 0;
		БезНДС20 	= 0;
		НДС20 		= 0;
		БезНДС10	= 0;
		НДС10		= 0;
		НДС0		= 0;
		Освобождаемые = 0;
		
		ТаблЧасть.ВыбратьСтроки();
		Пока ТаблЧасть.ПолучитьСтроку() = 1 Цикл
			Если ТоварНаКомиссии(ТаблЧасть.Товар) = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Всего = Всего + Пересчет(Запрос.Док,ТаблЧасть.Всего);
			ВсегоВал = ВсегоВал + ТаблЧасть.Всего;
			
			Если (ТаблЧасть.НДС <> 0) и (ТаблЧасть.Сумма <> 0) Тогда
			    
				СтавкаНДС = ?(ПустоеЗначение(ТаблЧасть.СтавкаНДС) = 1, ТаблЧасть.НДС / ТаблЧасть.Сумма * 100, ТаблЧасть.СтавкаНДС.Ставка);
				
				Если СтавкаНДС > 10.5 Тогда
					НДС20=НДС20+Пересчет(Запрос.Док,ТаблЧасть.НДС);
					БезНДС20=БезНДС20+Пересчет(Запрос.Док,ТаблЧасть.Сумма);
					
				Иначе
					НДС10=НДС10+Пересчет(Запрос.Док,ТаблЧасть.НДС);
					БезНДС10=БезНДС10+Пересчет(Запрос.Док,ТаблЧасть.Сумма);
				КонецЕсли;
				
			ИначеЕсли Запрос.Док.НДСпоСтавкеНольПроцентов = 1 Тогда
				НДС0=НДС0+Пересчет(Запрос.Док,ТаблЧасть.Сумма);
				
			Иначе
				Освобождаемые=Освобождаемые+Пересчет(Запрос.Док,ТаблЧасть.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Если Всего <> 0 Тогда
			
			ТабОтчета.НоваяСтрока();
		
			ТабОтчета.Док	 			= Запрос.Док;
			ТабОтчета.ДатаДок			= Запрос.Док.ДатаДок;
			ТабОтчета.ДатаНомер			= ДатаНомер(Запрос.Док);
			ТабОтчета.СчетФактура 		= Запрос.Док;
			ТабОтчета.Контрагент        = Запрос.Док.Контрагент;
			ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
			ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
			ТабОтчета.ПозицияДок		= Запрос.Док.ПолучитьПозицию();
			ТабОтчета.ДатаОплаты		= Запрос.Док.ДатаОплаты;
			ТабОтчета.Аванс				= Запрос.Док.Аванс;
			
			Если (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс)
			или (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
				ТабОтчета.Аванс = 1;
			КонецЕсли;
			
			ВсегоПоНакладной = 0;
			Если ПустоеЗначение(Запрос.Док.ДокументОснование) = 0 Тогда
				ТаблЧасть.Очистить();
				Запрос.Док.ДокументОснование.ВыгрузитьТабличнуюЧасть(ТаблЧасть);
				ТаблЧасть.ВыбратьСтроки();
				Пока ТаблЧасть.ПолучитьСтроку() = 1 Цикл
					Если (Запрос.Док.ДокументОснование.Вид() = "ОтпускМатериаловНаСторону")
					ИЛИ (Запрос.Док.ДокументОснование.Вид() = "ОказаниеУслуг") Тогда
					    ВсегоПоНакладной = ВсегоПоНакладной + ТаблЧасть.Всего;
						
				    ИначеЕсли Запрос.Док.ДокументОснование.Вид() = "РасходнаяНакладная" Тогда
					    Если ТаблЧасть.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
					        Продолжить;
						КонецЕсли;
						
						ВсегоПоНакладной = ВсегоПоНакладной + ТаблЧасть.Всего;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если (Запрос.Док.Проведен() = 1) и (ПустоеЗначение(Запрос.Док.ДокументОснование) = 0) и (ВсегоПоНакладной = ВсегоВал) Тогда
				СуммаПокупкиРуб = 0;
				СуммаНДСРуб = 0;
				
				Опер.НайтиОперацию(Запрос.Док);
				Опер.ВыбратьПроводки();
				Пока Опер.ПолучитьПроводку() = 1 Цикл
					Если Опер.Кредит.Счет = Сч68_2 Тогда
						СуммаНДСРуб = СуммаНДСРуб + Опер.Сумма;
					КонецЕсли;
				КонецЦикла;
				
				Опер.НайтиОперацию(Запрос.Док.ДокументОснование);
				Опер.ВыбратьПроводки();
				Пока Опер.ПолучитьПроводку() = 1 Цикл
					Если (Опер.Кредит.Счет = Сч90_1_1) или (Опер.Кредит.Счет = Сч91_1) Тогда
						СуммаОпер = Опер.Сумма;
						Если Опер.Кредит.Счет = Сч91_1 Тогда
							Если Опер.Кредит.Субконто(1).ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда
								СуммаОпер = 0;
							КонецЕсли;
						КонецЕсли;
						
						СуммаПокупкиРуб = СуммаПокупкиРуб + СуммаОпер;
					КонецЕсли;
				КонецЦикла;
				
				Если (СуммаПокупкиРуб <> Всего) и (СуммаПокупкиРуб <> 0) Тогда
				    
					К = СуммаПокупкиРуб / Всего;
					БезНДС20 	= Окр(БезНДС20 * К, 2, 1);
					НДС20 		= Окр(НДС20 * К, 2, 1);
					БезНДС10	= Окр(БезНДС10 * К, 2, 1);
					НДС10		= Окр(НДС10 * К, 2, 1);
					НДС0 		= Окр(НДС0 * К, 2, 1);
					Освобождаемые = Окр(Освобождаемые * К, 2, 1);
					
					Разница = (СуммаПокупкиРуб - СуммаНДСРуб) - (БезНДС20 + БезНДС10 + Освобождаемые + НДС0);
					Если Разница <> 0 Тогда
						Если БезНДС20 <> 0 Тогда
						    БезНДС20 = БезНДС20 + Разница;
							
						ИначеЕсли БезНДС10 <> 0 Тогда
						    БезНДС10 = БезНДС10 + Разница;
							
						ИначеЕсли Запрос.Док.НДСпоСтавкеНольПроцентов = 1 Тогда
							НДС0 = НДС0 + Разница;
							
						Иначе
							Освобождаемые = Освобождаемые + Разница;
						КонецЕсли;
					КонецЕсли;
					
					Разница = СуммаНДСРуб - (НДС20 + НДС10);
					Если Разница <> 0 Тогда
						Если НДС20 <> 0 Тогда
						    НДС20 = НДС20 + Разница;
							
						Иначе
						    НДС10 = НДС10 + Разница;
						КонецЕсли;
					КонецЕсли;
					
					Всего = СуммаПокупкиРуб;
					
				КонецЕсли;
			КонецЕсли;
		
			ТабОтчета.ВсегоПродаж 		= Всего;
			ТабОтчета.СуммаБезНДС20 	= БезНДС20;              
			ТабОтчета.НДС20 			= НДС20;
			ТабОтчета.СуммаБезНДС10 	= БезНДС10;
			ТабОтчета.НДС10 			= НДС10;
			ТабОтчета.НДС0 				= НДС0;
			ТабОтчета.СуммаСовсемБезНДС = Освобождаемые;           

		КонецЕсли;
	КонецЦикла;
		
	ТабОтчета.Сортировать("ПозицияДок");
	
	Если (ПризнакЧастичнойОплаты = 1) и (ТабОтчета.КоличествоСтрок() > 0) Тогда
		
		//Соберем данные о проверке частичных оплат
		ТабСчетовФактур = СоздатьОбъект("ТаблицаЗначений");
		ТабОтчета.Выгрузить(ТабСчетовФактур);
		ТабСчетовФактур.Свернуть("ДатаНомер, Контрагент","ВсегоПродаж, СуммаБезНДС20, НДС20, СуммаБезНДС10, НДС10, НДС0, СуммаСовсемБезНДС");
		БухИт76 = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт76.ИспользоватьРазделительУчета(ЮрЛицо); //NDline
		БухИт76.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные);
		БухИт76.ВыполнитьЗапрос(НачДата,КонДата,"76.Н.1",,,,,1);
		
		//Проверим частичные оплаты
		ТабОтчета.ВыбратьСтроки();
		Пока ТабОтчета.ПолучитьСтроку()=1 Цикл
			Если (Найти(Врег(ТабОтчета.ДатаНомер), "ЧАСТИЧНАЯ") > 0) или
				(Найти(ТабОтчета.ДатаНомер, " НДС ") > 0) Тогда
				Продолжить;
			КонецЕсли;
			Если ПустоеЗначение(ТабОтчета.СчетФактура) = 1 Тогда
			    Продолжить;
			КонецЕсли;
			ЧастичнаяОплата = 0;
			Если БухИт76.ПолучитьСубконто(,,ТабОтчета.СчетФактура) > 0 Тогда
				Если БухИт76.СКК("С") > 0 Тогда //Есть остаток НДС (задолженность не погашена)
					ЧастичнаяОплата = 1;
				ИначеЕсли БухИт76.СНК("С") > 0 Тогда
					БухИтСФ = СоздатьОбъект("БухгалтерскиеИтоги");
					БухИтСФ.ИспользоватьРазделительУчета(ЮрЛицо); //NDline
					БухИтСФ.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыВыданные, ТабОтчета.СчетФактура, 2);
					БухИтСФ.ВыполнитьЗапрос(,ТабОтчета.СчетФактура,"76.Н.1",,,,,1);
					Если БухИт76.СНК("С") <> БухИтСФ.СКК("С") Тогда
						ЧастичнаяОплата = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			НС = 0;
			Если ТабСчетовФактур.НайтиЗначение(ТабОтчета.ДатаНомер, НС, "ДатаНомер") = 1 Тогда 
				ТабСчетовФактур.ПолучитьСтрокуПоНомеру(НС);
				Если ТабОтчета.ВсегоПродаж <> ТабСчетовФактур.ВсегоПродаж Тогда //Есть несколько записей по этой с/ф
					ЧастичнаяОплата = 1;
				КонецЕсли;
			КонецЕсли;
			Если ЧастичнаяОплата = 1 Тогда
				ТабОтчета.ДатаНомер = СокрЛП(ТабОтчета.ДатаНомер) + РазделительСтрок +"частичная оплата";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Ном = 1; 
	
	Если (ГруппироватьПоКонтрагентам = 1) и (СтандартнаяФорма=0) Тогда 
		ТабОтчета.Сортировать("Контрагент"); 
		Контр = " не контрагент ";
	КонецЕсли; 
	
	Если ВариантФормирования<>3 Тогда
		Таб.ВывестиСекцию("Шапка");
	КонецЕсли;
		
	ИтогСуммаБезНДС20=0; 
	ИтогНДС20=0;
	ИтогСуммаБезНДС18=0; 
	ИтогНДС18=0;
	ИтогСуммаБезНДС10=0;
	ИтогНДС10 = 0;	
	ИтогНДС0 = 0;
	ИтогСуммаСовсемБезНДС = 0;
	ИтогВсего = 0;
	
	ТабОтчета.ВыбратьСтроки();
	Пока ТабОтчета.ПолучитьСтроку()=1 Цикл 
		ПечСуммаБезНДС20 = 0;
		ПечНДС20 = 0; 
		ПечСуммаБезНДС18 = 0;
		ПечНДС18 = 0;
		ПечСуммаБезНДС10 = ТабОтчета.СуммаБезНДС10;
		ПечНДС10 = ТабОтчета.НДС10;
		ПечНДС0 = ТабОтчета.НДС0;
		ПечСуммаСовсемБезНДС = ТабОтчета.СуммаСовсемБезНДС;
		
		Если ТабОтчета.Аванс <> 2 Тогда
		    ПечКонтрагент = Наименование(ТабОтчета.Контрагент);
			ПечИНН = ТабОтчета.ИНН;
			ПечКПП = ТабОтчета.КПП;        
		Иначе
			ПечКонтрагент = СокрЛП(Константа.НазваниеОрганизации);
			ПечИНН = СРЕД(Константа.ИННОрганизации,1,10);
			ПечКПП = СРЕД(Константа.ИННОрганизации,12);   
		КонецЕсли;
		
		Если ТабОтчета.СуммаБезНДС20 <> 0  Тогда
			
			Ставка = Окр(100 * (ТабОтчета.НДС20/ТабОтчета.СуммаБезНДС20),0,1);
			
			Если Ставка > 18 Тогда
				Если (ПустоеЗначение(ТабОтчета.СчетФактура) = 0) Тогда
					Если (ТабОтчета.СчетФактура.ДатаДок > '01.01.2004') Тогда
						Ставка = 18;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;				
			
			Если (ТабОтчета.СуммаБезНДС20 <= 0.5) и (ТабОтчета.СуммаБезНДС20 > 0) Тогда
				Если (ПустоеЗначение(ТабОтчета.СчетФактура) = 0) Тогда
					Если (ТабОтчета.СчетФактура.ДатаДок < '01.01.2004') Тогда
						Ставка = Ставка;
					Иначе
						Ставка = 18;
					КонецЕсли;
				Иначе
					Ставка = 18;
				КонецЕсли;
			КонецЕсли;
			
			ОбщаяБаза = ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС10 + ТабОтчета.НДС0 + ТабОтчета.СуммаСовсемБезНДС;
			Если ((Ставка = 20) и (ОбщаяБаза <> ТабОтчета.ВсегоПродаж)) или 
				((Ставка = 17) и (ОбщаяБаза = ТабОтчета.ВсегоПродаж)) Тогда
				ПечСуммаБезНДС20 = ТабОтчета.СуммаБезНДС20;
				ПечНДС20 = ТабОтчета.НДС20; 
			Иначе
				ПечСуммаБезНДС18 = ТабОтчета.СуммаБезНДС20;
				ПечНДС18 = ТабОтчета.НДС20;
			КонецЕсли;
			
		Иначе                              
			ПечСуммаБезНДС18 = ТабОтчета.СуммаБезНДС20;
			ПечНДС18 = ТабОтчета.НДС20;			
		КонецЕсли;
		
		Если ТабОтчета.Аванс <> 0 Тогда
		   	ПечСуммаБезНДС20 = 0; 
			ПечСуммаБезНДС18 = 0; 
			ПечСуммаБезНДС10 = 0;
			ПечНДС0 = 0;
			ПечСуммаСовсемБезНДС = 0;
		КонецЕсли;
		
		ИтогСуммаБезНДС20=ИтогСуммаБезНДС20+ПечСуммаБезНДС20; 
		ИтогНДС20=ИтогНДС20+ПечНДС20;
		ИтогСуммаБезНДС18=ИтогСуммаБезНДС18+ПечСуммаБезНДС18; 
		ИтогНДС18=ИтогНДС18+ПечНДС18;
		ИтогСуммаБезНДС10=ИтогСуммаБезНДС10+ПечСуммаБезНДС10;
		ИтогНДС10=ИтогНДС10+ПечНДС10;                        
		ИтогНДС0=ИтогНДС0+ПечНДС0;                        
		ИтогСуммаСовсемБезНДС=ИтогСуммаСовсемБезНДС+ПечСуммаСовсемБезНДС;
		ИтогВсего=ИтогВсего+ТабОтчета.ВсегоПродаж;

		Если ВариантФормирования<>3 Тогда
			
			Если (ГруппироватьПоКонтрагентам = 1) и (СтандартнаяФорма=0) Тогда
				Если Контр<>ТабОтчета.Контрагент Тогда 
					Если Ном>1 Тогда 
						Таб.ВывестиСекцию("ВсегоКонтрагент");
					КонецЕсли;
					Таб.ВывестиСекцию("Контрагент");
					Контр=ТабОтчета.Контрагент; 
					ВсегоПродаж=0; 
					СуммаБезНДС20=0; 
					НДС20=0;
					СуммаБезНДС18=0; 
					НДС18=0;
					СуммаБезНДС10=0; 
					НДС10=0; 
					НДС0=0; 
					СуммаСовсемБезНДС=0; 
				КонецЕсли; 
				ВсегоПродаж=ВсегоПродаж+ТабОтчета.ВсегоПродаж; 
				СуммаБезНДС20=СуммаБезНДС20+ПечСуммаБезНДС20; 
				НДС20=НДС20+ПечНДС20;
				СуммаБезНДС18=СуммаБезНДС18+ПечСуммаБезНДС18; 
				НДС18=НДС18+ПечНДС18; 
				СуммаБезНДС10=СуммаБезНДС10+ПечСуммаБезНДС10; 
				НДС10=НДС10+ТабОтчета.НДС10; 
				НДС0=НДС0+ПечНДС0; 
				СуммаСовсемБезНДС=СуммаСовсемБезНДС+ПечСуммаСовсемБезНДС; 
			КонецЕсли;    
			СписокРасшифровки = ТабОтчета.Док;
			Таб.ВывестиСекцию("Строка");
			Ном = Ном + 1;
		КонецЕсли;
	КонецЦикла; 

	Если ВариантФормирования<>3 Тогда
		Если (ГруппироватьПоКонтрагентам = 1) и (СтандартнаяФорма=0) Тогда 
			Таб.ВывестиСекцию("ВсегоКонтрагент");
		КонецЕсли;    
	КонецЕсли;

	Если ВариантФормирования<>3 Тогда
		
		Таб.ВывестиСекцию("Всего");
		
		ГлБух = ФИО(Константа.ГлБухгалтер.Получить( КонДата ));
		Таб.ВывестиСекцию("Подвал");
		
		ВерхнийКолонтитул = "Книга продаж ("+ПериодСтр(НачДата, КонДата)+")";
		НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
		
		Таб.Опции(0,0,13,2, "Параметры печати книги продаж" );
		Таб.ОбластьПечати(2);
		Таб.ПовторятьПриПечатиСтроки(9, 13);
		Таб.ПараметрыСтраницы(2,,,,,,,,,1);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Книга продаж","");  
	КонецЕсли;

КонецПроцедуры // КнигаПродаж()

//*****************************************************************************
Процедура ЖурналУчета()
	
	Таб.ИсходнаяТаблица("ЖурналУчета");
	УстановленныйОтбор = "";
	Если СтандартнаяФорма = 0 Тогда
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    УстановленныйОтбор = "Установлен отбор по контрагенту: "+СокрЛП(ВыбКонтрагент.Наименование);
		КонецЕсли;
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка");

	ТекстЗапроса = "Период с ДатаНачала по ДатаКонца;
		|ОбрабатыватьДокументы Все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Док = Документ.СчетФактура.ТекущийДокумент;
		|Контрагент = Документ.СчетФактура.Контрагент;
		|Валюта = Документ.СчетФактура.Договор.ВалютаДоговора;
		|Всего = Документ.СчетФактура.Всего;";
		Если СтандартнаяФорма = 0 Тогда
			Если ГруппироватьПоКонтрагентам = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Группировка Контрагент;";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Док;
		|Функция ВсегоПродаж = Сумма(Всего);";
		Если СтандартнаяФорма = 0 Тогда
			Если ВыбКонтрагент.Выбран() = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Условие (Контрагент в ВыбКонтрагент);";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + " //NDline
		|Условие (Док.ЮрЛицо = ЮрЛицо);"; //NDline
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;
	
	Ном = 1;
	Пока Запрос.Группировка(1) = 1 Цикл
		Если (СтандартнаяФорма = 1) или (ГруппироватьПоКонтрагентам = 0) Тогда
			Сумма = Формат(Запрос.ВсегоПродаж, "Ч-18.2-,");
			Если ПустоеЗначение(Запрос.Валюта) = 0 Тогда
			    Если ((Запрос.Док.Аванс = 1) и (Запрос.Док.Договор.ОплатаДоговора = 1))
				ИЛИ (Запрос.Док.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
				Иначе
			        Сумма = Сумма + Запрос.Валюта;
			    КонецЕсли;
			КонецЕсли;
			
			Таб.ВывестиСекцию("Строка");
			Ном = Ном + 1;
			
		ИначеЕсли ГруппироватьПоКонтрагентам = 1 Тогда
			Если Запрос.Контрагент.ЭтоГруппа() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Таб.ВывестиСекцию("Контрагент");
			Пока Запрос.Группировка(2) = 1 Цикл
				Сумма = Формат(Запрос.ВсегоПродаж, "Ч-18.2-,");
				Если ПустоеЗначение(Запрос.Валюта) = 0 Тогда
				    Если ((Запрос.Док.Аванс = 1) и (Запрос.Док.Договор.ОплатаДоговора = 1)) 
					ИЛИ (Запрос.Док.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
					Иначе
				        Сумма = Сумма + Запрос.Валюта;
				    КонецЕсли;
				КонецЕсли;
				Таб.ВывестиСекцию("Строка");
				Ном = Ном + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ВерхнийКолонтитул = "Журнал учета выставленных счетов-фактур ("+ПериодСтр(ДатаНачала, ДатаКонца)+")";
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	
	Таб.Опции(0,0,6,0, "Параметры печати журналы выставленных счетов-фактур" );
	Таб.ОбластьПечати(2);
	Таб.ПовторятьПриПечатиСтроки(6, 6);
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Журнал учета выставленных счетов-фактур",""); 
	
КонецПроцедуры // ЖурналУчета()  

//*****************************************************************************
// ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста = "", НачДата, КонДата)
//
// Параметры:
//  ПериодДопЛиста - Конец корректируемого периода;
//  НачДата - Начало периода выборки записей доп. листов;
//  КонДата - Конец периода выборки записей доп. листов;
// 
Процедура ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста = "", НачДата, КонДата)
	
	КоличествоМесяцевВПериоде = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Квартал, 3, 1);
	
	ТекстЗапроса = "Период с НачДата по КонДата;
	|ОбрабатыватьДокументы Все;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Док = Документ.ЗаписьКнигиПродаж.ТекущийДокумент;
	|Контрагент = Документ.ЗаписьКнигиПродаж.Контрагент;
	|Всего = Документ.ЗаписьКнигиПродаж.Всего;
	|Сумма = Документ.ЗаписьКнигиПродаж.Сумма;
	|СтавкаНДС = Документ.ЗаписьКнигиПродаж.СтавкаНДС;
	|НДС = Документ.ЗаписьКнигиПродаж.НДС;
	|СтавкаНоль = Документ.ЗаписьКнигиПродаж.НДСпоСтавкеНольПроцентов;
	|ЗаписьДопЛиста  =  Документ.ЗаписьКнигиПродаж.ЗаписьДопЛистаПР;
	|ДатаДопЛиста  =  Документ.ЗаписьКнигиПродаж.ДатаДопЛистаПР;
	|Группировка Док;
	|Функция ВсегоПродаж = Сумма(Пересчет(Док,Всего));
	|Функция НДС20 = Сумма(Пересчет(Док,НДС)) Когда ((СтавкаНДС.Ставка > 10.5) и (СтавкаНоль = 0));
	|Функция СуммаБезНДС20 = Сумма(Пересчет(Док,Сумма)) Когда ((СтавкаНДС.Ставка > 10.5) и (СтавкаНоль = 0));
	|Функция НДС10 = Сумма(Пересчет(Док,НДС)) Когда ((СтавкаНДС.Ставка < 10.5) и (СтавкаНДС.Ставка > 0) и (СтавкаНоль = 0));
	|Функция СуммаБезНДС10 = Сумма(Пересчет(Док,Сумма)) Когда ((СтавкаНДС.Ставка < 10.5) и (СтавкаНДС.Ставка > 0) и (СтавкаНоль = 0));
	|Функция НДС0 = Сумма(Пересчет(Док,Всего)) Когда (СтавкаНоль = 1);
	|Функция СуммаСовсемБезНДС = Сумма(Пересчет(Док,Всего)) Когда ((СтавкаНДС = глБезНалога(""НДС"")) и (СтавкаНоль = 0));
	|Условие (Всего <> 0);
	|Условие (ЗаписьДопЛиста = 1);
	|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
	|";
	
	Если ПустоеЗначение(ПериодДопЛиста) = 0 Тогда 
		Если КоличествоМесяцевВПериоде = 1 Тогда
		    ТекстЗапроса =  ТекстЗапроса + "
			|Условие (КонМесяца(ДатаДопЛиста) = КонМесяца(ПериодДопЛиста));
			|Условие (ДатаДопЛиста <= ПериодДопЛиста);
			|";
			
		Иначе
		    ТекстЗапроса =  ТекстЗапроса + "
			|Условие (КонКвартала(ДатаДопЛиста) = КонКвартала(ПериодДопЛиста));
			|Условие (ДатаДопЛиста <= ПериодДопЛиста);
			|";
		КонецЕсли;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;

	Пока Запрос.Группировка(1) = 1 Цикл
		Если ПустоеЗначение(Запрос.Док)=1 Тогда
			Продолжить;
		КонецЕсли;  
		ТабОтчета.НоваяСтрока();
		ТабОтчета.Док				= Запрос.Док;
		ТабОтчета.ДатаДок			= Запрос.Док.ДатаДок;
		ТабОтчета.ДатаНомер			= ДатаНомер(Запрос.Док); 
		ТабОтчета.ДатаОплаты		= Запрос.Док.ДатаОплаты;
		ТабОтчета.Контрагент        = Запрос.Док.Контрагент;
		ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
		ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
		ТабОтчета.ПозицияДок		= Запрос.Док.ПолучитьПозицию();
		ТабОтчета.СчетФактура		= Запрос.Док.ДокументОснование;
		ТабОтчета.Аванс             = ?(Запрос.Док.ДокументОснование.Выбран()=1,?(Запрос.Док.ДокументОснование.Вид() = "СчетФактураПолученный",?(Запрос.Док.ДокументОснование.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс,2,0),Запрос.Док.ДокументОснование.Аванс),0);
		
		Если ТабОтчета.СчетФактура.Выбран() = 1 Тогда
			Если ТабОтчета.СчетФактура.Вид() = "СчетФактура" Тогда
				Если (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.Аванс)
				или (ТабОтчета.СчетФактура.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыВыданного.СуммоваяРазница) Тогда
					ТабОтчета.Аванс = 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ТабОтчета.ВсегоПродаж 		= Запрос.ВсегоПродаж;
		ТабОтчета.НДС20			 	= Запрос.НДС20;
		ТабОтчета.СуммаБезНДС20 	= Запрос.СуммаБезНДС20;
		ТабОтчета.НДС10 			= Запрос.НДС10;
		ТабОтчета.СуммаБезНДС10 	= Запрос.СуммаБезНДС10;
		ТабОтчета.НДС0 				= Запрос.НДС0;
		ТабОтчета.СуммаСовсемБезНДС = Запрос.СуммаСовсемБезНДС;
		ТабОтчета.Период			= Запрос.Док.ДатаДок; 
		ТабОтчета.ДатаДопЛиста		= ТабОтчета.Док.ДатаДопЛистаПР;
		Расшифр						= СоздатьОбъект("СписокЗначений"); 
		Расшифр.ДобавитьЗначение(ТабОтчета.Док, СокрЛП(ТабОтчета.Док.ПредставлениеВида()+" № "+ТабОтчета.Док.НомерДок +" от "+ТабОтчета.Док.ДатаДок) + " " + Формат(ТабОтчета.ВсегоПродаж,"Ч-15.2-"));
		ТабОтчета.Расшифровка 		= Расшифр;   
	КонецЦикла;
	
	ДокАвто = СоздатьОбъект("Документ.ЗаписиКнигиПродаж");
	ДокАвто.ВыбратьДокументы(НачДата,КонДата); 
	
	Всего 		= 0;
	БезНДС20 	= 0;
	НДС20 		= 0;
	БезНДС10	= 0;
	НДС10		= 0;
	НДС0		= 0;
	Освобождаемые = 0;
	
	Пока ДокАвто.ПолучитьДокумент()=1 Цикл
		Если ДокАвто.ЮрЛицо <> ЮрЛицо Тогда //NDline
			Продолжить;
		КонецЕсли; //NDline
		Если ДокАвто.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;
		ДокАвто.ВыбратьСтроки();
		Пока ДокАвто.ПолучитьСтроку() = 1 Цикл
			Если (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратНеОплаченного) Тогда
			    Продолжить;
			КонецЕсли;
			
			Если ДокАвто.ЗаписьДопЛиста = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПустоеЗначение(ПериодДопЛиста) = 0 Тогда 
				Если КоличествоМесяцевВПериоде = 1 Тогда
					Если (КонМесяца(ДокАвто.ДатаДопЛиста) <> КонМесяца(ПериодДопЛиста)) или (ДокАвто.ДатаДопЛиста > ПериодДопЛиста) Тогда
						Продолжить;
					КонецЕсли;
					
				Иначе
					Если (КонКвартала(ДокАвто.ДатаДопЛиста) <> КонКвартала(ПериодДопЛиста)) или (ДокАвто.ДатаДопЛиста > ПериодДопЛиста) Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
			
			ТабОтчета.НоваяСтрока();
			
			ТабОтчета.Док	 			= ДокАвто.ТекущийДокумент();
			ТабОтчета.ДатаДок			= ДокАвто.Оплата.ДатаДок;  
			ТабОтчета.ДатаНомер			= ДокАвто.ДатаНомерСчетаФактуры; 
			ТабОтчета.СчетФактура 		= ДокАвто.СчетФактура;
			ТабОтчета.Контрагент        = ДокАвто.Контрагент;
			ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
			ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
			Если ДокАвто.СчетФактура.Вид() = "СчетФактура" Тогда
				ТабОтчета.Аванс             = ?((ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратНеОплаченногоПК )или (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратОплаченногоПК ),0,ДокАвто.СчетФактура.Аванс);
			ИначеЕсли ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ЗачетАванса Тогда
				ТабОтчета.Аванс = 2;				
			Иначе
				ТабОтчета.Аванс = 0;
			КонецЕсли;
			
            ТабОтчета.ДатаДопЛиста		= ДокАвто.ДатаДопЛиста;	  

			Если (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратНеОплаченногоПК )или (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ВозвратОплаченногоПК) или (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПродаж.ЗачетАванса) Тогда
				ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
			Иначе
				Если ПустоеЗначение(ДокАвто.СчетФактура) = 0 Тогда
					Если ДокАвто.СчетФактура.Вид() = "СчетФактураПолученный" Тогда
						ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
					Иначе
						Если ПустоеЗначение(ДокАвто.СчетФактура.ДатаОплаты) = 0 Тогда
							ТабОтчета.ДатаОплаты = ДокАвто.СчетФактура.ДатаОплаты;
							ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
							
						ИначеЕсли (ДокАвто.СчетФактура.ДатаДок < '01.01.2006') или (ДокАвто.СчетФактура.ДокументОснование <> ДокАвто.Оплата) Тогда
							ТабОтчета.ДатаОплаты = ДокАвто.Оплата.ДатаДок;
							ТабОтчета.ПозицияДок		= ДокАвто.СчетФактура.ПолучитьПозицию();
							
						Иначе
							ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
						КонецЕсли;  
					КонецЕсли;  
				Иначе
					ТабОтчета.ПозицияДок		= ДокАвто.Оплата.ПолучитьПозицию();
				КонецЕсли;  
				
			КонецЕсли;  
			
			ТабОтчета.ВсегоПродаж 		= ДокАвто.Всего;
			ТабОтчета.СуммаБезНДС20 	= ДокАвто.БезНДС20;
			ТабОтчета.НДС20 			= ДокАвто.НДС20;
			ТабОтчета.СуммаБезНДС10 	= ДокАвто.БезНДС10;
			ТабОтчета.НДС10 			= ДокАвто.НДС10;
			ТабОтчета.НДС0 				= ДокАвто.НДС0;
			ТабОтчета.СуммаСовсемБезНДС = ДокАвто.Освобождаемые; 
			Расшифр						= СоздатьОбъект("СписокЗначений"); 
			Расшифр.ДобавитьЗначение(ТабОтчета.Док, СокрЛП(ТабОтчета.Док.ПредставлениеВида()+" № "+ТабОтчета.Док.НомерДок +" от "+ТабОтчета.Док.ДатаДок) + " " + Формат(ТабОтчета.ВсегоПродаж,"Ч-15.2-"));
			ТабОтчета.Расшифровка 		= Расшифр;   
			ТабОтчета.Период			= ДокАвто.ДатаДок; 
			ТабОтчета.НомСтроки 		= ДокАвто.НомерСтроки;

		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************               
Процедура ПечатьДопЛиста(ТабОтчета,Режим = 0)
	
	НомерДопЛиста = ?(РежиФормированияДопЛистов=2,1,""); 

	ТекстВШапке = "Приложение N 5
	|к Правилам ведения журналов учета 
	|полученных и выставленных счетов-фактур,
	|книг покупок и книг продаж при расчетах 
	|по налогу на добавленную стоимость";  

	ДатаДопЛиста = "";
	ПериодДопЛиста = ""; 
	УстановленныйОтбор = "";

	Ном = 1; 
	
	ИтогСуммаБезНДС20ДЛ=ИтогСуммаБезНДС20; 
	ИтогНДС20ДЛ=ИтогНДС20;
	ИтогСуммаБезНДС18ДЛ=ИтогСуммаБезНДС18; 
	ИтогНДС18ДЛ=ИтогНДС18;
	ИтогСуммаБезНДС10ДЛ=ИтогСуммаБезНДС10;
	ИтогНДС10ДЛ=ИтогНДС10;
	ИтогНДС0ДЛ = ИтогНДС0;
	ИтогСуммаСовсемБезНДСДЛ = ИтогСуммаСовсемБезНДС;
	ИтогВсегоДЛ = ИтогВсего;
		
	ПериодН = "";
	ПериодСт = "";   
	
	ПериодДопЛиста = ?(ТабОтчета.КоличествоСтрок() = 0,"",ТабОтчета.ПолучитьЗначение(1,"ДатаДопЛиста"));
	ДатаДопЛиста = ?(ТабОтчета.КоличествоСтрок() = 0,"",ТабОтчета.ПолучитьЗначение(1,"Период"));
	ПериодДопЛиста = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Месяц,ПериодСтр(НачМесяца(ПериодДопЛиста),КонМесяца(ПериодДопЛиста)),ПериодСтр(НачКвартала(ПериодДопЛиста),КонКвартала(ПериодДопЛиста)));
	
	Если Режим > 1 Тогда
		Таб.НоваяСтраница();
	Иначе
		Таб.ВывестиСекцию("УправлениеОтчетом");
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка");
	Таб.ВывестиСекцию("Итого");
	
	ТабОтчета.ВыбратьСтроки();
	Пока ТабОтчета.ПолучитьСтроку()=1 Цикл 
		ПериодН = ТабОтчета.Период;

		Если ПериодСт = "" Тогда   //первая строка
			ПериодСт = ПериодН;
		КонецЕсли;
		
		Если ПериодН <> ПериодСт Тогда 
			ПериодСт = ПериодН;
			Таб.ВывестиСекцию("Всего");
			ГлБух = ФИО(Константа.ГлБухгалтер.Получить( ДатаКонца ));
			Таб.ВывестиСекцию("Подвал");  
			Таб.НоваяСтраница();
			ПериодДопЛиста = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Месяц,ПериодСтр(НачМесяца(ТабОтчета.ДатаДопЛиста),КонМесяца(ТабОтчета.ДатаДопЛиста)),ПериодСтр(НачКвартала(ТабОтчета.ДатаДопЛиста),КонКвартала(ТабОтчета.ДатаДопЛиста))); 
			ДатаДопЛиста = ТабОтчета.Период;
			НомерДопЛиста = ?(РежиФормированияДопЛистов=2,НомерДопЛиста+1,"");
			Таб.ВывестиСекцию("Шапка");
			Таб.ВывестиСекцию("Итого2");
			Ном = 1;
		КонецЕсли;
		
		ПечСуммаБезНДС20ДЛ = 0;
		ПечНДС20ДЛ = 0; 
		ПечСуммаБезНДС18ДЛ = 0;
		ПечНДС18ДЛ = 0;        
		ПечСуммаБезНДС10ДЛ = ТабОтчета.СуммаБезНДС10;
		ПечНДС10ДЛ = ТабОтчета.НДС10;        
		ПечНДС0ДЛ = ТабОтчета.НДС0;
		ПечСуммаСовсемБезНДСДЛ = ТабОтчета.СуммаСовсемБезНДС;
		Если ТабОтчета.Аванс <> 2 Тогда
		    ПечКонтрагент = Наименование(ТабОтчета.Контрагент);
			ПечИНН = ТабОтчета.ИНН;
			ПечКПП = ТабОтчета.КПП;        
		Иначе
			ПечКонтрагент = СокрЛП(Константа.НазваниеОрганизации);
			ПечИНН = СРЕД(Константа.ИННОрганизации,1,10);
			ПечКПП = СРЕД(Константа.ИННОрганизации,12);   
		КонецЕсли;
		Если ТабОтчета.СуммаБезНДС20 <> 0  Тогда
			
			Ставка = Окр(100 * (ТабОтчета.НДС20/ТабОтчета.СуммаБезНДС20),0,1);  
			
			Если Ставка > 18 Тогда
				Если (ПустоеЗначение(ТабОтчета.СчетФактура) = 0) Тогда
					Если (ТабОтчета.СчетФактура.ДатаДок > '01.01.2004') Тогда
						Ставка = 18;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;				
			
			Если (ТабОтчета.СуммаБезНДС20 <= 0.5) и (ТабОтчета.СуммаБезНДС20 > 0) Тогда
				ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
				Если ДатаДокумента < '01.01.2004' Тогда
					Ставка = Ставка;
				Иначе
					Ставка = 18;
				КонецЕсли;
			КонецЕсли;

			ОбщаяБаза = ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС10 + ТабОтчета.НДС0 + ТабОтчета.СуммаСовсемБезНДС;
			Если ((Ставка = 20) и (ОбщаяБаза <> ТабОтчета.ВсегоПродаж)) или 
				((Ставка = 17) и (ОбщаяБаза = ТабОтчета.ВсегоПродаж)) Тогда
				ПечСуммаБезНДС20ДЛ = ТабОтчета.СуммаБезНДС20;
				ПечНДС20ДЛ = ТабОтчета.НДС20; 
			Иначе
				ПечСуммаБезНДС18ДЛ = ТабОтчета.СуммаБезНДС20;
				ПечНДС18ДЛ = ТабОтчета.НДС20;
			КонецЕсли;
		КонецЕсли;
		
		Если ТабОтчета.Аванс <> 0 Тогда
		   	ПечСуммаБезНДС20ДЛ = 0; 
			ПечСуммаБезНДС18ДЛ = 0; 
			ПечСуммаБезНДС10ДЛ = 0;
			ПечНДС0ДЛ = 0;
			ПечСуммаСовсемБезНДСДЛ = 0;
		КонецЕсли;
		
		ИтогСуммаБезНДС20ДЛ=ИтогСуммаБезНДС20ДЛ+ПечСуммаБезНДС20ДЛ; 
		ИтогНДС20ДЛ=ИтогНДС20ДЛ+ПечНДС20ДЛ;
		ИтогСуммаБезНДС18ДЛ=ИтогСуммаБезНДС18ДЛ+ПечСуммаБезНДС18ДЛ; 
		ИтогНДС18ДЛ=ИтогНДС18ДЛ+ПечНДС18ДЛ;                        
		ИтогСуммаБезНДС10ДЛ=ИтогСуммаБезНДС10ДЛ+ПечСуммаБезНДС10ДЛ;
		ИтогНДС10ДЛ=ИтогНДС10ДЛ+ПечНДС10ДЛ;
		ИтогНДС0ДЛ=ИтогНДС0ДЛ+ПечНДС0ДЛ;                        
		ИтогСуммаСовсемБезНДСДЛ=ИтогСуммаСовсемБезНДСДЛ+ПечСуммаСовсемБезНДСДЛ;
		ИтогВсегоДЛ=ИтогВсегоДЛ+ТабОтчета.ВсегоПродаж;
		СписокРасшифровки = ТабОтчета.Расшифровка;
		Таб.ВывестиСекцию("Строка"); 
		Ном = Ном + 1; 
	КонецЦикла; 
			
	Таб.ВывестиСекцию("Всего");
	ГлБух = ФИО(Константа.ГлБухгалтер.Получить( ДатаКонца ));
	Таб.ВывестиСекцию("Подвал");
КонецПроцедуры 

//*****************************************************************************
// ФормированиеДопЛистов(ТабОтчета, ПериодДопЛиста, НачДата, КонДата)
//
// Параметры:
//  ПериодДопЛиста - дата конца корректируемого периода (дата последнего счета-
//                   фактуры, коррктировки которого должны попасти в отчет;
//
//  НачДата - начало корректируемого периода;
//  КонДата - конец корректируемого периода;
//
Процедура ФормированиеДопЛистов(ТабОтчета, ПериодДопЛиста, НачДата, КонДата)
	
	КнигаПродаж(НачДата, КонДата);           
	ТабОтчета.УдалитьСтроки();
	
	Если РежиФормированияДопЛистов = 2 Тогда 
		Документы = СоздатьОбъект("Документ");
		Документы.УстановитьФильтр(1,0,0,0,0,1);
		Документы.ОбратныйПорядок(1);
		Документы.ВыбратьДокументы(НачДата,);
		Если Документы.ПолучитьДокумент() = 1 Тогда
			ДатаДопЛиста = Макс(Документы.ТекущийДокумент().ДатаДок,КонДата) ;		
		
		Иначе
			ДатаДопЛиста = КонДата;
		КонецЕсли;
		ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста, НачДата, ДатаДопЛиста);
		
	Иначе
		
		Если НачДата <= (ДатаНачала-1) Тогда
			ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста, НачДата, ДатаНачала-1);
		
			ИтогСуммаБезНДС10 = ИтогСуммаБезНДС10 + ТабОтчета.Итог("СуммаБезНДС10");
			ИтогНДС10 = ИтогНДС10 + ТабОтчета.Итог("НДС10");
			ИтогНДС0 = ИтогНДС0  + ТабОтчета.Итог("НДС0");
			ИтогСуммаСовсемБезНДС = ИтогСуммаСовсемБезНДС + ТабОтчета.Итог("СуммаСовсемБезНДС");
			ТабОтчета.ВыбратьСтроки();
			СуммаБезНДС = 0; НДС20 = 0; СуммаБезНДС18 = 0; НДС18 = 0; 
			Пока ТабОтчета.ПолучитьСтроку() = 1 Цикл
				Если ТабОтчета.СуммаБезНДС20 <> 0  Тогда
					
					Ставка = Окр(100 * (ТабОтчета.НДС20/ТабОтчета.СуммаБезНДС20),0,1);  
					
					Если Ставка > 18 Тогда
						Если (ПустоеЗначение(ТабОтчета.СчетФактура) = 0) Тогда
							Если (ТабОтчета.СчетФактура.ДатаДок > '01.01.2004') Тогда
								Ставка = 18;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;				
					
					Если (ТабОтчета.СуммаБезНДС20 <= 0.5) и (ТабОтчета.СуммаБезНДС20 > 0)Тогда
						ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
						Если ДатаДокумента < '01.01.2004' Тогда
							Ставка = Ставка;
						Иначе
							Ставка = 18;
						КонецЕсли;
					КонецЕсли;
					ОбщаяБаза = ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС10 + ТабОтчета.НДС0 + ТабОтчета.СуммаСовсемБезНДС;
					Если ((Ставка = 20) и (ОбщаяБаза <> ТабОтчета.ВсегоПродаж)) или 
					((Ставка = 17) и (ОбщаяБаза = ТабОтчета.ВсегоПродаж)) Тогда
						СуммаБезНДС20 =СуммаБезНДС20 +  ТабОтчета.СуммаБезНДС20;
						НДС20 = НДС20 + ТабОтчета.НДС20; 
					Иначе
						СуммаБезНДС18 =СуммаБезНДС18 + ТабОтчета.СуммаБезНДС20;
						НДС18 =НДС18 + ТабОтчета.НДС20;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ИтогСуммаБезНДС20 = ИтогСуммаБезНДС20 + СуммаБезНДС20;
			ИтогНДС20 = ИтогНДС20 + НДС20;
			ИтогСуммаБезНДС18 = ИтогСуммаБезНДС18 + СуммаБезНДС18;
			ИтогНДС18 = ИтогНДС18  + НДС18;
			ИтогВсего = ИтогВсего + ТабОтчета.Итог("ВсегоПродаж");
		КонецЕсли;	
			
		ТабОтчета.УдалитьСтроки();
		ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста, ДатаНачала, ДатаКонца);
	КонецЕсли;  
	ТабОтчета.Сортировать("Период,ДатаДопЛиста,Док,НомСтроки");
КонецПроцедуры

//*****************************************************************************
Процедура ДополнительныйЛист()  
		
	Таб.ИсходнаяТаблица("ДопЛист_283");
	Таб.ИспользоватьФормат("Ч-15.2-"); 

	ТабОтчета = СоздатьОбъект("ТаблицаЗначений");
	ТабОтчета.НоваяКолонка("Док");
	ТабОтчета.НоваяКолонка("ДатаДок");
	ТабОтчета.НоваяКолонка("ДатаНомер");
	ТабОтчета.НоваяКолонка("ДатаОплаты");
	ТабОтчета.НоваяКолонка("ДатаДопЛиста");
	ТабОтчета.НоваяКолонка("Контрагент");
	ТабОтчета.НоваяКолонка("ИНН");
	ТабОтчета.НоваяКолонка("КПП");
	ТабОтчета.НоваяКолонка("ПозицияДок");
	ТабОтчета.НоваяКолонка("Аванс", "Число");
	ТабОтчета.НоваяКолонка("ВсегоПродаж");
	ТабОтчета.НоваяКолонка("СуммаБезНДС20");
	ТабОтчета.НоваяКолонка("НДС20");
	ТабОтчета.НоваяКолонка("СуммаБезНДС10");
	ТабОтчета.НоваяКолонка("НДС10");
	ТабОтчета.НоваяКолонка("НДС0");
	ТабОтчета.НоваяКолонка("СуммаСовсемБезНДС");
	ТабОтчета.НоваяКолонка("СчетФактура");
    ТабОтчета.НоваяКолонка("Период"); 
	ТабОтчета.НоваяКолонка("Расшифровка","СписокЗначений");
	ТабОтчета.НоваяКолонка("НомСтроки","Число");

	КоличествоМесяцевВПериоде = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Квартал, 3, 1);
	
    Режим = 0;
	Если РежиФормированияДопЛистов = 2 Тогда
		КонПериода = ?(КоличествоМесяцевВПериоде = 1, КонМесяца(ДатаНачала), КонКвартала(ДатаНачала));
		КонОтчета =  ?(КоличествоМесяцевВПериоде = 1, КонМесяца(ДатаКонца), КонКвартала(ДатаКонца));
		Пока КонПериода <= КонОтчета Цикл
			НачДата = ?(КоличествоМесяцевВПериоде = 1, НачМесяца(КонПериода), НачКвартала(КонПериода));
			ФормированиеДопЛистов(ТабОтчета, Мин(КонПериода, ДатаКонца), НачДата, КонПериода);
			Если ТабОтчета.КоличествоСтрок() > 0 Тогда
				ПечатьДопЛиста(ТабОтчета,Режим); 
				Режим = 2;
			КонецЕсли;
			
			КонПериода = КонМесяца(ДобавитьМесяц(КонПериода, КоличествоМесяцевВПериоде));
		КонецЦикла;
		
		Если Режим = 0 Тогда			
			ПечатьДопЛиста(ТабОтчета);	
		КонецЕсли;
		
	Иначе 
			
		ДанныеДляДопЛиста(ТабОтчета,, ДатаНачала, ДатаКонца);
		
		ТабПериода = СоздатьОбъект("ТаблицаЗначений");
		ТабОтчета.Выгрузить(ТабПериода,,,"ДатаДопЛиста");
		ТабПериода.ВыбратьСтроки();
		Пока ТабПериода.ПолучитьСтроку() = 1 Цикл
			ТабПериода.ДатаДопЛиста = ?(КоличествоМесяцевВПериоде = 1,КонМесяца(ТабПериода.ДатаДопЛиста),КонКвартала(ТабПериода.ДатаДопЛиста));
		КонецЦикла; 
		ТабПериода.Свернуть("ДатаДопЛиста",);
		ТабПериода.Сортировать("+ДатаДопЛиста"); 
		Если  ТабПериода.КоличествоСтрок()<>0 Тогда
			ТабПериода.ВыбратьСтроки(); 
			Пока ТабПериода.ПолучитьСтроку() = 1 Цикл
				НачДата = ?(КоличествоМесяцевВПериоде = 1,НачМесяца(ТабПериода.ДатаДопЛиста),НачКвартала(ТабПериода.ДатаДопЛиста));
				КонДата = ?(КоличествоМесяцевВПериоде = 1,КонМесяца(ТабПериода.ДатаДопЛиста),КонКвартала(ТабПериода.ДатаДопЛиста));
				ФормированиеДопЛистов(ТабОтчета, КонДата, НачДата, КонДата);
				Если ТабОтчета.КоличествоСтрок() > 0 Тогда
					ПечатьДопЛиста(ТабОтчета,Режим); 
					Режим = 2;
				КонецЕсли;			
			КонецЦикла;
			Если Режим = 0 Тогда
				ПечатьДопЛиста(ТабОтчета);	
			КонецЕсли;			
		Иначе
			ПечатьДопЛиста(ТабОтчета);	
		КонецЕсли;
	КонецЕсли;
	
	ВерхнийКолонтитул = "Дополнительный лист книги продаж";
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	Таб.Опции(0,0,1,2,"Параметры печати доп. листа книги продаж" );
	Таб.ОбластьПечати(2);
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Дополнительный лист книги продаж","");
	
КонецПроцедуры

//*****************************************************************************
Процедура Сформировать()
	
	Если ДатаНачала > ДатаКонца Тогда
		Предупреждение("Неправильно задан период формирования отчета!
						|Дата начала больше даты окончания периода.");
		Возврат;
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "КнигаПродаж");
    Расшифровка.Установить("ДатаНачала", ДатаНачала);
    Расшифровка.Установить("ДатаКонца", ДатаКонца);
	Расшифровка.Установить("ВариантФормирования", ВариантФормирования);
	Расшифровка.Установить("СтандартнаяФорма", СтандартнаяФорма);
	Расшифровка.Установить("ВыбКонтрагент", ВыбКонтрагент);
	Расшифровка.Установить("ГруппироватьПоКонтрагентам", ГруппироватьПоКонтрагентам); 
	Расшифровка.Установить("ПризнакЧастичнойОплаты", ПризнакЧастичнойОплаты);
	Расшифровка.Установить("РежиФормированияДопЛистов", РежиФормированияДопЛистов); 
	Расшифровка.Установить("ЮрЛицо", ЮрЛицо); //NDline
		
	Если (ТипЗначенияСтр(Таб) = "Таблица") и
		 (ТекущийВариантФормирования = ВариантФормирования) и
		 ((Обновить = 1) или (Обновить = 2)) Тогда
	
		Таб.Очистить();
		
	Иначе
	   	Таб = СоздатьОбъект("Таблица");
	КонецЕсли;
	
	Если ВариантФормирования = 1 Тогда
		КнигаПродаж(ДатаНачала, ДатаКонца);
	ИначеЕсли ВариантФормирования = 2 Тогда
		ЖурналУчета();  
	ИначеЕсли ВариантФормирования = 3 Тогда
		ДополнительныйЛист();
	КонецЕсли;
	
	Если Обновить = 2 Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
	
КонецПроцедуры	// Сформировать()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Устанавливает начальные значения элементов диалога.
//
Процедура ПриОткрытии(Флаг)
	
	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;

		ДатаНачала = глРасшифровка.Получить("ДатаНачала");
		ДатаКонца = глРасшифровка.Получить("ДатаКонца");
		ВариантФормирования = глРасшифровка.Получить("ВариантФормирования");
		СтандартнаяФорма = глРасшифровка.Получить("СтандартнаяФорма");
		ВыбКонтрагент = глРасшифровка.Получить("ВыбКонтрагент");
		ГруппироватьПоКонтрагентам = глРасшифровка.Получить("ГруппироватьПоКонтрагентам");
		ПризнакЧастичнойОплаты = глРасшифровка.Получить("ПризнакЧастичнойОплаты");
		РежиФормированияДопЛистов = глРасшифровка.Получить("РежиФормированияДопЛистов");
		ЮрЛицо = глРасшифровка.Получить("ЮрЛицо"); //NDline
        
		Если Обновить = 0 Тогда
		Иначе
			ТекущийВариантФормирования = ВариантФормирования;
			Таб = глТаблица;
		КонецЕсли;

		Если Обновить = 2 Тогда
		Иначе
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
	Иначе
		Обновить = 0;
		ДатаНачала = НачалоПериодаБИ();
		ДатаКонца = КонецПериодаБИ();
		Если Флаг = 0 Тогда
			ВариантФормирования = 1;
			СтандартнаяФорма = 1;
			РежиФормированияДопЛистов = 1;
		КонецЕсли;
	КонецЕсли;
	УправлениеДиалогом();	 
КонецПроцедуры // ПриОткрытии()