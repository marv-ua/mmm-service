////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем ТекущийВариантФормирования;
Перем ИтогСуммаБезНДС20,ИтогНДС20,ИтогСуммаБезНДС18,ИтогНДС18,ИтогСуммаБезНДС10,ИтогНДС10,ИтогНДС0,ИтогСуммаСовсемБезНДС,ИтогВсего;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//*****************************************************************************
Функция РасшифровкаОбновить(Обновить)
	
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
	
КонецФункции 

//******************************************************************************
// СписокНомеровГТД(Док)
//
// Параментры:
//  Док - Документ. Документ, содержащий в табличной части реквизиты "Страна
//        происхождения" и "Номер ГТД".
//
// Возвращаемое значение:
//  Строка - Страны происхождения и номера ГТД.
//
// Описание:
//  Формирует строку для заполнения графы "Страна происхождения, номер ГТД".
//
Функция СписокНомеровГТД(Док)
	
	Если Док.Выбран() = 0 Тогда
	ИначеЕсли (Док.Вид() = "СчетФактураПолученный") или 
			  (Док.Вид() = "ПоступлениеТоваров") Тогда
	
		СписокГТД = СоздатьОбъект("СписокЗначений");
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			ГТД = ?(ПустоеЗначение(Док.ГТД) = 0, СокрЛП(Док.ГТД.СтранаПроисхождения) +
				" " + Док.ГТД, "");
			Если СписокГТД.НайтиЗначение(ГТД) = 0 Тогда
			    СписокГТД.ДобавитьЗначение(ГТД);
			КонецЕсли;
		КонецЦикла;
		ГТД = "";
		Если СписокГТД.РазмерСписка() > 0 Тогда
			Для а = 1 по СписокГТД.РазмерСписка() Цикл
				ГТД = ГТД + ?(ГТД = "", "", ", ") + СписокГТД.ПолучитьЗначение(а);
			КонецЦикла;
		КонецЕсли;
		Возврат ГТД;
	КонецЕсли;
	Возврат "";
	
КонецФункции // СписокНомеровГТД()

//*****************************************************************************
Функция Наименование(Продавец)
	
	Если ПустаяСтрока(Продавец.ПолнНаименование) = 1 Тогда
		Возврат Продавец.Наименование;
	Иначе
		Возврат Продавец.ПолнНаименование;	
	КонецЕсли;

КонецФункции

//*****************************************************************************
Функция Пересчет(Док, Сумма)
	
	Если Док.Договор.Выбран() = 1 Тогда
		Если Док.Договор.ВалютаДоговора.Выбран() = 1 Тогда
			
			Кратность =  Док.Договор.ВалютаДоговора.Кратность.Получить(Док.ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
			
		    Если Док.Вид() = "СчетФактураПолученный" Тогда
				ЦеныВДокументе = 2; // в валюте
				
				Если Док.Договор.ВестиУчетРасчетовУЕ = 1 Тогда
					Кратность = Кратность * 100 / (100 + Док.Договор.ПроцентКорректировкиКурсаУЕ);
				КонецЕсли;
				
			ИначеЕсли Док.Договор.ОплатаДоговора = 2 Тогда
				ЦеныВДокументе = 2; // в валюте
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЦеныВДокументе = 2 Тогда
	    Возврат Сумма*Док.Курс/Кратность;
		
	Иначе
		Возврат Сумма;
	КонецЕсли;
	
КонецФункции // Пересчет()

//*****************************************************************************
// УправлениеДиалогом()
//
// Вызывается из формул элементов диалога:
//  Флаг СтандартнаяФорма.
//
// Описание:
//  Процедура управляет составом параметров отбора документов в зависимости от 
// выбранного режима формирования отчета
//
Процедура УправлениеДиалогом()
	
	Если СтандартнаяФорма = 1 Тогда
	    Форма.ИспользоватьСлой("Основной, Информация", 2);
		
	Иначе
		Если ВариантФормирования = 1 Тогда
		    Форма.ИспользоватьСлой("Основной, Отбор, КоррСчет", 2);
		
		Иначе
			Форма.ИспользоватьСлой("Основной, Отбор", 2);
		КонецЕсли;
	КонецЕсли;
	
	Если ВариантФормирования = 1 Тогда
	    Форма.ПризнакЧастичнойОплаты.Видимость(1);
		Форма.ПризнакСвертки.Видимость(1);
	Иначе
		Форма.ПризнакЧастичнойОплаты.Видимость(0);
		Форма.ПризнакСвертки.Видимость(0);
	КонецЕсли; 

	Если Форма.АктивныйЭлемент() = "ВариантФормирования" Тогда
		ПризнакСвертки = ?(ВариантФормирования = 1,1,0);
	КонецЕсли;		
    	
	Если ВариантФормирования = 3 Тогда
	    Форма.ИспользоватьСлой("Основной, Информация", 2);
		Форма.Рамка1.Видимость(0);
		Форма.Рамка2.Видимость(1);
		Форма.Рамка3.Видимость(1);
		Форма.РежиФормированияДопЛистов.Видимость(1);
		Форма.РежиФормированияДопЛистов1.Видимость(1);
		Форма.СтатикРежиФормированияДопЛистов.Видимость(1);
		СтандартнаяФорма = 1;
		Форма.СтандартнаяФорма.Доступность(0); 
		Форма.ПризнакСвертки.Доступность(0);
		ПризнакСвертки = 0;
	Иначе
		Форма.Рамка1.Видимость(1);
		Форма.Рамка2.Видимость(0);
		Форма.Рамка3.Видимость(0);
		Форма.РежиФормированияДопЛистов.Видимость(0);
		Форма.РежиФормированияДопЛистов1.Видимость(0);
		Форма.СтатикРежиФормированияДопЛистов.Видимость(0);
		Форма.СтандартнаяФорма.Доступность(1);
		Форма.ПризнакСвертки.Доступность(1);
	КонецЕсли; 
	
	Если ДатаКонца >= '01.01.2006' Тогда
		ПризнакЧастичнойОплаты = 0;
		Форма.ПризнакЧастичнойОплаты.Видимость(0);
	Иначе
		Форма.ПризнакЧастичнойОплаты.Видимость(1);
	КонецЕсли;
		
КонецПроцедуры // УправлениеДиалогом()   

//*****************************************************************************
Процедура КнигаПокупок(НачДата, КонДата)
	
	Если ВариантФормирования<>3 Тогда
		ТабОтчета = СоздатьОбъект("ТаблицаЗначений");
		
		Если ДатаКонца>= '30.05.2006' Тогда
			Таб.ИсходнаяТаблица("КнигаПокупок_283");
		Иначе
			Таб.ИсходнаяТаблица("КнигаПокупок");
		КонецЕсли; 
		Таб.ИспользоватьФормат("Ч-15.2-");
	КонецЕсли; 
	
	УстановленныйОтбор = "";
	Если СтандартнаяФорма = 0 Тогда
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    УстановленныйОтбор = "Установлен отбор по контрагенту: "+СокрЛП(ВыбКонтрагент.Наименование);
		КонецЕсли;
		
		Если КоррСчет.Выбран() = 1 Тогда
		    УстановленныйОтбор = УстановленныйОтбор + 
				?(УстановленныйОтбор = "", "Установлен отбор по счету: ", "; по счету: ") + 
				СокрЛП(КоррСчет.Код);
		КонецЕсли;
		ТекстВШапке = "";
		
	Иначе
		ТекстВШапке = "Приложение N 2
                      |к Правилам ведения журналов учета полученных и выставленных счетов-фактур,
                      |книг покупок и книг продаж при расчетах по налогу на добавленную стоимость";
	КонецЕсли; 
			
	Если ВариантФормирования<>3 Тогда
		Таб.ВывестиСекцию("Шапка");
	КонецЕсли;
		
	Сч68_2 	= СчетПоКоду("68.2");
	    
	ТекстЗапроса = "Период с НачДата по КонДата;
		|ОбрабатыватьДокументы Все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Док = Документ.ЗаписьКнигиПокупок.ТекущийДокумент,Документ.ЗаписьКнигиПокупокТорг.ТекущийДокумент,Документ.СчетФактураПолученный.ТекущийДокумент;
		|Контрагент = Документ.ЗаписьКнигиПокупок.Контрагент,Документ.ЗаписьКнигиПокупокТорг.Контрагент,Документ.СчетФактураПолученный.Контрагент;
		|ДокВсего = Документ.ЗаписьКнигиПокупок.Всего,Документ.ЗаписьКнигиПокупокТорг.Всего,Документ.СчетФактураПолученный.Всего;
		|ДокНДС20 = Документ.ЗаписьКнигиПокупок.НДС20,Документ.ЗаписьКнигиПокупокТорг.НДС20,Документ.СчетФактураПолученный.НДС20;
		|ДокСуммаБезНДС20 = Документ.ЗаписьКнигиПокупок.СуммаБезНДС20,Документ.ЗаписьКнигиПокупокТорг.СуммаБезНДС20,Документ.СчетФактураПолученный.СуммаБезНДС20;
		|ДокНДС10 = Документ.ЗаписьКнигиПокупок.НДС10,Документ.ЗаписьКнигиПокупокТорг.НДС10,Документ.СчетФактураПолученный.НДС10;
		|ДокСуммаБезНДС10 = Документ.ЗаписьКнигиПокупок.СуммаБезНДС10,Документ.ЗаписьКнигиПокупокТорг.СуммаБезНДС10,Документ.СчетФактураПолученный.СуммаБезНДС10;
		|ДокСуммаСовсемБезНДС = Документ.ЗаписьКнигиПокупок.СуммаСовсемБезНДС,Документ.ЗаписьКнигиПокупокТорг.СуммаСовсемБезНДС,Документ.СчетФактураПолученный.СуммаСовсемБезНДС;
		|СтавкаНоль = Документ.ЗаписьКнигиПокупок.НДСпоСтавкеНольПроцентов,Документ.ЗаписьКнигиПокупокТорг.НДСпоСтавкеНольПроцентов,Документ.СчетФактураПолученный.НДСпоСтавкеНольПроцентов;
		|ВключатьВКнигуПокупок =	Документ.СчетФактураПолученный.ВключатьВКнигуПокупок;
		|АвтоНДС =	Документ.СчетФактураПолученный.Договор.АвтоОбработкаНДС;
		|Операция = Документ.СчетФактураПолученный.ВидОперации;
		|Группировка Док без групп;
		|Функция ВсегоПокупок = Сумма(Пересчет(Док,ДокВсего));
		|Функция НДС20 = Сумма(Пересчет(Док,ДокНДС20));
		|Функция СуммаБезНДС20 = Сумма(Пересчет(Док,ДокСуммаБезНДС20));
		|Функция НДС10 = Сумма(Пересчет(Док,ДокНДС10));
		|Функция СуммаБезНДС10 = Сумма(Пересчет(Док,ДокСуммаБезНДС10));
		|Функция НДС0 = Сумма(Пересчет(Док,ДокВсего)) Когда (СтавкаНоль = 1);
		|Функция СуммаСовсемБезНДС = Сумма(Пересчет(Док,ДокСуммаСовсемБезНДС));
		|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
		|Условие (ДокВсего <> 0);
		|Условие (ВключатьВКнигуПокупок = 1);
		|Условие (((АвтоНДС = 0) И (Операция <> Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс)) ИЛИ ((Операция = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс)));";
		
	Если СтандартнаяФорма = 0 Тогда
		Если ВыбКонтрагент.Выбран() = 1 Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Условие (Контрагент в ВыбКонтрагент);";
		КонецЕсли;
	КонецЕсли;  

	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;
	
	ТабОтчета = СоздатьОбъект("ТаблицаЗначений");
	ТабОтчета.НоваяКолонка("Док");
	ТабОтчета.НоваяКолонка("ВсегоПокупок");
	ТабОтчета.НоваяКолонка("НДС20");
	ТабОтчета.НоваяКолонка("СуммаБезНДС20");
	ТабОтчета.НоваяКолонка("НДС10");
	ТабОтчета.НоваяКолонка("СуммаБезНДС10");
	ТабОтчета.НоваяКолонка("НДС0");
	ТабОтчета.НоваяКолонка("СуммаСовсемБезНДС");
	ТабОтчета.НоваяКолонка("ДатаДок","Дата"); 
	ТабОтчета.НоваяКолонка("ДатаНомер"); 
	ТабОтчета.НоваяКолонка("ДатаОплаты");
	ТабОтчета.НоваяКолонка("СчетФактура");
	ТабОтчета.НоваяКолонка("ДатаОприходования");
	ТабОтчета.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	ТабОтчета.НоваяКолонка("ИНН");
	ТабОтчета.НоваяКолонка("КПП");
	ТабОтчета.НоваяКолонка("ГТД");
	ТабОтчета.НоваяКолонка("ПозицияДок"); 
	ТабОтчета.НоваяКолонка("Аванс", "Число");
	ТабОтчета.НоваяКолонка("Возврат");

	Пока Запрос.Группировка(1) = 1 Цикл
		Если ПустоеЗначение(Запрос.Док)=1 Тогда
		    Продолжить;
		КонецЕсли;
		
		Если СтандартнаяФорма = 0 Тогда
			
			Если ВключатьАвансы = 0 Тогда
				Если (Запрос.Док.Вид() <> "СчетФактураПолученный") и (Запрос.Док.Вид() <> "ЗаписьКнигиПокупокТорг") Тогда
			    	Если Запрос.Док.Аванс = 1 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				
			Если КоррСчет.Выбран() = 1 Тогда
				Если (Запрос.Док.Вид() = "СчетФактураПолученный") или (Запрос.Док.Вид() = "ЗаписьКнигиПокупокТорг") Тогда
				    Если КоррСчет <> Сч68_2 Тогда
				        Продолжить;
					КонецЕсли;
				
				ИначеЕсли (Запрос.Док.КоррСчет <> КоррСчет) и (Запрос.Док.Аванс = 0) Тогда
					Продолжить;

				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
		
		Если  (Запрос.Док.Вид() = "ЗаписьКнигиПокупок") Тогда
			Если Запрос.Док.ЗаписьДопЛистаПК = 1 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
				
		ТабОтчета.НоваяСтрока();
		ТабОтчета.Док = Запрос.Док;
		ТабОтчета.ВсегоПокупок = Запрос.ВсегоПокупок;
		ТабОтчета.НДС20 = Запрос.НДС20;
		ТабОтчета.СуммаБезНДС20 = Запрос.СуммаБезНДС20;
		ТабОтчета.НДС10 = Запрос.НДС10;
		ТабОтчета.СуммаБезНДС10 = Запрос.СуммаБезНДС10;
		ТабОтчета.НДС0 = Запрос.НДС0;
		ТабОтчета.СуммаСовсемБезНДС = Запрос.СуммаСовсемБезНДС;
		
		Если ТабОтчета.Док.Вид()="ЗаписьКнигиПокупок" Тогда
		    ТабОтчета.Аванс = ТабОтчета.Док.Аванс;
			ТабОтчета.ДатаНомер			= СокрЛП(ТабОтчета.Док.ДатаНомерСчетаФактуры) +" "+СокрЛП(ТабОтчета.Док.ДополнительнаяИнформация);
			ТабОтчета.ДатаОплаты		= ТабОтчета.Док.ДатаОплаты;
			
			ДокОснование = ТабОтчета.Док.ДокументОснование;			
			Если ДокОснование.Вид() = "ПоступлениеТоваров" Тогда
				Если ((ДокОснование.ВидПоступления=4) или (ДокОснование.ВидПоступления=13)) и (ДокОснование.ПокупателемВыставляетсяСчетФактураНаВозврат = 0) и (ДокОснование.ВариантОтраженияВозврата = 1) и (ПустоеЗначение(ДокОснование.ДатаНомерСчетаФактуры) = 1) Тогда
					ТабОтчета.Возврат = 1;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			ТабОтчета.ДатаНомер			= СокрЛП(ТабОтчета.Док.ДатаНомерСчетаФактуры); 
		КонецЕсли;
		
		Если ТабОтчета.Док.Вид()="СчетФактураПолученный" Тогда
			ТабОтчета.СчетФактура 		= ТабОтчета.Док;
			ТабОтчета.ГТД               = СписокНомеровГТД(ТабОтчета.Док);
			Если ТабОтчета.Док.ВидОперации = Перечисление.ВидыОперацийСчетаФактурыПолученного.Аванс Тогда
				ТабОтчета.Аванс = 2;
			КонецЕсли;
			
		Иначе
			ТабОтчета.СчетФактура 		= ТабОтчета.Док.ДокументОснование;
			ТабОтчета.ГТД               = СписокНомеровГТД(ТабОтчета.Док.ДокументОснование);
		КонецЕсли;
		
		ТабОтчета.ДатаДок			= ТабОтчета.Док.ДатаДок;
		ТабОтчета.ДатаОприходования = ТабОтчета.Док.ДатаОприходования;
		ТабОтчета.Контрагент        = ТабОтчета.Док.Контрагент;
		ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
		ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
		ТабОтчета.ПозицияДок		= ТабОтчета.Док.ПолучитьПозицию();
	КонецЦикла;
	
	ДокАвто = СоздатьОбъект("Документ.ЗаписиКнигиПокупок");
	ДокАвто.ВыбратьДокументы(НачДата,КонДата);
	Всего 		= 0;
	БезНДС20 	= 0;
	НДС20 		= 0;
	БезНДС10	= 0;
	НДС10		= 0;
	НДС0		= 0;
	Освобождаемые = 0;
	
	Пока ДокАвто.ПолучитьДокумент()=1 Цикл
		Если ДокАвто.ЮрЛицо <> ЮрЛицо Тогда //NDline
			Продолжить;
		КонецЕсли; //NDline
		Если ДокАвто.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;
		ДокАвто.ВыбратьСтроки();
		Пока ДокАвто.ПолучитьСтроку() = 1 Цикл
			
			Если ДокАвто.ЗаписьДопЛиста = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтандартнаяФорма = 0 Тогда
				Если ВыбКонтрагент.Выбран() = 1 Тогда
					Если ВыбКонтрагент.ЭтоГруппа() = 1 Тогда
						Если ДокАвто.Контрагент.ПринадлежитГруппе(ВыбКонтрагент) = 0 Тогда
							Продолжить;
						КонецЕсли;
						
					ИначеЕсли ВыбКонтрагент <> ДокАвто.Контрагент Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если (ВключатьАвансы = 0) и (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПокупок.ЗачетАванса) Тогда
					Продолжить;
				КонецЕсли;
				
				Если (КоррСчет.Выбран() = 1) и (КоррСчет <> Сч68_2 ) и (ДокАвто.ТипЗаписи <> Перечисление.ТипыЗаписейКнигиПокупок.ЗачетАванса) Тогда
					Продолжить;                                                                                   
					
				КонецЕсли;
			КонецЕсли;
				
			Если (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПокупок.ВозвратНеОплаченного) или
					  (ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПокупок.КорректировкаЗПК)Тогда
			    
				Продолжить;
			КонецЕсли;
            
			ТабОтчета.НоваяСтрока();
			
			ТабОтчета.Док	 			= ДокАвто.ТекущийДокумент();
			ТабОтчета.ДатаДок			= Макс(ДокАвто.Оплата.ДатаДок,ДокАвто.Приход.ДатаДок);
			ТабОтчета.ДатаНомер			= ДокАвто.ДатаНомерСчетаФактуры; 
			ТабОтчета.ДатаОплаты		= ДокАвто.Оплата.ДатаДок;
			ТабОтчета.ДатаОприходования = ?(ДокАвто.СчетФактура.Вид() = "СчетФактураПолученный", ДокАвто.СчетФактура.ДатаОприходования, ДокАвто.Приход.ДатаДок);
			ТабОтчета.СчетФактура 		= ДокАвто.СчетФактура;
			ТабОтчета.Контрагент        = ДокАвто.Контрагент;
			ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
			ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
			ТабОтчета.ГТД               = ?(ПустоеЗначение(ДокАвто.СтранаГТД)=0,ДокАвто.СтранаГТД,СписокНомеровГТД(ДокАвто.СчетФактура));
			ТабОтчета.ПозицияДок		= Макс(ДокАвто.Оплата.ПолучитьПозицию(),ДокАвто.Приход.ПолучитьПозицию());
			ТабОтчета.Аванс				= ?(ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПокупок.ЗачетАванса, 1, 0);
			
			ТабОтчета.ВсегоПокупок 		= ДокАвто.Всего;
			ТабОтчета.СуммаБезНДС20 	= ДокАвто.БезНДС20;              
			ТабОтчета.НДС20 			= ДокАвто.НДС20;
			ТабОтчета.СуммаБезНДС10 	= ДокАвто.БезНДС10;
			ТабОтчета.НДС10 			= ДокАвто.НДС10;
			ТабОтчета.НДС0 				= ДокАвто.НДС0;
			ТабОтчета.СуммаСовсемБезНДС = ДокАвто.Освобождаемые;
			
			Если ПустоеЗначение(ДокАвто.СчетФактура) = 0 Тогда
				ДокОснование = ДокАвто.СчетФактура;			
				Если ДокОснование.Вид() = "ПоступлениеТоваров" Тогда
					Если ((ДокОснование.ВидПоступления=4) или (ДокОснование.ВидПоступления=13)) и (ДокОснование.ПокупателемВыставляетсяСчетФактураНаВозврат = 0) и (ДокОснование.ВариантОтраженияВозврата = 1) и (ПустоеЗначение(ДокОснование.ДатаНомерСчетаФактуры) = 1) Тогда
						ТабОтчета.Возврат = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Всего 		= Всего + ДокАвто.Всего;
			БезНДС20 	= БезНДС20 + ДокАвто.БезНДС20;
			НДС20 		= НДС20 + ДокАвто.НДС20;
			БезНДС10 	= БезНДС10 + ДокАвто.БезНДС10;
			НДС10 		= НДС10 + ДокАвто.НДС10;
			НДС0		= НДС0 + ДокАвто.НДС0;
			Освобождаемые = Освобождаемые + ДокАвто.Освобождаемые;
						
		КонецЦикла;
	КонецЦикла;

	ТекстЗапроса = "Период с НачДата по КонДата;
		|ОбрабатыватьДокументы Все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Док =	Документ.ПоступлениеМатериалов.ТекущийДокумент,
		|		Документ.ПоступлениеТоваров.ТекущийДокумент,
		|		Документ.УслугиСтороннихОрганизаций.ТекущийДокумент;
		
		|Контрагент =	Документ.ПоступлениеМатериалов.Контрагент,
		|		Документ.ПоступлениеТоваров.Контрагент,
		|		Документ.УслугиСтороннихОрганизаций.Контрагент;
		
		|АвтоНДС =	Документ.ПоступлениеМатериалов.Договор.АвтоОбработкаНДС,
		|		Документ.ПоступлениеТоваров.Договор.АвтоОбработкаНДС,
		|		Документ.УслугиСтороннихОрганизаций.Договор.АвтоОбработкаНДС;

		
		|ВключатьВКнигуПокупок =	Документ.ПоступлениеМатериалов.ВключатьВКнигуПокупок,
		|		Документ.ПоступлениеТоваров.ВключатьВКнигуПокупок,
		|		Документ.УслугиСтороннихОрганизаций.ВключатьВКнигуПокупок;
		
		|Группировка Док;
		|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
		|Условие ((АвтоНДС = 0) и (ВключатьВКнигуПокупок = 1));";
		
		Если СтандартнаяФорма = 0 Тогда
			Если ВыбКонтрагент.Выбран() = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Условие (Контрагент в ВыбКонтрагент);";
			КонецЕсли;
		КонецЕсли;
		
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;
	
	ТаблЧасть = СоздатьОбъект("ТаблицаЗначений");
	Опер = СоздатьОбъект("Операция");
	
	Сч19 = СчетПоКоду("19");
	Сч60 = СчетПоКоду("60");
	Сч76 = СчетПоКоду("76");
	Сч62 = СчетПоКоду("62");
	Сч91 = СчетПоКоду("91");
		
	Пока Запрос.Группировка(1) = 1 Цикл
	    Если ПустоеЗначение(Запрос.Док)=1 Тогда
		    Продолжить;
		КонецЕсли;
		
		Если Запрос.Док.Вид() = "ПоступлениеМатериалов" Тогда
			Если Запрос.Док.ВидПоступления > 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если СтандартнаяФорма = 0 Тогда
		    Если (КоррСчет.Выбран()=1) и (КоррСчет <> Сч68_2) Тогда
		        Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ТаблЧасть.Очистить();
		Запрос.Док.ВыгрузитьТабличнуюЧасть(ТаблЧасть);
		
		Всего 		= 0;
		БезНДС20 	= 0;
		НДС20 		= 0;
		БезНДС10	= 0;
		НДС10		= 0;
		Освобождаемые = 0;
		
		ТаблЧасть.ВыбратьСтроки();
		Пока ТаблЧасть.ПолучитьСтроку() = 1 Цикл
			Если Запрос.Док.Вид() = "ПоступлениеТоваров" Тогда
				Если ТаблЧасть.Товар.ТипТовара = Перечисление.ТипыТоваров.НаКомиссии Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Всего = Всего + ТаблЧасть.Всего;
			
			Если (ТаблЧасть.НДС <> 0) и (ТаблЧасть.Сумма <> 0) Тогда
				
				СтавкаНДС = ТаблЧасть.НДС / (ТаблЧасть.Всего - ТаблЧасть.НДС) * 100;
				
				Если СтавкаНДС > 10.5 Тогда
					НДС20=НДС20+ТаблЧасть.НДС;
					БезНДС20=БезНДС20+(ТаблЧасть.Всего - ТаблЧасть.НДС);
					
				Иначе
					НДС10=НДС10+ТаблЧасть.НДС;
					БезНДС10=БезНДС10+(ТаблЧасть.Всего - ТаблЧасть.НДС);
				КонецЕсли;
				
			Иначе
				Освобождаемые=Освобождаемые+ТаблЧасть.Сумма;
			КонецЕсли;
		КонецЦикла;	
		
		Если Всего <> 0 Тогда
			ТабОтчета.НоваяСтрока();
			
			ТабОтчета.Док	 			= Запрос.Док;
			ТабОтчета.ДатаДок			= Запрос.Док.ДатаДок;
			ТабОтчета.ДатаНомер			= Запрос.Док.ДатаНомерСчетаФактуры; 
			ТабОтчета.ДатаОприходования = Запрос.Док.ДатаДок;
			ТабОтчета.СчетФактура 		= Запрос.Док;
			ТабОтчета.Контрагент        = Запрос.Док.Контрагент;
			ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
			ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
			ТабОтчета.ПозицияДок		= Запрос.Док.ПолучитьПозицию();
			ТабОтчета.ГТД               = СписокНомеровГТД(Запрос.Док);
			
			Если Запрос.Док.Проведен() = 1 Тогда
				СуммаПокупкиРуб = 0;
				СуммаНДСРуб = 0;
				
				Если Запрос.Док.Вид() = "УслугиСтороннихОрганизаций" Тогда
					ТипИсполнителя = Запрос.Док.ТипИсполнителя;
				Иначе
					ТипИсполнителя = 1;
				КонецЕсли;  
													
				Опер.НайтиОперацию(Запрос.Док);
				Опер.ВыбратьПроводки();
				Пока Опер.ПолучитьПроводку() = 1 Цикл
					Если ((ТипИсполнителя = 1) и (Опер.Кредит.Счет.ПринадлежитГруппе(Сч60) = 1) и (Опер.Дебет.Счет.ПринадлежитГруппе(Сч60) = 0)) 
					или ((ТипИсполнителя = 2) и (Опер.Дебет.Счет.ПринадлежитГруппе(Сч60) = 0) и (Опер.Кредит.Счет.ПринадлежитГруппе(Сч76) = 1)) 
					или ((ТипИсполнителя = 1) и (Опер.Дебет.Счет.ПринадлежитГруппе(Сч62) = 1)) Тогда
						
						Если Опер.Дебет.Счет.ПринадлежитГруппе(Сч91) = 1 Тогда
							Если Опер.Дебет.Субконто(1).ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда                                             
								Продолжить;
							КонецЕсли;
						ИначеЕсли Опер.Кредит.Счет.ПринадлежитГруппе(Сч91) = 1 Тогда
							Если Опер.Кредит.Субконто(1).ВидПрочихДоходовИРасходов = Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы Тогда                                             
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						СуммаПокупкиРуб = СуммаПокупкиРуб + Опер.Сумма;
						
						Если Опер.Дебет.Счет.ПринадлежитГруппе(Сч19) = 1 Тогда
							СуммаНДСРуб = СуммаНДСРуб + Опер.Сумма;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Если Запрос.Док.Вид() = "ПоступлениеТоваров" Тогда
					Если (Запрос.Док.ВидПоступления = 13) и (Запрос.Док.ВариантОтраженияВозврата = 1) Тогда
						СуммаПокупкиРуб = - СуммаПокупкиРуб;
						СуммаНДСРуб = - СуммаНДСРуб;
					КонецЕсли;
				КонецЕсли;
				
				Если СуммаПокупкиРуб <> Всего Тогда
					
					К = СуммаПокупкиРуб / Всего;
					БезНДС20 	= Окр(БезНДС20 * К, 2, 1);
					НДС20 		= Окр(НДС20 * К, 2, 1);
					БезНДС10	= Окр(БезНДС10 * К, 2, 1);
					НДС10		= Окр(НДС10 * К, 2, 1);
					Освобождаемые = Окр(Освобождаемые * К, 2, 1);
					
					Разница = (СуммаПокупкиРуб - СуммаНДСРуб) - (БезНДС20 + БезНДС10 + Освобождаемые);
					Если Разница <> 0 Тогда
						Если БезНДС20 <> 0 Тогда
							БезНДС20 = БезНДС20 + Разница;
							
						ИначеЕсли БезНДС10 <> 0 Тогда
							БезНДС10 = БезНДС10 + Разница;
							
						Иначе
							Освобождаемые = Освобождаемые + Разница;
						КонецЕсли;
					КонецЕсли;
					
					Разница = СуммаНДСРуб - (НДС20 + НДС10);
					Если Разница <> 0 Тогда
						Если НДС20 <> 0 Тогда
							НДС20 = НДС20 + Разница;
							
						Иначе
							НДС10 = НДС10 + Разница;
						КонецЕсли;
					КонецЕсли;
					
					Всего = СуммаПокупкиРуб;
					
				КонецЕсли;
			КонецЕсли;
			
			ТабОтчета.ВсегоПокупок 		= Всего;
			ТабОтчета.СуммаБезНДС20 	= БезНДС20;              
			ТабОтчета.НДС20 			= НДС20;
			ТабОтчета.СуммаБезНДС10 	= БезНДС10;
			ТабОтчета.НДС10 			= НДС10;
			ТабОтчета.СуммаСовсемБезНДС = Освобождаемые;
			
		КонецЕсли;
	КонецЦикла;
	
	ТабОтчета.Сортировать("ПозицияДок");
	
	Если (ПризнакЧастичнойОплаты = 1) и (ТабОтчета.КоличествоСтрок() > 0) Тогда
		
		//Соберем данные о проверке частичных оплат
		ТабСчетовФактур = СоздатьОбъект("ТаблицаЗначений");
		ТабОтчета.Выгрузить(ТабСчетовФактур);
		ТабСчетовФактур.Свернуть("ДатаНомер, Контрагент","ВсегоПокупок, СуммаБезНДС20, НДС20, СуммаБезНДС10, НДС10, НДС0, СуммаСовсемБезНДС");
		БухИт19 = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт19.ИспользоватьРазделительУчета(ЮрЛицо); //NDline
		БухИт19.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные);
		БухИт19.ВыполнитьЗапрос(НачДата,КонДата,"19.1, 19.2, 19.3, 19.4",,,,,1);
		
	КонецЕсли;
	
	//Свернем оплаты за день
	ВремТаблица = СоздатьОбъект("ТаблицаЗначений");         
	ПоДням = СоздатьОбъект("ТаблицаЗначений");
	ТабОтчета.Выгрузить(ВремТаблица);
	ТабОтчета.УдалитьСтроки();

	ТабОтчета.НоваяКолонка("Расшифровка","СписокЗначений");
	ТабОтчета.НоваяКолонка("СчетаФактуры","СписокЗначений");
	
	ТабОтчета.Выгрузить(ПоДням);
	ПоДням.УдалитьСтроки();
	
	ВремТаблица.ВыбратьСтроки();
	ДатаТаблицы = НачДата;
	Пока ВремТаблица.ПолучитьСтроку() = 1 Цикл
		НС = 0;
		Если ВремТаблица.ДатаДок = ДатаТаблицы  Тогда //Накапливаем записи за день
			
			//Если один с/ф оплачивался несколько раз в течении дня
			Если ПризнакСвертки = 0 Тогда
				НС = 0; 
			ИначеЕсли ПоДням.НайтиЗначение(ВремТаблица.ДатаНомер, НС, "ДатаНомер") = 1 Тогда 
				ПоДням.ПолучитьСтрокуПоНомеру(НС);
				Если ПоДням.Контрагент <> ВремТаблица.Контрагент Тогда
					НС = 0;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ПоДням.ВыбратьСтроки();
			Пока ПоДням.ПолучитьСтроку() = 1 Цикл
				ТабОтчета.НоваяСтрока();
				ТабОтчета.Док	 			= "";
				ТабОтчета.ДатаДок			= ПоДням.ДатаДок;
				ТабОтчета.ДатаНомер			= ПоДням.ДатаНомер; 
				ТабОтчета.ДатаОплаты		= ПоДням.ДатаОплаты;
				ТабОтчета.ДатаОприходования = ПоДням.ДатаОприходования;
				ТабОтчета.Контрагент        = ПоДням.Контрагент;
				ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
				ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
				ТабОтчета.ГТД               = ПоДням.ГТД;
				ТабОтчета.ПозицияДок		= ПоДням.ПозицияДок; 
				ТабОтчета.Аванс				= ПоДням.Аванс;
				ТабОтчета.ВсегоПокупок 		= ПоДням.ВсегоПокупок;
				ТабОтчета.СуммаБезНДС20 	= ПоДням.СуммаБезНДС20;              
				ТабОтчета.НДС20 			= ПоДням.НДС20;
				ТабОтчета.СуммаБезНДС10 	= ПоДням.СуммаБезНДС10;
				ТабОтчета.НДС10 			= ПоДням.НДС10;
				ТабОтчета.НДС0 				= ПоДням.НДС0;
				ТабОтчета.СуммаСовсемБезНДС = ПоДням.СуммаСовсемБезНДС;
				ТабОтчета.Расшифровка 		= ПоДням.Расшифровка;
				ТабОтчета.СчетаФактуры 		= ПоДням.СчетаФактуры;
			КонецЦикла;
			ПоДням.УдалитьСтроки();
			ДатаТаблицы = ВремТаблица.ДатаДок;
		КонецЕсли;
		
		Если НС = 0 Тогда //Данный с/ф в текущем дне еще не попадался
			ПоДням.НоваяСтрока();
			ПоДням.Док	 				= ВремТаблица.Док;
			ПоДням.ДатаДок				= ВремТаблица.ДатаДок;
			ПоДням.ДатаНомер			= ВремТаблица.ДатаНомер; 
			ПоДням.ДатаОплаты			= ВремТаблица.ДатаОплаты;
			ПоДням.ДатаОприходования	= ВремТаблица.ДатаОприходования;
			ПоДням.Контрагент        	= ВремТаблица.Контрагент;
			ПоДням.ИНН 					= ВремТаблица.ИНН;
			ПоДням.КПП 					= ВремТаблица.КПП;
			ПоДням.ГТД         		    = ВремТаблица.ГТД;
			ПоДням.ПозицияДок			= ВремТаблица.ПозицияДок;
			ПоДням.Аванс				= ВремТаблица.Аванс;
			
			ПоДням.ВсегоПокупок 		= ВремТаблица.ВсегоПокупок;
			ПоДням.СуммаБезНДС20 		= ВремТаблица.СуммаБезНДС20;              
			ПоДням.НДС20 				= ВремТаблица.НДС20;
			ПоДням.СуммаБезНДС10 		= ВремТаблица.СуммаБезНДС10;
			ПоДням.НДС10 				= ВремТаблица.НДС10;
			ПоДням.НДС0 				= ВремТаблица.НДС0;
			ПоДням.СуммаСовсемБезНДС	= ВремТаблица.СуммаСовсемБезНДС;
			ПоДням.Возврат				= ВремТаблица.Возврат;
			
			Расшиф = СоздатьОбъект("СписокЗначений");
			Расшиф.ДобавитьЗначение(ВремТаблица.Док, СокрЛП(ВремТаблица.Док.ПредставлениеВида()+" № "+ВремТаблица.Док.НомерДок +" от "+ВремТаблица.Док.ДатаДок) + " " + Формат(ВремТаблица.ВсегоПокупок,"Ч-15.2-"));
			ПоДням.Расшифровка 			= Расшиф;
			
			СчетаФактуры = СоздатьОбъект("СписокЗначений");
			СчетаФактуры.ДобавитьЗначение(ВремТаблица.СчетФактура, СокрЛП(ВремТаблица.СчетФактура));
			ПоДням.СчетаФактуры 		= СчетаФактуры; 
		Иначе  //Данный с/ф в текущем дне уже был
			//Установим позицию на посленую оплату в дне
			ПоДням.ПозицияДок			= ВремТаблица.ПозицияДок;
			//Просуммируем количественные показатели
			ПоДням.ВсегоПокупок 		= ПоДням.ВсегоПокупок + ВремТаблица.ВсегоПокупок;
			ПоДням.СуммаБезНДС20 		= ПоДням.СуммаБезНДС20 + ВремТаблица.СуммаБезНДС20;              
			ПоДням.НДС20 				= ПоДням.НДС20 + ВремТаблица.НДС20;
			ПоДням.СуммаБезНДС10 		= ПоДням.СуммаБезНДС10 + ВремТаблица.СуммаБезНДС10;
			ПоДням.НДС10 				= ПоДням.НДС10 + ВремТаблица.НДС10;
			ПоДням.НДС0 				= ПоДням.НДС0 + ВремТаблица.НДС0;
			ПоДням.СуммаСовсемБезНДС	= ПоДням.СуммаСовсемБезНДС + ВремТаблица.СуммаСовсемБезНДС;
			//Добавим запись в список расшифровки и документ регистрации с/ф
			ПоДням.Расшифровка.ДобавитьЗначение(ВремТаблица.Док, СокрЛП(ВремТаблица.Док.ПредставлениеВида()+" № "+ВремТаблица.Док.НомерДок +" от "+ВремТаблица.Док.ДатаДок) + " " + Формат(ВремТаблица.ВсегоПокупок,"Ч-15.2-"));
			ПоДням.СчетаФактуры.ДобавитьЗначение(ВремТаблица.СчетФактура, СокрЛП(ВремТаблица.СчетФактура));
		КонецЕсли;
	КонецЦикла;
	
	ПоДням.ВыбратьСтроки();
	Пока ПоДням.ПолучитьСтроку() = 1 Цикл
		ТабОтчета.НоваяСтрока();
		ТабОтчета.Док	 			= "";
		ТабОтчета.ДатаДок			= ДатаТаблицы;
		ТабОтчета.ДатаНомер			= ПоДням.ДатаНомер; 
		ТабОтчета.ДатаОплаты		= ПоДням.ДатаОплаты;
		ТабОтчета.ДатаОприходования = ПоДням.ДатаОприходования;
		ТабОтчета.Контрагент        = ПоДням.Контрагент;
		ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
		ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
		ТабОтчета.ГТД               = ПоДням.ГТД;
		ТабОтчета.ПозицияДок		= ПоДням.ПозицияДок;
		ТабОтчета.Аванс				= ПоДням.Аванс;
		ТабОтчета.ВсегоПокупок 		= ПоДням.ВсегоПокупок;
		ТабОтчета.СуммаБезНДС20 	= ПоДням.СуммаБезНДС20;              
		ТабОтчета.НДС20 			= ПоДням.НДС20;
		ТабОтчета.СуммаБезНДС10 	= ПоДням.СуммаБезНДС10;
		ТабОтчета.НДС10 			= ПоДням.НДС10;
		ТабОтчета.НДС0 				= ПоДням.НДС0;
		ТабОтчета.СуммаСовсемБезНДС = ПоДням.СуммаСовсемБезНДС;
		ТабОтчета.Расшифровка 		= ПоДням.Расшифровка;
		ТабОтчета.СчетаФактуры 		= ПоДням.СчетаФактуры;
		ТабОтчета.Возврат	 		= ПоДням.Возврат;
	КонецЦикла; 
	
	ТабОтчета.Сортировать("ПозицияДок");
	
	Если ПризнакЧастичнойОплаты = 1 Тогда
		
		//Проверим частичные оплаты
		ТабОтчета.ВыбратьСтроки();
		Пока ТабОтчета.ПолучитьСтроку()=1 Цикл
			Если (Найти(ВРег(ТабОтчета.ДатаНомер), "ЧАСТИЧНАЯ") > 0) или
			(Найти(ТабОтчета.ДатаНомер, " НДС ") > 0) Тогда
				Продолжить;
			КонецЕсли;
			ЧастичнаяОплата = 0;
			Для Н = 1 по ТабОтчета.СчетаФактуры.РазмерСписка() Цикл
				Если БухИт19.ПолучитьСубконто(,,ТабОтчета.СчетаФактуры.ПолучитьЗначение(Н)) > 0 Тогда
					Если БухИт19.СКД("С") > 0 Тогда //Есть остаток НДС (задолженность не погашена)
						ЧастичнаяОплата = 1;
						Прервать;
					ИначеЕсли БухИт19.СНД("С") > 0 Тогда
						БухИтСФ = СоздатьОбъект("БухгалтерскиеИтоги");
						БухИтСФ.ИспользоватьРазделительУчета(ЮрЛицо); //NDline
						БухИтСФ.ИспользоватьСубконто(ВидыСубконто.СчетаФактурыПолученные, ТабОтчета.СчетаФактуры.ПолучитьЗначение(Н), 2);
						БухИтСФ.ВыполнитьЗапрос(,ТабОтчета.СчетаФактуры.ПолучитьЗначение(Н),"19.1, 19.2, 19.3, 19.4",,,,,1);
						Если БухИт19.СНД("С") <> БухИтСФ.СКД("С") Тогда
							ЧастичнаяОплата = 1;
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			НС = 0;
			Если ТабСчетовФактур.НайтиЗначение(ТабОтчета.ДатаНомер, НС, "ДатаНомер") = 1 Тогда 
				ТабСчетовФактур.ПолучитьСтрокуПоНомеру(НС);
				Если ТабОтчета.ВсегоПокупок <> ТабСчетовФактур.ВсегоПокупок Тогда //Есть несколько записей по этой с/ф
					ЧастичнаяОплата = 1;
				КонецЕсли;
			КонецЕсли;
			Если ЧастичнаяОплата = 1 Тогда
				ТабОтчета.ДатаНомер = СокрЛП(ТабОтчета.ДатаНомер) + РазделительСтрок +"частичная оплата";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Ном = 1;                  
	Если (ГруппироватьПоКонтрагентам = 1) и (СтандартнаяФорма = 0) Тогда 
		ТабОтчета.Сортировать("Контрагент"); 
		Контр = " не контрагент ";
	КонецЕсли;
	ИтогСуммаБезНДС20=0; 
	ИтогНДС20=0;
	ИтогСуммаБезНДС18=0; 
	ИтогНДС18=0;
	ИтогСуммаБезНДС10=0;
	ИтогНДС10=0;
	ИтогНДС0 = 0;
	ИтогСуммаСовсемБезНДС = 0;
	ИтогВсего = 0;
	
	ТабОтчета.ВыбратьСтроки();
	
	Пока ТабОтчета.ПолучитьСтроку()=1 Цикл 
		ПечСуммаБезНДС20 = 0;
		ПечНДС20 = 0; 
		ПечСуммаБезНДС18 = 0;
		ПечНДС18 = 0;        
		ПечСуммаБезНДС10 = ТабОтчета.СуммаБезНДС10;
		ПечНДС10 = ТабОтчета.НДС10;        
		ПечНДС0 = ТабОтчета.НДС0;
		ПечСуммаСовсемБезНДС = ТабОтчета.СуммаСовсемБезНДС;
		
		Если ТабОтчета.Возврат = 1 Тогда
		    ПечКонтрагент = СокрЛП(Константа.НазваниеОрганизации);
			ПечИНН = СРЕД(Константа.ИННОрганизации,1,10);
			ПечКПП = СРЕД(Константа.ИННОрганизации,12);   		
		ИначеЕсли (ТабОтчета.Аванс <> 1) ИЛИ ((ВыводитьПокупателя = 1) и (СтандартнаяФорма = 0)) Тогда
		    ПечКонтрагент = Наименование(ТабОтчета.Контрагент);
			ПечИНН = ТабОтчета.ИНН;
			ПечКПП = ТабОтчета.КПП;        
		Иначе
			ПечКонтрагент = СокрЛП(Константа.НазваниеОрганизации);
			ПечИНН = СРЕД(Константа.ИННОрганизации,1,10);
			ПечКПП = СРЕД(Константа.ИННОрганизации,12);   
		КонецЕсли;
		Если ТабОтчета.СуммаБезНДС20 <> 0  Тогда
			
			Ставка = Окр(100 * (ТабОтчета.НДС20/ТабОтчета.СуммаБезНДС20),0,1);  
			
			Если Ставка > 18 Тогда
				ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
				Если ДатаДокумента > '01.01.2004' Тогда
					Ставка = 18;
				КонецЕсли;
			КонецЕсли;
			
			Если (ТабОтчета.СуммаБезНДС20 <= 0.5) и (ТабОтчета.СуммаБезНДС20 > 0)Тогда
				ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
				Если ДатаДокумента < '01.01.2004' Тогда
					Ставка = Ставка;
				Иначе
					Ставка = 18;
				КонецЕсли;
			КонецЕсли;

			ОбщаяБаза = ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС10 + ТабОтчета.НДС0 + ТабОтчета.СуммаСовсемБезНДС;
			Если ((Ставка = 20) и (ОбщаяБаза <> ТабОтчета.ВсегоПокупок)) или 
				((Ставка = 17) и (ОбщаяБаза = ТабОтчета.ВсегоПокупок)) Тогда
				ПечСуммаБезНДС20 = ТабОтчета.СуммаБезНДС20;
				ПечНДС20 = ТабОтчета.НДС20; 
			Иначе
				ПечСуммаБезНДС18 = ТабОтчета.СуммаБезНДС20;
				ПечНДС18 = ТабОтчета.НДС20;
			КонецЕсли;
		Иначе                              
			ПечСуммаБезНДС18 = ТабОтчета.СуммаБезНДС20;
			ПечНДС18 = ТабОтчета.НДС20;
		КонецЕсли;
		
		Если ТабОтчета.Аванс <> 0 Тогда
		   	ПечСуммаБезНДС20 = 0; 
			ПечСуммаБезНДС18 = 0; 
			ПечСуммаБезНДС10 = 0;
			ПечНДС0 = 0;
			ПечСуммаСовсемБезНДС = 0;
		КонецЕсли;
		
		ИтогСуммаБезНДС20=ИтогСуммаБезНДС20+ПечСуммаБезНДС20; 
		ИтогНДС20=ИтогНДС20+ПечНДС20;
		ИтогСуммаБезНДС18=ИтогСуммаБезНДС18+ПечСуммаБезНДС18; 
		ИтогНДС18=ИтогНДС18+ПечНДС18;                        
		ИтогСуммаБезНДС10=ИтогСуммаБезНДС10+ПечСуммаБезНДС10;
		ИтогНДС10=ИтогНДС10+ПечНДС10;
		ИтогНДС0=ИтогНДС0+ПечНДС0;                        
		ИтогСуммаСовсемБезНДС=ИтогСуммаСовсемБезНДС+ПечСуммаСовсемБезНДС;
		ИтогВсего=ИтогВсего+ТабОтчета.ВсегоПокупок;
		
		Если (ГруппироватьПоКонтрагентам = 1) и (СтандартнаяФорма = 0) Тогда
			Если Контр<>ТабОтчета.Контрагент Тогда 
				Если Ном>1 Тогда 
					Если ВариантФормирования<>3 Тогда
						Таб.ВывестиСекцию("ВсегоКонтрагент"); 
					КонецЕсли;
				КонецЕсли;
				Если ВариантФормирования<>3 Тогда
					Таб.ВывестиСекцию("Контрагент"); 
				КонецЕсли;
				Контр=ТабОтчета.Контрагент; 
				ВсегоПокупок=0; 
				СуммаБезНДС20=0; 
				НДС20=0;
				СуммаБезНДС18=0; 
				НДС18=0;
				СуммаБезНДС10=0; 
				НДС10=0; 
				НДС0=0; 
				СуммаСовсемБезНДС=0; 
			КонецЕсли;
						
			ВсегоПокупок=ВсегоПокупок+ТабОтчета.ВсегоПокупок; 
			СуммаБезНДС20=СуммаБезНДС20+ПечСуммаБезНДС20; 
			НДС20=НДС20+ПечНДС20;
			СуммаБезНДС18=СуммаБезНДС18+ПечСуммаБезНДС18; 
			НДС18=НДС18+ПечНДС18;
			СуммаБезНДС10=СуммаБезНДС10+ПечСуммаБезНДС10; 
			НДС10=НДС10+ПечНДС10; 
			НДС0=НДС0+ПечНДС0; 
			СуммаСовсемБезНДС=СуммаСовсемБезНДС+ПечСуммаСовсемБезНДС; 
			
		КонецЕсли;
		
		Если ВариантФормирования<>3 Тогда
			СписокРасшифровки = ТабОтчета.Расшифровка;
			Таб.ВывестиСекцию("Строка"); 
		КонецЕсли;
		Ном = Ном + 1; 
	КонецЦикла; 
	Если (ГруппироватьПоКонтрагентам = 1) и (СтандартнаяФорма = 0) Тогда 
		Если ВариантФормирования<>3 Тогда
			Таб.ВывестиСекцию("ВсегоКонтрагент"); 
		КонецЕсли;
	КонецЕсли; 
    
	Если ВариантФормирования <> 3 Тогда
		Таб.ВывестиСекцию("Всего");
		
		ГлБух = ФИО(Константа.ГлБухгалтер.Получить( ДатаКонца ));
		Таб.ВывестиСекцию("Подвал");
		
		ВерхнийКолонтитул = "Книга покупок ("+ПериодСтр(НачДата, КонДата)+")";
		НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
		
		Таб.Опции(0,0,13,2,"Параметры печати книги покупок" );
		Таб.ОбластьПечати(2);
		Таб.ПовторятьПриПечатиСтроки(9, 13);
		Таб.ПараметрыСтраницы(2,,,,,,,,,1);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Книга покупок","");
	КонецЕсли;
		
КонецПроцедуры // КнигаПокупок()

//*****************************************************************************
Процедура ЖурналУчета()
	
	Таб.ИсходнаяТаблица("ЖурналУчета");
	УстановленныйОтбор = "";
	Если СтандартнаяФорма = 0 Тогда
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    УстановленныйОтбор = "Установлен отбор по контрагенту: "+СокрЛП(ВыбКонтрагент.Наименование);
		КонецЕсли;
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка");

	ТекстЗапроса = "Период с ДатаНачала по ДатаКонца;
		|ОбрабатыватьДокументы Все;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Док = Документ.СчетФактураПолученный.ТекущийДокумент,
		|               Документ.ПоступлениеТоваров.ТекущийДокумент,
		|               Документ.ПоступлениеМатериалов.ТекущийДокумент,
		|               Документ.ПоступлениеОборудования.ТекущийДокумент,
		|               Документ.ПоступлениеОС.ТекущийДокумент,
		|               Документ.ПоступлениеНМА.ТекущийДокумент,
		|               Документ.УслугиСтороннихОрганизаций.ТекущийДокумент;		
		|ДокументОснование = Документ.СчетФактураПолученный.ДокументОприходования,
		|                    Документ.ПоступлениеТоваров.ТекущийДокумент,
		|                    Документ.ПоступлениеМатериалов.ТекущийДокумент,
		|	                 Документ.ПоступлениеОборудования.ТекущийДокумент,
		|                    Документ.ПоступлениеОС.ТекущийДокумент,
		|                    Документ.ПоступлениеНМА.ТекущийДокумент,
		|                    Документ.УслугиСтороннихОрганизаций.ТекущийДокумент;
		|Контрагент = Документ.СчетФактураПолученный.Контрагент,
		|             Документ.ПоступлениеТоваров.Контрагент,
		|             Документ.ПоступлениеМатериалов.Контрагент,
		|             Документ.ПоступлениеОборудования.Контрагент,
		|             Документ.ПоступлениеОС.Контрагент,
		|             Документ.ПоступлениеНМА.Контрагент,
		|             Документ.УслугиСтороннихОрганизаций.Контрагент;
		|Валюта = Документ.СчетФактураПолученный.Договор.ВалютаДоговора,
		|         Документ.ПоступлениеТоваров.Договор.ВалютаДоговора,
		|         Документ.ПоступлениеМатериалов.Договор.ВалютаДоговора,
		|         Документ.ПоступлениеОборудования.Договор.ВалютаДоговора,
		|         Документ.ПоступлениеОС.Договор.ВалютаДоговора,
		|         Документ.ПоступлениеНМА.Договор.ВалютаДоговора,
		|         Документ.УслугиСтороннихОрганизаций.Договор.ВалютаДоговора;
		|ДатаНомер = Документ.СчетФактураПолученный.ДатаНомерСчетаФактуры,
		|            Документ.ПоступлениеТоваров.ДатаНомерСчетаФактуры,
		|            Документ.ПоступлениеМатериалов.ДатаНомерСчетаФактуры,
		|            Документ.ПоступлениеОборудования.ДатаНомерСчетаФактуры,
		|            Документ.ПоступлениеОС.ДатаНомерСчетаФактуры,
		|            Документ.ПоступлениеНМА.ДатаНомерСчетаФактуры,
		|            Документ.УслугиСтороннихОрганизаций.ДатаНомерСчетаФактуры;
		|Всего = Документ.СчетФактураПолученный.Всего,
		|        Документ.ПоступлениеТоваров.Всего,
		|        Документ.ПоступлениеМатериалов.Всего,
		|        Документ.ПоступлениеОборудования.Всего,
		|        Документ.ПоступлениеОС.Всего,
		|        Документ.ПоступлениеНМА.Всего,
		|        Документ.УслугиСтороннихОрганизаций.Всего;";
		Если СтандартнаяФорма = 0 Тогда
			Если ГруппироватьПоКонтрагентам = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Группировка Контрагент;";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Док;
		|Функция ВсегоПокупок = Сумма(Всего);";
		Если СтандартнаяФорма = 0 Тогда
			Если ВыбКонтрагент.Выбран() = 1 Тогда
			    ТекстЗапроса = ТекстЗапроса + "
				|Условие (Контрагент в ВыбКонтрагент);";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
		|Условие (ПустоеЗначение(ДатаНомер) = 0);";
				
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	    Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;
	
	Ном = 1;
	Пока Запрос.Группировка(1) = 1 Цикл
		Если (СтандартнаяФорма = 1) или (ГруппироватьПоКонтрагентам = 0) Тогда
			Таб.ВывестиСекцию("Строка");
			Ном = Ном + 1;
			
		ИначеЕсли ГруппироватьПоКонтрагентам = 1 Тогда
			Если Запрос.Контрагент.ЭтоГруппа() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Таб.ВывестиСекцию("Контрагент");
			Пока Запрос.Группировка(2) = 1 Цикл
				Таб.ВывестиСекцию("Строка");
				Ном = Ном + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ВерхнийКолонтитул = "Журнал учета полученных счетов-фактур ("+ПериодСтр(ДатаНачала, ДатаКонца)+")";
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	
	Таб.Опции(0,0,6,0, "Параметры печати журналы полученных счетов-фактур" );
	Таб.ОбластьПечати(2);
	Таб.ПовторятьПриПечатиСтроки(6, 6);
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Журнал учета полученных счетов-фактур",""); 
	
КонецПроцедуры // ЖурналУчета()

//*****************************************************************************
// ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста = "", НачДата, КонДата)
//
// Параметры:
//  ПериодДопЛиста - Конец корректируемого периода;
//  НачДата - Начало периода выборки записей доп. листов;
//  КонДата - Конец периода выборки записей доп. листов;
// 
Процедура ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста = "", НачДата, КонДата)

	КоличествоМесяцевВПериоде = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Квартал, 3, 1);
	
	ТекстЗапроса = "Период с НачДата по КонДата;
	|ОбрабатыватьДокументы Все;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Док = Документ.ЗаписьКнигиПокупок.ТекущийДокумент;
	|Контрагент = Документ.ЗаписьКнигиПокупок.Контрагент;
	|ДокВсего = Документ.ЗаписьКнигиПокупок.Всего;
	|ДокНДС20 = Документ.ЗаписьКнигиПокупок.НДС20;
	|ДокСуммаБезНДС20 = Документ.ЗаписьКнигиПокупок.СуммаБезНДС20;
	|ДокНДС10 = Документ.ЗаписьКнигиПокупок.НДС10;
	|ДокСуммаБезНДС10 = Документ.ЗаписьКнигиПокупок.СуммаБезНДС10;
	|ДокСуммаСовсемБезНДС = Документ.ЗаписьКнигиПокупок.СуммаСовсемБезНДС;
	|СтавкаНоль = Документ.ЗаписьКнигиПокупок.НДСпоСтавкеНольПроцентов; 
	|ЗаписьДопЛиста = Документ.ЗаписьКнигиПокупок.ЗаписьДопЛистаПК;
	|ДатаДопЛиста = Документ.ЗаписьКнигиПокупок.ДатаДопЛистаПК;
	|Группировка Док без групп;
	|Функция ВсегоПокупок = Сумма(Пересчет(Док,ДокВсего));
	|Функция НДС20 = Сумма(Пересчет(Док,ДокНДС20));
	|Функция СуммаБезНДС20 = Сумма(Пересчет(Док,ДокСуммаБезНДС20));
	|Функция НДС10 = Сумма(Пересчет(Док,ДокНДС10));
	|Функция СуммаБезНДС10 = Сумма(Пересчет(Док,ДокСуммаБезНДС10));
	|Функция НДС0 = Сумма(Пересчет(Док,ДокВсего)) Когда (СтавкаНоль = 1);
	|Функция СуммаСовсемБезНДС = Сумма(Пересчет(Док,ДокСуммаСовсемБезНДС));
	|Условие (ДокВсего <> 0);
	|Условие (ЗаписьДопЛиста = 1);
	|Условие (Док.ЮрЛицо = ЮрЛицо); //NDline
	|";
	
	Если ПустоеЗначение(ПериодДопЛиста) = 0 Тогда 
		Если КоличествоМесяцевВПериоде = 1 Тогда
		    ТекстЗапроса =  ТекстЗапроса + "
			|Условие (КонМесяца(ДатаДопЛиста) = КонМесяца(ПериодДопЛиста));
			|Условие (ДатаДопЛиста <= ПериодДопЛиста);
			|";
			
		Иначе
		    ТекстЗапроса =  ТекстЗапроса + "
			|Условие (КонКвартала(ДатаДопЛиста) = КонКвартала(ПериодДопЛиста));
			|Условие (ДатаДопЛиста <= ПериодДопЛиста);
			|";
		КонецЕсли;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Невозможно выполнить запрос");
		Возврат;
	КонецЕсли;

	Пока Запрос.Группировка(1) = 1 Цикл
		Если ПустоеЗначение(Запрос.Док)=1 Тогда
			Продолжить;
		КонецЕсли; 
		ТабОтчета.НоваяСтрока();
		ТабОтчета.Док = Запрос.Док;
		ТабОтчета.ВсегоПокупок = Запрос.ВсегоПокупок;
		ТабОтчета.НДС20 = Запрос.НДС20;
		ТабОтчета.СуммаБезНДС20 = Запрос.СуммаБезНДС20;
		ТабОтчета.НДС10 = Запрос.НДС10;
		ТабОтчета.СуммаБезНДС10 = Запрос.СуммаБезНДС10;
		ТабОтчета.НДС0 = Запрос.НДС0;
		ТабОтчета.СуммаСовсемБезНДС = Запрос.СуммаСовсемБезНДС;
		ТабОтчета.Аванс = ТабОтчета.Док.Аванс;
		ТабОтчета.ДатаДопЛиста		= ТабОтчета.Док.ДатаДопЛистаПК;	
		ТабОтчета.ДатаНомер			= СокрЛП(ТабОтчета.Док.ДатаНомерСчетаФактуры) +" "+СокрЛП(ТабОтчета.Док.ДополнительнаяИнформация);
		ТабОтчета.ДатаОплаты		= ТабОтчета.Док.ДатаОплаты; 
		ТабОтчета.СчетФактура 		= ТабОтчета.Док.ДокументОснование;
		ТабОтчета.ГТД               = СписокНомеровГТД(ТабОтчета.Док.ДокументОснование);
		ТабОтчета.ДатаДок			= ТабОтчета.Док.ДатаДок;
		ТабОтчета.ДатаОприходования = ТабОтчета.Док.ДатаОприходования;
		ТабОтчета.Контрагент        = ТабОтчета.Док.Контрагент;
		ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
		ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
		ТабОтчета.ПозицияДок		= ТабОтчета.Док.ПолучитьПозицию();
		Расшифр						= СоздатьОбъект("СписокЗначений"); 
		Расшифр.ДобавитьЗначение(ТабОтчета.Док, СокрЛП(ТабОтчета.Док.ПредставлениеВида()+" № "+ТабОтчета.Док.НомерДок +" от "+ТабОтчета.Док.ДатаДок) + " " + Формат(ТабОтчета.ВсегоПокупок,"Ч-15.2-"));
		ТабОтчета.Расшифровка 		= Расшифр;   
		СчетаФактуры				= СоздатьОбъект("СписокЗначений"); 
		СчетаФактуры.ДобавитьЗначение(ТабОтчета.СчетФактура, СокрЛП(ТабОтчета.СчетФактура));
		ТабОтчета.СчетаФактуры		= СчетаФактуры;
		ТабОтчета.Период			= ТабОтчета.Док.ДатаДок;
		
		ДокОснование = ТабОтчета.Док.ДокументОснование;			
		Если ДокОснование.Вид() = "ПоступлениеТоваров" Тогда
			Если ((ДокОснование.ВидПоступления=4) или (ДокОснование.ВидПоступления=13)) и (ДокОснование.ПокупателемВыставляетсяСчетФактураНаВозврат = 0) и (ДокОснование.ВариантОтраженияВозврата = 1) и (ПустоеЗначение(ДокОснование.ДатаНомерСчетаФактуры) = 1) Тогда
				ТабОтчета.Возврат = 1;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ДокАвто = СоздатьОбъект("Документ.ЗаписиКнигиПокупок");
	ДокАвто.ВыбратьДокументы(НачДата,КонДата);

	Пока ДокАвто.ПолучитьДокумент()=1 Цикл
		Если ДокАвто.ЮрЛицо <> ЮрЛицо Тогда //NDline
			Продолжить;
		КонецЕсли; //NDline
		Если ДокАвто.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;
		ДокАвто.ВыбратьСтроки();
		Пока ДокАвто.ПолучитьСтроку() = 1 Цикл
			
			Если ДокАвто.ЗаписьДопЛиста = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПустоеЗначение(ПериодДопЛиста) = 0 Тогда 
				Если КоличествоМесяцевВПериоде = 1 Тогда
					Если (КонМесяца(ДокАвто.ДатаДопЛиста) <> КонМесяца(ПериодДопЛиста)) или (ДокАвто.ДатаДопЛиста > ПериодДопЛиста) Тогда
						Продолжить;
					КонецЕсли;
					
				Иначе
					Если (КонКвартала(ДокАвто.ДатаДопЛиста) <> КонКвартала(ПериодДопЛиста)) или (ДокАвто.ДатаДопЛиста > ПериодДопЛиста) Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
			
			ТабОтчета.НоваяСтрока();
			ТабОтчета.Док	 			= ДокАвто.ТекущийДокумент();
			ТабОтчета.ДатаДок			= Макс(ДокАвто.Оплата.ДатаДок,ДокАвто.Приход.ДатаДок);
			ТабОтчета.ДатаНомер			= ДокАвто.ДатаНомерСчетаФактуры; 
			ТабОтчета.ДатаОплаты		= ДокАвто.Оплата.ДатаДок;
			ТабОтчета.ДатаОприходования = ?(ДокАвто.СчетФактура.Вид() = "СчетФактураПолученный", ДокАвто.СчетФактура.ДатаОприходования, ДокАвто.Приход.ДатаДок);
			ТабОтчета.СчетФактура 		= ДокАвто.СчетФактура;
			ТабОтчета.Контрагент        = ДокАвто.Контрагент; 
			ТабОтчета.ДатаДопЛиста		= ДокАвто.ДатаДопЛиста;	  
			ТабОтчета.ИНН 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, СРЕД(ТабОтчета.Контрагент.ИНН,1,12),СРЕД(ТабОтчета.Контрагент.ИНН,1,10));
			ТабОтчета.КПП 				= ?(ТабОтчета.Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо, "",СРЕД(ТабОтчета.Контрагент.ИНН,12));
			ТабОтчета.ГТД               = ?(ПустоеЗначение(ДокАвто.СтранаГТД)=0,ДокАвто.СтранаГТД,СписокНомеровГТД(ДокАвто.СчетФактура));
			ТабОтчета.ПозицияДок		= Макс(ДокАвто.Оплата.ПолучитьПозицию(),ДокАвто.Приход.ПолучитьПозицию());
			ТабОтчета.Аванс				= ?(ДокАвто.ТипЗаписи = Перечисление.ТипыЗаписейКнигиПокупок.ЗачетАванса, 1, 0);
			ТабОтчета.ВсегоПокупок 		= ДокАвто.Всего;
			ТабОтчета.СуммаБезНДС20 	= ДокАвто.БезНДС20;              
			ТабОтчета.НДС20 			= ДокАвто.НДС20;
			ТабОтчета.СуммаБезНДС10 	= ДокАвто.БезНДС10;
			ТабОтчета.НДС10 			= ДокАвто.НДС10;
			ТабОтчета.НДС0 				= ДокАвто.НДС0;
			ТабОтчета.СуммаСовсемБезНДС = ДокАвто.Освобождаемые;  
			Расшифр						= СоздатьОбъект("СписокЗначений"); 
			Расшифр.ДобавитьЗначение(ТабОтчета.Док, СокрЛП(ТабОтчета.Док.ПредставлениеВида()+" № "+ТабОтчета.Док.НомерДок +" от "+ТабОтчета.Док.ДатаДок) + " " + Формат(ТабОтчета.ВсегоПокупок,"Ч-15.2-"));
			ТабОтчета.Расшифровка 		=  Расшифр;   
			СчетаФактуры				= СоздатьОбъект("СписокЗначений"); 
			СчетаФактуры.ДобавитьЗначение(ТабОтчета.СчетФактура, СокрЛП(ТабОтчета.СчетФактура));
			ТабОтчета.СчетаФактуры		= СчетаФактуры;
			ТабОтчета.Период			= ДокАвто.ДатаДок;
			
			Если ПустоеЗначение(ДокАвто.СчетФактура) = 0 Тогда
				ДокОснование = ДокАвто.СчетФактура;			
				Если ДокОснование.Вид() = "ПоступлениеТоваров" Тогда
					Если ((ДокОснование.ВидПоступления=4) или (ДокОснование.ВидПоступления=13)) и (ДокОснование.ПокупателемВыставляетсяСчетФактураНаВозврат = 0) и (ДокОснование.ВариантОтраженияВозврата = 1) и (ПустоеЗначение(ДокОснование.ДатаНомерСчетаФактуры) = 1) Тогда
						ТабОтчета.Возврат = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************               
Процедура ПечатьДопЛиста(ТабОтчета,Режим = 0)
	
	НомерДопЛиста = ?(РежиФормированияДопЛистов=2,1,""); 

	ТекстВШапке = "Приложение N 4
	|к Правилам ведения журналов учета
	|полученных и выставленных счетов-фактур,
	|книг покупок и книг продаж при расчетах
	|по налогу на добавленную стоимость";  

	ДатаДопЛиста = "";
	ПериодДопЛиста = ""; 
	УстановленныйОтбор = "";

	Ном = 1;                  
	ИтогСуммаБезНДС20ДЛ=ИтогСуммаБезНДС20; 
	ИтогНДС20ДЛ=ИтогНДС20;
	ИтогСуммаБезНДС18ДЛ=ИтогСуммаБезНДС18; 
	ИтогНДС18ДЛ=ИтогНДС18;
	ИтогСуммаБезНДС10ДЛ=ИтогСуммаБезНДС10;
	ИтогНДС10ДЛ=ИтогНДС10;
	ИтогНДС0ДЛ = ИтогНДС0;
	ИтогСуммаСовсемБезНДСДЛ = ИтогСуммаСовсемБезНДС;
	ИтогВсегоДЛ = ИтогВсего;
		
	ПериодН = "";
	ПериодСт = "";   
	
	ПериодДопЛиста = ?(ТабОтчета.КоличествоСтрок() = 0,"",ТабОтчета.ПолучитьЗначение(1,"ДатаДопЛиста"));
	ДатаДопЛиста = ?(ТабОтчета.КоличествоСтрок() = 0,"",ТабОтчета.ПолучитьЗначение(1,"Период"));
	ПериодДопЛиста = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Месяц,ПериодСтр(НачМесяца(ПериодДопЛиста),КонМесяца(ПериодДопЛиста)),ПериодСтр(НачКвартала(ПериодДопЛиста),КонКвартала(ПериодДопЛиста)));
	
	Если Режим > 1 Тогда
		Таб.НоваяСтраница();
	Иначе
		Таб.ВывестиСекцию("УправлениеОтчетом");
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка");
	Таб.ВывестиСекцию("Итого");
	
	ТабОтчета.ВыбратьСтроки();
	Пока ТабОтчета.ПолучитьСтроку()=1 Цикл 
		ПериодН = ТабОтчета.Период;
	
		Если ПериодСт = "" Тогда   //первая строка
			ПериодСт = ПериодН;
		КонецЕсли;
		
		Если ПериодН <> ПериодСт Тогда 
			ПериодСт = ПериодН;
			Таб.ВывестиСекцию("Всего");
			ГлБух = ФИО(Константа.ГлБухгалтер.Получить( ДатаКонца ));
			Таб.ВывестиСекцию("Подвал");  
			Таб.НоваяСтраница();
			ПериодДопЛиста = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Месяц,ПериодСтр(НачМесяца(ТабОтчета.ДатаДопЛиста),КонМесяца(ТабОтчета.ДатаДопЛиста)),ПериодСтр(НачКвартала(ТабОтчета.ДатаДопЛиста),КонКвартала(ТабОтчета.ДатаДопЛиста))); 
			ДатаДопЛиста = ТабОтчета.Период;
			НомерДопЛиста = ?(РежиФормированияДопЛистов=2,НомерДопЛиста+1,"");
			Таб.ВывестиСекцию("Шапка");
			Таб.ВывестиСекцию("Итого2");
			Ном = 1;
		КонецЕсли;
		
		ПечСуммаБезНДС20ДЛ = 0;
		ПечНДС20ДЛ = 0; 
		ПечСуммаБезНДС18ДЛ = 0;
		ПечНДС18ДЛ = 0;        
		ПечСуммаБезНДС10ДЛ = ТабОтчета.СуммаБезНДС10;
		ПечНДС10ДЛ = ТабОтчета.НДС10;        
		ПечНДС0ДЛ = ТабОтчета.НДС0;
		ПечСуммаСовсемБезНДСДЛ = ТабОтчета.СуммаСовсемБезНДС;
		
		Если ТабОтчета.Возврат = 1 Тогда
			ПечКонтрагент = СокрЛП(Константа.НазваниеОрганизации);
			ПечИНН = СРЕД(Константа.ИННОрганизации,1,10);
			ПечКПП = СРЕД(Константа.ИННОрганизации,12);   		
		ИначеЕсли (ТабОтчета.Аванс <> 1) ИЛИ ((ВыводитьПокупателя = 1) и (СтандартнаяФорма = 0)) Тогда
			ПечКонтрагент = Наименование(ТабОтчета.Контрагент);
			ПечИНН = ТабОтчета.ИНН;
			ПечКПП = ТабОтчета.КПП;        
		Иначе
			ПечКонтрагент = СокрЛП(Константа.НазваниеОрганизации);
			ПечИНН = СРЕД(Константа.ИННОрганизации,1,10);
			ПечКПП = СРЕД(Константа.ИННОрганизации,12);   
		КонецЕсли;
		Если ТабОтчета.СуммаБезНДС20 <> 0  Тогда
			
			Ставка = Окр(100 * (ТабОтчета.НДС20/ТабОтчета.СуммаБезНДС20),0,1);  
			
			Если Ставка > 18 Тогда
				ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
				Если ДатаДокумента > '01.01.2004' Тогда
					Ставка = 18;
				КонецЕсли;
			КонецЕсли;
			
			Если (ТабОтчета.СуммаБезНДС20 <= 0.5) и (ТабОтчета.СуммаБезНДС20 > 0)Тогда
				ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
				Если ДатаДокумента < '01.01.2004' Тогда
					Ставка = Ставка;
				Иначе
					Ставка = 18;
				КонецЕсли;
			КонецЕсли;

			ОбщаяБаза = ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС10 + ТабОтчета.НДС0 + ТабОтчета.СуммаСовсемБезНДС;
			Если ((Ставка = 20) и (ОбщаяБаза <> ТабОтчета.ВсегоПокупок)) или 
				((Ставка = 17) и (ОбщаяБаза = ТабОтчета.ВсегоПокупок)) Тогда
				ПечСуммаБезНДС20ДЛ = ТабОтчета.СуммаБезНДС20;
				ПечНДС20ДЛ = ТабОтчета.НДС20; 
			Иначе
				ПечСуммаБезНДС18ДЛ = ТабОтчета.СуммаБезНДС20;
				ПечНДС18ДЛ = ТабОтчета.НДС20;
			КонецЕсли;
		КонецЕсли;
		
		Если ТабОтчета.Аванс <> 0 Тогда
		   	ПечСуммаБезНДС20ДЛ = 0; 
			ПечСуммаБезНДС18ДЛ = 0; 
			ПечСуммаБезНДС10ДЛ = 0;
			ПечНДС0ДЛ = 0;
			ПечСуммаСовсемБезНДСДЛ = 0;
		КонецЕсли;
		
		ИтогСуммаБезНДС20ДЛ=ИтогСуммаБезНДС20ДЛ+ПечСуммаБезНДС20ДЛ; 
		ИтогНДС20ДЛ=ИтогНДС20ДЛ+ПечНДС20ДЛ;
		ИтогСуммаБезНДС18ДЛ=ИтогСуммаБезНДС18ДЛ+ПечСуммаБезНДС18ДЛ; 
		ИтогНДС18ДЛ=ИтогНДС18ДЛ+ПечНДС18ДЛ;                        
		ИтогСуммаБезНДС10ДЛ=ИтогСуммаБезНДС10ДЛ+ПечСуммаБезНДС10ДЛ;
		ИтогНДС10ДЛ=ИтогНДС10ДЛ+ПечНДС10ДЛ;
		ИтогНДС0ДЛ=ИтогНДС0ДЛ+ПечНДС0ДЛ;                        
		ИтогСуммаСовсемБезНДСДЛ=ИтогСуммаСовсемБезНДСДЛ+ПечСуммаСовсемБезНДСДЛ;
		ИтогВсегоДЛ=ИтогВсегоДЛ+ТабОтчета.ВсегоПокупок;
		СписокРасшифровки = ТабОтчета.Расшифровка;
		Таб.ВывестиСекцию("Строка"); 
		Ном = Ном + 1; 
	КонецЦикла; 
			
	Таб.ВывестиСекцию("Всего");
	ГлБух = ФИО(Константа.ГлБухгалтер.Получить( ДатаКонца ));
	Таб.ВывестиСекцию("Подвал");
КонецПроцедуры   

//*****************************************************************************
// ФормированиеДопЛистов(ТабОтчета, ПериодДопЛиста, НачДата, КонДата)
//
// Параметры:
//  ПериодДопЛиста - дата конца корректируемого периода (дата последнего счета-
//                   фактуры, коррктировки которого должны попасти в отчет;
//
//  НачДата - начало корректируемого периода;
//  КонДата - конец корректируемого периода;
//
Процедура ФормированиеДопЛистов(ТабОтчета, ПериодДопЛиста, НачДата, КонДата)
	
	КнигаПокупок(НачДата, КонДата);
	ТабОтчета.УдалитьСтроки();
	
	Если РежиФормированияДопЛистов = 2 Тогда 
		Документы = СоздатьОбъект("Документ");
		Документы.УстановитьФильтр(1,0,0,0,0,1);
		Документы.ОбратныйПорядок(1);
		Документы.ВыбратьДокументы(НачДата,);
		Если Документы.ПолучитьДокумент() = 1 Тогда
			ДатаДопЛиста = Макс(Документы.ТекущийДокумент().ДатаДок,КонДата);
			
		Иначе
			ДатаДопЛиста = КонДата;
		КонецЕсли;
		ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста, НачДата, ДатаДопЛиста);
		ТабОтчета.Сортировать("+Период,+ДатаДопЛиста");
		
	Иначе
		
		// Получаем все дополнительные листы указанного периода ("ПериодДопЛиста"), включающие
		// корректировки счетов-фактур, произведенные до начала периода нашего отчета
		Если НачДата <= (ДатаНачала-1) Тогда
			ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста, НачДата, ДатаНачала-1);
			
			// Итоги полученных дополнительных листов добавляем к итогам основной книги
			ИтогСуммаБезНДС10 = ИтогСуммаБезНДС10 + ТабОтчета.Итог("СуммаБезНДС10");
			ИтогНДС10 = ИтогНДС10 + ТабОтчета.Итог("НДС10");
			ИтогНДС0 = ИтогНДС0  + ТабОтчета.Итог("НДС0");
			ИтогСуммаСовсемБезНДС = ИтогСуммаСовсемБезНДС + ТабОтчета.Итог("СуммаСовсемБезНДС");
			ТабОтчета.ВыбратьСтроки();
			СуммаБезНДС = 0; НДС20 = 0; СуммаБезНДС18 = 0; НДС18 = 0; 
			Пока ТабОтчета.ПолучитьСтроку() = 1 Цикл
				Если ТабОтчета.СуммаБезНДС20 <> 0  Тогда
					
					Ставка = Окр(100 * (ТабОтчета.НДС20/ТабОтчета.СуммаБезНДС20),0,1);  
					
					Если Ставка > 18 Тогда
						ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
						Если ДатаДокумента > '01.01.2004' Тогда
							Ставка = 18;
						КонецЕсли;
					КонецЕсли;
					
					Если (ТабОтчета.СуммаБезНДС20 <= 0.5) и (ТабОтчета.СуммаБезНДС20 > 0)Тогда
						ДатаДокумента = ?(ПустоеЗначение(ТабОтчета.СчетФактура) = 0,ТабОтчета.СчетФактура.ДатаДок,ТабОтчета.ДатаДок);
						Если ДатаДокумента < '01.01.2004' Тогда
							Ставка = Ставка;
						Иначе
							Ставка = 18;
						КонецЕсли;
					КонецЕсли;
					ОбщаяБаза = ТабОтчета.СуммаБезНДС20 + ТабОтчета.СуммаБезНДС10 + ТабОтчета.НДС0 + ТабОтчета.СуммаСовсемБезНДС;
					Если ((Ставка = 20) и (ОбщаяБаза <> ТабОтчета.ВсегоПокупок)) или 
					((Ставка = 17) и (ОбщаяБаза = ТабОтчета.ВсегоПокупок)) Тогда
						СуммаБезНДС20 =СуммаБезНДС20 +  ТабОтчета.СуммаБезНДС20;
						НДС20 = НДС20 + ТабОтчета.НДС20; 
					Иначе
						СуммаБезНДС18 =СуммаБезНДС18 + ТабОтчета.СуммаБезНДС20;
						НДС18 =НДС18 + ТабОтчета.НДС20;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ИтогСуммаБезНДС20 = ИтогСуммаБезНДС20 + СуммаБезНДС20;
			ИтогНДС20 = ИтогНДС20 + НДС20;
			ИтогСуммаБезНДС18 = ИтогСуммаБезНДС18 + СуммаБезНДС18;
			ИтогНДС18 = ИтогНДС18  + НДС18;
			ИтогВсего = ИтогВсего + ТабОтчета.Итог("ВсегоПокупок");
		КонецЕсли;
		
		// Получаем все записи доп. листов для печати. Это те записи, которые
		// были введены за период, указанный пользователем в диалоге отчета.
		ТабОтчета.УдалитьСтроки();
		ДанныеДляДопЛиста(ТабОтчета, ПериодДопЛиста, ДатаНачала, ДатаКонца);
		ТабОтчета.Сортировать("+Период,+ДатаДопЛиста");
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
Процедура ДополнительныйЛист()  
	
	//Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ДопЛист_283");
	Таб.ИспользоватьФормат("Ч-15.2-"); 

	ТабОтчета = СоздатьОбъект("ТаблицаЗначений");
	ТабОтчета.НоваяКолонка("Док"); 
	ТабОтчета.НоваяКолонка("ДатаДопЛиста");
	ТабОтчета.НоваяКолонка("ВсегоПокупок");
	ТабОтчета.НоваяКолонка("НДС20");
	ТабОтчета.НоваяКолонка("СуммаБезНДС20");
	ТабОтчета.НоваяКолонка("НДС10");
	ТабОтчета.НоваяКолонка("СуммаБезНДС10");
	ТабОтчета.НоваяКолонка("НДС0");
	ТабОтчета.НоваяКолонка("СуммаСовсемБезНДС");
	ТабОтчета.НоваяКолонка("ДатаДок","Дата"); 
	ТабОтчета.НоваяКолонка("ДатаНомер"); 
	ТабОтчета.НоваяКолонка("ДатаОплаты");
	ТабОтчета.НоваяКолонка("СчетФактура");
	ТабОтчета.НоваяКолонка("ДатаОприходования");
	ТабОтчета.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	ТабОтчета.НоваяКолонка("ИНН");
	ТабОтчета.НоваяКолонка("КПП");
	ТабОтчета.НоваяКолонка("ГТД");
	ТабОтчета.НоваяКолонка("ПозицияДок"); 
	ТабОтчета.НоваяКолонка("Аванс", "Число");
	ТабОтчета.НоваяКолонка("Период");
	ТабОтчета.НоваяКолонка("Расшифровка","СписокЗначений");
	ТабОтчета.НоваяКолонка("СчетаФактуры","СписокЗначений");
	ТабОтчета.НоваяКолонка("Возврат");
    
    КоличествоМесяцевВПериоде = ?(Константа.НалоговыйПериодПоНДС.Получить(ДатаКонца) = Перечисление.НалоговыеПериодыПоНДС.Квартал, 3, 1);
	
	Режим = 0;
	Если РежиФормированияДопЛистов = 2 Тогда
		КонПериода = ?(КоличествоМесяцевВПериоде = 1, КонМесяца(ДатаНачала), КонКвартала(ДатаНачала));
		КонОтчета =  ?(КоличествоМесяцевВПериоде = 1, КонМесяца(ДатаКонца), КонКвартала(ДатаКонца));
		
		// Разобъем период, указанный в диалоге отчета, на отдельные налоговые периоды (месяцы или кварталы)
		Пока КонПериода <= КонОтчета Цикл
			НачДата = ?(КоличествоМесяцевВПериоде = 1, НачМесяца(КонПериода), НачКвартала(КонПериода));
						
			// Формируем дополнительные листы за очередной период
			ФормированиеДопЛистов(ТабОтчета, Мин(КонПериода, ДатаКонца), НачДата, КонПериода);
			
			Если ТабОтчета.КоличествоСтрок() > 0 Тогда
				ПечатьДопЛиста(ТабОтчета,Режим); 
				Режим = 2;
			КонецЕсли;
			
			КонПериода = КонМесяца(ДобавитьМесяц(КонПериода, КоличествоМесяцевВПериоде));
		КонецЦикла;
		
		Если Режим = 0 Тогда			
			ПечатьДопЛиста(ТабОтчета);	
		КонецЕсли;
		
	Иначе 
		ТабПериода = СоздатьОбъект("ТаблицаЗначений");
		
		// Определяем список корректируемых периодов (список периодов,
		// которые были скорректированы с ДатаНачала по ДатаКонца.
		ДанныеДляДопЛиста(ТабОтчета,, ДатаНачала, ДатаКонца);
		
		ТабОтчета.Выгрузить(ТабПериода,,,"ДатаДопЛиста");
		ТабПериода.ВыбратьСтроки();
		Пока ТабПериода.ПолучитьСтроку() = 1 Цикл
			ТабПериода.ДатаДопЛиста = ?(КоличествоМесяцевВПериоде = 1, КонМесяца(ТабПериода.ДатаДопЛиста), КонКвартала(ТабПериода.ДатаДопЛиста));
		КонецЦикла; 
		ТабПериода.Свернуть("ДатаДопЛиста",);
		ТабПериода.Сортировать("+ДатаДопЛиста"); 
		Если  ТабПериода.КоличествоСтрок()<>0 Тогда
			ТабПериода.ВыбратьСтроки(); 
			Пока ТабПериода.ПолучитьСтроку() = 1 Цикл
				НачДата = ?(КоличествоМесяцевВПериоде = 1, НачМесяца(ТабПериода.ДатаДопЛиста), НачКвартала(ТабПериода.ДатаДопЛиста));
				КонДата = ?(КоличествоМесяцевВПериоде = 1, КонМесяца(ТабПериода.ДатаДопЛиста), КонКвартала(ТабПериода.ДатаДопЛиста));
				
				// Формируем дополнительные листы за очередной период из тех периодов, которые были скорректированы
				// с ДатаНачала по ДатаКонца.
				ФормированиеДопЛистов(ТабОтчета, КонДата, НачДата, КонДата);
				
				Если ТабОтчета.КоличествоСтрок() > 0 Тогда
					ПечатьДопЛиста(ТабОтчета,Режим); 
					Режим = 2;
				КонецЕсли;			
			КонецЦикла;
			Если Режим = 0 Тогда
				ПечатьДопЛиста(ТабОтчета);	
			КонецЕсли;			
		Иначе
			ПечатьДопЛиста(ТабОтчета);	
		КонецЕсли;
	КонецЕсли;
	
	ВерхнийКолонтитул = "Дополнительный лист книги покупок";
	НижнийКолонтитул = "Отчет сформирован "+ТекущаяДата()+" "+ТекущееВремя()+?(ПустоеЗначение(ИмяПользователя())=0,"  Пользователь: "+ИмяПользователя(),"");
	Таб.Опции(0,0,1,2,"Параметры печати доп. листа книги покупок" );
	Таб.ОбластьПечати(2);
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Дополнительный лист книги покупок","");
    
КонецПроцедуры

//*****************************************************************************
Процедура Сформировать()
	
	Если ДатаНачала > ДатаКонца Тогда
		Предупреждение("Неправильно задан период формирования отчета!
						|Дата начала больше даты окончания периода.");
		Возврат;
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "КнигаПокупок");
    Расшифровка.Установить("ДатаНачала", ДатаНачала);
    Расшифровка.Установить("ДатаКонца", ДатаКонца);
	Расшифровка.Установить("ВариантФормирования", ВариантФормирования);
	
	Расшифровка.Установить("ПризнакЧастичнойОплаты", ПризнакЧастичнойОплаты);
	Расшифровка.Установить("ПризнакСвертки", ПризнакСвертки);
	Расшифровка.Установить("СтандартнаяФорма", СтандартнаяФорма);
	
	Расшифровка.Установить("ВыбКонтрагент", ВыбКонтрагент);
	Расшифровка.Установить("ГруппироватьПоКонтрагентам", ГруппироватьПоКонтрагентам);
	Расшифровка.Установить("КоррСчет", КоррСчет);
	Расшифровка.Установить("ВключатьАвансы", ВключатьАвансы);
	Расшифровка.Установить("ВыводитьПокупателя", ВыводитьПокупателя); 
	Расшифровка.Установить("РежиФормированияДопЛистов", РежиФормированияДопЛистов); 
	Расшифровка.Установить("ЮрЛицо", ЮрЛицо); //NDline
		
	Если (ТипЗначенияСтр(Таб) = "Таблица") и
		 (ТекущийВариантФормирования = ВариантФормирования) и
		 ((Обновить = 1) или (Обновить = 2)) Тогда
	
		Таб.Очистить();
		
	Иначе
	   	Таб = СоздатьОбъект("Таблица");
	КонецЕсли;
	
	Если ВариантФормирования = 1 Тогда
	    КнигаПокупок(ДатаНачала, ДатаКонца);
	ИначеЕсли ВариантФормирования = 2 Тогда
		ЖурналУчета();                     
	ИначеЕсли ВариантФормирования = 3 Тогда
		ДополнительныйЛист();
	КонецЕсли;
	
	Если Обновить = 2 Тогда
         СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
	
КонецПроцедуры	// Сформировать()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 

//*****************************************************************************
// Предопределенная процедура
//
// Описание:
//  Устанавливает начальные значения элементов диалога.
//
Процедура ПриОткрытии(Флаг)
	
	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;

		ДатаНачала = глРасшифровка.Получить("ДатаНачала");
		ДатаКонца = глРасшифровка.Получить("ДатаКонца");
		ВариантФормирования = глРасшифровка.Получить("ВариантФормирования");
		
		ПризнакСвертки =  глРасшифровка.Получить("ПризнакСвертки");
		ПризнакЧастичнойОплаты =  глРасшифровка.Получить("ПризнакЧастичнойОплаты"); 
		СтандартнаяФорма = глРасшифровка.Получить("СтандартнаяФорма");
		
		ВыбКонтрагент = глРасшифровка.Получить("ВыбКонтрагент");
		ГруппироватьПоКонтрагентам = глРасшифровка.Получить("ГруппироватьПоКонтрагентам");
		КоррСчет = глРасшифровка.Получить("КоррСчет");          
		ВключатьАвансы = глРасшифровка.Получить("ВключатьАвансы");
		ВыводитьПокупателя = глРасшифровка.Получить("ВыводитьПокупателя");
		РежиФормированияДопЛистов = глРасшифровка.Получить("РежиФормированияДопЛистов");
		ЮрЛицо = глРасшифровка.Получить("ЮрЛицо"); //NDline
        
		Если Обновить = 0 Тогда
		Иначе
			ТекущийВариантФормирования = ВариантФормирования;
			Таб = глТаблица;
		КонецЕсли;

		Если Обновить = 2 Тогда
		Иначе
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
	Иначе
		Обновить = 0;
		ДатаНачала = НачалоПериодаБИ();
		ДатаКонца = КонецПериодаБИ(); 
		ЮрЛицо = Константа.ОсновноеЮрЛицо; //NDline 
		Если Флаг = 0 Тогда
			ВариантФормирования = 1;
			СтандартнаяФорма = 1;
			ПризнакСвертки = 1;
			КоррСчет = СчетПоКоду("68.2");
			ВключатьАвансы = 1;
			ВыводитьПокупателя = 0;
			РежиФормированияДопЛистов = 1;
		КонецЕсли;
	КонецЕсли;
	УправлениеДиалогом(); 		 
КонецПроцедуры // ПриОткрытии() 
