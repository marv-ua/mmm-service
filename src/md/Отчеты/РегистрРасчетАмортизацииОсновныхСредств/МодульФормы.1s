//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если НачДата > КонДата Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.");
		Возврат 0;
	КонецЕсли;
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//*****************************************************************************
Процедура КорректировкаПериода()
	НачДата = НачМесяца(НачДата);
	КонДата = КонМесяца(КонДата);
КонецПроцедуры //ВводПериода

//*****************************************************************************
Процедура ВводПериода()
	ВвестиПериод(НачДата,КонДата);
	КорректировкаПериода();
КонецПроцедуры //ВводПериода

//*****************************************************************************
Процедура СформироватьСтрокиПоГруппировкам(ТабОС,Таб,ТекОбъект,ИтогПоОбъекту)
	Если ТабОС.КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если (ТекОбъект <> ТабОС.Объект) и (ГруппироватьПоОбъектам = 1) Тогда
		Если (ТабОС.НомерСтроки <> 1) Тогда
			ИтогСуммаПоГруппировке = ИтогПоОбъекту;
			ИтогПоОбъекту = 0;
			Таб.ВывестиСекцию("ИтогПоГруппировке|Общая1");
			Если ГруппироватьПоОбъектам = 0 Тогда
				Таб.ПрисоединитьСекцию("ИтогПоГруппировке|Объект");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("ИтогПоГруппировке|Общая2");
		КонецЕсли;
		Если ТабОС.НомерСтроки > 0 Тогда
			ЗначениеГруппировки = "Наименование объекта: " + ТабОС.Объект;
			Таб.ВывестиСекцию("Группировка|Общая1");
			Если ГруппироватьПоОбъектам = 0 Тогда
				Таб.ПрисоединитьСекцию("Группировка|Объект");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("Группировка|Общая2");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //СформироватьСтрокиПоГруппировкам

//******************************************************************************
// Производственное(ОсновноеСредство)
//
// Параметры:
//  ОсновноеСредство - основное средство.
//
// Возвращаемое значение:
//  1 - основное средство непосредственно используется при производстве товаров (работ, услуг);
//  0 - иное.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Функция определяет, используется ли основное средство непосредственно при производстве товаров (работ, услуг).
//
Функция Производственное(ОсновноеСредство)
	Перем НепосредственноИспользуетсяПриПроизводстве;
	
	НепосредственноИспользуетсяПриПроизводстве = 0;
	Если ОсновноеСредство.ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
        НепосредственноИспользуетсяПриПроизводстве = 1;
    КонецЕсли;
	
	Возврат НепосредственноИспользуетсяПриПроизводстве;
	
КонецФункции // Производственное()

//******************************************************************************
//
Процедура Сформировать()
	
	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;

	Состояние("Заполнение выходной таблицы...");
	
	Таб = СоздатьОбъект("Таблица");
	СтрНалогоплательщик = Константа.ОфициальноеНазваниеОрганизации;
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
		СтрНалогоплательщик = Константа.НазваниеОрганизации;	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации; 
	НазваниеАмортизационнойГруппы = ?(ПустоеЗначение(АмортизационнаяГруппа) = 1, "по всем", АмортизационнаяГруппа);
	
	Таб.ВывестиСекцию("Шапка1");
	
	Таб.ВывестиСекцию("Шапка2|Общая1");
	НК = 1;
	Если ГруппироватьПоОбъектам = 0 Тогда
		НК = 2;
		Таб.ПрисоединитьСекцию("Шапка2|Объект");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка2|Общая2");
	
	ТабОС = СоздатьОбъект("ТаблицаЗначений");
	ТабОС.НоваяКолонка("ДатаОперации","Дата");
	ТабОС.НоваяКолонка("Объект","Справочник.ОсновныеСредства");
	ТабОС.НоваяКолонка("ИнвентарныйНомер");
	ТабОС.НоваяКолонка("Производственное","Число");
	ТабОС.НоваяКолонка("МетодНачисленияАмортизации");
	ТабОС.НоваяКолонка("СпециальныйКоэффициент","Число");
	ТабОС.НоваяКолонка("Стоимость","Число");
	ТабОС.НоваяКолонка("ПолезныйСрок","Число");
	ТабОС.НоваяКолонка("СуммаАмортизации","Число");
	
	ДатаПереходаНаЛинейныйМетод ='01.01.2009';
	МатодНачисленияАмортизацииНУ = СоздатьОбъект("Периодический");
	МатодНачисленияАмортизацииНУ.ИспользоватьОбъект("МетодНачисленияАмортизацииНУ",);
	МатодНачисленияАмортизацииНУ.ОбратныйПорядок();
	МатодНачисленияАмортизацииНУ.ВыбратьЗначения('01.01.2009', КонДата);
	Пока МатодНачисленияАмортизацииНУ.ПолучитьЗначение() = 1 Цикл
		Если МатодНачисленияАмортизацииНУ.Значение = Перечисление.МетодыНачисленияАмортизации.Линейный Тогда
			ДатаПереходаНаЛинейныйМетод = МатодНачисленияАмортизацииНУ.ДатаЗнач;
		Иначе
			Прервать;
		КонецЕсли;											
	КонецЦикла;
	
	БИ = СоздатьОбъект("БухгалтерскиеИтоги");
	БИ.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства,,1,0);
	БИ.ВыполнитьЗапрос(НачДата,КонДата,"Н05.02",,,3,"Месяц","С");
	
	БухИтЛ = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИтЛ .Актуальность(1);
	БухИтЛ.ПериодМ(ДатаПереходаНаЛинейныйМетод);
	
	БИН0501 = СоздатьОбъект("БухгалтерскиеИтоги");
	БИН0501.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства,,1,0);
	БИН0501.ВыполнитьЗапрос(НачДата, КонДата, "Н05.01,Н05.МЦ",,,, "Месяц", "С");
        
	НачислятьАмортизацию = СоздатьОбъект("Периодический");
	
	СуммаАмортизацииПроизв = 0;
	СуммаАмортизацииНеПроизв = 0;
	БИ.ВыбратьСубконто(ВидыСубконто.ОсновныеСредства);
	Пока БИ.ПолучитьСубконто(ВидыСубконто.ОсновныеСредства) = 1 Цикл
		ОсновноеСредство = БИ.Субконто(ВидыСубконто.ОсновныеСредства);
		Состояние1 = ОсновноеСредство.Состояние.Получить(ДатаПереходаНаЛинейныйМетод); 
		Состояние2 = ОсновноеСредство.Состояние.Получить('31.12.2008');     
		
		// фильтр по указанной в диалоге амортизационной группе (если она выбрана).
		Если (ПустоеЗначение(АмортизационнаяГруппа) = 0) и (АмортизационнаяГруппа <> ОсновноеСредство.АмортизационнаяГруппа) Тогда
		    Продолжить;
		КонецЕсли;
		
		МетодНачисленияАмортизации = ОсновноеСредство.МетодНачисленияАмортизации;
		НачислятьАмортизацию.ИспользоватьОбъект("НачислятьАмортизацию", ОсновноеСредство);
		ДатаНачисленияАмортизации = Макс(ДобавитьМесяц(ОсновноеСредство.ДатаВводаВЭксплуатацию, 1), '01.01.02');
		КоличествоМесяцевПолезногоИспользования = 0;
		
		БИН0501.ПолучитьСубконто(ВидыСубконто.ОсновныеСредства,,ОсновноеСредство);
		БИ.ВыбратьПериоды(, 2);
		Пока БИ.ПолучитьПериод() = 1 Цикл
			Если (БИ.НачДата >='01.01.2009') Тогда
				Если (Константа.МетодНачисленияАмортизацииНУ.Получить(БИ.НачДата) = Перечисление.МетодыНачисленияАмортизации.Нелинейный) Тогда
					
					Если (((ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)
					ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДевятаяГруппа)
					ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ДесятаяГруппа)) 
					И ((ОсновноеСредство.Группа = Перечисление.ГруппыОС.Здания) 
					ИЛИ (ОсновноеСредство.Группа = Перечисление.ГруппыОС.Сооружения) 
					ИЛИ (ОсновноеСредство.Группа = Перечисление.ГруппыОС.ПередаточныеУстройства)))
					ИЛИ (ОсновноеСредство.АмортизационнаяГруппа = Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа) Тогда
					
					Иначе						
						Продолжить;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ТабОС.НоваяСтрока();
			ТабОС.ДатаОперации = БИ.НачДата;
			ОсновноеСредство.ИспользоватьДату(БИ.КонДата,1);
			ТабОС.ИнвентарныйНомер = ОсновноеСредство.Код;
			ТабОС.Объект = ОсновноеСредство;
			ТабОС.Производственное = Производственное(ОсновноеСредство);
			ТабОС.СпециальныйКоэффициент = ОсновноеСредство.СпециальныйКоэффициент;
			Стоимость = 0;
			
			Пока ДатаНачисленияАмортизации < БИ.НачДата Цикл
				КоличествоМесяцевПолезногоИспользования = КоличествоМесяцевПолезногоИспользования + НачислятьАмортизацию.ЗначениеНаДату(ДатаНачисленияАмортизации);
				ДатаНачисленияАмортизации = КонМесяца(ДобавитьМесяц(ДатаНачисленияАмортизации, 1));
			КонецЦикла;                               
			КоличествоМесяцевДоКонцаПолезногоСрока = Макс(ОсновноеСредство.СрокПолезногоИспользованияН - КоличествоМесяцевПолезногоИспользования, 0);
			
			Если БИН0501.Субконто(ВидыСубконто.ОсновныеСредства) = ОсновноеСредство Тогда
				Если БИН0501.ПолучитьПериод(,БИ.НачДата) = 1 Тогда 
					БИН0501.ВыбратьСчета();					
					Пока БИН0501.ПолучитьСчет() = 1 Цикл
						ПервоначальнаяСтоимость = БИН0501.СНД() + БИН0501.ДО();										
						Если (БИ.НачДата >='01.01.2009') И (МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный) Тогда
							
							Если (ПустоеЗначение(Состояние1) = 1)
							ИЛИ ((ПустоеЗначение(Состояние2) = 0) И (ОсновноеСредство.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный)) Тогда 
								Стоимость = ПервоначальнаяСтоимость; // балансовая
								МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный;
							Иначе
								
								ЛинейныйБалансоваяСтоимостьНалог       = ПервоначальнаяСтоимость;
								
								ЛинейныйНачисленнаяАмортизацияНалог    = БухИтЛ.СНК("Н05.02",,, ОсновноеСредство);
								ЛинейныйКапВложенияНаправленныеНаРасходы = БухИтЛ.СНД("Н05.КВ",,, ОсновноеСредство);
								ЛинейныйБалансоваяСтоимостьНалог = ЛинейныйБалансоваяСтоимостьНалог - ЛинейныйКапВложенияНаправленныеНаРасходы;
								Если ЛинейныйБалансоваяСтоимостьНалог <> 0 Тогда
									ЛинейныйОстаточнаяСтоимостьНалог = ЛинейныйБалансоваяСтоимостьНалог - ЛинейныйНачисленнаяАмортизацияНалог;
								КонецЕсли;
								
								Стоимость = ЛинейныйОстаточнаяСтоимостьНалог; //остаточная
								МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный;
							КонецЕсли;
						ИначеЕсли МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный Тогда
							Стоимость = ПервоначальнаяСтоимость; // балансовая
						ИначеЕсли МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
							Стоимость = ПервоначальнаяСтоимость - БИ.СНК(); //остаточная
							Если Стоимость < 0.2 * ПервоначальнаяСтоимость Тогда
								Стоимость = ОсновноеСредство.БазоваяСтоимость; //базовая
							КонецЕсли;
						КонецЕсли; 
					КонецЦикла;					
				КонецЕсли;
			КонецЕсли;
			ТабОС.МетодНачисленияАмортизации = МетодНачисленияАмортизации;
			ТабОС.Стоимость = Стоимость;
			ТабОС.СуммаАмортизации = БИ.КО();
			Если Производственное(ОсновноеСредство) = 1 Тогда
				СуммаАмортизацииПроизв = СуммаАмортизацииПроизв + ТабОС.СуммаАмортизации;
			Иначе
				СуммаАмортизацииНеПроизв = СуммаАмортизацииНеПроизв + ТабОС.СуммаАмортизации;
			КонецЕсли;
			
			ТабОС.ПолезныйСрок = КоличествоМесяцевДоКонцаПолезногоСрока; 
			Если ОсновноеСредство.МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
				Если Стоимость < 0.2 * ПервоначальнаяСтоимость Тогда
					ДатаВводаВЭксплуатацию = Макс(ОсновноеСредство.ДатаВводаВЭксплуатацию, '31.12.2001');
					КоличествоПолныхМесяцев = (ДатаГод(КонМесяца(БИ.КонДата)) - ДатаГод(КонМесяца(ДатаВводаВЭксплуатацию)+1)) * 12 
					+ ДатаМесяц(КонМесяца(БИ.КонДата)) - ДатаМесяц(КонМесяца(ДатаВводаВЭксплуатацию) + 1);
					ТабОС.ПолезныйСрок = ОсновноеСредство.СрокПолезногоИспользованияН - КоличествоПолныхМесяцев;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
    
	СтрокаСортировки = "";
	Если ГруппироватьПоОбъектам = 1 Тогда
		СтрокаСортировки = "ИнвентарныйНомер";
	КонецЕсли;
    СтрокаСортировки = СтрокаСортировки  + ?(ПустаяСтрока(СтрокаСортировки) = 0, ",","") + "ДатаОперации";
	ТабОС.Сортировать(СтрокаСортировки);

	ИтогПоОбъекту = 0;
	ИтогПоНазначению = 0;
	ТабОС.ВыбратьСтроки();
	ТекОбъект = "";
	Пока ТабОС.ПолучитьСтроку() = 1 Цикл
		
		СформироватьСтрокиПоГруппировкам(ТабОС,Таб,ТекОбъект,ИтогПоОбъекту);
		
		ПризнакПринадлежности = ?(ТабОС.Производственное = 1, "Да", "Нет");
		
		НаименованиеОбъекта = ТабОС.Объект.Наименование + ", Инв. №" + ТабОС.Объект.Код;
		ДатаОперации = Формат(ТабОС.ДатаОперации,"Д ММММГГГГ");
		СпециальныйКоэффициент = ТабОС.СпециальныйКоэффициент;
		МетодНачисленияАмортизации = Сред(Строка(ТабОС.МетодНачисленияАмортизации),1,Найти(Строка(ТабОС.МетодНачисленияАмортизации),"метод")-1);
		Стоимость = ТабОС.Стоимость;
		СуммаАмортизации = ТабОС.СуммаАмортизации;
		ИтогПоОбъекту = ИтогПоОбъекту + СуммаАмортизации;
		ИтогПоНазначению = ИтогПоНазначению + СуммаАмортизации;
		ПолезныйСрок = ТабОС.ПолезныйСрок;
		Таб.ВывестиСекцию("Строка|Общая1");
		Если ГруппироватьПоОбъектам = 0 Тогда
			Таб.ПрисоединитьСекцию("Строка|Объект");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Общая2");
		ТекОбъект = ТабОС.Объект;
	КонецЦикла;
	ТекОбъект = 0;
	СформироватьСтрокиПоГруппировкам(ТабОС,Таб,ТекОбъект,ИтогПоОбъекту);
	Таб.Область(Таб.ВысотаТаблицы(),2,Таб.ВысотаТаблицы(), 9 - ГруппироватьПоОбъектам).РамкаСнизу(3);
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);
	
	Таб.ВывестиСекцию("Подвал");
   
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрРасчетАмортизацииОС", "ОкноРегистрРасчетАмортизацииОС");
	Таб.Показать("Регистр-расчет амортизации основных средств");
	
КонецПроцедуры // Сформировать


//*****************************************************************************
//
// Предопределенная процедура
//
Процедура ПриОткрытии()
	НачДата = НачалоПериодаБИ();
	КонДата = КонецПериодаБИ();
КонецПроцедуры //ПриОткрытии
