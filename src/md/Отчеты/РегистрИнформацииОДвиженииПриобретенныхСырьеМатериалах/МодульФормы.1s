Перем ДатаНачалаНалоговогоПериода2003;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//           
//******************************************************************************
// ПроверкаПериода()
//
// Возвращаемое значение:
//  1 - корректно выбран период в диалоге
//  0 - не корректно выбран период в диалоге
//
// Описание:
// Функция проверяет корректность ввода интервала дат в дилоге и рассчитаны ли итоги за заданный период
//
Функция ПроверкаПериода()
	
	Если (НачДата > КонДата) Тогда
		Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
		               "Дата начала больше даты окончания периода.", 60);
		Возврат 0;

	ИначеЕсли ПустоеЗначение(ДатаНачалаНалоговогоПериода2003) = 0 Тогда
		
		Если ((НачДата < ДатаНачалаНалоговогоПериода2003)
		   и  (КонДата >= ДатаНачалаНалоговогоПериода2003)) Тогда
			Предупреждение("Неправильно задан период формирования отчета!"+РазделительСтрок+
			               "В выбранном интервале налоговый учет велся по"+РазделительСтрок+
						   "разным правилам."+РазделительСтрок+
						   "Отчет за данный период сформировать невозможно!", 60);
			Возврат 0;
		    
		КонецЕсли;

	КонецЕсли;

	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".", 60);
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ПроверкаПериода()

//******************************************************************************
Процедура Сформировать()    
	
	глНовыеПравилаВеденияНУ(КонДата, ДатаНачалаНалоговогоПериода2003);

	Если ПроверкаПериода() = 0 Тогда
		Возврат;
	КонецЕсли;
	               
	// подготовка "Шапки"
	Таб = СоздатьОбъект("Таблица"); 
	СтрНалогоплательщик = СокрЛП(Константа.ОфициальноеНазваниеОрганизации);
	Если ПустаяСтрока(СтрНалогоплательщик) = 1 Тогда
	СтрНалогоплательщик = СокрЛП(Константа.НазваниеОрганизации);	    
	КонецЕсли;
	ИНН = Константа.ИННОрганизации;
	
	Заголовок = "Регистр информации о движении приобретенных материалов, учитываемых по методу средней себестоимости";

	Если глНовыеПравилаВеденияНУ(КонДата) = 1 Тогда

		// ФОРМИРОВАНИЕ С УЧЕТОМ НОВЫХ ПРАВИЛ НАЛОГОВОГО УЧЕТА РЕДАКЦИИ 4.4
		СпособРасчетаСебестоимости = глСпособРасчетаСебестоимостиНоменклатуры(КонДата);

		ВыбранныйОбъект = ВыбранныйМатериал;

		Заголовок = Заголовок + РазделительСтрок + "(движения материалов)";
		Таб.ИсходнаяТаблица("МатериалыНаСкладах2003");
		СчетУчетаНоменклатуры = СчетПоКоду("Н02.01");
		
		// таблица значений для обобщения результов расчета
        ТаблицаНоменклатуры = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаНоменклатуры.НоваяКолонка("Номенклатура", "Справочник");
		ТаблицаНоменклатуры.НоваяКолонка("НачСальдоКол", "Число", 15, 3);
		ТаблицаНоменклатуры.НоваяКолонка("НачСальдо",    "Число", 15, 2);
		ТаблицаНоменклатуры.НоваяКолонка("РасшифровкаДвижений", "ТаблицаЗначений");
		
		ДатаВМесяце = НачМесяца(НачДата);
        КоличествоВызовов = 0;
		Пока НачМесяца(ДатаВМесяце) <= НачМесяца(КонДата) Цикл

			НачДатаРасчета = Макс(НачДата, НачМесяца(ДатаВМесяце));
			КонДатаРасчета = Мин(КонДата, КонМесяца(ДатаВМесяце));
			
			Если СпособРасчетаСебестоимости <> "по средней" Тогда
				// подготовка итогов для расчета средневзешенной цены за месяц
				ИтогиДляРасчета = СоздатьОбъект("БухгалтерскиеИтоги");
				ИтогиДляРасчета.ПериодМ(ДатаВМесяце);
			КонецЕсли;
	
			БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
			БухИт.ИспользоватьПланСчетов(ОсновнойПланСчетов());

			Если ВыбранныйОбъект.Выбран() = 1 Тогда
				БухИт.ИспользоватьСубконто(СчетУчетаНоменклатуры.ВидСубконто(1), ВыбранныйОбъект, 1);
				
			Иначе
				БухИт.ИспользоватьСубконто(СчетУчетаНоменклатуры.ВидСубконто(1), , 1);
				
			КонецЕсли;
				
			БухИт.ВыполнитьЗапрос(НачДатаРасчета, КонДатаРасчета, "Н02.01,Н02.09",,, 1, "Проводка", "СК");
	        
			БухИт.ВыбратьСчета();
			Пока БухИт.ПолучитьСчет()=1 Цикл
				СчетУчетаНоменклатуры=БухИт.Счет;
				КоличествоВызовов = КоличествоВызовов + 1;
				БухИт.ВыбратьСубконто(1);
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					
					Стр = "";
					Если ТаблицаНоменклатуры.НайтиЗначение(БухИт.Субконто(1), Стр, "Номенклатура") = 1 Тогда
						Если КоличествоВызовов = 2 Тогда
						    ТаблицаНоменклатуры.УстановитьЗначение(Стр, "НачСальдоКол",(ТаблицаНоменклатуры.ПолучитьЗначение(Стр, "НачСальдоКол")+БухИт.СНД("К")));
							ТаблицаНоменклатуры.УстановитьЗначение(Стр, "НачСальдо",(ТаблицаНоменклатуры.ПолучитьЗначение(Стр, "НачСальдо")+БухИт.СНД("С")));
						КонецЕсли;
						// По этой номенклатурной позиции уже были движения
						ТаблицаДвижений = ТаблицаНоменклатуры.ПолучитьЗначение(Стр, "РасшифровкаДвижений");
						
					Иначе
						// Создаем новый элемент таблицы
						ТаблицаНоменклатуры.НоваяСтрока();
						Стр = ТаблицаНоменклатуры.НомерСтроки;
						
						ТаблицаДвижений = СоздатьОбъект("ТаблицаЗначений");
						ТаблицаДвижений.НоваяКолонка("ДатаОперации","Дата");
						ТаблицаДвижений.НоваяКолонка("ТекДок");
						ТаблицаДвижений.НоваяКолонка("ОснованиеОперации");
						ТаблицаДвижений.НоваяКолонка("ПриходКоличество",   "Число", 15, 3);
						ТаблицаДвижений.НоваяКолонка("ПриходСумма",		   "Число", 15, 2);
						ТаблицаДвижений.НоваяКолонка("ВозвратКоличество",  "Число", 15, 3);
						ТаблицаДвижений.НоваяКолонка("ВозвратСумма",	   "Число", 15, 2);
						ТаблицаДвижений.НоваяКолонка("ОтгруженоКоличество","Число", 15, 3);
						ТаблицаДвижений.НоваяКолонка("ОтгруженоСумма",	   "Число", 15, 2);
						ТаблицаДвижений.НоваяКолонка("СписаниеКоличество", "Число", 15, 3);
						ТаблицаДвижений.НоваяКолонка("СписаниеСумма",	   "Число", 15, 2);
						ТаблицаДвижений.НоваяКолонка("СписаниеЦена",	   "Число", 15, 2);
						
						ТаблицаНоменклатуры.Номенклатура = БухИт.Субконто(1);
						ТаблицаНоменклатуры.НачСальдоКол = БухИт.СНД("К");
						ТаблицаНоменклатуры.НачСальдо	 = БухИт.СНД("С");
						
					КонецЕсли;
					
					Если СпособРасчетаСебестоимости <> "по средней" Тогда
						// Для алгоритма расчета себестоимости по средневзвешенной
						СписаноЗаМесКол = ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1));
						СписаноЗаМесСум = ИтогиДляРасчета.КО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1));
						ПриходЗаМесКол  = ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "К", , БухИт.Субконто(1));
						ПриходЗаМесСум  = ИтогиДляРасчета.ДО(СчетУчетаНоменклатуры, "С", , БухИт.Субконто(1));
						
						ПриходПоРасчетуКол = 0;
						ПриходПоРасчету = 0;
						СписаноПоРасчетуКол = 0;
						СписаноПоРасчету = 0;
					КонецЕсли;
					
					БухИт.ВыбратьПериоды();
					Пока БухИт.ПолучитьПериод() = 1 Цикл
						
						Опер = БухИт.Операция;
						Если (Опер.Дебет.Счет=СчетПоКоду("Н02.09")) и (Опер.Кредит.Счет=СчетПоКоду("Н02.01")) Тогда
						    Продолжить;
						КонецЕсли;
						
						ТаблицаДвижений.НоваяСтрока();
						
						// Определение даты операции
						ТаблицаДвижений.ДатаОперации = Опер.ДатаОперации;
						ТаблицаДвижений.ТекДок = Опер.Документ.ТекущийДокумент();
						
						// Определение сумм и количества
						
						Если БухИт.ВыбранаПоДт() = 1 Тогда
							// поступление или отгрузка без перехода права собственности
							ОснОпер = Опер.Дебет.Основание;
							
							Если Опер.Дебет.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
								// возврат ТМЦ поставщику
								ТаблицаДвижений.ВозвратКоличество = -БухИт.ДО("К");
								ТаблицаДвижений.ВозвратСумма      = -БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ВозвратКоличество <> 0, ТаблицаДвижений.ВозвратСумма/ТаблицаДвижений.ВозвратКоличество,0), 2);
								
							Иначе
								// поступление ТМЦ
								ТаблицаДвижений.ПриходКоличество = БухИт.ДО("К");
								ТаблицаДвижений.ПриходСумма 	 = БухИт.ДО("С");
								ТаблицаДвижений.СписаниеЦена      = Окр(?(ТаблицаДвижений.ПриходКоличество <> 0, ТаблицаДвижений.ПриходСумма/ТаблицаДвижений.ПриходКоличество,0), 2);
							КонецЕсли;
							
						Иначе
							// выбытие
							ОснОпер = Опер.Кредит.Основание;
							
							Если СпособРасчетаСебестоимости = "по средней" Тогда
								// расчет себестоимости ведется по "средней скользящей"
								ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
								ТаблицаДвижений.СписаниеСумма      = БухИт.КО("С");
								ТаблицаДвижений.СписаниеЦена  = ?(БухИт.СКД("К") <> 0, Окр(БухИт.СКД("С")/БухИт.СКД("К"),2), 0);
								
							Иначе // расчет по средневзвешеноой
								Если БухИт.КО("К") = 0 Тогда // это корректировка
									ТаблицаДвижений.УдалитьСтроку();
									Продолжить;
								КонецЕсли;
								
								Если Опер.Кредит.УсловияПоступленияИВыбытия = Перечисление.УсловияПоступленияИВыбытия.Возврат Тогда
									ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
									ТаблицаДвижений.СписаниеСумма      = БухИт.КО("С");
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 2);
									
								Иначе // списание
									ТаблицаДвижений.СписаниеКоличество = БухИт.КО("К");
									СписаноПоРасчетуКол = СписаноПоРасчетуКол + ТаблицаДвижений.СписаниеКоличество;
									Если СписаноПоРасчетуКол <> 0 Тогда
										ТаблицаДвижений.СписаниеСумма = Окр(СписаноПоРасчетуКол * СписаноЗаМесСум/СписаноЗаМесКол, 2) - СписаноПоРасчету;
									КонецЕсли;
									СписаноПоРасчету = СписаноПоРасчету + ТаблицаДвижений.СписаниеСумма;
									ТаблицаДвижений.СписаниеЦена = Окр(ТаблицаДвижений.СписаниеСумма/ТаблицаДвижений.СписаниеКоличество, 2);
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
						// определяем основание списания 
						Если ПустоеЗначение(ОснОпер) = 0 Тогда
							ТаблицаДвижений.ОснованиеОперации = "" + СокрЛП(глПолноеНаименование(ОснОпер.Владелец));
							ТаблицаДвижений.ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации + ", " + ОснОпер;
							ТаблицаДвижений.ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации + " на основании: " + СокрЛП(Опер.ПервичныйДокумент);
							
						Иначе
							ТаблицаДвижений.ОснованиеОперации = "" + СокрЛП(Опер.СодержаниеПроводки) + " на основании: " + СокрЛП(Опер.ПервичныйДокумент);
							
						КонецЕсли;
						
					КонецЦикла;
					
					ТаблицаНоменклатуры.УстановитьЗначение(Стр, "РасшифровкаДвижений", ТаблицаДвижений);
					
				КонецЦикла; 
			КонецЦикла;
			КоличествоВызовов = КоличествоВызовов + 1;
			
			// переходим к следующему месяцу в периоде формирования отчета
			ДатаВМесяце = ДобавитьМесяц(ДатаВМесяце, 1);
			
		КонецЦикла;
		
		ТаблицаНоменклатуры.Сортировать("Номенклатура");
		
		// печать таблицы
		Таб.ВывестиСекцию("Шапка");

		ВсегоПриходКоличество = 	0;
		ВсегоПриходСумма = 			0;
		ВсегоВозвратКоличество = 	0;
		ВсегоВозвратСумма = 		0;
		ВсегоСписаниеКоличество = 	0;
		ВсегоСписаниеСумма = 		0;
		ВсегоОтгруженоКоличество= 	0;
		ВсегоОтгруженоСумма = 		0;

		ТаблицаНоменклатуры.ВыбратьСтроки();

		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			ИтоговаяСтрока = "По материалу: """ + ТаблицаНоменклатуры.Номенклатура + """   Сальдо на начало периода (кол): " +
							 Формат(ТаблицаНоменклатуры.НачСальдоКол, "Ч10.2") + "; Сальдо на начало периода (сумма): " + Формат(ТаблицаНоменклатуры.НачСальдо, "Ч10.2");
	
			Таб.ВывестиСекцию("Номенклатура");

			ТаблицаДвижений = ТаблицаНоменклатуры.РасшифровкаДвижений;
			
			ОстатокКоличество = ТаблицаНоменклатуры.НачСальдоКол;
			ОстатокСумма 	  = ТаблицаНоменклатуры.НачСальдо;

			Если ТаблицаДвижений.КоличествоСтрок() <> 0 Тогда
				ТаблицаДвижений.ВыбратьСтроки();
				Пока ТаблицаДвижений.ПолучитьСтроку() = 1 Цикл
				    ДатаОперации =      ТаблицаДвижений.ДатаОперации;
					ТекДок = 			ТаблицаДвижений.ТекДок;
					ОснованиеОперации = ТаблицаДвижений.ОснованиеОперации;
					ПриходКоличество =  ТаблицаДвижений.ПриходКоличество;
					ПриходСумма =       ТаблицаДвижений.ПриходСумма;
					ВозвратКоличество = ТаблицаДвижений.ВозвратКоличество;
					ВозвратСумма =      ТаблицаДвижений.ВозвратСумма;
					СписаниеКоличество =ТаблицаДвижений.СписаниеКоличество;
					СписаниеСумма =     ТаблицаДвижений.СписаниеСумма;
					ОтгруженоКоличество=ТаблицаДвижений.ОтгруженоКоличество;
					ОтгруженоСумма =    ТаблицаДвижений.ОтгруженоСумма;
					СписаниеЦена =      ТаблицаДвижений.СписаниеЦена;
					
					// подсчет итогов операции
					ОстатокКоличество = ОстатокКоличество + (ПриходКоличество - ВозвратКоличество - СписаниеКоличество);
					ОстатокСумма 	  = ОстатокСумма + (ПриходСумма - ВозвратСумма - СписаниеСумма);

					Таб.ВывестиСекцию("Строка");

				КонецЦикла;
			КонецЕсли;
			
			// подсчет итогов по таблице
			ВсегоПриходКоличество = 	ВсегоПриходКоличество 	+ ТаблицаДвижений.Итог("ПриходКоличество");
			ВсегоПриходСумма = 			ВсегоПриходСумма 		+ ТаблицаДвижений.Итог("ПриходСумма");
			ВсегоВозвратКоличество = 	ВсегоВозвратКоличество 	+ ТаблицаДвижений.Итог("ВозвратКоличество");
			ВсегоВозвратСумма = 		ВсегоВозвратСумма 		+ ТаблицаДвижений.Итог("ВозвратСумма");
			ВсегоСписаниеКоличество = 	ВсегоСписаниеКоличество + ТаблицаДвижений.Итог("СписаниеКоличество");
			ВсегоСписаниеСумма = 		ВсегоСписаниеСумма 		+ ТаблицаДвижений.Итог("СписаниеСумма");
			ВсегоОтгруженоКоличество= 	ВсегоОтгруженоКоличество+ ТаблицаДвижений.Итог("ОтгруженоКоличество");
			ВсегоОтгруженоСумма = 		ВсегоОтгруженоСумма		+ ТаблицаДвижений.Итог("ОтгруженоСумма");

		КонецЦикла;

		Таб.ВывестиСекцию("Итоги");
		
	Иначе

		// ФОРМИРОВАНИЕ С УЧЕТОМ ПРАВИЛ НАЛОГОВОГО УЧЕТА, ДЕЙСТВОВАВШИХ ДО РЕДАКЦИИ 4.4
		Таб.ВывестиСекцию("Шапка");

		ТаблицаОбъектов = глСоздатьТаблицуОбъектов();
		                                           
		Если ПустоеЗначение(ВыбранныйМатериал) = 1 Тогда
			глЗаполнитьТаблицуОперациями(ТаблицаОбъектов, "Материалы", НачДата, КонДата, 0, 1, 2);
		Иначе
			глЗаполнитьТаблицуОперациями(ТаблицаОбъектов, ВыбранныйМатериал, НачДата, КонДата, 0, 1, 2);
		КонецЕсли;
		
		ТаблицаОбъектов.ВыбратьСтроки();
		Пока ТаблицаОбъектов.ПолучитьСтроку() = 1 Цикл
			Материал = ТаблицаОбъектов.Объект;
			
			Если ПустоеЗначение(ВыбранныйМатериал) = 0 Тогда
				Если Материал <> ВыбранныйМатериал Тогда
				    Продолжить;
				КонецЕсли;
				
			ИначеЕсли Материал.Вид() <> "Материалы" Тогда
				Продолжить;
			КонецЕсли;
			
			ТаблицаОперацийПоОбъекту = ТаблицаОбъектов.ТаблицаОперацийПоОбъекту;
			ИтогРасчета = глРассчитатьСтоимостьОбъекта(ТаблицаОбъектов,, Материал,,, НачДата, КонДата, 2);
			Если ТипЗначенияСтр(ИтогРасчета) = "Строка" Тогда
				Сообщить(ИтогРасчета, "!");
				Продолжить;
			КонецЕсли;
			Таб.ВывестиСекцию("Наименование");
			ОстатокКоличество = ТаблицаОбъектов.Количество;
			ОстатокСумма      = ТаблицаОбъектов.Сумма;
			
			// если не было движений по данному материалу, то просто покажем остатки
			Если  ТаблицаОперацийПоОбъекту.КоличествоСтрок() = 0 Тогда
				Таб.ВывестиСекцию("ОстаткиМатериала");    
				Продолжить;
			КонецЕсли;
			ТаблицаОперацийПоОбъекту.ВыбратьСтроки();
			Пока ТаблицаОперацийПоОбъекту.ПолучитьСтроку() = 1 Цикл
				ДатаОперации = ТаблицаОперацийПоОбъекту.ДатаОперации;
				СуммаСписания = 0;
				Таб.ВывестиСекцию("НачалоДня");
				
				ПриходКоличествоЗаДень   = 0;
				ПриходСуммаЗаДень        = 0;
				ВозвратКоличествоЗаДень  = 0;
				ВозвратСуммаЗаДень       = 0;
				СписаниеКоличествоЗаДень = 0;
				
				ТаблицаОперацийЗаДень = ТаблицаОперацийПоОбъекту.ТаблицаОперацийЗаДень;
				ТаблицаОперацийЗаДень.ВыбратьСтроки();
				Пока ТаблицаОперацийЗаДень.ПолучитьСтроку() = 1 Цикл
					КодОперации = ТаблицаОперацийЗаДень.КодОперации;
					Док = ТаблицаОперацийЗаДень.Документ;
					СтрокаДокумента = ТаблицаОперацийЗаДень.СтрокаДокумента;
					ОснованиеОперации = "";
					
					ПриходКоличество   = 0;
					ПриходСумма        = 0;
					ВозвратКоличество  = 0;
					ВозвратСумма       = 0;
					СписаниеКоличество = 0;
					Если КодОперации = 1 Тогда // расходы по приобретению 
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;
						
					ИначеЕсли КодОперации = 4 Тогда // возврат поставщикам
						ВозвратКоличество = -ТаблицаОперацийЗаДень.Количество;
						ВозвратСумма      = -ТаблицаОперацийЗаДень.Сумма;
					
					ИначеЕсли КодОперации = 6 Тогда // списание
						СписаниеКоличество = -ТаблицаОперацийЗаДень.Количество;
						СуммаСписания = СуммаСписания - ТаблицаОперацийЗаДень.Сумма;
				
					ИначеЕсли КодОперации = 9 Тогда // списание
						ПриходКоличество = ТаблицаОперацийЗаДень.Количество;
						ПриходСумма      = ТаблицаОперацийЗаДень.Сумма;	
						ОснованиеОперации = "Корректировка стоимости";
					КонецЕсли;
					ПриходКоличествоЗаДень   = ПриходКоличествоЗаДень + ПриходКоличество;
					ПриходСуммаЗаДень        = ПриходСуммаЗаДень + ПриходСумма;
					ВозвратКоличествоЗаДень  = ВозвратКоличествоЗаДень + ВозвратКоличество;
					ВозвратСуммаЗаДень       = ВозвратСуммаЗаДень + ВозвратСумма;
					СписаниеКоличествоЗаДень = СписаниеКоличествоЗаДень + СписаниеКоличество;
				
					Если ПустоеЗначение(СтрокаДокумента) = 0 Тогда
						Док.ПолучитьСтрокуПоНомеру(СтрокаДокумента);
				    	Если Док.Вид() = "СписаниеМатериаловТоваровПродукции" Тогда
							ОснованиеОперации = СокрЛП(Док.НаименованиеОперации);
					
						ИначеЕсли (Док.Вид() = "ОперацииВыбытияИмущества") или (Док.Вид() = "ОперацииПриобретенияИмущества") Тогда
							ОснованиеОперации = "" + СокрЛП(глПолноеНаименование(Док.Контрагент));
							Если ПустоеЗначение(Док.Договор) = 0 Тогда
								 ОснованиеОперации = ОснованиеОперации + ", " + Док.Договор;
							КонецЕсли;
					
						ИначеЕсли Док.Вид() = "РасходыНаОплатуТруда" Тогда	
							ОснованиеОперации = "Расходы на оплату труда (" + Док.Сотрудник + ")";
							
						ИначеЕсли Док.Вид() = "НачислениеНалогов" Тогда	
							ОснованиеОперации = "Начисление налогов (" + Док.ВидНалога + ")";
						КонецЕсли;
					КонецЕсли;
				
					Таб.ВывестиСекцию("Строка");                      
				КонецЦикла;
			
				Цена = Окр(ТаблицаОперацийПоОбъекту.Цена, 2);
				ОстатокКоличество = ТаблицаОперацийПоОбъекту.КоличествоНаКонецДня;
				ОстатокСумма      = ТаблицаОперацийПоОбъекту.СуммаНаКонецДня;
				ИтоговаяСтрока = "Цена за единицу на " + ДатаОперации + ": " + Формат(Цена, "Ч10.2") + "; сумма списания за день: "
			                 + Формат(СуммаСписания, "Ч15.2");
				Таб.ВывестиСекцию("КонецДня");
			КонецЦикла;	
		КонецЦикла;
		
	КонецЕсли;
	
	ОтветственныйЗаСоставление = ФИО(Константа.ОтветственныйЗаСоставлениеРегистровНУ);

	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.ОбластьПечати(,2,,);
	Таб.Опции(0, 0, 0, 0, "ПечатьРегистрИнформацииОДвиженииПриобретенныхСырьеМатериалах", "ОкноРегистрИнформацииОДвиженииПриобретенныхСырьеМатериалах");
	Таб.Показать("Регистр информации о движении приобретенного сырья/материалов, учитываемых по методу средней себестоимости");

КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(ФлагЧтенияНастройки) //предопределенная
	
	Если ФлагЧтенияНастройки = 1 Тогда
		Возврат
	КонецЕсли;
	НачДата = НачМесяца(РабочаяДата());
	КонДата = КонМесяца(РабочаяДата()); 
	БезРеализацииМатериаловОтгруженных = 1;
	
КонецПроцедуры // ПриОткрытии()