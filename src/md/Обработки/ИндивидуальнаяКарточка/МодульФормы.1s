////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем Год; // год формирования карточки
Перем ИмяФайлаСохраненияОтчета;
Перем ТекСотрудник;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
Процедура ПриВыбореСотрудника()
	
	Гражданство = "";
	Адрес = "";
	ДоговорНомер = "";
	П001 = "";
	П002 = "";
	П003 = "";
	П004 = "";
	ДатаДолжность = "";
	
	Если Сотрудник.Выбран() = 1 Тогда
		ФИО = Сотрудник.Наименование;
		ИНН = Сотрудник.ИНН;
		Должность = Сотрудник.Должность;
		ДокСерия = СокрП(Сотрудник.ДокументСерия);
		ДокНомер = СокрП(Сотрудник.ДокументНомер);
		ДокКемКогдаВыдан = СокрП(Сотрудник.ДокументКемВыдан);
		ДатаР = Сотрудник.ДатаРождения;
		Если Сотрудник.ТипСотрудника.Получить(КонГода("01.12."+Год)) = 1 Тогда
			ДоговорВид = "Трудовой";
		ИначеЕсли Сотрудник.ТипСотрудника.Получить(КонГода("01.12."+Год)) = 2 Тогда
			ДоговорВид = "Гражданско-правовой";
		КонецЕсли;
		
	Иначе
		ФИО = "";
		ИНН = "";
		Должность = "";
		ДокументСерия = "";
		ДокументНомер = "";
		ДокументКемКогдаВыдан = "";
		ДоговорВид = "";
		ДатаРождения = "";
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСотрудника()

//******************************************************************************
Функция УказатьСотрудника()
	Сотр = СоздатьОбъект("Справочник.Сотрудники");
	Если Сотр.Выбрать("Укажите сотрудника", "ДляВыбора") = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Сотрудник = Сотр.ТекущийЭлемент();
	ПриВыбореСотрудника();
	Возврат 1;
КонецФункции // УказатьСотрудника()

//******************************************************************************
// ОтчислениеВФонд(Фонд, Облагается, КонецМесяца)
// 
// Параметры:
//  Фонд         - Строка. Идентификатор фонда по справочнику "Налоги и отчисления".
//  Облагается   - Число. Налоговая база.
//  КонецМесяца  - Дата. Конец последнего месяа в году, до которого успели досчитать.
//
// Возвращаемое значение:
//  Число - Исчисленная сумма ЕСН с начала года в части конкретного фонда.
//
// Описание:
//  Исчисляет сумму единого социального налога в части определенного фонда,
// с начала года по последний месяц расчета.
//
Функция ОтчислениеВФонд(Фонд, Облагается, КонецМесяца)
	
	Налог = СоздатьОбъект("Справочник.НалогиИОтчисления");
	Ставка = СоздатьОбъект("Справочник.СтавкиНалогов");
	Если Налог.НайтиПоКоду(Фонд) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Ставка.ИспользоватьВладельца(Налог.ТекущийЭлемент());
	Ставка.ПорядокКодов();
	Если Ставка.ВыбратьЭлементы() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Если Константа.ИспользоватьРегрессивнуюШкалу.Получить(КонецМесяца) = Да Тогда
		Сумма = 0;
		ПредыдущийПредел = 0;
	    Пока (Ставка.ПолучитьЭлемент() = 1) и
			 (Облагается > Ставка.Предел.Получить(КонецМесяца)) Цикл
			Сумма = Сумма + 
				   (Ставка.Предел.Получить(КонецМесяца)-ПредыдущийПредел)*
				    Ставка.Процент.Получить(КонецМесяца)/100;
			ПредыдущийПредел = Ставка.Предел.Получить(КонецМесяца);
		КонецЦикла;
		Сумма = Сумма + (Облагается - ПредыдущийПредел)*
				Ставка.Процент.Получить(КонецМесяца)/100;
		Возврат Окр(Сумма, Метаданные.ТочностьСуммыПроводки);
	Иначе
		Ставка.ПолучитьЭлемент();
		Возврат Окр(Облагается*Ставка.Процент.Получить(КонецМесяца)/100, Метаданные.ТочностьСуммыПроводки);	
	КонецЕсли;
	
КонецФункции // ОтчислениеВФонд()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПЕРЕСЧЕТА ПОКАЗАТЕЛЕЙ ПРИ ВНЕСЕНИИ ИЗМЕНЕНИЙ В КАРТОЧКУ
//

//*****************************************************************************
// Процедура ПересчетКолонки(КолПр, КолСф, МесПр)
//
// Параметры:
//  КолПр - Строка. Общая начальная часть имен ячеек в колонке.
//  КолСф - Строка. Общая заключительная часть имен ячеек в колонке.
//  МесПр - Строка. Общая начальная часть имен редактируемых ячеек в колонке.
//
// Описание:
//  Вызывается после ввода в ячейки данных и обеспечивает пересчет сумм,
// исчисляеых нарастающим итогом  начала года, для этой колонки.
// зависимой информации.
//
Процедура ПересчетКолонки(КолПр, КолСф, МесПр)
	
	НачМесяц = 1;
	КонМесяц = 1;
	ВведеныДанные = 0;
	Для а = 1 по 12 Цикл
		Если (Таблица.Область(МесПр+Формат(а,"Ч(0)2")+КолСф).Значение = 0) и (ВведеныДанные = 0) Тогда
			НачМесяц = НачМесяц + 1;
		Иначе
			ВведеныДанные = 1;
			КонМесяц = а;
		КонецЕсли;
	КонецЦикла;
			
	ИтогоЗаГод = 0;		
	Для а = 1 по 12 Цикл
		Если (а < НачМесяц) или (а > КонМесяц) Тогда
			Таблица.Область(КолПр+Формат(а,"Ч(0)2")+КолСф).Текст = "";
		Иначе
			Таблица.Область(КолПр+Формат(а,"Ч(0)2")+КолСф).Текст = 
				ИтогоЗаГод + Таблица.Область(МесПр+Формат(а,"Ч(0)2")+КолСф).Значение;
			ИтогоЗаГод = Таблица.Область(КолПр+Формат(а,"Ч(0)2")+КолСф).Значение;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ПересчетКолонки()

//*****************************************************************************
// ИсчислитьНалог(Месяц)
//
// Параметры:
//  Месяц - Строка. Номер месяца строкой,длиной два символа.
//
// Описание:
//  Рассчитывает суммы налога.
//
Процедура ИсчислитьНалог(Месяц)
    
	БазаЕСН = Число(Таблица.Область("ОБЛ_ПФР_СНГ"+Месяц).Текст);
	БазаФСС = Число(Таблица.Область("ОБЛ_ФСС_СНГ"+Месяц).Текст);
	КонецМесяца = КонМесяца("01."+Месяц+"."+Строка(Год));
	НомМесяца = Число(Месяц);
	Если Месяц = "01" Тогда
		ПФР_Начисленный = 0;
		ФСС_Начисленный = 0;
		ФФОМС_Начисленный = 0;
		ТФОМС_Начисленный = 0;
	Иначе
		ПФР_Начисленный = Число(Таблица.Область("СНГ"+Формат(НомМесяца-1,"Ч(0)2")+"13").Текст);
		ФФОМС_Начисленный = Число(Таблица.Область("СНГ"+Формат(НомМесяца-1,"Ч(0)2")+"14").Текст);
		ТФОМС_Начисленный = Число(Таблица.Область("СНГ"+Формат(НомМесяца-1,"Ч(0)2")+"15").Текст);
		ФСС_Начисленный = Число(Таблица.Область("СНГ"+Формат(НомМесяца-1,"Ч(0)2")+"16").Текст);
	КонецЕсли;
	
	ПФР = ОтчислениеВФонд("ЕСН_ФБ",БазаЕСН,КонецМесяца)-ПФР_Начисленный;
	ФФОМС = ОтчислениеВФонд("ФФОМС",БазаЕСН,КонецМесяца)-ФФОМС_Начисленный;
	ТФОМС = ОтчислениеВФонд("ТФОМС",БазаЕСН,КонецМесяца)-ТФОМС_Начисленный;
	ФСС = ОтчислениеВФонд("ФСС",БазаФСС,КонецМесяца)-ФСС_Начисленный;
	
	Таблица.Область("П"+Месяц+"13").Значение = ПФР;
	Таблица.Область("П"+Месяц+"14").Значение = ФФОМС;
	Таблица.Область("П"+Месяц+"15").Значение = ТФОМС;
	ПересчетКолонки("СНГ", "13", "П");
	ПересчетКолонки("СНГ", "14", "П");
	ПересчетКолонки("СНГ", "15", "П");
	Таблица.Область("П"+Месяц+"16").Значение = ФСС;
	ПересчетКолонки("СНГ", "16", "П");

КонецПроцедуры // ИсчислитьНалог()

//*****************************************************************************
// Процедура ПриВводеДоходов()
//
// Описание:
//  Вызывается после ввода в ячейки данных и обеспечивает пересчет всей
// зависимой информации.
//
Процедура ПриВводеДоходов()
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	
	// Сначала пересчитаем сумму нарастающим итогом.
	Если Лев(Имя,5) = "ВСЕГО" Тогда
		КолПр = "ВСЕГО_СНГ";
		КолСф = "";
		МесПр = "ВСЕГО";
	Иначе
		КолПр = "СНГ";
		КолСф = Прав(Имя, 2);
		МесПр = "П";
	КонецЕсли;
	ПересчетКолонки(КолПр, КолСф, МесПр);
	
	НомерКолонки = ?(Лев(Имя,5)="ВСЕГО",3,Число(Сред(Имя,4,2)));
	Если (НомерКолонки > 3) и (НомерКолонки < 9) Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерКолонки = 17 Тогда
		Возврат;
	КонецЕсли;
	
	Месяц = ?(Лев(Имя,5)="ВСЕГО", Прав(Имя,2), (Сред(Имя,2,2)));
	
	Таблица.Область("ОБЛ_ПФР"+Месяц).Значение = 
		Таблица.Область("П"+Месяц+"02").Значение -
	    Таблица.Область("ВСЕГО"+Месяц).Значение;
	ПересчетКолонки("ОБЛ_ПФР_СНГ", "", "ОБЛ_ПФР");
	
	Таблица.Область("ОБЛ_ФСС"+Месяц).Значение = 
		Таблица.Область("П"+Месяц+"02").Значение -
	    Таблица.Область("ВСЕГО"+Месяц).Значение -
		Таблица.Область("П"+Месяц+"10").Значение;
	ПересчетКолонки("ОБЛ_ФСС_СНГ", "", "ОБЛ_ФСС");
	
	ИсчислитьНалог(Месяц);
	
КонецПроцедуры // ПриВводеДоходов()

//*****************************************************************************
// Процедура ПриВводеНалогов()
//
// Описание:
//  Вызывается после ввода данных в колонки с 13 по 17 и обеспечивает пересчет 
// строк с начала года.
//
Процедура ПриВводеНалогов()
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	ПересчетКолонки("СНГ", Прав(Имя, 2), "П");

КонецПроцедуры // ПриВводеНалогов()

//*****************************************************************************
// Процедура Обновить()
//
// Описание:
//  Пересчитывает все расчетные (нередактируемые) показатели.
//
Процедура Обновить()
	
	ПересчетКолонки("СНГ", "02", "П");
	ПересчетКолонки("ВСЕГО_СНГ", "", "ВСЕГО");
	Для а = 4 по 8 Цикл
		ПересчетКолонки("СНГ", Формат(а, "Ч(0)2"), "П");
	КонецЦикла;
	ПересчетКолонки("СНГ", "10", "П");
	ПересчетКолонки("СНГ", "17", "П");
	
	Для а = 1 по 12 Цикл
		Месяц = Формат(а, "Ч(0)2");
		Таблица.Область("ОБЛ_ПФР"+Месяц).Значение = 
			Таблица.Область("П"+Месяц+"02").Значение -
		    Таблица.Область("ВСЕГО"+Месяц).Значение;
		Таблица.Область("ОБЛ_ФСС"+Месяц).Значение = 
			Таблица.Область("П"+Месяц+"02").Значение -
		    Таблица.Область("ВСЕГО"+Месяц).Значение -
			Таблица.Область("П"+Месяц+"10").Значение;
	КонецЦикла;

	ПересчетКолонки("ОБЛ_ПФР_СНГ", "", "ОБЛ_ПФР");
	ПересчетКолонки("ОБЛ_ФСС_СНГ", "", "ОБЛ_ФСС");
	Для а = 13 по 16 Цикл
		ПересчетКолонки("СНГ", Формат(а, "Ч(0)2"), "П");
	КонецЦикла;

КонецПроцедуры // Обновить()

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ И ПРОЦЕДУРЫ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// 

//******************************************************************************
Процедура Сохранить(Спрашивать)
	
	Перем СписокСохранения;
	Перем СписокСотрудников;
	
	Если ПустаяСтрока(ИмяФайлаСохраненияОтчета)=1 Тогда
		Возврат;
	КонецЕсли;
	Если Спрашивать=1 Тогда
		Если Вопрос("Сохранить данные отчета?","Да+Нет",60)="Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Сотрудник.Выбран() = 0 Тогда
		Если УказатьСотрудника() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//Запись реквизитов справочника "Сотрудники".
	Если (ДатаГод(Сотрудник.ДатаПриема) = Год) и
		 (ДатаМесяц(Сотрудник.ДатаПриема) > 1) Тогда
		Сотр = СоздатьОбъект("Справочник.Сотрудники");
		Сотр.НайтиЭлемент(Сотрудник);
		а = ДатаМесяц(Сотрудник.ДатаПриема) - 1;
		ДоходОблагаемыйЕСН_СНачалаГода = Таблица.Область("ОБЛ_ПФР_СНГ"+Формат(а,"Ч(0)2")).Значение;
		ДоходОблагаемыйЕСН_ФСС_СНачалаГода = Таблица.Область("ОБЛ_ФСС_СНГ"+Формат(а,"Ч(0)2")).Значение;
		НачисленныйЕСН_ПФР_СНачалаГода = Таблица.Область("СНГ"+Формат(а,"Ч(0)2")+"13").Значение;
		НачисленныйЕСН_ФСС_СНачалаГода = Таблица.Область("СНГ"+Формат(а,"Ч(0)2")+"16").Значение;
		НачисленныйЕСН_ФОМС_СНачалаГода = Таблица.Область("СНГ"+Формат(а,"Ч(0)2")+"14").Значение;
		НачисленныйЕСН_ТОМС_СНачалаГода = Таблица.Область("СНГ"+Формат(а,"Ч(0)2")+"15").Значение;
		
		Если (Сотр.ДоходОблагаемыйЕСН_СНачалаГода <> ДоходОблагаемыйЕСН_СНачалаГода) или
			 (Сотр.ДоходОблагаемыйЕСН_ФСС_СНачалаГода <> ДоходОблагаемыйЕСН_ФСС_СНачалаГода) или
			 (Сотр.НачисленныйЕСН_ПФР_СНачалаГода <> НачисленныйЕСН_ПФР_СНачалаГода) или
			 (Сотр.НачисленныйЕСН_ФСС_СНачалаГода <> НачисленныйЕСН_ФСС_СНачалаГода) или
			 (Сотр.НачисленныйЕСН_ФОМС_СНачалаГода <> НачисленныйЕСН_ФОМС_СНачалаГода) или
			 (Сотр.НачисленныйЕСН_ТОМС_СНачалаГода <> НачисленныйЕСН_ТОМС_СНачалаГода) Тогда
		    Сотр.ДоходОблагаемыйЕСН_СНачалаГода = ДоходОблагаемыйЕСН_СНачалаГода;
			Сотр.ДоходОблагаемыйЕСН_ФСС_СНачалаГода = ДоходОблагаемыйЕСН_ФСС_СНачалаГода;
			Сотр.НачисленныйЕСН_ПФР_СНачалаГода = НачисленныйЕСН_ПФР_СНачалаГода;
			Сотр.НачисленныйЕСН_ФСС_СНачалаГода = НачисленныйЕСН_ФСС_СНачалаГода;
			Сотр.НачисленныйЕСН_ФОМС_СНачалаГода = НачисленныйЕСН_ФОМС_СНачалаГода;
			Сотр.НачисленныйЕСН_ТОМС_СНачалаГода = НачисленныйЕСН_ТОМС_СНачалаГода;
			Попытка
				Сотр.Записать();
				Сообщить("В справочник ""Сотрудники"" записаны начальные данные расчета ЕСН сотрудника "+Сотрудник);
			Исключение
				Предупреждение("Неудачная попытка записать начальные данные 
								|расчета ЕСН в справочник ""Сотрудники"".
								|Запись """+Сотрудник+""" заблокирована.");
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	// Запись налоговой карточки в файл.
	Таблица.Выгрузить(СписокСохранения);
	
	// Сохраним итоги по налоговой базе и начисленному налогу.
	СписокСохранения.Установить("БазаЕСН", Число(Таблица.Область("ОБЛ_ПФР_СНГ12").Текст));
	СписокСохранения.Установить("БазаФСС", Число(Таблица.Область("ОБЛ_ФСС_СНГ12").Текст));
	СписокСохранения.Установить("ПФР", Число(Таблица.Область("СНГ1213").Текст));
	СписокСохранения.Установить("ФСС", Число(Таблица.Область("СНГ1216").Текст));
	СписокСохранения.Установить("ФФОМС", Число(Таблица.Область("СНГ1214").Текст));
	СписокСохранения.Установить("ТФОМС", Число(Таблица.Область("СНГ1215").Текст));
	
	СписокСотрудников = СоздатьОбъект("СписокЗначений");
	
	Если ФС.СуществуетФайл(ИмяФайлаСохраненияОтчета) = 1 Тогда
		ЗначениеИзФайла(ИмяФайлаСохраненияОтчета, СписокСотрудников);
	КонецЕсли;
	СписокСотрудников.Установить(Сотрудник.Код, СписокСохранения);		
	
	ЗначениеВФайл(ИмяФайлаСохраненияОтчета, СписокСотрудников);
	
КонецПроцедуры // Сохранить()

//******************************************************************************
Процедура Восстановить(Спрашивать)

	Если ПустаяСтрока(ИмяФайлаСохраненияОтчета)=1 Тогда
		Возврат;
	КонецЕсли;
	Если Спрашивать=1 Тогда
		Если Вопрос("Текущие данные будут очищены! Восстановить?","Да+Нет")="Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Сотрудник.Выбран() = 0 Тогда
		Если УказатьСотрудника() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	СписокСохранения=СоздатьОбъект( "СписокЗначений" );
	СписокСотрудников=СоздатьОбъект( "СписокЗначений" );
	ЗначениеИзФайла(ИмяФайлаСохраненияОтчета, СписокСотрудников);
	Если СписокСотрудников.РазмерСписка() > 0 Тогда
		СписокСохранения = СписокСотрудников.Получить(Сотрудник.Код);
		Таблица.Загрузить(СписокСохранения);
	КонецЕсли;
	
	Обновить();
	
КонецПроцедуры // Восстановить()

//******************************************************************************
Процедура Очистить()
	
	Таблица.Область("ПолеЧисел").Значение=0;
	
КонецПроцедуры // Очистить()

//******************************************************************************
Процедура ПриПовторномВыбореСотрудника()
	
	Если Сотрудник = ТекСотрудник Тогда
		Возврат;
	
	ИначеЕсли ПустоеЗначение(ТекСотрудник) = 0 Тогда
		ПриВыбореСотрудника();
		Очистить();
		Восстановить(0);
		
	Иначе
		ПриВыбореСотрудника();
		Очистить();
	КонецЕсли;
	
КонецПроцедуры // ПриПовторномВыбореСотрудника()

//******************************************************************************
Процедура Заполнить()
	 	
	Если Сотрудник.Выбран() = 0 Тогда
		Если УказатьСотрудника() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Очистить();
	
	НачДата = Дата("01.01."+Год);
	КонДата = КонецРассчитанногоПериодаБИ();
	КонДата = Макс(НачДата, КонДата);
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат;
		
	ИначеЕсли ДатаГод(КонДата) > ДатаГод(НачДата) Тогда
		КонДата = Дата("31.12."+Год);
	КонецЕсли;

	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники, Сотрудник, 2); 
	БухИт.ИспользоватьСубконто(ВидыСубконто.ВидыНачислений);
	БухИт.ВыполнитьЗапрос(НачДата,КонДата,"НБ",,,,"Месяц");
	БухИт.ВыбратьПериоды(1);
	Пока БухИт.ПолучитьПериод() = 1 Цикл
		Если глСотрудникЧислитсяРаботающим(Сотрудник, БухИт.КонДата) = 0 Тогда
			Продолжить;
		КонецЕсли;
		Месяц = ДатаМесяц(БухИт.КонДата);
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.ОбъектНалогообложения) = 1 Тогда
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"02").Значение = БухИт.КО();
		КонецЕсли;
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.ИзСредствОрганизации) = 1 Тогда
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"08").Значение = БухИт.КО();
		КонецЕсли;
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.ЗаСчетФСС) = 1 Тогда
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"17").Значение = БухИт.КО();
		КонецЕсли;
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.НеОблагаетсяФСС) = 1 Тогда
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"10").Значение = БухИт.КО();
		КонецЕсли;
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.ЛьготыПФРиФОМС) = 1 Тогда
			ЛьготаПФРиФОМС = БухИт.КО();
		Иначе
			ЛьготаПФРиФОМС = 0;
		КонецЕсли;
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.ЛьготыФСС) = 1 Тогда
			ЛьготаФСС = БухИт.КО();
		Иначе
			ЛьготаФСС = 0;
		КонецЕсли;
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"07").Значение = Макс(ЛьготаПФРиФОМС, ЛьготаФСС);
		
		Если БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачислений,,
			 Перечисление.ВидыНачислений.НеОблагаетсяПрочее) = 1 Тогда
			Таблица.Область("ВСЕГО"+Формат(Месяц,"Ч(0)2")).Значение = БухИт.КО();
		КонецЕсли;
		Таблица.Область("ВСЕГО"+Формат(Месяц,"Ч(0)2")).Значение = 
			Таблица.Область("ВСЕГО"+Формат(Месяц,"Ч(0)2")).Значение +
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"07").Значение +
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"08").Значение +
			Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"17").Значение;
	КонецЦикла;
		
	Обновить();
	
	ВсегоПФР = 0;
	ВсегоФСС = 0;
	ВсегоФФОМС = 0;
	ВсегоТФОМС = 0;
	
	Для а = 1 по 12 Цикл
		Месяц = Формат(а,"Ч(0)2");
		ИсчислитьНалог(Месяц);
		
		Если ПустоеЗначение(Таблица.Область("СНГ"+Месяц+"13").Текст) = 0 Тогда
			ВсегоПФР = Число(Таблица.Область("СНГ"+Месяц+"13").Текст);
		КонецЕсли;
		
		Если ПустоеЗначение(Таблица.Область("СНГ"+Месяц+"14").Текст) = 0 Тогда
			ВсегоФФОМС = Число(Таблица.Область("СНГ"+Месяц+"14").Текст);
		КонецЕсли;
		
		Если ПустоеЗначение(Таблица.Область("СНГ"+Месяц+"15").Текст) = 0 Тогда
			ВсегоТФОМС = Число(Таблица.Область("СНГ"+Месяц+"15").Текст);
		КонецЕсли;
		
		Если ПустоеЗначение(Таблица.Область("СНГ"+Месяц+"16").Текст) = 0 Тогда
			ВсегоФСС = Число(Таблица.Область("СНГ"+Месяц+"16").Текст);
		КонецЕсли;
	КонецЦикла;
	
	БухФСС = 0;
	БухПФР = 0;
	БухТФОМС = 0;
	БухФФОМС = 0;
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто();
	БухИт.ИспользоватьСубконто();
	БухИт.ИспользоватьСубконто();
	БухИт.ВключатьСубсчета(1,0);
	БухИт.ВыполнитьЗапрос(НачДата, КонДата, "69");
	
	Если БухИт.ПолучитьСчет(, СчетПоКоду("69.1")) = 1 Тогда
		Если БухИт.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
			Если БухИт.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВФонды.Взносы) = 1 Тогда
				БухФСС = БухИт.КО();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если БухФСС <> ВсегоФСС Тогда
		Сообщить("Сумма исчисленного налога в части ФСС"+
				 " не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
	Если БухИт.ПолучитьСчет(, СчетПоКоду("69.2.1")) = 1 Тогда
		Если БухИт.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
			Если БухИт.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
				БухПФР = БухИт.КО();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если БухПФР <> ВсегоПФР Тогда
		Сообщить("Сумма исчисленного налога в части ПФР"+
				 " не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
	Если БухИт.ПолучитьСчет(, СчетПоКоду("69.3.1")) = 1 Тогда
		Если БухИт.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
			Если БухИт.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
				БухФФОМС = БухИт.КО();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если БухФФОМС <> ВсегоФФОМС Тогда
		Сообщить("Сумма исчисленного налога в части ФФОМС"+
				 " не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
	Если БухИт.ПолучитьСчет(, СчетПоКоду("69.3.2")) = 1 Тогда
		Если БухИт.ПолучитьСубконто(2,, Сотрудник) = 1 Тогда
			Если БухИт.ПолучитьСубконто(1,, Перечисление.ВидыПлатежейВБюджет.Налог) = 1 Тогда
				БухТФОМС = БухИт.КО();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если БухТФОМС <> ВсегоТФОМС Тогда
		Сообщить("Сумма исчисленного налога в части ТФОМС"+
				 " не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
КонецПроцедуры // Заполнить()

//******************************************************************************
Процедура Печать()
	
	ПунктМеню="";
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("ПечататьСразу","Печатать сразу");
	Меню.ДобавитьЗначение("ПоказатьБланк","Показать бланк");
	Меню.ДобавитьЗначение("ПоказатьПоследний","Открыть последний бланк");
	
	Если Меню.ВыбратьЗначение(ПунктМеню,,,,1) = 1 Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ() + "icard-" + Прав(Год, 2) + ".mxl";
		ПечатнаяФорма=СоздатьОбъект("Таблица");
		
		Если ПунктМеню="ПоказатьПоследний" Тогда
			Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы)=0 Тогда
				Сообщить("Файл печатной формы "+ИмяФайлаПечатнойФормы+" не найден","i");
				Возврат;
			КонецЕсли;
		Иначе
			Таблица.Записать(ИмяФайлаПечатнойФормы);
		КонецЕсли;
		
		ПечатнаяФорма.Открыть(ИмяФайлаПечатнойФормы);
		
		ПечатнаяФорма.Область().ЦветТекста(-1);
		ПечатнаяФорма.Область().ЦветФона(-1);
		ПечатнаяФорма.Область().ЦветРамки(-1);
		ПечатнаяФорма.Опции(0,0,0,0,"Индивидуальная карточка ("+Сотрудник+")",1);
		ПечатнаяФорма.ПараметрыСтраницы(,,,,,,,,,1,1,);
		
		Если ПунктМеню="ПечататьСразу" Тогда
			ПечатнаяФорма.ТолькоПросмотр(1);
			ПечатнаяФорма.Напечатать(0);
		Иначе
			ПечатнаяФорма.Показать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Печать()

//******************************************************************************
Процедура ПриВыбореГода(РазрешитьСменуГода = 0)
	
	Год = СпГод.ПолучитьЗначение(СпГод.ТекущаяСтрока());
	Таблица.Название.Текст = "Индивидуальная карточка учета сумм начисленных "+
		"выплат и иных вознаграждений, а также сумм начисленного единого "+
		"социального налога (взноса) за "+Год+" год";
	ИмяФайлаСохраненияОтчета = КаталогИБ() + "icard-" + Прав(Год, 2) + ".rvs";
	
КонецПроцедуры // ПриВыбореГода()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
Процедура ПриОткрытии(Флаг)
	
	Если Константа.УчетЗарплатыВоВнешнейПрограмме = Да Тогда
		Предупреждение("Налоговая карточка не используется в режиме
		               |расчета зарплаты во внешней программе");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Сотрудник = Форма.Параметр.Получить("Сотрудник");
		ПриВыбореСотрудника();
		ИмяФайлаСохраненияОтчета = КаталогИБ() + "icard-" + Прав(Год, 2) + ".rvs";
		Восстановить(0);
	КонецЕсли;
	
	Год = 2001;
	СпГод.ДобавитьЗначение(2001,"2001");
	СпГод.ТекущаяСтрока(СпГод.НайтиЗначение(Год));
	ПриВыбореГода();
	
	Форма.Сотрудник.ВыполнятьФормулуТолькоПриИзменении(1);
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
Процедура ПриНачалеВыбораЗначения(Адрес, Флаг)               
	
	Если Адрес = "Сотрудник" Тогда
		ТекСотрудник = Сотрудник;
		Сохранить(1);
	КонецЕсли;                             
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
//
// Описание:
//  При закрытии запоминает вариант формы, который редактируется, чтобы
// при последующем открытии данный вариант можно было восстановить.
//
Процедура ПриЗакрытии()
	
	Если ПустоеЗначение(Сотрудник) = 0 Тогда
		Сохранить(1);
	КонецЕсли;                             
	
КонецПроцедуры // ПриЗакрытии()