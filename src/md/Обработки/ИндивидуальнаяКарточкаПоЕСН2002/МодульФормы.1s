////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем Год; // год формирования карточки
Перем ТекСотрудник;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПЕРЕСЧЕТА ПОКАЗАТЕЛЕЙ ПРИ ВНЕСЕНИИ ИЗМЕНЕНИЙ В КАРТОЧКУ
//

//*****************************************************************************
// Процедура ПересчетКолонки(НомерКолонки)
//
// Параметры:
//  НомерКолонки - Строка. Номер колонки.
//
// Описание:
//  Вызывается после ввода в ячейки данных и выполняет пересчет сумм,
// исчисляемых нарастающим итогом с начала года, для этой колонки.
//
Процедура ПересчетКолонки(НомерКолонки)
	
	СНачалаГода = 0;		
	Для а = 1 по 12 Цикл
		СНачалаГода = СНачалаГода + Таблица.Область("П" + Формат(а, "Ч(0)2") + НомерКолонки).Значение;
		Таблица.Область("СНГ" + Формат(а, "Ч(0)2") + НомерКолонки).Значение = СНачалаГода;
	КонецЦикла;

КонецПроцедуры // ПересчетКолонки()

//*****************************************************************************
// ИсчислитьНалог(МесяцРасчета)
//
// Параметры:
//  МесяцРасчета - Строка. Номер месяца строкой,длиной два символа.
//
// Описание:
//  Рассчитывает суммы налога.
//
Процедура ИсчислитьНалог(МесяцРасчета)
    
	Если 	  ((Сотрудник.Пол = Перечисление.Пол.Мужской) и (ДатаГод(Сотрудник.ДатаРождения) <= 1952) и (ПустоеЗначение(Сотрудник.ДатаРождения) = 0)) или
			  ((Сотрудник.Пол = Перечисление.Пол.Женский) и (ДатаГод(Сотрудник.ДатаРождения) <= 1956) и (ПустоеЗначение(Сотрудник.ДатаРождения) = 0)) Тогда
	    ИмяСтавкиПФР = "Процент";
		
	ИначеЕсли ((Сотрудник.Пол = Перечисление.Пол.Мужской) и (ДатаГод(Сотрудник.ДатаРождения) >= 1953) и (ДатаГод(Сотрудник.ДатаРождения) <= 1966)) или
		 	  ((Сотрудник.Пол = Перечисление.Пол.Женский) и (ДатаГод(Сотрудник.ДатаРождения) >= 1957) и (ДатаГод(Сотрудник.ДатаРождения) <= 1966)) Тогда
		ИмяСтавкиПФР = "Процент2";
		
	ИначеЕсли ДатаГод(Сотрудник.ДатаРождения) >= 1967 Тогда
		ИмяСтавкиПФР = "Процент3";
		
	Иначе
		Возврат;
	КонецЕсли;
	
	БазаЕСН = СоздатьОбъект("ТаблицаЗначений");
	БазаЕСН.НоваяКолонка("Месяц");
	БазаЕСН.НоваяКолонка("Сумма", "Число");
	БазаЕСН.НоваяКолонка("Льгота", "Число");
	БазаЕСН.НоваяКолонка("Инвалид", "Число", 1);
	
	БазаЕСНбезПФР = СоздатьОбъект("ТаблицаЗначений");
	БазаЕСНбезПФР.НоваяКолонка("Месяц");
	БазаЕСНбезПФР.НоваяКолонка("Сумма", "Число");
	БазаЕСНбезПФР.НоваяКолонка("Льгота", "Число");
	БазаЕСНбезПФР.НоваяКолонка("Инвалид", "Число", 1);
	
	БазаФСС = СоздатьОбъект("ТаблицаЗначений");
	БазаФСС.НоваяКолонка("Месяц");
	БазаФСС.НоваяКолонка("Сумма", "Число");
	БазаФСС.НоваяКолонка("Льгота", "Число");
	БазаФСС.НоваяКолонка("Инвалид", "Число", 1);
	
	БазаФОМС = СоздатьОбъект("ТаблицаЗначений");
	БазаФОМС.НоваяКолонка("Месяц");
	БазаФОМС.НоваяКолонка("Сумма", "Число");
	БазаФОМС.НоваяКолонка("Льгота", "Число");
	БазаФОМС.НоваяКолонка("Инвалид", "Число", 1);
	
	БазаПФР = СоздатьОбъект("ТаблицаЗначений");
	БазаПФР.НоваяКолонка("Месяц");
	БазаПФР.НоваяКолонка("Сумма", "Число");
	БазаПФР.НоваяКолонка("Льгота", "Число");
	БазаПФР.НоваяКолонка("Инвалид", "Число", 1);
	
	ПослМесяц = Число(МесяцРасчета);
	ТекМесяц = "31.01." + Год;
	Для НомерМесяца = 1 по ПослМесяц Цикл
		
		Месяц = Формат(НомерМесяца,"Ч(0)2");
		
		ДоходОблагаемыйЕСН = Таблица.Область("П"+Месяц+"06").Значение;
		ДоходОблагаемыйФСС = Таблица.Область("П"+Месяц+"07").Значение;
		ДоходОблагаемыйПФР = Таблица.Область("П"+Месяц+"21").Значение;
		Льгота = Таблица.Область("П"+Месяц+"08").Значение;
		
		Если ДоходОблагаемыйЕСН <> 0 Тогда
		    БазаЕСН.НоваяСтрока();
			БазаЕСН.Месяц = ТекМесяц;
			БазаЕСН.Сумма = ДоходОблагаемыйЕСН;
			БазаЕСН.Льгота = Льгота;
			
			Если ДоходОблагаемыйПФР = 0 Тогда
			    БазаЕСНбезПФР.НоваяСтрока();
				БазаЕСНбезПФР.Месяц = ТекМесяц;
				БазаЕСНбезПФР.Сумма = ДоходОблагаемыйЕСН;
				БазаЕСНбезПФР.Льгота = Льгота;
			КонецЕсли;
			
			БазаФОМС.НоваяСтрока();
			БазаФОМС.Месяц = ТекМесяц;
			БазаФОМС.Сумма = ДоходОблагаемыйЕСН;
			БазаФОМС.Льгота = Льгота;
		КонецЕсли;
		
		Если ДоходОблагаемыйФСС <> 0 Тогда
			БазаФСС.НоваяСтрока();
			БазаФСС.Месяц = ТекМесяц;
			БазаФСС.Сумма = ДоходОблагаемыйФСС;
			БазаФСС.Льгота = Льгота;
		КонецЕсли;
			
		Если ДоходОблагаемыйПФР <> 0 Тогда
			БазаПФР.НоваяСтрока();
			БазаПФР.Месяц = ТекМесяц;
			БазаПФР.Сумма = ДоходОблагаемыйПФР;
		КонецЕсли;
		
		ТекМесяц = КонМесяца(ДобавитьМесяц(ТекМесяц, 1));
	КонецЦикла;
	
	Если Месяц = "01" Тогда
		ПФР_страх_начисленный = 0;
		ПФР_нак_начисленный = 0;
		ЕСН_начисленный = 0;
		ФСС_начисленный = 0;
		ФФОМС_начисленный = 0;
		ТФОМС_начисленный = 0;
		
	Иначе
		ЕСН_начисленный			= Таблица.Область("СНГ"+Формат(ПослМесяц-1,"Ч(0)2")+"15").Значение;
		ФФОМС_начисленный		= Таблица.Область("СНГ"+Формат(ПослМесяц-1,"Ч(0)2")+"16").Значение;
		ТФОМС_начисленный 		= Таблица.Область("СНГ"+Формат(ПослМесяц-1,"Ч(0)2")+"17").Значение;
		ФСС_начисленный 		= Таблица.Область("СНГ"+Формат(ПослМесяц-1,"Ч(0)2")+"18").Значение;
		ПФР_страх_начисленный 	= Таблица.Область("СНГ"+Формат(ПослМесяц-1,"Ч(0)2")+"19").Значение;
		ПФР_нак_начисленный 	= Таблица.Область("СНГ"+Формат(ПослМесяц-1,"Ч(0)2")+"20").Значение;
	КонецЕсли;   
	
	ФФОМС 		= глОтчислениеВФонд(Сотрудник, "ФФОМС", БазаФОМС)	 	- ФФОМС_начисленный;
	ТФОМС 		= глОтчислениеВФонд(Сотрудник, "ТФОМС", БазаФОМС) 		- ТФОМС_начисленный;
	ФСС 		= глОтчислениеВФонд(Сотрудник, "ФСС", БазаФСС) 			- ФСС_начисленный;
	
	ПФР_страх 	= глОтчислениеВФонд(Сотрудник, "ПФР_страх", БазаПФР, ИмяСтавкиПФР);
	ПФР_нак 	= глОтчислениеВФонд(Сотрудник, "ПФР_нак", БазаПФР, ИмяСтавкиПФР);
	
	ТекМесяц = КонМесяца(Дата(Год, ПослМесяц, 1));
	ЕСН = глОтчислениеВФонд(Сотрудник, "ЕСН_ФБ", БазаЕСН, ИмяСтавкиПФР);
	Если Константа.ПорядокИсчисленияЕСН.Получить(ТекМесяц) = 1 Тогда
	    ЕСН = ЕСН + ПФР_страх + ПФР_нак;
		
	ИначеЕсли Константа.ПорядокИсчисленияЕСН.Получить(ТекМесяц) = 2 Тогда
		ЕСНбезПФР = глОтчислениеВФонд(Сотрудник, "ЕСН_ФБ", БазаЕСНбезПФР, ИмяСтавкиПФР);
		ЕСН = ЕСН + ЕСНбезПФР;
	КонецЕсли;
	
	ЕСН 		= ЕСН 		 - ЕСН_начисленный;
	ПФР_страх 	= ПФР_страх  - ПФР_страх_начисленный;
	ПФР_нак 	= ПФР_нак	 - ПФР_нак_начисленный;	

	Таблица.Область("П"+Месяц+"15").Значение = ЕСН;
	Таблица.Область("П"+Месяц+"16").Значение = ФФОМС;
	Таблица.Область("П"+Месяц+"17").Значение = ТФОМС;
	Таблица.Область("П"+Месяц+"18").Значение = ФСС;
	Таблица.Область("П"+Месяц+"19").Значение = ПФР_страх;
	Таблица.Область("П"+Месяц+"20").Значение = ПФР_нак;
	
	ПересчетКолонки("15");
	ПересчетКолонки("16");
	ПересчетКолонки("17");
	ПересчетКолонки("18");
	ПересчетКолонки("19");
	ПересчетКолонки("20");
	
КонецПроцедуры // ИсчислитьНалог()

//*****************************************************************************
// ИсчислитьБазуЗаМесяц(Месяц)
//
// Параметры:
//  Месяц - Строка. Месяц, за который следует пересчитать базу.
//
// Описание:
//  Вычисляет изменение налоговой базы за указанный месяц.
//
Процедура ИсчислитьБазуЗаМесяц(Месяц)
	
	// Пересчитаем изменение налоговой базы за текущий месяц.
	БазаПФР = Таблица.Область("П" + Месяц + "02").Значение - // всего начислено
			  Таблица.Область("П" + Месяц + "03").Значение - // не является объектом
			  Таблица.Область("П" + Месяц + "04").Значение;  // не облагаемые доходы во все фонды
			  
	БазаФСС	= Таблица.Область("П" + Месяц + "02").Значение - // всего начислено
			  Таблица.Область("П" + Месяц + "03").Значение - // не является объектом
			  Таблица.Область("П" + Месяц + "04").Значение - // не облагаемые доходы во все фонды
			  Таблица.Область("П" + Месяц + "05").Значение;  // не облагаемые доходы в ФСС
			  
	//БазаПФР = Макс(БазаПФР, 0);
	//БазаФСС = Макс(БазаФСС, 0);
	Таблица.Область("П" + Месяц + "06").Значение = БазаПФР;
	Таблица.Область("П" + Месяц + "07").Значение = БазаФСС;
	Таблица.Область("П" + Месяц + "21").Значение = БазаПФР;
			  
	БазаЕСН = БазаПФР -  // налоговая база ЕСН по ст.237, уменьшенная на сумму льгот
			  Таблица.Область("П" + Месяц + "08").Значение - // льгота по статье 239
			  Таблица.Область("П" + Месяц + "09").Значение - // льгота по п.2 ст.245
			  Таблица.Область("П" + Месяц + "10").Значение;  // льгота по п.3,4 ст.245
			  
	БазаОМС = БазаПФР -  // налоговая база ЕСН по ст.237, уменьшенная на сумму льгот
			  Таблица.Область("П" + Месяц + "08").Значение - // льгота по статье 239
			  Таблица.Область("П" + Месяц + "09").Значение;  // льгота по п.2 ст.245
			  
	БазаФСС = БазаФСС -  // налоговая база ЕСН по ст.237, уменьшенная на сумму льгот
			  Таблица.Область("П" + Месяц + "08").Значение - // льгота по статье 239
			  Таблица.Область("П" + Месяц + "09").Значение;  // льгота по п.2 ст.245
			  
	//Таблица.Область("П" + Месяц + "11").Значение = Макс(БазаЕСН, 0);
	//Таблица.Область("П" + Месяц + "12").Значение = Макс(БазаОМС, 0);
	//Таблица.Область("П" + Месяц + "13").Значение = Макс(БазаФСС, 0);
	
	Таблица.Область("П" + Месяц + "11").Значение = БазаЕСН;
	Таблица.Область("П" + Месяц + "12").Значение = БазаОМС;
	Таблица.Область("П" + Месяц + "13").Значение = БазаФСС;
	
КонецПроцедуры // ИсчислитьБазуЗаМесяц()

//*****************************************************************************
// ПриВводеДоходов()
//
// Описание:
//  Вызывается после ввода в ячейки данных и обеспечивает пересчет всей
// зависимой информации.
//
Процедура ПриВводеДоходов()
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	
	// Сначала пересчитаем сумму измененной колонки нарастающим итогом.
	НомерКолонки = Сред(Имя, 4, 2);
	Месяц = Сред(Имя, 2, 2);
	ПересчетКолонки(НомерКолонки);
	
	// При изменении сумм налога и суммы начисленной за счет ФСС пересчитывать
	// налоговые базы не нужно. Для исчисления налоговой базы сумма начисленная
	// за счет ФСС уже учтена в граые 4.
	Если (НомерКолонки > "13") и (НомерКолонки < "21") Тогда
		Возврат;
	КонецЕсли;
	
	ИсчислитьБазуЗаМесяц(Месяц);
			  
	ПересчетКолонки("06");
	ПересчетКолонки("07");
	ПересчетКолонки("21");
	ПересчетКолонки("11");
	ПересчетКолонки("12");
	ПересчетКолонки("13");
	
	ИсчислитьНалог(Месяц);
	
КонецПроцедуры // ПриВводеДоходов()


//*****************************************************************************
// ПриВводеБазыПФР()
//
// Описание:
//  Вызывается после ввода в ячейки данных и обеспечивает пересчет всей
// зависимой информации.
//
Процедура ПриВводеБазыПФР()
	
	ПересчетКолонки("21");
	ИсчислитьНалог(Сред(Таблица.АктивнаяОбласть(), 2, 2));
	
КонецПроцедуры // ПриВводеБазыПФР()

//*****************************************************************************
// Процедура ПриВводеНалогов()
//
// Описание:
//  Вызывается после ввода данных в колонки с 14 по 20 и выполняет пересчет 
// строк с начала года.
//
Процедура ПриВводеНалогов()
	
	Имя = Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	ПересчетКолонки(Сред(Имя, 4, 2));

КонецПроцедуры // ПриВводеНалогов()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

//******************************************************************************
// Очистить(Спрашивать = 1)
//
// Описание:
//  Обнуляет все суммы, указанные в карточке.
//
Процедура Очистить(Спрашивать = 1)
	
	Если Спрашивать = 1 Тогда
		ТекстВопроса="Карточка будет очищена
		|Продолжить?";  
		Если Вопрос(ТекстВопроса, "Да+Нет")="Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Таблица.Область("ПолеЧисел").Значение=0;
	
КонецПроцедуры // Очистить()

//******************************************************************************
// Восстановить(Спрашивать)
//
// Параметры:
//  Спрашивать - Число. 1 - задать вопрос о необходимости выполнения процедуры.
//
Процедура Восстановить(Спрашивать)

	Если Спрашивать=1 Тогда
		Если Вопрос("Текущие данные будут очищены! Восстановить?","Да+Нет")="Нет" Тогда
			Возврат;
			
		Иначе
			Очистить(0);
		КонецЕсли;
	КонецЕсли;
	
	Название = "Индивидуальная карточка  учета сумм начисленных "+
		"выплат и иных вознаграждений, сумм начисленного единого социального "+
		"налога, а также сумм налогового вычета за "+Год+" год";
	
	Гражданство = "";
	ДоговорНомер = "";
	ДатаДолжность = "";
	НаличиеИнвалидности = "";
	СправкаСерия = "";
	НомерСправки = "";
	ДатаВыдачи = "";
	ДатаДолжность = "";
	
	Если Сотрудник.Выбран() = 1 Тогда
		ФИО = СокрП(Сотрудник.Наименование);
		ИНН = Сотрудник.ИНН;
		Должность = СокрП(Сотрудник.Должность);
		Пол = Сотрудник.Пол;
		ДатаРождения = Сотрудник.ДатаРождения;
		ДокументСерия = СокрП(Сотрудник.ДокументСерия);
		ДокументНомер = СокрП(Сотрудник.ДокументНомер);
		ДокументКемКогдаВыдан = СокрП(Сотрудник.ДокументКемВыдан) + ", " + Сотрудник.ДокументДатаВыдачи;
		СтрахНомерСпецСтрокой = Сотрудник.СтраховойНомерПФР;
		Адрес = глПредставлениеАдреса(?(ПустоеЗначение(Сотрудник.АдресФакт) = 1, Сотрудник.АдресПрописка, Сотрудник.АдресФакт));
		
	Иначе
		ФИО = "";
		ИНН = "";
		Должность = "";
		Пол = "";
		ДатаРождения = "";
		ДокументСерия = "";
		ДокументНомер = "";
		ДокументКемКогдаВыдан = "";
		СтрахНомерСпецСтрокой = "";
		Адрес = "";
	КонецЕсли;
	
	ИтогиПоГодуСотра = СоздатьОбъект("Справочник.КарточкиУчетаДоходов");
	ИтогиПоГодуСотра.ИспользоватьВладельца(Сотрудник);
	ИтогиПоГодуСотра.НайтиПоКоду(Строка(Год));
	СписокСохранения = ЗначениеИзСтроки(ИтогиПоГодуСотра.СписокПолейИндивидульнойКарточки);
	Если ПустоеЗначение(СокрЛП(СписокСохранения)) = 1 Тогда
		Возврат;
		
	Иначе
		Таблица.Загрузить(СписокСохранения);
	КонецЕсли;
	
	Для а = 1 по 12 Цикл
		ИсчислитьБазуЗаМесяц(Формат(а,"Ч(0)2"));
	КонецЦикла;
	
	Для а = 2 по 21 Цикл
	    ПересчетКолонки(Формат(а,"Ч(0)2"));
	КонецЦикла;
	
КонецПроцедуры // Восстановить()


//******************************************************************************
// ПриВыбореСотрудника()
//
// Описание:
//  Заполняет сведения о работнике, указываемые в карточке, на основании
// сведений, сохраненных в справочнике "Сотрудники".
//
Процедура ПриВыбореСотрудника()
	
	Очистить(0);
	Восстановить(0);
	Форма.Заголовок(": "+Сотрудник.Наименование,1);
	
КонецПроцедуры // ПриВыбореСотрудника()

//******************************************************************************
Функция УказатьСотрудника()
	
	Если ПустоеЗначение(Сотрудник) = 1 Тогда
		Сотр = СоздатьОбъект("Справочник.Сотрудники");
		Если Сотр.Выбрать("Укажите сотрудника", "ДляВыбора") = 0 Тогда
			Возврат 0;
		КонецЕсли;
		Сотрудник = Сотр.ТекущийЭлемент();
		ПриВыбореСотрудника();
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // УказатьСотрудника()

//******************************************************************************
// Сохранить(Спрашивать)
//
// Параметры:
//  Спрашивать - Число. 1 - задать вопрос о необходимости выполнения процедуры.
//
// Описание:
//  - Записывает начальные данные расчета налогов в справочник "Сотрудники".
//  - Записывает карточку в файл icard-XX.rvs, где XX - год.
//
Функция Сохранить(Спрашивать)
	
	Перем СписокСохранения;
	Перем СписокСотрудников;
	
	Если Сотрудник.Выбран() = 1 Тогда
		Если Спрашивать=1 Тогда
			Если Вопрос("Сохранить данные отчета?","Да+Нет",60)="Нет" Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		
		Если Сотрудник.Выбран() = 0 Тогда
			Если УказатьСотрудника() = 0 Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		
		//Запись реквизитов справочника "Сотрудники".
		Если (ДатаГод(Сотрудник.ДатаПриема) = Год) и (ДатаМесяц(Сотрудник.ДатаПриема) > 1) Тогда
			Сотр = СоздатьОбъект("Справочник.Сотрудники");
			Сотр.НайтиЭлемент(Сотрудник);
			а = ДатаМесяц(Сотрудник.ДатаПриема) - 1;
			Изм = 0;
			
			ТекМесяц = "31.01." + Год;
			Для НомерМесяца = 1 по а Цикл
				Месяц = Формат(НомерМесяца,"Ч(0)2");
				
				БазаЕСН = Таблица.Область("П" + Месяц + "02").Значение -
						  Таблица.Область("П" + Месяц + "03").Значение -
						  Таблица.Область("П" + Месяц + "04").Значение; 
						  
				БазаФСС	= Таблица.Область("П" + Месяц + "02").Значение -
						  Таблица.Область("П" + Месяц + "03").Значение -
						  Таблица.Область("П" + Месяц + "04").Значение -
						  Таблица.Область("П" + Месяц + "05").Значение; 
						  
				БазаПФР = Таблица.Область("П" + Месяц + "21").Значение;
				
				БазаЕСНвСправочнике = Сотр.ДоходОблагаемыйЕСН_СНачалаГода.Получить(ТекМесяц);
				Если БазаЕСНвСправочнике <> БазаЕСН Тогда
				    Сотр.ДоходОблагаемыйЕСН_СНачалаГода.Установить(ТекМесяц, БазаЕСН);
					Изм = 1;
				КонецЕсли;
				
				БазаФССвСправочнике = Сотр.ДоходОблагаемыйЕСН_ФСС_СНачалаГода.Получить(ТекМесяц);
				Если БазаФССвСправочнике <> БазаФСС Тогда
				    Сотр.ДоходОблагаемыйЕСН_ФСС_СНачалаГода.Установить(ТекМесяц, БазаФСС);
					Изм = 1;
				КонецЕсли;
				
				БазаПФРвСправочнике = Сотр.ДоходОблагаемыйПФР_СНачалаГода.Получить(ТекМесяц);
				Если БазаПФРвСправочнике <> БазаПФР Тогда
				    Сотр.ДоходОблагаемыйПФР_СНачалаГода.Установить(ТекМесяц, БазаПФР);
					Изм = 1;
				КонецЕсли;
				
				ТекМесяц = КонМесяца(ДобавитьМесяц(ТекМесяц, 1));
			КонецЦикла;
			
			НачисленныйЕСН_ПФР_СНачалаГода 	 = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "15").Значение;
			НачисленныйЕСН_ФОМС_СНачалаГода  = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "16").Значение;
			НачисленныйЕСН_ТОМС_СНачалаГода  = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "17").Значение;
			НачисленныйЕСН_ФСС_СНачалаГода 	 = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "18").Значение;
			НачисленныйПФР_страх_СНачалаГода = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "19").Значение;
			НачисленныйПФР_нак_СНачалаГода 	 = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "20").Значение;
			
			Если (Сотр.НачисленныйЕСН_ПФР_СНачалаГода 		<> НачисленныйЕСН_ПФР_СНачалаГода) 		или
				 (Сотр.НачисленныйЕСН_ФСС_СНачалаГода 		<> НачисленныйЕСН_ФСС_СНачалаГода) 		или
				 (Сотр.НачисленныйЕСН_ФОМС_СНачалаГода		<> НачисленныйЕСН_ФОМС_СНачалаГода) 	или
				 (Сотр.НачисленныйЕСН_ТОМС_СНачалаГода		<> НачисленныйЕСН_ТОМС_СНачалаГода) 	или
				 (Сотр.НачисленныйПФР_страх_СНачалаГода		<> НачисленныйПФР_страх_СНачалаГода)	или
				 (Сотр.НачисленныйПФР_нак_СНачалаГода		<> НачисленныйПФР_нак_СНачалаГода) 		Тогда
				 	                                   	
				Сотр.НачисленныйЕСН_ПФР_СНачалаГода		 = НачисленныйЕСН_ПФР_СНачалаГода;
				Сотр.НачисленныйЕСН_ФСС_СНачалаГода		 = НачисленныйЕСН_ФСС_СНачалаГода;
				Сотр.НачисленныйЕСН_ФОМС_СНачалаГода	 = НачисленныйЕСН_ФОМС_СНачалаГода;
				Сотр.НачисленныйЕСН_ТОМС_СНачалаГода	 = НачисленныйЕСН_ТОМС_СНачалаГода;
				Сотр.НачисленныйПФР_страх_СНачалаГода 	 = НачисленныйПФР_страх_СНачалаГода;
				Сотр.НачисленныйПФР_нак_СНачалаГода 	 = НачисленныйПФР_нак_СНачалаГода;
				
				Попытка
					Сотр.Записать();
				    Изм = 1;
					
				Исключение
					Предупреждение("Неудачная попытка записать начальные данные 
									|расчета ЕСН в справочник ""Сотрудники"".
									|Запись """+Сотрудник+""" заблокирована.");
					Возврат 0;
				КонецПопытки;
			КонецЕсли;
			
			Если Изм = 1 Тогда
				Сообщить("В справочник ""Сотрудники"" записаны начальные данные расчета ЕСН сотрудника "+Сотрудник);
			КонецЕсли;
		КонецЕсли;
		
		// Сформируем список сохраняемых заначений.
		// 1). Сохраним "желтые области" таблицы
		Таблица.Выгрузить(СписокСохранения);
		
		// 2). Сохраним итоговые суммы карточки для использования при формировании 2-НДФЛ.
		Для а = 2 по 20 Цикл
			ИмяОбласти = "СНГ12" + Формат(а,"Ч(0)2");
			СписокСохранения.Установить(ИмяОбласти, Таблица.Область(ИмяОбласти).Значение);
		КонецЦикла;
		
		// Запись в справочник
		СпрИтоговПоГоду = СоздатьОбъект("Справочник.КарточкиУчетаДоходов");
		СпрИтоговПоГоду.ИспользоватьВладельца(Сотрудник);
		
		// Поиск карточки в справочнике
		Если СпрИтоговПоГоду.НайтиПоКоду(Строка(Год)) = 0 Тогда
		    СпрИтоговПоГоду.Новый();
			СпрИтоговПоГоду.Код = Строка(Год);
			
		Иначе
			СпрИтоговПоГоду.ВыбратьЭлементы();
			СписокЭлементов = СоздатьОбъект("СписокЗначений");
			Пока СпрИтоговПоГоду.ПолучитьЭлемент() = 1 Цикл
				Если СпрИтоговПоГоду.Код = Строка(Год) Тогда
					СписокЭлементов.ДобавитьЗначение(СпрИтоговПоГоду.ТекущийЭлемент());
				КонецЕсли;
			КонецЦикла;
			// в справочнике должен быть только один элемент
			// с данными за каждый год 
			Элемент = СписокЭлементов.ПолучитьЗначение(1);
			СписокЭлементов.УдалитьЗначение(1);
			// лишние элементы (возможно, появившиеся в распределенных ИБ) - удалим
			Если СписокЭлементов.РазмерСписка() > 0 Тогда
				Для индСписка = 1 по СписокЭлементов.РазмерСписка() Цикл
					СпрИтоговПоГоду.НайтиЭлемент(СписокЭлементов.ПолучитьЗначение(индСписка));
					СпрИтоговПоГоду.Удалить(1);
				КонецЦикла;
				СписокЭлементов.УдалитьВсе();
			КонецЕсли;
			СпрИтоговПоГоду.НайтиЭлемент(Элемент);		
		КонецЕсли;
		
		СтрокаДанных = ЗначениеВСтроку(СписокСохранения);
		СпрИтоговПоГоду.СписокПолейИндивидульнойКарточки = СтрокаДанных;
		СпрИтоговПоГоду.Записать();
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // Сохранить()

//******************************************************************************
// Заполнить()
//
// Описание:
//  Заполняет карточку сведениями о доходах сотрудика, сохраненными на счете НБ.
//
Процедура Заполнить()
	 	
	Если Сотрудник.Выбран() = 0 Тогда
		Если УказатьСотрудника() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачДата = Дата("01.01."+Год);
	КонДата = КонецРассчитанногоПериодаБИ();
	КонДата = Макс(НачДата, КонДата);
	Если КонДата > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		Возврат;
		
	ИначеЕсли ДатаГод(КонДата) > ДатаГод(НачДата) Тогда
		КонДата = Дата("31.12."+Год);
	КонецЕсли;

	Сч69_1 = СчетПоКоду("69.1");
	Сч69_11 = СчетПоКоду("69.11");
	Сч70 = СчетПоКоду("70");
	Сч84 = СчетПоКоду("84");
	
	СчДФЛ = СчетПоКоду("ДФЛ");
	СчДФЛ_1 = СчетПоКоду("ДФЛ.1");
	СчДФЛ_2 = СчетПоКоду("ДФЛ.2");
	
	БазаЕСН = 0;
	БазаПФР = 0;
	БазаФОМС = 0;
	БазаФСС = 0;
	ЛьготаЕСН = 0;
	ЛьготаФОМС = 0;
	ЛьготаПФР = 0;

	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.Опции(1, 1);
	БухИт.ВключатьСубсчета(1, 1);
	БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники, Сотрудник, 2); 
	БухИт.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
	БухИт.ВыполнитьЗапрос(НачДата, КонДата, "70,ДФЛ",,, 2, "Месяц");
	
	МесяцПоследнегоНачисления = 0;
    БухИт.ВыбратьПериоды();
	Пока БухИт.ПолучитьПериод() = 1 Цикл
		Если БухИт.КО() <> 0 Тогда
		    МесяцПоследнегоНачисления = ДатаМесяц(БухИт.КонДата);
		КонецЕсли;
	КонецЦикла;
	
	ГодНачалаУчета = ДатаГод(Сотрудник.ДатаПриема);
	МесяцНачалаУчета = ДатаМесяц(Сотрудник.ДатаПриема);
	ГодОтчета = ДатаГод(НачДата);
	
	БухИт.ВыбратьПериоды(1);
	Пока БухИт.ПолучитьПериод() = 1 Цикл
		Месяц = ДатаМесяц(БухИт.КонДата);
		
		// Исключим периоды более ранние, чем дата приема на работу.
		ТекМесяц = КонМесяца(Дата(Год, Месяц, 1));
		Если глДатаПриема(Сотрудник) > ТекМесяц Тогда
			Продолжить;
			
		ИначеЕсли Месяц > МесяцПоследнегоНачисления Тогда
			Прервать;
			
		ИначеЕсли (ГодНачалаУчета = ГодОтчета) и (Месяц < МесяцНачалаУчета) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекМесяц = БухИт.КонДата;
		Инвалид = ?((Сотрудник.Инвалид.Получить(ТекМесяц) = 1) или (Константа.ИнвалиднаяОрганизация.Получить(ТекМесяц) = Да), 1, 0);
		
		// Выплаты и налоговые базы за текущий месяц:
		Графа2  = 0; // Выплат всего
		Графа3  = 0; // Не уменьшает базу налога на прибыль
		Графа4  = 0; // Не облагается ЕСН вообще
		Графа5  = 0; // По договорам гр.-пр. характера
		Графа8  = 0; // Сумма льготы по п.1 ст 239 НК РФ за тек. месяц
		Графа14 = 0; // За счет ФСС
		Графа21 = 0; // База взносов в ПФР за тек. месяц
		
		БухИт.ВыбратьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
		Пока БухИт.ПолучитьСубконто(ВидыСубконто.ВидыНачисленийВыплат) = 1 Цикл
		    ВидНачисления = БухИт.Субконто(ВидыСубконто.ВидыНачисленийВыплат);
			
			Если БухИт.ПолучитьСчет(, СчДФЛ_1) = 1 Тогда
				Если ВидНачисления.ЕСН_ФБ = 1 Тогда
				    БазаЕСН = БазаЕСН + БухИт.КО();
					Если Инвалид = 1 Тогда
					    НовЛьготаЕСН = ЛьготаЕСН + БухИт.КО();
						ПревышениеЛьготы = Макс(НовЛьготаЕСН - 100000, 0);
						НовЛьготаЕСН = НовЛьготаЕСН - ПревышениеЛьготы;
						
						Графа8 = НовЛьготаЕСН - ЛьготаЕСН;
						ЛьготаЕСН = НовЛьготаЕСН;
					КонецЕсли;
				КонецЕсли;
				
				Если ВидНачисления.ПФР = 1 Тогда
				    Графа21 = Графа21 + БухИт.КО();
				КонецЕсли; 
				
				Если (ВидНачисления.ЕСН_ФБ = 0) и (ВидНачисления.ЕСН_ФСС = 0) и (ВидНачисления.ЕСН_ФСС = 0) Тогда
				    Графа4 = Графа4 + БухИт.КО();
					
				ИначеЕсли (ВидНачисления.ЕСН_ФБ = 1) и (ВидНачисления.ЕСН_ФСС = 0) Тогда
				    Графа5 = Графа5 + БухИт.КО();
				КонецЕсли;
				
				Графа2 = Графа2 + БухИт.КО();
			КонецЕсли;
			
			Если БухИт.ПолучитьСчет(, СчДФЛ_2) = 1 Тогда
				Если ВидНачисления.ПФР = 1 Тогда
				    Графа21 = Графа21 + БухИт.КО();
				КонецЕсли; 
				
				Графа2 = Графа2 + БухИт.КО();
				Графа3 = Графа3 + БухИт.КО();
			КонецЕсли;
		КонецЦикла;
		   
		Если БухИт.ПолучитьСчет(, Сч70) = 1 Тогда
			Если БухИт.ПолучитьКорСчет(, Сч84) = 1 Тогда
				Графа3 = Графа3 + БухИт.КорКО();
				
				ВидНачисления = БухИт.Субконто(ВидыСубконто.ВидыНачисленийВыплат);
				Если (ВидНачисления.ЕСН_ФБ = 0) и (ВидНачисления.ЕСН_ФСС = 0) и (ВидНачисления.ЕСН_ФСС = 0) Тогда
				    Графа4 = Графа4 - БухИт.КО();
				КонецЕсли;
			КонецЕсли;
			
			Если БухИт.ПолучитьКорСчет(, Сч69_1) = 1 Тогда
				Графа14 = Графа14 + БухИт.КорКО();
			КонецЕсли;
		КонецЕсли;
		
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"02").Значение = Графа2;
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"03").Значение = Графа3;
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"04").Значение = Графа4;
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"05").Значение = Графа5;
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"08").Значение = Графа8;
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"14").Значение = Графа14;
		ИсчислитьБазуЗаМесяц(Формат(Месяц,"Ч(0)2"));
		
		Таблица.Область("П"+Формат(Месяц,"Ч(0)2")+"21").Значение = Графа21;
		ПересчетКолонки("21");
		
		Для а = 2 по 14 Цикл
		    ПересчетКолонки(Формат(а,"Ч(0)2"));
		КонецЦикла;
		ИсчислитьНалог(Формат(Месяц,"Ч(0)2"));
		
		Для а = 15 по 20 Цикл
		    ПересчетКолонки(Формат(а,"Ч(0)2"));
		КонецЦикла;
	КонецЦикла;
	
	// Сравним исчисленные налоги, с суммами налогов, принятыми к бухгалтерскому учету.
	ВсегоЕСН 		= Таблица.Область("СНГ1215").Значение;
	ВсегоФФОМС 		= Таблица.Область("СНГ1216").Значение;
	ВсегоТФОМС 		= Таблица.Область("СНГ1217").Значение;
	ВсегоФСС 		= Таблица.Область("СНГ1218").Значение;
	ВсегоПФР_страх 	= Таблица.Область("СНГ1219").Значение;
	ВсегоПФР_нак	= Таблица.Область("СНГ1220").Значение;
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ПериодМНГ(КонДата);
	БухФСС 		 = БухИт.КО("69.1",,, Перечисление.ВидыПлатежейВФонды.Взносы, Сотрудник);
	БухЕСН 		 = БухИт.КО("69.2.1",,, Перечисление.ВидыПлатежейВБюджет.Налог, Сотрудник);
	БухПФР_страх = БухИт.КО("69.2.2",,, Перечисление.ВидыПлатежейВБюджет.Налог, Сотрудник);
	БухПФР_нак	 = БухИт.КО("69.2.3",,, Перечисление.ВидыПлатежейВБюджет.Налог, Сотрудник);
	БухФФОМС 	 = БухИт.КО("69.3.1",,, Перечисление.ВидыПлатежейВБюджет.Налог, Сотрудник);
	БухТФОМС 	 = БухИт.КО("69.3.2",,, Перечисление.ВидыПлатежейВБюджет.Налог, Сотрудник);
	
	Если ДатаГод(Сотрудник.ДатаПриема) = Год Тогда
		НачисленныйЕСН_ПФР_СНачалаГода = Сотрудник.НачисленныйЕСН_ПФР_СНачалаГода;
		НачисленныйЕСН_ФОМС_СНачалаГода = Сотрудник.НачисленныйЕСН_ФОМС_СНачалаГода;
		НачисленныйЕСН_ТОМС_СНачалаГода = Сотрудник.НачисленныйЕСН_ТОМС_СНачалаГода;
		НачисленныйЕСН_ФСС_СНачалаГода = Сотрудник.НачисленныйЕСН_ФСС_СНачалаГода;
		НачисленныйПФР_страх_СНачалаГода = Сотрудник.НачисленныйПФР_страх_СНачалаГода;
		НачисленныйПФР_нак_СНачалаГода = Сотрудник.НачисленныйПФР_нак_СНачалаГода;
		
	Иначе
		НачисленныйЕСН_ПФР_СНачалаГода = 0;
		НачисленныйЕСН_ФОМС_СНачалаГода = 0;
		НачисленныйЕСН_ТОМС_СНачалаГода = 0;
		НачисленныйЕСН_ФСС_СНачалаГода = 0;
		НачисленныйПФР_страх_СНачалаГода = 0;
		НачисленныйПФР_нак_СНачалаГода = 0;
	КонецЕсли;
	
	Если (БухФСС + НачисленныйЕСН_ФСС_СНачалаГода) <> ВсегоФСС Тогда
		Сообщить("Сумма налога в части ФСС не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
	Если (БухЕСН + НачисленныйЕСН_ПФР_СНачалаГода) <> ВсегоЕСН Тогда
		Сообщить("Сумма налога в части, зачисляемой в Федеральный Бюджет, не совпадает с данными бухгалтерского учета");
	КонецЕсли;

	Если (БухФФОМС + НачисленныйЕСН_ФОМС_СНачалаГода) <> ВсегоФФОМС Тогда
		Сообщить("Сумма налога в части ФФОМС не совпадает с данными бухгалтерского учета");
	КонецЕсли;

	Если (БухТФОМС + НачисленныйЕСН_ТОМС_СНачалаГода) <> ВсегоТФОМС Тогда
		Сообщить("Сумма налога в части ТФОМС не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
	Если (БухПФР_страх + НачисленныйПФР_страх_СНачалаГода) <> ВсегоПФР_страх Тогда
		Сообщить("Сумма взноса на страховую часть трудовой пенсии не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
	Если (БухПФР_нак + НачисленныйПФР_нак_СНачалаГода) <> ВсегоПФР_нак Тогда
		Сообщить("Сумма взноса на накопительную часть трудовой пенсии не совпадает с данными бухгалтерского учета");
	КонецЕсли;
	
КонецПроцедуры // Заполнить()

//******************************************************************************
// Печать()
//
// Описание:
//  Формирование таблицы для вывода на принтер.
//
Процедура Печать()
	
	ПунктМеню="";
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("ПечататьСразу","Печатать сразу");
	Меню.ДобавитьЗначение("ПоказатьБланк","Показать бланк");
	Меню.ДобавитьЗначение("ПоказатьПоследний","Открыть последний бланк");
	
	Если Меню.ВыбратьЗначение(ПунктМеню,,,,1) = 1 Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ() + "icard-" + Прав(Год, 2) + ".mxl";
		ПечатнаяФорма=СоздатьОбъект("Таблица");
		
		Если ПунктМеню="ПоказатьПоследний" Тогда
			Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы)=0 Тогда
				Сообщить("Файл печатной формы "+ИмяФайлаПечатнойФормы+" не найден","i");
				Возврат;
			КонецЕсли;
		Иначе
			Таблица.Записать(ИмяФайлаПечатнойФормы);
		КонецЕсли;
		
		ПечатнаяФорма.Открыть(ИмяФайлаПечатнойФормы);
		
		ПечатнаяФорма.Область().ЦветТекста(-1);
		ПечатнаяФорма.Область().ЦветФона(-1);
		ПечатнаяФорма.Область().ЦветРамки(-1);
		ПечатнаяФорма.Опции(0,0,0,0,"Индивидуальная карточка ("+Сотрудник+")",1);
		ПечатнаяФорма.ПараметрыСтраницы(,,,,,,,,,,1,);
		
		Если ПунктМеню="ПечататьСразу" Тогда
			ПечатнаяФорма.ТолькоПросмотр(1);
			ПечатнаяФорма.Напечатать(0);
		Иначе
			ПечатнаяФорма.Показать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Печать()

//******************************************************************************
// ПриВыбореГода()
//
// Описание:
//  Корректирует наименование карточки и файл для записи данных в зависимости от
// года формирования карточки.
//
Процедура ПриВыбореГода()
	
	НовыйГод = СпГод.ПолучитьЗначение(СпГод.ТекущаяСтрока());
	Если Год <> НовыйГод Тогда // выбран другой год - перезаполняем таблицу
		Если Сохранить(0) = 0 Тогда
			Год = НовыйГод;
		    Возврат
		КонецЕсли;
		Очистить(0);
		Год = НовыйГод;
		Восстановить(0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореГода()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии(Флаг)
	
	Если Константа.УчетЗарплатыВоВнешнейПрограмме = Да Тогда
		Предупреждение("Налоговая карточка не используется в режиме
		               |расчета зарплаты во внешней программе");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Форма.Параметр) = 1 Тогда
		Год = ДатаГод(РабочаяДата());
		Если Год < 2002 Тогда
			Год = 2002;
			
		ИначеЕсли Год > 2003 Тогда
			Год = 2003;
		КонецЕсли;

	Иначе
		Сотрудник = Форма.Параметр.Получить("Сотрудник");
		Год = Форма.Параметр.Получить("Год");
		Если Год < 2002 Тогда
			Год = 2002;
			
		ИначеЕсли Год > 2003 Тогда
			Год = 2003;
		КонецЕсли;
		
		Восстановить(0);
		Форма.Заголовок(": "+Сотрудник.Наименование,1);
	КонецЕсли;
	
	СпГод.ДобавитьЗначение(2002,"2002");
	СпГод.ДобавитьЗначение(2003,"2003");
	СпГод.ТекущаяСтрока(СпГод.НайтиЗначение(Год));
	ПриВыбореГода();
	
	Форма.Сотрудник.ВыполнятьФормулуТолькоПриИзменении(1);
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
// Описание:
//  При закрытии запоминает вариант формы, который редактируется, чтобы
// при последующем открытии данный вариант можно было восстановить.
//
Процедура ПриЗакрытии()
	
	Если ПустоеЗначение(Сотрудник) = 0 Тогда
		Сохранить(1);
	КонецЕсли;                             
	
КонецПроцедуры // ПриЗакрытии()