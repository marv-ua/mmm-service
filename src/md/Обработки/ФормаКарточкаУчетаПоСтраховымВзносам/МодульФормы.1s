Перем ИсходнаяТаблица;
Перем Год;
Перем ФизЛицо;
Перем НазваниеМесяца[12];
Перем ПоследнийМесяц;
Перем ЕстьЕНВД;
Перем ФизлицоИнвалид;
Перем МассивСписокЯчеекРаздел[3]; 
Перем МассивДоступныеРазделы[3];  
Перем СписокРедактируемыхЯчеек;

Перем ИсходнаяТаблицаБезСправочников; //это будет таблица , сформированная при открытии карточки без данных справочника
Перем БуферРазделовСпр; //это будет список данных, введенных в справочники
Перем ТаблицаРасшифровокПоВР; //это будет список данных по ВР

Перем ДоходыВычетыНалогиСотрудников;    

Перем Буфер; //понадобится для вывода карточки и для формирования расшифровки

//******************************************************************************
// ЗаполнитьМассивСпискаЯчеек()
//
// Параметры:
//	
//
// 	Вызывается из формул элементов диалога:
//		
//
//	Описание:
//		
//
Процедура ЗаполнитьМассивСпискаЯчеек() 
	
	Для Раздел = 1 По 3 Цикл
		
		СписокЯчеек=СоздатьОбъект("СписокЗначений");
		
		Для СчМес = 1 По 12 Цикл
			
			МесяцСтрокой = глДополнитьСтроку(СчМес,2);
			
			Для СчКолонок = 2 По 11 Цикл 
				ИмяОбл="П"+Раздел+глДополнитьСтроку(СчКолонок,2)+МесяцСтрокой;
				СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			КонецЦикла;
			
			ИмяОбл="П"+Раздел+16+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+18+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+20+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+22+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+24+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+26+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			// это скидки
			ИмяОбл="П"+Раздел+"08а"+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+"09а"+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
			ИмяОбл="П"+Раздел+"11а"+МесяцСтрокой;
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
			
		КонецЦикла;
		
		МассивСписокЯчеекРаздел[Раздел] = СписокЯчеек; 
		
	КонецЦикла;
	
	
КонецПроцедуры //ЗаполнитьМассивСпискаЯчеек

//******************************************************************************
// СписокРедактируемыхЯчеек()
//
// Параметры:
//		Расшифровка - 1, если список нужен для проверки доступности расшифровки, 0 - только для управления цветом
//
// Возвращаемое значение
//		список имен ячеек, которые надо запоминать в справочниках и складывать потом с данными журнала расчетов
//
// Описание:
//		прямым перебором составляем список  
//		
//
Процедура ПолучитьСписокРедактируемыхЯчеек()
	
	//заполненим список ячеек к обработке:
	СписокРедактируемыхЯчеек=СоздатьОбъект("СписокЗначений"); 
	
	Для Сч = 1 По 3 Цикл
		
		МассивДоступныеРазделы[Сч] = 0;
		
	КонецЦикла;	
	
	// у нас три раздела
	// ПервыйРаздел - основной тариф
	// ВторойРаздел - Инвалид
	// ТретийРаздел - ЕНВД  
	
	Если ФизлицоИнвалид = 1 Тогда
		// доступен только ВторойРаздел
		МассивДоступныеРазделы[2] = 1;
		Для Сч=1 По МассивСписокЯчеекРаздел[2].РазмерСписка() Цикл
			СписокРедактируемыхЯчеек.ДобавитьЗначение(МассивСписокЯчеекРаздел[2].ПолучитьЗначение(Сч));
		КонецЦикла;	
	Иначе 
		// доступен ПервыйРаздел
		МассивДоступныеРазделы[1] = 1;
		Для Сч=1 По МассивСписокЯчеекРаздел[1].РазмерСписка() Цикл
			СписокРедактируемыхЯчеек.ДобавитьЗначение(МассивСписокЯчеекРаздел[1].ПолучитьЗначение(Сч));
		КонецЦикла;
		Если ФизлицоИнвалид = -1 Тогда
			// доступен ВторойРаздел 
			МассивДоступныеРазделы[2] = 1;
			Для Сч=1 По МассивСписокЯчеекРаздел[2].РазмерСписка() Цикл
				СписокРедактируемыхЯчеек.ДобавитьЗначение(МассивСписокЯчеекРаздел[2].ПолучитьЗначение(Сч));
			КонецЦикла;	
		КонецЕсли;
		
		Если ЕстьЕНВД = 1 Тогда
			// доступен ТретийРаздел
			МассивДоступныеРазделы[3] = 1;
			Для Сч=1 По МассивСписокЯчеекРаздел[3].РазмерСписка() Цикл
				СписокРедактируемыхЯчеек.ДобавитьЗначение(МассивСписокЯчеекРаздел[3].ПолучитьЗначение(Сч));
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры //СписокРедактируемыхЯчеек	 

//******************************************************************************
// ОпределитьЦвет()
//
// Параметры:
//		нет
//
// Вызывается из ячеек со всеми редактируемыми числами
//
// Возвращаемое значение
//		нет
//
// Описание:
//		сравнивает ячейки до и после редактирования и во всех отличающихся меняет цвет  
//		
//
Процедура ОпределитьЦвет()
	// ИсходнаяТаблицаБезСправочников-до вызова
	// Таблица - текущее состояние
	ИмяОбл = Таблица.АктивнаяОбласть(); 
	Если (Лев(ИмяОбл,1) = "П") или (Лев(ИмяОбл,1) = "СНГ") Тогда 
	Иначе	
		Возврат;	
	КонецЕсли;
	Если (ИсходнаяТаблицаБезСправочников.Получить(ИмяОбл)<>Таблица.Область(ИмяОбл).Значение)
		и(Таблица.Область(ИмяОбл).Доступность()=1)  Тогда
		Таблица.Область(ИмяОбл).ЦветФона(255,255,0);
	ИначеЕсли Таблица.Область(ИмяОбл).Доступность()=1 Тогда
		Таблица.Область(ИмяОбл).ЦветФона(255,255,128);
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// ЗаполнитьТаблицу(ОбобщеннаяТаблица)
//
// Параметры:
//		ОбобщеннаяТаблица - контекст формы, передан для заполнения данными.
//		УчитыватьСправочники - число 1 (по умолчанию) или 0, не обязателен; если равен 0 - данные из справочников не собираются.
//		СменаГода - число 0 (по умолчанию) или 1, не обязателен; если равен 1 - то не нужно проверять на предмет исправлнения
//							
// Возвращаемое значение:
//		0 или 1 - прервана (0) или нет (1) работа процедуры сбора доходов
//
// Описание:
//		заполняет переданную таблицу обработанными данными о доходах
//		
Функция ЗаполнитьТаблицу(ОбобщеннаяТаблица,УчитыватьСправочники=1)
	
	ИсходнаяТаблица = СоздатьОбъект("СписокЗначений");
	// соберем данные о доходах
	ДоходыВычетыНалогиСотрудников = "";
	// проверим, удалось ли получить доходы нашего сотрудника
	Если глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников,ФизЛицо,КонГода(Дата(Год,12,15)),,,УчитыватьСправочники,1) <> 1 Тогда
		Возврат 0   
	КонецЕсли;
	       
	СтрокаИтоговойТаблицы = 0;
	
	// в буфер складываются значения, которые могут попасть в ячейки для ввода
	// нередактируемые (рассчитываемые итоговые) значения сразу помещаем в реквизит Текст ячеек таблицы
	Буфер=СоздатьОбъект("СписокЗначений");
	Карточка = ОбобщеннаяТаблица.Таблица;
	БуферРазделовСпр=СоздатьОбъект("СписокЗначений");
	ТаблицаРасшифровокПоВР=СоздатьОбъект("ТаблицаЗначений"); 
	
	ПоследнийМесяц = 0;
	глЗаполнитьКарточкаУчетаПоСтраховымВзносам(ФизЛицо,Год,0,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,ПоследнийМесяц,БуферРазделовСпр,ТаблицаРасшифровокПоВР);
	                                                                                                                           
	// загружаем значения редактируемых ячеек
	Карточка.Загрузить(Буфер);                        
	
	//дозаполним разделы так, что бы последний месяц был везде один
	Для СчРазделов = 1 По 3 Цикл
		
		Если МассивДоступныеРазделы[СчРазделов]=0 Тогда
			Продолжить;
		КонецЕсли;     
		
		ПоследнийМесяцРаздела = 0;
		
		//последний месяц определяем по 14 колонке
		НомерРаздела = СчРазделов; 
		Для СчМес = 1 По ПоследнийМесяц Цикл 
			ТекущийМесяцСтрокой=глДополнитьСтроку(СчМес,2);
			Если Число(Таблица.Область("СНГ"+НомерРаздела+"14"+ТекущийМесяцСтрокой).Текст) = 0 Тогда
				ПоследнийМесяцРаздела = СчМес-1;
				Прервать;
			КонецЕсли;	
		КонецЦикла; 
		
		Если (ПоследнийМесяцРаздела > 1) и (ПоследнийМесяцРаздела < ПоследнийМесяц) Тогда
			//дозаполним раздел
			
			Для Месяц = ПоследнийМесяцРаздела+1 По ПоследнийМесяц Цикл
				ТекущийМесяцСтрокой=глДополнитьСтроку(Месяц,2);
				ПрошлыйМесяцСтрокой=глДополнитьСтроку(Месяц-1,2); 
				
				Для Сч = 2 По 26 Цикл 
					Если (Сч = 15) или (Сч = 17) или (Сч = 19) или (Сч = 21) или (Сч = 23) или (Сч = 25) Тогда
						Продолжить;
					КонецЕсли; 
					ТекущаяКолонка = "" + НомерРаздела + глДополнитьСтроку(Сч,2);
					Таблица.Область("СНГ"+ТекущаяКолонка+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+ТекущаяКолонка+ПрошлыйМесяцСтрокой).Текст;
				КонецЦикла;	
				Таблица.Область("СНГ"+НомерРаздела+"08а"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+НомерРаздела+"08а"+ПрошлыйМесяцСтрокой).Текст;
				Таблица.Область("СНГ"+НомерРаздела+"09а"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+НомерРаздела+"09а"+ПрошлыйМесяцСтрокой).Текст;
				Таблица.Область("СНГ"+НомерРаздела+"11а"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+НомерРаздела+"11а"+ПрошлыйМесяцСтрокой).Текст;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	// запоминаем "образ" таблицы для последующих проверок	
	Карточка.Выгрузить(ИсходнаяТаблица);
		
	Если УчитыватьСправочники=1 Тогда		
		
		Если глСпискиИдентичны(ИсходнаяТаблицаБезСправочников,ИсходнаяТаблица) = 0 Тогда //есть данные в справочниках, надо выделить эти ячейки ярче
			
			Для Сч = 1 По СписокРедактируемыхЯчеек.РазмерСписка() Цикл
				ИмяОбл=СписокРедактируемыхЯчеек.ПолучитьЗначение(Сч);
				
				Если (ИсходнаяТаблицаБезСправочников.Получить(ИмяОбл)<>Таблица.Область(ИмяОбл).Значение)
				и(Таблица.Область(ИмяОбл).Доступность()=1) Тогда
					Таблица.Область(ИмяОбл).ЦветФона(255,255,0);
				ИначеЕсли Таблица.Область(ИмяОбл).Доступность()=1 Тогда
					Таблица.Область(ИмяОбл).ЦветФона(255,255,128);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат 1
	
КонецФункции //ЗаполнитьТаблицу 

//*****************************************************************************
// Сохранить()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Сохранить
//
// Возвращаемое значение
//		число 1 или 0 - удалось (не удалось) сохранить данные
//
// Описание
//
Функция Сохранить()
	
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	Если глСпискиИдентичны(СЗТекущееСостояние,ИсходнаяТаблица) = 0 Тогда
		
		СпрДоходов = СоздатьОбъект("Справочник.СтраховыеВзносыДоходы");
		СпрДоходов.ИспользоватьВладельца(ФизЛицо);
		
		// соберем данные о доходах
		ДоходыВычетыНалогиСотрудников = "";
		// проверим, удалось ли получить доходы нашего сотрудника - без данных из справочников
		Если глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников,ФизЛицо,КонГода(Дата(Год,12,15)),"",0,0) <> 1 Тогда
			Предупреждение("Не удалось сохранить данные!",8);
			Возврат 0   
		КонецЕсли;
		СтрокаИтоговойТаблицы = 0;
		
		СтрокаКолонокРаздел1 = "2,";
		Для Сч = 3 По 14 Цикл
			СтрокаКолонокРаздел1 = СтрокаКолонокРаздел1 + Сч + ",";	
		КонецЦикла;	
		СтрокаКолонокРаздел1 = СтрокаКолонокРаздел1
		+ "ИсчисленоПФРСтрах,"
		+ "ИсчисленоПФРНак,"
		+ "ИсчисленоДопТариф,"
		+ "ИсчисленоФСС,"
		+ "ИсчисленоФФОМС,"
		+ "ИсчисленоТФОМС"; 
		СписокКолонокРаздел1 = глРазложить(СтрокаКолонокРаздел1);
			
		
		СтрокаКолонокРаздел2 = "15,";
		Для Сч = 16 По 27 Цикл
			СтрокаКолонокРаздел2 = СтрокаКолонокРаздел2 + Сч + ",";	
		КонецЦикла;	
		СтрокаКолонокРаздел2 = СтрокаКолонокРаздел2
		+ "ИсчисленоПФРСтрахИнвалид,"
		+ "ИсчисленоПФРНакИнвалид,"
		+ "ИсчисленоДопТариф,"
		+ "ИсчисленоФССИнвалид,"
		+ "ИсчисленоФФОМСИнвалид,"
		+ "ИсчисленоТФОМСИнвалид";
		СписокКолонокРаздел2 = глРазложить(СтрокаКолонокРаздел2);	
		
		 
		СтрокаКолонокРаздел3 = "28,";
			Для Сч = 29 По 40 Цикл
				СтрокаКолонокРаздел3 = СтрокаКолонокРаздел3 + Сч + ",";	
			КонецЦикла;	
			СтрокаКолонокРаздел3 = СтрокаКолонокРаздел3
			+ "ИсчисленоПФРСтрахЕНВД,"
			+ "ИсчисленоПФРНакЕНВД,"
			+ "ИсчисленоДопТариф,"
			+ "ИсчисленоФССЕНВД,"
			+ "ИсчисленоФФОМСЕНВД,"
			+ "ИсчисленоТФОМСЕНВД";
		СписокКолонокРаздел3 = глРазложить(СтрокаКолонокРаздел3);
 
		
		СписокРасчетныхДанных = СоздатьОбъект("СписокЗначений");
		СписокВведенныхДанных = СоздатьОбъект("СписокЗначений");
		НачатьТранзакцию();
		Для Сч = 1 По 12 Цикл
			
			МесяцОсмотра = Сч;
			МесяцСтрокой = глДополнитьСтроку(МесяцОсмотра,2);
			ГодоМесяц = Строка(Год) + МесяцСтрокой;
			
			СписокРасчетныхДанных.УдалитьВсе();
			СписокВведенныхДанных.УдалитьВсе();
			
			// заполним список СписокРасчетныхДанных расчетными данными 
			// Раздел1 и Раздел2 пишем в один список, это доходы неЕНВД
			Для СчКолонок = 1 По СписокКолонокРаздел1.РазмерСписка() Цикл
				Колонка = СписокКолонокРаздел1.ПолучитьЗначение(СчКолонок);
				Если Число(Колонка) <> 0 Тогда
					Колонка = Число(Колонка);	
				КонецЕсли;
				СписокРасчетныхДанных.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+МесяцОсмотра,Колонка));	
			КонецЦикла;  
			Если МесяцОсмотра > 1 Тогда
				Для СчКолонок = 1 По СписокКолонокРаздел1.РазмерСписка() Цикл 
					Колонка = СписокКолонокРаздел1.ПолучитьЗначение(СчКолонок);
					Если Число(Колонка) <> 0 Тогда
						Колонка = Число(Колонка);	
					КонецЕсли;
					СписокРасчетныхДанных.УстановитьЗначение(СчКолонок,Число(СписокРасчетныхДанных.ПолучитьЗначение(СчКолонок))-Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+МесяцОсмотра-1,Колонка)));
				КонецЦикла;
			КонецЕсли; 
			
			Для СчКолонок = 1 По СписокКолонокРаздел2.РазмерСписка() Цикл
				Колонка = СписокКолонокРаздел2.ПолучитьЗначение(СчКолонок);
				Если Колонка = "ИсчисленоДопТариф" Тогда
				    Продолжить;
				КонецЕсли;
				Если Число(Колонка) <> 0 Тогда
					Колонка = Число(Колонка);	
				КонецЕсли;
				ДанныеРаздела1 = Число(СписокРасчетныхДанных.ПолучитьЗначение(СчКолонок));
				СписокРасчетныхДанных.УстановитьЗначение(СчКолонок,ДанныеРаздела1 +ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+МесяцОсмотра,Колонка));	
			КонецЦикла;  
			Если МесяцОсмотра > 1 Тогда
				Для СчКолонок = 1 По СписокКолонокРаздел2.РазмерСписка() Цикл 
					Колонка = СписокКолонокРаздел2.ПолучитьЗначение(СчКолонок);
					Если Колонка = "ИсчисленоДопТариф" Тогда
						Продолжить;
					КонецЕсли;					
					Если Число(Колонка) <> 0 Тогда
						Колонка = Число(Колонка);	
					КонецЕсли;
					ДанныеСписка = Число(СписокРасчетныхДанных.ПолучитьЗначение(СчКолонок));
					СписокРасчетныхДанных.УстановитьЗначение(СчКолонок,ДанныеСписка-Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+МесяцОсмотра-1,Колонка)));
				КонецЦикла;
			КонецЕсли; 
			
			// Раздел3 
			Сдвиг = СписокКолонокРаздел1.РазмерСписка();
			Для СчКолонок = 1 По СписокКолонокРаздел3.РазмерСписка() Цикл
				Колонка = СписокКолонокРаздел3.ПолучитьЗначение(СчКолонок);
				Если Колонка = "ИсчисленоДопТариф" Тогда
					СписокРасчетныхДанных.ДобавитьЗначение(0);
					Продолжить;
				КонецЕсли;
				Если Число(Колонка) <> 0 Тогда
					Колонка = Число(Колонка);	
				КонецЕсли;
				СписокРасчетныхДанных.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+МесяцОсмотра,Колонка));	
			КонецЦикла;  
			Если МесяцОсмотра > 1 Тогда
				Для СчКолонок = 1 По СписокКолонокРаздел3.РазмерСписка() Цикл 
					Колонка = СписокКолонокРаздел3.ПолучитьЗначение(СчКолонок); 
					Если Колонка = "ИсчисленоДопТариф" Тогда
						Продолжить;
					КонецЕсли;
					Если Число(Колонка) <> 0 Тогда
						Колонка = Число(Колонка);	
					КонецЕсли;
					СписокРасчетныхДанных.УстановитьЗначение(СчКолонок+Сдвиг,Число(СписокРасчетныхДанных.ПолучитьЗначение(СчКолонок+Сдвиг))-Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+МесяцОсмотра-1,Колонка)));
				КонецЦикла;
			КонецЕсли;
			
			
			// заполним список СписокВведенныхДанных данными из карточки
			// добавим данные из Раздела 1
			СчРазделов = 1;
			Для СчКолонок = 2 По 11 Цикл 
				КолонкаСтрокой = глДополнитьСтроку(СчКолонок,2);
				ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+МесяцСтрокой;
				СписокВведенныхДанных.ДобавитьЗначение(Таблица.Область(ИмяОбл).Значение);
				Если (СчКолонок = 8) или (СчКолонок = 9) или (СчКолонок = 11) Тогда
					ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+"а"+МесяцСтрокой;
					СписокВведенныхДанных.ДобавитьЗначение(Таблица.Область(ИмяОбл).Значение);    
				КонецЕсли;
			КонецЦикла;
			
			Для СчКолонок = 16 По 26 Цикл 
				Если (СчКолонок = 17) или (СчКолонок = 19) или (СчКолонок = 21)
				или (СчКолонок = 23) или (СчКолонок = 25) Тогда
					Продолжить;    
				КонецЕсли;
				КолонкаСтрокой = глДополнитьСтроку(СчКолонок,2);
				ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+МесяцСтрокой;
				СписокВведенныхДанных.ДобавитьЗначение(Таблица.Область(ИмяОбл).Значение);
			КонецЦикла;
			
			// добавим данные из Раздела 2, сложив с Разделом 1 
			СчРазделов = 2;
			Номер = 1;
			Для СчКолонок = 2 По 11 Цикл 
				КолонкаСтрокой = глДополнитьСтроку(СчКолонок,2);
				ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+МесяцСтрокой;
				ДанныеРаздела1 = Число(СписокВведенныхДанных.ПолучитьЗначение(Номер));
				СписокВведенныхДанных.УстановитьЗначение(Номер, ДанныеРаздела1 + Число(Таблица.Область(ИмяОбл).Значение));
				Если (СчКолонок = 8) или (СчКолонок = 9) или (СчКолонок = 11) Тогда
					Номер = Номер+1;
					ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+"а"+МесяцСтрокой;
					ДанныеРаздела1 = Число(СписокВведенныхДанных.ПолучитьЗначение(Номер));
					СписокВведенныхДанных.УстановитьЗначение(Номер, ДанныеРаздела1 + Число(Таблица.Область(ИмяОбл).Значение));    
				КонецЕсли;
				Номер = Номер+1;
			КонецЦикла;
			
			Для СчКолонок = 16 По 26 Цикл 
				Если (СчКолонок = 17) или (СчКолонок = 19) или (СчКолонок = 21)
				или (СчКолонок = 23) или (СчКолонок = 25) Тогда
					Продолжить;    
				КонецЕсли;
				КолонкаСтрокой = глДополнитьСтроку(СчКолонок,2);
				ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+МесяцСтрокой;
				ДанныеРаздела1 = Число(СписокВведенныхДанных.ПолучитьЗначение(Номер));
				СписокВведенныхДанных.УстановитьЗначение(Номер, ДанныеРаздела1 + Число(Таблица.Область(ИмяОбл).Значение));
				Номер = Номер+1;
			КонецЦикла; 
			
			// добавим данные из Раздела 3
			СчРазделов = 3;
			Для СчКолонок = 2 По 11 Цикл 
				КолонкаСтрокой = глДополнитьСтроку(СчКолонок,2);
				ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+МесяцСтрокой;
				СписокВведенныхДанных.ДобавитьЗначение(Таблица.Область(ИмяОбл).Значение);
				Если (СчКолонок = 8) или (СчКолонок = 9) или (СчКолонок = 11) Тогда
					ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+"а"+МесяцСтрокой;
					СписокВведенныхДанных.ДобавитьЗначение(Таблица.Область(ИмяОбл).Значение);    
				КонецЕсли;
			КонецЦикла;
			
			Для СчКолонок = 16 По 26 Цикл 
				Если (СчКолонок = 17) или (СчКолонок = 19) или (СчКолонок = 21)
				или (СчКолонок = 23) или (СчКолонок = 25) Тогда
					Продолжить;    
				КонецЕсли;
				КолонкаСтрокой = глДополнитьСтроку(СчКолонок,2);
				ИмяОбл = "П"+СчРазделов+КолонкаСтрокой+МесяцСтрокой;
				СписокВведенныхДанных.ДобавитьЗначение(Таблица.Область(ИмяОбл).Значение);
			КонецЦикла;
			
			Если глСпискиИдентичны(СписокРасчетныхДанных,СписокВведенныхДанных) = 0 Тогда  // запишем отличия от расчетных данных       
				
				
				Для СчРазделов = 0 По 1 Цикл
					// в справочнике СтраховыеВзносыДоходы два раздела, ЕНВД и неЕНВД
					
					ДобавитьНовый = 1;
					Если СпрДоходов.ВыбратьЭлементыПоРеквизиту("ГодМесяц",ГодоМесяц) = 1 Тогда
						// в справочнике есть элементы - некоторые их поля нужно изменить
						СписокЭлементов = СоздатьОбъект("СписокЗначений");
						Пока СпрДоходов.ПолучитьЭлемент() = 1 Цикл 
							Если СпрДоходов.ВидТарифа = СчРазделов Тогда
								СписокЭлементов.ДобавитьЗначение(СпрДоходов.ТекущийЭлемент());    
							КонецЕсли;
						КонецЦикла; 
						Если СписокЭлементов.РазмерСписка() > 0 Тогда
							ДобавитьНовый = 0;
						КонецЕсли;
					КонецЕсли;
					
					Если ДобавитьНовый = 0 Тогда
						// в справочнике не может быть два элемента
						// с данными за каждый месяц в разрезе ВидТарифа (ЕНВД или неЕНВД)
						Элемент = СписокЭлементов.ПолучитьЗначение(1);
						СписокЭлементов.УдалитьЗначение(1);
						// лишние элементы (возможно, появившиеся в распределенных ИБ) - удалим
						Если СписокЭлементов.РазмерСписка() > 0 Тогда
							СпрДоходов.НайтиЭлемент(СписокЭлементов.ПолучитьЗначение(1));
							СпрДоходов.Удалить(1);
							СписокЭлементов.УдалитьЗначение(1);
						КонецЕсли;
						ЭлементИзменен = 0;
						СпрДоходов.НайтиЭлемент(Элемент); 
					Иначе
						ЭлементИзменен = 0;
						СпрДоходов.Новый();
						СпрДоходов.ВидТарифа = СчРазделов;
						СпрДоходов.ГодМесяц = ГодоМесяц; 
					КонецЕсли;
					           
					НомерРаздела = СчРазделов*19;
					
					Если СпрДоходов.НачисленоВсего <> СписокВведенныхДанных.ПолучитьЗначение(1+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(1+НомерРаздела) Тогда
						СпрДоходов.НачисленоВсего = СписокВведенныхДанных.ПолучитьЗначение(1+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(1+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.НеЯвляетсяОбъектом <> СписокВведенныхДанных.ПолучитьЗначение(2+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(2+НомерРаздела) Тогда
						СпрДоходов.НеЯвляетсяОбъектом = СписокВведенныхДанных.ПолучитьЗначение(2+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(2+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.НеОблагаетсяЦеликом <> СписокВведенныхДанных.ПолучитьЗначение(3+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(3+НомерРаздела) Тогда
						СпрДоходов.НеОблагаетсяЦеликом = СписокВведенныхДанных.ПолучитьЗначение(3+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(3+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.РасходыЗаСчетФСС <> СписокВведенныхДанных.ПолучитьЗначение(4+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(4+НомерРаздела) Тогда
						СпрДоходов.РасходыЗаСчетФСС = СписокВведенныхДанных.ПолучитьЗначение(4+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(4+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ДенежноеДовольствиеВоеннослужащих <> СписокВведенныхДанных.ПолучитьЗначение(5+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(5+НомерРаздела) Тогда
						СпрДоходов.ДенежноеДовольствиеВоеннослужащих = СписокВведенныхДанных.ПолучитьЗначение(5+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(5+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ДенежноеСодержаниеПрокуроров <> СписокВведенныхДанных.ПолучитьЗначение(6+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(6+НомерРаздела) Тогда
						СпрДоходов.ДенежноеСодержаниеПрокуроров = СписокВведенныхДанных.ПолучитьЗначение(6+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(6+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.МатпомощьПриРожденииРебенка <> СписокВведенныхДанных.ПолучитьЗначение(7+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(7+НомерРаздела) Тогда
						СпрДоходов.МатпомощьПриРожденииРебенка = СписокВведенныхДанных.ПолучитьЗначение(7+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(7+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;                            
					Если СпрДоходов.СкидкаМатПомощьПриРожденииРебенка <> СписокВведенныхДанных.ПолучитьЗначение(8+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(8+НомерРаздела) Тогда
						СпрДоходов.СкидкаМатПомощьПриРожденииРебенка = СписокВведенныхДанных.ПолучитьЗначение(8+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(8+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.Матпомощь <> СписокВведенныхДанных.ПолучитьЗначение(9+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(9+НомерРаздела) Тогда
						СпрДоходов.Матпомощь = СписокВведенныхДанных.ПолучитьЗначение(9+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(9+НомерРаздела);
						ЭлементИзменен = 1;                   
					КонецЕсли;
					Если СпрДоходов.СкидкаМатПомощь <> СписокВведенныхДанных.ПолучитьЗначение(10+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(10+НомерРаздела) Тогда
						СпрДоходов.СкидкаМатПомощь = СписокВведенныхДанных.ПолучитьЗначение(10+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(10+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ДоговорыПодряда <> СписокВведенныхДанных.ПолучитьЗначение(11+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(11+НомерРаздела) Тогда
						СпрДоходов.ДоговорыПодряда = СписокВведенныхДанных.ПолучитьЗначение(11+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(11+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.Авторские <> СписокВведенныхДанных.ПолучитьЗначение(12+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(12+НомерРаздела) Тогда
						СпрДоходов.Авторские = СписокВведенныхДанных.ПолучитьЗначение(12+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(12+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.СкидкаАвторские <> СписокВведенныхДанных.ПолучитьЗначение(13+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(13+НомерРаздела) Тогда
						СпрДоходов.СкидкаАвторские = СписокВведенныхДанных.ПолучитьЗначение(13+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(13+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ИсчисленоПФРСтрах <> СписокВведенныхДанных.ПолучитьЗначение(14+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(14+НомерРаздела) Тогда
						СпрДоходов.ИсчисленоПФРСтрах = СписокВведенныхДанных.ПолучитьЗначение(14+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(14+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ИсчисленоПФРНак <> СписокВведенныхДанных.ПолучитьЗначение(15+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(15+НомерРаздела) Тогда
						СпрДоходов.ИсчисленоПФРНак = СписокВведенныхДанных.ПолучитьЗначение(15+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(15+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ИсчисленоДопТариф <> СписокВведенныхДанных.ПолучитьЗначение(16+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(16+НомерРаздела) Тогда
						СпрДоходов.ИсчисленоДопТариф = СписокВведенныхДанных.ПолучитьЗначение(16+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(16+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ИсчисленоФСС <> СписокВведенныхДанных.ПолучитьЗначение(17+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(17+НомерРаздела) Тогда
						СпрДоходов.ИсчисленоФСС = СписокВведенныхДанных.ПолучитьЗначение(17+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(17+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ИсчисленоФФОМС <> СписокВведенныхДанных.ПолучитьЗначение(18+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(18+НомерРаздела) Тогда
						СпрДоходов.ИсчисленоФФОМС = СписокВведенныхДанных.ПолучитьЗначение(18+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(18+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					Если СпрДоходов.ИсчисленоТФОМС <> СписокВведенныхДанных.ПолучитьЗначение(19+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(19+НомерРаздела) Тогда
						СпрДоходов.ИсчисленоТФОМС = СписокВведенныхДанных.ПолучитьЗначение(19+НомерРаздела) - СписокРасчетныхДанных.ПолучитьЗначение(19+НомерРаздела);
						ЭлементИзменен = 1;
					КонецЕсли;
					
					Если ЭлементИзменен = 1 Тогда
						СпрДоходов.Записать();
					КонецЕсли;
					
				КонецЦикла;	
				
				
			Иначе // расчетные данные изменены не были
				
				Для СчРазделов = 0 По 1 Цикл
					
					Если СпрДоходов.ВыбратьЭлементыПоРеквизиту("ГодМесяц",ГодоМесяц) = 1 Тогда
						СписокЭлементов = СоздатьОбъект("СписокЗначений");
						Пока СпрДоходов.ПолучитьЭлемент() = 1 Цикл 
							Если СпрДоходов.ВидТарифа = СчРазделов Тогда
								СписокЭлементов.ДобавитьЗначение(СпрДоходов.ТекущийЭлемент());    
							КонецЕсли;
						КонецЦикла; 
						Для СчЭлементов =1 По СписокЭлементов.РазмерСписка() Цикл
							СпрДоходов.НайтиЭлемент(СписокЭлементов.ПолучитьЗначение(СчЭлементов));
							СпрДоходов.Удалить(1);
						КонецЦикла;
					КонецЕсли; 
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла; 
		
		//чтобы не спрашивала о сохранении потом снова:
		Таблица.Выгрузить(ИсходнаяТаблица);

		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	//заполним буфер карточки с данными из справочника заново(остальные буферы не нужны)
	Если ТипЗначенияСтр(БуферРазделовСпр)<>"СписокЗначений" Тогда
		БуферРазделовСпр=СоздатьОбъект("СписокЗначений");
	КонецЕсли;
	БуферРазделовСпр.УдалитьВсе();
	
	Буфер=СоздатьОбъект("СписокЗначений");
	
	//придется еще раз собрать налоги, чтобы получить ДоходыВычетыНалогиСотрудников с сохраненными результатами
	ДоходыВычетыНалогиСотрудников = ""; 
	
	глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников,ФизЛицо,КонГода(Дата(Год,12,15)),,,,1); 
	
	ПоследнийМесяц = 0;
	глЗаполнитьКарточкаУчетаПоСтраховымВзносам(ФизЛицо,Год,0,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,ПоследнийМесяц,БуферРазделовСпр,ТаблицаРасшифровокПоВР);

	Возврат 1
	
КонецФункции //Сохранить  

//*****************************************************************************
// Очистить(Спрашивать = 1)
//
// Параметры
//		Спрашивать - число 1 или 0 - проверять ли заполненность карточки
//		ТекстВопроса - передается непустая строка, если надо задать свой текст вопроса
//
// Вызывается из формул элементов диалога
//		Очистить
//
// Возвращаемое значение
//		0 - если от очистки отказались
//
// Описание
//		очищает все поля ввода и зависимые от них расчетные поля для 
//		последующего заполнения
//
Функция Очистить(Спрашивать = 1, ТекстВопроса="")
	
	Если Спрашивать = 1 Тогда
		
		// если в карточке есть какие-либо цифры - спросим, точно ли нужно все перезаполнить
		СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
		Таблица.Выгрузить(СЗТекущееСостояние);
		
		// просто просуммируем квадраты всех введенных чисел; если есть хоть одно число - сумма получится ненулевой
		СуммаВсехЧисел = 0;
		Для Сч = 1 По СЗТекущееСостояние.РазмерСписка()  Цикл
			Зн = СЗТекущееСостояние.ПолучитьЗначение(Сч);
			Если ТипЗначения(Зн) = 1 Тогда
				СуммаВсехЧисел = СуммаВсехЧисел + Зн * Зн
			ИначеЕсли ПустоеЗначение(Зн) = 0 Тогда
				СуммаВсехЧисел = 1	
			КонецЕсли;
			Если СуммаВсехЧисел <> 0 Тогда
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаВсехЧисел <> 0 Тогда
			Если ТекстВопроса="" Тогда
			   ТекстВопроса="Карточка будет очищена.
			|Продолжить?";  
			КонецЕсли;
			Если Вопрос(ТекстВопроса,"Да+Нет")="Нет" Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
    ПолеЧисел1 = "";
	ПолеЧисел2 = "";
	ПолеЧисел3 = "";
	Таблица.Область("ПолеЧисел1").Значение=0;
	Таблица.Область("ПолеЧисел2").Значение=0;
	Таблица.Область("ПолеЧисел3").Значение=0;
	
	// теперь уберем нули
	Для Сч = 1 По 12 Цикл
		МесяцСтрокой = глДополнитьСтроку(Сч,2);
		Таблица.Область("П106"+МесяцСтрокой).Текст = "";
		Таблица.Область("П107"+МесяцСтрокой).Текст = "";
		Таблица.Область("П206"+МесяцСтрокой).Текст = "";
		Таблица.Область("П207"+МесяцСтрокой).Текст = "";
		Таблица.Область("П306"+МесяцСтрокой).Текст = "";
		Таблица.Область("П307"+МесяцСтрокой).Текст = "";		
		Таблица.Область("СНГ106"+МесяцСтрокой).Текст = "";
		Таблица.Область("СНГ107"+МесяцСтрокой).Текст = "";
		Таблица.Область("СНГ206"+МесяцСтрокой).Текст = "";
		Таблица.Область("СНГ207"+МесяцСтрокой).Текст = "";
		Таблица.Область("СНГ306"+МесяцСтрокой).Текст = "";
		Таблица.Область("СНГ307"+МесяцСтрокой).Текст = "";	
	КонецЦикла;
	
	//т.к. очистили от "справочных" сумм, надо вернуть поля в бледно-желтое состояние:
	Для Сч = 1 По СписокРедактируемыхЯчеек.РазмерСписка() Цикл
		ИмяОбл=СписокРедактируемыхЯчеек.ПолучитьЗначение(Сч);
		Таблица.Область(ИмяОбл).ЦветФона(255,255,128);
	КонецЦикла;
	
	Возврат 1;
	
КонецФункции //Очистить

//*****************************************************************************
// Восстановить()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Восстановить
//
// Возвращаемое значение
//		нет
//
// Описание
//		повторно заполняет таблицу по данным, имеющимся в информационной базе
//
Процедура Восстановить()
	Если Вопрос("Текущие данные будут потеряны!"+РазделительСтрок+"Восстановить сохраненные ранее данные?","Да+Нет")="Нет" Тогда
		Возврат;
	КонецЕсли;
	Очистить(0); 
	ЗаполнитьТаблицу(Контекст);
КонецПроцедуры //Восстановить

//*****************************************************************************
// Пересчитать()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Пересчитать
//
// Возвращаемое значение
//		нет
//
// Описание
//		перезаполняет карточку актуальными на текущий момент данными
//
Процедура Пересчитать() 	
	Если Сохранить() = 0 Тогда
		Возврат
	КонецЕсли;
	Очистить(0);			
	ЗаполнитьТаблицу(Контекст);
КонецПроцедуры //Пересчитать 

//*****************************************************************************
// ПриВыбореГода()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		СпЛет
//
// Возвращаемое значение
//		нет
//
// Описание
//		карточка перезаполняется данными выбранного года, если был выбран
//		другой год
//
Процедура ПриВыбореГода()
	НовыйГод = СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока());
	Если Год <> НовыйГод Тогда // выбран другой год - перезаполняем таблицу	
		Если Сохранить() = 0 Тогда
			Возврат
		КонецЕсли;
		
		Очистить(0);
		Год = НовыйГод;
		
		//запомним как бы она выглядела без данных справочника:
		ЗаполнитьТаблицу(Контекст,0);
		ИсходнаяТаблица.Выгрузить(ИсходнаяТаблицаБезСправочников); 
		
		// заполняем данными ячейки таблицы для ввода
		ЗаполнитьТаблицу(Контекст);
		Форма.Заголовок(" за "+Год+" год: "+ФизЛицо.Наименование,1);
	КонецЕсли;

КонецПроцедуры //ПриВыбореГода

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
		
		Параметры = Форма.Параметр;
		
		// основные параметры
		ДатаГода = Параметры.Получить("ДатаАктуальности");
		ФизЛицо = Параметры.Получить("Сотрудник");
		
		Год = Макс(ДатаГод(ДатаГода), 2010);
				
		// запомним названия месяцев - они используются при формировании текста предупреждения
		НазваниеМесяца[1] = "Январе"; 
		НазваниеМесяца[2] = "Феврале";
		НазваниеМесяца[3] = "Марте";   
		НазваниеМесяца[4] = "Апреле"; 
		НазваниеМесяца[5] = "Мае";     
		НазваниеМесяца[6] = "Июне";    
		НазваниеМесяца[7] = "Июле"; 	
		НазваниеМесяца[8] = "Августе";     
		НазваниеМесяца[9] = "Сентябре";    
		НазваниеМесяца[10]= "Октябре";      
		НазваниеМесяца[11]= "Ноябре";       
		НазваниеМесяца[12]= "Декабре";     
		
		НачальныйГод = 2010;
		КонечныйГод = Макс(ДатаГод(РабочаяДата()), 2010);
		
		Если НачальныйГод>КонечныйГод Тогда
			СпЛет.ДобавитьЗначение(2010,"2010 г.");
		Иначе
			Для ГодВСписок = НачальныйГод По КонечныйГод Цикл
				СпЛет.ДобавитьЗначение(ГодВСписок,Строка(ГодВСписок)+" г.");	
			КонецЦикла;	
		КонецЕсли;
		
		СтрокаТекущегоГода = СпЛет.НайтиЗначение(Год);
		
		Если СтрокаТекущегоГода <> 0 Тогда
			// показываем за какой год представлены данные
			СпЛет.ТекущаяСтрока(СтрокаТекущегоГода);
			
			// подготовим дополнительные данные    
			ЕстьЕНВД = ?(Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Да, 1, 0); 
			
			Инвалид = "000000000000";
			Для Сч = 1 По 12 Цикл
				
				ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
				Если (ФизЛицо.Инвалид.Получить(ДатаМесяца) = 1) Тогда
					Инвалид = ?(Сч=1,"",Лев(Инвалид,Сч-1))+"1"+?(Сч=12,"",Прав(Инвалид,12-Сч));
				КонецЕсли; 
				
			КонецЦикла;	
			
			ФизлицоИнвалид = -1; //в отчетном периоде была инвалидность
			Если Инвалид = "000000000000" Тогда
				ФизлицоИнвалид = 0; 
			ИначеЕсли Инвалид = "111111111111" Тогда
				ФизлицоИнвалид = 1;    
			КонецЕсли;  
			
			Летчик         = "000000000000";
			
			ЗаполнитьМассивСпискаЯчеек();
			ПолучитьСписокРедактируемыхЯчеек();
						
			//запомним как бы она выглядела без данных справочника:
			ЗаполнитьТаблицу(Контекст,0);
			ИсходнаяТаблица.Выгрузить(ИсходнаяТаблицаБезСправочников); 
			
			// уточним доступность разделов
			Для СчРазделов = 1 По 3 Цикл
				Если МассивДоступныеРазделы[СчРазделов] = 0 Тогда
					// раздел недоступен
					СписокЯчеек = МассивСписокЯчеекРаздел[СчРазделов];
					Для СчЯчеек = 1 По СписокЯчеек.РазмерСписка() Цикл
						ИмяОбл = СписокЯчеек.ПолучитьЗначение(СчЯчеек);
						Таблица.Область(ИмяОбл).Доступность(0);
						Таблица.Область(ИмяОбл).ЦветФона(12639424);
					КонецЦикла;
				ИначеЕсли (СчРазделов = 2) и (МассивДоступныеРазделы[2] = 1) и (ФизлицоИнвалид = -1) Тогда
					//сделаем недоступными ячейки в тех месяцах, когда не было инвалидности
					Для СчМесяцев =1 По 12 Цикл 
						ЕстьИнвалидность = Число(Сред(Инвалид,СчМесяцев,1));
						Если ЕстьИнвалидность = 0 Тогда 
							СписокЯчеек = МассивСписокЯчеекРаздел[2];
							Для СчЯчеек = 1 По СписокЯчеек.РазмерСписка() Цикл
								ИмяОбл = СписокЯчеек.ПолучитьЗначение(СчЯчеек);
								МесяцОтчета = Число(Прав(ИмяОбл,2));
								Если СчМесяцев=МесяцОтчета Тогда
									Таблица.Область(ИмяОбл).Доступность(0);
									Таблица.Область(ИмяОбл).ЦветФона(12639424);    
								КонецЕсли;
							КонецЦикла;
						Иначе
							СписокЯчеек = МассивСписокЯчеекРаздел[1];
							Для СчЯчеек = 1 По СписокЯчеек.РазмерСписка() Цикл
								ИмяОбл = СписокЯчеек.ПолучитьЗначение(СчЯчеек);
								МесяцОтчета = Число(Прав(ИмяОбл,2));
								Если СчМесяцев=МесяцОтчета Тогда
									Таблица.Область(ИмяОбл).Доступность(0);
									Таблица.Область(ИмяОбл).ЦветФона(12639424);    
								КонецЕсли;
							КонецЦикла; 
							
							СписокЯчеек = МассивСписокЯчеекРаздел[3];
							Для СчЯчеек = 1 По СписокЯчеек.РазмерСписка() Цикл
								ИмяОбл = СписокЯчеек.ПолучитьЗначение(СчЯчеек);
								МесяцОтчета = Число(Прав(ИмяОбл,2));
								Если СчМесяцев=МесяцОтчета Тогда
									Таблица.Область(ИмяОбл).Доступность(0);
									Таблица.Область(ИмяОбл).ЦветФона(12639424);    
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;
				
				Для СчМес = 1 по 12 Цикл
					Если Число(Сред(Летчик,СчМес,1)) = 0 Тогда
						ИмяОбл = "П"+СчРазделов+"20"+глДополнитьСтроку(СчМес,2);
						Таблица.Область(ИмяОбл).Доступность(0);
						Таблица.Область(ИмяОбл).ЦветФона(12639424);    
					КонецЕсли;
				КонецЦикла;	
			
			КонецЦикла;	
			
			// заполняем данными ячейки таблицы для ввода
			ЗаполнитьТаблицу(Контекст);
			Таблица.Опции(0,0,,,"ИК","ИК");
			Таблица.ПараметрыСтраницы(2,,,0,0,0,0,0,0,0,1);
			Форма.Заголовок(" за "+Год+" год: "+ФизЛицо.Наименование,1);
			
		Иначе
			Предупреждение("За "+Год+" год формирование Карточек по страховым взносам не поддерживается!");	
			СтатусВозврата(0);
		КонецЕсли;
		
	Иначе
		Предупреждение("Эта обработка используется в системных целях!",6);
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры // ПриОткрытии   

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии() //предопределенная
	
	// проверим, редактировали ли значения в таблице
	// если что-то изменилось - спросим, а не сохранить ли
	
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	Если глСпискиИдентичны(СЗТекущееСостояние,ИсходнаяТаблица) = 0 Тогда
		Ответ=Вопрос("Сохранить изменения?","Да+Нет+Отмена");
		Если  Ответ="Да"  Тогда
			//Если Сохранить() = 0 Тогда
			//	СтатусВозврата(0)
			//КонецЕсли;
		ИначеЕсли Ответ="Отмена"  Тогда
			СтатусВозврата(0)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //ПриЗакрытии 

//******************************************************************************
// ПолучитьЗаголовок()
//
// Параметры:
//		ИмяОбл - Имя ячейки таблицы
// Вызывается при расшифровке ячеек таблицы индивидуальной карточки по ЕСН
//
// Возвращаемое значение
//		Название заголовка окна для ячейки, которую нужно расшифровать
//
// Описание:
//
Функция ПолучитьЗаголовокОкна(ИмяОбл)
	
	ИмяЗаголовка = "";
	
	НомерМесяца = Число(Сред(ИмяОбл,2,2));
	Если (НомерМесяца<=12) и (НомерМесяца>=1) Тогда
		
		Если Сред(ИмяОбл,2,1)="1" Тогда
			Раздел = ". Основной тариф";
		ИначеЕсли Сред(ИмяОбл,2,1)="2" Тогда
			Раздел = ". Тариф инвалида";
		Иначе                         
			Раздел = ". Тариф ЕНВД";
		КонецЕсли;	
		
		//Если Прав(ИмяОбл,2)="02" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//ИначеЕсли Прав(ИмяОбл,2)="03" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//ИначеЕсли Прав(ИмяОбл,2)="04" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//ИначеЕсли Прав(ИмяОбл,2)="05" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//ИначеЕсли Прав(ИмяОбл,2)="06" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//ИначеЕсли Прав(ИмяОбл,2)="09" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//ИначеЕсли Прав(ИмяОбл,2)="10" Тогда
		//	ИмяЗаголовка = "" +НазваниеМесяца[НомерМесяца] + Раздел;
		//КонецЕсли;
	    
		
	КонецЕсли; 
	
	Возврат ИмяЗаголовка;

КонецФункции //ПолучитьЗаголовокОкна()  

//*****************************************************************************
// ПриВводеДоходов()
//
// Параметры
//  нет
//
// Возвращаемое значение
//  нет
//
// Вызывается из ячеек табличного документа
//  в колонках со 2 По 10
//
// Описание
//  обеспечивает пересчет всей зависимой информации
//  
Процедура ПриВводеДоходов() 
	
	Перем БазаПФР[3];
	Перем БазаПФРТекущийМесяц[3];
	Перем НалоговаяБазаПФРПоПредыдущийМесяц[3];
	Перем ОграниченнаяБазаПФР[3];
		
	Перем БазаФОМС[3];
	Перем БазаФОМСТекущийМесяц[3];
	Перем НалоговаяБазаФОМСПоПредыдущийМесяц[3];
	Перем ОграниченнаяБазаФОМС[3];
		
	Перем БазаФСС[3]; 
	Перем БазаФССТекущийМесяц[3];
	Перем НалоговаяБазаФССПоПредыдущийМесяц[3];
	Перем ОграниченнаяБазаФСС[3]; 
	
	Перем МассивБазыОТ[12];
	
	ТаблицаОсновныхТарифов = глПолучитьТаблицуОсновныхТарифов(Дата(Год, 01,01));
	
    ОпределитьЦвет();
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	Если Таблица.Область(Имя).Доступность() = 0 Тогда
		Возврат
	КонецЕсли;
	
	НомерРаздела = Сред(Имя,2,1);
	НомерКолонки = Сред(Имя,3,СтрДлина(Имя)-4);
	КодКолонки   = Сред(Имя,2,СтрДлина(Имя)-3);//номер раздела и номер колонки
	// месяц, в котором изменили данные: начиная с этого месяца все надо пересчитывать
	МесяцРедактирования=Число(Прав(Имя,2)); 
	
	Если МесяцРедактирования > ПоследнийМесяц Тогда 
		//заполним строки итого с начала года "пропущенных" месяцев 
		Для СчРазделов =1 По 3 Цикл
			Для Месяц = ПоследнийМесяц+1 По МесяцРедактирования Цикл
				ТекущийМесяцСтрокой=глДополнитьСтроку(Месяц,2);
				ПрошлыйМесяцСтрокой=глДополнитьСтроку(Месяц-1,2); 
				
				Для Сч = 2 По 26 Цикл 
					Если (Сч = 15) или (Сч = 17) или (Сч = 19) или (Сч = 21) или (Сч = 23) или (Сч = 25) Тогда
						Продолжить;
					КонецЕсли;  
					ТекущаяКолонка = "" + СчРазделов + глДополнитьСтроку(Сч,2);
					
					Таблица.Область("СНГ"+ТекущаяКолонка+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+ТекущаяКолонка+ПрошлыйМесяцСтрокой).Текст;
				КонецЦикла;	
				Таблица.Область("СНГ"+СчРазделов+"08а"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+СчРазделов+"08а"+ПрошлыйМесяцСтрокой).Текст;
				Таблица.Область("СНГ"+СчРазделов+"09а"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+СчРазделов+"09а"+ПрошлыйМесяцСтрокой).Текст;
				Таблица.Область("СНГ"+СчРазделов+"11а"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("СНГ"+СчРазделов+"11а"+ПрошлыйМесяцСтрокой).Текст;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	ПоследнийМесяц=Макс(ПоследнийМесяц,МесяцРедактирования); // возможно, заполнили очередной месяц - будем обновлять таблицу по этот месяц
	
	// заполним итоговую строчку месяца редактирования
	Если МесяцРедактирования = 1 Тогда
		Таблица.Область("СНГ"+КодКолонки+глДополнитьСтроку(МесяцРедактирования,2)).Текст	= Число(Таблица.Область(Имя).Текст);
	Иначе
		Таблица.Область("СНГ"+КодКолонки+глДополнитьСтроку(МесяцРедактирования,2)).Текст	= Число(Таблица.Область(Имя).Текст) + Число(Таблица.Область("СНГ"+КодКолонки+глДополнитьСтроку(МесяцРедактирования-1,2)).Текст);
	КонецЕсли;

	ПоследнийМесяц=Макс(ПоследнийМесяц,МесяцРедактирования); // возможно, заполнили очередной месяц - будем обновлять таблицу по этот месяц
	
	СкидкаМатпомощь = 0;
	РазмерСкидкаМатпомощь = 4000;	
	
	ПределДоходов = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(Дата(Год,01,01))); 
	
	
	Для Сч = 1 По 3 Цикл 
		
		БазаПФР[Сч] = 0;             // база без дохода иностранца
		БазаПФРТекущийМесяц[Сч] = 0;
		НалоговаяБазаПФРПоПредыдущийМесяц[Сч] = 0; // вся база, включая доходы иностранца
		ОграниченнаяБазаПФР[Сч] = 0; 
		
		БазаФОМС[Сч] = 0;
		БазаФОМСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФОМСПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФОМС[Сч] = 0;
		
		БазаФСС[Сч] = 0;
		БазаФССТекущийМесяц[Сч] = 0;
		НалоговаяБазаФССПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФСС[Сч] = 0;
	КонецЦикла; 
	
	// Рассчитаем облагаемые базы и налоги   
	// посчитаем базу с 1-го месяца
	Для Месяц = МесяцРедактирования По ПоследнийМесяц Цикл 
		
		МесяцСтрокой=глДополнитьСтроку(Месяц,2);
		ПредыдущийМесяцСтрокой=глДополнитьСтроку(Месяц-1,2);
		ДатаМесяца = Дата("01."+МесяцСтрокой+"."+Год); 
		
		// заполним итоговую строку редактируемой колонки 
		Если Месяц > МесяцРедактирования Тогда
			Таблица.Область("СНГ"+КодКолонки+МесяцСтрокой).Текст = Число(Таблица.Область("П"+КодКолонки+МесяцСтрокой).Текст) + Число(Таблица.Область("СНГ"+КодКолонки+ПредыдущийМесяцСтрокой).Текст);   
		КонецЕсли;
		
		НеВзиматьВзносыПФРиФСС = ФизЛицо.НеВзиматьВзносыПФРиФСС.Получить(ДатаМесяца);
		НеВзиматьВзносыФОМС = ФизЛицо.НеВзиматьВзносыФОМС.Получить(ДатаМесяца); 
		
		
		
		ТаблицаБазаОсновнойТариф = СоздатьОбъект("ТаблицаЗначений"); 
		ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаПФР","Число",15,2);
		ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФСС","Число",15,2);
		ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФОМС","Число",15,2);
		ТаблицаБазаОсновнойТариф.НоваяКолонка("ВидТарифа");
		
		// рассчитаем скидку к доходу Матпомощь
		Если Найти(КодКолонки, "09") >0 Тогда
			// изменили размер скидки или матпомощь
			// изменили размер скидки 
			
			МатпомощьПоТекущийМесяц 	   = Число(Таблица.Область("СНГ109"+МесяцСтрокой).Текст);
			МатпомощьИнвалидПоТекущийМесяц = Число(Таблица.Область("СНГ209"+МесяцСтрокой).Текст);
			МатпомощьЕНВДПоТекущийМесяц	   = Число(Таблица.Область("СНГ309"+МесяцСтрокой).Текст);
			МатпомощьВсегоПоТекущийМесяц   = МатпомощьПоТекущийМесяц + МатпомощьИнвалидПоТекущийМесяц + МатпомощьЕНВДПоТекущийМесяц;
			
			Если Месяц = 1 Тогда
				
				МатпомощьПоПредыдущийМесяц 	      = 0;
				МатпомощьИнвалидПоПредыдущийМесяц = 0;
				МатпомощьЕНВДПоПредыдущийМесяц	  = 0;
				МатпомощьВсегоПоПредыдущийМесяц   = 0;
				
				СкидкаМатПомощьПоПредыдущийМесяц 		= 0;
				СкидкаМатПомощьИнвалидПоПредыдущийМесяц = 0;
				СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= 0;
				СкидкаМатПомощьВсегоПоПредыдущийМесяц   = 0;
				
			Иначе   
				
				
				СкидкаМатПомощьПоПредыдущийМесяц 		= Число(Таблица.Область("СНГ109а"+ПредыдущийМесяцСтрокой).Текст);
				СкидкаМатПомощьИнвалидПоПредыдущийМесяц = Число(Таблица.Область("СНГ209а"+ПредыдущийМесяцСтрокой).Текст);
				СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= Число(Таблица.Область("СНГ309а"+ПредыдущийМесяцСтрокой).Текст);
				СкидкаМатПомощьВсегоПоПредыдущийМесяц   = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьЕНВДПоПредыдущийМесяц; 
				
				МатпомощьПоПредыдущийМесяц 	   	  = Число(Таблица.Область("СНГ109"+ПредыдущийМесяцСтрокой).Текст);
				МатпомощьИнвалидПоПредыдущийМесяц = Число(Таблица.Область("СНГ209"+ПредыдущийМесяцСтрокой).Текст);
				МатпомощьЕНВДПоПредыдущийМесяц	  = Число(Таблица.Область("СНГ309"+ПредыдущийМесяцСтрокой).Текст);
				МатпомощьВсегоПоПредыдущийМесяц   = МатпомощьПоПредыдущийМесяц + МатпомощьИнвалидПоПредыдущийМесяц + МатпомощьЕНВДПоПредыдущийМесяц;
				
			КонецЕсли; 
			
			МатПомощьТекущийМесяц         = МатпомощьПоТекущийМесяц - МатпомощьПоПредыдущийМесяц;
			МатПомощьИнвалидаТекущийМесяц = МатпомощьИнвалидПоТекущийМесяц - МатпомощьИнвалидПоПредыдущийМесяц;
			МатПомощьЕНВДТекущийМесяц     = МатпомощьЕНВДПоТекущийМесяц - МатпомощьЕНВДПоПредыдущийМесяц;
			МатпомощьВсегоТекущийМесяц    = МатпомощьВсегоПоТекущийМесяц - МатпомощьВсегоПоПредыдущийМесяц;
			
			// Скидка текущего месяца
			СкидкаМатПомощьВсегоТекущийМесяц = Мин(МатпомощьВсегоПоТекущийМесяц, РазмерСкидкаМатпомощь) - СкидкаМатПомощьВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю, которая учавствует в расчете
			// это для месяца, в котором превысили предел РазмерСкидкаМатпомощь
			// вычислим месячную долю, которая учавствует в расчете
			// это для месяца, в котором превысили предел РазмерСкидкаМатпомощь
			Если (МатпомощьВсегоПоТекущийМесяц = 0) или (СкидкаМатПомощьВсегоПоПредыдущийМесяц >= РазмерСкидкаМатпомощь)  Тогда 
				// предел превышен
				КоэффициентБазы = 0;
			ИначеЕсли СкидкаМатПомощьВсегоПоПредыдущийМесяц <= РазмерСкидкаМатпомощь  Тогда
				//не достигли предела
				КоэффициентБазы = 1;
			Иначе
				КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоПоТекущийМесяц;
			КонецЕсли; 
			
			// это правильный размер скидки к матпомощи в текущем месяце, он может быть
			// больше того, что ввели в таблицу 
			Если МатпомощьВсегоТекущийМесяц = 0 Тогда
				СкидкаМатПомощьТекущийМесяц 		= 0; // по основному тарифу
				СкидкаМатПомощьИнвалидаТекущийМесяц = 0; // база инвалида
				СкидкаМатПомощьЕНВДТекущийМесяц  	= 0; // база ЕНВД 
			Иначе	
				СкидкаМатПомощьТекущийМесяц 		= СкидкаМатПомощьВсегоТекущийМесяц * МатПомощьТекущийМесяц / МатпомощьВсегоТекущийМесяц * КоэффициентБазы; // по основному тарифу
				СкидкаМатПомощьИнвалидаТекущийМесяц = СкидкаМатПомощьВсегоТекущийМесяц * МатПомощьИнвалидаТекущийМесяц  / МатпомощьВсегоТекущийМесяц * КоэффициентБазы; // база инвалида
				СкидкаМатПомощьЕНВДТекущийМесяц  	= СкидкаМатПомощьВсегоТекущийМесяц * МатПомощьЕНВДТекущийМесяц  / МатпомощьВсегоТекущийМесяц * КоэффициентБазы; // база инвалида 
			КонецЕсли;
			
			
			//получим данные из таблицы
			СкидкаМатПомощьИзТаблицы 		= Число(Таблица.Область("П109а"+МесяцСтрокой).Текст);
			СкидкаМатПомощьИнвалидИзТаблицы = Число(Таблица.Область("П209а"+МесяцСтрокой).Текст);
			СкидкаМатПомощьЕНВДИзТаблицы	= Число(Таблица.Область("П309а"+МесяцСтрокой).Текст);
			
			// уточним размер скидки
			СкидкаМатПомощьТекущийМесяц 		= Мин(СкидкаМатПомощьТекущийМесяц,СкидкаМатПомощьИзТаблицы);
			СкидкаМатПомощьИнвалидаТекущийМесяц = Мин(СкидкаМатПомощьИнвалидаТекущийМесяц,СкидкаМатПомощьИнвалидИзТаблицы);
			СкидкаМатПомощьЕНВДТекущийМесяц 	= Мин(СкидкаМатПомощьЕНВДТекущийМесяц,СкидкаМатПомощьЕНВДИзТаблицы);  
			
			СкидкаМатПомощьПоТекущийМесяц        = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьТекущийМесяц;
			СкидкаМатПомощьИнвалидПоТекущийМесяц = СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьИнвалидаТекущийМесяц;
			СкидкаМатПомощьЕНВДПоТекущийМесяц    = СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЕНВДТекущийМесяц;
			СкидкаМатПомощьВсегоПоТекущийМесяц = СкидкаМатПомощьПоТекущийМесяц + СкидкаМатПомощьИнвалидПоТекущийМесяц + СкидкаМатПомощьЕНВДПоТекущийМесяц;
			
			// запишем правильный размер скидки
			Таблица.Область("П109а"+МесяцСтрокой).Текст = СкидкаМатПомощьТекущийМесяц;
			Таблица.Область("СНГ109а"+МесяцСтрокой).Текст = СкидкаМатПомощьПоТекущийМесяц;
			Таблица.Область("П209а"+МесяцСтрокой).Текст = СкидкаМатПомощьИнвалидаТекущийМесяц;
			Таблица.Область("СНГ209а"+МесяцСтрокой).Текст = СкидкаМатПомощьИнвалидПоТекущийМесяц;
			Таблица.Область("П309а"+МесяцСтрокой).Текст = СкидкаМатПомощьЕНВДТекущийМесяц;
			Таблица.Область("СНГ309а"+МесяцСтрокой).Текст = СкидкаМатПомощьЕНВДПоТекущийМесяц;			
			
		КонецЕсли;		

		Для СчТарифов = 1 по 3 Цикл 
			
			Если МесяцРедактирования > 1 Тогда
				
				НачисленоВсего				      = Число(Таблица.Область("СНГ"+СчТарифов+"02"+ПредыдущийМесяцСтрокой).Текст);
				НеЯвляетсяОбъектом                = Число(Таблица.Область("СНГ"+СчТарифов+"03"+ПредыдущийМесяцСтрокой).Текст);
				НеОблагаетсяЦеликом               = Число(Таблица.Область("СНГ"+СчТарифов+"04"+ПредыдущийМесяцСтрокой).Текст);
				РасходыЗаСчетФСС                  = Число(Таблица.Область("СНГ"+СчТарифов+"05"+ПредыдущийМесяцСтрокой).Текст);
				ДенежноеДовольствиеВоеннослужащих = Число(Таблица.Область("СНГ"+СчТарифов+"06"+ПредыдущийМесяцСтрокой).Текст);
				ДенежноеСодержаниеПрокуроров      = Число(Таблица.Область("СНГ"+СчТарифов+"07"+ПредыдущийМесяцСтрокой).Текст);
				МатпомощьПриРожденииРебенка       = Число(Таблица.Область("СНГ"+СчТарифов+"08"+ПредыдущийМесяцСтрокой).Текст);
				СкидкаМатПомощьПриРожденииРебенка = Число(Таблица.Область("СНГ"+СчТарифов+"08а"+ПредыдущийМесяцСтрокой).Текст);
				Матпомощь                         = Число(Таблица.Область("СНГ"+СчТарифов+"09"+ПредыдущийМесяцСтрокой).Текст);
				СкидкаМатПомощь                   = Число(Таблица.Область("СНГ"+СчТарифов+"09а"+ПредыдущийМесяцСтрокой).Текст);
				ДоговорыПодряда                   = Число(Таблица.Область("СНГ"+СчТарифов+"10"+ПредыдущийМесяцСтрокой).Текст);
				Авторские                         = Число(Таблица.Область("СНГ"+СчТарифов+"11"+ПредыдущийМесяцСтрокой).Текст);
				СкидкаАвторские                   = Число(Таблица.Область("СНГ"+СчТарифов+"11а"+ПредыдущийМесяцСтрокой).Текст); 
				
				НалоговаяБазаФОМС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- СкидкаАвторские;
				
				НалоговаяБазаПФР = НалоговаяБазаФОМС
				- ДенежноеСодержаниеПрокуроров;
				
				НалоговаяБазаФСС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- ДоговорыПодряда
				- Авторские; 
				
				НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаПФР;
				НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
				НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФОМС;
				
			КонецЕсли;			
			
			НачисленоВсего				      = Число(Таблица.Область("СНГ"+СчТарифов+"02"+МесяцСтрокой).Текст);
			НеЯвляетсяОбъектом                = Число(Таблица.Область("СНГ"+СчТарифов+"03"+МесяцСтрокой).Текст);
			НеОблагаетсяЦеликом               = Число(Таблица.Область("СНГ"+СчТарифов+"04"+МесяцСтрокой).Текст);
			РасходыЗаСчетФСС                  = Число(Таблица.Область("СНГ"+СчТарифов+"05"+МесяцСтрокой).Текст);
			ДенежноеДовольствиеВоеннослужащих = Число(Таблица.Область("СНГ"+СчТарифов+"06"+МесяцСтрокой).Текст);
			ДенежноеСодержаниеПрокуроров      = Число(Таблица.Область("СНГ"+СчТарифов+"07"+МесяцСтрокой).Текст);
			МатпомощьПриРожденииРебенка       = Число(Таблица.Область("СНГ"+СчТарифов+"08"+МесяцСтрокой).Текст);
			СкидкаМатПомощьПриРожденииРебенка = Число(Таблица.Область("СНГ"+СчТарифов+"08а"+МесяцСтрокой).Текст);
			Матпомощь                         = Число(Таблица.Область("СНГ"+СчТарифов+"09"+МесяцСтрокой).Текст);
			СкидкаМатПомощь                   = Число(Таблица.Область("СНГ"+СчТарифов+"09а"+МесяцСтрокой).Текст);
			ДоговорыПодряда                   = Число(Таблица.Область("СНГ"+СчТарифов+"10"+МесяцСтрокой).Текст);
			Авторские                         = Число(Таблица.Область("СНГ"+СчТарифов+"11"+МесяцСтрокой).Текст);
			СкидкаАвторские                   = Число(Таблица.Область("СНГ"+СчТарифов+"11а"+МесяцСтрокой).Текст); 
			
			НалоговаяБазаФОМС = НачисленоВсего
			- НеЯвляетсяОбъектом
			- НеОблагаетсяЦеликом
			- РасходыЗаСчетФСС
			- ДенежноеДовольствиеВоеннослужащих
			- СкидкаМатПомощь
			- СкидкаМатПомощьПриРожденииРебенка
			- СкидкаАвторские;
			
			НалоговаяБазаПФР = НалоговаяБазаФОМС
			- ДенежноеСодержаниеПрокуроров;
			
			НалоговаяБазаФСС = НачисленоВсего
			- НеЯвляетсяОбъектом
			- НеОблагаетсяЦеликом
			- РасходыЗаСчетФСС
			- ДенежноеДовольствиеВоеннослужащих
			- СкидкаМатПомощь
			- СкидкаМатПомощьПриРожденииРебенка
			- ДоговорыПодряда
			- Авторские;
			
			
			БазаПФРТекущийМесяц[СчТарифов] = 0;
			БазаФССТекущийМесяц[СчТарифов] = 0;
			Если НеВзиматьВзносыПФРиФСС = 0 Тогда  // учтем флажок страховых взносов
				БазаПФРТекущийМесяц[СчТарифов] = НалоговаяБазаПФР - НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов];
				БазаФССТекущийМесяц[СчТарифов] = НалоговаяБазаФСС - НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов];
			КонецЕсли;
			НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаПФР;
			НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
			
			БазаПФР[СчТарифов] = БазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов];
			БазаФСС[СчТарифов] = БазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов];
			
			БазаФОМСТекущийМесяц[СчТарифов] = 0;
			Если НеВзиматьВзносыФОМС = 0 Тогда  // учтем флажок страховых взносов
				БазаФОМСТекущийМесяц[СчТарифов] = НалоговаяБазаФОМС - НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов];
			КонецЕсли; 
			НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФОМС;
			
			БазаФОМС[СчТарифов] = БазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов];
			
			
		КонецЦикла; // цикл по тарифам
		
		//******************************************************************************
		// Расчет облагаемой базы, с учетом ограничения с верху
		
		БазаПФРВсегоПоТекущийМесяц    = БазаПФР[1] + БазаПФР[2] + БазаПФР[3];
		БазаПФРВсегоТекущийМесяц      = БазаПФРТекущийМесяц[1] + БазаПФРТекущийМесяц[2] + БазаПФРТекущийМесяц[3];
		БазаПФРВсегоПоПредыдущийМесяц = БазаПФРВсегоПоТекущийМесяц - БазаПФРВсегоТекущийМесяц;
		
		// Вся облагаемая база текущего месяца, с учетом ограничения сверху
		ОблагаемаяБазаПФРВсегоТекущийМесяц = Мин(БазаПФРВсегоПоТекущийМесяц, ПределДоходов) - БазаПФРВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю базы, которая учавствует в расчете
		// это для месяца, в котором превысили предел
		Если (БазаПФРВсегоПоТекущийМесяц = 0) или (БазаПФРВсегоПоПредыдущийМесяц >= ПределДоходов)  Тогда 
			// предел превышен
			КоэффициентБазыПФР = 0;
		ИначеЕсли БазаПФРВсегоПоТекущийМесяц <= ПределДоходов  Тогда
			//не достигли предела, вся база входит в облагаемую
			КоэффициентБазыПФР = 1;
		Иначе
			КоэффициентБазыПФР = ОблагаемаяБазаПФРВсегоТекущийМесяц / БазаПФРВсегоТекущийМесяц;
		КонецЕсли; 
		
		
		БазаФОМСВсегоПоТекущийМесяц    = БазаФОМС[1] + БазаФОМС[2] + БазаФОМС[3];
		БазаФОМСВсегоТекущийМесяц      = БазаФОМСТекущийМесяц[1] + БазаФОМСТекущийМесяц[2] + БазаФОМСТекущийМесяц[3];
		БазаФОМСВсегоПоПредыдущийМесяц = БазаФОМСВсегоПоТекущийМесяц - БазаФОМСВсегоТекущийМесяц;
		
		// Вся облагаемая база текущего месяца, с учетом ограничения сверху
		ОблагаемаяБазаФОМСВсегоТекущийМесяц = Мин(БазаФОМСВсегоПоТекущийМесяц, ПределДоходов) - БазаФОМСВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю базы, которая учавствует в расчете
		// это для месяца, в котором превысили предел
		Если (БазаФОМСВсегоПоТекущийМесяц = 0) или (БазаФОМСВсегоПоПредыдущийМесяц >= ПределДоходов)  Тогда 
			// предел превышен
			КоэффициентБазыФОМС = 0;
		ИначеЕсли БазаФОМСВсегоПоТекущийМесяц <= ПределДоходов  Тогда
			//не достигли предела, вся база входит в облагаемую
			КоэффициентБазыФОМС = 1;
		Иначе
			КоэффициентБазыФОМС = ОблагаемаяБазаФОМСВсегоТекущийМесяц / БазаФОМСВсегоТекущийМесяц;
		КонецЕсли;
		
		
		БазаФССВсегоПоТекущийМесяц    = БазаФСС[1] + БазаФСС[2] + БазаФСС[3];
		БазаФССВсегоТекущийМесяц      = БазаФССТекущийМесяц[1] + БазаФССТекущийМесяц[2] + БазаФССТекущийМесяц[3];
		БазаФССВсегоПоПредыдущийМесяц = БазаФССВсегоПоТекущийМесяц - БазаФССВсегоТекущийМесяц;
		
		// Вся облагаемая база текущего месяца, с учетом ограничения сверху
		ОблагаемаяБазаФССВсегоТекущийМесяц = Мин(БазаФССВсегоПоТекущийМесяц, ПределДоходов) - БазаФССВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю базы, которая учавствует в расчете
		// это для месяца, в котором превысили предел
		Если (БазаФССВсегоПоТекущийМесяц = 0) или (БазаФССВсегоПоПредыдущийМесяц >= ПределДоходов)  Тогда 
			// предел превышен
			КоэффициентБазыФСС = 0;
		ИначеЕсли БазаФССВсегоПоТекущийМесяц <= ПределДоходов  Тогда
			//не достигли предела, вся база входит в облагаемую
			КоэффициентБазыФСС = 1;
		Иначе
			КоэффициентБазыФСС = ОблагаемаяБазаФССВсегоТекущийМесяц / БазаФССВсегоТекущийМесяц;
		КонецЕсли;
		
		Для СчТарифов = 1 по 3 Цикл
			
			Если СчТарифов = 1 Тогда 
				// по основному тарифу базу пишем в разрезе тарифов
				// получим основной тариф текущего месяца
				ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(Сч);
				ОсновнойТариф = ТаблицаОсновныхТарифов.ВидТарифа;
				
				Если Месяц = 1 Тогда 
					//первый месяц
					ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
					ТаблицаБазаОсновнойТариф.ВидТарифа = ОсновнойТариф;
					ТаблицаБазаОсновнойТариф.БазаПФР   = БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
					ТаблицаБазаОсновнойТариф.БазаФСС   = БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
					ТаблицаБазаОсновнойТариф.БазаФОМС  = БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
				Иначе
					ТаблицаБазаОсновнойТариф.Загрузить(МассивБазыОТ[Месяц-1]);
					НомерСтрокиТаблицы = "";
					Если ТаблицаБазаОсновнойТариф.НайтиЗначение(ОсновнойТариф,НомерСтрокиТаблицы,"ВидТарифа") = 1 Тогда
						ТаблицаБазаОсновнойТариф.ПолучитьСтрокуПоНомеру(НомерСтрокиТаблицы); 
						ТаблицаБазаОсновнойТариф.ВидТарифа = ОсновнойТариф;
						ТаблицаБазаОсновнойТариф.БазаПФР   = ТаблицаБазаОсновнойТариф.БазаПФР  + БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
						ТаблицаБазаОсновнойТариф.БазаФСС   = ТаблицаБазаОсновнойТариф.БазаФСС  + БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
						ТаблицаБазаОсновнойТариф.БазаФОМС  = ТаблицаБазаОсновнойТариф.БазаФОМС + БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
					Иначе
						ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
						ТаблицаБазаОсновнойТариф.ВидТарифа = ОсновнойТариф;
						ТаблицаБазаОсновнойТариф.БазаПФР   = БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
						ТаблицаБазаОсновнойТариф.БазаФСС   = БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
						ТаблицаБазаОсновнойТариф.БазаФОМС  = БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
					КонецЕсли;	
				КонецЕсли;         
				
				МассивБазыОТ[Месяц] = ТаблицаБазаОсновнойТариф;
				
				Таблица.Область("П112"+МесяцСтрокой).Текст = БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
				Таблица.Область("П113"+МесяцСтрокой).Текст = БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
				Таблица.Область("П114"+МесяцСтрокой).Текст = БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
				
				Таблица.Область("СНГ112"+МесяцСтрокой).Текст = ТаблицаБазаОсновнойТариф.БазаПФР;
				Таблица.Область("СНГ113"+МесяцСтрокой).Текст = ТаблицаБазаОсновнойТариф.БазаФСС;
				Таблица.Область("СНГ114"+МесяцСтрокой).Текст = ТаблицаБазаОсновнойТариф.БазаФОМС;
				
			Иначе
				
				ОграниченнаяБазаПФР[СчТарифов] = ОграниченнаяБазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов] * КоэффициентБазыПФР;
				ОграниченнаяБазаФСС[СчТарифов] = ОграниченнаяБазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов] * КоэффициентБазыФСС;
				ОграниченнаяБазаФОМС[СчТарифов] = ОграниченнаяБазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов] * КоэффициентБазыФОМС;
				
				Таблица.Область("П"+СчТарифов+"12"+МесяцСтрокой).Текст = БазаПФРТекущийМесяц[СчТарифов] * КоэффициентБазыПФР;
				Таблица.Область("П"+СчТарифов+"13"+МесяцСтрокой).Текст = БазаФССТекущийМесяц[СчТарифов] * КоэффициентБазыФСС;
				Таблица.Область("П"+СчТарифов+"14"+МесяцСтрокой).Текст = БазаФОМСТекущийМесяц[СчТарифов] * КоэффициентБазыФОМС;
				
				Таблица.Область("СНГ"+СчТарифов+"12"+МесяцСтрокой).Текст = ОграниченнаяБазаПФР[СчТарифов];
				Таблица.Область("СНГ"+СчТарифов+"13"+МесяцСтрокой).Текст = ОграниченнаяБазаФСС[СчТарифов];
				Таблица.Область("СНГ"+СчТарифов+"14"+МесяцСтрокой).Текст = ОграниченнаяБазаФОМС[СчТарифов];
				
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла; // цикл по месяцам при расчете баз
	
КонецПроцедуры // ПриВводеДоходов


//*****************************************************************************
// ПриВводеНалогов()
//
// Параметры
//		нет
//
// Вызывается из ячеек табличного документа
//		в колонках с 28 По 31
//
// Возвращаемое значение
//		нет
//
// Описание
//		обеспечивает пересчет строк "с начала года" в "затронутой" колонке
//		
Процедура ПриВводеНалогов()

	ОпределитьЦвет();
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	Если Таблица.Область(Имя).Доступность() = 0 Тогда
		Возврат
	КонецЕсли;
	
	НомерКолонки = Сред(Имя,3,2);
	НомерРаздела = Сред(Имя,2,1);
	МесяцРедактирования=Число(Прав(Имя,2)); // месяц, в котором изменили данные: начиная с этого месяца все надо пересчитывать
	ПоследнийМесяц=Макс(ПоследнийМесяц,МесяцРедактирования); // возможно заполнили очередной месяц - будем обновлять таблицу по этот месяц
	
	БылоВКолонке=0;
	Если МесяцРедактирования>1 Тогда
		БылоВКолонке=Число(Таблица.Область("СНГ"+НомерРаздела+НомерКолонки+глДополнитьСтроку(МесяцРедактирования-1,2)).Текст);
	КонецЕсли;         
	
	Таблица.Область("СНГ"+Прав(Имя,5)).Текст=Формат(БылоВКолонке+Таблица.Область(Имя).Значение,"Ч015.2."); // текущая строка "с начала года"
	
	// пересчитываем строки "с начала года" 
	Для Месяц = МесяцРедактирования+1 По ПоследнийМесяц Цикл
		ТекущийМесяцСтрокой=глДополнитьСтроку(Месяц,2);
		ПрошлыйМесяцСтрокой=глДополнитьСтроку(Месяц-1,2);
		Таблица.Область("СНГ"+НомерРаздела+НомерКолонки+ТекущийМесяцСтрокой).Текст=Формат(Число(Таблица.Область("СНГ"+НомерРаздела+НомерКолонки+ПрошлыйМесяцСтрокой).Текст)+Таблица.Область("П"+НомерРаздела+НомерКолонки+ТекущийМесяцСтрокой).Значение,"Ч015.2.");
	КонецЦикла;
	
КонецПроцедуры //ПриВводеНалогов 


//******************************************************************************
// ЗаполнитьБезСправочниковОбласть()      
//
// Параметры:
//		ИмяОбл - имя области
//
// Описание:
//		Восстановление области карточки без "ручных" правок.
//
Процедура ЗаполнитьБезСправочниковОбласть(Знач ИмяОбл)
	Если Таблица.Область(ИмяОбл).Доступность()=1 Тогда
		Таблица.Область(ИмяОбл).Значение = ИсходнаяТаблицаБезСправочников.Получить(ИмяОбл);
		Таблица.Область(ИмяОбл).ЦветФона(255,255,128);
	КонецЕсли;
КонецПроцедуры //ЗаполнитьБезСправочниковОбласть()

//******************************************************************************
// ЗаполнитьБезСправочников()      
//
// Параметры:
//		нет
//
// Возвращаемое значение
//		нет
//
// Описание:
//		Если в карточке есть ручные правки (ярко-желтые поля?), то будет задан вопрос о подтверждении намерения и  
//		карточка переформируется по данным только из журналов расчетов.
//
Процедура ЗаполнитьБезСправочников()
	
	ТекстВопроса=	"Отмена исправлений значения сумм, 
	|внесенных непосредственно в поля формы 
	|Карточки учета по страховым взносам!
	|Продолжить?"; 
	    
	Если Вопрос(ТекстВопроса,"Да+Нет") = "Нет" Тогда
		Возврат
	КонецЕсли;
	
	//меню:
	СписокВыбора = СоздатьОбъект("СписокЗначений");
	СписокВыбора.ДобавитьЗначение("1","Все месяцы");
	СписокВыбора.ДобавитьЗначение("2","Текущую ячейку");
	СписокВыбора.ДобавитьЗначение("3","Начиная с месяца текущей ячейки");
	Имя = "";
	Если СписокВыбора.ВыбратьЗначение(Имя,,,,1)=1 Тогда
		Если Имя = "1" Тогда
		
			ТекстВопроса=	"Все исправления сумм, полученным по данным учета,
			|сделанные непосредственно в Каротчке учета по страховым взносам, будут отменены. 
			|Карточка будет сформирована только 
			|по данным расчетов. 
			|Продолжить?";
			ТаблицаДо = "";
			ИсходнаяТаблица.Выгрузить(ТаблицаДо); //чтобы не забыть потом сохранить преобразованную таблицу, запомним как она сейчас выглядит
			Если Очистить(1,ТекстВопроса)=1 Тогда
				ЗаполнитьТаблицу(Контекст,0);
				//Запомним состояние:
				ТаблицаДо.Выгрузить(ИсходнаяТаблица);
			КонецЕсли;
		ИначеЕсли Имя = "2" Тогда
			ТекстВопроса=	"Будет отменено исправление, сделанное 
			|в текущей ячейке карточки.
			|Продолжить?";
			Если Вопрос(ТекстВопроса,"Да+Нет")="Да" Тогда
				ИмяОбл = СокрЛП(Таблица.АктивнаяОбласть());
				Если Таблица.Область(ИмяОбл).Доступность()=1 Тогда
					Если (ИсходнаяТаблицаБезСправочников.Получить(ИмяОбл)<>Таблица.Область(ИмяОбл).Значение) Тогда
						Таблица.Область(ИмяОбл).Значение = ИсходнаяТаблицаБезСправочников.Получить(ИмяОбл);
						Таблица.Область(ИмяОбл).ЦветФона(255,255,128);
						НомерСтолбца = Сред(ИмяОбл, 3, 2);
						Если (Лев(ИмяОбл,1) = "П") и (Число(НомерСтолбца)>=16) Тогда
							ПриВводеНалогов();
						Иначе
							ПриВводеДоходов();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ТекстВопроса=	"Исправления сумм, полученным по данным учета
			|сделанные непосредственно в Каротчке учета по  
			|страховым взносам, начиная с месяца, к которому 
			|относится текущая ячейка, будут отменены. 
			|Продолжить?";
			Если Вопрос(ТекстВопроса,"Да+Нет")="Да" Тогда
				ИмяОбл = СокрЛП(Таблица.АктивнаяОбласть());
	            
				// начиная с этой ячейки все последующие месяцы возвращаем в исходное состояние:
				// определим ячейки, подлежащие восстановлению:
	
				// по номеру ячейки определим месяц, начиная с которого очищать:
				ПервыйМесяц = Число(Прав(ИмяОбл,2));
				Нашли = 0;
				Если (Лев(Строка(ИмяОбл),1)="П") и (Число(Сред(ИмяОбл,2,2))>0) Тогда
					Нашли = 1; 
				КонецЕсли;
				ТекущаяОбл	= ИмяОбл;
				
				Если Нашли = 0 Тогда
					//меню:
					СписокВыбора = СоздатьОбъект("СписокЗначений");
					СписокВыбора.ДобавитьЗначение("1","начиная с января");
					СписокВыбора.ДобавитьЗначение("2","начиная с февраля");
					СписокВыбора.ДобавитьЗначение("3","начиная с марта");
					СписокВыбора.ДобавитьЗначение("4","начиная с апреля");
					СписокВыбора.ДобавитьЗначение("5","начиная с мая");
					СписокВыбора.ДобавитьЗначение("6","начиная с июня");
					СписокВыбора.ДобавитьЗначение("7","начиная с июля");
					СписокВыбора.ДобавитьЗначение("8","начиная с августа");
					СписокВыбора.ДобавитьЗначение("9","начиная с сентября");
					СписокВыбора.ДобавитьЗначение("10","начиная с октября");
					СписокВыбора.ДобавитьЗначение("11","начиная с ноября");
					СписокВыбора.ДобавитьЗначение("12","начиная с декабря");
					Имя = "";
					Если СписокВыбора.ВыбратьЗначение(Имя,,,,1)=1 Тогда
						ПервыйМесяц = Число(Имя);
					Иначе
						Возврат;
					КонецЕсли;
				КонецЕсли;     
				
				ИмяАктивнойОбласти = Таблица.АктивнаяОбласть();
				Таблица.АктивнаяОбласть(Лев(ИмяАктивнойОбласти,2)+"02"+Сред(ИмяАктивнойОбласти,5));
				
				Для СчРездел = 1 По 3 Цикл 
					// заполним доп. колонки
					Для Сч = ПервыйМесяц По 12  Цикл //очищаем все, начиная с месяца ПервыйМесяц
						ЗаполнитьБезСправочниковОбласть("П"+СчРездел+"08а"+глДополнитьСтроку(Сч,2));
						ЗаполнитьБезСправочниковОбласть("П"+СчРездел+"09а"+глДополнитьСтроку(Сч,2));
						ЗаполнитьБезСправочниковОбласть("П"+СчРездел+"11а"+глДополнитьСтроку(Сч,2));
					КонецЦикла;	
					//заполним основные колонки
					Для СчетчикКолонок = 2 По 26 Цикл                   
						Если (СчетчикКолонок = 15) или (СчетчикКолонок = 17) или (СчетчикКолонок = 19)  или (СчетчикКолонок = 21)
								 или (СчетчикКолонок = 23)  или (СчетчикКолонок = 25) Тогда
							Продолжить
						КонецЕсли;						
						Для Сч = ПервыйМесяц По 12  Цикл //очищаем все, начиная с месяца ПервыйМесяц
							ИмяОбл = "П"+СчРездел+глДополнитьСтроку(СчетчикКолонок,2)+глДополнитьСтроку(Сч,2);
							ЗаполнитьБезСправочниковОбласть(ИмяОбл);
							ПриВводеДоходов();
							ПриВводеНалогов();
						КонецЦикла;												
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ЗаполнитьБезСправочников()
//******************************************************************************
// ПолучитьРасшифровку()
//
// Параметры:
//		нет
//
// Выполняется при нажатии на кнопку "Раскрыть (F5)"
//
// Возвращаемое значение
//		нет
//
// Описание:
//		пытаемся разложить сумму текущей активной ячейки на две составляющие:
//		по данным ЖЗ
//		по введенным вручную суммам
//
Процедура ПолучитьРасшифровку()

	// проверим, редактировали ли значения в таблице
	// если что-то изменилось - спросим, а не сохранить ли
	
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	Если глСпискиИдентичны(СЗТекущееСостояние,ИсходнаяТаблица) = 0 Тогда
		Ответ=Вопрос(	"Таблица была изменена.
		|Расшифровка текущей ячейки может быть показана неверно. 
		|Сохранить изменения?","Да+Нет+Отмена");
		Если  Ответ="Да"  Тогда
			Если Сохранить() = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		ИначеЕсли Ответ="Отмена"  Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СписокИмен = СписокРедактируемыхЯчеек;
	ИмяОбл = СокрЛП(Таблица.АктивнаяОбласть());
	
	Если СписокИмен.НайтиЗначение(ИмяОбл)=0 Тогда
		Предупреждение("Расшифровка данной ячейки не поддерживается");
		Возврат;
	Иначе
		ЗаголовокОкна = ПолучитьЗаголовокОкна(ИмяОбл);
	КонецЕсли;
	
	ИтЗначение=0;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Расшифровка");
	
	ИмяКолонки="Сумма";
	
	ИмяЗаглКолонки="Вид расчета";
	Таб.ВывестиСекцию("Шапка");		
    СчСтрокВР = "";
	БылоЗначение=0;
	Если ТаблицаРасшифровокПоВР.НайтиЗначение(глДополнитьСтроку(ИмяОбл,10," ",1),СчСтрокВР,1) = 1 Тогда
		ТаблицаСуммпоВР=ТаблицаРасшифровокПоВР.ПолучитьЗначение(СчСтрокВР,2); 
		Если ТипЗначенияСтр(ТаблицаСуммпоВР)="ТаблицаЗначений" Тогда
			Для Сч = 1 По ТаблицаСуммпоВР.КоличествоСтрок() Цикл
				ИмяСтроки=ТаблицаСуммпоВР.ПолучитьЗначение(Сч,1);
				Значение= ТаблицаСуммпоВР.ПолучитьЗначение(Сч,2);
				Таб.ВывестиСекцию("стр");
				ИтЗначение=ИтЗначение+Значение ;
				БылоЗначение=1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Если БылоЗначение=1 Тогда
		ИмяСтроки="Итого:";
		Значение= ИтЗначение;
		Таб.ВывестиСекцию("подитог");
	Иначе 
		Значение= 0;
		Таб.ВывестиСекцию("стр");
	КонецЕсли;
	
	Значение = БуферРазделовСпр.Получить(ИмяОбл);
	Если ПустоеЗначение(Значение) = 0 Тогда
		ИмяСтроки="По данным, введенным вручную";
		Таб.ВывестиСекцию("стр");
		ИтЗначение=ИтЗначение+Значение ;
	КонецЕсли;
	Таб.ВывестиСекцию("Итог");
	
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0);
	Таб.Показать(ЗаголовокОкна);
	
КонецПроцедуры //ПолучитьРасшифровку()


