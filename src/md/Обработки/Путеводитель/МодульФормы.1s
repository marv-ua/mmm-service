Перем ИсторияПереходов;  
Перем ИндИстории;
Перем ПоказПриЗапуске;
Перем ПоказПоследней;
Перем ТекущаяСтраница;
Перем ЧислоРазделов;
Перем МенюСодержание;
Перем Главная;
Перем СекцияЗаголовок,СекцияГлавная,СекцияШапка,СекцияВпервые;
Перем Показ,ГлавнаяСтр;

//******************************************************************************
Процедура ПоказатьСтраницу(ИмяСтраницы)
	Таблица.Очистить();
	Таблица.ВывестиСекцию(СекцияЗаголовок);
	Если (ИмяСтраницы="ПервыйЗапуск")ИЛИ(ИмяСтраницы="Путеводитель") Тогда
		Таблица.ВывестиСекцию(СекцияШапка);
		Если Форма.Параметр = "ПервыйЗапуск" Тогда
			Таблица.ВывестиСекцию(СекцияВпервые);
		КонецЕсли;
	КонецЕсли;
	Если ПустаяСтрока(ИмяСтраницы)=0 Тогда
		Таблица.ИсходнаяТаблица(ИмяСтраницы);
		ТекущаяСтраница=ИмяСтраницы;		
	Иначе
		Таблица.ИсходнаяТаблица(ТекущаяСтраница);
	КонецЕсли;
	Таблица.ВывестиСекцию("Страница");
	Если ((ПустоеЗначение(ПоказПоследней)=1) ИЛИ (ПоказПоследней=-1)) И (ИмяСтраницы<>"ПервыйЗапуск") Тогда
		СекцияГлавная.Область("ГлавнаяСтр").Текст = ?(Главная=ИсторияПереходов.ПолучитьЗначение(ИндИстории), "ю", "Ё");
		//"ю" - флаг установлен
		//"Ё" - флаг сброшен
		Таблица.ВывестиСекцию(СекцияГлавная);
	КонецЕсли;
	Таблица.Опции(0,0,1,0,,"Старт");
	Таблица.Защита(1);
	Таблица.ТолькоПросмотр();
	Таблица.Показать();
КонецПроцедуры

//******************************************************************************
Функция СчетаПоРазделам(Раздел)
	СписокСчетов=СоздатьОбъект("СписокЗначений");
	Если Раздел="ОсновныеСредства" Тогда
	    СписокСчетов.ДобавитьЗначение("01");
	    СписокСчетов.ДобавитьЗначение("02");
	    //СписокСчетов.ДобавитьЗначение("03.1");
	    СписокСчетов.ДобавитьЗначение("03");     //
	    СписокСчетов.ДобавитьЗначение("08.1");   //
	    СписокСчетов.ДобавитьЗначение("08.2");   //
	    СписокСчетов.ДобавитьЗначение("08.4");
	    //СписокСчетов.ДобавитьЗначение("08.11");
	    //СписокСчетов.ДобавитьЗначение("47");
	    СписокСчетов.ДобавитьЗначение("83.1");	 //	
	    СписокСчетов.ДобавитьЗначение("98.2");   //
	    СписокСчетов.ДобавитьЗначение("001");
	    СписокСчетов.ДобавитьЗначение("010");    //
	    //СписокСчетов.ДобавитьЗначение("014");
	    //СписокСчетов.ДобавитьЗначение("015");
	    //СписокСчетов.ДобавитьЗначение("021");
	ИначеЕсли Раздел="НематериальныеАктивы" Тогда
	    СписокСчетов.ДобавитьЗначение("04");
	    СписокСчетов.ДобавитьЗначение("05");
	    СписокСчетов.ДобавитьЗначение("08.5");   //
	    //СписокСчетов.ДобавитьЗначение("08.6");
	    //СписокСчетов.ДобавитьЗначение("48");
	ИначеЕсли Раздел="Материалы" Тогда
	    СписокСчетов.ДобавитьЗначение("10");
	ИначеЕсли Раздел="Контрагенты" Тогда
		СписокСчетов.ДобавитьЗначение("60");
		//СписокСчетов.ДобавитьЗначение("61");
		СписокСчетов.ДобавитьЗначение("62");
		//СписокСчетов.ДобавитьЗначение("64");
		СписокСчетов.ДобавитьЗначение("76");       
	КонецЕсли;
	Возврат СписокСчетов;
КонецФункции

//******************************************************************************
// Вызов отчета "Оборотно-сальдовая ведомость".
Процедура ОСВ(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомость");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());

	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.ОборотноСальдоваяВедомость");
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Оборотно-сальдовая ведомость по счету".
Процедура ОСВпоСчету(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомостьПоСчету");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());

	Расшифровка.Установить("ОтборСубконто1", 1);
	Расшифровка.Установить("ПоГруппам1", 1);
	Расшифровка.Установить("ОтборСубконто2", 1);
	Расшифровка.Установить("ПоГруппам2", 1);
	Расшифровка.Установить("ДанныеПоСубсчетам", 1);

	Если Вид="Общая" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("01"));
	ИначеЕсли Вид="Материалы" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("10"));
	ИначеЕсли Вид="Товары" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("41"));
	ИначеЕсли Вид="Продукция" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("43"));                    //
	ИначеЕсли Вид="Банк" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("51"));
	ИначеЕсли Вид="Покупатели" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("62.1"));
	ИначеЕсли Вид="Авансы" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("62.2"));                  //
	ИначеЕсли Вид="Поставщики" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("60.1"));
	ИначеЕсли Вид="Подотчет" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("71.1"));
	ИначеЕсли Вид="Затраты" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("20"));
	ИначеЕсли Вид="Издержки" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("44.1"));
	ИначеЕсли Вид="КоммерческиеРасходы" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("44.2"));                               //
	ИначеЕсли Вид="РасходыНаПродажу" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("44.3"));                               //
	ИначеЕсли Вид = "НДСпоставщика" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("19.3"));                               //
	ИначеЕсли Вид = "НДСаванса" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("76.АВ"));                               //
	ИначеЕсли Вид = "НДСотложенный" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("76.Н"));
	ИначеЕсли Вид = "НДС90" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("90.3"));
	ИначеЕсли Вид = "46" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("46"));
	ИначеЕсли Вид="Контрагенты" Тогда
		Меню=СоздатьОбъект("СписокЗначений");   
		Меню.ДобавитьЗначение(СчетПоКоду("45"),"45 Товары отгруженные");       
		Меню.ДобавитьЗначение(СчетПоКоду("58"),"58 Финансовые вложения");       
		Меню.ДобавитьЗначение(СчетПоКоду("60"),"60 Расчеты с поставщиками и подрядчиками");
		Меню.ДобавитьЗначение(СчетПоКоду("62"),"62 Расчеты с покупателями и заказчиками");
		Меню.ДобавитьЗначение(СчетПоКоду("66"),"66 Расчеты по краткосрочным кредитам");
		Меню.ДобавитьЗначение(СчетПоКоду("67"),"67 Расчеты по долгосрочным кредитам");
		Меню.ДобавитьЗначение(СчетПоКоду("75.1"),"75.1 Вклады в уставной фонд");
		Меню.ДобавитьЗначение(СчетПоКоду("76.5"),"76 Расчеты с разными дебиторами и кредиторами");       
		Меню.ДобавитьЗначение(СчетПоКоду("004"),"004 Товары, принятые на комиссию");       
		ВыбСчет="";
		Если Меню.ВыбратьЗначение(ВыбСчет,"Выберите счет")=0 Тогда
			Возврат;
		КонецЕсли;
		Расшифровка.Установить("Счет", ВыбСчет);
	КонецЕсли;

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.ОборотноСальдоваяВедомостьПоСчету");
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Анализ счета".
Процедура АнализСчета(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "АнализСчета");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Если Вид="Банк" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("51"));
	ИначеЕсли Вид="Касса" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("50.1"));
	ИначеЕсли Вид="Отклонения" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("40"));
	ИначеЕсли Вид="Прибыль" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("90"));
	ИначеЕсли Вид="НДФЛ" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("68.1"));
	ИначеЕсли Вид="НДС" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("68.2"));
	ИначеЕсли Вид="ЕСН" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("69"));
		Расшифровка.Установить("ДанныеПоСубсчетам", 1);
	КонецЕсли;
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.АнализСчета");
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Анализ счета по датам".
Процедура АнализСчетаПоДатам(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "АнализСчетаПоДатам");
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Если Вид="Касса" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("50.1"));
    КонецЕсли;
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.АнализСчетаПоДатам");
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Карточка счета".
Процедура КарточкаСчета(Вид, Режим=0)
	Перем Фрм;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "КарточкаСчета");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Если Вид="Банк" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("51"));
	ИначеЕсли Вид="Касса" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("50"));
	ИначеЕсли Вид="Товары" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("41"));
	ИначеЕсли Вид="Продукция" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("43"));
	ИначеЕсли Вид="Затраты" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("20"));
	ИначеЕсли Вид="Подотчет" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("71"));
	ИначеЕсли Вид="Материалы" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("10"));
	ИначеЕсли Вид="РасчетЗарплаты" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("70"));
	ИначеЕсли Вид="УслугиСтороннихОрганизаций" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("60"));
	ИначеЕсли Вид="Валюта" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("52"));
	КонецЕсли;

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 2;
	глТаблица = "";
	Если Режим = 0 Тогда
		ОткрытьФорму("Отчет.КарточкаСчета");
		
	ИначеЕсли Режим = 1 Тогда
		ОткрытьФорму("Отчет.КарточкаСчета", Фрм);
		Фрм.Активизировать("ВыбСубконто1");
		
	ИначеЕсли Режим = 2 Тогда
		ОткрытьФорму("Отчет.КарточкаСчета", Фрм);
		Фрм.Активизировать("Валюта");
	КонецЕсли;
	
	глОбновить = 0;
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Журнал-ордер".
Процедура ЖурналОрдер(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ЖурналОрдер");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Расшифровка.Установить("ДанныеПоСубсчетам", 1);
	Расшифровка.Установить("ОстНачД", 1);
	Расшифровка.Установить("ОстНачК", 1);
	Расшифровка.Установить("ОбД", 1);
	Расшифровка.Установить("ОбК", 1);
	Расшифровка.Установить("КорОбД", 1);
	Расшифровка.Установить("КорОбК", 1);
	Расшифровка.Установить("ОстКонД", 1);
	Расшифровка.Установить("ОстКонК", 1);
	Расшифровка.Установить("ВидПериода", 2);
	
	Если Вид="Материалы" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("10"));
	//ИначеЕсли Вид="МБП" Тогда
	//	Расшифровка.Установить("Счет", СчетПоКоду("12"));
	КонецЕсли;

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 2;
	глТаблица = "";
	ОткрытьФорму("Отчет.ЖурналОрдер");
	глФлагРасшифровки = 0;
	глОбновить = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Анализ счета по субконто".
Процедура АнализСчетаПоСубконто(Вид)
	Перем Фрм;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "АнализСчетаПоСубконто");
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Если Вид="Общая" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("51"));
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.БанковскиеСчета);
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("ПоГруппам1", 1 );
	ИначеЕсли Вид="Зарплата" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("70"));
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.Сотрудники);
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("ПоГруппам1", 1 );
	ИначеЕсли Вид="НДС" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("90.3"));                       //
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("ПоГруппам1", 1 );
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ВидыНоменклатуры);
		глРасшифровка = Расшифровка;
		глФлагРасшифровки = 1;
		глОбновить = 2;
		глТаблица = "";
		ОткрытьФорму("Отчет.АнализСчетаПоСубконто", Фрм);
		Фрм.Активизировать("Субконто1");
		глФлагРасшифровки = 0;
		глОбновить = 0;
		Возврат;
	ИначеЕсли Вид="Реализация" Тогда
		Расшифровка.Установить("Счет", СчетПоКоду("90.2"));                       //
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("ПоГруппам1", 1 );
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ВидыНоменклатуры);
		глРасшифровка = Расшифровка;
		глФлагРасшифровки = 1;
		глОбновить = 2;
		глТаблица = "";
		ОткрытьФорму("Отчет.АнализСчетаПоСубконто", Фрм);
		Фрм.Активизировать("Субконто1");
		глФлагРасшифровки = 0;
		глОбновить = 0;
		Возврат;
	ИначеЕсли Вид="Выручка" Тогда                                                 //
		Расшифровка.Установить("Счет", СчетПоКоду("90.1"));                       //
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("ПоГруппам1", 1 );                                 //
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ВидыНоменклатуры);
		глРасшифровка = Расшифровка;                                              //
		глФлагРасшифровки = 1;                                                    //
		глОбновить = 2;                                                           //
		глТаблица = "";                                                           //
		ОткрытьФорму("Отчет.АнализСчетаПоСубконто", Фрм);                         //
		Фрм.Активизировать("Субконто1");                                          //
		глФлагРасшифровки = 0;                                                    //
		глОбновить = 0;                                                           //
		Возврат;
	ИначеЕсли Вид="КурсДоход" Тогда                 
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ПрочиеДоходыИРасходы);
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("Счет", СчетПоКоду("91.1"));                       //
		Расшифровка.Установить("ПоГруппам1", 1 );                                 //
		Расшифровка.Установить("ДанныеПоСубсчетам", 1);                                 //
		КурсовыеРазницы = СоздатьОбъект("Справочник.ПрочиеДоходыИРасходы");
		КурсовыеРазницы.НайтиПоНаименованию("Курсовые разницы");
		Расшифровка.Установить("Субконто1", КурсовыеРазницы.ТекущийЭлемент());                                 //);                                 //
		глРасшифровка = Расшифровка;                                              //
		глФлагРасшифровки = 1;                                                    //
		глОбновить = 2;                                                           //
		глТаблица = "";                                                           //
		
		ОткрытьФорму("Отчет.АнализСчетаПоСубконто", Фрм);                         //
		Фрм.Активизировать("Субконто1");                                          //
		глФлагРасшифровки = 0;                                                    //
		глОбновить = 0;                                                           //
		Возврат;
	ИначеЕсли Вид="КурсРасход" Тогда                 
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ПрочиеДоходыИРасходы);
		Расшифровка.Установить("ОтборСубконто1", 1);
		Расшифровка.Установить("Счет", СчетПоКоду("91.2"));                       //
		Расшифровка.Установить("ПоГруппам1", 1);                                 //
		Расшифровка.Установить("ДанныеПоСубсчетам", 1);                                 //
		КурсовыеРазницы = СоздатьОбъект("Справочник.ПрочиеДоходыИРасходы");
		КурсовыеРазницы.НайтиПоНаименованию("Курсовые разницы");
		Расшифровка.Установить("Субконто1", КурсовыеРазницы.ТекущийЭлемент());                                 //);                                 //
		глРасшифровка = Расшифровка;                                              //
		глФлагРасшифровки = 1;                                                    //
		глОбновить = 2;                                                           //
		глТаблица = "";                                                           //
		
		ОткрытьФорму("Отчет.АнализСчетаПоСубконто", Фрм);                         //
		Фрм.Активизировать("Субконто1");                                          //
		глФлагРасшифровки = 0;                                                    //
		глОбновить = 0;                                                           //
		Возврат;
    КонецЕсли;
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.АнализСчетаПоСубконто");
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Анализ субконто".
Процедура АнализСубконто(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "АнализСубконто");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ЗначениеПоИдентификатору(Вид));
	Расшифровка.Установить("ОтборСубконто1", 1);
	Расшифровка.Установить("ПоГруппам1", 1);
	Расшифровка.Установить("ДанныеПоСубсчетам", 1);
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.АнализСубконто");
	глФлагРасшифровки = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Карточка субконто".
Процедура КарточкаСубконто(Вид)
	Перем Фрм;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "КарточкаСубконто");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Расшифровка.Установить("ВидСубконто1", ВидыСубконто.ЗначениеПоИдентификатору(Вид));
	Расшифровка.Установить("ОтборСубконто1", 1);
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 2;
	глТаблица = "";
	ОткрытьФорму("Отчет.КарточкаСубконто",Фрм);
	Фрм.Активизировать("ВыбСубконто1");
	глФлагРасшифровки = 0;
	глОбновить = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Обороты между субконто".
Процедура ОборотыМеждуСубконто(Вид)
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОборотыМеждуСубконто");
	Расшифровка.Установить("ПланСчетов", ВыбранныйПланСчетов());
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());

	Расшифровка.Установить("ОтборСубконто1", 1);
	Расшифровка.Установить("ОтборСубконто2", 3);
	Расшифровка.Установить("ОтборСубконто3", 3);
	Расшифровка.Установить("ОтборКорСубконто1", 1);
	Расшифровка.Установить("ОтборКорСубконто2", 3);
	Расшифровка.Установить("ОтборКорСубконто3", 3);

	Если Вид="Товары" Тогда
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.Номенклатура);
		Расшифровка.Установить("КорВидСубконто1", ВидыСубконто.Контрагенты);
	ИначеЕсли Вид="Затраты" Тогда
		Расшифровка.Установить("ВидСубконто1", ВидыСубконто.Материалы);
		//Расшифровка.Установить("КорВидСубконто1", ВидыСубконто.ВидыДеятельности); 
		Расшифровка.Установить("КорВидСубконто1", ВидыСубконто.ВидыНоменклатуры);    //
	КонецЕсли;
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 2;
	глТаблица = "";
	ОткрытьФорму("Отчет.ОборотыМеждуСубконто");
	глФлагРасшифровки = 0;
	глОбновить = 0;
КонецПроцедуры

//******************************************************************************
// Вызов отчета "Отчет по проводкам".
Процедура ОтчетПоПроводкам(Раздел)
	СписокСчетовРаздела=СчетаПоРазделам(Раздел);
	Фильтр="";
	Для Инд=1 По СписокСчетовРаздела.РазмерСписка() Цикл
		Фильтр=Фильтр+СписокСчетовРаздела.ПолучитьЗначение(Инд)+";";
	КонецЦикла;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
	Расшифровка.Установить("Обновить", 0);
	Расшифровка.Установить("Дата1", НачалоПериодаБИ());
	Расшифровка.Установить("Дата2", КонецПериодаБИ());
	Расшифровка.Установить("Фильтр", Фильтр);
	Расшифровка.Установить("ИспФильтр",1);
	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 2;
	глТаблица = "";
	ОткрытьФорму("Отчет.ОтчетПоПроводкам");
	глФлагРасшифровки = 0;
	глОбновить = 0;
КонецПроцедуры

//******************************************************************************
Процедура ОтчетПоСотрудникам(Парам=0)
	Перем Элем;
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "ОтчетПоСотрудникам");
    Расшифровка.Установить("ДатаОтчета", РабочаяДата());
	Если Парам=0 Тогда
		Элем = СоздатьОбъект("Справочник.Сотрудники");
		Элем.Выбрать("Выберите сотрудника","ДляВыбора");
		Если Элем.Выбран()=0 Тогда
		    Возврат;
		КонецЕсли;
	    Расшифровка.Установить("Сотрудник", Элем.ТекущийЭлемент());
	КонецЕсли;

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.ОтчетПоСотрудникам");
	глФлагРасшифровки = 0;
КонецПроцедуры //ПостроитьОтчетПоСотруднику

//******************************************************************************
Процедура ОбработкаЯчТаблицы(Зн)
	Команда=Лев(Зн,3);
	Параметр=Сред(Зн,5,СтрДлина(Зн)-4);
	Если Команда="Таб" Тогда
		Если Параметр<>?(ИсторияПереходов.РазмерСписка()=ИндИстории,"",ИсторияПереходов.ПолучитьЗначение(ИндИстории+1)) Тогда
			Если ИсторияПереходов.РазмерСписка() > ИндИстории Тогда
				ИсторияПереходов.УдалитьЗначение(ИндИстории+1, ИсторияПереходов.РазмерСписка()-ИндИстории);
			КонецЕсли;
			ИсторияПереходов.ДобавитьЗначение(Параметр);
		КонецЕсли;
		ИндИстории = ИндИстории+1;
		ПоказатьСтраницу(Параметр);
	ИначеЕсли Команда="Дог" Тогда
		Контрагент = СоздатьОбъект("Справочник.Контрагенты");
		Контрагент.Выбрать("Укажите контрагента-владельца",);
		ОткрытьФорму("Справочник.Договоры",,,, Контрагент.ТекущийЭлемент());
	ИначеЕсли Команда="Фрм" Тогда
		Если Параметр="Операция" Тогда
			ОткрытьФорму(Параметр,,"Имя_несуществующей_типовой_операции");
		Иначе    
			ОткрытьФорму(Параметр);
		КонецЕсли;
	ИначеЕсли Команда="ТКС" Тогда
		Предупреждение(Параметр);
	ИначеЕсли Команда="Наз" Тогда
		Если ИндИстории > 1 Тогда
			ИндИстории=ИндИстории-1;
			ПоказатьСтраницу(ИсторияПереходов.ПолучитьЗначение(ИндИстории));
		КонецЕсли;
	ИначеЕсли Команда="Дал" Тогда
		Если ИндИстории<>0 Тогда
			Если ИндИстории<ИсторияПереходов.РазмерСписка() Тогда
				ИндИстории=ИндИстории+1;
				ПоказатьСтраницу(ИсторияПереходов.ПолучитьЗначение(ИндИстории));
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Команда="Реж" Тогда
		ПоказПриЗапуске=?(ПоказПриЗапуске=1,-1,1);
		СекцияЗаголовок.Область("Показ").Текст = ?(ПоказПриЗапуске=1,"ю","Ё");
		//"ю" - флаг установлен
		//"Ё" - флаг сброшен
		Имя = ?(ИндИстории=0,"ПервыйЗапуск",ИсторияПереходов.ПолучитьЗначение(ИндИстории));
		ПоказатьСтраницу(Имя);
	ИначеЕсли Команда="Стр" Тогда
		Если Параметр="ЗапускПоследней" Тогда
			ПоказПоследней=?(ПоказПоследней=1,-1,1);
		Иначе    
			Главная = ИсторияПереходов.ПолучитьЗначение(ИндИстории);
		КонецЕсли;
		ПоказатьСтраницу(ИсторияПереходов.ПолучитьЗначение(ИндИстории));
	ИначеЕсли Команда="ОСВ" Тогда                

		// Вызов стандартного отчета "Оборотно-сальдовая ведомость"
		ОСВ(Параметр);

	ИначеЕсли Команда="ОСС" Тогда

		// Вызов стандартного отчета "Оборотно-сальдовая ведомость по счету"
		ОСВпоСчету(Параметр);

	ИначеЕсли Команда="ЖОВ" Тогда

		// Вызов стандартного отчета "Журнал-ордер и Ведомость по счету"
		ЖурналОрдер(Параметр);

	ИначеЕсли Команда="АСЧ" Тогда

		// Вызов стандартного отчета "Анализ счета"
		АнализСчета(Параметр);

	ИначеЕсли Команда="АСД" Тогда

		// Вызов стандартного отчета "Анализ счета по датам"
		АнализСчетаПоДатам(Параметр);

	ИначеЕсли Команда="АСС" Тогда

		// Вызов стандартного отчета "Анализ счета по субконто"
		АнализСчетаПоСубконто(Параметр);

	ИначеЕсли Команда="КСЧ" Тогда

		// Вызов стандартного отчета "Карточка счета"
		КарточкаСчета(Параметр);

	ИначеЕсли Команда="КСС" Тогда

		// Вызов стандартного отчета "Карточка счета" с выбором субконто
		КарточкаСчета(Параметр, 1);
		
	ИначеЕсли Команда="КСВ" Тогда

		// Вызов стандартного отчета "Карточка счета" с выбором валюты
		КарточкаСчета(Параметр, 2);
		
	ИначеЕсли Команда="АСБ" Тогда

		// Вызов стандартного отчета "Анализ субконто"
		АнализСубконто(Параметр);

	ИначеЕсли Команда="КСБ" Тогда
                                                                                    
		// Вызов стандартного отчета "Карточка субконто"
		КарточкаСубконто(Параметр);

	ИначеЕсли Команда="ОБС" Тогда

		// Вызов стандартного отчета "Карточка субконто"
		ОборотыМеждуСубконто(Параметр);

	ИначеЕсли Команда="ОПП" Тогда
		// Вызов стандартного отчета "Отчет по проводкам"
		ОтчетПоПроводкам(Параметр);
	ИначеЕсли Команда="ОТЧ" Тогда
		// Вызов ст. отчетов 
		ОткрытьФорму("Отчет."+Параметр);
	ИначеЕсли Команда="СОС" Тогда
		// Вызов стандартного отчета "Отчет по сотруднику"
		ОтчетПоСотрудникам();
	ИначеЕсли Команда="СОТ" Тогда
		// Вызов стандартного отчета "Отчет по сотрудникам"
		ОтчетПоСотрудникам(1);

	ИначеЕсли Команда = "ОСН" Тогда
		// Ввод одного документа на основании другого
		ПозицияРазделителя = Найти(Параметр, "_");
		Если ПозицияРазделителя = 0 Тогда
		     //Вид документа-основания не определен
			ВидДокумента = Параметр;
			СписокВидовОснований = "";
			Для А = 1 По Метаданные.Документ() Цикл
				Если Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Количество() > 0 Тогда
					Для Б = 1 По Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Количество() Цикл
						Если Метаданные.Документ(А).ВводимыеНаОснованииДокументы.Получить(Б).ПолныйИдентификатор() = ВидДокумента Тогда
							СписокВидовОснований = СписокВидовОснований + Строка(Метаданные.Документ(А).Идентификатор) + ",";
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			СписокВидовОснований = Лев(СписокВидовОснований,(СтрДлина(СписокВидовОснований)-1));
			Док = СоздатьОбъект("Документ");
			Док.ВидыДляВыбора(СписокВидовОснований); 
		Иначе
			ВидДокумента = Лев(Параметр, ПозицияРазделителя-1);
			ВидОснования = Сред(Параметр, ПозицияРазделителя+1);
			Док = СоздатьОбъект(ВидОснования);
		КонецЕсли;
		Если Док.Выбрать("Выберите документ-основание") = 1 Тогда
		    ОткрытьФорму(ВидДокумента,, Док);
		КонецЕсли;
	
	ИначеЕсли Команда = "ПРХ" Тогда
		// Ввод нового документа поступления
		ВидДокумента = "";
		Док = СоздатьОбъект("СписокЗначений");
		Док.ДобавитьЗначение("ПоступлениеТоваров", "Поступление товаров");
		Док.ДобавитьЗначение("ПоступлениеМатериалов", "Поступление материалов");
		Док.ДобавитьЗначение("ПоступлениеОС", "Поступление ОС");
		Док.ДобавитьЗначение("ПоступлениеНМА", "Поступление НМА");
		Док.ДобавитьЗначение("УслугиСтороннихОрганизаций", "Услуги сторонних организаций");
		Если Док.ВыбратьЗначение(ВидДокумента, "Выберите документ поступления",,,0) = 1 Тогда
		    ОткрытьФорму("Документ."+ВидДокумента);
		КонецЕсли;
	
	ИначеЕсли Команда="ДАТ" Тогда
		// Установка значения рабочей даты
		РабДата = РабочаяДата();
		ВвестиЗначение(РабДата,"Выберите значение рабочей даты","Дата");
		Если ПустоеЗначение(РабДата)=0 Тогда
			РабочаяДата(РабДата);                                           
			Если Вопрос("Установить начальную границу стандартного интервала журналов"+РазделительСтрок+"на начало месяца даты ввода остатков?","Да+Нет")="Да" Тогда
				НачалоСтандартногоИнтервала(НачМесяца(РабДата));	
			КонецЕсли;
			ПоказатьСтраницу(ИсторияПереходов.ПолучитьЗначение(ИндИстории));
		КонецЕсли;
		
	ИначеЕсли Команда="ВУ" Тогда
		// Установка значения константы ВалютныйУчет
		Если Вопрос("Изменить значение константы ""Учет договоров составленных в иностранной валюте?""", "Да+Нет") = "Да" Тогда
		    Константа.ВалютныйУчет = ?(Константа.ВалютныйУчет = Да, Нет, Да);
			ПоказатьСтраницу(ИсторияПереходов.ПолучитьЗначение(ИндИстории));
		КонецЕсли;
		
	ИначеЕсли Команда = "РСТ" Тогда
		//Вызов "Обработки документов"
		
		Если      НачалоСтандартногоИнтервала() = "День" Тогда
			НачДата = РабочаяДата();
		ИначеЕсли НачалоСтандартногоИнтервала() = "Квартал" Тогда
			НачДата = НачКвартала(РабочаяДата());
		ИначеЕсли НачалоСтандартногоИнтервала() = "Месяц" Тогда
			НачДата = НачМесяца(РабочаяДата());
		ИначеЕсли НачалоСтандартногоИнтервала() = "Год" Тогда
			НачДата = НачГода(РабочаяДата());
		Иначе
			НачДата = НачалоСтандартногоИнтервала();	
		КонецЕсли;
		
		Если      КонецСтандартногоИнтервала() = "День" Тогда
			КонДата = РабочаяДата();
		ИначеЕсли КонецСтандартногоИнтервала() = "Квартал" Тогда
			КонДата = КонКвартала(РабочаяДата());
		ИначеЕсли КонецСтандартногоИнтервала() = "Месяц" Тогда
			КонДата = КонМесяца(РабочаяДата());
		ИначеЕсли КонецСтандартногоИнтервала() = "Год" Тогда
			КонДата = КонГода(РабочаяДата());
		Иначе
			КонДата = КонецСтандартногоИнтервала();	
		КонецЕсли;
		
		Расшифровка = СоздатьОбъект("СписокЗначений");
	 	Расшифровка.Установить("Отчет","ОбработкаДокументов");
	 	Расшифровка.Установить("Дата1", НачДата);
		Расшифровка.Установить("Дата2", КонДата);
		Расшифровка.Установить("ВыбрКонтрагент", ПолучитьПустоеЗначение("Справочник.Контрагенты"));
		Расшифровка.Установить("ВыбрСтрока", "");
		Расшифровка.Установить("ВыбрСтрокаКом", "");
		Расшифровка.Установить("Признак", "Все");
		Расшифровка.Установить("ВидОбработки", "Печать");
		ВсеДокументы = СоздатьОбъект("СписокЗначений");
		ВыбранныеДокументы = СоздатьОбъект("СписокЗначений");
		Для Индекс=1 По Метаданные.Документ() Цикл
			Значение = Метаданные.Документ(Индекс).Идентификатор;
			Представление = Метаданные.Документ(Индекс).Представление();
			Комментарий = Метаданные.Документ(Индекс).Комментарий;
			Если ПустаяСтрока(Комментарий) = 0 Тогда
				Представление = Представление + " (" + Комментарий +")";
			КонецЕсли;
			ВсеДокументы.ДобавитьЗначение(Значение, Представление);
		КонецЦикла;
		Для Индекс = 1 По Метаданные.Документ() Цикл
			Док = Метаданные.Документ(Индекс);
			Значение = Док.Идентификатор;
			Представление = Док.Представление();
			Комментарий = Док.Комментарий;
			Если ПустаяСтрока(Комментарий) = 0 Тогда
				Представление = Представление + " (" + Комментарий +")";
			КонецЕсли;
			ВсеДокументы.УдалитьЗначение(ВсеДокументы.НайтиЗначение(Значение));
			ВыбранныеДокументы.ДобавитьЗначение(Значение, Представление);
		КонецЦикла;
		Расшифровка.Установить("ВыбранныеДокументы", ВыбранныеДокументы);
		Расшифровка.Установить("ВсеДокументы", ВсеДокументы);
		глРасшифровка = Расшифровка;
		глФлагРасшифровки = 1;
		глОбновить = 2;
		глТаблица = "";
		ОткрытьФорму("Обработка.ОбработкаДокументов");
		глФлагРасшифровки = 0;
		глОбновить = 0;
	ИначеЕсли Команда = "РБК" Тогда
		//Вызов "закрузки курсов"
		ОткрытьФорму("Обработка.ИППКурсыВалютРБК");
	ИначеЕсли Команда = "КУВ" Тогда
		//Вызов "курсов валют"
		Расшифровка = Создатьобъект("СписокЗначений");
		Расшифровка.Установить("ДатаНач", НачалоПериодаБИ());
		Расшифровка.Установить("ДатаКон", КонецПериодаБИ());
		Расшифровка.Установить("Валюта", Константа.ОсновнаяВалюта);
		глРасшифровка = Расшифровка;
		глФлагРасшифровки = 1;
		глОбновить = 2;
		глТаблица = "";
		ОткрытьФорму("Отчет.КурсыВалют");
		глФлагРасшифровки = 0;
		глОбновить = 0;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ОбработкаЯчейкиТаблицы(Зн,Фл)
	Перем СтрокаЗначения;   
	СтрокаЗначения = "";
	Если Лев(Зн,2)="Сп" Тогда
		// Вызов списка 
		ПунктМеню="";
		Меню = СоздатьОбъект("СписокЗначений");
		Если Лев(Зн,3)="СпС" Тогда
			// Вызов списка "Содержание"
			МенюСодержание.Выгрузить(Меню);
		ИначеЕсли Лев(Зн,3)="СпН" Тогда               
			Для Н=1 По ИндИстории-1 Цикл
				Значение = "Таб_"+ИсторияПереходов.ПолучитьЗначение(ИндИстории-Н);  
				МенюСодержание.ПолучитьЗначение(МенюСодержание.НайтиЗначение(Значение),СтрокаЗначения);
				Меню.ДобавитьЗначение(Значение,СтрокаЗначения);
			КонецЦикла;
		ИначеЕсли Лев(Зн,3)="СпД" Тогда
			Для Н=ИндИстории+1 По ИсторияПереходов.РазмерСписка() Цикл
				Значение = "Таб_"+ИсторияПереходов.ПолучитьЗначение(Н);  
				МенюСодержание.ПолучитьЗначение(МенюСодержание.НайтиЗначение(Значение),СтрокаЗначения);
				Меню.ДобавитьЗначение(Значение,СтрокаЗначения);
			КонецЦикла;
			
		КонецЕсли;
		Если Меню.ВыбратьЗначение(ПунктМеню,,,,1) = 1 Тогда
			Если (Лев(Зн,3)="СпН") ИЛИ (Лев(Зн,3)="СпД" ) Тогда   
				ИндИстории = ИсторияПереходов.НайтиЗначение(Сред(ПунктМеню,5,СтрДлина(ПунктМеню)))-1;
			КонецЕсли;
			Если Лев(Зн,3)="СпС" Тогда
				Если ИндИстории<>0 Тогда
					Если Сред(ПунктМеню,5,СтрДлина(ПунктМеню)) <> ИсторияПереходов.ПолучитьЗначение(ИндИстории) Тогда
						ОбработкаЯчТаблицы(ПунктМеню);
					КонецЕсли;
				Иначе
					ОбработкаЯчТаблицы(ПунктМеню);
				КонецЕсли;
			Иначе
				ОбработкаЯчТаблицы(ПунктМеню);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ОбработкаЯчТаблицы(Зн);
	КонецЕсли;
	Фл=0;
КонецПроцедуры

//******************************************************************************
Процедура ПриПовторномОткрытии()
	Перем Фл;
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда 
		Если МенюСодержание.НайтиЗначение("Таб_"+Форма.Параметр) <> 0 Тогда
			Если  Форма.Параметр<> ИсторияПереходов.ПолучитьЗначение(ИндИстории) Тогда
				ОбработкаЯчейкиТаблицы("Таб_"+Форма.Параметр,Фл);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ПриОткрытии()
	Перем Страница;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Содержание");
	Секц = Таб.ПолучитьСекцию("Страница");
	МенюСодержание.ДобавитьЗначение("Таб_ПервыйЗапуск","Первый Запуск");
	МенюСодержание.ДобавитьЗначение("Таб_Содержание","Содержание");
	Для Н=1 По ЧислоРазделов Цикл
		Обл = Секц.Область("П"+Формат(Н-1,"Ч(0)3"));
		МенюСодержание.ДобавитьЗначение(Обл.Расшифровка(),Обл.Текст);
	КонецЦикла;
	
	СекцияЗаголовок=Таблица.ПолучитьСекцию("Заголовок");
	СекцияГлавная=Таблица.ПолучитьСекцию("ГлавныйРаздел");
	СекцияШапка=Таблица.ПолучитьСекцию("Шапка");
	СекцияВпервые=Таблица.ПолучитьСекцию("Впервые");

	Главная=ВосстановитьЗначение( "Главная страница" );
	Старт = Главная;
	ПоказПриЗапуске=ВосстановитьЗначение("ПоказПутеводителяПриЗапуске");
	СекцияЗаголовок.Показ = ?(ПоказПриЗапуске=1, "ю", "Ё");
	//"ю" - флаг установлен
	//"Ё" - флаг сброшен
	ПоказПоследней=ВосстановитьЗначение("ПоказПоследней");
	ПоказПоследней = ?(ПустоеЗначение(ПоказПоследней)=1,-1,ПоказПоследней);
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Если МенюСодержание.НайтиЗначение("Таб_"+Форма.Параметр) <> 0 Тогда
			Старт = Форма.Параметр;
		Иначе 
			Старт = "Содержание";
		КонецЕсли;
	Иначе
		Старт = ?((ПустоеЗначение(Главная)=1)ИЛИ(Главная="ПервыйЗапуск"),"Содержание",Главная);
	КонецЕсли;
	ИсторияПереходов.ДобавитьЗначение(Старт);  
	ИндИстории = 1;
	ПоказатьСтраницу(Старт);
КонецПроцедуры

//******************************************************************************
Процедура ПриЗакрытии()
	СохранитьЗначение( "ПоказПутеводителяПриЗапуске",ПоказПриЗапуске);
	СохранитьЗначение( "ПоказПоследней",ПоказПоследней);
	Если ПоказПоследней=1 Тогда
		СохранитьЗначение( "Главная страница",ИсторияПереходов.ПолучитьЗначение(ИндИстории));
	Иначе    
		СохранитьЗначение( "Главная страница",Главная);
	КонецЕсли; 
КонецПроцедуры

ИндИстории=0;
ИсторияПереходов=СоздатьОбъект("СписокЗначений");
МенюСодержание = СоздатьОбъект("СписокЗначений");
ЧислоРазделов = 27;