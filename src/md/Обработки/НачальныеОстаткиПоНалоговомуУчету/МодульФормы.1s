Перем ТаблицаСоответствия;
Перем ТаблНУ;
Перем СчетНУ;
Перем ДопСчетНУ;
Перем СчетаБУ;
Перем ПредставлениеРУ;
Перем ИтНУ,ИтБУ;

//******************************************************************************
// ПриВыбореРазделаУчета()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Группа.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореРазделаУчета()
	
	НомТек=Группа.ПолучитьЗначение(Группа.ТекущаяСтрока());
	СчетНУ = ТаблицаСоответствия.ПолучитьЗначение(НомТек, "СчетНУ");
	
	Если СчетНУ.Количественный = 1 Тогда
	    Форма.НатуральныеПоказатели.Доступность(1);
	Иначе
		Форма.НатуральныеПоказатели.Доступность(0);
		НатуральныеПоказатели = 0;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореРазделаУчета()

//******************************************************************************
// ПриВыбореДаты()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  ДатаОст.
//
// Описание:
//  Корректирует сисок разделов учета в зависимости от установленной даты.
//
Процедура ПриВыбореДаты()
	
	НовыеПравила = глНовыеПравилаВеденияНУ(ДатаОст);
	НомерПозицииН13_01 = Группа.Получить("Н13.01 "+ СчетПоКоду("Н13.01").Наименование);
	НомерПозицииН13_02 = Группа.Получить("Н13.02 "+ СчетПоКоду("Н13.02").Наименование);
	
	Если НовыеПравила = 1 Тогда // новые правила налогового учета
		
	    Если ПустоеЗначение(НомерПозицииН13_02) = 0 Тогда
			Если Группа.ТекущаяСтрока() = НомерПозицииН13_02 Тогда
			    Группа.ТекущаяСтрока(1);
			КонецЕсли;
	        Группа.УдалитьЗначение(НомерПозицииН13_02);
		КонецЕсли;
		
	    Если ПустоеЗначение(НомерПозицииН13_01) = 0 Тогда
			Если Группа.ТекущаяСтрока() = НомерПозицииН13_01 Тогда
			    Группа.ТекущаяСтрока(1);
			КонецЕсли;
	        Группа.УдалитьЗначение(НомерПозицииН13_01);
		КонецЕсли;
		
	Иначе // старые правила налогового учета
		
		Если ПустоеЗначение(НомерПозицииН13_01) = 1 Тогда
			Группа.Установить("Н13.01 "+ СчетПоКоду("Н13.01").Наименование, Группа.РазмерСписка() + 1);
		КонецЕсли;
		
	    Если ПустоеЗначение(НомерПозицииН13_02) = 1 Тогда
			Группа.Установить("Н13.02 "+ СчетПоКоду("Н13.02").Наименование, Группа.РазмерСписка() + 1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореДаты()

//****************************************************************************
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// СформироватьОстаткиПоНУ()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьОстаткиПоНУ()
	
	ИтНУ.Опции(1,0);
	ИтНУ.ВключатьСубсчета(-1);
	Для Индекс=1 по СчетНУ.КоличествоСубконто() Цикл
		Если СчетНУ.ТолькоОбороты(Индекс) = 0 Тогда
			ИтНУ.ИспользоватьСубконто(СчетНУ.ВидСубконто(Индекс));    
		КонецЕсли;
	КонецЦикла;
	СтрСчет=?(Строка(ДопСчетНУ)<>"",Строка(СчетНУ)+","+Строка(ДопСчетНУ),Строка(СчетНУ));
	ИтНУ.ВыполнитьЗапрос(,ДатаОст-1,СтрСчет,,,,,5);
	ТаблНУ=СоздатьОбъект("ТаблицаЗначений");
	ТаблНУ.НоваяКолонка("Субконто1");
	ТаблНУ.НоваяКолонка("Субконто2");
	ТаблНУ.НоваяКолонка("Субконто3");
	ТаблНУ.НоваяКолонка("СуммаНУ","Число");
	ТаблНУ.НоваяКолонка("СуммаБУ","Число");
	ТаблНУ.НоваяКолонка("КоличествоНУ","Число");
	ТаблНУ.НоваяКолонка("КоличествоБУ","Число");
	ТаблНУ.НоваяКолонка("ДопРекв");
	ТаблНУ.НоваяКолонка("ДопСуммаНУ","Число");
	ТаблНУ.НоваяКолонка("ДопСуммаБУ","Число");
	
	Если (СчетНУ.КоличествоСубконто()>0) и (СчетНУ.ТолькоОбороты(1) = 0) Тогда
		ИтНУ.ВыбратьСубконто(1);
		Пока ИтНУ.ПолучитьСубконто(1)=1  Цикл
			Если (СчетНУ.КоличествоСубконто()>1) и (СчетНУ.ТолькоОбороты(2) = 0) Тогда
				ИтНУ.ВыбратьСубконто(2);
				Пока ИтНУ.ПолучитьСубконто(2)=1  Цикл	
					Если (СчетНУ.КоличествоСубконто()>2) и (СчетНУ.ТолькоОбороты(3) = 0) Тогда
						ИтНУ.ВыбратьСубконто(3);
						Пока ИтНУ.ПолучитьСубконто(3)=1  Цикл
							ТаблНУ.НоваяСтрока();
							ТаблНУ.Субконто1   =ИтНУ.Субконто(1);
							ТаблНУ.Субконто2   =ИтНУ.Субконто(2);
							ТаблНУ.Субконто3   =ИтНУ.Субконто(3);
							ТаблНУ.СуммаНУ     =ИтНУ.СКД("С")-ИтНУ.СКК("С");
							ТаблНУ.КоличествоНУ=ИтНУ.СКД("К")-ИтНУ.СКК("К");
						КонецЦикла;
					Иначе
						ТаблНУ.НоваяСтрока();
						ТаблНУ.Субконто1=ИтНУ.Субконто(1);
						ТаблНУ.Субконто2=ИтНУ.Субконто(2);
						Если СчетНУ=СчетПоКоду("Н13.02") тогда		// Кредиторская задолженность
							ИтНУ.ВыбратьСчета();
							Пока ИтНУ.ПолучитьСчет()=1 Цикл
								Если ИтНУ.Счет = СчетНУ Тогда
								    ТаблНУ.СуммаНУ = ИтНУ.СКК();
								
								ИначеЕсли ИтНУ.Счет = ДопСчетНУ Тогда
									ТаблНУ.ДопСуммаНУ = ИтНУ.СКК();
								КонецЕсли;
							КонецЦикла;
						Иначе			
							ТаблНУ.СуммаНУ     =ИтНУ.СКД("С")-ИтНУ.СКК("С"); 
							ТаблНУ.КоличествоНУ=ИтНУ.СКД("К")-ИтНУ.СКК("К");
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Иначе
				ТаблНУ.НоваяСтрока();
				ТаблНУ.Субконто1=ИтНУ.Субконто(1);
				Если СчетНУ=СчетПоКоду("Н05.01") Тогда		// Основные средства
					СуммаДеб=0;
					СуммаКред=0;
					ИтНУ.ВыбратьСчета();
					Пока ИтНУ.ПолучитьСчет()=1 Цикл
						Если ИтНУ.СКК()>0 Тогда
							СуммаКред=СуммаКред+ИтНУ.СКК();
						ИначеЕсли ИтНУ.СКД()>0 Тогда
							СуммаДеб=СуммаДеб+ИтНУ.СКД();
						КонецЕсли;
					КонецЦикла;
					ДопРеквТек=СоздатьОбъект("СписокЗначений");
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1));
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).ПервоначальнаяСтоимостьН.Получить(ДатаОст-1));
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).СрокПолезногоИспользованияН.Получить(ДатаОст-1));
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).АмортизационнаяГруппа);
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).МетодНачисленияАмортизации);
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).СпециальныйКоэффициент.Получить(ДатаОст-1));
					Если Найти(ИтНУ.Субконто(1).ПрочиеСведения,"#")>0 Тогда
						СпособУчета=Сред(ИтНУ.Субконто(1).ПрочиеСведения,Найти(ИтНУ.Субконто(1).ПрочиеСведения,"#")+1,1);
						Если СпособУчета="1" Тогда 
							ТекстУчета="По балансовой стоимости";
							
						ИначеЕсли СпособУчета="2" Тогда
							ТекстУчета="По остаточной стоимости";
							
						ИначеЕсли СпособУчета="3" Тогда
							ТекстУчета="Не принимать к учету";
						КонецЕсли;
						
					Иначе
						ТекстУчета="По остаточной стоимости";
					КонецЕсли;
					
					Если ТекстУчета="По балансовой стоимости"  Тогда
						ТаблНУ.СуммаНУ=СуммаДеб;
					Иначе
						ТаблНУ.СуммаНУ=СуммаДеб-СуммаКред;
					КонецЕсли;
					ТаблНУ.ДопСуммаНУ=СуммаКред;
					ДопРеквТек.ДобавитьЗначение(ТекстУчета);	
					ТаблНУ.ДопРекв=ДопРеквТек;
					
				ИначеЕсли СчетНУ=СчетПоКоду("Н05.03") Тогда		// НМА
					СуммаДеб=0;
					СуммаКред=0;
					ИтНУ.ВыбратьСчета();
					Пока ИтНУ.ПолучитьСчет()=1 Цикл
						Если ИтНУ.СКК()>0 Тогда
							СуммаКред=СуммаКред+ИтНУ.СКК();
						ИначеЕсли ИтНУ.СКД()>0 Тогда
							СуммаДеб=СуммаДеб+ИтНУ.СКД();
						КонецЕсли;
					КонецЦикла;
					ДопРеквТек=СоздатьОбъект("СписокЗначений");
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1));
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).ПервоначальнаяСтоимостьН);
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).СрокПолезногоИспользованияН);
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).АмортизационнаяГруппа);
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).МетодНачисленияАмортизации);
					ДопРеквТек.ДобавитьЗначение(ИтНУ.Субконто(1).СпециальныйКоэффициент.Получить(ДатаОст-1));
					
					Если Найти(ИтНУ.Субконто(1).ПрочиеСведения,"#")>0 Тогда
						СпособУчета=Сред(ИтНУ.Субконто(1).ПрочиеСведения,Найти(ИтНУ.Субконто(1).ПрочиеСведения,"#")+1,1);
						Если СпособУчета="1" Тогда 
							ТекстУчета="По балансовой стоимости";
						
						ИначеЕсли СпособУчета="2" Тогда
							ТекстУчета="По остаточной стоимости";
							
						ИначеЕсли СпособУчета="3" Тогда
							ТекстУчета="Не принимать к учету";
						КонецЕсли;
					
					Иначе
						ТекстУчета="По остаточной стоимости";
					КонецЕсли;
					
					Если ТекстУчета="По балансовой стоимости" Тогда
						ТаблНУ.СуммаНУ=СуммаДеб;	
					
					Иначе
						ТаблНУ.СуммаНУ=СуммаДеб-СуммаКред;
					КонецЕсли;
					
					ТаблНУ.ДопСуммаНУ=СуммаКред;
					ДопРеквТек.ДобавитьЗначение(ТекстУчета);
					ТаблНУ.ДопРекв=ДопРеквТек;
				Иначе
					ТаблНУ.СуммаНУ     =ИтНУ.СКД("С")-ИтНУ.СКК("С");
					ТаблНУ.КоличествоНУ=ИтНУ.СКД("К")-ИтНУ.СКК("К");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТаблНУ.НоваяСтрока();
		ТаблНУ.СуммаНУ     =ИтНУ.СКД("С")-ИтНУ.СКК("С");
		ТаблНУ.КоличествоНУ=ИтНУ.СКД("К")-ИтНУ.СКК("К");
	КонецЕсли;
	
КонецПроцедуры // СформироватьОстаткиПоНУ()

//******************************************************************************
// СформироватьОстаткиПоБУ()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьОстаткиПоБУ()
	
	Если СчетаБУ="20"  Тогда
		ИтБУ.ИспользоватьСубконто(ВидыСубконто.СтатьиЗатратНаПроизводство);
		ИтБУ.ИспользоватьСубконто(ВидыСубконто.ВидыНоменклатуры);
	ИначеЕсли СчетаБУ="45" Тогда
		ИтБУ.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
	ИначеЕсли СчетаБУ="58.2" Тогда
		ИтБУ.ИспользоватьСубконто(ВидыСубконто.ЦенныеБумаги);
	ИначеЕсли СчетаБУ="44.1.1" Тогда
		Статьи = СоздатьОбъект("СписокЗначений");
		СпрОтбор=СоздатьОбъект("Справочник.СтатьиИздержекОбращения");
		СпрОтбор.ВыбратьЭлементы();
		Пока СпрОтбор.ПолучитьЭлемент()=1 Цикл
			Если СпрОтбор.СписыватьИздержкиПропорциональноОстаткуТоваров.Получить(ДатаОст)=1 Тогда
				Статьи.ДобавитьЗначение(СпрОтбор.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;                    
		
		Если Статьи.РазмерСписка() = 0 Тогда
			Возврат;
		Иначе
			
			ИтБУ.ИспользоватьСубконто(ВидыСубконто.СтатьиИздержекОбращения, Статьи, 2);
		КонецЕсли;
		
	ИначеЕсли СчетаБУ="97" Тогда
		Статьи = СоздатьОбъект("СписокЗначений");
		СпрОтбор=СоздатьОбъект("Справочник.РасходыБудущихПериодов");
		СпрОтбор.ВыбратьЭлементы();
		Пока СпрОтбор.ПолучитьЭлемент()=1 Цикл
			Если СпрОтбор.НазначениеСтатьиРасходов = 3 Тогда
				Статьи.ДобавитьЗначение(СпрОтбор.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;                    
		
		Если Статьи.РазмерСписка() = 0 Тогда
			Возврат;
		Иначе
			
			ИтБУ.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов, Статьи, 2);
		КонецЕсли;
		
	Иначе
		
		Если СчетНУ=СчетПоКоду("Н02.09") Тогда
			СчетНУКоличествоСубконто = 3; 
		Иначе
			СчетНУКоличествоСубконто = СчетНУ.КоличествоСубконто();
		КонецЕсли;
		
		Для Индекс=1 по СчетНУКоличествоСубконто Цикл
			ИтБУ.ИспользоватьСубконто();
		КонецЦикла;
		
	КонецЕсли;
	ИтБУ.ВключатьСубсчета(-1);
	ИтБУ.ВыполнитьЗапрос(,ДатаОст-1,СчетаБУ,,,,,5);
	Если (СчетНУ.КоличествоСубконто()>0) и (СчетНУ.ТолькоОбороты(1) = 0) Тогда
		ИтБУ.ВыбратьСубконто(1);
		Пока ИтБУ.ПолучитьСубконто(1)=1  Цикл
			Если (СчетНУ.КоличествоСубконто()>1) и (СчетНУ.ТолькоОбороты(2) = 0) Тогда
				ИтБУ.ВыбратьСубконто(2);
				Пока ИтБУ.ПолучитьСубконто(2)=1  Цикл	
					Если ((СчетНУ.КоличествоСубконто()>2) и (СчетНУ.ТолькоОбороты(3) = 0)) или (СчетНУ=СчетПоКоду("Н02.09")) Тогда
						ИтБУ.ВыбратьСубконто(3);
						Пока ИтБУ.ПолучитьСубконто(3)=1  Цикл
							ТаблНУ.НоваяСтрока();

							Если СчетНУ=СчетПоКоду("Н02.09") Тогда 
								ТаблНУ.Субконто1=ИтБУ.Субконто(1);
								ТаблНУ.Субконто2=ИтБУ.Субконто(3);							
							Иначе
								ТаблНУ.Субконто1=ИтБУ.Субконто(1);
								ТаблНУ.Субконто2=ИтБУ.Субконто(2);
								ТаблНУ.Субконто3=ИтБУ.Субконто(3);
							КонецЕсли;

							ТаблНУ.СуммаБУ     =ИтБУ.СКД("С")-ИтБУ.СКК("С");
							ТаблНУ.КоличествоБУ=ИтБУ.СКД("К")-ИтБУ.СКК("К");
						КонецЦикла;
					
					Иначе
						Если СчетНУ=СчетПоКоду("Н01.05") Тогда
							ТаблНУ.НоваяСтрока();
							ТаблНУ.Субконто1=ИтБУ.Субконто(1).ВидРасходовДляНалоговогоУчета;
							ТаблНУ.Субконто2=ИтБУ.Субконто(2);
							ТаблНУ.СуммаБУ=ИтБУ.СКД()-ИтБУ.СКК(); 
							
						ИначеЕсли СчетНУ=СчетПоКоду("Н13.02") Тогда
							СуммаБУ = 0;
							ИтБУ.ВыбратьСчета();
							Пока ИтБУ.ПолучитьСчет()=1 Цикл 
					        	СуммаБУ = СуммаБУ + ИтБУ.СКК(); 
					        КонецЦикла;
							Если СуммаБУ <> 0 Тогда
								ТаблНУ.НоваяСтрока();
								ТаблНУ.Субконто1=ИтБУ.Субконто(1);
								ТаблНУ.Субконто2=ИтБУ.Субконто(2);
							    ТаблНУ.СуммаБУ=СуммаБУ;
							КонецЕсли;
							
						ИначеЕсли СчетНУ=СчетПоКоду("Н13.01") Тогда
							СуммаБУ = 0;
							ИтБУ.ВыбратьСчета();
							Пока ИтБУ.ПолучитьСчет()=1 Цикл 
					        	СуммаБУ = СуммаБУ + ИтБУ.СКД(); 
					        КонецЦикла;
							Если СуммаБУ <> 0 Тогда
								ТаблНУ.НоваяСтрока();
								ТаблНУ.Субконто1=ИтБУ.Субконто(1);
								ТаблНУ.Субконто2=ИтБУ.Субконто(2);
							    ТаблНУ.СуммаБУ=СуммаБУ;
							КонецЕсли;
						
						Иначе
							ТаблНУ.НоваяСтрока();
							ТаблНУ.Субконто1=ИтБУ.Субконто(1);
							ТаблНУ.Субконто2=ИтБУ.Субконто(2);
							ТаблНУ.СуммаБУ     =ИтБУ.СКД("С")-ИтБУ.СКК("С"); 
							ТаблНУ.КоличествоБУ=ИтБУ.СКД("К")-ИтБУ.СКК("К"); 
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
			Иначе 
				Если СчетНУ=СчетПоКоду("Н05.01") Тогда		// Основные средства
					СуммаДеб=0;
					СуммаКред=0;
					ИтБУ.ВыбратьСчета();
					Пока ИтБУ.ПолучитьСчет()=1 Цикл
						Если ИтБУ.СКК()>0 Тогда
							СуммаКред=СуммаКред+ИтБУ.СКК();
						ИначеЕсли ИтБУ.СКД()>0 Тогда
							СуммаДеб=СуммаДеб+ИтБУ.СКД();
						КонецЕсли;
					КонецЦикла;

					ТаблНУ.НоваяСтрока();
					ТаблНУ.Субконто1=ИтБУ.Субконто(1);
					ДопРеквТек=СоздатьОбъект("СписокЗначений");
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1));
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).ПервоначальнаяСтоимостьН.Получить(ДатаОст-1));
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).СрокПолезногоИспользованияН.Получить(ДатаОст-1));
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).АмортизационнаяГруппа);
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).МетодНачисленияАмортизации);
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).СпециальныйКоэффициент.Получить(ДатаОст-1));
					
					Если Найти(ИтБУ.Субконто(1).ПрочиеСведения,"#")>0 Тогда
						СпособУчета=Сред(ИтБУ.Субконто(1).ПрочиеСведения,Найти(ИтБУ.Субконто(1).ПрочиеСведения,"#")+1,1);
						Если СпособУчета="1" Тогда 
							ТекстУчета="По балансовой стоимости";
						
						ИначеЕсли СпособУчета="2" Тогда
							ТекстУчета="По остаточной стоимости";
							
						ИначеЕсли СпособУчета="3" Тогда
							ТекстУчета="Не принимать к учету";
						КонецЕсли;
					
					Иначе
						Если СуммаДеб <= 10000 Тогда
                        	ТекстУчета="Не принимать к учету";
						
						Иначе
							ТекстУчета="По остаточной стоимости";
						КонецЕсли;
					КонецЕсли;
					
					Если ТекстУчета="По балансовой стоимости" Тогда
						ТаблНУ.СуммаБУ=СуммаДеб;	
					
					Иначе
						ТаблНУ.СуммаБУ=СуммаДеб-СуммаКред;
					КонецЕсли;
					
					ТаблНУ.ДопСуммаБУ=СуммаКред;
					ДопРеквТек.ДобавитьЗначение(ТекстУчета);		
					ТаблНУ.ДопРекв=ДопРеквТек;

				ИначеЕсли СчетНУ=СчетПоКоду("Н05.03") Тогда		// НМА
					СуммаДеб=0;
					СуммаКред=0;
					ИтБУ.ВыбратьСчета();
					Пока ИтБУ.ПолучитьСчет()=1 Цикл
						Если ИтБУ.СКК()>0 Тогда
							СуммаКред=СуммаКред+ИтБУ.СКК();
						ИначеЕсли ИтБУ.СКД()>0 Тогда
							СуммаДеб=СуммаДеб+ИтБУ.СКД();
						КонецЕсли;
					КонецЦикла;

					ТаблНУ.НоваяСтрока();
					ТаблНУ.Субконто1=ИтБУ.Субконто(1);
					ДопРеквТек=СоздатьОбъект("СписокЗначений");
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1));
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).ПервоначальнаяСтоимостьН);
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).СрокПолезногоИспользованияН);
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).АмортизационнаяГруппа);
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).МетодНачисленияАмортизации);
					ДопРеквТек.ДобавитьЗначение(ИтБУ.Субконто(1).СпециальныйКоэффициент.Получить(ДатаОст-1));
					
					Если Найти(ИтБУ.Субконто(1).ПрочиеСведения,"#")>0 Тогда
						СпособУчета=Сред(ИтБУ.Субконто(1).ПрочиеСведения,Найти(ИтБУ.Субконто(1).ПрочиеСведения,"#")+1,1);
						Если СпособУчета="1" Тогда 
							ТекстУчета="По балансовой стоимости";
						
						ИначеЕсли СпособУчета="2" Тогда
							ТекстУчета="По остаточной стоимости";
							
						ИначеЕсли СпособУчета="3" Тогда
							ТекстУчета="Не принимать к учету";
						КонецЕсли;
					
					Иначе
						Если СуммаДеб <= 10000 Тогда
                        	ТекстУчета="Не принимать к учету";
						
						Иначе
							ТекстУчета="По остаточной стоимости";
						КонецЕсли;
					КонецЕсли;
					
					Если ТекстУчета="По балансовой стоимости" Тогда
						ТаблНУ.СуммаБУ=СуммаДеб;	
					
					Иначе
						ТаблНУ.СуммаБУ=СуммаДеб-СуммаКред;
					КонецЕсли;
					
					ТаблНУ.ДопСуммаБУ=СуммаКред;
					ДопРеквТек.ДобавитьЗначение(ТекстУчета);	
					ТаблНУ.ДопРекв=ДопРеквТек;

				Иначе 
					ТаблНУ.НоваяСтрока();
					ТаблНУ.Субконто1=ИтБУ.Субконто(1);
					ТаблНУ.СуммаБУ     =ИтБУ.СКД("С")-ИтБУ.СКК("С");
					ТаблНУ.КоличествоБУ=ИтБУ.СКД("К")-ИтБУ.СКК("К"); 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТаблНУ.НоваяСтрока();
		ТаблНУ.СуммаБУ=ИтБУ.СКД()-ИтБУ.СКК();
	КонецЕсли;	
	
	Если ДопСчетНУ=СчетПоКоду("Н13.03") тогда
		
		ИтБУ.ИспользоватьСубконто(ВидыСубконто.Контрагенты,);
		ИтБУ.ИспользоватьСубконто(); 
		ИтБУ.ВключатьСубсчета(-1);
		ИтБУ.ИспользоватьРазделительУчета(РазделительУчета);
		ИтБУ.ВыполнитьЗапрос(,ДатаОст-1,"19.1,19.2,19.3,19.4,76.АВ",,,,,1);
		ИтБУ.ВыбратьСубконто(1);
		Пока ИтБУ.ПолучитьСубконто(1)=1 цикл
			ИтБУ.ВыбратьСубконто(2);
			Пока ИтБУ.ПолучитьСубконто(2)=1 цикл
				Если ПустоеЗначение(ИтБУ.Субконто(2))=0 тогда
					ТаблНУ.НоваяСтрока();
					ТаблНУ.Субконто1=ИтБУ.Субконто(1);
					ТаблНУ.Субконто2=ИтБУ.Субконто(2).Договор;
					ТаблНУ.ДопСуммаБУ=ИтБУ.СКД();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // СформироватьОстаткиПоБУ()


//******************************************************************************
// Сформировать()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Здесь описывается процедура.
//
Процедура Сформировать()
	
	Перем Параметры; 
	Перем ПараметрыДоп;
	Перем СправРеквизит;
	
	Если (СуммовыеПоказатели = 0) и (НатуральныеПоказатели = 0) Тогда
	    Предупреждение("Не выбран ни один из показателей!");
		Возврат;
	КонецЕсли;
	
	НомТек=Группа.ПолучитьЗначение(Группа.ТекущаяСтрока());
	
	ИтНУ=СоздатьОбъект("БухгалтерскиеИтоги");
	ИтБУ=СоздатьОбъект("БухгалтерскиеИтоги");
	Если (Метаданные.РазделительУчета.Выбран() = 1) и (ПоВсемРУ=0) Тогда
		ИтНУ.ИспользоватьРазделительУчета(РазделительУчета);
		ИтБУ.ИспользоватьРазделительУчета(РазделительУчета);
	КонецЕсли;
	ТаблицаСоответствия.ПолучитьСтрокуПоНомеру(НомТек);
	СчетНУ=ТаблицаСоответствия.СчетНУ;
	ДопСчетНУ=ТаблицаСоответствия.ДопСчетНУ;
	СчетаБУ=ТаблицаСоответствия.СчетаБУ;
	
	СформироватьОстаткиПоНУ();
	СформироватьОстаткиПоБУ();
	
	ТаблНУ.Свернуть("Субконто1,Субконто2,Субконто3,ДопРекв","СуммаНУ,СуммаБУ,КоличествоНУ,КоличествоБУ,ДопСуммаНУ,ДопСуммаБУ");
	ТаблНУ.Сортировать("+Субконто1");
	
	Таблица.Очистить();
	
	ЗаголовокОтчета = СчетНУ.ПолнНаименование;
	
	Таблица.ВывестиСекцию("Заголовок|Начало");
	Для Индекс=1 по СчетНУ.КоличествоСубконто() Цикл
		Если СчетНУ.ТолькоОбороты(Индекс) = 1 Тогда
		    Прервать;
		КонецЕсли;
		Аналитика=СчетНУ.ВидСубконто(Индекс);
		Таблица.ПрисоединитьСекцию("Заголовок|Элемент");
	КонецЦикла;
	
	Если СуммовыеПоказатели = 1 Тогда
		Таблица.ПрисоединитьСекцию("Заголовок|ДанныеСумма");	
	КонецЕсли;
	
	Если НатуральныеПоказатели = 1 Тогда
		Таблица.ПрисоединитьСекцию("Заголовок|ДанныеКоличество");    
	КонецЕсли;
	
	Если (ТаблицаСоответствия.ДопСчетНУ=СчетПоКоду("Н05.02")) или (ТаблицаСоответствия.ДопСчетНУ=СчетПоКоду("Н05.04")) тогда
		ДопИнформацияБУ="Исходная амортизация по бухг. учету";
		ДопИнформацияНУ="Начисленная амортизация по налоговому учету";
		Таблица.ПрисоединитьСекцию("Заголовок|ДопИнформация");
	ИначеЕсли ТаблицаСоответствия.ДопСчетНУ=СчетПоКоду("Н13.03") тогда
		ДопИнформацияБУ="НДС по кред. задолженности по бухг. учету";
		ДопИнформацияНУ="НДС по кред. задолженности по налоговому учету";
		Таблица.ПрисоединитьСекцию("Заголовок|ДопИнформация");
	КонецЕсли;
	
	Если ТипЗначенияСтр(ТаблицаСоответствия.ДопРеквизиты)="СписокЗначений"  Тогда
		Для СпИнд=1 По ТаблицаСоответствия.ДопРеквизиты.РазмерСписка() Цикл
			Реквизит=ТаблицаСоответствия.ДопРеквизиты.ПолучитьЗначение(СпИнд);
			Таблица.ПрисоединитьСекцию("Заголовок|ДопРекв");
		КонецЦикла;
	КонецЕсли;
	
	ТаблНУ.ВыбратьСтроки();
	Пока ТаблНУ.ПолучитьСтроку()=1 Цикл 
		ПустоеЗначениеВидыНоменклатуры = ПолучитьПустоеЗначение("ВидыСубконто");
		СтрПараметр=СоздатьОбъект("СписокЗначений");
		СтрПараметр.Установить("Отчет","ОтчетПоПроводкам");
		СтрПараметр.Установить("ДтКт");
		СтрПараметр.Установить("Счет",СчетНУ);
		СтрПараметр.Установить("ВидСубконто1",?(СчетНУ.ТолькоОбороты(1) = 0, СчетНУ.ВидСубконто(1),
																			 ПустоеЗначениеВидыНоменклатуры));
		СтрПараметр.Установить("Субконто1",ТаблНУ.Субконто1);
		СтрПараметр.Установить("ВидСубконто2",?(СчетНУ.ТолькоОбороты(2) = 0, СчетНУ.ВидСубконто(2),
																			 ПустоеЗначениеВидыНоменклатуры));
		СтрПараметр.Установить("Субконто2",ТаблНУ.Субконто2);
		СтрПараметр.Установить("ВидСубконто3",?(СчетНУ.ТолькоОбороты(3) = 0, СчетНУ.ВидСубконто(3),
																			 ПустоеЗначениеВидыНоменклатуры));
		СтрПараметр.Установить("Субконто3",ТаблНУ.Субконто3);
		СтрПараметр.Установить("Дата1",'01.01.1980'); 
		СтрПараметр.Установить("Дата2",ДатаОст-1); 
		СтрПараметр.Выгрузить(Параметры);
		Таблица.ВывестиСекцию("СтрЭлемент|Начало");
		Для Индекс=1 по СчетНУ.КоличествоСубконто() Цикл
			Если СчетНУ.ТолькоОбороты(Индекс) = 1 Тогда
			    Прервать;
			КонецЕсли;
			Элемент=ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,Индекс);
			Таблица.ПрисоединитьСекцию("СтрЭлемент|Элемент");
		КонецЦикла;
		
		Если СуммовыеПоказатели = 1 Тогда
			НУ=ТаблНУ.СуммаНУ;
			БУ=ТаблНУ.СуммаБУ;
			Дельта=БУ-НУ;
			Таблица.ПрисоединитьСекцию("СтрЭлемент|ДанныеСумма");	
		КонецЕсли;
		
		Если НатуральныеПоказатели = 1 Тогда
			НУ_К=ТаблНУ.КоличествоНУ;
			БУ_К=ТаблНУ.КоличествоБУ;
			Дельта_К=БУ_К-НУ_К;
			Таблица.ПрисоединитьСекцию("СтрЭлемент|ДанныеКоличество");    
		КонецЕсли;
		
		Если (ДопСчетНУ=СчетПоКоду("Н05.02")) или (ДопСчетНУ=СчетПоКоду("Н05.04")) тогда
			ТекУсловие=ТаблНУ.ДопРекв.ПолучитьЗначение(7);
			Если ТекУсловие="По балансовой стоимости" Тогда
				ДопЗначБух=ТаблНУ.ДопСуммаБУ;
			Иначе
				ДопЗначБух=0;
			КонецЕсли;
			ДопЗначНУ=ТаблНУ.ДопСуммаНУ; 
			СтрПараметр.Установить("Счет",ДопСчетНУ);
			СтрПараметр.Выгрузить(ПараметрыДоп);
			Таблица.ПрисоединитьСекцию("СтрЭлемент|ДопИнформация");
		ИначеЕсли ДопСчетНУ=СчетПоКоду("Н13.03") тогда
			ДопЗначБух=ТаблНУ.ДопСуммаБУ; 
			ДопЗначНУ=ТаблНУ.ДопСуммаНУ; 
			СтрПараметр.Установить("Счет",ДопСчетНУ);
			СтрПараметр.Выгрузить(ПараметрыДоп);
			Таблица.ПрисоединитьСекцию("СтрЭлемент|ДопИнформация");
		КонецЕсли;
		Если ТипЗначенияСтр(ТаблНУ.ДопРекв)="СписокЗначений" Тогда
			РеквПараметр=СоздатьОбъект("СписокЗначений");
			СпрЭлемент=ТаблНУ.ДопРекв.ПолучитьЗначение(1);
			РеквПараметр.Установить("СпрЭлемент",СпрЭлемент);
			РеквПараметр.Установить("Закладка","Налоговый учет");
			РеквПараметр.Выгрузить(СправРеквизит);
			Для СпРекв=2 По 6 Цикл
				ЗначРеквизит=ТаблНУ.ДопРекв.ПолучитьЗначение(СпРекв);
				Таблица.ПрисоединитьСекцию("СтрЭлемент|ДопРекв");
			КонецЦикла;
			ЗначРеквизит=ТаблНУ.ДопРекв.ПолучитьЗначение(7);
			РеквПараметр.Установить("Изменять","1");
			РеквПараметр.Установить("ТекущийТип",ЗначРеквизит); 
			РеквПараметр.Выгрузить(СправРеквизит);
			Таблица.ПрисоединитьСекцию("СтрЭлемент|ДопРекв");
			
		КонецЕсли;
		
	КонецЦикла;
	Таблица.Показать();
	
КонецПроцедуры // Сформировать()

//******************************************************************************
// СформироватьПроводки()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Здесь описывается процедура.
//
Процедура СформироватьПроводки()
	
	Если (СуммовыеПоказатели = 0) и (НатуральныеПоказатели = 0) Тогда
	    Предупреждение("Не выбран ни один из показателей!");
		Возврат;
	КонецЕсли;
	
	Сформировать();

	ТекстВопроса="По данным бухгалтерского учета, будут сформированы проводки ввода начальных остатков
		|по налоговому учету на дату "+Формат(ДатаОст-1,"Д (0)ДДММММГГГГ")+" по счету "+Строка(СчетНУ)+?(Строка(ДопСчетНУ)<>"",", "+Строка(ДопСчетНУ),"")+".
		|Существующие проводки по указанным счетам будут удалены!
		|
		|Сформировать проводки?";
	
	Если Вопрос(ТекстВопроса,4,60)=6 Тогда
		
		ОперСтар=СоздатьОбъект("Операция");
		ТекстПоиск=Формат("Ввод начальных остатков по счету "+Строка(СчетНУ),"С50");		
		Если ОперСтар.ВыбратьПоЗначению(ДатаОст-1,ДатаОст-1,"Содержание",ТекстПоиск)>0 Тогда
			Пока ОперСтар.ПолучитьОперацию()=1 Цикл
				ОперСтар.Удалить(0);
			КонецЦикла;
		КонецЕсли; 
		
		Опер=СоздатьОбъект("Операция");
		Опер.Новая();
		СуммаОп=0;
		Опер.ДатаОперации=ДатаОст-1; 
		Опер.Содержание="Ввод начальных остатков по счету "+Строка(СчетНУ);
		КоличествоПроводок=0;
		ТаблНУ.ВыбратьСтроки();
		Пока ТаблНУ.ПолучитьСтроку()=1 Цикл
			
			Если (СуммовыеПоказатели = 1) и (ТаблНУ.СуммаБУ <> 0) Тогда
			ИначеЕсли (НатуральныеПоказатели = 1) и (ТаблНУ.КоличествоБУ <> 0) Тогда
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если КоличествоПроводок=5000 Тогда
				Опер.СуммаОперации=СуммаОп;
				Если ДатаГод(Опер.ДатаОперации) <> ДатаГод(РабочаяДата()) Тогда
				    Опер.Документ.УстановитьНовыйНомер("");
				КонецЕсли;
				Опер.Записать();
				Опер.Новая();
				СуммаОп=0;
				Опер.ДатаОперации=ДатаОст-1; 
				Опер.Содержание="Ввод начальных остатков по счету "+Строка(СчетНУ);
				КоличествоПроводок=0; 
			КонецЕсли;
			
			Если (СчетНУ=СчетПоКоду("Н05.01")) или (СчетНУ=СчетПоКоду("Н05.03")) тогда		
				ТекУсловие=ТаблНУ.ДопРекв.ПолучитьЗначение(7);
				Если ТекУсловие = "Не принимать к учету" Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Опер.НоваяПроводка(); Опер.РазделительУчета = Константа.ОсновноеЮрЛицо;

			Если СчетНУ = СчетПоКоду("Н13.02") Тогда
				Опер.Кредит.Счет=СчетНУ;
				Для Инд=1 По СчетНУ.КоличествоСубконто() Цикл
					Субконто=ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,Инд);
					Опер.Кредит.Субконто(Инд,Субконто);
				КонецЦикла;
			ИначеЕсли СчетНУ = СчетПоКоду("Н01.05") Тогда
				Опер.Дебет.Счет=СчетНУ;
				Опер.Дебет.Субконто(1,Перечисление.ГруппыВидыРасходов.МатериальныеРасходы);
				Опер.Дебет.Субконто(2,ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,2));

			Иначе
				Если СчетНУ = СчетПоКоду("Н02.04") Тогда
					Товар = ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,1);
				    Если Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
						Опер.Дебет.Счет = СчетПоКоду("Н02.04.2");
						
					ИначеЕсли Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Полуфабрикат Тогда
						Опер.Дебет.Счет = СчетПоКоду("Н02.04.3");
						
					Иначе
						Опер.Дебет.Счет = СчетПоКоду("Н02.04.1");
					КонецЕсли;
				Иначе
					Опер.Дебет.Счет=СчетНУ;	
				КонецЕсли;
				
				Для Инд=1 По СчетНУ.КоличествоСубконто() Цикл
					Субконто=ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,Инд);
					Опер.Дебет.Субконто(Инд,Субконто);
				КонецЦикла;
			КонецЕсли;
            
			Если СуммовыеПоказатели = 1 Тогда
				Опер.Сумма = ТаблНУ.СуммаБУ;
				СуммаОп=СуммаОп+ТаблНУ.СуммаБУ;
			КонецЕсли;
			
			Если НатуральныеПоказатели = 1 Тогда
				Опер.Количество = ТаблНУ.КоличествоБУ;
			КонецЕсли;
			
			КоличествоПроводок=КоличествоПроводок+1;
		КонецЦикла;
		Опер.СуммаОперации=СуммаОп;
		Если ДатаГод(Опер.ДатаОперации) <> ДатаГод(РабочаяДата()) Тогда
		    Опер.Документ.УстановитьНовыйНомер("");
		КонецЕсли;
		Опер.Записать(); 
		
		Если Строка(ДопСчетНУ)<>"" Тогда
			ОперСтар=СоздатьОбъект("Операция");
			ТекстПоиск=Формат("Ввод начальных остатков по счету "+Строка(ДопСчетНУ),"С50");		
			Если ОперСтар.ВыбратьПоЗначению(ДатаОст-1,ДатаОст-1,"Содержание",ТекстПоиск)>0 Тогда
				Пока ОперСтар.ПолучитьОперацию()=1 Цикл
					ОперСтар.Удалить(0);
				КонецЦикла;
			КонецЕсли; 
			Опер.Новая();
			СуммаОп=0;
			Опер.ДатаОперации=ДатаОст-1; 
			Опер.Содержание="Ввод начальных остатков по счету "+Строка(ДопСчетНУ);
			КоличествоПроводок=0;
			ТаблНУ.ВыбратьСтроки();
			Пока ТаблНУ.ПолучитьСтроку()=1 Цикл
				Если (СчетНУ=СчетПоКоду("Н05.01")) или (СчетНУ=СчетПоКоду("Н05.03")) Тогда
					ТекУсловие=ТаблНУ.ДопРекв.ПолучитьЗначение(7);
					Если ТекУсловие = "Не принимать к учету" Тогда
						Продолжить;
					КонецЕсли;
					
					Если (ДопСчетНУ=СчетПоКоду("Н05.02")) или (ДопСчетНУ=СчетПоКоду("Н05.04")) Тогда
						Если ТекУсловие<>"По балансовой стоимости" Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;	
					
				Если (СуммовыеПоказатели = 1) и (ТаблНУ.ДопСуммаБУ <> 0) Тогда
				Иначе
					Продолжить;
				КонецЕсли;
				
				Если КоличествоПроводок=5000 Тогда
					Опер.СуммаОперации=СуммаОп;
					Если ДатаГод(Опер.ДатаОперации) <> ДатаГод(РабочаяДата()) Тогда
					    Опер.Документ.УстановитьНовыйНомер("");
					КонецЕсли;
					Опер.Записать();
					Опер.Новая();
					СуммаОп=0;
					Опер.ДатаОперации=ДатаОст-1; 
					Опер.Содержание="Ввод начальных остатков по счету "+Строка(ДопСчетНУ);
					КоличествоПроводок=0; 
				КонецЕсли;
				Опер.НоваяПроводка(); Опер.РазделительУчета = Константа.ОсновноеЮрЛицо;

				Если (ДопСчетНУ = СчетПоКоду("Н05.02")) 
					или (ДопСчетНУ = СчетПоКоду("Н05.04"))
					или (ДопСчетНУ = СчетПоКоду("Н13.03")) Тогда
					Опер.Кредит.Счет=ДопСчетНУ;
					Для Инд=1 По СчетНУ.КоличествоСубконто() Цикл
						Субконто=ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,Инд);
						Опер.Кредит.Субконто(Инд,Субконто);
					КонецЦикла;

				Иначе
					Опер.Дебет.Счет=ДопСчетНУ;
					Для Инд=1 По СчетНУ.КоличествоСубконто() Цикл
						Субконто=ТаблНУ.ПолучитьЗначение(ТаблНУ.НомерСтроки,Инд);
						Опер.Дебет.Субконто(Инд,Субконто);
					КонецЦикла;
				КонецЕсли;
				
				Если СуммовыеПоказатели = 1 Тогда
					Опер.Сумма = ТаблНУ.ДопСуммаБУ;
					СуммаОп=СуммаОп+ТаблНУ.ДопСуммаБУ;
				КонецЕсли;
				
				КоличествоПроводок=КоличествоПроводок+1;
			КонецЦикла;
			
			Опер.СуммаОперации=СуммаОп;
			Если ДатаГод(Опер.ДатаОперации) <> ДатаГод(РабочаяДата()) Тогда
			    Опер.Документ.УстановитьНовыйНомер("");
			КонецЕсли;
			Опер.Записать();   
		КонецЕсли;	
		
		Сформировать();
	КонецЕсли;
	
КонецПроцедуры // СформироватьПроводки()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	
	ДатаОст = НачГода(РабочаяДата());
	
	ПриВыбореДаты();

	
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н01.01");
	ТаблицаСоответствия.СчетаБУ="08.4";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н01.08");
	ТаблицаСоответствия.СчетаБУ="08.5";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н01.09");
	ТаблицаСоответствия.СчетаБУ="08.3";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н01.02");
	ТаблицаСоответствия.СчетаБУ="07";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н01.05");
	ТаблицаСоответствия.СчетаБУ="20";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н01.07");
	ТаблицаСоответствия.СчетаБУ="44.1.1";
	ТаблицаСоответствия.НоваяСтрока();

	Если Константа.РаздельныйУчетМатериаловСкладПереработка.Получить(ДатаОст)=Да Тогда
		ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.01");
		ТаблицаСоответствия.СчетаБУ="10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.8, 10.9, 10.10";	
	Иначе		
		ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.01");
		ТаблицаСоответствия.СчетаБУ="10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9, 10.10";
	КонецЕсли;

	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.02.1");
	ТаблицаСоответствия.СчетаБУ="41";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.03");
	ТаблицаСоответствия.СчетаБУ="43";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.07");
	ТаблицаСоответствия.СчетаБУ="21";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.04");
	ТаблицаСоответствия.СчетаБУ="45";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.05");
	ТаблицаСоответствия.СчетаБУ="58.2";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.06");
	ТаблицаСоответствия.СчетаБУ="58.5"; 

	Если Константа.РаздельныйУчетМатериаловСкладПереработка.Получить(ДатаОст)=Да Тогда
		ТаблицаСоответствия.НоваяСтрока();
		ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н02.09");
		ТаблицаСоответствия.СчетаБУ="10.7";
	КонецЕсли;

	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н04.09");
	ТаблицаСоответствия.СчетаБУ="97";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н05.01");
	ТаблицаСоответствия.ДопСчетНУ=СчетПоКоду("Н05.02");
	ТаблицаСоответствия.СчетаБУ="01,03,02";
	
	РеквОС=СоздатьОбъект("СписокЗначений");
	РеквОС.ДобавитьЗначение("Первоначальная стоимость по НУ");
	РеквОС.ДобавитьЗначение("Срок полезного использования (по НУ), мес");
	РеквОС.ДобавитьЗначение("Амортизационная группа");
	РеквОС.ДобавитьЗначение("Метод начисления амортизации");
	РеквОС.ДобавитьЗначение("Специальный коэффициент"); 
	РеквОС.ДобавитьЗначение("Способ принятия основного средства к налоговому учету");
	
	ТаблицаСоответствия.ДопРеквизиты=РеквОС;
	
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н05.03");
	ТаблицаСоответствия.ДопСчетНУ=СчетПоКоду("Н05.04");
	ТаблицаСоответствия.СчетаБУ="04.1,05";
	
	РеквНМА=СоздатьОбъект("СписокЗначений");
	РеквНМА.ДобавитьЗначение("Первоначальная стоимость по НУ");
	РеквНМА.ДобавитьЗначение("Срок полезного использования (по НУ), мес");
	РеквНМА.ДобавитьЗначение("Амортизационная группа");
	РеквНМА.ДобавитьЗначение("Метод начисления амортизации");
	РеквНМА.ДобавитьЗначение("Понижающий коэффициент");
	РеквНМА.ДобавитьЗначение("Способ принятия нематериального актива к налоговому учету");
	ТаблицаСоответствия.ДопРеквизиты=РеквНМА;
	
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н13.01");
	ТаблицаСоответствия.СчетаБУ="58.3, 60.2, 60.22, 62.1, 62.11, 76.5";
	ТаблицаСоответствия.НоваяСтрока();
	ТаблицаСоответствия.СчетНУ=СчетПоКоду("Н13.02");
	ТаблицаСоответствия.ДопСчетНУ=СчетПоКоду("Н13.03");
	ТаблицаСоответствия.СчетаБУ="60.1, 60.11, 62.2, 62.22, 66, 67, 76.5";
	
	
	ТаблицаСоответствия.ВыбратьСтроки();
	Пока ТаблицаСоответствия.ПолучитьСтроку()=1 Цикл
		Группа.Установить(Строка(ТаблицаСоответствия.СчетНУ)+" "+ТаблицаСоответствия.СчетНУ.Наименование,ТаблицаСоответствия.НомерСтроки);
	КонецЦикла;
	Группа.ТекущаяСтрока(1);
	
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли; 
	
	СуммовыеПоказатели = 1;
	НатуральныеПоказатели = 1;
	
	ПриВыбореРазделаУчета();
	
	Таблица.Опции(0,0,0,0,0,"Бух_НУ",0,0);
	Таблица.ВывестиСекцию("Пояснения");
	Таблица.Показать();
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаЯчейкиТаблицы(Расшифровка)
	
	Отчет= Расшифровка.Получить("Отчет");
	Если Отчет="ОтчетПоПроводкам" Тогда
		Расшифровка.Установить("Валюта");
		Расшифровка.Установить("ПоВалюте");
		Расшифровка.Установить("РазделительУчета", РазделительУчета);
		глРасшифровка=Расшифровка;
		глФлагРасшифровки=1;
		Попытка            
			Если Метаданные.Отчет(Отчет).Выбран() = 1 Тогда
				ОткрытьФорму("Отчет."+Отчет+"#");
			ИначеЕсли Метаданные.Обработка(Отчет).Выбран() = 1 Тогда
				ОткрытьФорму("Обработка."+Отчет+"#");
			ИначеЕсли ФС.СуществуетФайл(Отчет) = 1 Тогда
				ОткрытьФорму("Отчет",, Отчет);
			КонецЕсли;
		Исключение   
			Сообщить(ОписаниеОшибки());
		КонецПопытки; 
		глФлагРасшифровки = 0;
		глРасшифровка = 0;
		глОбновить = 0;
	КонецЕсли;
	ФлагИзменения=Расшифровка.Получить("Изменять");
	Если ФлагИзменения="1" Тогда 
		ТекущийТип=Расшифровка.Получить("ТекущийТип");
		
		НовыйТип = ТекущийТип; 
		
		Меню = СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение("По балансовой стоимости");
		Меню.ДобавитьЗначение("По остаточной стоимости");
		Меню.ДобавитьЗначение("Не принимать к учету");
		Если Меню.ВыбратьЗначение(НовыйТип,,,, 1) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если (ТекущийТип="По балансовой стоимости") и (НовыйТип="По остаточной стоимости") Тогда
			СтарыйЗнак="#1 Объект принят к налоговому учету по балансовой стоимости";
			НовыйЗнак="#2 Объект принят к налоговому учету по остаточной стоимости";
		
		ИначеЕсли (ТекущийТип="По остаточной стоимости") и (НовыйТип="По балансовой стоимости") Тогда
			СтарыйЗнак="#2 Объект принят к налоговому учету по остаточной стоимости";
			НовыйЗнак="#1 Объект принят к налоговому учету по балансовой стоимости";
			
		ИначеЕсли (ТекущийТип="По балансовой стоимости") и (НовыйТип="Не принимать к учету") Тогда
			СтарыйЗнак="#1 Объект принят к налоговому учету по балансовой стоимости";
			НовыйЗнак="#3 Объект не принят к налоговому учету";
			
		ИначеЕсли (ТекущийТип="По остаточной стоимости") и (НовыйТип="Не принимать к учету") Тогда
			СтарыйЗнак="#2 Объект принят к налоговому учету по остаточной стоимости";
			НовыйЗнак="#3 Объект не принят к налоговому учету";
			
		ИначеЕсли (ТекущийТип="Не принимать к учету") и (НовыйТип="По балансовой стоимости") Тогда
			СтарыйЗнак="#3 Объект не принят к налоговому учету";
			НовыйЗнак="#1 Объект принят к налоговому учету по балансовой стоимости";
			
		ИначеЕсли (ТекущийТип="Не принимать к учету") и (НовыйТип="По остаточной стоимости") Тогда
			СтарыйЗнак="#3 Объект не принят к налоговому учету";
			НовыйЗнак="#2 Объект принят к налоговому учету по остаточной стоимости";
		КонецЕсли;
		
		Элемент=Расшифровка.Получить("СпрЭлемент");
		РабСправочник=СоздатьОбъект("Справочник."+Элемент.Вид());
		РабСправочник.НайтиЭлемент(Элемент);
		Если Найти(РабСправочник.ПрочиеСведения,"#")>0 Тогда
			
			НовСтрока=СтрЗаменить(РабСправочник.ПрочиеСведения, СтарыйЗнак, НовыйЗнак);
			РабСправочник.ПрочиеСведения=НовСтрока;
			
		Иначе
			РабСправочник.ПрочиеСведения=РабСправочник.ПрочиеСведения+РазделительСтрок+НовыйЗнак;
		КонецЕсли;
		РабСправочник.Записать();
		Сформировать();
		
	Иначе
		
		Если ПустоеЗначение(Расшифровка.Получить("СпрЭлемент"))=0 Тогда
			Элемент=Расшифровка.Получить("СпрЭлемент");
			ОткрытьФорму(Элемент,Расшифровка,0);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЯчейкиТаблицы()

ТаблицаСоответствия=СоздатьОбъект("ТаблицаЗначений");
ТаблицаСоответствия.НоваяКолонка("СчетНУ","Счет.Основной");
ТаблицаСоответствия.НоваяКолонка("ДопСчетНУ","Счет.Основной");
ТаблицаСоответствия.НоваяКолонка("СчетаБУ");
ТаблицаСоответствия.НоваяКолонка("ДопРеквизиты","СписокЗначений");

Параметры=СоздатьОбъект("СписокЗначений");
ЗначРеквизит=СоздатьОбъект("СписокЗначений");