Перем СпрВидыВычетов;
Перем СпрВидыДоходов;

//******************************************************************************
// ЗаполнитьТарифыСтраховыхВзносов()
//
// Параметры:
//	
//
// 	Вызывается из формул элементов диалога:
//		
//
//	Описание:
//		
//
Процедура ЗаполнитьТарифыСтраховыхВзносов()
	
	Спр = СоздатьОбъект("Справочник.ТарифСтраховыхВзносов");
	
	//значения устанавливаем на конец кода
	
	Спр.ИспользоватьДату('01.01.2010',1);
	ВидТарифа = Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим;
	Если Спр.НайтиПоРеквизиту("ВидТарифа", ВидТарифа, 1)=0 Тогда
		Спр.Новый();
	КонецЕсли;
	Спр.ВидТарифа = ВидТарифа;
	Спр.ПФР 			 = 20;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.9;
	Спр.ФФОМС			 = 1.1;
	Спр.ТФОМС			 = 2.0;
	Спр.Записать();
	
	Спр.ИспользоватьДату('01.01.2011',1);
	Спр.ПФР 			 = 26;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.9;
	Спр.ФФОМС			 = 2.1;
	Спр.ТФОМС			 = 3.0;
	Спр.Записать(); 
	
	Спр.ИспользоватьДату('01.01.2010',1);
	ВидТарифа = Перечисление.ТарифыСтраховыхВзносов.ЕНВД;
	Если Спр.НайтиПоРеквизиту("ВидТарифа", ВидТарифа, 1)=0 Тогда
		Спр.Новый();
	КонецЕсли;
	Спр.ВидТарифа = ВидТарифа;
	Спр.ПФР 			 = 14;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 0;
	Спр.ФФОМС			 = 0;
	Спр.ТФОМС			 = 0;
	Спр.Записать();
	
	Спр.ИспользоватьДату('01.01.2011',1);
	Спр.ПФР 			 = 26;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.9;
	Спр.ФФОМС			 = 2.1;
	Спр.ТФОМС			 = 3.0;
	Спр.Записать(); 
	
	Спр.ИспользоватьДату('01.01.2010',1);
	ВидТарифа = Перечисление.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны;
	Если Спр.НайтиПоРеквизиту("ВидТарифа", ВидТарифа, 1)=0 Тогда
		Спр.Новый();
	КонецЕсли;
	Спр.ВидТарифа = ВидТарифа;
	Спр.ПФР 			 = 14;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 0;
	Спр.ФФОМС			 = 0;
	Спр.ТФОМС			 = 0;
	Спр.Записать();
	
	Спр.ИспользоватьДату('01.01.2011',1);
	Спр.ПФР 			 = 16;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 1.9;
	Спр.ФФОМС			 = 1.1;
	Спр.ТФОМС			 = 2.0;
	Спр.Записать();
	
	Спр.ИспользоватьДату('01.01.2013',1);
	Спр.ПФР 			 = 21;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.2;
	Спр.ФФОМС			 = 1.6;
	Спр.ТФОМС			 = 2.1;
	Спр.Записать();  
	
	Спр.ИспользоватьДату('01.01.2015',1);
	Спр.ПФР 			 = 26;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.9;
	Спр.ФФОМС			 = 2.1;
	Спр.ТФОМС			 = 3.0;
	Спр.Записать(); 
	
	Спр.ИспользоватьДату('01.01.2010',1);
	ВидТарифа = Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов;
	Если Спр.НайтиПоРеквизиту("ВидТарифа", ВидТарифа, 1)=0 Тогда
		Спр.Новый();
	КонецЕсли;
	Спр.ВидТарифа = ВидТарифа;
	Спр.ПФР 			 = 14;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 0;
	Спр.ФФОМС			 = 0;
	Спр.ТФОМС			 = 0;
	Спр.Записать();
	
	Спр.ИспользоватьДату('01.01.2011',1);
	Спр.ПФР 			 = 16;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 1.9;
	Спр.ФФОМС			 = 1.1;
	Спр.ТФОМС			 = 2.0;
	Спр.Записать();
	
	Спр.ИспользоватьДату('01.01.2013',1);
	Спр.ПФР 			 = 21;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.2;
	Спр.ФФОМС			 = 1.6;
	Спр.ТФОМС			 = 2.1;
	Спр.Записать();  
	
	Спр.ИспользоватьДату('01.01.2015',1);
	Спр.ПФР 			 = 26;
	Спр.ПФРНакопительный = 6;
	Спр.ФСС 			 = 2.9;
	Спр.ФФОМС			 = 2.1;
	Спр.ТФОМС			 = 3.0;
	Спр.Записать();
	
	
КонецПроцедуры //ЗаполнитьТарифыСтраховыхВзносов 

//******************************************************************************
//	УстановитьСтавкуЕСН(Налог,НомерСтавкиОПС,Шкала,НомерПредела,Предел,Процент,ДатаАктуальности)
//
//	Параметры:
//		Налог				- справочник "Налоги и отчисления"
//		Шкала				- справочник "Ставки налогов"
//		НомерПредела		- номер предела ставки
//		НомерСтавкиОПС		- строка, номер ставки взносов на ОПС ("", "2" или "3")
//		Предел				- сумма предела ставки
//		Процент				- ставка в процентах
//		ДатаАктуальности 	- дата актуальности периодических реквизитов
//
//	Описание:
//		Добавляет новый элемент справочника "Ставки налогов".
//
Процедура УстановитьСтавкуЕСН(Налог, НомерСтавкиОПС="", Шкала, НомерПредела=1, Предел=100000, Процент, ДатаАктуальности='01.01.2001')
	
	Шкала.ИспользоватьВладельца(Налог);
	
	Если Шкала.НайтиПоКоду(НомерПредела) = 0 Тогда
		
		Если НомерПредела = 1 Тогда
		    НаименованиеПредела = "1_Первый предел";
			
		ИначеЕсли НомерПредела = 2 Тогда
			НаименованиеПредела = "2_Второй предел";
			
		ИначеЕсли НомерПредела = 3 Тогда
			НаименованиеПредела = "3_Третий предел";
			
		ИначеЕсли НомерПредела = 4 Тогда
			НаименованиеПредела = "4_Четвертый предел";
			
		Иначе
			НаименованиеПредела = "";
		КонецЕсли;
	
		Шкала.Новый();
		Шкала.Код = НомерПредела;
		Шкала.Наименование = НаименованиеПредела;
		Шкала.Записать();
	КонецЕсли;
	
	Шкала.Предел.Установить(ДатаАктуальности, Предел);
	Шкала.ПолучитьАтрибут("Процент" + НомерСтавкиОПС).Установить(ДатаАктуальности, Процент);
	
КонецПроцедуры	// УстановитьСтавкуЕСН

//******************************************************************************
//	УстановитьВидВычета(Код,Наименование)
//
//	Параметры:
//		Код			- код вида вычета
//		Наименование- наименвоание вида вычета
//
//	Возвращаемое значение:
//		Текущий (найденный или созданный) вид вычета
//
//	Описание:
//		Если существует старый вид вычета с таким же кодом,
//		то его реквизиты изменяются, если не найден, то создается новый.
//
Функция УстановитьВидВычета(Код,Наименование="")
	
	Если СпрВидыВычетов.НайтиПоКоду(Код,0)=0 Тогда
		СпрВидыВычетов.Новый();
		СпрВидыВычетов.Код = Код;
	КонецЕсли;
	Если (СпрВидыВычетов.Наименование<>Наименование)и(ПустоеЗначение(Наименование)=0) Тогда
		СпрВидыВычетов.Наименование = Наименование;
		СпрВидыВычетов.Записать();
	КонецЕсли;
	Возврат СпрВидыВычетов.ТекущийЭлемент()
	
КонецФункции	// УстановитьВидВычета

//******************************************************************************
// УстановитьЗначениеВычета()
//
Процедура УстановитьЗначениеВычета(Код,Сумма = 0, Предел = 0, ДатаАктуальности = 0)

	Если СпрВидыВычетов.НайтиПоКоду(Код,0)=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ДатаАктуальности) = 0 Тогда
		СпрВидыВычетов.ИспользоватьДату(ДатаАктуальности,1);
		СпрВидыВычетов.Сумма			= Сумма;
		СпрВидыВычетов.ПределДоходов	= Предел;
		СпрВидыВычетов.Записать();
	КонецЕсли;
	
КонецПроцедуры //УстановитьЗначениеВычета

//******************************************************************************
// ОписатьКодВычетаНДФЛ()
//		
//
Функция ОписатьКодВычетаНДФЛ(КодВычета, НовыйКод, 
			КодДляОтчетности2009, КодДляОтчетности2008, КодДляОтчетности2007,
			Наименование,
			Наименование2009, Наименование2008, Наименование2007)
	
		
		Если СпрВидыВычетов.НайтиПоКоду(КодВычета,0)=0 Тогда
			Если СпрВидыВычетов.НайтиПоКоду(НовыйКод,0)=0 Тогда
				СпрВидыВычетов.Новый();
			КонецЕсли;
		КонецЕсли;
		
		СпрВидыВычетов.Код = НовыйКод;
		
		СпрВидыВычетов.КодДляОтчетности2007 = КодДляОтчетности2007;
		СпрВидыВычетов.КодДляОтчетности2008 = КодДляОтчетности2008;
		СпрВидыВычетов.КодДляОтчетности2009 = КодДляОтчетности2009;
		
		СпрВидыВычетов.Наименование2007 = Наименование2007;
		СпрВидыВычетов.Наименование2008 = Наименование2008;
		СпрВидыВычетов.Наименование2009 = Наименование2009;
		
		СпрВидыВычетов.Наименование = Наименование;
		СпрВидыВычетов.Записать();    
		
		Возврат СпрВидыВычетов.ТекущийЭлемент()
		
    
КонецФункции //ОписатьКодВычетаНДФЛ
	
//******************************************************************************
// ОбработатьСтандартныеВычеты()
//
Процедура ОбработатьСтандартныеВычеты()
	
	
	ОписатьКодВычетаНДФЛ("101","108\101","108", "101", "101",
	"1000 руб. на каждого ребенка до 18 лет, на уч. очной формы обучения, студента, курсанта до 24 лет",
	"1000 руб. на каждого ребенка до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта до 24 лет",
	"600 руб. на каждого ребенка в возрасте до 18 лет на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей",
	"600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей");
	
	ОписатьКодВычетаНДФЛ("106", "109\106", "109", "106", "106",                                  
	"2000 руб. на каждого ребенка-инвалида до 18 лет, на уч. очной формы обучения, студента до 24 лет",
	"2000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения, студента до 24 лет, явл. инвалидом I или II группы",
	"1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей",
	"1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей");
	
	ОписатьКодВычетаНДФЛ("102","110\102", "110", "102", "102",
	"2000 руб. на каждого ребенка единственному родителю (начиная с доходов 2009 года)",
	"2000 руб. на каждого ребенка единственному родителю (приемному родителю), опекуну, попечителю (начиная с доходов 2009 года)",
	"1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям",
	"1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям");
	
	ОписатьКодВычетаНДФЛ("103","103", "103", "103", "103",
	"400 руб. на налогоплательщика, не относящегося к категориям пп. 1-2 п. 1 ст. 218 НК РФ",
	"400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1-2 п. 1 ст. 218 Налогового кодекса Российской Федерации",
	"400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации",
	"400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	
	
	ОписатьКодВычетаНДФЛ("104","104", "104", "104", "104",
	"500 рублей на налогоплательщика, относящегося к категориям пп. 2 п. 1 ст. 218 НК РФ",
	"500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации",
	"500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации",
	"500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	
	
	ОписатьКодВычетаНДФЛ("105","105", "105", "105", "105",
	"3000 рублей на налогоплательщика, относящегося к категориям пп. 1 п. 1 ст. 218 НК РФ",
	"3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации",
	"3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации",
	"3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	
	
	ОписатьКодВычетаНДФЛ("111","111", "111", "-", "-",
	"2000 руб. на каждого ребенка, при условии отказа от вычета второго родителя",
	"2000 руб. на каждого ребенка родителю (в т.ч приемному) при условии отказа второго родителя (в т.ч. приемного) от получения вычета на этого ребенка",
	"не предоставлялся",
	"не предоставлялся");
	
	
	ОписатьКодВычетаНДФЛ("107","112\107", "112", "107", "107",
	"4000 руб. на каждого ребенка-инвалида до 18 лет, единственному родителю и др.",
	"4000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю и др.",
	"2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям",
	"2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям");
	
	
	ОписатьКодВычетаНДФЛ("113","113", "113", "-", "-",
	"4000 руб. на ребенка-инвалида до 18 лет, при условии отказа от вычета второго родителя",
	"4000 руб. на ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при условии отказа от вычета второго родителя",
	"не предоставлялся",
	"не предоставлялся");
	
	
	ОписатьКодВычетаНДФЛ("305","305", "305", "-", "-",
	"Сумма фактически произведенных и документально подтвержденных расходов, связанных с заключением, исполнением и с прекращением срочных сделок",
	"Сумма фактически произведенных и документально подтвержденных расходов, связанных с заключением, исполнением и с прекращением срочных сделок",
	"не предоставлялся",
	"не предоставлялся");
	
	ОписатьКодВычетаНДФЛ("306","306", "306", "-", "-",
	"Сумма фактически произведенных и документально подтвержденных расходов по приобретению, хранению и реализации паев паевых инвестиционных фондов",
	"Сумма фактически произведенных и документально подтвержденных расходов по приобретению, хранению и реализации паев паевых инвестиционных фондов",
	"не предоставлялся",
	"не предоставлялся");
	
	
	ОписатьКодВычетаНДФЛ("307","307","307", "307", "307",
	"Сумма расходов на приобретение, реализацию и хранение ценных бумаг, обращающихся на организованном рынке ценных бумаг",
	"Сумма расходов на приобретение, реализацию и хранение ценных бумаг, обращающихся на организованном рынке ценных бумаг",
	"Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)",
	"Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)");
	
	ОписатьКодВычетаНДФЛ("308","308", "308", "-", "-",
	"Сумма расходов на приобретение реализацию и хранение ценных бумаг, не обращающихся на организованном рынке ценных бумаг",
	"Сумма расходов на приобретение реализацию и хранение ценных бумаг, не обращающихся на организованном рынке ценных бумаг",
	"не предоставлялся",
	"не предоставлялся");
	
	
	ОписатьКодВычетаНДФЛ("309","309", "309", "-", "-",
	"Сумма расходов на приобретение реализацию и хранение ценных бумаг, не обр-ся на организованном рынке, но при приобретении отвечавших его требованиям",
	"Сумма расходов на приобретение реализацию и хранение ценных бумаг, не обр-ся на организованном рынке, но при приобретении отвечавших его требованиям",
	"не предоставлялся",
	"не предоставлялся");
	
	
	ОписатьКодВычетаНДФЛ("310","310", "310", "-", "-",
	"Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на организованном рынке ценных бумаг",
	"Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на организованном рынке ценных бумаг",
	"не предоставлялся",
	"не предоставлялся");
	
	ОписатьКодВычетаНДФЛ("311","313\311", "313", "313", "311",
	"Сумма, израсходованная на новое строительство либо приобретение на территории РФ жилого дома, и т.д.",
	"Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории РФ жилого дома, квартиры, комнаты или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 2 000 000 руб.",
	"Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории РФ жилого дома, квартиры, комнаты или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 2 000 000 руб.",
	"Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 1 000 000 руб.");
	
	ОписатьКодВычетаНДФЛ("312","312", "312", "312", "312",
	"Сумма, направленная на погашение процентов по целевым займам (кредитам) на новое строительство",
	"Сумма, направленная на погашение процентов по целевым займам (кредитам) на новое строительство или приобретение на территории РФ жилого дома, квартиры",
	"Сумма, направленная на погашение процентов по целевым займам (кредитам), полученным от кредитных и иных организаций Российской Федерации и фактически израсходованная налогоплательщиком на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них",
	"Сумма, направленная на погашение процентов по целевым займам (кредитам), полученным от кредитных и иных организаций Российской Федерации и фактически израсходованная налогоплательщиком на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них");
	
	
	ОписатьКодВычетаНДФЛ("403","403", "403", "403", "403",
	"Сумма фактически произведенных и документально подтвержденных расходов по договорам ГПХ",
	"Сумма фактически произведенных и документально подтвержденных расходов, связанных с выполнением работ (оказанием услуг) по договорам ГПХ",
	"Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера",
	"Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера");
	
	
	ОписатьКодВычетаНДФЛ("404","404", "404", "404", "404",
	"Сумма фактически произведенных расходов, связанных с получением авторских вознаграждений",
	"Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений",
	"Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов",
	"Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов");
	
	ОписатьКодВычетаНДФЛ("405","405", "405", "405", "405",
	"Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений",
	"Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений",
	"Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)",
	"Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)");
	
	
	ОписатьКодВычетаНДФЛ("501","501", "501", "501", "501",
	"Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей",
	"Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей",
	"Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей",
	"Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей");
	
	
	ОписатьКодВычетаНДФЛ("502","502", "502", "502", "502",
	"Вычет из стоимости призов в денежной и натуральной форме на конкурсах и соревнованиях",
	"Вычет из стоимости призов в денежной и натуральной форме на конкурсах и соревнованиях, проводимых в соотв. с решениями Прав-ва РФ и др. органов власти",
	"Вычет из стоимости призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, Законодательных (представительных) органов государственной власти или представительных органов местного самоуправления",
	"Вычет из стоимости призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, Законодательных (представительных) органов государственной власти или представительных органов местного самоуправления");
	
	
	ОписатьКодВычетаНДФЛ("503","503", "503", "503", "503",
	"Вычет из суммы материальной помощи, своим работникам, а также бывшим своим работникам-пенсионерам",
	"Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам-пенсионерам",
	"Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту",
	"Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту");
	
	
	ОписатьКодВычетаНДФЛ("504","504", "504", "504", "504",
	"Вычет из суммы возмещения (оплаты) своим работникам, а также инвалидам стоимости медикаментов",
	"Вычет из суммы возмещения (оплаты) работодателями своим работникам, бывшим своим работникам (пенсионерам), а также инвалидам стоимости медикаментов",
	"Вычет из суммы возмещения (оплаты) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом",
	"Вычет из суммы возмещения (оплаты) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом");
	
	
	ОписатьКодВычетаНДФЛ("505","505", "505", "505", "505",
	"Вычет из стоимости выигрышей и призов в рекламных акциях",
	"Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)",
	"Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)",
	"Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)");
	
	
	ОписатьКодВычетаНДФЛ("506", "506", "506", "506", "506",
	"Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов",
	"Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов",
	"Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов",
	"Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов");
	
	ОписатьКодВычетаНДФЛ("507","507", "507", "507", "507",
	"Вычет из суммы помощи полученных ветеранами, инвалидами ВОВ и приравненных к ним",
	"Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами, инвалидами ВОВ и приравненных к ним",
	"Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто и других мест принудительного содержания",
	"Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто и других мест принудительного содержания");	
	
	ОписатьКодВычетаНДФЛ("508","508", "508", "508", "-",
	"Вычет из суммы материальной помощи, при рождении (усыновлении, удочерении) ребенка",
	"Вычет из суммы единовременной материальной помощи, оказываемой работодателями работникам (родителям, усыновителям, опекунам) при рождении (усыновлении, удочерении) ребенка",
	"Вычет из суммы единовременной материальной помощи, оказываемой работодателями работникам (родителям, усыновителям, опекунам) при рождении (усыновлении, удочерении) ребенка",
	"не предоставлялся");
	
	
	ОписатьКодВычетаНДФЛ("601","601", "601", "601", "601",
	"Сумма, уменьшающая налоговую базу по доходам в виде дивидендов",
	"Сумма, уменьшающая налоговую базу по доходам в виде дивидендов",
	"Сумма, уменьшающая налоговую базу по доходам, полученным в виде дивидендов",
	"Сумма, уменьшающая налоговую базу по доходам, полученным в виде дивидендов");
	
	ОписатьКодВычетаНДФЛ("314","314", "-", "314", "314",
	"не предоставлялся",
	"не предоставлялся",
	"Сумма расходов при уступке прав требования по договору участия в долевом стр-ве",
	"Сумма расходов при уступке прав требования по договору участия в долевом стр-ве"); 
	
	ОписатьКодВычетаНДФЛ("315","315", "-", "315", "315",
	"не предоставлялся",
	"не предоставлялся",
	"Сумма фактически произведенных расходов на приобретение доли в уст. капитале",
	"Сумма фактически произведенных расходов на приобретение доли в уст. капитале"); 
	
	ОписатьКодВычетаНДФЛ("316","316", "316", "316", "316",
	"Сумма фактически произведенных расходов на приобретение доли в уст. капитале",
	"Сумма фактически произведенных расходов на приобретение доли в уст. капитале",
	"Сумма фактически произведенных расходов на приобретение доли в уст. капитале",
	"Сумма фактически произведенных расходов на приобретение доли в уст. капитале");
	
	ОписатьКодВычетаНДФЛ("317","317", "317", "317", "317",
	"Суммы, полученные от продажи ценных бумаг, находившихся в собств. 3 года и более",
	"Суммы, полученные от продажи ценных бумаг, находившихся в собств. 3 года и более",
	"Суммы, полученные от продажи ценных бумаг, находившихся в собств. 3 года и более",
	"Суммы, полученные от продажи ценных бумаг, находившихся в собств. 3 года и более");
	
	ОписатьКодВычетаНДФЛ("620","620", "620", "620", "620",
	"Иные суммы, уменьшающие налоговую базу в соответствии с положениями главы 23 НК РФ",
	"Иные суммы, уменьшающие налоговую базу в соответствии с положениями главы 23 Налогового кодекса Российской Федерации",
	"Иные суммы, уменьшающие налоговую базу",
	"Иные суммы, уменьшающие налоговую базу");
	

	
КонецПроцедуры //ОбработатьСтандартныеВычеты

//******************************************************************************
//	УстановитьВидДохода(Код,Наименование,КодВычета, Обновить)
//
//	Параметры:
//		Код			- код вида дохода
//		Наименование- наименование вида дохода
//		КодВычета	- код вычета вида дохода
//
//	Описание:
//		Если существует старый вид дохода с таким же кодом,
//		то его реквизиты изменяются, если не найден, то создается новый.
//
Процедура УстановитьВидДохода(Код,Наименование,КодВычета="",Обновить=0)
	
	Если СпрВидыДоходов.НайтиПоКоду(Код,0)=0 Тогда
		Если Обновить = 0 Тогда
		    СпрВидыДоходов.Новый();
			СпрВидыДоходов.Код = Код;
			
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если (СпрВидыДоходов.Наименование <> Наименование) или (СпрВидыДоходов.ВидВычета.Код <> КодВычета) Тогда
		СпрВидыДоходов.Наименование = Наименование;
		Если ПустоеЗначение(КодВычета) = 0 Тогда
			СпрВидыДоходов.ВидВычета = УстановитьВидВычета(КодВычета);
		КонецЕсли;
		СпрВидыДоходов.Записать();
	КонецЕсли;
	
КонецПроцедуры	// УстановитьВидДохода   

//******************************************************************************
//	УстановитьВидДоходаНДФЛ(Код,Наименование,КодВычета, ПолноеНаименование)
//
//	Параметры:
//		Код			- код вида дохода
//		Наименование- наименование вида дохода
//		КодВычета	- код вычета вида дохода
//		ПолноеНаименование - наименование по классификатору
//
//	Описание:
//		Если существует старый вид дохода с таким же кодом,
//		то его реквизиты изменяются, если не найден, то создается новый.
//
Процедура УстановитьВидДоходаНДФЛ(Код,Наименование,КодВычета="",ПолноеНаименование = "")
	
	Если СпрВидыДоходов.НайтиПоКоду(Код,0)=0 Тогда
		СпрВидыДоходов.Новый();
		СпрВидыДоходов.Код = Код;
	КонецЕсли;
	
	СпрВидыДоходов.Наименование 	  = Наименование;
	СпрВидыДоходов.ПолноеНаименование = ПолноеНаименование;
	Если ПустоеЗначение(КодВычета) = 0 Тогда
		СпрВидыДоходов.ВидВычета = УстановитьВидВычета(КодВычета);
	КонецЕсли;
	СпрВидыДоходов.Записать();
	

КонецПроцедуры	// УстановитьВидДоходаНДФЛ

//******************************************************************************
// НаименованиеВариантаРасчетаНалогов()
//
Функция НаименованиеВариантаРасчетаНалогов(ВариантРасчетаНалогов)
	
	Стр = "";
	Если ((ПустоеЗначение(ВариантРасчетаНалогов.СтавкаНДС) = 0) и 
		(ВариантРасчетаНалогов.СтавкаНДС.Ставка <> 0)) 
		или (ПустоеЗначение(ВариантРасчетаНалогов.СтавкаНДС) = 1) Тогда
		Стр = Стр + "НДС ";
		Если ВариантРасчетаНалогов.СуммаВключаетНДС = 1 Тогда
			Стр = Стр + "в сумме";
		Иначе
			Стр = Стр + "сверху";
		КонецЕсли;
		
		Если ВариантРасчетаНалогов.СтавкаНДС.Ставка <> 0 Тогда
			Стр = Стр + " " + глПредставлениеСтавки(ВариантРасчетаНалогов.СтавкаНДС);
		КонецЕсли;
	КонецЕсли;

	Если ((ПустоеЗначение(ВариантРасчетаНалогов.СтавкаНП) = 0) и 
		(ВариантРасчетаНалогов.СтавкаНП.Ставка <> 0)) 
		или (ПустоеЗначение(ВариантРасчетаНалогов.СтавкаНП) = 1) Тогда
		Стр = ?(Стр="", "", Стр+"; ") + "НП ";
		Если ВариантРасчетаНалогов.СуммаВключаетНП = 1 Тогда
			Стр = Стр + "в сумме";
		Иначе
			Стр = Стр + "сверху";
		КонецЕсли;
		
		Если ВариантРасчетаНалогов.СтавкаНП.Ставка <> 0 Тогда
			Стр = Стр + " " + глПредставлениеСтавки(ВариантРасчетаНалогов.СтавкаНП);
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(Стр) = 1 Тогда
	    Стр = "Без налогов";
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции // НаименованиеВариантаРасчетаНалогов()


//******************************************************************************
//	УстановитьДокументУдЛичность(КодНДФЛ,КодСЗВ,Наименование)
//
//	Параметры:
//		КодНДФЛ			- код НДФЛ документа
//		КодСЗВ			- код СЗВ документа
//		Наименование	- наименование документа
//
//	Описание:
//		Добавляет новый элемент в справочник Документы
//
Процедура УстановитьДокументУдЛичность(СпрДокументы, КодНДФЛ,КодСЗВ,Наименование)
	
	Если СпрДокументы.НайтиПоНаименованию(Наименование)=0 Тогда
		СпрДокументы.Новый();
		СпрДокументы.КодНДФЛ		= КодНДФЛ;
		СпрДокументы.КодСЗВ			= КодСЗВ;
		СпрДокументы.Наименование	= Наименование;
		СпрДокументы.Записать();
	КонецЕсли;
	
КонецПроцедуры	// УстановитьДокументУдЛичность

//******************************************************************************
// Выполнить()
//
Процедура Выполнить()
	
	НачатьТранзакцию();

	//Создание счетов в информационной базе
	Счет = СоздатьОбъект("Счет.Основной");
	Если Счет.НайтиПоКоду("08.6") = 0 Тогда
		Счет.Новый();
		Счет.Код = "08.6";
		Счет.Наименование = "Перев.молодн. в осн.стадо";
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("08.7") = 0 Тогда
		Счет.Новый();
		Счет.Код = "08.7";
		Счет.Наименование = "Приобр. взрослых животных";
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("11") = 0 Тогда
		Счет.Новый();
		Счет.Код = "11";
		Счет.Наименование = "Животные на выращивании";
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("50.3") = 0 Тогда
		Счет.Новый();
		Счет.Код = "50.3";
		Счет.Наименование = "Денежные документы в руб.";
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("50.33") = 0 Тогда
		Счет.Новый();
		Счет.Код = "50.33";
		Счет.Наименование = "Денежные документы в вал.";
		Счет.Валютный = 1;
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("66.6") = 0 Тогда
		Счет.Новый();
		Счет.Код = "66.6";
		Счет.Наименование = "Расч.по краткоср.обяз.";
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("67.6") = 0 Тогда
		Счет.Новый();
		Счет.Код = "67.6";
		Счет.Наименование = "Расч.по долгоср.обяз.";
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("68.10") = 0 Тогда
		Счет.Новый();
		Счет.Код = "68.10";
		Счет.Наименование = "Прочие налоги и сборы";
		Счет.ВидСубконто(1, ВидыСубконто.ВидыПлатежейВБюджет);
		Счет.Записать();
	КонецЕсли;
	Если Счет.НайтиПоКоду("98.2.2") = 0 Тогда
		Счет.Новый();
		Счет.Код = "98.2.2";
		Счет.Наименование = "Безвозм.пост.проч.активов";
		Счет.Записать();
	КонецЕсли;
	
	Состояние("Заполнение полных наименований счетов в плане счетов");
	ТаблПолнНаименованийСчетов = СоздатьОбъект("Таблица");
	ТаблПолнНаименованийСчетов.ИсходнаяТаблица("ПланСчетов");
	ТаблПолнНаименованийСчетов.ВывестиСекцию("Строки|Колонки");
	Счет = СоздатьОбъект("Счет." + ВыбранныйПланСчетов().Идентификатор());
	НомерСтроки = 1;
	Пока ПустоеЗначение(ТаблПолнНаименованийСчетов.Область(НомерСтроки, 1).Текст) = 0 Цикл
		Если ТаблПолнНаименованийСчетов.Область(НомерСтроки, 1).Текст = "План счетов" Тогда //Идентификатор плана счетов
			ПланСчетов = ТаблПолнНаименованийСчетов.Область(НомерСтроки, 2).Текст;
			Если ПланыСчетов.ЗначениеПоИдентификатору(ПланСчетов).Выбран() = 1 Тогда
				Счет = СоздатьОбъект("Счет." + ПланСчетов);
				ПредставлениеПланаСчетов = ПланыСчетов.ЗначениеПоИдентификатору(ПланСчетов);
				Состояние("План счетов """+ПредставлениеПланаСчетов+""".");
				
			Иначе
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
		Иначе //Код счета и полное наименование
			КодСчета = ТаблПолнНаименованийСчетов.Область(НомерСтроки, 1).Текст;
			ПолнНаименование = ТаблПолнНаименованийСчетов.Область(НомерСтроки, 2).Текст;
			Если Счет.НайтиПоКоду(КодСчета) = 1 Тогда
				Счет.ПолнНаименование = ПолнНаименование;
				Попытка
					Счет.Записать();
					Состояние("Счет "+КодСчета+", полное наименование: """+ПолнНаименование+"""");
					
				Исключение
					ОтменитьТранзакцию();
					Возврат;
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Состояние("Заполнение справочника ""Налоги и отчисления""");
	глПолучитьНалог("ЕСН_ФБ", 1);
	глПолучитьНалог("ПФР_страх", 1);
	глПолучитьНалог("ПФР_нак", 1);
	глПолучитьНалог("ФФОМС", 1);
	глПолучитьНалог("ТФОМС", 1);
	глПолучитьНалог("ФСС", 1);
	глПолучитьНалог("ФСС_НС", 1);
	глПолучитьНалог("Образ", 1);
	глПолучитьНалог("НДФЛ", 1);
	глПолучитьНалог("Имущество", 1);
	глПолучитьНалог("ПрибФед", 1);
	глПолучитьНалог("ПрибРесп", 1);
	глПолучитьНалог("ПрибМест", 1);
	глПолучитьНалог("ФСС_БЛ", 1);
	Константа.ПределВычетов.Установить('01.01.2001', 20000);

	Состояние("Заполнение справочника ""Единицы измерений""");
	Единицы = СоздатьОбъект("Таблица");
	Единицы.ИсходнаяТаблица("ЕдиницыИзмерений");
	Единицы.ВывестиСекцию("Строки|Колонки");
	СпрЕИ = СоздатьОбъект("Справочник.ЕдиницыИзмерений");
	НомерСтроки = 1;
	Пока ПустоеЗначение(Единицы.Область(НомерСтроки, 1).Текст) = 0 Цикл
		Код = Единицы.Область(НомерСтроки, 1).Текст;
		Наименование = Единицы.Область(НомерСтроки, 2).Текст;
		ПолнНаименование = Единицы.Область(НомерСтроки, 3).Текст;
		
		Если СпрЕИ.НайтиПоКоду(Код) = 0 Тогда
			СпрЕИ.Новый();
			СпрЕИ.Код = Код;
		КонецЕсли;
		СпрЕИ.Наименование = Наименование;
		СпрЕИ.ПолнНаименование = ПолнНаименование;
		СпрЕИ.Записать();
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	Если СпрЕИ.НайтиПоКоду("796") = 0 Тогда
		СпрЕИ.Код = "796";
		СпрЕИ.Наименование = "шт";
		СпрЕИ.ПолнНаименование = "штука";
		СпрЕИ.Записать();
	КонецЕсли;
	Константа.ОсновнаяЕдиницаИзмерения = СпрЕИ.ТекущийЭлемент();

	Состояние("Заполнение справочника ""Валюты""");
	Валюты = СоздатьОбъект("Справочник.Валюты");
	
	Валюты.Новый();
	Валюты.Код = "810";
	Валюты.Наименование = "руб";
	Валюты.ПолнНаименование = "Рубли";
	Валюты.Записать();
	Валюты.Кратность.Установить('01.01.1980',1);
	Валюты.Курс.Установить('01.01.1980',1);
	Константа.ОсновнаяВалюта = Валюты.ТекущийЭлемент();
		
	Валюты.Новый();
	Валюты.Код = "840";
	Валюты.Наименование = "USD";
	Валюты.ПолнНаименование = "Доллар США";
	Валюты.ИмяФайлаПрописи = "USD.spl";
	Валюты.Записать();
	Валюты.Кратность.Установить('01.01.1980',1);
	Валюты.Курс.Установить('01.12.2003', 29.7387);

	Валюты.Новый();
	Валюты.Код = "978";
	Валюты.Наименование = "EUR";
	Валюты.ПолнНаименование = "Евро";
	Валюты.ИмяФайлаПрописи = "EUR.spl";
	Валюты.Записать();
	Валюты.Кратность.Установить('01.01.1980',1);
	Валюты.Курс.Установить('01.12.2003', 35.5021);

	Состояние("Заполнение справочника ""Ставки НДС""");
	СпрНДС = СоздатьОбъект("Справочник.СтавкиНДС");
	
	СпрНДС.Новый();
	СпрНДС.Ставка = 18;
	СпрНДС.Наименование = "18%";
	СпрНДС.Записать();
	Константа.ОсновнаяСтавкаНДС = СпрНДС.ТекущийЭлемент();
	
	СпрНДС.Новый();
	СпрНДС.Ставка = 10;
	СпрНДС.Наименование = "10%";
	СпрНДС.Записать();

	СпрНДС.Новый();
	СпрНДС.Ставка = 0;
	СпрНДС.Наименование = "Без налога (НДС)";
	СпрНДС.Записать();

	Состояние("Заполнение справочника ""Ставки НП""");
	Константа.ОсновнаяСтавкаНП = глБезНалога("НП");

	Состояние("Начальное заполнение прочих справочников и установка констант");
	БанкСч = СоздатьОбъект("Справочник.БанковскиеСчета");
	БанкСч.Новый();
	БанкСч.Наименование = "Основной р/с";
	БанкСч.ТипСчета = Перечисление.ТипыБанковскихСчетов.Рублевый;
	БанкСч.ВидСчета = "Расчетный (текущий)";
	БанкСч.Записать();
	Константа.ОсновнойБанковскийСчет = БанкСч.ТекущийЭлемент();
	
	ТипыЦен = СоздатьОбъект("Справочник.ТипыЦен");
	ТипыЦен.Новый();
	ТипыЦен.Наименование = "Основная цена";
	ТипыЦен.Валюта = "";  
	ТипыЦен.ЦенаВклНДС = 0;
	ТипыЦен.ЦенаВклНП = 0;                               
	ТипыЦен.Записать();
		
	Скл = СоздатьОбъект("Справочник.МестаХранения");
	Скл.Новый();
	Скл.Наименование = "Основной склад";
	Скл.ТипЦен = ТипыЦен.ТекущийЭлемент();
	Скл.ТипСклада = Перечисление.ТипыСкладов.Оптовый;
	Скл.Записать();
	Константа.ОсновнойСклад = Скл.ТекущийЭлемент();

	Подр = СоздатьОбъект("Справочник.Подразделения");
	Подр.Новый();
	Подр.Наименование = "Основное подразделение";
	Подр.Записать();
	Константа.ОсновноеПодразделение = Подр.ТекущийЭлемент();
	
	ВидДоговоров = СоздатьОбъект("Справочник.ВидыДоговоров");
	ВидДоговоров.Новый();
	ВидДоговоров.Наименование = "Основной вид договоров";
	ВидДоговоров.Записать();
	Константа.ОсновнойВидДоговоров = ВидДоговоров.ТекущийЭлемент();
	
	СпрОКСМ = СоздатьОбъект("Справочник.ОКСМ");
	Если СпрОКСМ.НайтиПоКоду("643")=0 Тогда
		СпрОКСМ.Новый();
		СпрОКСМ.Код = "643";
		СпрОКСМ.Наименование = "Россия";
		СпрОКСМ.Записать();
	КонецЕсли;

	Константа.НазваниеОрганизации = "Наша фирма";
	Константа.НаименованиеПлательщикаПриПеречисленииНалогов = Константа.НазваниеОрганизации;
	Константа.ИспользоватьСписокКорректныхПроводок = Нет;
	Константа.ВсеДокументыВЖурналОпераций = Да;
	Константа.ДатаЗапретаРедактирования = '01.01.1980';
	Константа.ПорядокИсчисленияЕСН.Установить('01.01.1980', 2);
    Константа.ИспользоватьТипыЦен = Перечисление.Булево.Нет;
	Константа.ПроцентОбязательнойПродажиВалюты.Установить('01.01.1999', 75);

	Константа.СтавкаРефинансирования.Установить('24.07.1998', 60);
	Константа.СтавкаРефинансирования.Установить('10.06.1999', 55);
	Константа.СтавкаРефинансирования.Установить('24.01.2000', 45);
	Константа.СтавкаРефинансирования.Установить('07.03.2000', 38);
	Константа.СтавкаРефинансирования.Установить('21.03.2000', 33);
	Константа.СтавкаРефинансирования.Установить('10.07.2000', 28);
	Константа.СтавкаРефинансирования.Установить('04.11.2000', 25);
	Константа.СтавкаРефинансирования.Установить('09.04.2002', 23);
	Константа.СтавкаРефинансирования.Установить('07.08.2002', 21);
	Константа.СтавкаРефинансирования.Установить('17.02.2003', 18);
	Константа.СтавкаРефинансирования.Установить('21.06.2003', 16);
	Константа.СтавкаРефинансирования.Установить('15.01.2004', 14);
	Константа.СтавкаРефинансирования.Установить('15.06.2004', 13);
	Константа.СтавкаРефинансирования.Установить('26.12.2005', 12);
	Константа.СтавкаРефинансирования.Установить('26.06.2006', 11.5);
	Константа.СтавкаРефинансирования.Установить('23.10.2006', 11);
	Константа.СтавкаРефинансирования.Установить('29.01.2007', 10.5);
	Константа.СтавкаРефинансирования.Установить('19.06.2007', 10);
	Константа.СтавкаРефинансирования.Установить('04.02.2008', 10.25);
	Константа.СтавкаРефинансирования.Установить('29.04.2008', 10.5);
	Константа.СтавкаРефинансирования.Установить('10.06.2008', 10.75);
	Константа.СтавкаРефинансирования.Установить('14.07.2008', 11);
	Константа.СтавкаРефинансирования.Установить('12.11.2008', 12);
	Константа.СтавкаРефинансирования.Установить('01.12.2008', 13);
	Константа.СтавкаРефинансирования.Установить('24.04.2009', 12.5);
	Константа.СтавкаРефинансирования.Установить('14.05.2009', 12);
	Константа.СтавкаРефинансирования.Установить('05.06.2009', 11.5);
	Константа.СтавкаРефинансирования.Установить('13.07.2009', 11);
	Константа.СтавкаРефинансирования.Установить('10.08.2009', 10.75);
	Константа.СтавкаРефинансирования.Установить('15.09.2009', 10.5);
	Константа.СтавкаРефинансирования.Установить('30.09.2009', 10);
	Константа.СтавкаРефинансирования.Установить('30.10.2009', 9.5);
	Константа.СтавкаРефинансирования.Установить('25.11.2009', 9);		
	Константа.СтавкаРефинансирования.Установить('28.12.2009', 8.75);

	Константа.МетодОпределенияВыручки.Установить('01.01.1980', глПоОтгрузке);
	Константа.ОсобенностиИсчисленияНДФЛ.Установить('01.01.1980', Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом);
	
	Константа.ИнвалиднаяОрганизация.Установить('01.01.1980', Нет);
	Константа.ОрганизацияЯвляетсяПлательщикомНДС = Да;
	Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = Нет;
	Константа.РозницаОблагаетсяЕНВД.Установить('01.01.1980', Нет);
	Константа.ПересчитыватьПокупнуюЦену = Нет;
	Константа.ВалютныйУчет = Да;
	Константа.УчетЗарплатыВоВнешнейПрограмме = Нет;
	Константа.ОсновнойВариантОтпускнойЦены = Перечисление.ВариантыОтпускныхЦен.БезНалогов;
	Константа.БазаРаспределенияКосвенныхРасходов.Установить('01.01.1980', Перечисление.БазаРаспределенияКосвенныхРасходов.СуммаПрямыхЗатрат);
	Константа.БазаРаспределенияПрямыхРасходов.Установить('01.01.1980', Перечисление.БазаРаспределенияПрямыхРасходов.СуммаПрямыхЗатрат);
	Константа.КонтрольОтрицательныхОстатков = Перечисление.Булево.Да;
	Константа.МетодРасчетаСебестоимостиМатериалов.Установить('01.01.1980', Перечисление.МетодыРасчетаСебестоимости.ПоСредневзвешеннойСтоимости);
	Константа.МетодРасчетаСебестоимостиТоваров.Установить('01.01.1980', Перечисление.МетодыРасчетаСебестоимости.ПоСредневзвешеннойСтоимости);
	
	Константа.СпособВеденияНалоговогоУчета.Установить('01.01.1980', Перечисление.СпособыВеденияНалоговогоУчета.ОдновременноСБухгалтерскимУчетом);
	Константа.СпособУчетаГПиПФ.Установить('01.01.1980', Перечисление.СпособыУчетаГПиПФ.ПоФактическойСтоимости);
	Константа.УчитыватьПокупнуюСтоимостьТоваров.Установить('01.01.1980', Нет);
	Константа.РасходыПоДСнеВключаютсяВПрямыеРасходы.Установить('01.01.1980', Да);
	Константа.РаздельныйУчетТоваровОптРозница.Установить('01.01.1980', Нет);
	Константа.СпособНалоговогоУчетаГПиПФ.Установить('01.01.1980', Перечисление.СпособыНалоговогоУчетаГПиПФ.ПоПлановойСтоимости);
	
	Константа.ПрименяетсяПБУ18.Установить('01.01.2003', Да);
		
	Константа.АвтоКнигаПокупокПродаж = Да;
	
	Константа.УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС.Установить('01.01.1980', Да);
	Константа.УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС.Установить('01.01.1980', Да);
	Константа.УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Установить('01.01.1980', Да);
	Константа.УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Установить('01.01.1980', Да);

	Состояние("Загрузка списка корректных проводок");
	Попытка 
		КоррПров = СоздатьОбъект("КорректныеПроводки");
	Исключение
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки;
	КоррПров.ВыбратьКорректныеПроводки();
	Пока КоррПров.Выбрана() = 1 Цикл
		КоррПров.Удалить();
	КонецЦикла;
	
	ТаблКорректныхПроводок = СоздатьОбъект("Таблица");
	ТаблКорректныхПроводок.ИсходнаяТаблица("КорректныеПроводки");
	ТаблКорректныхПроводок.ВывестиСекцию("Строки|Колонки");
	
	ПланСчетов = ВыбранныйПланСчетов();
	СчетчикПроводок = 0;
	НомерСтроки = 1;
	Пока ПустоеЗначение(ТаблКорректныхПроводок.Область(НомерСтроки, 1).Текст) = 0 Цикл
		Если ТаблКорректныхПроводок.Область(НомерСтроки, 1).Текст = "План счетов" Тогда //Идентификатор плана счетов
			ИдентификаторПланаСчетов = ТаблКорректныхПроводок.Область(НомерСтроки, 2).Текст;
			ПланСчетов = ПланыСчетов.ЗначениеПоИдентификатору(ИдентификаторПланаСчетов);
			Если ПланСчетов.Выбран() = 0 Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
		Иначе //Корректная проводка
			СчетДт = ТаблКорректныхПроводок.Область(НомерСтроки, 1).Текст;
			СчетКт = ТаблКорректныхПроводок.Область(НомерСтроки, 2).Текст;
			Комментарий = ТаблКорректныхПроводок.Область(НомерСтроки, 3).Текст;
			
			КоррПров.Новая();
			КоррПров.СчетДт = СчетПоКоду(СчетДт, ПланСчетов);
			КоррПров.СчетКт = СчетПоКоду(СчетКт, ПланСчетов);
			КоррПров.Комментарий = Комментарий;
			КоррПров.Записать();
			
			СчетчикПроводок = СчетчикПроводок +1;
			Если СчетчикПроводок%10 = 0 Тогда
				Состояние("Загрузка корректных проводок, загружено: "+СчетчикПроводок+" проводок.");
			КонецЕсли;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;             
	
	Состояние("Заполнение справочника ""Варианты расчета налогов""");
	СпрВарНал = СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");

	СпрВарНал.Новый();
	СпрВарНал.СуммаВключаетНДС = 0;
	СпрВарНал.СуммаВключаетНП = 0;
	СпрВарНал.СтавкаНДС = глБезНалога("НДС");
	СпрВарНал.СтавкаНП = глБезНалога("НП");
	СпрВарНал.Наименование = НаименованиеВариантаРасчетаНалогов(СпрВарНал);
	СпрВарНал.Записать();
	
	СпрВарНал.Новый();
	СпрВарНал.СуммаВключаетНДС = 0;
	СпрВарНал.СуммаВключаетНП = 0;
	СпрВарНал.СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	СпрВарНал.СтавкаНП = глБезНалога("НП");
	СпрВарНал.Наименование = НаименованиеВариантаРасчетаНалогов(СпрВарНал);
	СпрВарНал.Записать();
	Константа.ОсновнойВариантРасчетаНалогов = СпрВарНал.ТекущийЭлемент();

	СпрВарНал.Новый();
	СпрВарНал.СуммаВключаетНДС = 1;
	СпрВарНал.СуммаВключаетНП = 0;
	СпрВарНал.СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	СпрВарНал.СтавкаНП = глБезНалога("НП");
	СпрВарНал.Наименование = НаименованиеВариантаРасчетаНалогов(СпрВарНал);
	СпрВарНал.Записать();
	
	СпрВарНал.Новый();
	СпрВарНал.СтавкаНП = глБезНалога("НП");
	СпрВарНал.Наименование = НаименованиеВариантаРасчетаНалогов(СпрВарНал);
	СпрВарНал.Записать();
	Константа.ОсновнойВариантРасчетаНалоговОтгрузки = СпрВарНал.ТекущийЭлемент();
	
	Состояние("Заполнение регрессивной шкалы единого социального налога");
	Константа.ИспользоватьРегрессивнуюШкалу.Установить('01.01.2001', Нет);
	Константа.ИспользоватьРегрессивнуюШкалуПФР.Установить('01.01.2001', Нет);
	
	Шкала = СоздатьОбъект("Справочник.СтавкиНалогов");
	ЕСН = глПолучитьНалог("ЕСН_ФБ");
	ФСС = глПолучитьНалог("ФСС");
	ФФОМС = глПолучитьНалог("ФФОМС");
	ТФОМС = глПолучитьНалог("ТФОМС");
	ПФР_страх = глПолучитьНалог("ПФР_страх");
	ПФР_нак = глПолучитьНалог("ПФР_нак");
	
	// ЕСН
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 1,	100000, 		 28.0,	'01.01.2001');
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 2,	300000, 		 15.8,	'01.01.2001');
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 3,	600000, 		 7.9,	'01.01.2001');
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 4,	999999999999.99, 5.0,	'01.01.2001');
	
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 4,	999999999999.99, 2.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 1,	280000,			20.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 2,	600000,			7.9,	'01.01.2005');
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 3,	999999999999.99, 2.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ЕСН, "", Шкала, 4,	999999999999.99, 2.0,	'01.01.2005');
	
	// ПФР_страх
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 1,	100000,			14.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 2,	300000,			 7.9,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 3,	600000, 		 3.95,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 1,	100000,			12.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 2,	300000,			 6.8,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 3,	600000, 		 3.39,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 4,	999999999999.99, 0.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 1,	100000,			11.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 2,	300000,			 6.21,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 3,	600000, 		 3.1,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 1,	100000,			10.0,	'01.01.2004');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 2,	300000,			 5.64,	'01.01.2004');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 3,	600000, 		 2.82,	'01.01.2004');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2004');
	
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 1,	280000,			14.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 2,	600000,			 5.5,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 1,	280000,			14.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 2,	600000,			 5.5,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "2", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 1,	280000,			10.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 2,	600000,			 3.9,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 1,	280000,			 8.0,	'01.01.2008');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 2,	600000,			 3.1,	'01.01.2008');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 3,	999999999999.99, 0.0,	'01.01.2008');
	УстановитьСтавкуЕСН(ПФР_страх, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2008');
	
	// ПФР_нак
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 1,	100000,			 0.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 2,	300000,			 0.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 3,	600000, 		 0.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 1,	100000,			 2.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 2,	300000,			 1.1,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 3,	600000,			 0.56,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 4,	999999999999.99, 0.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 1,	100000,			 3.0,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 2,	300000,			 1.69,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 3,	600000, 		 0.85,	'01.01.2002');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2002');
	
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 1,	100000,			 4.0,	'01.01.2004');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 2,	300000,			 2.26,	'01.01.2004');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 3,	600000, 		 1.13,	'01.01.2004');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2004');
	
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 1,	280000,			 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 2,	600000,			 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 1,	280000,			 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 2,	600000,			 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "2", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 1,	280000,			 4.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 2,	600000,			 1.6,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	  
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 1,	280000,			 6.0,	'01.01.2008');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 2,	600000,			 2.4,	'01.01.2008');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 3,	999999999999.99, 0.0,	'01.01.2008');
	УстановитьСтавкуЕСН(ПФР_нак, "3", Шкала, 4,	999999999999.99, 0.0,	'01.01.2008');
	
	// ФСС
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 1,	100000,			 4.0,	'01.01.2001');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 2,	300000,			 2.2,	'01.01.2001');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 3,	600000, 		 1.1,	'01.01.2001');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2001');
	
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 1,	280000,			 3.2,	'01.01.2005');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 2,	600000,			 1.1,	'01.01.2005');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 1,	280000, 		 2.9,	'01.01.2006');
	УстановитьСтавкуЕСН(ФСС, "", Шкала, 2,	600000,	 		 1.0,	'01.01.2006');
	
	// ФФОМС
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 1,	100000,			 0.2,	'01.01.2001');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 2,	300000,			 0.1,	'01.01.2001');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 3,	600000, 		 0.1,	'01.01.2001');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2001');
	
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 1,	280000,			 0.8,	'01.01.2005');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 2,	600000,			 0.5,	'01.01.2005');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');
	
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 1,	280000,	 		 1.1,	'01.01.2006');
	УстановитьСтавкуЕСН(ФФОМС, "", Шкала, 2,	600000,	 		 0.6,	'01.01.2006');
	
	// ТФОМС
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 1,	100000,			 3.4,	'01.01.2001');
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 2,	300000,			 1.9,	'01.01.2001');
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 3,	600000, 		 0.9,	'01.01.2001');
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2001');
	
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 1,	280000,			 2.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 2,	600000,			 0.5,	'01.01.2005');
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 3,	999999999999.99, 0.0,	'01.01.2005');
	УстановитьСтавкуЕСН(ТФОМС, "", Шкала, 4,	999999999999.99, 0.0,	'01.01.2005');

	
	Состояние("Заполнение справочника Движения денежных средств");
	ВидыДвижений = СоздатьОбъект("Справочник.ДвиженияДенежныхСредств");
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Оплата поставщику";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.НазначитьТип("Субконто1", "Справочник.Контрагенты");
	ВидыДвижений.НазначитьТип("Субконто2", "Справочник.Договоры");
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Поступления от покупателей";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.НазначитьТип("Субконто1", "Справочник.Контрагенты");
	ВидыДвижений.НазначитьТип("Субконто2", "Справочник.Договоры");
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Выплата зарплаты";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ОплатаТруда;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Отчисления на социальные нужды";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПлатежиВСоциальныеФонды;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Выдача под авансовый отчет";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыданныеПодотчетныеСуммы;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Платежи в бюджет";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПлатежиВБюджет;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Получение наличных из банка";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПолученоИзБанкаНаличными;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Сдача наличных в банк";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.СданоВБанкНаличными;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Прочие выплаты";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПрочиеВыплатыИПеречисления;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();
	
	ВидыДвижений.Новый();
	ВидыДвижений.Наименование = "Прочие поступления";
	ВидыДвижений.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПрочиеПоступления;
	ВидыДвижений.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая;
	ВидыДвижений.Записать();

	Константа.ДиректКостинг.Установить('01.01.1980', Да);
	Константа.ДиректКостингБазаРаспределения.Установить('01.01.1980', Перечисление.ДиректКостингБазаРаспределения.ВыручкаОтПродаж);
	Константа.ДиректКостингВидыПродукции.Установить('01.01.1980', Перечисление.ДиректКостингВидыПродукции.ПоВсемВидамНоменклатуры);
	СписокСчетов = """60.6"",""60.7"",""62.6"",""62.7"",""62.8"",""66.22"",""66.44"",""67.22"",""67.44"",""76.6"",""ВР.6""";
	Константа.СчетаПереоцениваемыеВОсобомПорядке.Установить('01.01.2002', СписокСчетов);
	
	// загрузка справочника Документы, удостоверяющие личность
	СпрДокументы = СоздатьОбъект("Справочник.ДокументыУдостоверяющиеЛичность");
	Если СпрДокументы.ВыбратьЭлементы()=0 Тогда
		УстановитьДокументУдЛичность(СпрДокументы, "01", "паспорт",			"Паспорт гражданина СССР");
		УстановитьДокументУдЛичность(СпрДокументы, "02", "згпаспорт",			"Загранпаспорт гр. СССР");
		УстановитьДокументУдЛичность(СпрДокументы, "03", "свид о рожд",		"Свидетельство о рождении");
		УстановитьДокументУдЛичность(СпрДокументы, "04", "удост офицера",		"Удостоверение личности офицера");
		УстановитьДокументУдЛичность(СпрДокументы, "05", "справка об осв",	"Справка об освобождении из места лишения свободы ");
		УстановитьДокументУдЛичность(СпрДокументы, "06", "паспорт морфлт",	"Паспорт Минморфлота");
		УстановитьДокументУдЛичность(СпрДокументы, "07", "военный билет",		"Военный билет солдата (матроса, сержанта, старшины)");
		УстановитьДокументУдЛичность(СпрДокументы, "09", "диппаспорт рф",		"Дипломатический паспорт гражданина РФ");
		УстановитьДокументУдЛичность(СпрДокументы, "10", "инпаспорт",			"Иностранный паспорт");
		УстановитьДокументУдЛичность(СпрДокументы, "11", "свид беженца",		"Свидетельство о регистрации ходатайства о признании иммигранта беженцем");
		УстановитьДокументУдЛичность(СпрДокументы, "12", "вид на житель",		"Вид на жительство");
		УстановитьДокументУдЛичность(СпрДокументы, "13", "удост беженца",		"Удостоверение беженца в РФ");
		УстановитьДокументУдЛичность(СпрДокументы, "14", "врем удост",		"Временное удостоверение личности гражданина РФ");
		УстановитьДокументУдЛичность(СпрДокументы, "21", "паспорт россии",	"Паспорт гражданина России");
		УстановитьДокументУдЛичность(СпрДокументы, "22", "згпаспорт рф",		"Загранпаспорт гражданина РФ");
		УстановитьДокументУдЛичность(СпрДокументы, "26", "паспорт моряка",	"Паспорт моряка");
		УстановитьДокументУдЛичность(СпрДокументы, "27", "воен билет оз",		"Военный билет офицера запаса");
		УстановитьДокументУдЛичность(СпрДокументы, "91", "прочее",			"Иные документы, выдаваемые органами МВД");
	КонецЕсли;
	
	Состояние("Заполнение справочника ""Виды доходов""");
	// установим справочник Виды вычетов
	СпрВидыВычетов  = СоздатьОбъект("Справочник.ВидыВычетов");
	Если СпрВидыВычетов.ВыбратьЭлементы()=0 Тогда
		УстановитьВидВычета("101","1000 руб. на каждого ребенка, пп.4 п.1 ст.218 НК");
		УстановитьВидВычета("102","2000 руб. на ребенка одинокому родителю, пп.4 п.1 ст.218 НК");
		УстановитьВидВычета("103","400 руб. на налогоплательщика, пп.3 п.1 ст.218 НК");
		УстановитьВидВычета("104","500 рублей на налогоплательщика, пп.2 п.1 ст.218 НК");
		УстановитьВидВычета("105","3 000 рублей на налогоплательщика, пп.1 п.1 ст.218 НК");
		УстановитьВидВычета("106","2000 руб. на ребенка-инвалида, пп.4 п.1 ст.218 НК");
		УстановитьВидВычета("107","4000 руб. на ребенка-инвалида одинокому родителю, пп.4 п.1 ст.218 НК");
		УстановитьВидВычета("307","Совокупная сумма фактически произведенных расходов на приобр. ценных бумаг");
		УстановитьВидВычета("311","В сумме, израсходованной на новое строительство, пп.2 п.1 ст.220 НК");
		УстановитьВидВычета("312","Сумма расходов по погашению процентов по ипотечным кредитам, пп.2 п.1 ст.220 НК");
		УстановитьВидВычета("314","Сумма расходов при уступке прав требования по договору участия в долевом стр-ве");
		УстановитьВидВычета("315","Сумма фактически произведенных расходов на приобретение доли в уст. капитале");
		УстановитьВидВычета("316","Суммы, полученные от продажи ценных бумаг, не превышающие 125 000 руб.");
		УстановитьВидВычета("317","Суммы, полученные от продажи ценных бумаг, находившихся в собств. 3 года и более");
		УстановитьВидВычета("403","Расходы по договорам гражданско-правового характера, пп.2 ст.221 НК");
		УстановитьВидВычета("404","Фактически произведенные расходы по авторским,пп.3 ст.221 НК");
		УстановитьВидВычета("405","В пределах норматива затрат по авторским, пп.3 ст.221 НК");
		УстановитьВидВычета("501","Вычет из стоимости подарков");
		УстановитьВидВычета("502","Вычет из стоимости призов на соревнованиях");
		УстановитьВидВычета("503","Вычет из стоимости (суммы) материальной помощи");
		УстановитьВидВычета("504","Вычет из суммы возмещения (оплаты) стоимости медикаментов");
		УстановитьВидВычета("505","Вычет из стоимости выигрышей и призов в рекламных акциях");                 		
		УстановитьВидВычета("506","Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов");
		УстановитьВидВычета("507","Вычет из суммы помощи полученных ветеранами ВОВ, п.33 ст.217 НК");          
		УстановитьВидВычета("508","Вычет из суммы материальной помощи, при рождении (усыновлении) ребенка");
		УстановитьВидВычета("601","Сумма, уменьшающая налоговую базу по доходам полученным в виде дивидендов");
		УстановитьВидВычета("620","Иные суммы, уменьшающие налоговую базу");
	КонецЕсли;
	
	ОбработатьСтандартныеВычеты(); 
	
	ДатаСведений2001 = '01.01.2001';
	ДатаСведений2005 = '01.01.2005';
	ДатаСведений2008 = '01.01.2008';
	ДатаСведений2009 = '01.01.2009';
	
	// размеры и пределы вычетов 2001 г.
	УстановитьЗначениеВычета("103",	400,	20000,	ДатаСведений2001);
	УстановитьЗначениеВычета("104",	500,		,	ДатаСведений2001);
	УстановитьЗначениеВычета("105",	3000,		,	ДатаСведений2001);
	УстановитьЗначениеВычета("108\101",	300,20000,	ДатаСведений2001);
	УстановитьЗначениеВычета("110\102",	600,20000,	ДатаСведений2001);
	УстановитьЗначениеВычета("501",		2000,	,	ДатаСведений2001);
	УстановитьЗначениеВычета("502",		2000,	,	ДатаСведений2001);
	УстановитьЗначениеВычета("503",		2000,	,	ДатаСведений2001);
	УстановитьЗначениеВычета("504",		2000,	,	ДатаСведений2001);
	УстановитьЗначениеВычета("505",		2000,	,	ДатаСведений2001);
	// размеры и пределы вычетов 2005 г.
	УстановитьЗначениеВычета("108\101",	600,	40000	, ДатаСведений2005);
	УстановитьЗначениеВычета("109\106",	1200,	40000	, ДатаСведений2005);
	УстановитьЗначениеВычета("110\102",	1200,	40000	, ДатаСведений2005);
	УстановитьЗначениеВычета("112\107",	2400,	400000	, ДатаСведений2005);
	УстановитьЗначениеВычета("313\311",	1000000,		, ДатаСведений2005); 
	УстановитьЗначениеВычета("505",		2000,			, ДатаСведений2005); 
	// размеры и пределы вычетов 2008 г.
	УстановитьЗначениеВычета("508",		50000,		,ДатаСведений2008); 
	УстановитьЗначениеВычета("313\311",	2000000,	,ДатаСведений2008);
	// размеры и пределы вычетов 2009 г.
	УстановитьЗначениеВычета("103",		400,	40000,	ДатаСведений2009);
	УстановитьЗначениеВычета("108\101",	1000,	280000,	ДатаСведений2009);
	УстановитьЗначениеВычета("109\106",	2000,	280000,	ДатаСведений2009);
	УстановитьЗначениеВычета("110\102",	2000,	280000,	ДатаСведений2009);
	УстановитьЗначениеВычета("111",		2000,	280000,	ДатаСведений2009);
	УстановитьЗначениеВычета("112\107",	4000,	280000,	ДатаСведений2009);
	УстановитьЗначениеВычета("113",		4000,	280000,	ДатаСведений2009);
	УстановитьЗначениеВычета("103",		400,	40000,	ДатаСведений2009);
	УстановитьЗначениеВычета("501",		4000,		,	ДатаСведений2009);
	УстановитьЗначениеВычета("502",		4000,		,	ДатаСведений2009);
	УстановитьЗначениеВычета("503",		4000,		,	ДатаСведений2009);
	УстановитьЗначениеВычета("504",		4000,		,	ДатаСведений2009);
	УстановитьЗначениеВычета("505",		4000,		,	ДатаСведений2009);
	УстановитьЗначениеВычета("506",		4000,		,	ДатаСведений2009);
	УстановитьЗначениеВычета("507",		10000,		,	ДатаСведений2009);

	
	// загрузка справочника Виды доходов
	СпрВидыДоходов  = СоздатьОбъект("Справочник.ВидыДоходов");
	Если СпрВидыДоходов.ВыбратьЭлементы()=0 Тогда
		УстановитьВидДохода("1010","Дивиденды, определяемые с учетом ст.214 НК",);
		УстановитьВидДохода("1100","Сумма процентов по облигациям и ценным бумагам, включая векселя",);
		УстановитьВидДохода("1200","Страховые выплаты при наступлении страхового случая (облагаемые)",);
		УстановитьВидДохода("1210","Разница между страховой выплатой и суммой взносов, п.2 ст.213 НК",);
		УстановитьВидДохода("1220","Выплата при досрочном расторжении дог. страхования жизни,п.3 ст.213 НК",);
		УстановитьВидДохода("1230","Страховые (пенсионные) взносы, внесенные за физ.лиц, п.5 ст.213 НК",);
		УстановитьВидДохода("1300","Доходы от использования прав на объекты интеллектуальной собственности",);
		УстановитьВидДохода("1400","Доходы от сдачи в аренду и иного исп-ия имущества,кроме трансп.средств",);
		УстановитьВидДохода("1510","Доходы от реализации недвижимого имущества",);
		УстановитьВидДохода("1520","Доходы от реализации иного имущества (кроме ценных бумаг)",);
		УстановитьВидДохода("1530","Доходы от реализации акций или иных ценных бумаг",);
		УстановитьВидДохода("1540","Доходы от реализации долей участия в уставном капитале организаций",);
		УстановитьВидДохода("2000","Вознаграждение за труд (заработная плата, денежное содержание и пр.)",);
		УстановитьВидДохода("2201","Авторские вознаграждения за создание литературных произведений",);
		УстановитьВидДохода("2202","Авторские вознаграждения за создание художественно-графических произв.",);
		УстановитьВидДохода("2203","Авторские вознагр. за создание скульптур, декоративно-прикладн иск.",);
		УстановитьВидДохода("2204","Авторские вознаграждения за создание аудиовизуальных произведений",);
		УстановитьВидДохода("2205","Авторские вознаграждения за создание музыкально-сценических произв.",);
		УстановитьВидДохода("2206","Авторские вознаграждения за создание других музыкальных произведений",);
		УстановитьВидДохода("2207","Авторские вознагр. за исполнение произведений литературы, искусства",);
		УстановитьВидДохода("2208","Авторские вознаграждения за создание произведений науки",);
		УстановитьВидДохода("2209","Авторские вознаграждения за открытия, изобретения промышленные образцы",);
		УстановитьВидДохода("2299","Иные авторские вознаграждения",);
		УстановитьВидДохода("2300","Пенсии, пособия и пр., кроме указанных в пп.1,2,11 ст.217 и п.1 ст.213",);
		УстановитьВидДохода("2400","Доходы от исп-ия трансп.средств, средств связи, компьют-ых сетей и пр.",);
		УстановитьВидДохода("2510","Суммы оплаты за налогоплательщика товаров(работ,услуг), в т.ч. питания",);
		УстановитьВидДохода("2520","Стоимость получ. товаров, выполн. работ(услуг) на безвозмездной основе",);
		УстановитьВидДохода("2530","Суммы оплаты труда в натуральной форме в виде товаров (работ, услуг)",);
		УстановитьВидДохода("2610","Мат.выгода от экономии на %% за пользов. заемными сред-ми, п.2 ст.212",);
		УстановитьВидДохода("2630","Мат.выгода от приобретения товаров (работ, услуг), согл. п.3 ст.212 НК",);
		УстановитьВидДохода("2640","Мат.выгода от приобретения ценных бумаг, опр. согласно п.4 ст.212 НК",);
		УстановитьВидДохода("2710","Материальная помощь, не подпадающая под п.8 и п.28 ст.217 НК",);
		УстановитьВидДохода("2720","Стоимость подарков, определяемая согласно п.28 ст.217 НК","501");
		УстановитьВидДохода("2730","Стоимость призов на соревнованиях, опр. согласно п.28 ст.217 НК","502");
		УстановитьВидДохода("2740","Стоимость выигрышей и призов,получаемых в мероприятиях в целях рекламы","505");
		УстановитьВидДохода("2750","Стоимость призов на других соревнованиях, не в целях рекламы",);
		УстановитьВидДохода("2760","Материальная помощь, определяемая согласно п.28 ст.217 НК","503");
		УстановитьВидДохода("2770","Суммы возмещения работникам стоимости медикаментов, п.28 ст.217 НК","504");
		УстановитьВидДохода("2780","Суммы возмещения стоимости медикаментов, не подпад. под п.28 ст.217 НК",);
		УстановитьВидДохода("2790","Сумма помощи (в денежной и натуральной формах) полученных ветеранами ВОВ, п.33 ст.217 НК РФ","507",);
		УстановитьВидДохода("2800","Суммы, полученные в погашение вексельных обязательств",);
		УстановитьВидДохода("2900","Доходы в виде курсовой разницы от операций с валютой",);
		УстановитьВидДохода("3010","Выигрыши в лотереях, тотализаторах и др. основанных на риске играх",);
		УстановитьВидДохода("3020","Сумма %% дохода по вкладам в банках свыше сумм согласно п.27 ст.217 НК",);
		УстановитьВидДохода("3100","Иные доходы, включаемые в налоговую базу источником выплаты дохода",);
		УстановитьВидДохода("4000","Доходы от предпринимательской деятельности",);
		УстановитьВидДохода("4600","Доходы частных нотариусов и других лиц, занимающихся частной практикой",);
		УстановитьВидДохода("4800","Иные доходы в нарушение порядка, устан. п.3,8-13,18,26,30,31 ст.217 НК",);
		УстановитьВидДохода("4900","Доходы, по кот. предоставляется льгота по законам субъектов РФ",);
		УстановитьВидДохода("0000","Доходы, освобождаемые от налогообложения в соответствии со ст.217 НК РФ",);
	КонецЕсли;                     
	// виды доходов для 2005 года
	УстановитьВидДоходаНДФЛ(1010,"Дивиденды",601,"Дивиденды"); 
	
	ПолноеНаименование = "Проценты (за исключением процентов по облигациям с ипотечным покрытием, эмитированным до 01.01.2007)";
	УстановитьВидДоходаНДФЛ(1011,"Проценты (за исключением процентов по облигациям)", ,ПолноеНаименование);
		
	ПолноеНаименование = "Не применяется. Сумма процентов по облигациям и ценным бумагам, включая векселя";
	УстановитьВидДоходаНДФЛ(1100,"Сумма процентов по облигациям и ценным бумагам, включая векселя (не применяется)",,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы учредителей доверительного управления ипотечным покрытием, полученные на основании приобретения ипотечных сертификатов участия, выданных управляющим ипотечным покрытием до 01.01.2007";
	УстановитьВидДоходаНДФЛ(1120,"Доходы учредителей доверительного управления ипотечным покрытием... до 01.01.2007", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные в виде страховых выплат по договорам страхования";
	УстановитьВидДоходаНДФЛ(1200,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные в виде страховых выплат по договорам страхования в виде оплаты стоимости санаторно-курортных путевок""";
	УстановитьВидДоходаНДФЛ(1201,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные в виде страховых выплат по договорам добровольного страхования жизни (за исключением добровольного пенсионного страхования)";
	УстановитьВидДоходаНДФЛ(1202,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные в виде страховых выплат по договорам добровольного имущественного страхования (включая страхование гражданской ответственности)";
	УстановитьВидДоходаНДФЛ(1203,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные в виде страховых взносов по договорам страхования";
	УстановитьВидДоходаНДФЛ(1211,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде денежных (выкупных) сумм, выплачиваемых по договорам страхования, подлежащих в соответствии с правилами страхования и условиями договоров выплате при досрочном расторжении договоров страхования";
	УстановитьВидДоходаНДФЛ(1212,"Доходы в виде денежных (выкупных) сумм, выплачиваемых по договорам страхования", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде денежных (выкупных) сумм при расторжении договора добр. пенс. страхования за вычетом сумм страховых взносов, уплаченных по договору";
	УстановитьВидДоходаНДФЛ(1213,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде денежных (выкупных) сумм при расторжении договора добровольного пенс. страхования в части сумм страховых взносов, уплаченных по договору";
	УстановитьВидДоходаНДФЛ(1214,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде денежных (выкупных) сумм, выплачиваемые по договорам негосударственного пенсионного обеспечения";
	УстановитьВидДоходаНДФЛ(1220,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде денежных (выкупных) сумм при расторжении договора негосударственного пенсионного обеспечения в части сумм платежей (взносов) по договору";
	УстановитьВидДоходаНДФЛ(1230,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Пенсии, выплачиваемые по договорам негосударственного пенсионного обеспечения";
	УстановитьВидДоходаНДФЛ(1240,ПолноеНаименование, ,ПолноеНаименование); 
	
	ПолноеНаименование = "Доходы, полученные налогоплательщиком от использования в Российской Федерации авторских или иных смежных прав (кроме авторских вознаграждений)";
	УстановитьВидДоходаНДФЛ(1300,"Доходы, от использования в РФ авторских или иных смежных прав (кроме авторских вознаграждений)", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от отчуждения авторских или иных смежных прав";
	УстановитьВидДоходаНДФЛ(1301,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от предоставления в аренду, и доходы, полученные от иного использования имущества (кроме аналогичных доходов от сдачи в аренду любых транспортных средств и средств связи, компьютерных сетей)";
	УстановитьВидДоходаНДФЛ(1400,"Доходы от сдачи в аренду и иного исп-ия имущества,кроме трансп.средств", ,ПолноеНаименование); 
	
	ПолноеНаименование = "Доходы, полученные от продажи жилых домов, квартир, включая приватизированные жилые помещения, дач, садовых домиков или земельных участков и долей в указанном имуществе";
	УстановитьВидДоходаНДФЛ(1510,"Доходы от реализации недвижимого имущества", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от продажи имущества (кроме жилых домов, квартир, включая приватизированные жилые помещения, дач, садовых домиков, земельных участков и долей в указанном имуществе, ценных бумаг)";
	УстановитьВидДоходаНДФЛ(1520,"Доходы от реализации иного имущества (кроме ценных бумаг)", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от реализации ценных бумаг";
	УстановитьВидДоходаНДФЛ(1530,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные по операциям купли-продажи ценных бумаг, не обращающихся на организованном рынке ценных бумаг";
	УстановитьВидДоходаНДФЛ(1531,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные по операциям с финансовыми инструментами срочных сделок, базисным активом по которым являются ценные бумаги";
	УстановитьВидДоходаНДФЛ(1532,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от продажи и погашения инвестиционных паев паевых инвестиционных фондов";
	УстановитьВидДоходаНДФЛ(1533,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доход полученные по операциям купли-продажи ценных бумаг, не обращающихся на организованном рынке ценных бумаг, но отвечавших его требованиям";
	УстановитьВидДоходаНДФЛ(1536,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные налогоплательщиком от реализации долей участия в уставном капитале организаций";
	УстановитьВидДоходаНДФЛ(1540,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные налогоплательщиком при уступке прав требования по договору участия в долевом строительстве (договору инвестирования долевого строительства или по другому договору, связанному с долевым строительством)";
	УстановитьВидДоходаНДФЛ(1550,"Доходы, полученные при уступке прав треб. по дог. участия в дол. стр-ве", 314,ПолноеНаименование);
	
	ПолноеНаименование = "Вознаграждение, получаемое налогоплательщиком за выполнение трудовых или иных обязанностей; денежное содержание и иные налогооблагаемые выплаты военнослужащим и приравненным к ним категориям физических лиц (кроме выплат по договорам гражданско-правового характера и авторских вознаграждений)";
	УстановитьВидДоходаНДФЛ(2000,"Вознаграждение за труд (заработная плата, денежное содержание и пр.)", ,ПолноеНаименование); 
	
	ПолноеНаименование = "Вознаграждение директоров и иные аналогичные выплаты, получаемые членами органа управления организации (совета директоров или иного подобного органа)";
	УстановитьВидДоходаНДФЛ(2001,"Вознаграждение директоров (совета директоров или иного подобного органа)", ,ПолноеНаименование);
	
	ПолноеНаименование = "Выплаты по договорам гражданско-правового характера (за исключением авторских вознаграждений)";
	УстановитьВидДоходаНДФЛ(2010,"Выплаты по договорам гражданско-правового характера (за исключ. авторских)", ,ПолноеНаименование);
	
	ПолноеНаименование = "Суммы отпускных выплат";
	УстановитьВидДоходаНДФЛ(2012,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание литературных произведений, в том числе для театра, кино, эстрады и цирка";
	УстановитьВидДоходаНДФЛ(2201,"Авторские вознаграждения за создание литературных произведений", ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание художественно-графических произведений, фоторабот для печати, произведений архитектуры и дизайна";
	УстановитьВидДоходаНДФЛ(2202,"Авторские вознаграждения за создание художественно-графических произв.", ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание произведений скульптуры, монументально декоративной живописи, декоративно прикладного и оформительского искусства, станковой живописи, театрально- и кинодекорационного искусства и графики, выполненных в различной технике";
	УстановитьВидДоходаНДФЛ(2203,"Авторские вознагр. за создание скульптур, декоративно-прикладн иск.", ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание аудиовизуальных произведений (видео-, теле- и кинофильмов)";
	УстановитьВидДоходаНДФЛ(2204,"Авторские вознаграждения за создание аудиовизуальных произведений", ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание музыкальных произведений: музыкально-сценических произведений (опер, балетов, музыкальных комедий), симфонических, хоровых, камерных произведений, произведений для духового оркестра, оригинальной музыки для кино-, теле- и видеофильмов и театральных постановок";
	УстановитьВидДоходаНДФЛ(2205,"Авторские вознаграждения за создание музыкально-сценических произв.", ,ПолноеНаименование); 
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание других музыкальных произведений, в том числе подготовленных к опубликованию";
	УстановитьВидДоходаНДФЛ(2206,"Авторские вознаграждения за создание других музыкальных произведений", ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за исполнение произведений литературы и искусства";
	УстановитьВидДоходаНДФЛ(2207,"Авторские вознагр. за исполнение произведений литературы, искусства", ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения (вознаграждения) за создание научных трудов и разработок";
	УстановитьВидДоходаНДФЛ(2208,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Авторские вознаграждения за открытия, изобретения, промышленные образцы";
	УстановитьВидДоходаНДФЛ(2209,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Вознаграждение, выплачиваемое наследникам (правопреемникам) авторов произведений науки, литературы, искусства, открытий, изобретений и пром. образцов";
	УстановитьВидДоходаНДФЛ(2210,ПолноеНаименование, ,ПолноеНаименование); 
	
	ПолноеНаименование = "Доходы в денежной и натуральной формах, получаемые в порядке дарения";
	УстановитьВидДоходаНДФЛ(2220,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Пособия по временной нетрудоспособности";
	УстановитьВидДоходаНДФЛ(2300,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от использования любых транспортных средств, включая морские, речные, воздушные суда и автомобильные транспортные средства, в связи с перевозками, а также штрафы и иные санкции за простой (задержку) таких транспортных средств в пунктах погрузки (выгрузки) в Российской Федерации;";
	ПолноеНаименование = ПолноеНаименование + " доходы, полученные от использования трубопроводов, линий электропередачи (ЛЭП), линий оптико-волоконной и (или) беспроводной связи, иных средств связи, включая компьютерные сети, на территории Российской Федерации";
	УстановитьВидДоходаНДФЛ(2400,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Оплата (полностью или частично) за налогоплательщика организациями или индивидуальными предпринимателями товаров (работ, услуг) или имущественных прав, в том числе коммунальных услуг, питания, отдыха, обучения в интересах налогоплательщика";
	УстановитьВидДоходаНДФЛ(2510,"Суммы оплаты за налогоплательщика товаров(работ,услуг), в т.ч. питания", ,ПолноеНаименование);
	
	ПолноеНаименование = "Стоимость товаров, работ, услуг, полученных на безвозмездной основе";
	УстановитьВидДоходаНДФЛ(2520,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Оплата труда в натуральной форме";
	УстановитьВидДоходаНДФЛ(2530,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная выгода, полученная от экономии на процентах за пользование заемными (кредитными) средствами (за исключением доходов в виде материальной выгоды, полученной от экономии на процентах за пользование налогоплательщиком заемными (кредитными) средствами, израсходованными на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них)";
	УстановитьВидДоходаНДФЛ(2610,"Мат.выгода от экономии на %% за пользов. заемными сред-ми", ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная выгода, полученная от экономии на процентах за пользование целевыми займами (кредитами), фактически израсходованными на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них, на основании документов, подтверждающих целевое использование таких средств";
	УстановитьВидДоходаНДФЛ(2620,"Мат.выгода от экономии на %% за пользов. целевыми займами (кредитами)", ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная выгода, полученная от приобретения товаров (работ, услуг) в соответствии с гражданско-правовым договором у физических лиц, организаций и индивидуальных предпринимателей, являющихся взаимозависимыми по отношению к налогоплательщику";
	УстановитьВидДоходаНДФЛ(2630,"Мат.выгода от приобретения товаров (работ, услуг)", ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная выгода, полученная от приобретения ценных бумаг";
	УстановитьВидДоходаНДФЛ(2640,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная помощь (за исключением материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту, и материальной помощи, оказываемой инвалидам общественными организациями инвалидов)";
	УстановитьВидДоходаНДФЛ(2710,"Материальная помощь не работникам",506 ,ПолноеНаименование); 
	
	ПолноеНаименование = "Стоимость подарков";
	УстановитьВидДоходаНДФЛ(2720,ПолноеНаименование,501 ,ПолноеНаименование);
	
	ПолноеНаименование = "Стоимость призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, законодательных (представительных) органов государственной власти или представительных органов местного самоуправления";
	УстановитьВидДоходаНДФЛ(2730,"Стоимость призов в денежной и натуральной формах",502 ,ПолноеНаименование);
	
	ПолноеНаименование = "Стоимость выигрышей и призов, получаемых в проводимых конкурсах, играх и других мероприятиях в целях рекламы товаров, работ и услуг";
	УстановитьВидДоходаНДФЛ(2740,"Стоимость выигрышей и призов, получаемых в проводимых конкурсах",505 ,ПолноеНаименование);
	
	ПолноеНаименование = "Стоимость призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых не в соответствии с решениями Правительства Российской Федерации, законодательных (представительных) органов государственной власти или представительных органов местного самоуправления и не в целях рекламы товаров (работ и услуг)";
	УстановитьВидДоходаНДФЛ(2750,"Стоимость призов на других соревнованиях, не в целях рекламы", ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная помощь, оказываемая работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту";
	УстановитьВидДоходаНДФЛ(2760,"Материальная помощь, оказываемая работодателями своим работникам",503 ,ПолноеНаименование);
	
	ПолноеНаименование = "Материальная помощь, оказываемая инвалидам общественными организациями инвалидов";
	УстановитьВидДоходаНДФЛ(2761,ПолноеНаименование, ,ПолноеНаименование); 
	
    ПолноеНаименование = "Материальная помощь, оказываемая работодателями своим работникам при рождении (усыновлении) ребенка";
	УстановитьВидДоходаНДФЛ(2762,ПолноеНаименование, 508,ПолноеНаименование); 
	
	ПолноеНаименование = "Возмещение (оплата) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом";
	УстановитьВидДоходаНДФЛ(2770,"Суммы возмещения работникам стоимости медикаментов",504 ,ПолноеНаименование);
	
	ПолноеНаименование = "Возмещение (оплата) стоимости приобретенных налогоплательщиком (для налогоплательщика) медикаментов, назначенных им лечащим врачом, в иных случаях, не подпадающих под действие п. 28 ст. 217 Налогового кодекса Российской Федерации";
	УстановитьВидДоходаНДФЛ(2780,"Суммы возмещения стоимости медикаментов, не подпад. под п.28 ст.217 НК", ,ПолноеНаименование);
	
	ПолноеНаименование = "Сумма помощи (в денежной и натуральной формах), а также стоимость подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, ";
	ПолноеНаименование = ПолноеНаименование + "вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто, а также бывшими несовершеннолетними узниками концлагерей, гетто и других мест принудительного содержания, созданных фашистами и их союзниками в период Второй мировой войны";
	УстановитьВидДоходаНДФЛ(2790,"Сумма помощи (в денежной и натуральной формах) полученных ветеранами ВОВ",507 ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы, полученные от погашения вексельных обязательств";
	УстановитьВидДоходаНДФЛ(2800,ПолноеНаименование, ,ПолноеНаименование); 
	
	ПолноеНаименование = "Доходы, полученные от операций с иностранной валютой";
	УстановитьВидДоходаНДФЛ(2900,ПолноеНаименование, ,ПолноеНаименование);
	
	ПолноеНаименование = "Выигрыши, выплачиваемые организаторами лотерей, тотализаторов и других основанных на риске игр (в том числе с использованием игровых автоматов)";
	УстановитьВидДоходаНДФЛ(3010,"Выигрыши, выплачиваемые организаторами лотерей", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде процентов, получаемых по вкладам в банках в части превышения суммы процентов, начисленной в соответствии с условиями договора, над суммой процентов, рассчитанной по рублевым вкладам исходя из ставки рефинансирования Центрального банка Российской Федерации, действующей в течение периода, за который начислены указанные проценты (за исключением доходов, указанных в пункте 27 статьи 217 НК РФ), а по вкладам в иностранной валюте исходя из 9 % годовых";
	УстановитьВидДоходаНДФЛ(3020,"Сумма %% дохода по вкладам в банках свыше ставки рефинансирования", ,ПолноеНаименование);
	
	ПолноеНаименование = "Доходы в виде процентов, получаемые по срочным пенсионным вкладам в банках, внесенным на срок не менее шести месяцев";
	УстановитьВидДоходаНДФЛ(3021,"Доходы в виде процентов, получаемые по срочным пенсионным вкладам в банках", ,ПолноеНаименование); 
	
	ПолноеНаименование = "Иные доходы";
	УстановитьВидДоходаНДФЛ(4800,ПолноеНаименование, ,ПолноеНаименование);
	
	ВидыДоходов = СоздатьОбъект("Справочник.ВидыДоходов");
	СпрНачисления = СоздатьОбъект("Справочник.ВидыНачислений");
	Если СпрНачисления.ВыбратьЭлементы(0) = 0 Тогда
		СпрНачисления.Новый();
		Если ВидыДоходов.НайтиПоКоду("2000") = 1 Тогда
			СпрНачисления.ВидДохода = ВидыДоходов.ТекущийЭлемент();
			СпрНачисления.Код = "2000";
		КонецЕсли;
		
		СпрНачисления.Наименование = "Заработная плата";
		СпрНачисления.ЕСН_ФБ = 1;
		СпрНачисления.ЕСН_ФСС = 1;
		СпрНачисления.ЕСН_ФОМС = 1;
		СпрНачисления.ПФР = 1;
		СпрНачисления.ФСС_НС = 1;
		СпрНачисления.Записать();
	КонецЕсли;
	
	Константа.ВестиУчетРасчетовУЕ = Перечисление.Булево.Да;
	Константа.ОтражатьСуммовуюРазницуПриЗачетеАванса = Перечисление.Булево.Нет;  
	
	Константа.РаздельныйУчетМатериаловСкладПереработка.Установить('01.01.1980',Да);  
	Константа.РассчитыватьВНалоговомУчетеСреднююСтоимостьОтгруженныхТоваровВРазрезеДоговоров.Установить('01.01.1980',Да); 
	Константа.СпособБухгалтерскогоУчетаСуммовыхРазницВСтоимостиМПЗ.Установить('01.01.1980',Перечисление.СпособыБухгалтерскогоУчетаСуммовыхРазницВСтоимостиМПЗ.ВнереализационныеДоходыИРасходы); 
	Константа.НалоговыйПериодПоНДС.Установить('01.01.1980',Перечисление.НалоговыеПериодыПоНДС.Квартал);  
	Константа.МетодРаспределенияКосвенныхРасходовПоВидамДеятельности.Установить('01.01.1980',Перечисление.МетодыРаспределенияКосвенныхРасходовПоВидамДеятельности.НарастающимИтогомСНачалаГода);
	Константа.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности.Установить('01.01.1980',Перечисление.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализацииИВнереализационные);

	Константа.ВариантУчетаРасходовПоАмортизационнойПремии.Установить('01.01.1980',Перечисление.ВариантыУчетаРасходовПоАмортизационнойПремии.ВСоставеКосвенныхРасходов);  		
	Константа.ОтражатьПоложительныеСуммовыеРазницыВДопЛисте.Установить('01.01.1980', Нет);
	Константа.ОтражатьОтрицательныеСуммовыеРазницыВДопЛисте.Установить('01.01.1980', Да); 
	
	СписокСчетов = """60.7"",""62.7"",""62.8"",""66.22"",""66.44"",""67.22"",""67.44"",""ВР.6"",""УЕ.60"",""УЕ.62""";
	Константа.СчетаПереоцениваемыеВОсобомПорядке.Установить('01.01.2007', СписокСчетов);
	СписокСчетов = """60.22"",""60.7"",""62.22"",""62.7"",""62.8"",""66.22"",""66.44"",""67.22"",""67.44"",""ВР.6"",""УЕ.60"",""УЕ.62""";
	Константа.СчетаПереоцениваемыеВОсобомПорядке.Установить('01.01.2008', СписокСчетов);
	
	Константа.УчитыватьПоложительныеСуммовыеРазницыПриНачисленииНДС.Установить('01.01.1980', Нет);
	Константа.УчитыватьОтрицательныеСуммовыеРазницыПриНачисленииНДС.Установить('01.01.1980', Нет);
	Константа.УчитыватьПоложительныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Установить('01.01.1980', Нет);
	Константа.УчитыватьОтрицательныеСуммовыеРазницыПриОпределенииВычетовПоНДС.Установить('01.01.1980', Нет);
	Константа.ОтражатьПоложительныеСуммовыеРазницыВДопЛисте.Установить('01.01.1980', Нет);
	Константа.ОтражатьОтрицательныеСуммовыеРазницыВДопЛисте.Установить('01.01.1980', Нет);  
	
	Константа.ВыписыватьОтдельныеСчетаФактурыНаСуммовыеРазницы.Установить('01.01.1980', Нет);       
	
	Константа.ФормироватьСчетФактуруПоУЕвРублях.Установить('01.01.1980', Да);       
	
	Константа.МетодНачисленияАмортизацииНУ.Установить('01.01.1980', Перечисление.МетодыНачисленияАмортизации.Линейный);
	
	Константа.ПрименятьВ2008ГодуПравилаПБУ142000 = Перечисление.Булево.Нет;
	
	Константа.ТарифСтраховыхВзносов.Установить('01.01.2010' ,Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим);
	Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Установить('01.01.2010', 415000);
	ЗаполнитьТарифыСтраховыхВзносов();
	
	СоздатьПеречниПравилОтнесенияРасходовОсновногоПроизводстваКПрямым();
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры //Выполнить
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	СтатусВозврата(0);
	ПервыйЗапуск = 0;
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    ПервыйЗапуск = Форма.Параметр;
	КонецЕсли;
	Если ПервыйЗапуск = 1 Тогда
		Предупреждение("Обнаружен первый запуск программы с этой информационной базой.
						|Будет выполнена установка констант и начальное заполнение справочников.
						|Это займет некоторое время. Пожалуйста, подождите.", 20);
		Выполнить();
	КонецЕсли;
КонецПроцедуры //ПриОткрытии