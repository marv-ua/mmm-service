Перем ИсходнаяТаблица;
Перем Год;
Перем ФизЛицо;
Перем МесяцыИнвалидности[12];
Перем НазваниеМесяца[12];
Перем ПоследнийМесяц;
Перем РегрессивнаяШкала;
Перем РегрессивнаяШкалаПФР;
Перем ЕстьЕНВД;
Перем ПределыДоходовЕСН[10];
Перем СтавкиНалогаПФР[10];
Перем СтавкиНалогаТФОМС[10];
Перем СтавкиНалогаФФОМС[10];
Перем СтавкиНалогаФСС[10];
Перем СтавкиВзносаПФРСтраховаяЧасть[10];
Перем СтавкиВзносаПФРНакопительнаяЧасть[10];
Перем СтавкиНалогаПФРвзносы[10];
Перем ИсходнаяТаблицаБезСправочников; //это будет таблица , сформированная при открытии карточки без данных справочника
Перем БуферРазделовСпр; //это будет список данных, введенных в справочники
Перем ТаблицаРасшифровокПоВР; //это будет список данных по ВР

Перем ПорядокИсчисленияЕСН;
Перем ДоходыВычетыНалогиСотрудников;    

Перем Буфер; //понадобится для вывода карточки и для формирования расшифровки 

//******************************************************************************
// ОпределитьЦвет()
//
// Параметры:
//		нет
//
// Вызывается из ячеек со всеми редактируемыми числами
//
// Возвращаемое значение
//		нет
//
// Описание:
//		сравнивает ячейки до и после редактирования и во всех отличающихся меняет цвет  
//		
//
Процедура ОпределитьЦвет()
	// ИсходнаяТаблицаБезСправочников-до вызова
	// Таблица - текущее состояние
КонецПроцедуры

 //******************************************************************************
// ОпределитьСтавки()
//
// Параметры:
//		нет
//
// Вызывается из ячеек со всеми редактируемыми числами
//
// Возвращаемое значение
//		нет
//
// Описание:
//		определяет ставки налогов на выбранную дату  
//		
//
Процедура ОпределитьСтавки()
	
	НомерШкалыВзносов = глНомерШкалыСтраховыхВзносовПФР(ФизЛицо);
	КонецГода = КонГода(Дата(Год,12,31));
	
	СписокСтавкиНалогаПФР = глПолучитьСтавкиЕСН(глПолучитьНалог("ЕСН_ФБ"), КонецГода,, 1);
	СписокСтавкиНалогаФСС = глПолучитьСтавкиЕСН(глПолучитьНалог("ФСС"), КонецГода,, 1);
	СписокСтавкиНалогаФФОМС = глПолучитьСтавкиЕСН(глПолучитьНалог("ФФОМС"), КонецГода,, 1);
	СписокСтавкиНалогаТФОМС = глПолучитьСтавкиЕСН(глПолучитьНалог("ТФОМС"), КонецГода,, 1);
	СписокСтавкиВзносаПФРСтраховаяЧасть = глПолучитьСтавкиЕСН(глПолучитьНалог("ПФР_страх"), КонецГода, НомерШкалыВзносов, 1);
	СписокСтавкиВзносаПФРНакопительнаяЧасть = глПолучитьСтавкиЕСН(глПолучитьНалог("ПФР_нак"), КонецГода, НомерШкалыВзносов, 1);
	СписокПределыДоходовЕСН = глПолучитьСтавкиЕСН(глПолучитьНалог("ЕСН_ФБ"), КонецГода,, 0, 1);
	
	Для Сч = 1 по 10 Цикл
		СтавкиНалогаПФР[Сч] = СписокСтавкиНалогаПФР.ПолучитьЗначение(Сч);
		СтавкиНалогаФСС[Сч] = СписокСтавкиНалогаФСС.ПолучитьЗначение(Сч);
		СтавкиНалогаФФОМС[Сч] = СписокСтавкиНалогаФФОМС.ПолучитьЗначение(Сч);
		СтавкиНалогаТФОМС[Сч] = СписокСтавкиНалогаТФОМС.ПолучитьЗначение(Сч);
		СтавкиВзносаПФРСтраховаяЧасть[Сч] = СписокСтавкиВзносаПФРСтраховаяЧасть.ПолучитьЗначение(Сч);
		СтавкиВзносаПФРНакопительнаяЧасть[Сч] = СписокСтавкиВзносаПФРНакопительнаяЧасть.ПолучитьЗначение(Сч);
		ПределыДоходовЕСН[Сч] = СписокПределыДоходовЕСН.ПолучитьЗначение(Сч);
		
		СтавкиНалогаПФРвзносы[Сч] = СтавкиВзносаПФРСтраховаяЧасть[Сч] + СтавкиВзносаПФРНакопительнаяЧасть[Сч];
	КонецЦикла;

КонецПроцедуры

//******************************************************************************
// СписокРедактируемыхЯчеек()
//
// Параметры:
//		Расшифровка - 1, если список нужен для проверки доступности расшифровки, 0 - только для управления цветом
//
// Возвращаемое значение
//		список имен ячеек, которые надо запоминать в справочниках и складывать потом с данными журнала расчетов
//
// Описание:
//		прямым перебором составляем список  
//		
//
Функция СписокРедактируемыхЯчеек(Расшифровка=0)
	//заполненим список ячеек к обработке:
	СписокЯчеек=СоздатьОбъект("СписокЗначений");
			
	Для СчМес = 1 По 12 Цикл                      
		
		МесяцСтрокой = глДополнитьСтроку(СчМес,2);
		
		Для Сч = 2 По 3 Цикл
			ИмяОбл="П"+МесяцСтрокой+глДополнитьСтроку(Сч,2);
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		КонецЦикла;
		Для Сч = 5 По 6 Цикл
			ИмяОбл="П"+МесяцСтрокой+глДополнитьСтроку(Сч,2);
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		КонецЦикла;
		Для Сч = 21 По 23 Цикл
			ИмяОбл="П"+МесяцСтрокой+глДополнитьСтроку(Сч,2);
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		КонецЦикла;
		Для Сч = 28 По 33 Цикл
			ИмяОбл="П"+МесяцСтрокой+Строка(Сч);
			СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		КонецЦикла;
		
		ИмяОбл="П"+МесяцСтрокой+"02а";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);		
		
		ИмяОбл="П"+МесяцСтрокой+"02б";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		
		ИмяОбл="П"+МесяцСтрокой+"02в";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);
					
		ИмяОбл="П"+МесяцСтрокой+"04а";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		
		ИмяОбл="П"+МесяцСтрокой+"04б";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		
		ИмяОбл="П"+МесяцСтрокой+"04в";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		
		ИмяОбл="П"+МесяцСтрокой+"04г";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);
		
		ИмяОбл="П"+МесяцСтрокой+"04д";
		СписокЯчеек.ДобавитьЗначение(ИмяОбл);		
		
	КонецЦикла;
	Возврат СписокЯчеек;
КонецФункции	

//*****************************************************************************
// Очистить(Спрашивать = 1)
//
// Параметры
//		Спрашивать - число 1 или 0 - проверять ли заполненность карточки
//		ТекстВопроса - передается непустая строка, если надо задать свой текст вопроса
//
// Вызывается из формул элементов диалога
//		Очистить
//
// Возвращаемое значение
//		0 - если от очистки отказались
//
// Описание
//		очищает все поля ввода и зависимые от них расчетные поля для 
//		последующего заполнения
//
Функция Очистить(Спрашивать = 1, ТекстВопроса="")
	
	Если Спрашивать = 1 Тогда
		
		// если в карточке есть какие-либо цифры - спросим, точно ли нужно все перезаполнить
		СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
		Таблица.Выгрузить(СЗТекущееСостояние);
		
		// просто просуммируем квадраты всех введенных чисел; если есть хоть одно число - сумма получится ненулевой
		СуммаВсехЧисел = 0;
		Для Сч = 1 По СЗТекущееСостояние.РазмерСписка()  Цикл
			Зн = СЗТекущееСостояние.ПолучитьЗначение(Сч);
			Если ТипЗначения(Зн) = 1 Тогда
				СуммаВсехЧисел = СуммаВсехЧисел + Зн * Зн
			ИначеЕсли ПустоеЗначение(Зн) = 0 Тогда
				СуммаВсехЧисел = 1	
			КонецЕсли;
			Если СуммаВсехЧисел <> 0 Тогда
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаВсехЧисел <> 0 Тогда
			Если ТекстВопроса="" Тогда
			   ТекстВопроса="Карточка будет очищена.
			|Продолжить?";  
			КонецЕсли;
			Если Вопрос(ТекстВопроса,"Да+Нет")="Нет" Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	П001 = "";
	П002 = "";
	П003 = "";
	П004 = "";
	Таблица.Область("ПолеЧисел1").Значение=0;
	
	// теперь уберем нули
	Для Сч = 1 По 12 Цикл
		МесяцСтрокой = глДополнитьСтроку(Сч,2);
		Таблица.Область("П"+МесяцСтрокой+"08").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"10").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"12").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"18").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"19").Текст = "";		
		Таблица.Область("СНГ"+МесяцСтрокой+"08").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"10").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"12").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"18").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"19").Текст = "";
	КонецЦикла;
	
	//т.к. очистили от "справочных" сумм, надо вернуть поля в бледно-желтое состояние:
	СписокИмен = СписокРедактируемыхЯчеек();
	Для Сч = 1 По СписокИмен.РазмерСписка() Цикл
		ИмяОбл=СписокИмен.ПолучитьЗначение(Сч);
	КонецЦикла;
	
	Возврат 1;
	
КонецФункции //Очистить

//******************************************************************************
// ЗаполнитьТаблицу(ОбобщеннаяТаблица)
//
// Параметры:
//		ОбобщеннаяТаблица - контекст формы, передан для заполнения данными.
//		УчитыватьСправочники - число 1 (по умолчанию) или 0, не обязателен; если равен 0 - данные из справочников не собираются.
//		СменаГода - число 0 (по умолчанию) или 1, не обязателен; если равен 1 - то не нужно проверять на предмет исправлнения
//							
// Возвращаемое значение:
//		0 или 1 - прервана (0) или нет (1) работа процедуры сбора доходов
//
// Описание:
//		заполняет переданную таблицу обработанными данными о доходах
//		
Функция ЗаполнитьТаблицу(ОбобщеннаяТаблица,УчитыватьСправочники=1)
	
	// соберем данные о доходах
	ДоходыВычетыНалогиСотрудников = ""; 
	//соберем дополнительные кадровые данные (инвалидность, гражданство и т.п.)
	ДопДанныеФизЛица = "";
	// проверим, удалось ли получить доходы нашего сотрудника
	Если глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников,ФизЛицо,КонГода(Дата(Год,12,15)),,,УчитыватьСправочники,1,,,ДопДанныеФизЛица) <> 1 Тогда
		Возврат 0   
	КонецЕсли;       
	СтрокаИтоговойТаблицы = 0;
	
	// в буфер складываются значения, которые могут попасть в ячейки для ввода
	// нередактируемые (рассчитываемые итоговые) значения сразу помещаем в реквизит Текст ячеек таблицы
	Буфер=СоздатьОбъект("СписокЗначений");
	Карточка = ОбобщеннаяТаблица.Таблица;
	БуферРазделовСпр=СоздатьОбъект("СписокЗначений");
	ТаблицаРасшифровокПоВР=СоздатьОбъект("ТаблицаЗначений");
	
	глЗаполнитьИндивидуальнуюКарточкуПоЕСН2004(ФизЛицо,Год,0,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,ПоследнийМесяц,БуферРазделовСпр,ТаблицаРасшифровокПоВР,,ДопДанныеФизЛица);
	                                                                                                                           
	// загружаем значения редактируемых ячеек
	Карточка.Загрузить(Буфер);
	
	// запоминаем "образ" таблицы для последующих проверок
	ИсходнаяТаблица = СоздатьОбъект("СписокЗначений");
	Карточка.Выгрузить(ИсходнаяТаблица);
	
	Если УчитыватьСправочники=1 Тогда
		
		ЕстьЛьготыПоСт239 = 0;
		Если (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(12,20) <> 0) или (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(12,25) <> 0) Тогда
		    ЕстьЛьготыПоСт239 = 1;
		Иначе
			Для Сч = 1 По 12 Цикл
				ЕстьЛьготыПоСт239 = ЕстьЛьготыПоСт239 + МесяцыИнвалидности[Сч]
			КонецЦикла;	
		КонецЕсли;
				
		ПорядокИсчисленияЕСН = Константа.ПорядокИсчисленияЕСН.Получить(Дата(Год,12,31));
	КонецЕсли;
	
	Возврат 1
	
КонецФункции // ЗаполнитьТаблицу

//*****************************************************************************
// ЗаполнитьПоНДФЛ()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Заполнить
//
// Возвращаемое значение
//		нет
//
// Описание
//		заполняет поля для ввода данными, взятыми из налоговой карточки 1-НДФЛ 
//
Процедура ЗаполнитьПоНДФЛ()
	
	// если в карточке есть какие-либо цифры - спросим, точно ли нужно все перезаполнить
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	
	// просто просуммируем квадраты всех введенных чисел; если есть хоть одно число - сумма получится ненулевой
	СуммаВсехЧисел = 0;
	Для Сч = 1 По СЗТекущееСостояние.РазмерСписка()  Цикл
		Зн = СЗТекущееСостояние.ПолучитьЗначение(Сч);
		Если ТипЗначения(Зн) = 1 Тогда
			СуммаВсехЧисел = СуммаВсехЧисел + Зн * Зн
		КонецЕсли;
		Если СуммаВсехЧисел <> 0 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	
	Если СуммаВсехЧисел <> 0 Тогда
		Если Вопрос("Перед заполнением карточка будет очищена."
		"Продолжить?","Да+Нет")="Нет" Тогда
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	// Очистим числовое поле карточки
	Таблица.Область("ПолеЧисел1").Значение=0;
	
	// теперь уберем нули
	Для Сч = 1 По 12 Цикл
		МесяцСтрокой = глДополнитьСтроку(Сч,2);
		Таблица.Область("П"+МесяцСтрокой+"08").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"10").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"12").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"18").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"19").Текст = "";		
		Таблица.Область("СНГ"+МесяцСтрокой+"08").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"10").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"12").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"18").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"19").Текст = "";
	КонецЦикла;
	
	// Заполним карточку по бухгалтерским итогам
	ЗаполнитьТаблицу(Контекст, 0);
	СЗТекущееСостояние.Выгрузить(ИсходнаяТаблица);

КонецПроцедуры //ЗаполнитьПоНДФЛ

//*****************************************************************************
// ПриВводеДоходов()
//
// Параметры
//  нет
//
// Возвращаемое значение
//  нет
//
// Вызывается из ячеек табличного документа
//  в колонках со 2 По 10
//
// Описание
//  обеспечивает пересчет всей зависимой информации
//  
Процедура ПриВводеДоходов()
	
    ОпределитьЦвет();
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	Если Таблица.Область(Имя).Доступность() = 0 Тогда
		Возврат
	КонецЕсли;
	
	НомерКолонки = Число(Сред(Имя,4,2));
	КодКолонки = Сред(Имя,4);    
	МесяцРедактирования=Число(Сред(Имя,2,2));
		
	//заполним строки итого с начала года "пропущенных" месяцев  
	Если МесяцРедактирования > ПоследнийМесяц Тогда 
		Для Месяц = ПоследнийМесяц+1 По МесяцРедактирования Цикл
			ТекущийМесяцСтрокой=глДополнитьСтроку(Месяц,2);
			ПрошлыйМесяцСтрокой=глДополнитьСтроку(Месяц-1,2);
			
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"02").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"02").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"02а").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"02а").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"02б").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"02б").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"02в").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"02в").Текст;
			
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"03").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"03").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"04а").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"04а").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"04б").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"04б").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"04в").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"04в").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"04д").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"04д").Текст;
			Таблица.Область("ВСЕГО_СНГ"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("ВСЕГО_СНГ"+ПрошлыйМесяцСтрокой).Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"05").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"05").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"06").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"06").Текст;
			
			Если Год < 2005 Тогда
			    Если РегрессивнаяШкала.Получить(КонМесяца(Дата(Год,Месяц,15))) = Нет Тогда
					Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"08").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"08").Текст;
					Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"10").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"10").Текст;
					Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"12").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"12").Текст;
				КонецЕсли;
			КонецЕсли;
			
			Таблица.Область("НБ_ФБ_СНГ"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("НБ_ФБ_СНГ"+ПрошлыйМесяцСтрокой).Текст;
			Таблица.Область("НБ_ФСС_СНГ"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("НБ_ФСС_СНГ"+ПрошлыйМесяцСтрокой).Текст;
			Таблица.Область("НБ_ОМС_СНГ"+ТекущийМесяцСтрокой).Текст	= Таблица.Область("НБ_ОМС_СНГ"+ПрошлыйМесяцСтрокой).Текст;			
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"13").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"13").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"14").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"14").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"15").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"15").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"16").Текст	= Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"16").Текст;		
			Таблица.Область("ОБЛ_ПФР_СНГ"+ТекущийМесяцСтрокой).Текст= Таблица.Область("ОБЛ_ПФР_СНГ"+ПрошлыйМесяцСтрокой).Текст;

			Если Год < 2005 Тогда
				Если РегрессивнаяШкалаПФР.Получить(КонМесяца(Дата(Год,Месяц,15))) = Нет Тогда
					Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"18").Текст =  Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"18").Текст;
					Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"19").Текст =  Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"19").Текст;
				КонецЕсли;
			КонецЕсли;
				
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"20").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"20").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"21").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"21").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"22").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"22").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"23").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"23").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"24").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"24").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"25").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"25").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"26").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"26").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"27").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"27").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"28").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"28").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"29").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"29").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"30").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"30").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"31").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"31").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"32").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"32").Текст;
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"33").Текст = Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"33").Текст;

		КонецЦикла;
	КонецЕсли;
	ПоследнийМесяц=Макс(ПоследнийМесяц,МесяцРедактирования); // возможно, заполнили очередной месяц - будем обновлять таблицу по этот месяц
	
	НачисленоВсегоПредыдМесяца=0;
	НачисленоИностранцуПредыдМесяца = 0;
	НачисленоИнвалидуПредыдМесяца = 0;
	НачисленоИнвалидуФССПредыдМесяца = 0;
	НачисленоИнвалидуПФРПредыдМесяца = 0;
	ЛьготВсегоПредыдМесяца = 0;
	ПрочихЛьготПоСт238ПредыдМесяца = 0;
	ДоговораПодрядаПредыдМесяца = 0;
	НачисленоЗаСчетПрибылиПредыдМесяца = 0;
	СодержаниеПрокуроровПредыдМесяца = 0;
	ДовольствиеВоенныхПредыдМесяца = 0;
	НачисленоЕНВДПредыдМесяца = 0;
	ЛицензионныеПредыдМесяца = 0;
	ДовольствиеВоенныхПредыдМесяца = 0;
	
	ОблагаемаяПФРПредыдМесяца = 0;
	ОблагаемаяПФР = 0;
	ОблагаемаяПФРЕНВД = 0;
	ОблагаемаяПФРЕНВДПредыдМесяца = 0;
	
	ЕСНОблагаемаяФБПредыдМесяца = 0;
	ЕСНОблагаемаяФССПредыдМесяца = 0;
	ЕСНОблагаемаяОМСПредыдМесяца = 0;
	ЕСНОблагаемаяФБ = 0;
	ЕСНОблагаемаяФСС = 0;
	ЕСНОблагаемаяОМС = 0;
		
	УдержаноФСС=0;
	УдержаноТФОМС=0;
	УдержаноФБ=0;
	УдержаноФФОМС=0;
	УдержаноПФРнаСтраховуюПенсию=0;
	УдержаноПФРнаНакопительнуюПенсию=0;
	
	НеПодлежитУплатеФБПредыдМесяца = 0; // в связи с применением льгот п.1 ст. 239
	НеПодлежитУплатеФССПредыдМесяца = 0;
	НеПодлежитУплатеФФОМСПредыдМесяца = 0;
	НеПодлежитУплатеТФОМСПредыдМесяца = 0;
	
	БылоВКолонке=Число(Таблица.Область("СНГ"+Сред(Имя,2)).Текст);
	БылоВКолонкеПредыдМесяца=0;
	
	Для Месяц = 1 по (МесяцРедактирования - 1) Цикл
		МесяцСтрокой=глДополнитьСтроку(Месяц,2);
		БылоВКолонкеПредыдМесяца=Число(Таблица.Область("СНГ"+МесяцСтрокой+КодКолонки).Текст);
		
		ЕСНОблагаемаяФБПредыдМесяца = Число(Таблица.Область("НБ_ФБ_СНГ"+МесяцСтрокой).Текст);
		ЕСНОблагаемаяОМСПредыдМесяца = Число(Таблица.Область("НБ_ОМС_СНГ"+МесяцСтрокой).Текст);
		ЕСНОблагаемаяФССПредыдМесяца = Число(Таблица.Область("НБ_ФСС_СНГ"+МесяцСтрокой).Текст);
		УдержаноФБ=Число(Таблица.Область("СНГ"+МесяцСтрокой+"13").Текст);
		УдержаноФСС=Число(Таблица.Область("СНГ"+МесяцСтрокой+"14").Текст);
		УдержаноФФОМС=Число(Таблица.Область("СНГ"+МесяцСтрокой+"15").Текст);
		УдержаноТФОМС=Число(Таблица.Область("СНГ"+МесяцСтрокой+"16").Текст);
		УдержаноПФРнаСтраховуюПенсию=Число(Таблица.Область("СНГ"+МесяцСтрокой+"21").Текст);
		УдержаноПФРнаНакопительнуюПенсию=Число(Таблица.Область("СНГ"+МесяцСтрокой+"22").Текст);
		НеПодлежитУплатеФБПредыдМесяца = Число(Таблица.Область("СНГ"+МесяцСтрокой+"24").Текст);
		НеПодлежитУплатеФССПредыдМесяца = Число(Таблица.Область("СНГ"+МесяцСтрокой+"25").Текст);
		НеПодлежитУплатеФФОМСПредыдМесяца = Число(Таблица.Область("СНГ"+МесяцСтрокой+"26").Текст);
		НеПодлежитУплатеТФОМСПредыдМесяца = Число(Таблица.Область("СНГ"+МесяцСтрокой+"27").Текст);
		НачисленоИностранцуПредыдМесяца = Число(Таблица.Область("СНГ"+МесяцСтрокой+"02в").Текст);
		ЛицензионныеПредыдМесяца =  Число(Таблица.Область("СНГ"+МесяцСтрокой+"02а").Текст);
		
		НачисленоВсего=Число(Таблица.Область("СНГ"+МесяцСтрокой+"02").Текст);
		НачисленоЕНВД = Число(Таблица.Область("СНГ"+МесяцСтрокой+"02б").Текст);
		ЛьготВсего = Число(Таблица.Область("ВСЕГО_СНГ"+МесяцСтрокой).Текст);
		ПрочихЛьготПоСт238 = Число(Таблица.Область("СНГ"+МесяцСтрокой+"04д").Текст); 
		НачисленоИнвалиду = Число(Таблица.Область("СНГ"+МесяцСтрокой+"23").Текст); 
		НачисленоИнвалидуФСС = НачисленоИнвалиду; 
		НачисленоИнвалидуПФР = НачисленоИнвалиду; 
		НачисленоЗаСчетПрибыли = Число(Таблица.Область("СНГ"+МесяцСтрокой+"03").Текст);		
		ДоговораПодряда = Число(Таблица.Область("СНГ"+МесяцСтрокой+"05").Текст);
		ОблагаемаяПФР=Число(Таблица.Область("ОБЛ_ПФР_СНГ"+МесяцСтрокой).Текст); 
		ОблагаемаяПФРЕНВД = ОблагаемаяПФР + НачисленоЕНВД;
		ДовольствиеВоенных = Число(Таблица.Область("СНГ"+МесяцСтрокой+"33").Текст);
		
		ДатаОкончания=КонМесяца(Дата(Год,Месяц,15));
		Если ФизЛицо.Инвалид.Получить(ДатаОкончания) = 1 Тогда
			НачисленоИнвалидуФСС = Мин(НачисленоИнвалидуФССПредыдМесяца+(НачисленоВсего-ЛьготВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД-ДоговораПодряда) 
									- (НачисленоВсегоПредыдМесяца-ЛьготВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-НачисленоЕНВДПредыдМесяца-ДоговораПодрядаПредыдМесяца),100000);
									
			НачисленоИнвалидуПФР = Мин(НачисленоИнвалидуПФРПредыдМесяца + (ОблагаемаяПФР - ОблагаемаяПФРПредыдМесяца),100000);
		КонецЕсли;
		
		НачисленоВсегоПредыдМесяца = НачисленоВсего;
		НачисленоЕНВДПредыдМесяца = НачисленоЕНВД;
		ЛьготВсегоПредыдМесяца = ЛьготВсего;
		ПрочихЛьготПоСт238ПредыдМесяца = ПрочихЛьготПоСт238; 
		НачисленоИнвалидуПредыдМесяца = НачисленоИнвалиду; 
		НачисленоИнвалидуФССПредыдМесяца = НачисленоИнвалидуФСС; 
		НачисленоИнвалидуПФРПредыдМесяца = НачисленоИнвалидуПФР; 
		НачисленоЗаСчетПрибылиПредыдМесяца = НачисленоЗаСчетПрибыли;
		ДоговораПодрядаПредыдМесяца = ДоговораПодряда;
		ОблагаемаяПФРПредыдМесяца = ОблагаемаяПФР;
		ОблагаемаяПФРЕНВДПредыдМесяца = ОблагаемаяПФРЕНВД;
		ДовольствиеВоенныхПредыдМесяца = ДовольствиеВоенных;
	КонецЦикла;
	            
	ИзмененияВКолонке = Таблица.Область(Имя).Значение - (БылоВКолонке - БылоВКолонкеПредыдМесяца); // определим сумму на которую изменили значение в ячейке
	
	Сообщали=0;
	
	// пересчитываем все данные, зависимые от введенных вручную 
	Для Месяц = МесяцРедактирования По ПоследнийМесяц Цикл
		
		МесяцСтрокой=глДополнитьСтроку(Месяц,2);
		
		НачисленоВсего=Число(Таблица.Область("СНГ"+МесяцСтрокой+"02").Текст);
		ПрочихЛьготПоСт238 = Число(Таблица.Область("СНГ"+МесяцСтрокой+"04д").Текст);
		ЛьготВсего = Число(Таблица.Область("СНГ"+МесяцСтрокой+"04а").Текст)+Число(Таблица.Область("СНГ"+МесяцСтрокой+"04б").Текст)+
					Число(Таблица.Область("СНГ"+МесяцСтрокой+"04в").Текст)+Число(Таблица.Область("СНГ"+МесяцСтрокой+"04г").Текст)+
					Число(Таблица.Область("СНГ"+МесяцСтрокой+"04д").Текст);
		
		НарастающимИтогом=Число(Таблица.Область("СНГ"+МесяцСтрокой+КодКолонки).Текст)+ИзмененияВКолонке;
		Таблица.Область("СНГ"+МесяцСтрокой+КодКолонки).Текст=Формат(НарастающимИтогом,"Ч012.2.");                                           

		Если НачГода(Дата(Год,1,1))<'01.01.2005' Тогда
			Если (НомерКолонки = 4) и (Прав(КодКолонки,1)<>"д") Тогда
				Если КодКолонки = "04г" Тогда
					Предел=10000
				Иначе
					Предел=2000
				КонецЕсли;
				Если НарастающимИтогом > Предел Тогда
					Если Сообщали=0 Тогда
						Сообщить("В "+НазваниеМесяца[Месяц]+" введенная необлагаемая сумма превысила предусмотренный НК РФ размер!","!");
						Сообщали=1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если (НомерКолонки = 21) Тогда
				Предел = 0;               
				Если Прав(КодКолонки,1) = "а" Тогда
					Если Число(Таблица.АктивнаяОбласть().Текст) > 1000 Тогда
						Если Сообщали=0 Тогда
							Сообщить("В "+НазваниеМесяца[Месяц]+" введенная необлагаемая сумма превысила предусмотренный НК РФ размер!","!");
							Сообщали=1;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если Прав(КодКолонки,1) = "г" Тогда
						Предел=10000
					ИначеЕсли (Прав(КодКолонки,1) = "б") или (Прав(КодКолонки,1) = "в") Тогда
						Предел=2000
					КонецЕсли;
					Если (НарастающимИтогом > Предел) и (Предел > 0) Тогда
						Если Сообщали=0 Тогда
							Сообщить("В "+НазваниеМесяца[Месяц]+" введенная необлагаемая сумма превысила предусмотренный НК РФ размер!","!");
							Сообщали=1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// пересчитываем, если нужно, колонки сумм доходов и льгот
		
		Если НомерКолонки = 2  Тогда  // всего начислено
			НачисленоВсего=Число(Таблица.Область("СНГ"+МесяцСтрокой+"02").Текст);
		ИначеЕсли (КодКолонки = 5) или (НомерКолонки = 3) или (НомерКолонки = 6) или (НомерКолонки = 23) или (НомерКолонки = 33) Тогда // поправим колонку "начислено всего", если там меньше
			Если НачисленоВсего < НарастающимИтогом Тогда
				НачисленоВсего = НачисленоВсего + ИзмененияВКолонке;                                                                       
				Таблица.Область("СНГ"+МесяцСтрокой+"02").Текст = Формат(НачисленоВсего,"Ч012.2.");
				Таблица.Область("П"+МесяцСтрокой+"02").Значение = НачисленоВсего - НачисленоВсегоПредыдМесяца;
			КонецЕсли;
		ИначеЕсли НомерКолонки = 4 Тогда // всего льгот 
			
			ЛьготВсего = ЛьготВсего + ИзмененияВКолонке;                                                                       
			
			Таблица.Область("ВСЕГО"+МесяцСтрокой).Текст=Формат(ЛьготВсего-ЛьготВсегоПредыдМесяца,"Ч012.2.");
			Таблица.Область("ВСЕГО_СНГ"+МесяцСтрокой).Текст=Формат(ЛьготВсего,"Ч012.2.");
			
			Если НачисленоВсего < ЛьготВсего Тогда
				НачисленоВсего = НачисленоВсего + ИзмененияВКолонке;                                                                       
				Таблица.Область("СНГ"+МесяцСтрокой+"02").Текст = Формат(НачисленоВсего,"Ч012.2.");
				Таблица.Область("П"+МесяцСтрокой+"02").Значение = НачисленоВсего - НачисленоВсегоПредыдМесяца;
			КонецЕсли;
			
		Иначе // не должно быть
		КонецЕсли;
		
		Лицензионные = Число(Таблица.Область("СНГ"+МесяцСтрокой+"02а").Текст);
		НачисленоЗаСчетПрибыли = Число(Таблица.Область("СНГ"+МесяцСтрокой+"03").Текст);
		НачисленоЕНВД = Число(Таблица.Область("СНГ"+МесяцСтрокой+"02б").Текст);
		НачисленоИностранцу = Число(Таблица.Область("СНГ"+МесяцСтрокой+"02в").Текст);
		ДоговораПодряда = Число(Таблица.Область("СНГ"+МесяцСтрокой+"05").Текст);
		СодержаниеПрокуроров = Число(Таблица.Область("СНГ"+МесяцСтрокой+"06").Текст);
		ДовольствиеВоенных = Число(Таблица.Область("СНГ"+МесяцСтрокой+"33").Текст);
			
		Таблица.Область("П"+МесяцСтрокой+"23").Значение=НачисленоИнвалиду-НачисленоИнвалидуПредыдМесяца;
		Таблица.Область("СНГ"+МесяцСтрокой+"23").Текст=Формат(НачисленоИнвалиду,"Ч012.2.");
		
		НеОблагаетсяЗаМесяц = ДовольствиеВоенных-ДовольствиеВоенныхПредыдМесяца 
							+ НачисленоЕНВД - НачисленоЕНВДПредыдМесяца
							+ НачисленоЗаСчетПрибыли-НачисленоЗаСчетПрибылиПредыдМесяца;
		
		ДатаОкончания=КонМесяца(Дата(Год,Месяц,15));
		ИспользоватьРегрессивнуюШкалу = ?(Год < 2005, РегрессивнаяШкала.Получить(ДатаОкончания), Да); // организация может иметь право на применение регрессивной шкалы ЕСН - см. п. 2 ст. 241 НК РФ
		ИспользоватьРегрессивнуюШкалуПФР = ?(Год < 2005, РегрессивнаяШкалаПФР.Получить(ДатаОкончания), Да); // организация может иметь право на применение регрессивной шкалы для расчетов ПФР 
		
		ОблагаемаяПФР = Макс(ОблагаемаяПФРПредыдМесяца
							+ Лицензионные - ЛицензионныеПредыдМесяца
							-НачисленоИностранцу+НачисленоИностранцуПредыдМесяца
							+НачисленоВсего-НачисленоВсегоПредыдМесяца - НеОблагаетсяЗаМесяц
							-СодержаниеПрокуроров+СодержаниеПрокуроровПредыдМесяца
							-ЛьготВсего+ЛьготВсегоПредыдМесяца,0); 
		
		ОблагаемаяПФРЕНВД = Макс(ОблагаемаяПФР + НачисленоЕНВД,0); 
		
		СуммавПФРСтраховаяЧастьЕНВД = 0;
		СуммавПФРНакопительнаяЧастьЕНВД = 0; 
		СуммавПФРСтраховаяЧасть = 0;
		СуммавПФРНакопительнаяЧасть = 0; 
		Если (ОблагаемаяПФР - ОблагаемаяПФРПредыдМесяца) <> 0 Тогда
			СуммавПФРСтраховаяЧасть = глРассчитатьЕСНилиВзносыВПФР(ОблагаемаяПФРЕНВД,СтавкиВзносаПФРСтраховаяЧасть,ИспользоватьРегрессивнуюШкалуПФР,ПределыДоходовЕСН);
			СуммавПФРНакопительнаяЧасть = глРассчитатьЕСНилиВзносыВПФР(ОблагаемаяПФРЕНВД,СтавкиВзносаПФРНакопительнаяЧасть,ИспользоватьРегрессивнуюШкалуПФР,ПределыДоходовЕСН);
		КонецЕсли;
				
		Если (ОблагаемаяПФРЕНВД - ОблагаемаяПФРЕНВДПредыдМесяца) <> 0 Тогда 
			ПеремУдержаноПФРнаСтраховуюПенсию = глРассчитатьЕСНилиВзносыВПФР(ОблагаемаяПФРЕНВДПредыдМесяца,СтавкиВзносаПФРСтраховаяЧасть,ИспользоватьРегрессивнуюШкалуПФР,ПределыДоходовЕСН);
			ПеремУдержаноПФРнаНакопительнуюПенсию = глРассчитатьЕСНилиВзносыВПФР(ОблагаемаяПФРЕНВДПредыдМесяца,СтавкиВзносаПФРНакопительнаяЧасть,ИспользоватьРегрессивнуюШкалуПФР,ПределыДоходовЕСН);
			СуммавПФРНаОПСЕНВД = ((СуммавПФРСтраховаяЧасть + СуммавПФРНакопительнаяЧасть) - (ПеремУдержаноПФРнаСтраховуюПенсию + ПеремУдержаноПФРнаНакопительнуюПенсию))*(НачисленоЕНВД-НачисленоЕНВДПредыдМесяца)/(ОблагаемаяПФРЕНВД - ОблагаемаяПФРЕНВДПредыдМесяца);
			СуммавПФРСтраховаяЧастьЕНВД = (СуммавПФРСтраховаяЧасть - ПеремУдержаноПФРнаСтраховуюПенсию)/(ОблагаемаяПФРЕНВД - ОблагаемаяПФРЕНВДПредыдМесяца)*(НачисленоЕНВД-НачисленоЕНВДПредыдМесяца);
			СуммавПФРНакопительнаяЧастьЕНВД = СуммавПФРНаОПСЕНВД - СуммавПФРСтраховаяЧастьЕНВД;
		Иначе
			СуммавПФРСтраховаяЧастьЕНВД = 0;
			СуммавПФРНакопительнаяЧастьЕНВД = 0;
		КонецЕсли;  
		// страховые взносы на обязательное пенсионное страхование
		СуммавПФРСтраховаяЧасть = СуммавПФРСтраховаяЧасть - СуммавПФРСтраховаяЧастьЕНВД;
		// запоминаем начисленную сумму взносов
		Таблица.Область("П"+МесяцСтрокой+"21").Значение=Макс(0,(СуммавПФРСтраховаяЧасть - ПеремУдержаноПФРнаСтраховуюПенсию));
		СуммавПФРНакопительнаяЧасть = СуммавПФРНакопительнаяЧасть - СуммавПФРНакопительнаяЧастьЕНВД;
		// запоминаем начисленную сумму взносов
		Таблица.Область("П"+МесяцСтрокой+"22").Значение=Макс(0,(СуммавПФРНакопительнаяЧасть-ПеремУдержаноПФРнаНакопительнуюПенсию));
		Таблица.Область("П"+МесяцСтрокой+"20").Значение=Макс(0,Таблица.Область("П"+МесяцСтрокой+"21").Значение+Таблица.Область("П"+МесяцСтрокой+"22").Значение);
		
		ВзносыВПФРзаМесяц = Макс(0,Таблица.Область("П"+МесяцСтрокой+"20").Значение);
		
		УдержаноПФРнаНакопительнуюПенсию=СуммавПФРНакопительнаяЧасть;
		УдержаноПФРнаСтраховуюПенсию=СуммавПФРСтраховаяЧасть;
		
		Если ФизЛицо.Инвалид.Получить(ДатаОкончания) = 1 Тогда
			НачисленоИнвалиду = Мин(НачисленоИнвалидуПредыдМесяца+(НачисленоВсего-ЛьготВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД) 
								- (НачисленоВсегоПредыдМесяца-ЛьготВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-НачисленоЕНВДПредыдМесяца),100000);
								
			НачисленоИнвалидуФСС = Мин(НачисленоИнвалидуФССПредыдМесяца+(НачисленоВсего-ЛьготВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД-ДоговораПодряда) 
								- (НачисленоВсегоПредыдМесяца-ЛьготВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-НачисленоЕНВДПредыдМесяца-ДоговораПодрядаПредыдМесяца),100000);
								
			НачисленоИнвалидуПФР = Мин(НачисленоИнвалидуПФРПредыдМесяца + (ОблагаемаяПФР - ОблагаемаяПФРПредыдМесяца),100000);
		КонецЕсли;
		Таблица.Область("П"+МесяцСтрокой+"23").Значение=НачисленоИнвалиду-НачисленоИнвалидуПредыдМесяца;

		// расчет ЕСН
		//Если ФизЛицо.НеВзиматьЕСНвПФР.Получить(ДатаОкончания) = 0 Тогда
		Если Месяц > 1 Тогда
			ПредМесяцСтрокой=глДополнитьСтроку(Месяц-1,2);
			УдержаноПФРнаСтраховуюПенсиюДляВывода = 
			Число(Таблица.Область("СНГ"+ПредМесяцСтрокой+"21").Текст)+
			Число(Таблица.Область("П"+МесяцСтрокой+"21").Текст);
			УдержаноПФРНаНакопительнуюПенсиюДляВывода = 
			Число(Таблица.Область("СНГ"+ПредМесяцСтрокой+"22").Текст)+
			Число(Таблица.Область("П"+МесяцСтрокой+"22").Текст);
		Иначе
			УдержаноПФРнаСтраховуюПенсиюДляВывода = Число(Таблица.Область("П"+МесяцСтрокой+"21").Текст);
			УдержаноПФРНаНакопительнуюПенсиюДляВывода = Число(Таблица.Область("П"+МесяцСтрокой+"22").Текст);
			
		КонецЕсли; 
		ПредМесяцСтрокой=глДополнитьСтроку(Месяц-1,2);

		НеВзиматьЕСНвПФР = 0;
		Если НеВзиматьЕСНвПФР = 0 Тогда								
			
			ЕСНОблагаемаяФБ = Макс(ЕСНОблагаемаяФБПредыдМесяца
								+НачисленоВсего-НачисленоВсегоПредыдМесяца - НеОблагаетсяЗаМесяц
								-СодержаниеПрокуроров+СодержаниеПрокуроровПредыдМесяца
								-ЛьготВсего+ЛьготВсегоПредыдМесяца,0);                
			
			СуммавПФР = глРассчитатьЕСНилиВзносыВПФР(ЕСНОблагаемаяФБ,СтавкиНалогаПФР,ИспользоватьРегрессивнуюШкалу,ПределыДоходовЕСН);
			НеПодлежитУплатеФБ = НачисленоИнвалиду*СтавкиНалогаПФР[1]/100 - НачисленоИнвалидуПФР*(СтавкиВзносаПФРСтраховаяЧасть[1]+СтавкиВзносаПФРНакопительнаяЧасть[1])/100;
			
			Таблица.Область("П"+МесяцСтрокой+"13").Значение=СуммавПФР-УдержаноФБ;
			Таблица.Область("П"+МесяцСтрокой+"24").Значение=НеПодлежитУплатеФБ-НеПодлежитУплатеФБПредыдМесяца;
			Таблица.Область("П"+МесяцСтрокой+"28").Значение=(СуммавПФР-УдержаноФБ)-(НеПодлежитУплатеФБ-НеПодлежитУплатеФБПредыдМесяца)-ВзносыВПФРзаМесяц;
			Таблица.Область("СНГ"+МесяцСтрокой+"13").Значение=СуммавПФР;
			Таблица.Область("СНГ"+МесяцСтрокой+"24").Значение=НеПодлежитУплатеФБ;
			Таблица.Область("СНГ"+МесяцСтрокой+"28").Значение=СуммавПФР-НеПодлежитУплатеФБ-УдержаноПФРнаСтраховуюПенсиюДляВывода-УдержаноПФРНаНакопительнуюПенсиюДляВывода;
			
			УдержаноФБ=СуммавПФР;
			НеПодлежитУплатеФБПредыдМесяца=НеПодлежитУплатеФБ;
			
		Иначе // ЕСН в части ПФР не начисляется - п.2 ст.239 НК РФ
		КонецЕсли;
		
		НеВзиматьЕСНвФСС = 0;
		Если НеВзиматьЕСНвФСС = 0 Тогда
		//Если ФизЛицо.НеВзиматьЕСНвФСС.Получить(ДатаОкончания) = 0 Тогда
			ЕСНОблагаемаяФСС = Макс(ЕСНОблагаемаяФССПредыдМесяца
								+НачисленоВсего-НачисленоВсегоПредыдМесяца - НеОблагаетсяЗаМесяц
								-ДоговораПодряда+ДоговораПодрядаПредыдМесяца
								-ЛьготВсего+ЛьготВсегоПредыдМесяца,0);
			СуммавФСС = глРассчитатьЕСНилиВзносыВПФР(ЕСНОблагаемаяФСС,СтавкиНалогаФСС,ИспользоватьРегрессивнуюШкалу,ПределыДоходовЕСН);
			НеПодлежитУплатеФСС = НачисленоИнвалидуФСС*СтавкиНалогаФСС[1]/100;
			
			Таблица.Область("П"+МесяцСтрокой+"14").Значение=СуммавФСС-УдержаноФСС;
			Таблица.Область("П"+МесяцСтрокой+"25").Значение=НеПодлежитУплатеФСС-НеПодлежитУплатеФССПредыдМесяца;
			Таблица.Область("П"+МесяцСтрокой+"29").Значение=(СуммавФСС-УдержаноФСС)-(НеПодлежитУплатеФСС-НеПодлежитУплатеФССПредыдМесяца);
			Таблица.Область("СНГ"+МесяцСтрокой+"14").Значение=СуммавФСС;
			Таблица.Область("СНГ"+МесяцСтрокой+"25").Значение=НеПодлежитУплатеФСС;
			Таблица.Область("СНГ"+МесяцСтрокой+"29").Значение=СуммавФСС-НеПодлежитУплатеФСС;
			
			УдержаноФСС=СуммавФСС;
			НеПодлежитУплатеФССПредыдМесяца=НеПодлежитУплатеФСС;
		Иначе // ЕСН в части ФСС не начисляется - п.2 ст.239 НК РФ
		КонецЕсли;
		
		НеВзиматьЕСНвФОМС = 0;
		Если НеВзиматьЕСНвФОМС = 0 Тогда
		//Если ФизЛицо.НеВзиматьЕСНвФОМС.Получить(ДатаОкончания) = 0 Тогда
			ЕСНОблагаемаяОМС = Макс(ЕСНОблагаемаяОМСПредыдМесяца
								+НачисленоВсего-НачисленоВсегоПредыдМесяца - НеОблагаетсяЗаМесяц
								-ЛьготВсего+ЛьготВсегоПредыдМесяца,0);
							
			СуммавТФОМС = глРассчитатьЕСНилиВзносыВПФР(ЕСНОблагаемаяОМС,СтавкиНалогаТФОМС,ИспользоватьРегрессивнуюШкалу,ПределыДоходовЕСН);
			СуммаВФФОМС = глРассчитатьЕСНилиВзносыВПФР(ЕСНОблагаемаяОМС,СтавкиНалогаФФОМС,ИспользоватьРегрессивнуюШкалу,ПределыДоходовЕСН);
			
			НеПодлежитУплатеФФОМС = НачисленоИнвалиду*СтавкиНалогаФФОМС[1]/100;
			НеПодлежитУплатеТФОМС = НачисленоИнвалиду*СтавкиНалогаТФОМС[1]/100;
			
			Таблица.Область("П"+МесяцСтрокой+"15").Значение=СуммавФФОМС-УдержаноФФОМС;
			Таблица.Область("П"+МесяцСтрокой+"26").Значение=НеПодлежитУплатеФФОМС-НеПодлежитУплатеФФОМСПредыдМесяца;
			Таблица.Область("П"+МесяцСтрокой+"30").Значение=(СуммавФФОМС-УдержаноФФОМС)-(НеПодлежитУплатеФФОМС-НеПодлежитУплатеФФОМСПредыдМесяца);
			
			Таблица.Область("П"+МесяцСтрокой+"16").Значение=СуммавТФОМС-УдержаноТФОМС;
			Таблица.Область("П"+МесяцСтрокой+"27").Значение=НеПодлежитУплатеТФОМС-НеПодлежитУплатеТФОМСПредыдМесяца;
			Таблица.Область("П"+МесяцСтрокой+"31").Значение=(СуммавТФОМС-УдержаноТФОМС)-(НеПодлежитУплатеТФОМС-НеПодлежитУплатеТФОМСПредыдМесяца);
			
			Таблица.Область("СНГ"+МесяцСтрокой+"15").Значение=СуммавФФОМС;
			Таблица.Область("СНГ"+МесяцСтрокой+"26").Значение=НеПодлежитУплатеФФОМС;
			Таблица.Область("СНГ"+МесяцСтрокой+"30").Значение=СуммавФФОМС-НеПодлежитУплатеФФОМС;
			
			Таблица.Область("СНГ"+МесяцСтрокой+"16").Значение=СуммавТФОМС;
			Таблица.Область("СНГ"+МесяцСтрокой+"27").Значение=НеПодлежитУплатеТФОМС;
			Таблица.Область("СНГ"+МесяцСтрокой+"31").Значение=СуммавТФОМС-НеПодлежитУплатеТФОМС;
			
			УдержаноТФОМС=СуммавТФОМС;
			УдержаноФФОМС=СуммавФФОМС;
			НеПодлежитУплатеТФОМСПредыдМесяца=НеПодлежитУплатеТФОМС;
			НеПодлежитУплатеФФОМСПредыдМесяца=НеПодлежитУплатеФФОМС;
		Иначе // ЕСН в части фондов ОМС не начисляется - п.2 ст.239 НК РФ
		КонецЕсли;
		
		Таблица.Область("П"+МесяцСтрокой+"08").Текст = "";					
		Таблица.Область("П"+МесяцСтрокой+"10").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"12").Текст = "";
		Таблица.Область("П"+МесяцСтрокой+"18").Текст="";
		Таблица.Область("П"+МесяцСтрокой+"19").Текст="";
		Таблица.Область("СНГ"+МесяцСтрокой+"08").Текст = "";					
		Таблица.Область("СНГ"+МесяцСтрокой+"10").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"12").Текст = "";
		Таблица.Область("СНГ"+МесяцСтрокой+"18").Текст="";
		Таблица.Область("СНГ"+МесяцСтрокой+"19").Текст="";
		
		Если (ИспользоватьРегрессивнуюШкалу = Да) и (НачисленоВсего <> 0) Тогда
			ИмяЯчейки = "П"+МесяцСтрокой+"08";
			Если Макс (((НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-НачисленоЕНВД) - 
			(НачисленоВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-ЛьготВсегоПредыдМесяца-НачисленоЕНВДПредыдМесяца)),0) <>0 Тогда
				
				Если НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-НачисленоЕНВД <= ПределыДоходовЕСН[1] Тогда
					Если НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-НачисленоЕНВД <> 0 Тогда
						Таблица.Область(ИмяЯчейки).Текст = Строка(СтавкиНалогаПФР[1]) + " %";
						Таблица.Область("П"+МесяцСтрокой+"12").Значение = Строка(СтавкиНалогаФФОМС[1]+СтавкиНалогаТФОМС[1]) + " %";				
					КонецЕсли;							
				ИначеЕсли НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-НачисленоЕНВД <= ПределыДоходовЕСН[2] Тогда
					Таблица.Область(ИмяЯчейки).Текст = Строка(ПределыДоходовЕСН[1]*СтавкиНалогаПФР[1]/100) + " руб." + РазделительСтрок + Строка(СтавкиНалогаПФР[2])+ " %";
					Таблица.Область("П"+МесяцСтрокой+"12").Текст = Строка(ПределыДоходовЕСН[1]*(СтавкиНалогаФФОМС[1]+СтавкиНалогаТФОМС[1])/100) + " руб." + РазделительСтрок + Строка(СтавкиНалогаФФОМС[2]+СтавкиНалогаТФОМС[2]) + " %";
					
				ИначеЕсли НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-НачисленоЕНВД <= ПределыДоходовЕСН[3] Тогда
					Таблица.Область(ИмяЯчейки).Текст = Строка(ПределыДоходовЕСН[1]*СтавкиНалогаПФР[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*СтавкиНалогаПФР[2]/100) + " руб." + РазделительСтрок + Строка(СтавкиНалогаПФР[3]) + " %";
					Таблица.Область("П"+МесяцСтрокой+"12").Текст = Строка(ПределыДоходовЕСН[1]*(СтавкиНалогаФФОМС[1]+СтавкиНалогаТФОМС[1])/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*(СтавкиНалогаФФОМС[2]+СтавкиНалогаТФОМС[2])/100) + " руб." + РазделительСтрок + Строка(СтавкиНалогаФФОМС[3]+СтавкиНалогаТФОМС[3]) + " %";
					
				Иначе                	
					Таблица.Область(ИмяЯчейки).Текст = Строка((ПределыДоходовЕСН[3]-ПределыДоходовЕСН[2])*СтавкиНалогаПФР[3]/100 + ПределыДоходовЕСН[1]*СтавкиНалогаПФР[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*СтавкиНалогаПФР[2]/100) + " руб."
					+ РазделительСтрок + Строка(СтавкиНалогаПФР[4]) + " %";
					Таблица.Область("П"+МесяцСтрокой+"12").Текст = Строка((ПределыДоходовЕСН[3]-ПределыДоходовЕСН[2])*(СтавкиНалогаФФОМС[3]+СтавкиНалогаТФОМС[3])/100
					+ ПределыДоходовЕСН[1]*(СтавкиНалогаФФОМС[1]+СтавкиНалогаТФОМС[1])/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*(СтавкиНалогаФФОМС[2]+СтавкиНалогаТФОМС[2])/100) + " руб."
					+ РазделительСтрок + Строка(СтавкиНалогаФФОМС[4]+СтавкиНалогаТФОМС[4]) + " %";
				КонецЕсли;
				ИмяЯчейки = "П"+МесяцСтрокой+"10";
				Если НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-ДоговораПодряда-НачисленоЕНВД <= ПределыДоходовЕСН[1] Тогда
					Если НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-ДоговораПодряда-НачисленоЕНВД <> 0 Тогда
						Таблица.Область(ИмяЯчейки).Текст = Строка(СтавкиНалогаФСС[1]) + " %";
					КонецЕсли;
				ИначеЕсли НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-ДоговораПодряда-НачисленоЕНВД <= ПределыДоходовЕСН[2] Тогда				
					Таблица.Область(ИмяЯчейки).Текст = Строка(ПределыДоходовЕСН[1]*СтавкиНалогаФСС[1]/100) + " руб." + РазделительСтрок + Строка(СтавкиНалогаФСС[2]) + " %";
				ИначеЕсли НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-ДоговораПодряда-НачисленоЕНВД <= ПределыДоходовЕСН[3] Тогда				
					Таблица.Область(ИмяЯчейки).Текст = Строка(ПределыДоходовЕСН[1]*СтавкиНалогаФСС[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*(СтавкиНалогаФСС[2])/100) + " руб." + РазделительСтрок + Строка(СтавкиНалогаФСС[3]) + " %";
				Иначе
					Таблица.Область(ИмяЯчейки).Текст = Строка((ПределыДоходовЕСН[3]-ПределыДоходовЕСН[2])*СтавкиНалогаФСС[3]/100 + ПределыДоходовЕСН[1]*СтавкиНалогаФСС[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*СтавкиНалогаФСС[2]/100) + " руб."
					+ РазделительСтрок + Строка(СтавкиНалогаФСС[4]) + " %";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Таблица.Область("ОБЛ_ПФР_СНГ"+МесяцСтрокой).Текст = Формат(ОблагаемаяПФР,"Ч012.2.");				
		Таблица.Область("НБ_ФБ_СНГ"+МесяцСтрокой).Текст = Формат(НачисленоВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД-СодержаниеПрокуроров-ЛьготВсего - ДовольствиеВоенных,"Ч012.2.");
		Таблица.Область("НБ_ФСС_СНГ"+МесяцСтрокой).Текст = Формат(НачисленоВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД-ЛьготВсего-ДоговораПодряда - ДовольствиеВоенных,"Ч012.2.");
		Таблица.Область("НБ_ОМС_СНГ"+МесяцСтрокой).Текст	= Формат(НачисленоВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД-ЛьготВсего - ДовольствиеВоенных,"Ч012.2.");
		
		// налоговая база текущего месяца
		Таблица.Область("ОБЛ_ПФР"+МесяцСтрокой).Текст = Формат(ОблагаемаяПФР-ОблагаемаяПФРПредыдМесяца,"Ч012.2.");
		Таблица.Область("НБ_ФБ"+МесяцСтрокой).Текст = Формат((НачисленоВсего-НачисленоЗаСчетПрибыли-СодержаниеПрокуроров-ЛьготВсего-НачисленоЕНВД - ДовольствиеВоенных)
								-(НачисленоВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-СодержаниеПрокуроровПредыдМесяца-ЛьготВсегоПредыдМесяца-НачисленоЕНВДПредыдМесяца - ДовольствиеВоенныхПредыдМесяца),"Ч012.2.");
		Таблица.Область("НБ_ФСС"+МесяцСтрокой).Текст = Формат((НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-ДоговораПодряда-НачисленоЕНВД - ДовольствиеВоенных)
								-(НачисленоВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-ЛьготВсегоПредыдМесяца-ДоговораПодрядаПредыдМесяца-НачисленоЕНВДПредыдМесяца - ДовольствиеВоенныхПредыдМесяца),"Ч012.2.");
		Таблица.Область("НБ_ОМС"+МесяцСтрокой).Текст = Формат((НачисленоВсего-НачисленоЗаСчетПрибыли-ЛьготВсего-НачисленоЕНВД - ДовольствиеВоенных)
								-(НачисленоВсегоПредыдМесяца-НачисленоЗаСчетПрибылиПредыдМесяца-ЛьготВсегоПредыдМесяца-НачисленоЕНВДПредыдМесяца - ДовольствиеВоенныхПредыдМесяца),"Ч012.2.");
								
		Если (ИспользоватьРегрессивнуюШкалуПФР = Да) и (ОблагаемаяПФРЕНВД <> 0) и (НачисленоВсего <> 0) и (ПустоеЗначение(Таблица.Область("ОБЛ_ПФР"+МесяцСтрокой).Текст)=0) Тогда
			Если ОблагаемаяПФРЕНВД <= ПределыДоходовЕСН[1] Тогда
				Таблица.Область("П"+МесяцСтрокой+"18").Текст = Строка(СтавкиВзносаПФРСтраховаяЧасть[1]) + " %";
				Таблица.Область("П"+МесяцСтрокой+"19").Текст = Строка(СтавкиВзносаПФРНакопительнаяЧасть[1]) + " %";
			
			ИначеЕсли ОблагаемаяПФРЕНВД <= ПределыДоходовЕСН[2] Тогда				
				Таблица.Область("П"+МесяцСтрокой+"18").Текст = Строка(ПределыДоходовЕСН[1]*СтавкиВзносаПФРСтраховаяЧасть[1]/100) + " руб."
				+ РазделительСтрок + Строка(СтавкиВзносаПФРСтраховаяЧасть[2]) + " %";
				
				Таблица.Область("П"+МесяцСтрокой+"19").Текст = Строка(ПределыДоходовЕСН[1]*СтавкиВзносаПФРНакопительнаяЧасть[1]/100) + " руб."
				+ РазделительСтрок + Строка(СтавкиВзносаПФРНакопительнаяЧасть[2]) + " %";
			
			ИначеЕсли ОблагаемаяПФРЕНВД <= ПределыДоходовЕСН[3] Тогда				
				Таблица.Область("П"+МесяцСтрокой+"18").Текст = Строка(ПределыДоходовЕСН[1]*СтавкиВзносаПФРСтраховаяЧасть[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*(СтавкиВзносаПФРСтраховаяЧасть[2])/100) + " руб."
				+ РазделительСтрок + Строка(СтавкиВзносаПФРСтраховаяЧасть[3]) + " %";
				
				Таблица.Область("П"+МесяцСтрокой+"19").Текст = Строка(ПределыДоходовЕСН[1]*СтавкиВзносаПФРНакопительнаяЧасть[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*(СтавкиВзносаПФРНакопительнаяЧасть[2])/100) + " руб."
				+ РазделительСтрок + Строка(СтавкиВзносаПФРНакопительнаяЧасть[3]) + " %";
			
			Иначе
				Таблица.Область("П"+МесяцСтрокой+"18").Текст = Строка((ПределыДоходовЕСН[3]-ПределыДоходовЕСН[2])*СтавкиВзносаПФРСтраховаяЧасть[3]/100 + ПределыДоходовЕСН[1]*СтавкиВзносаПФРСтраховаяЧасть[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*СтавкиВзносаПФРСтраховаяЧасть[2]/100) + " руб."
				+ РазделительСтрок + Строка(СтавкиВзносаПФРСтраховаяЧасть[4]) + " %";
				
				Таблица.Область("П"+МесяцСтрокой+"19").Текст = Строка((ПределыДоходовЕСН[3]-ПределыДоходовЕСН[2])*СтавкиВзносаПФРНакопительнаяЧасть[3]/100 + ПределыДоходовЕСН[1]*СтавкиВзносаПФРНакопительнаяЧасть[1]/100 + (ПределыДоходовЕСН[2]-ПределыДоходовЕСН[1])*СтавкиВзносаПФРНакопительнаяЧасть[2]/100) + " руб."
				+ РазделительСтрок + Строка(СтавкиВзносаПФРНакопительнаяЧасть[4]) + " %";
			КонецЕсли;
		КонецЕсли;
		
		Если Год < 2005 Тогда
    		Если (РегрессивнаяШкала.Получить(КонМесяца(Дата(Год,Месяц,15))) = Нет) и (НачисленоВсего <> 0) Тогда                                                                                                      
				Таблица.Область("СНГ"+МесяцСтрокой+"08").Текст = Строка(СтавкиНалогаПФР[1]) + " %";					
				Таблица.Область("СНГ"+МесяцСтрокой+"10").Текст = Строка(СтавкиНалогаФСС[1])+" %";
				Таблица.Область("СНГ"+МесяцСтрокой+"12").Текст = Строка(СтавкиНалогаФФОМС[1]+СтавкиНалогаТФОМС[1])+" %";
			КонецЕсли;
		КонецЕсли;
		
		// колонка "Начислено взносов" 
      
		Таблица.Область("СНГ"+МесяцСтрокой+"20").Текст=Формат(УдержаноПФРнаСтраховуюПенсиюДляВывода+УдержаноПФРнаНакопительнуюПенсиюДляВывода,"Ч018.5.");
		Таблица.Область("СНГ"+МесяцСтрокой+"21").Текст=Формат(УдержаноПФРнаСтраховуюПенсиюДляВывода,"Ч018.5.");
		Таблица.Область("СНГ"+МесяцСтрокой+"22").Текст=Формат(УдержаноПФРнаНакопительнуюПенсиюДляВывода,"Ч018.5.");

		Таблица.Область("СНГ"+МесяцСтрокой+"23").Текст=Формат(НачисленоИнвалиду,"Ч018.5.");
		
		Если (ИспользоватьРегрессивнуюШкалуПФР = Нет) и (ОблагаемаяПФРЕНВД <> 0)  и (НачисленоВсего <> 0) Тогда
			Таблица.Область("СНГ"+МесяцСтрокой+"18").Текст=Строка(СтавкиВзносаПФРСтраховаяЧасть[1])+" %";
			Таблица.Область("СНГ"+МесяцСтрокой+"19").Текст=Строка(СтавкиВзносаПФРНакопительнаяЧасть[1])+" %";
		КонецЕсли;
						
		НачисленоВсегоПредыдМесяца = НачисленоВсего;
		ЛьготВсегоПредыдМесяца = ЛьготВсего;
		НачисленоИнвалидуПредыдМесяца = НачисленоИнвалиду;
		НачисленоИнвалидуФССПредыдМесяца = НачисленоИнвалидуФСС;
		НачисленоЗаСчетПрибылиПредыдМесяца = НачисленоЗаСчетПрибыли;
		НачисленоЕНВДПредыдМесяца = НачисленоЕНВД;
		ДоговораПодрядаПредыдМесяца = ДоговораПодряда;
		ПрочихЛьготПоСт238ПредыдМесяца = ПрочихЛьготПоСт238;
		СодержаниеПрокуроровПредыдМесяца = СодержаниеПрокуроров;
		ДовольствиеВоенныхПредыдМесяца = ДовольствиеВоенных;
		
		ЕСНОблагаемаяФБПредыдМесяца = ЕСНОблагаемаяФБ;
		ЕСНОблагаемаяФССПредыдМесяца = ЕСНОблагаемаяФСС;
		ЕСНОблагаемаяОМСПредыдМесяца = ЕСНОблагаемаяОМС;
		ОблагаемаяПФРПредыдМесяца = ОблагаемаяПФР;
		ОблагаемаяПФРЕНВДПредыдМесяца = ОблагаемаяПФРЕНВД;
		НачисленоИностранцуПредыдМесяца = НачисленоИностранцу;
		ЛицензионныеПредыдМесяца = Лицензионные;
	КонецЦикла;
	
КонецПроцедуры // ПриВводеДоходов


//*****************************************************************************
// ПриВводеНалогов()
//
// Параметры
//		нет
//
// Вызывается из ячеек табличного документа
//		в колонках с 28 По 31
//
// Возвращаемое значение
//		нет
//
// Описание
//		обеспечивает пересчет строк "с начала года" в "затронутой" колонке
//		
Процедура ПриВводеНалогов()

	ОпределитьЦвет();
	
	Имя=Таблица.АктивнаяОбласть(); // имя ячейки, в которой изменили данные
	Если Таблица.Область(Имя).Доступность() = 0 Тогда
		Возврат
	КонецЕсли;
	
	НомерКолонки = Прав(Имя,2);
	МесяцРедактирования=Число(Сред(Имя,2,2)); // месяц, в котором изменили данные: начиная с этого месяца все надо пересчитывать
	ПоследнийМесяц=Макс(ПоследнийМесяц,МесяцРедактирования); // возможно заполнили очередной месяц - будем обновлять таблицу по этот месяц
	
	БылоВКолонке=0;
	Если МесяцРедактирования>1 Тогда
		БылоВКолонке=Число(Таблица.Область("СНГ"+глДополнитьСтроку(МесяцРедактирования-1,2)+НомерКолонки).Текст);
	КонецЕсли;         
	
	Таблица.Область("СНГ"+Прав(Имя,4)).Текст=Формат(БылоВКолонке+Таблица.Область(Имя).Значение,"Ч018.5."); // текущая строка "с начала года"
	Если (НомерКолонки = "21") или (НомерКолонки = "22") Тогда
		Таблица.Область("П"+глДополнитьСтроку(МесяцРедактирования,2)+"20").Текст = Формат(Число(Таблица.Область("П"+глДополнитьСтроку(МесяцРедактирования,2)+"21").Текст) + Число(Таблица.Область("П"+глДополнитьСтроку(МесяцРедактирования,2)+"22").Текст),"Ч018.5.");
		Если МесяцРедактирования>1 Тогда
			Таблица.Область("СНГ"+глДополнитьСтроку(МесяцРедактирования,2)+"20").Текст=Формат(Число(Таблица.Область("СНГ"+глДополнитьСтроку(МесяцРедактирования-1,2)+"20").Текст) + Число(Таблица.Область("П"+глДополнитьСтроку(МесяцРедактирования,2)+"20").Текст),"Ч018.5."); // текущая строка "с начала года"
		КонецЕсли;
	КонецЕсли;
	
	// пересчитываем строки "с начала года" 
	Для Месяц = МесяцРедактирования+1 По ПоследнийМесяц Цикл
		ТекущийМесяцСтрокой=глДополнитьСтроку(Месяц,2);
		ПрошлыйМесяцСтрокой=глДополнитьСтроку(Месяц-1,2);
		Таблица.Область("СНГ"+ТекущийМесяцСтрокой+НомерКолонки).Текст=Формат(Число(Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+НомерКолонки).Текст)+Таблица.Область("П"+ТекущийМесяцСтрокой+НомерКолонки).Значение,"Ч018.5.");
		Если (НомерКолонки = "21") или (НомерКолонки = "22") Тогда
			Таблица.Область("СНГ"+ТекущийМесяцСтрокой+"20").Текст=Формат(Число(Таблица.Область("СНГ"+ПрошлыйМесяцСтрокой+"20").Текст)+Таблица.Область("П"+ТекущийМесяцСтрокой+"20").Значение,"Ч018.5.");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //ПриВводеНалогов 

//*****************************************************************************
// Сохранить()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Сохранить
//
// Возвращаемое значение
//		число 1 или 0 - удалось (не удалось) сохранить данные
//
// Описание
//
Функция Сохранить()
	
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	Если глСпискиИдентичны(СЗТекущееСостояние,ИсходнаяТаблица) = 0 Тогда
		
		// соберем данные о доходах
		ДоходыВычетыНалогиСотрудников = "";
		ДопДанныеФизЛица = "";

		Если глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников,ФизЛицо,КонГода(Дата(Год,12,15)),"",0,2,,,,ДопДанныеФизЛица) <> 1 Тогда
			Предупреждение("Не удалось сохранить данные!",8);
			Возврат 0   
		КонецЕсли;
		
		ДоходыВычетыНалогиСотрудников1 = "";
		Если глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников1,ФизЛицо,КонГода(Дата(Год,12,15)),"",0,1,,,,ДопДанныеФизЛица) <> 1 Тогда
			Предупреждение("Не удалось сохранить данные!",8);
			Возврат 0   
		КонецЕсли;
		
		СтрокаИтоговойТаблицы = 0;
		
		КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(ФизЛицо.Код);
		НомСтрокиСотрудника = 0;
		Если ДоходыВычетыНалогиСотрудников.НайтиЗначение(КодСотраВтаблице+"01", НомСтрокиСотрудника, 1) = 0 Тогда
			Возврат 0;
			
		Иначе
			НомСтрокиСотрудника = НомСтрокиСотрудника - 1;
		КонецЕсли;
				
		НачисленоВсего = 0;		
		Лицензионные = 0;
		ЕНВД = 0;
		НачисленоИностранцу = 0;
		НачисленоЗаСчетПрибыли = 0;
		ЛьготаПоЕСНп1ст236 = 0;
		ЛьготаПоЕСНп2ст238абз2 = 0;
		ЛьготаПоЕСНп2ст238абз3 = 0;
		ЛьготаПоЕСНпп13п1ст238 = 0;
		ПрочихЛьготПоСт238 = 0;
		ДоговораПодряда = 0;
		ДенежноеСодержаниеПрокуроров = 0;
		УдержаноПФРнаСтраховуюПенсию = 0;
		УдержаноПФРнаНакопительнуюПенсию = 0;
		НачисленоИнвалиду = 0;
		ПФРУд = 0;
		ФССУд = 0;
		ФФОМСУд = 0;
		ТФОМСУд = 0;
		ПособийЗаСчетФСС = 0;
		ДовольствиеВоенных = 0;
		ОблагаетсяПФР = 0;
		
		НачисленоИнвалидуФССПредыдМесяца = 0;
		ЛьготВсего = 0;
		
		КоличествоДанных = ?(ЕстьЕНВД = 0,25,31);  
		СписокВведенныхДанных = СоздатьОбъект("СписокЗначений");
		Для Сч = 1 По 12 Цикл
			
			МесяцОсмотра = Сч;
			МесяцСтрокой = глДополнитьСтроку(МесяцОсмотра,2);
			
			КонецМесяца = КонМесяца(Дата(Год, Сч, 1));
			Инвалид = ФизЛицо.Инвалид.Получить(КонецМесяца);
			Если Инвалид = 1 Тогда
			    НачисленоИнвалидуФСС = НачисленоИнвалидуФССПредыдМесяца-(НачисленоВсего-ЛьготВсего-НачисленоЗаСчетПрибыли-ЕНВД-ДоговораПодряда);
			КонецЕсли;

			НачисленоВсего = НачисленоВсего + Таблица.Область("П"+МесяцСтрокой+"02").Значение+Таблица.Область("П"+МесяцСтрокой+"02а","НачисленоВсего").Значение;		
			Лицензионные = Лицензионные + Таблица.Область("П"+МесяцСтрокой+"02а").Значение;
			ЕНВД = ЕНВД + Таблица.Область("П"+МесяцСтрокой+"02б").Значение;
			НачисленоИностранцу = НачисленоИностранцу + Таблица.Область("П"+МесяцСтрокой+"02в").Значение;
			НачисленоЗаСчетПрибыли = НачисленоЗаСчетПрибыли + Таблица.Область("П"+МесяцСтрокой+"03").Значение;
			ЛьготВсего = ЛьготВсего + Таблица.Область("ВСЕГО"+МесяцСтрокой).Значение;
			ЛьготаПоЕСНп1ст236 = ЛьготаПоЕСНп1ст236 + Таблица.Область("П"+МесяцСтрокой+"04а").Значение;
			ЛьготаПоЕСНп2ст238абз2 = ЛьготаПоЕСНп2ст238абз2 + Таблица.Область("П"+МесяцСтрокой+"04б").Значение;
			ЛьготаПоЕСНп2ст238абз3 = ЛьготаПоЕСНп2ст238абз3 + Таблица.Область("П"+МесяцСтрокой+"04в").Значение;
			ЛьготаПоЕСНпп13п1ст238 = ЛьготаПоЕСНпп13п1ст238 + Таблица.Область("П"+МесяцСтрокой+"04г").Значение;
			ПрочихЛьготПоСт238 = ПрочихЛьготПоСт238 + Таблица.Область("П"+МесяцСтрокой+"04д").Значение-Таблица.Область("П"+МесяцСтрокой+"32").Значение;
			ДоговораПодряда = ДоговораПодряда + Таблица.Область("П"+МесяцСтрокой+"05").Значение;
			ДенежноеСодержаниеПрокуроров = ДенежноеСодержаниеПрокуроров + Таблица.Область("П"+МесяцСтрокой+"06").Значение;
			УдержаноПФРнаСтраховуюПенсию = УдержаноПФРнаСтраховуюПенсию + Таблица.Область("П"+МесяцСтрокой+"21").Значение;
			УдержаноПФРнаНакопительнуюПенсию = УдержаноПФРнаНакопительнуюПенсию + Таблица.Область("П"+МесяцСтрокой+"22").Значение;
			НачисленоИнвалиду = НачисленоИнвалиду + Таблица.Область("П"+МесяцСтрокой+"23").Значение;
			ПФРУд = ПФРУд + Таблица.Область("П"+МесяцСтрокой+"28").Значение;
			ФССУд = ФССУд + Таблица.Область("П"+МесяцСтрокой+"29").Значение;
			ФФОМСУд = ФФОМСУд + Таблица.Область("П"+МесяцСтрокой+"30").Значение;
			ТФОМСУд = ТФОМСУд + Таблица.Область("П"+МесяцСтрокой+"31").Значение;
			ПособийЗаСчетФСС = ПособийЗаСчетФСС + Таблица.Область("П"+МесяцСтрокой+"32").Значение;
			ДовольствиеВоенных = ДовольствиеВоенных + Таблица.Область("П"+МесяцСтрокой+"33").Значение;
			ОблагаетсяПФР = ОблагаетсяПФР + Таблица.Область("ОБЛ_ПФР"+МесяцСтрокой).Значение;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 10, НачисленоВсего);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 24, Лицензионные);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 25, ЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 33, НачисленоИностранцу);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 13, НачисленоЗаСчетПрибыли);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 12, ЛьготаПоЕСНп1ст236);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 14, ЛьготаПоЕСНп2ст238абз2);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 15, ЛьготаПоЕСНп2ст238абз3);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 16, ЛьготаПоЕСНпп13п1ст238);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 17, ПрочихЛьготПоСт238);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч,  9, ПособийЗаСчетФСС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 18, ДоговораПодряда);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 19, ДенежноеСодержаниеПрокуроров);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч,  5, ПФРУд);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч,  8, ФССУд);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч,  6, ФФОМСУд);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч,  7, ТФОМСУд);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 11, ДовольствиеВоенных);
			
			КонецМесяца = КонМесяца(Дата(Год, Сч, 1));
			Инвалид = ФизЛицо.Инвалид.Получить(КонецМесяца);
			Если Инвалид = 1 Тогда
			    НачисленоИнвалидуФСС = Мин(НачисленоИнвалидуФСС + (НачисленоВсего-ЛьготВсего-НачисленоЗаСчетПрибыли-ЕНВД-ДоговораПодряда),100000);
				НачисленоИнвалидуФССПредыдМесяца = НачисленоИнвалидуФСС;
			КонецЕсли;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 20, НачисленоИнвалиду);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, "ЛьготаИнвалидуФдБ", НачисленоИнвалиду);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, "ЛьготаИнвалидуФСС", НачисленоИнвалидуФСС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, "ЛьготаИнвалидуОМС", НачисленоИнвалиду);
			
			//БылоОблагаемаяПФР = ИсходнаяТаблица.Получить("ОБЛ_ПФР"+МесяцСтрокой);
			БылоСтраховойЧасти = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 42);
			БылоНакопительнойЧасти = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 43);
			БылоЛьготаПоЕСНп1ст236 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 12);
			БылоЛьготаПоЕСНп2ст238абз2 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 14);
			БылоЛьготаПоЕСНп2ст238абз3 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 15);
			БылоЛьготаПоЕСНпп13п1ст238 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 16);
			БылоПрочихЛьготПоСт238 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 17);
			БылоПособийЗаСчетФСС = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 9);
			
			БылоНачисленоВсего = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 10);
			БылоЕНВД = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 25);
			БылоНачисленоИностранцу = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 33);
			БылоНачисленоЗаСчетПрибыли = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 13);
			БылоДенежноеСодержаниеПрокуроров = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 19);
			
			БылоОблагаемаяПФР = БылоНачисленоВсего -
								БылоЕНВД - 
								БылоНачисленоИностранцу -
								БылоНачисленоЗаСчетПрибыли - 
								БылоДенежноеСодержаниеПрокуроров - 
								БылоЛьготаПоЕСНп1ст236 - 
								БылоЛьготаПоЕСНп2ст238абз2 - 
								БылоЛьготаПоЕСНп2ст238абз3 - 
								БылоЛьготаПоЕСНпп13п1ст238 - 
								БылоПрочихЛьготПоСт238 - 
								БылоПособийЗаСчетФСС;
			
			ИзменениеОблагаемаяПФР = ОблагаетсяПФР - БылоОблагаемаяПФР;
			ИзменениеСтраховойЧасти = УдержаноПФРнаСтраховуюПенсию - БылоСтраховойЧасти;
			ИзменениеНакопительнойЧасти = УдержаноПФРнаНакопительнуюПенсию - БылоНакопительнойЧасти;
			ИзменениеЛьготаПоЕСНп1ст236 = ЛьготаПоЕСНп1ст236 - БылоЛьготаПоЕСНп1ст236;
			ИзменениеЛьготаПоЕСНп2ст238абз2 = ЛьготаПоЕСНп2ст238абз2 - БылоЛьготаПоЕСНп2ст238абз2;
			ИзменениеЛьготаПоЕСНп2ст238абз3 = ЛьготаПоЕСНп2ст238абз3 - БылоЛьготаПоЕСНп2ст238абз3;
			ИзменениеЛьготаПоЕСНпп13п1ст238 = ЛьготаПоЕСНпп13п1ст238 - БылоЛьготаПоЕСНпп13п1ст238;
			ИзменениеПрочихЛьготПоСт238 = ПрочихЛьготПоСт238 - БылоПрочихЛьготПоСт238;
			ИзменениеПособийЗаСчетФСС = ПособийЗаСчетФСС - БылоПособийЗаСчетФСС;
			ИзменениеНачисленоИностранцу = НачисленоИностранцу - БылоНачисленоИностранцу;
			
			БылоОблагаемаяПФРВсего = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 23);
			БылоСтраховойЧастиВсего = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 21);
			БылоНакопительнойЧастиВсего = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 22);
			БылоЛьготаПоЕСНп1ст236 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 26);
			БылоЛьготаПоЕСНп2ст238абз2 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 27);
			БылоЛьготаПоЕСНп2ст238абз3 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 28);
			БылоЛьготаПоЕСНпп13п1ст238 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 29);
			БылоПрочихЛьготПоСт238 = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 30);
			БылоПособийЗаСчетФСС = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 31);
			БылоНачисленоИностранцу = ДоходыВычетыНалогиСотрудников1.ПолучитьЗначение(НомСтрокиСотрудника + Сч, 41);
			
			СталоОблагаемаяПФРВсего = БылоОблагаемаяПФРВсего + ИзменениеОблагаемаяПФР;
			СталоСтраховойЧастиВсего = БылоСтраховойЧастиВсего + ИзменениеСтраховойЧасти;
			СталоНакопительнойЧастиВсего = БылоНакопительнойЧастиВсего + ИзменениеНакопительнойЧасти;
			СталоЛьготаПоЕСНп1ст236 = БылоЛьготаПоЕСНп1ст236 + ИзменениеЛьготаПоЕСНп1ст236;
			СталоЛьготаПоЕСНп2ст238абз2 = БылоЛьготаПоЕСНп2ст238абз2 + ИзменениеЛьготаПоЕСНп2ст238абз2;
			СталоЛьготаПоЕСНп2ст238абз3 = БылоЛьготаПоЕСНп2ст238абз3 + ИзменениеЛьготаПоЕСНп2ст238абз3;
			СталоЛьготаПоЕСНпп13п1ст238 = БылоЛьготаПоЕСНпп13п1ст238 + ИзменениеЛьготаПоЕСНпп13п1ст238;
			СталоПрочихЛьготПоСт238 = БылоПрочихЛьготПоСт238 + ИзменениеПрочихЛьготПоСт238;
			СталоПособийЗаСчетФСС = БылоПособийЗаСчетФСС + ИзменениеПособийЗаСчетФСС;
			СталоНачисленоИностранцу = БылоНачисленоИностранцу + ИзменениеНачисленоИностранцу;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 42, УдержаноПФРнаСтраховуюПенсию);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 43, УдержаноПФРнаНакопительнуюПенсию);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 23, СталоОблагаемаяПФРВсего);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 21, СталоСтраховойЧастиВсего);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 22, СталоНакопительнойЧастиВсего);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 26, СталоЛьготаПоЕСНп1ст236);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 27, СталоЛьготаПоЕСНп2ст238абз2);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 28, СталоЛьготаПоЕСНп2ст238абз3);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 29, СталоЛьготаПоЕСНпп13п1ст238);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 30, СталоПрочихЛьготПоСт238);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 31, СталоПособийЗаСчетФСС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомСтрокиСотрудника + Сч, 41, СталоНачисленоИностранцу);
		КонецЦикла; 
		
		// Таблицу в список
		Карточка = СоздатьОбъект("СписокЗначений");
		Для НомСтроки = 1 по 12 Цикл
			СтрокаКарточки = СоздатьОбъект("СписокЗначений");
			Для НомКолонки = 1 по ДоходыВычетыНалогиСотрудников.КоличествоКолонок() Цикл
				КодКолонки = ДоходыВычетыНалогиСотрудников.ПолучитьПараметрыКолонки(НомКолонки);
				СтрокаКарточки.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомСтроки, НомКолонки), КодКолонки);
			КонецЦикла;
			Карточка.ДобавитьЗначение(СтрокаКарточки);
		КонецЦикла;                                   
		Карточка.ДобавитьЗначение(Таблица.Область("Гражданство").Значение);
		Карточка.ДобавитьЗначение(Таблица.Область("ДоговорНомер").Значение);
		Карточка.ДобавитьЗначение(Таблица.Область("ДатаДолжность").Значение);
		Карточка.ДобавитьЗначение(Таблица.Область("П001").Значение);
		Карточка.ДобавитьЗначение(Таблица.Область("П002").Значение);
		Карточка.ДобавитьЗначение(Таблица.Область("П003").Значение);
		
		// Запись в справочник
		СпрИтоговПоГоду = СоздатьОбъект("Справочник.КарточкиУчетаДоходов");
		СпрИтоговПоГоду.ИспользоватьВладельца(ФизЛицо);
		
		// Поиск карточки в справочнике
		Если СпрИтоговПоГоду.НайтиПоКоду(Строка(Год)) = 0 Тогда
		    СпрИтоговПоГоду.Новый();
			СпрИтоговПоГоду.Код = Строка(Год);
			
		Иначе
			СпрИтоговПоГоду.ВыбратьЭлементы();
			СписокЭлементов = СоздатьОбъект("СписокЗначений");
			Пока СпрИтоговПоГоду.ПолучитьЭлемент() = 1 Цикл
				Если СпрИтоговПоГоду.Код = Строка(Год) Тогда
					СписокЭлементов.ДобавитьЗначение(СпрИтоговПоГоду.ТекущийЭлемент());
				КонецЕсли;
			КонецЦикла;
			// в справочнике должен быть только один элемент
			// с данными за каждый год 
			Элемент = СписокЭлементов.ПолучитьЗначение(1);
			СписокЭлементов.УдалитьЗначение(1);
			// лишние элементы (возможно, появившиеся в распределенных ИБ) - удалим
			Если СписокЭлементов.РазмерСписка() > 0 Тогда
				Для индСписка = 1 по СписокЭлементов.РазмерСписка() Цикл
					СпрИтоговПоГоду.НайтиЭлемент(СписокЭлементов.ПолучитьЗначение(индСписка));
					СпрИтоговПоГоду.Удалить(1);
				КонецЦикла;
				СписокЭлементов.УдалитьВсе();
			КонецЕсли;
			СпрИтоговПоГоду.НайтиЭлемент(Элемент);		
		КонецЕсли;
		
		СтрокаДанных = ЗначениеВСтроку(Карточка);
		СпрИтоговПоГоду.СписокПолейИндивидульнойКарточки = СтрокаДанных;
		СпрИтоговПоГоду.Записать();
		
		//чтобы не спрашивала о сохранении потом снова:
		Таблица.Выгрузить(ИсходнаяТаблица);

		//Запись реквизитов справочника "Сотрудники".
		Сотрудник = ФизЛицо;
		Если (ДатаГод(Сотрудник.ДатаПриема) = Год) и (ДатаМесяц(Сотрудник.ДатаПриема) > 1) Тогда
			Сотр = СоздатьОбъект("Справочник.Сотрудники");
			Сотр.НайтиЭлемент(Сотрудник);
			а = ДатаМесяц(Сотрудник.ДатаПриема) - 1;
			Изм = 0;
			
			ТекМесяц = "31.01." + Год;
			Для НомерМесяца = 1 по а Цикл
				Месяц = Формат(НомерМесяца,"Ч(0)2");
				
				ЛьготаИнвалида = Таблица.Область("П" + Месяц + "23").Значение;
				
				БазаЕСН = Таблица.Область("НБ_ФБ"	+ Месяц).Значение - ЛьготаИнвалида;
				БазаФСС = Таблица.Область("НБ_ФСС"	+ Месяц).Значение - ЛьготаИнвалида;
				БазаПФР = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерМесяца, 23) - ?(НомерМесяца=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерМесяца-1, 23));
				
				БазаЕСНвСправочнике = Сотр.ДоходОблагаемыйЕСН_СНачалаГода.Получить(ТекМесяц);
				Если БазаЕСНвСправочнике <> БазаЕСН Тогда
				    Сотр.ДоходОблагаемыйЕСН_СНачалаГода.Установить(ТекМесяц, БазаЕСН);
					Изм = 1;
				КонецЕсли;
				
				БазаФССвСправочнике = Сотр.ДоходОблагаемыйЕСН_ФСС_СНачалаГода.Получить(ТекМесяц);
				Если БазаФССвСправочнике <> БазаФСС Тогда
				    Сотр.ДоходОблагаемыйЕСН_ФСС_СНачалаГода.Установить(ТекМесяц, БазаФСС);
					Изм = 1;
				КонецЕсли;
				
				БазаПФРвСправочнике = Сотр.ДоходОблагаемыйПФР_СНачалаГода.Получить(ТекМесяц);
				Если БазаПФРвСправочнике <> БазаПФР Тогда
				    Сотр.ДоходОблагаемыйПФР_СНачалаГода.Установить(ТекМесяц, БазаПФР);
					Изм = 1;
				КонецЕсли;
				
				ТекМесяц = КонМесяца(ДобавитьМесяц(ТекМесяц, 1));
			КонецЦикла;
			
			ЛьготаИнвалида = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "24").Значение;
			НачисленныйЕСН_ПФР_СНачалаГода 	 = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "13").Значение - ЛьготаИнвалида;
			
			ЛьготаИнвалида = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "25").Значение;
			НачисленныйЕСН_ФСС_СНачалаГода 	 = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "14").Значение - ЛьготаИнвалида;
			
			ЛьготаИнвалида = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "26").Значение;
			НачисленныйЕСН_ФОМС_СНачалаГода  = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "15").Значение - ЛьготаИнвалида;
			
			ЛьготаИнвалида = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "27").Значение;
			НачисленныйЕСН_ТОМС_СНачалаГода  = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "16").Значение - ЛьготаИнвалида;
			
			НачисленныйПФР_страх_СНачалаГода = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "21").Значение;
			НачисленныйПФР_нак_СНачалаГода 	 = Таблица.Область("СНГ" + Формат(а,"Ч(0)2") + "22").Значение;
			
			Если (Сотр.НачисленныйЕСН_ПФР_СНачалаГода 		<> НачисленныйЕСН_ПФР_СНачалаГода) 		или
				 (Сотр.НачисленныйЕСН_ФСС_СНачалаГода 		<> НачисленныйЕСН_ФСС_СНачалаГода) 		или
				 (Сотр.НачисленныйЕСН_ФОМС_СНачалаГода		<> НачисленныйЕСН_ФОМС_СНачалаГода) 	или
				 (Сотр.НачисленныйЕСН_ТОМС_СНачалаГода		<> НачисленныйЕСН_ТОМС_СНачалаГода) 	или
				 (Сотр.НачисленныйПФР_страх_СНачалаГода		<> НачисленныйПФР_страх_СНачалаГода)	или
				 (Сотр.НачисленныйПФР_нак_СНачалаГода		<> НачисленныйПФР_нак_СНачалаГода) 		Тогда
				 	                                   	
				Сотр.НачисленныйЕСН_ПФР_СНачалаГода		 = НачисленныйЕСН_ПФР_СНачалаГода;
				Сотр.НачисленныйЕСН_ФСС_СНачалаГода		 = НачисленныйЕСН_ФСС_СНачалаГода;
				Сотр.НачисленныйЕСН_ФОМС_СНачалаГода	 = НачисленныйЕСН_ФОМС_СНачалаГода;
				Сотр.НачисленныйЕСН_ТОМС_СНачалаГода	 = НачисленныйЕСН_ТОМС_СНачалаГода;
				Сотр.НачисленныйПФР_страх_СНачалаГода 	 = НачисленныйПФР_страх_СНачалаГода;
				Сотр.НачисленныйПФР_нак_СНачалаГода 	 = НачисленныйПФР_нак_СНачалаГода;
				
				Попытка
					Сотр.Записать();
				    Изм = 1;
					
				Исключение
					Предупреждение("Неудачная попытка записать начальные данные 
									|расчета ЕСН в справочник ""Сотрудники"".
									|Запись """+Сотрудник+""" заблокирована.");
					Возврат 0;
				КонецПопытки;
			КонецЕсли;
			
			Если Изм = 1 Тогда
				Сообщить("В справочник ""Сотрудники"" записаны начальные данные расчета ЕСН сотрудника "+Сотрудник);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	//заполним буфер карточки с данными из справочника заново(остальные буферы не нужны)
	Если ТипЗначенияСтр(БуферРазделовСпр)<>"СписокЗначений" Тогда
		БуферРазделовСпр=СоздатьОбъект("СписокЗначений");
	КонецЕсли;
	БуферРазделовСпр.УдалитьВсе();
	
	Буфер=СоздатьОбъект("СписокЗначений");

	//придется еще раз собрать налоги, чтобы получить ДоходыВычетыНалогиСотрудников с сохраненными результатами
	ДоходыВычетыНалогиСотрудников = ""; 
	ДопДанныеФизЛица = "";
	
	глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников,ФизЛицо,КонГода(Дата(Год,12,15)),,,,1,,,ДопДанныеФизЛица); 
	
	глЗаполнитьИндивидуальнуюКарточкуПоЕСН2004(ФизЛицо,Год,0,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,0,Буфер,ПоследнийМесяц,БуферРазделовСпр,ТаблицаРасшифровокПоВР,,ДопДанныеФизЛица);
	
	Возврат 1
	
КонецФункции //Сохранить

//******************************************************************************
// ПолучитьЗаголовок()
//
// Параметры:
//		ИмяОбл - Имя ячейки таблицы
// Вызывается при расшифровке ячеек таблицы индивидуальной карточки по ЕСН
//
// Возвращаемое значение
//		Название заголовка окна для ячейки, которую нужно расшифровать
//
// Описание:
//
Функция ПолучитьЗаголовокОкна(ИмяОбл)
	
	НомерМесяца = Число(Сред(ИмяОбл,2,2));
	Если (НомерМесяца<=12) и (НомерМесяца>=1) Тогда
		Если Прав(ИмяОбл,2)="02" Тогда
			ИмяЗаголовка = "Начислено выплат и иных вознагр. по трудовым, гражданск.- правов., авторским договорам - ВСЕГО в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="02а" Тогда
			ИмяЗаголовка = "Начислено выплат по лицензионным договорам в "+НазваниеМесяца[НомерМесяца];			
		ИначеЕсли Прав(ИмяОбл,2)="03" Тогда
			ИмяЗаголовка = "Выплаты, не отнесенные к расходам, уменьшающим налоговую базу по налогу на прибыль в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="05" Тогда
			ИмяЗаголовка = "Выплаты по договорам, не облагаемые в ФСС РФ (п.3 ст.238 НК РФ) в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="02б" Тогда
			ИмяЗаголовка = "Начислено по видам деятельности, переведенным на уплату ЕНВД в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="04а" Тогда
			ИмяЗаголовка = "Выплаты, не подлежащие налогообложению до 1 000 руб. в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="04б" Тогда
			ИмяЗаголовка = "Выплаты, не подлежащие налогообложению до 2 000 руб.(мат. помощь) в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="04в" Тогда
			ИмяЗаголовка = "Выплаты, не подлежащие налогообложению до 2 000 руб.(оплата медикаментов) в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="04г" Тогда
			ИмяЗаголовка = "Выплаты, не подлежащие налогообложению до 10 000 руб. в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,3)="04д" Тогда
			ИмяЗаголовка = "Выплаты, не подлежащие налогообложению, прочие выплаты в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="06" Тогда
			ИмяЗаголовка = "Налоговые льготы в фед. бюдж. п.п.3,4 ст.245 НК РФ в "+НазваниеМесяца[НомерМесяца];			
		ИначеЕсли Прав(ИмяОбл,2)="23" Тогда
			ИмяЗаголовка = "Налоговые льготы в соотв. со ст.239 НК РФ в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="33" Тогда
			ИмяЗаголовка = "Налоговые льготы в соотв. с п.2 ст.245  НК РФ в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="28" Тогда
			ИмяЗаголовка = "Начислено авансовых платежей по ЕСН в федеральный бюджет в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="29" Тогда
			ИмяЗаголовка = "Начислено авансовых платежей по ЕСН в ФСС РФ в "+НазваниеМесяца[НомерМесяца];			
		ИначеЕсли Прав(ИмяОбл,2)="30" Тогда
			ИмяЗаголовка = "Начислено авансовых платежей по ЕСН в ФФОМС в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="31" Тогда
			ИмяЗаголовка = "Начислено авансовых платежей по ЕСН в ТФОМС в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="32" Тогда
			ИмяЗаголовка = "Начислено пособий (расходов) за счет средств ФСС РФ в "+НазваниеМесяца[НомерМесяца];			
		ИначеЕсли Прав(ИмяОбл,2)="21" Тогда
			ИмяЗаголовка = "Начислено авансов. платежей по страх. взносам: страховая часть трудовой пенсии в "+НазваниеМесяца[НомерМесяца];
		ИначеЕсли Прав(ИмяОбл,2)="22" Тогда
			ИмяЗаголовка = "Начислено авансов. платежей по страх. взносам: накопит. часть трудовой пенсии в "+НазваниеМесяца[НомерМесяца];
		КонецЕсли;
		
	    Возврат ИмяЗаголовка;
		
	КонецЕсли;

КонецФункции //ПолучитьЗаголовокОкна()

//*****************************************************************************
// Восстановить()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Восстановить
//
// Возвращаемое значение
//		нет
//
// Описание
//		повторно заполняет таблицу по данным, имеющимся в информационной базе
//
Процедура Восстановить()
	Если Вопрос("Текущие данные будут потеряны!"+РазделительСтрок+"Восстановить сохраненные ранее данные?","Да+Нет")="Нет" Тогда
		Возврат;
	КонецЕсли;
	Очистить(0); 
	ЗаполнитьТаблицу(Контекст);
КонецПроцедуры //Восстановить

//*****************************************************************************
// ПриВыбореГода()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		СпЛет
//
// Возвращаемое значение
//		нет
//
// Описание
//		карточка перезаполняется данными выбранного года, если был выбран
//		другой год
//
Процедура ПриВыбореГода()
	НовыйГод = СпЛет.ПолучитьЗначение(СпЛет.ТекущаяСтрока());
	Если Год <> НовыйГод Тогда // выбран другой год - перезаполняем таблицу	
		Если Сохранить() = 0 Тогда
			Возврат
		КонецЕсли;
		//определим ставки налогов:
		Очистить(0);
		Год = НовыйГод;
		ОпределитьСтавки();
		
		//запомним как бы она выглядела без данных справочника:
		ЗаполнитьТаблицу(Контекст,1);
		ИсходнаяТаблица.Выгрузить(ИсходнаяТаблицаБезСправочников); 
		
		Форма.Заголовок(" за "+Год+" год: "+ФизЛицо.Наименование,1);

	КонецЕсли;

КонецПроцедуры //ПриВыбореГода

//*****************************************************************************
// Пересчитать()
//
// Параметры
//		нет
//
// Вызывается из формул элементов диалога
//		Пересчитать
//
// Возвращаемое значение
//		нет
//
// Описание
//		перезаполняет карточку актуальными на текущий момент данными
//
Процедура Пересчитать()
	Если Сохранить() = 0 Тогда
		Возврат
	КонецЕсли;
	Очистить(0);	
	ЗаполнитьТаблицу(Контекст);
КонецПроцедуры //Пересчитать

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
		
		Параметры = Форма.Параметр;
		
		// основные параметры
		ДатаГода = Параметры.Получить("ДатаАктуальности");
		ФизЛицо = Параметры.Получить("Сотрудник");
		
		Год = ДатаГод(ДатаГода);
		
		// запомним названия месяцев - они используются при формировании текста предупреждения
		НазваниеМесяца[1] = "Январе"; 
		НазваниеМесяца[2] = "Феврале";
		НазваниеМесяца[3] = "Марте";   
		НазваниеМесяца[4] = "Апреле"; 
		НазваниеМесяца[5] = "Мае";     
		НазваниеМесяца[6] = "Июне";    
		НазваниеМесяца[7] = "Июле"; 	
		НазваниеМесяца[8] = "Августе";     
		НазваниеМесяца[9] = "Сентябре";    
		НазваниеМесяца[10]= "Октябре";      
		НазваниеМесяца[11]= "Ноябре";       
		НазваниеМесяца[12]= "Декабре"; 
		
		НачальныйГод = 2004;
		КонечныйГод = 2009;
		
		Если НачальныйГод>КонечныйГод Тогда
			СпЛет.ДобавитьЗначение(2004,"2004 г.");
			СпЛет.ТекущаяСтрока(1);
		Иначе
			Для ГодВСписок = НачальныйГод По КонечныйГод Цикл
				СпЛет.ДобавитьЗначение(ГодВСписок,Строка(ГодВСписок)+" г.");	
			КонецЦикла;	
			//в 1-м квартале будем устанавливать по умолчанию прошлый год, а дальше текущий год
			НомерМесяца = ДатаМесяц(РабочаяДата());
			Если НомерМесяца<=3 Тогда
				СпЛет.ТекущаяСтрока(СпЛет.РазмерСписка()-1);
			Иначе
				СпЛет.ТекущаяСтрока(СпЛет.РазмерСписка());
			КонецЕсли;
		КонецЕсли;

		СтрокаТекущегоГода = СпЛет.ТекущаяСтрока();
		
		Если СтрокаТекущегоГода <> 0 Тогда
			
			Год = СпЛет.ПолучитьЗначение(СтрокаТекущегоГода);
			
			// подготовим дополнительные данные для исчисления ЕСН
			РегрессивнаяШкала = Константа.ИспользоватьРегрессивнуюШкалу;
			ЕстьЕНВД = 1;
			
			// для расчета взносов в ПФР используется отдельная константа
			РегрессивнаяШкалаПФР = Константа.ИспользоватьРегрессивнуюШкалуПФР;
			
			// ставки ЕСН запомним в массивах - так их легче использовать
			//определим ставки налогов:
			ОпределитьСтавки();

			// заполняем данными ячейки таблицы для ввода
			ЗаполнитьТаблицу(Контекст);
			Таблица.Опции(0,0,,,"ИК","ИК");
			Таблица.ПараметрыСтраницы(2,,,0,0,0,0,0,0,0,1);
			Форма.Заголовок(" за "+Год+" год: "+ФизЛицо.Наименование,1);
			
		Иначе
			Предупреждение("За "+Год+" год формирование Индивидуальных карточек по ЕСН не поддерживается!");	
			СтатусВозврата(0);
		КонецЕсли;
		
	Иначе
		Предупреждение("Эта обработка используется в системных целях!",6);
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии() //предопределенная
	
	// проверим, редактировали ли значения в таблице
	// если что-то изменилось - спросим, а не сохранить ли
	
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	Если глСпискиИдентичны(СЗТекущееСостояние,ИсходнаяТаблица) = 0 Тогда
		Ответ=Вопрос("Сохранить изменения?","Да+Нет+Отмена");
		Если  Ответ="Да"  Тогда
			Если Сохранить() = 0 Тогда
				СтатусВозврата(0)
			КонецЕсли;
		ИначеЕсли Ответ="Отмена"  Тогда
			СтатусВозврата(0)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //ПриЗакрытии

//******************************************************************************
// ЗаполнитьБезСправочниковОбласть()      
//
// Параметры:
//		ИмяОбл - имя области
//
// Описание:
//		Восстановление области карточки без "ручных" правок.
//
Процедура ЗаполнитьБезСправочниковОбласть(Знач ИмяОбл)
	Если Таблица.Область(ИмяОбл).Доступность()=1 Тогда
		Таблица.Область(ИмяОбл).Значение = ИсходнаяТаблицаБезСправочников.Получить(ИмяОбл);
	КонецЕсли;
КонецПроцедуры //ЗаполнитьБезСправочниковОбласть()

//******************************************************************************
// ЗаполнитьБезСправочников()      
//
// Параметры:
//		нет
//
// Возвращаемое значение
//		нет
//
// Описание:
//		Если в карточке есть ручные правки (ярко-желтые поля?), то будет задан вопрос о подтверждении намерения и  
//		карточка переформируется по данным только из журналов расчетов.
//
Процедура ЗаполнитьБезСправочников()
	
	ТекстВопроса=	
	"Карточка будет очищена. 
	|Продолжить?";
	ТаблицаДо = "";
	ИсходнаяТаблица.Выгрузить(ТаблицаДо); //чтобы не забыть потом сохранить преобразованную таблицу, запомним как она сейчас выглядит
	Если Очистить(1,ТекстВопроса)=1 Тогда
		ЗаполнитьТаблицу(Контекст,2);
		//Запомним состояние:
		ТаблицаДо.Выгрузить(ИсходнаяТаблица);
	КонецЕсли;
	
КонецПроцедуры //ЗаполнитьБезСправочников()


//******************************************************************************
// ПолучитьРасшифровку()
//
// Параметры:
//		нет
//
// Выполняется при нажатии на кнопку "Раскрыть (F5)"
//
// Возвращаемое значение
//		нет
//
// Описание:
//		пытаемся разложить сумму текущей активной ячейки на две составляющие:
//		по данным ЖЗ
//		по введенным вручную суммам
//
Процедура ПолучитьРасшифровку()
	
	// проверим, редактировали ли значения в таблице
	// если что-то изменилось - спросим, а не сохранить ли
	
	СЗТекущееСостояние = СоздатьОбъект("СписокЗначений");
	Таблица.Выгрузить(СЗТекущееСостояние);
	Если глСпискиИдентичны(СЗТекущееСостояние,ИсходнаяТаблица) = 0 Тогда
		Ответ=Вопрос(	"Таблица была изменена.
		|Расшифровка текущей ячейки может быть показана неверно. 
		|Сохранить изменения?","Да+Нет+Отмена");
		Если  Ответ="Да"  Тогда
			Если Сохранить() = 0 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		ИначеЕсли Ответ="Отмена"  Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СписокИмен = СписокРедактируемыхЯчеек(1);
	ИмяОбл = СокрЛП(Таблица.АктивнаяОбласть());	
			
	Если ((Найти(ИмяОбл,"СНГ") > 0) и ((Найти(ИмяОбл,"НБ_ФБ")>0) или (Найти(ИмяОбл,"НБ_ФСС")>0) 
	 	 или (Прав(ИмяОбл,2) = "28") или (Прав(ИмяОбл,2) = "29") или (Прав(ИмяОбл,2) = "30") или (Прав(ИмяОбл,2) = "31")))
	 	и (?(Год < 2005, Константа.ИспользоватьРегрессивнуюШкалу.Получить(Дата("31.12."+Год)), Да) = Да) Тогда      		 	 	     
		
		Месяц = Прав(ИмяОбл,2); 				            
		МесяцЧислом = Число(Месяц);     
		Если (МесяцЧислом = 0) или (МесяцЧислом > 12) Тогда // расшифровываем ячейку из колонки с номером от 15 до 20
			Месяц = Прав(Лев(ИмяОбл,СтрДлина(ИмяОбл)-2),2);     
			МесяцЧислом = Число(Месяц);   
		КонецЕсли;
		
		СтрокаИтоговойТаблицы = ""; 
		ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(ФизЛицо) + глДополнитьСтроку(МесяцЧислом,2),СтрокаИтоговойТаблицы,1);     
		            
		ОстатокОтБазыИностранца = 0;
		ИностраннаяБазаИнвалида = 0;
		
		Если СтрокаИтоговойТаблицы > 0 Тогда
			БазаФБ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2);
			Если ТипЗначенияСтр(БазаФБ) = "ТаблицаЗначений" Тогда
				// катрочка сформированна по данным НДФЛ, заполним данными из карточки
				БазаФБ = Число(Таблица.Область("НБ_ФБ_СНГ"+Месяц).Текст);
				БазаОМС = Число(Таблица.Область("НБ_ОМС_СНГ"+Месяц).Текст);
				БазаФСС = Число(Таблица.Область("НБ_ФСС_СНГ"+Месяц).Текст);
				БазаСтраховая = Число(Таблица.Область("ОБЛ_ПФР_СНГ"+Месяц).Текст);
			Иначе		
				Если (ИмяОбл = ("СНГ" + Месяц + "28")) и (Константа.ПорядокИсчисленияЕСН.Получить(Дата(Год, 12, 31)) = 2) Тогда
					ОстатокОтБазыИностранца = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИностраннаяБаза");				
					ИностраннаяБазаИнвалида = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИностраннаяБазаИнвалида");
				КонецЕсли;
				БазаОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,3);
				БазаФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,4);									
				БазаСтраховая = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,23);
			КонецЕсли;
		Иначе
			БазаФБ = 0;
			БазаОМС = 0;
			БазаФСС = 0;	
			БазаСтраховая = 0;
		КонецЕсли;											
		ПараметрыКоманды = СоздатьОбъект("СписокЗначений");  
		ПараметрыКоманды.ДобавитьЗначение(Год,"Год");

		ПараметрыКоманды.Установить("Сотрудник",ФизЛицо);			
		ПараметрыКоманды.Установить("Буфер",Буфер);   
		ПараметрыКоманды.Установить("ИмяЯчейки",ИмяОбл);  
		ПараметрыКоманды.Установить("БазаСтраховая",БазаСтраховая);
		ПараметрыКоманды.Установить("БазаФБ",БазаФБ);
		ПараметрыКоманды.Установить("БазаОМС",БазаОМС);
		ПараметрыКоманды.Установить("БазаФСС",БазаФСС);		
		Если (ИмяОбл = ("СНГ" + Месяц + "28")) и (Константа.ПорядокИсчисленияЕСН.Получить(Дата(Год,12,31)) = 2) Тогда
				ПараметрыКоманды.Установить("ОстатокОтБазыИностранца",ОстатокОтБазыИностранца);				
				ПараметрыКоманды.Установить("ИностраннаяБазаИнвалида",ИностраннаяБазаИнвалида);
		КонецЕсли;				
		ОткрытьФорму("Обработка.РасшифровкаОтчетов",ПараметрыКоманды);
		Возврат;				
	ИначеЕсли СписокИмен.НайтиЗначение(ИмяОбл)=0 Тогда
		Предупреждение("Расшифровка данной ячейки не поддерживается");
		Возврат;
	Иначе
		ЗаголовокОкна = ПолучитьЗаголовокОкна(ИмяОбл);		
	КонецЕсли;
	
	ИтЗначение=0;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Расшифровка");
	
	ИмяКолонки="Сумма";
	
	ИмяЗаглКолонки="Вид расчета";
	Таб.ВывестиСекцию("Шапка");		
	СчСтрокВР = "";
	БылоЗначение=0;  
	
	Если (Прав(ИмяОбл,2) = "28") или (Прав(ИмяОбл,2) = "29") или (Прав(ИмяОбл,2) = "30") 
	или (Прав(ИмяОбл,2) = "31") или (Прав(ИмяОбл,2) = "21") или (Прав(ИмяОбл,2) = "22") Тогда
		РасшифровываемНалоги = 1;
	Иначе                                                                  
		РасшифровываемНалоги = 0;
	КонецЕсли;	
		          
	Если ТаблицаРасшифровокПоВР.НайтиЗначение(глДополнитьСтроку(ИмяОбл,10," ",1),СчСтрокВР,1) = 1 Тогда
		ТаблицаСуммпоВР=ТаблицаРасшифровокПоВР.ПолучитьЗначение(СчСтрокВР,2); 
		Если ТипЗначенияСтр(ТаблицаСуммпоВР)="ТаблицаЗначений" Тогда
			Для Сч = 1 По ТаблицаСуммпоВР.КоличествоСтрок() Цикл
				ИмяСтроки=ТаблицаСуммпоВР.ПолучитьЗначение(Сч,1);
				Значение = ТаблицаСуммпоВР.ПолучитьЗначение(Сч,2);
				Если РасшифровываемНалоги = 1 Тогда					
					Значение = Формат(Значение,"Ч018.5");
				Иначе                                                                  
					Значение = Формат(Значение,"Ч015.2");
				КонецЕсли;
				Таб.ВывестиСекцию("стр");
				ИтЗначение=ИтЗначение+Значение ;
				БылоЗначение=1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если БылоЗначение>0 Тогда
		ИмяСтроки="Итого:";
		Значение= ИтЗначение;
	Иначе 
		Значение= 0;
		Таб.ВывестиСекцию("стр");
	КонецЕсли;
	
	Если БылоЗначение=0 Тогда
		Значение = Буфер.Получить(ИмяОбл);
		Если РасшифровываемНалоги = 1 Тогда							
			Значение = Формат(Значение,"Ч018.5");
		Иначе                                                                  
			Значение = Формат(Значение,"Ч015.2");
		КонецЕсли;	
		Если ПустоеЗначение(Значение) = 0 Тогда
			ИмяСтроки="По данным, введенным вручную";
			Таб.ВывестиСекцию("стр");
			ИтЗначение=ИтЗначение+Значение ;
		КонецЕсли;        
	КонецЕсли;        
	Если РасшифровываемНалоги = 1 Тогда							
		ИтЗначение = Формат(ИтЗначение,"Ч018.5");
	Иначе                                                                  
		ИтЗначение = Формат(ИтЗначение,"Ч015.2");
	КонецЕсли;		
	Таб.ВывестиСекцию("Итог");
	
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0);
	Таб.Показать(ЗаголовокОкна);
	
КонецПроцедуры //ПолучитьРасшифровку()

