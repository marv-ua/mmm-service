Перем гФайлДанных;
Перем ТСотрудниковДляПоиска;
Перем ТекстСчетаПК;
Перем ТСотрудниковДляПодбора;

Процедура ПечатьПеречисленияЗарплаты()
	
	ТабПечатиЛС = СоздатьОбъект("Таблица");
	ТабПечатиЛС.ИсходнаяТаблица("ПечатьЛС");
	глОбработатьXMLФайл("ПечатьЗарплаты", ФормИмяФайлаДанных, , ТабПечатиЛС);
	
КонецПроцедуры

Процедура ПечатьОткрытияСчетов()
	
	ТабПечатиЛС = СоздатьОбъект("Таблица");
	ТабПечатиЛС.ИсходнаяТаблица("ПечатьЛС");
	глОбработатьXMLФайл("ПечатьСчетов", ФормИмяФайлаДанных, , ТабПечатиЛС);
	
КонецПроцедуры

Процедура Подбор(ТСотрудников)
	
	ТСотрудниковДляПодбора = ТСотрудников;
	Если Форма.МодальныйРежим() = 0 тогда
		ОткрытьПодбор("Справочник.Сотрудники","ДляВыбора",,1);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	
	ТСотрудниковДляПодбора.НоваяСтрока();
	ТСотрудниковДляПодбора.Сотрудник = Элемент;
	
КонецПроцедуры
	
Функция ОтделитьРазделителем(Стр, Разделитель, Режим=0)

	ПраваяЧасть			=	"";
	ПозРазделителя		=	Найти(Стр, Разделитель);
	ДлинаРазделителя	=	СтрДлина(Разделитель);
	Если ПозРазделителя > 0 Тогда
		ПраваяЧасть	=	Сред(Стр,		ПозРазделителя + ?(Режим=2, 0, ДлинаРазделителя));
		Стр			=	СокрЛП(Лев(Стр,	ПозРазделителя - ?(Режим=1, -ДлинаРазделителя+1, 1)));
	КонецЕсли;

	Возврат(ПраваяЧасть);
	
КонецФункции		//	ОтделитьРазделителем()

Функция ДатаИзXML(Стр, СтрВремя="")

	СтрГод   = Стр;
    СтрВремя = ОтделитьРазделителем(СтрГод, "T");
	СтрМесяц = ОтделитьРазделителем(СтрГод, "-");
	СтрДень  = ОтделитьРазделителем(СтрМесяц, "-");

	Возврат Дата(СтрДень + "." + СтрМесяц + "." + СтрГод);
	
КонецФункции

Процедура ПриВводеВТаблицуСотрудников(ТСотрудников)
	
	Если ТСотрудников.ТекущаяКолонка() = "Сумма" тогда
		СуммаВТаблицу = 0;
		Если ТСотрудников.ТекущаяСтрока() > 0 тогда
			СуммаВТаблицу = ТСотрудников.ПолучитьЗначение(ТСотрудников.ТекущаяСтрока(), ТСотрудников.ТекущаяКолонка());
		КонецЕсли;
		Если ВвестиЧисло(СуммаВТаблицу, "Введите сумму", 15, 2) = 1 тогда
			ТСотрудников.УстановитьЗначение(ТСотрудников.ТекущаяСтрока(), ТСотрудников.ТекущаяКолонка(), СуммаВТаблицу);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиПервыйСуществующийФайл(СписокВозможныхМест)
	
	Для Сч = 1 По СписокВозможныхМест.РазмерСписка() Цикл
		ПолноеИмя	=	СписокВозможныхМест.ПолучитьЗначение(Сч);
		Если Фс.СуществуетФайл(ПолноеИмя) = 1 Тогда	Возврат(ПолноеИмя)	КонецЕсли;
	КонецЦикла;
	
	Возврат("");
	
КонецФункции		//	НайтиПервыйСуществующийФайл()

Процедура ПриВыбореЗакладки(НомерЗакладки, Значение)
	Если Значение = 1 тогда
		Форма.ИспользоватьСлой("Основной,ПеречислениеЗарплаты", 2);
	ИначеЕсли Значение = 2 тогда
		Форма.ИспользоватьСлой("Основной2,РезультатПеречисленияЗарплаты", 2);
	ИначеЕсли Значение = 3 тогда
		Форма.ИспользоватьСлой("Основной,ОткрытиеСчетов", 2);
	ИначеЕсли Значение = 4 тогда
		Форма.ИспользоватьСлой("Основной2,РезультатОткрытияСчетов", 2);
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	
	////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Поиск внешней компоненты V7Plus.dll
	
	СписокВозможныхМест	=	СоздатьОбъект("СписокЗначений");
	СписокВозможныхМест.ДобавитьЗначение(КаталогИБ()		+	"v7plus.dll"	);
	СписокВозможныхМест.ДобавитьЗначение(КаталогПрограммы()	+	"v7plus.dll"	);
	СписокВозможныхМест.ДобавитьЗначение(КаталогИБ()		+	"ExtForms\"	+	"v7plus.dll"	);
	
	гПутьОбъекта_КомпонентаV7plus			=	НайтиПервыйСуществующийФайл(СписокВозможныхМест);
	
	Если ЗагрузитьВнешнююКомпоненту(гПутьОбъекта_КомпонентаV7plus) <> 1	Тогда
		Предупреждение("Компонента v7plus.dll не найдена!");
		СтатусВозврата(0);	Возврат;
	КонецЕсли;
	Форма.ИспользоватьЗакладки(1);
	//Форма.Закладки.ДобавитьЗначение(1, "Перечисление зарплаты");
	Форма.Закладки.ДобавитьЗначение(2, "Перечисление зарплаты");
	//Форма.Закладки.ДобавитьЗначение(3, "Открытие счетов");
	Форма.Закладки.ДобавитьЗначение(4, "Открытие счетов");
	ПриВыбореЗакладки(2, 2);
	
КонецПроцедуры

Процедура ЗаписатьЛицевыеСчетаВСправочникСотрудники()
	
	// инициализация обработчика сообщений
	ОбработчикСообщений = глСоздатьТрассировку("Формирование файла:");
	
	Если ТСотрудниковСчета.КоличествоСтрок() = 0 тогда
		глСообщениеТрассировки(ОбработчикСообщений, "Необходимо сначала заполнить таблицу");
		глСообщениеТрассировки(ОбработчикСообщений, "Лицевые счета не загружены");
		глПоказатьТрассировку(ОбработчикСообщений);
		Возврат;
	КонецЕсли;
	
	СпрСотрдуникиДляЗаписи = СоздатьОбъект("Справочник.Сотрудники");
	ТСотрудниковСчета.ВыбратьСтроки();
	Пока ТСотрудниковСчета.ПолучитьСтроку() = 1 Цикл
		Если СпрСотрдуникиДляЗаписи.НайтиЭлемент(ТСотрудниковСчета.Сотрудник) = 1 тогда
			Если СокрЛП(ВРег(ТСотрудниковСчета.Результат)) = "СЧЕТОТКРЫТ" тогда
				СпрСотрдуникиДляЗаписи.НомерЗарплатногоСчета = ТСотрудниковСчета.ЛицевойСчет;
				СпрСотрдуникиДляЗаписи.Записать();
			КонецЕСли;
		КонецЕсли;
	КонецЦикла;
	глСообщениеТрассировки(ОбработчикСообщений, "Загрузка лицевых счетов завершена", 1);
	глПоказатьТрассировку(ОбработчикСообщений);
	
КонецПроцедуры

Процедура ОткрытьФайлДляПросмотра(ИмяФайла)
	
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда 
		ЗапуститьПриложение(ИмяФайла);
	Иначе 
		Предупреждение("Файл с таким именем не существует!");					
	КонецЕсли;    
	
КонецПроцедуры

Процедура ВыборФайла(ИмяФайла, Фильтр="xml")
	
	Каталог = "";
	Стр = "Файл настройки (*." + Фильтр + ")|*." + Фильтр + "";

	Если ФС.ВыбратьФайл(0, ИмяФайла, Каталог, "Выберите файл", Стр, , ) = 1 Тогда
	    ИмяФайла = Каталог + ИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдЭлементаДиалога, Фл)
    
	Если	ИдЭлементаДиалога = "ФормИмяФайлаДанных"	Тогда
	         
		ВыборФайла(ФормИмяФайлаДанных, "xml");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуСотрудников(ЗаполняемаяТаблица, ПустаяСтр)
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Параметры.Установить("ДатаАктуальности", РабочаяДата());
	ОткрытьФормуМодально("Обработка.ЗаполнитьСписокСотрудников", Параметры);
	Если ТипЗначенияСтр(Параметры)="ТаблицаЗначений" Тогда
		//Параметры.НоваяКолонка("Сумма", "Число", 15, 2);
		ЗаполняемаяТаблица.УдалитьСтроки();
		Параметры.ВыбратьСтроки();
		Пока Параметры.ПолучитьСтроку() = 1 Цикл
			Если ПустаяСтрока(Параметры.Сотрудник.НомерЗарплатногоСчета) = ПустаяСтр тогда
				ЗаполняемаяТаблица.НоваяСтрока();
				ЗаполняемаяТаблица.Сотрудник = Параметры.Сотрудник;
			КонецЕсли;
		КонецЦикла;
		//Параметры.Выгрузить(ТСотрудников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
КонецПроцедуры
	
ТСотрудниковСчета.НоваяКолонка("Сотрудник", "Справочник.Сотрудники", , , , 15);
ТСотрудниковСчета.НоваяКолонка("ЛицевойСчет", "Строка", 20, ,"Лицевой счет", 10);
ТСотрудниковСчета.НоваяКолонка("Результат", "Строка", 20, , , 10);
ТСотрудниковСчета.НоваяКолонка("ВидВклада", "Строка", 50, , "Вид вклада",5);
ТСотрудниковСчета.НоваяКолонка("Сумма", "Число", 15, 2);

ТСотрудниковДляПоиска = СоздатьОбъект("ТаблицаЗначений");

ТекстСчетаПК = "";
