Перем Направление;
//******************************************************************************
Функция ТекущееСостояние(Номер = 1)
	Если Константа.ИспользоватьТипыЦен = Нет Тогда 
		Если Номер = 1 Тогда
		    Возврат "НЕТ";
		ИначеЕсли Номер = 2 Тогда
			Возврат "НОМЕНКЛАТУРА";
		Иначе
			Возврат "1 учетная + 1 отпускная";
		КонецЕсли;
		
	Иначе                        
		Если Номер = 1 Тогда
		    Возврат "ДА";
		ИначеЕсли Номер = 2 Тогда
			Возврат "ЦЕНЫ";
		Иначе
			Возврат "ПРОИЗВОЛЬНОЕ";
		КонецЕсли;
	КонецЕсли;

КонецФункции //ТекущееСостояние()

//******************************************************************************
Функция НовоеСостояние(Номер = 1)
	Если ИспользоватьТипыЦен = Нет Тогда 
		Если Номер = 1 Тогда
		    Возврат "НЕТ";
		ИначеЕсли Номер = 2 Тогда
			Возврат "НОМЕНКЛАТУРА";
		Иначе
			Возврат "1 учетная + 1 отпускная";
		КонецЕсли;
	Иначе                                
		Если Номер = 1 Тогда
		    Возврат "ДА";
		ИначеЕсли Номер = 2 Тогда
			Возврат "ЦЕНЫ";
		Иначе
			Возврат "ПРОИЗВОЛЬНОЕ";
		КонецЕсли;
	КонецЕсли;

КонецФункции //НовоеСостояние()

//******************************************************************************
Функция ИнформационнаяСтрока()
	Если ИспользоватьТипыЦен = Константа.ИспользоватьТипыЦен Тогда 
	    Текст = "Порядок работы с ценами номенклатуры не изменен.";
	ИначеЕсли Направление = 1 Тогда
		Текст =	"Значения цен, указанные в справочнике ""Номенклатура"" будут перенесены в справочник ""Цены"".";
	Иначе
		Текст = "Значения цен, указанные в справочнике ""Цены"" будут перенесены в справочник ""Номенклатура"".";
	КонецЕсли;
    Возврат Текст;
КонецФункции //ИнформационнаяСтрока()

//******************************************************************************
Функция ПодписьДаты()
	Если Направление = 1 Тогда 
		Возврат "В справочнике ""Цены"" значения цен устанавливать на дату:";
	Иначе                                 
		Возврат "Для переноса в справочник ""Номенклатура"" использовать цены, действовавшие:";
	КонецЕсли;

КонецФункции //ПодписьДаты()

//******************************************************************************
Функция ПодписьТипаЦенПокупки()
	Если Направление = 1 Тогда 
		Возврат "Учетным (покупным) ценам соответствует тип цен:";
	Иначе                                 
		Возврат "Учетным (покупным) ценам соответствует тип цен:";
	КонецЕсли;

КонецФункции //ПодписьТипаПокупки()

//******************************************************************************
Функция ПодписьТипаЦенПродажи()
	Если Направление = 1 Тогда 
		Возврат "Отпускным ценам соответствует тип цен:";
	Иначе                                 
		Возврат "Отпускным ценам соответствует тип цен:";
	КонецЕсли;

КонецФункции //ПодписьТипаПродажи()

//******************************************************************************
// ПолучитьЦену(Тип, Номенклатура)
//
Функция ПолучитьЦену(Тип, Номенклатура)
	
	Цена = 0;
	
	ПорядокХраненияОтпускнойЦены = Номенклатура.ПорядокХраненияОтпускнойЦены;
	Если ПорядокХраненияОтпускнойЦены = 0 Тогда
	    ПорядокХраненияОтпускнойЦены = 1;
	КонецЕсли;
	
	
	Если ПорядокХраненияОтпускнойЦены = Тип Тогда
	    Цена = Номенклатура.Цена;
		
	Иначе
	    
		СтавкаНДС = Номенклатура.СтавкаНДС.Получить(ТекущаяДата());
		Если ПустоеЗначение(СтавкаНДС) = 0 Тогда
		    СтНДС = СтавкаНДС.Ставка;
		Иначе
			СтНДС = 0;
		КонецЕсли;
		                                                           
		СтавкаНП = Номенклатура.СтавкаНП.Получить(ТекущаяДата());
		Если ПустоеЗначение(СтавкаНП) = 0 Тогда
		    СтНП = СтавкаНП.Ставка;
		Иначе
			СтНП = 0;
		КонецЕсли;
	
		Если ПорядокХраненияОтпускнойЦены = 1 Тогда //Без налогов
			Если (СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0) Тогда //установленные налоговые ставки
				ЦенаБезНП = Окр(Номенклатура.Цена*(100+СтНДС)/100, 2, 1);
				ЦенаВключаяНП = Окр(ЦенаБезНП*(100+СтНП)/100, 2, 1);
				
			Иначе //расчетные ставки
				ЦенаБезНП = Окр(Номенклатура.Цена*100/(100-СтНДС), 2, 1);
				ЦенаВключаяНП = Окр(ЦенаБезНП*(100+СтНП)/100, 2, 1);
			КонецЕсли;
	
		ИначеЕсли ПорядокХраненияОтпускнойЦены = 2 Тогда //Без НП
			Если (СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0) Тогда //установленные налоговые ставки
				ЦенаБезНалогов = Окр(Номенклатура.Цена*100/(100+СтНДС), 2, 1);
				ЦенаВключаяНП = Окр(Номенклатура.Цена*(100+СтНП)/100, 2, 1);
				
			Иначе //расчетные ставки
				ЦенаБезНалогов = Окр(Номенклатура.Цена*(100-СтНДС)/100, 2, 1);
				ЦенаВключаяНП = Окр(Номенклатура.Цена*(100+СтНП)/100, 2, 1);
			КонецЕсли;
	
		ИначеЕсли ПорядокХраненияОтпускнойЦены = 3 Тогда //Включая НП
			Если (СтНДС = 20) или (СтНДС = 18) или (СтНДС = 10) или (СтНДС = 0) Тогда //установленные налоговые ставки
				ЦенаБезНП = Окр(Номенклатура.Цена*100/(100+СтНП),2,1);
		    	ЦенаБезНалогов = Окр(ЦенаБезНП*100/(100+СтНДС),2,1);
				
			Иначе //расчетные ставки
				ЦенаБезНП = Окр(Номенклатура.Цена*100/(100+СтНП),2,1);
		    	ЦенаБезНалогов = Окр(ЦенаБезНП*(100-СтНДС)/100, 2, 1);
			КонецЕсли;
		КонецЕсли;
		
		Если Тип = 1 Тогда //  без налогов
		    Цена = ЦенаБезНалогов;
			
		ИначеЕсли Тип = 2 Тогда // без НП
			Цена = ЦенаБезНП;
			
		ИначеЕсли Тип = 3 Тогда // включая НП
			Цена = ЦенаВключаяНП;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Цена;
	
КонецФункции // ПолучитьЦену()

//*******************************************
Процедура ПриИзмененииНаправления()
	Направление = ?(Константа.ИспользоватьТипыЦен = Нет, 1, 2);
	Форма.Параметр = ИспользоватьТипыЦен;
	Форма.Новые.Доступность(?(Направление = 1, 1, 0));
	Новые = ?(Направление = 1, 1, 0);
КонецПроцедуры

//*******************************************
Процедура Сформировать()
    Ном = СоздатьОбъект("Справочник.Номенклатура");
	Цены = СоздатьОбъект("Справочник.Цены");
	
	Если ПустоеЗначение(Константа.ИспользоватьТипыЦен) = 1 Тогда
		Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		    Форма.Параметр = Да;
		Иначе
			Константа.ИспользоватьТипыЦен = ?(Направление = 1, Да, Нет);
		КонецЕсли;
		Форма.Закрыть();
		Возврат;
	КонецЕсли;
	
	Если (Направление <> ?(Константа.ИспользоватьТипыЦен = Нет, 1, 2)) 
		или (Константа.ИспользоватьТипыЦен = ИспользоватьТипыЦен)
		или (ПустоеЗначение(ИспользоватьТипыЦен) = 1) Тогда
	    Форма.Закрыть();
		Возврат;
	КонецЕсли;
	НачатьТранзакцию();
	Если Направление = 1 Тогда
	    Ном.ВыбратьЭлементы(0);
		Пока Ном.ПолучитьЭлемент() =1 Цикл
			
		    Если Ном.ЭтоГруппа() = 1 Тогда
		        Продолжить;
			КонецЕсли;
			
			Если ТипЦенПокупки.Выбран() = 0 Тогда
				Предупреждение("Не выбран тип цен приобретения.",30);
			    Возврат;
			КонецЕсли;
			Если ТипЦенПродажи.Выбран() = 0 Тогда
				Предупреждение("Не выбран тип цен продажи.",30);
			    Возврат;
			КонецЕсли;
			
			Цены.ИспользоватьВладельца(Ном);
			
			//Цена продажи
			ПорядокХранения = 1 + ТипЦенПродажи.ЦенаВклНДС + ТипЦенПродажи.ЦенаВклНП;
			Если Цены.НайтиПоРеквизиту("ТипЦен",ТипЦенПродажи,0) = 1 Тогда
			    Цены.Валюта = Ном.Валюта;
				Цены.Записать();
				Цены.Цена.Установить(ВыбДата, ПолучитьЦену(ПорядокХранения, Ном));                         
			Иначе	
			    Цены.Новый();
				Цены.ТипЦен = ТипЦенПродажи;
				Цены.Валюта = Ном.Валюта;
				Цены.Владелец = Ном.ТекущийЭлемент();
				Цены.Записать();
				Цены.Цена.Установить(?(Новые = 1, '01.01.1980', ВыбДата),ПолучитьЦену(ПорядокХранения, Ном));
			КонецЕсли;
			
			Если Ном.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
		        Продолжить;
			КонецЕсли;
			
			//Цена покупки
			Если Цены.НайтиПоРеквизиту("ТипЦен",ТипЦенПокупки,0) = 1 Тогда
			    Цены.Цена.Установить(ВыбДата, Ном.Себестоимость);                         
			Иначе	
			    Цены.Новый();
				Цены.ТипЦен = ТипЦенПокупки;
				Цены.Валюта = ТипЦенПокупки.Валюта;
				Цены.Владелец = Ном.ТекущийЭлемент();
				Цены.Записать();
				Цены.Цена.Установить(?(Новые = 1, '01.01.1980', ВыбДата),Ном.Себестоимость);
			КонецЕсли;
		КонецЦикла;
		Если (Константа.ОсновнойСклад.Выбран() = 1) и (Константа.ОсновнойСклад.ТипЦен.Выбран() = 0) Тогда
		    Склад = СоздатьОбъект("Справочник.МестаХранения");
			Если Склад.НайтиЭлемент(Константа.ОсновнойСклад) = 1 Тогда
			    Склад.ТипЦен = ТипЦенПродажи;
				Склад.Записать();
			КонецЕсли;
		КонецЕсли;
		Константа.ОсновнаяЦенаПриобретения = ТипЦенПокупки;
	ИначеЕсли Направление = 2 Тогда
		Ном.ВыбратьЭлементы(0);
		Пока Ном. ПолучитьЭлемент() =1 Цикл
		    Если Ном.ЭтоГруппа() = 1 Тогда
		        Продолжить;
			КонецЕсли;
			
			Если ТипЦенПокупки.Выбран() = 0 Тогда
				Предупреждение("Не выбран тип цен приобретения.",30);
			    Возврат;
			КонецЕсли;
			Если ТипЦенПродажи.Выбран() = 0 Тогда
				Предупреждение("Не выбран тип цен продажи.",30);
			    Возврат;
			КонецЕсли;
			
			Цены.ИспользоватьВладельца(Ном);
			
			//Цена продажи
			ПорядокХранения = 1 + ТипЦенПродажи.ЦенаВклНДС + ТипЦенПродажи.ЦенаВклНП;
			Ном.ПорядокХраненияОтпускнойЦены = 1;
			Если Цены.НайтиПоРеквизиту("ТипЦен",ТипЦенПродажи,0) = 1 Тогда
			    Ном.ПорядокХраненияОтпускнойЦены = ПорядокХранения;
				Ном.Цена = Цены.Цена.Получить(ВыбДата);
				Ном.Валюта = Цены.Валюта; 
			КонецЕсли;
			Ном.Записать();
			
			Если Ном.ТипНоменклатуры <> Перечисление.ТипыНоменклатуры.Товар Тогда
		        Продолжить;
			КонецЕсли;
			
			//Цена покупки
			Если Цены.НайтиПоРеквизиту("ТипЦен",ТипЦенПокупки,0) = 1 Тогда
			    Ном.Себестоимость = Цены.Цена.Получить(ВыбДата);
				Ном.Записать();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    Форма.Параметр = ?(Направление = 1, Да, Нет);
	Иначе
		Константа.ИспользоватьТипыЦен = ?(Направление = 1, Да, Нет);
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	Форма.Закрыть();
КонецПроцедуры

//*******************************************
Процедура ПриНачалеВыбораЗначения(Идентиф, Флаг)
	Если Найти(Идентиф, "ТипЦен") > 0 Тогда       
		Пар = 1;
		ОткрытьФорму("Справочник.ТипыЦен",Пар);
		Если (Пар = 1) или (ПустоеЗначение(Пар)=1) Тогда
		Иначе
			Если Идентиф = "ТипЦенПокупки" Тогда
				ТипЦенПокупки = Пар;
			Иначе
				ТипЦенПродажи = Пар;
			КонецЕсли;
		КонецЕсли;
		Флаг =0;
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ПриОткрытии()
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Если Форма.Параметр = Константа.ИспользоватьТипыЦен Тогда
		    СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	    Направление = ?(Форма.Параметр = Да, 1, 2);
		ИспользоватьТипыЦен = Форма.Параметр;
		Форма.Параметр = ?(ПустоеЗначение(Константа.ИспользоватьТипыЦен) = 1, Да, Константа.ИспользоватьТипыЦен);
	Иначе
		Направление = ?(Константа.ИспользоватьТипыЦен = Нет, 1, 2);
		ИспользоватьТипыЦен = ?(Константа.ИспользоватьТипыЦен = Нет, Да, Нет);
	КонецЕсли;
	ВыбДата = РабочаяДата();
	
	Если Константа.ОсновнойСклад.Выбран() = 1 Тогда
		ТипЦенПродажи = Константа.ОсновнойСклад.ТипЦен;
	КонецЕсли;
	
	ТипЦенПокупки = Константа.ОсновнаяЦенаПриобретения;
	Форма.Новые.Доступность(?(Направление = 1, 1, 0));
	Новые = ?(Направление = 1, 1, 0); 
КонецПроцедуры

