Перем Параметры;
Перем ДатаПоследнегоФайла;
Перем КаталогБазы;
Перем ВремКаталог;
Перем Инфо,Соединение,ИмяФайлаЗип,ИмяФайла, ИмяФайлаРег, ИмяФайлаБИК;

//******************************************************************************
Функция ТипГорода(Стр)
	Если Стр="1" Тогда
		Возврат "Г.";       // ГОРОД
	ИначеЕсли Стр="2" Тогда
		Возврат "П.";       // ПОСЕЛОК
	ИначеЕсли Стр="3" Тогда
		Возврат "С.";       // СЕЛО
	ИначеЕсли Стр="4" Тогда
		Возврат "ПГТ.";     // ПОСЕЛОК ГОРОДСКОГО ТИПА
	ИначеЕсли Стр="5" Тогда
		Возврат "СТ-ЦА.";   // СТАНИЦА
	ИначеЕсли Стр="6" Тогда
		Возврат "АУЛ.";     // АУЛ
	ИначеЕсли Стр="7" Тогда
		Возврат "РП.";      //  РАБОЧИЙ ПОСЕЛОК 
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции  // ТипГорода(Стр)
//******************************************************************************
Функция ТипБанка(Стр)
	Если Стр="00" Тогда
		Возврат "ГРКЦ ";    
	ИначеЕсли Стр="10" Тогда
		Возврат "РКЦ ";    
	ИначеЕсли Стр="20" Тогда
		Возврат "Б ";    
	ИначеЕсли Стр="21" Тогда
		Возврат "КБ ";    
	ИначеЕсли Стр="22" Тогда
		Возврат "СБ ";    
	ИначеЕсли Стр="23" Тогда
		Возврат "АКБ ";    
	ИначеЕсли Стр="24" Тогда
		Возврат "ЧКБ ";    
	ИначеЕсли Стр="25" Тогда
		Возврат "КОПБ ";    
	ИначеЕсли Стр="26" Тогда
		Возврат "АПБ ";    
	ИначеЕсли Стр="30" Тогда
		Возврат "ФБ ";    
	ИначеЕсли Стр="31" Тогда
		Возврат "ФКБ ";    
	ИначеЕсли Стр="32" Тогда
		Возврат "Отд. ";    
	ИначеЕсли Стр="33" Тогда
		Возврат "ФАКБ ";    
	ИначеЕсли Стр="34" Тогда
		Возврат "ФЧКБ ";    
	ИначеЕсли Стр="35" Тогда
		Возврат "ФКОБ ";    
	ИначеЕсли Стр="36" Тогда
		Возврат "Отд. ";    
	ИначеЕсли Стр="40" Тогда
		Возврат "ПУ ";    
	ИначеЕсли Стр="50" Тогда
		Возврат "ЦХ ";    
	ИначеЕсли Стр="70" Тогда
		Возврат "КУ ";    
	ИначеЕсли Стр="71" Тогда
		Возврат "КЛ ";    
	ИначеЕсли Стр="72" Тогда
		Возврат "ОРЦБ ";    
	ИначеЕсли Стр="98" Тогда
		Возврат "ИСКЛ ";    
	ИначеЕсли Стр="99" Тогда
		Возврат "ОТЗВ ";    
	ИначеЕсли Стр="90" Тогда
		Возврат "ЛИКВ ";    
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции  // ТипБанка(Стр)
//******************************************************************************
Процедура ОбновитьКлассификатор()
    // Структура текстового файла на РБК.РУ
	//ТипБанка	Пункт	ТипПункта	НаименованиеБанка	ПризнакПодстановки	БИК	КорСчет
		//ТипБанка		-- код расширения наименования
		//Пункт			-- населенный пункт
		//ТипПункта		-- код расширения нас.пункта
		//Наименование	-- наименование банка
		//Признак		-- признак использования кода расширения в наименование ("+", не используется)
		//БИК			-- БИК
		//КорСчет		-- кор.счет 
	// 

    Разделитель = СимволТабуляции;
	Параметры.УдалитьВсе();
	Параметры.ДобавитьЗначение(1);
	
	Состояние("Обновляется классификатор банков РФ");
	Текст=СоздатьОбъект("Текст");
	Текст.КодоваяСтраница(0);
	Текст.Открыть(ВремКаталог+ИмяФайлаРег);
	ИмяБазы = СокрЛП(КаталогБазы)+"BIK.DBF";
	ИмяБазыИндекс = СокрЛП(КаталогБазы)+"BIK.CDX";
	_БазаКлассиф = СоздатьОбъект("XBase");
	_БазаКлассиф.КодоваяСтраница(0);
	
	Если ФС.СуществуетФайл(ИмяБазы)=1 Тогда
		_БазаКлассиф.ОткрытьФайл(ИмяБазы,,0);
		Если _БазаКлассиф.Открыта()=1 Тогда
			_БазаКлассиф.ЗакрытьФайл();
		Иначе
			Предупреждение("Невозможно открыть файл: """+ИмяБазы+"""!", 60);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если _БазаКлассиф.Открыта()=0 Тогда
		_БазаКлассиф.ДобавитьПоле("CODE",    "S", 9,  0);
		_БазаКлассиф.ДобавитьПоле("CODEGR",  "S", 9,  0);
		_БазаКлассиф.ДобавитьПоле("NAME",    "S", 50, 0);
		_БазаКлассиф.ДобавитьПоле("KORSHET", "S", 20, 0);
		_БазаКлассиф.ДобавитьПоле("ADRES",   "S", 70, 0);
		_БазаКлассиф.ДобавитьПоле("GOR",     "S", 31, 0);
		_БазаКлассиф.ДобавитьПоле("TGROUP",  "N", 1,  0);
		_БазаКлассиф.СоздатьФайл(ИмяБазы);
		_БазаКлассиф.ДобавитьИндекс("GROUP", "CODEGR", 0, 0, "");
		_БазаКлассиф.ДобавитьИндекс("CODE",  "CODE",   1, 0, "");
		_БазаКлассиф.СоздатьИндексныйФайл(ИмяБазыИндекс);
		_БазаКлассиф.ЗакрытьФайл();
		_БазаКлассиф.ОткрытьФайл(ИмяБазы,ИмяБазыИндекс,0);
		НачатьТранзакцию();
		// Формирование данных о регионах 
		Для Индекс=1 По Текст.КоличествоСтрок() Цикл   
			Город="";  Банк=""; КорСчет=""; БИК="";
			ТекстСтроки=Текст.ПолучитьСтроку(Индекс);
			Если (Лев(ТекстСтроки,2) = "//") ИЛИ (ПустоеЗначение(ТекстСтроки) = 1) Тогда
			    Продолжить;
			КонецЕсли;                                  
			НомПоля = 1;
			Пока (ПустаяСтрока(ТекстСтроки)=0) Цикл	//	пока не обработали всю шапку
				//	ищем первое вхождение разделителя
				Поз = Найти(ТекстСтроки,Разделитель);
				Если Поз=0 Тогда	//	не нашли
					НазваниеОдногоПоля = ТекстСтроки;
					ТекстСтроки = "";
				Иначе
					//	вырезаем очередное поля
					НазваниеОдногоПоля = Лев(ТекстСтроки,Поз-1);
					ТекстСтроки = Прав(ТекстСтроки,СтрДлина(ТекстСтроки)-Поз);
				КонецЕсли;
				НазваниеОдногоПоля = СокрЛП(НазваниеОдногоПоля);
				//	добавляем входное поле в таблицу
				Если НомПоля = 1 Тогда
					КодКлассиф = СокрЛП(НазваниеОдногоПоля);
				ИначеЕсли НомПоля = 2 Тогда
					Наименование = СокрЛП(НазваниеОдногоПоля);
				КонецЕсли; 
				НомПоля = НомПоля + 1;
				Если НомПоля>2 Тогда 
					Прервать;  // Завершить просмотр строки, т.к. обработаны все необходимые поля, но есть еще что-то.
				КонецЕсли; 
			КонецЦикла;
			Если КодКлассиф>"00" Тогда
				_БазаКлассиф.Добавить();
				_БазаКлассиф.УстановитьЗначениеПоля("CODE",   КодКлассиф);
				_БазаКлассиф.УстановитьЗначениеПоля("NAME",   Наименование);
				_БазаКлассиф.УстановитьЗначениеПоля("TGROUP", 1);
				_БазаКлассиф.Записать();
			КонецЕсли; 
		КонецЦикла;
			
		// Формирование данных о БИКах	
		Текст.Открыть(ВремКаталог+ИмяФайлаБИК);
		Для Индекс=1 По Текст.КоличествоСтрок() Цикл    
			Город="";  Банк=""; КорСчет=""; БИК="";
			Процент=Цел(Индекс/Текст.КоличествоСтрок()*100);
			Состояние("Обновляется классификатор банков РФ: "+Строка(Окр(Процент,0))+"%");
			ТекстСтроки=Текст.ПолучитьСтроку(Индекс);
			Если (Лев(ТекстСтроки,2) = "//") ИЛИ (ПустоеЗначение(ТекстСтроки) = 1) Тогда
			    Продолжить;
			КонецЕсли;                                  
			НомПоля = 1;
			Пока (ПустаяСтрока(ТекстСтроки)=0) Цикл	//	пока не обработали всю шапку
				//	ищем первое вхождение разделителя
				Поз = Найти(ТекстСтроки,Разделитель);
				Если Поз=0 Тогда	//	не нашли
					НазваниеОдногоПоля = ТекстСтроки;
					ТекстСтроки = "";
				Иначе
					//	вырезаем очередное поля
					НазваниеОдногоПоля = Лев(ТекстСтроки,Поз-1);
					ТекстСтроки = Прав(ТекстСтроки,СтрДлина(ТекстСтроки)-Поз);
				КонецЕсли;
				НазваниеОдногоПоля = СокрЛП(НазваниеОдногоПоля);
				//	добавляем входное поле в таблицу
				Если НомПоля = 1 Тогда
					PZN = ТипБанка(НазваниеОдногоПоля);
				ИначеЕсли НомПоля = 2 Тогда
					Город = ВРег(СокрЛП(НазваниеОдногоПоля));
				ИначеЕсли НомПоля = 3 Тогда
					Город = ТипГорода(НазваниеОдногоПоля)+Город;
				ИначеЕсли НомПоля = 4 Тогда
					Банк = ВРег(СокрЛП(НазваниеОдногоПоля));
					Банк=СтрЗаменить(Банк,"  "," ");
					Банк=СтрЗаменить(Банк,". ",".");
				ИначеЕсли НомПоля = 5 Тогда
					Банк = ?(НазваниеОдногоПоля="+",Банк,СокрЛП(?(Найти(Банк,","+PZN+",")>0,PZN,""))+" "+Банк);
				ИначеЕсли НомПоля = 6 Тогда
					БИК = СокрЛП(НазваниеОдногоПоля);
				ИначеЕсли НомПоля = 7 Тогда
					КорСчет = СокрЛП(НазваниеОдногоПоля);
				КонецЕсли; 
				НомПоля = НомПоля + 1;
				Если НомПоля>7 Тогда 
					Прервать;  // Завершить просмотр строки, т.к. обработаны все необходимые поля, но есть еще что-то.
				КонецЕсли; 
			КонецЦикла;
			Если ПустоеЗначение(БИК)=0 Тогда
				_БазаКлассиф.Добавить();
				_БазаКлассиф.УстановитьЗначениеПоля("NAME",    Банк);
				_БазаКлассиф.УстановитьЗначениеПоля("CODE",    БИК);
				_БазаКлассиф.УстановитьЗначениеПоля("KORSHET", КорСчет);
				_БазаКлассиф.УстановитьЗначениеПоля("ADRES",   "");
				_БазаКлассиф.УстановитьЗначениеПоля("GOR",     Город);
				_БазаКлассиф.УстановитьЗначениеПоля("CODEGR",  Сред(БИК,3,2));
				_БазаКлассиф.УстановитьЗначениеПоля("TGROUP",  2);
				_БазаКлассиф.Записать();
			Иначе 
				Сообщить("Стр: "+Индекс);
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	Если _БазаКлассиф.Открыта()=1 Тогда
		_БазаКлассиф.ЗакрытьФайл();
	КонецЕсли;
	
КонецПроцедуры  // ОбновитьКлассификатор()
//******************************************************************************
//	ПолучитьФайл()
//
//	Описание: получает файл справочника с сервера РБК 
Функция ПолучитьФайл() 
	Адрес = "http://cbrates.rbc.ru/bnk/bnk.exe";  
	ВремКаталог = КаталогИБ()+"ExtForms\";
	Если ФС.СуществуетФайл(ВремКаталог+"*.*")=0 Тогда 
		ФС.СоздатьКаталог(ВремКаталог);
	КонецЕсли;
	Если Лев(КаталогИБ(), 2)="\\" Тогда
		ВремКаталог = КаталогВременныхФайлов()+"temp.grp\";
	Иначе
		ВремКаталог = КаталогИБ()+"ExtForms\temp.grp\";
	КонецЕсли;
	Если ФС.СуществуетФайл(ВремКаталог+"*.*")=0 Тогда 
		ФС.СоздатьКаталог(ВремКаталог);
	КонецЕсли;
	Попытка                     
		Соединение.ПолучитьКакФайл(Адрес, ВремКаталог+ИмяФайлаЗип);
	Исключение 
		Сообщить("Неудачная попытка соединения.");
		Возврат 0;                   
	КонецПопытки;
	ТекКаталог = ФС.ТекКаталог();
	ФС.УстТекКаталог(ВремКаталог);
	КомандаСистемы(""""+ВремКаталог+ИмяФайлаЗип+"""");
	ФС.УдалитьФайл(ВремКаталог+ИмяФайлаЗип);
	Если  ФС.СуществуетФайл(ВремКаталог+ИмяФайлаБИК)<> 0 Тогда
		ОбновитьКлассификатор();
		ФС.УдалитьФайл(ВремКаталог+ИмяФайлаБИК);
		ФС.УдалитьФайл(ВремКаталог+ИмяФайлаРег);
		ФС.УстТекКаталог(ТекКаталог);
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции  //  ПолучитьФайл
//******************************************************************************
//	УстановитьКомпоненту()
//
//	Описание:  Осуществляет загрузку внешней компоненты V7Plus.dll
Функция УстановитьКомпоненту()
	Если ЗагрузитьВнешнююКомпоненту(КаталогИБ()+"ExtForms\v7plus.dll")=0 Тогда
		Если ЗагрузитьВнешнююКомпоненту("v7plus.dll")=0 Тогда
			Сообщить("Не удалось обнаружить компоненту V7Plus.dll!"); 
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Попытка
		Инфо = СоздатьОбъект("AddIn.V7SysInfo");
	Исключение 
		Сообщить("Не удалось создать объект Addin.V7SysInfo!");
		Возврат 0;
	КонецПопытки;  
	Попытка
		Соединение = СоздатьОбъект("Addin.V7HttpReader") ;
		Соединение.КоличествоПопытокАвторизации = 3;
	Исключение 
		Сообщить("Не удалось создать объект Addin.V7HttpReader!");
		Возврат 0;
	КонецПопытки;  
	Возврат 1;
КонецФункции  // УстановитьКомпоненту
//**************************************************************************************
Процедура ПриОткрытии()
	
	Если УстановитьКомпоненту()=0 Тогда
	    СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Параметры=Форма.Параметр;
	
	Если ТипЗначенияСтр(Параметры) <> "СписокЗначений" Тогда
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.Установить("Классификатор обновлен", 0);
		
	Иначе
		КаталогБазы     = СокрЛП(Параметры.Получить("Каталог базы"));
		Если ФС.СуществуетФайл(КаталогБазы+"*.*")=0 Тогда
			ФС.СоздатьКаталог(КаталогБазы);
		КонецЕсли;
		
		Параметры.УдалитьВсе();
		Параметры.Установить("Классификатор обновлен", 0);
		
		ПолучитьФайл();
		
		Форма.Параметр = Параметры;
	КонецЕсли;
	
	СтатусВозврата(0);
	
КонецПроцедуры

//*********************************
ИмяФайлаЗип = "bnk.exe";  
ИмяФайлаБИК = "bnkseek.txt"; 
ИмяФайлаРег = "Reg.txt"; 
