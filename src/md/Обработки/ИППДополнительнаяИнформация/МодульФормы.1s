// Версия обаботки - 3
// изменен адрес ресурсов
// ========================================

Перем КаталогКалендарей,Каталог,ФайлТМП,КаталогДискета,КаталогИТС;
Перем Текст,Соединение,АдресВЭБ,Сообщение,ТабРазмер, ВидСортировки;
Перем НовыеТабл, ПолныйСписок, ИмяФайлаСписка, Разделитель, ЗапоминатьНомерРаздела;
//*****************************************************************************
// УстРасширение()
//
// Описание:  Преобразует имя файла (замена расширения)
//		
Функция УстРасширение(ИмяФайла,Расширение);
	Возврат Лев(ИмяФайла,СтрДлина(ИмяФайла)-4)+"."+Расширение;
КонецФункции

//*****************************************************************************
Функция Показать();
	Если Отчеты.ТекущаяСтрока()=0 Тогда
		Возврат 0;
	КонецЕсли;
	ТекСтрока = Отчеты.ТекущаяСтрока();
	ФайлОтчета = СокрЛП(Отчеты.ФайлОтчета); 
	Если НРег(Прав(ФайлОтчета,3))="ert" Тогда  
		Возврат 0;
	КонецЕсли;
			
	Если НРег(Прав(ФайлОтчета,3))="mxl" Тогда  
		Если ФС.СуществуетФайл(КаталогКалендарей+"\"+ФайлОтчета)=1 Тогда
			Инфо = СоздатьОбъект("Таблица");
			Инфо.Открыть(КаталогКалендарей+"\"+ФайлОтчета);
			Инфо.Показать(Отчеты.Название,"");
		Иначе
			Предупреждение("Файл не найден!",10);
		КонецЕсли;
	ИначеЕсли НРег(Прав(ФайлОтчета,3))="txt" Тогда
		Если ФС.СуществуетФайл(КаталогКалендарей+"\"+ФайлОтчета)=1 Тогда
			Инфо = СоздатьОбъект("Текст");
			Инфо.Открыть(КаталогКалендарей+"\"+ФайлОтчета);
			Инфо.Показать(Отчеты.Название,"");
		Иначе
			Предупреждение("Файл не найден!",10);
		КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции // Показать

//*****************************************************************************
// Разложить(Знач Стр, Разделитель = ";")
//
// Параметры: 
//  Стр - строка, которую необходимо разложить на подстроки. 
//        Параметр передается по значению.
//  Разделитель - строка-разделитель, по умолчанию - точка с запятой.
//
// Возвращаемое значение:
//  Список значений элементы которого - подстроки
//
// Описание:
//  Функция "расщепляет" строку на подстроки, используя заданный 
//  разделитель. Разделитель может иметь любую длину. 
//  Если в качестве разделителя задан пробел, рядом стоящие пробелы 
//  считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//  игнорируются.
//  Например, 
//  Разложить(";ку;;;му"; ";") возвратит список значений из пяти элементов, 
//  три из которых - пустые строки, а 
//  Разложить(" ку   му", " ") возвратит список значений из двух элементов
//		
Функция Разложить(Знач Стр, Разделитель = ";") 
	Список = СоздатьОбъект("СписокЗначений");
	Длина  = СтрДлина(Разделитель);
	Стр = СокрЛП(Стр);
	Поз = Найти(Стр, Разделитель);
	
	Пока 0 < Поз Цикл
		Список.ДобавитьЗначение(СокрП(Лев(Стр, Поз-1)));
		
		Стр = СокрЛ(Сред(Стр, Поз+Длина));
		Поз = Найти(Стр, Разделитель);
	КонецЦикла;

	Список.ДобавитьЗначение(Стр);
	Возврат Список;
КонецФункции // Разложить()

//******************************************************************************
// Размер()
//
// Описание:  Подсчет размера отмеченных для установки файлов
//		
Функция Размер();
	Сумм = 0;
	Для Н=1 По Новые.РазмерСписка() Цикл
		Если Новые.Пометка(Н)=1 Тогда
			ТабРазмер.ПолучитьСтрокуПоНомеру(Н);
			Сумм = Сумм + ТабРазмер.Размер;
		КонецЕсли;
	КонецЦикла;
	Возврат ?(Сумм = 0,"",СокрЛП(Формат(Сумм,"Ч15.2"))+" кВ");
КонецФункции

//*****************************************************************************
// ВосстановитьТекОтчет()
//
// Описание:  Восстанавливает текущее положение курсора в списке файлов.
//
Процедура ВосстановитьТекОтчет()
	Если Отчеты.КоличествоСтрок() <> 0 Тогда            
		Стр=0;
		Отчеты.НайтиЗначение(ВосстановитьЗначение("ВнОтчОтчет"),Стр,"ФайлОтчета");
		Отчеты.ТекущаяСтрока(Макс(1,Стр));
	КонецЕсли;
КонецПроцедуры // ВосстановитьТекОтчет

//*****************************************************************************
// Установить(Режим="") 
//
// Описание: Устанавливает, снимает или инвертирует отметки выбора строк списка 
// Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
Процедура Установить(Режим="") 
	Для Н=1 По Новые.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			Новые.Пометка(Н,1);
		ИначеЕсли Режим="Сброс" Тогда
			Новые.Пометка(Н,0); 
		Иначе
			Новые.Пометка(Н,?(Новые.Пометка(Н)=1,0,1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  // Установить

//*****************************************************************************
Процедура СнятьАтрибут(ПолныйПуть)
	Попытка
		КомандаСистемы("attrib -R "+ПолныйПуть);
	Исключение
	КонецПопытки;
КонецПроцедуры  //  СнятьАтрибут
//*****************************************************************************
Процедура ПриСменеРаздела()
	ПолныйСписок.Сортировать("+Раздел");
	Если СписокРазделов.ТекущаяСтрока()>0 Тогда
		НомСтр = 0; 
		ТекРаздел = СписокРазделов.ПолучитьЗначение(СписокРазделов.ТекущаяСтрока());
		Если ТекРаздел = "Все разделы" Тогда 
			НомСтр=1;
		Иначе
			ПолныйСписок.НайтиЗначение(ТекРаздел,НомСтр,"Раздел");
		КонецЕсли;
		Отчеты.УдалитьСтроки();
		Если НомСтр>0 Тогда
			Для Н=НомСтр По ПолныйСписок.КоличествоСтрок() Цикл
				ПолныйСписок.ПолучитьСтрокуПоНомеру(Н);
				Если (ПолныйСписок.Раздел <> ТекРаздел) И (ТекРаздел<>"Все разделы") Тогда
					Прервать;
				КонецЕсли;
				Отчеты.НоваяСтрока();
				Отчеты.Пикт = ПолныйСписок.Пикт;
				Отчеты.Название = ПолныйСписок.Название;
				Отчеты.НазваниеВР = Врег(ПолныйСписок.Название);
				Отчеты.ФайлОтчета = ПолныйСписок.ФайлОтчета;
				Отчеты.Версия = ПолныйСписок.Версия;
				Отчеты.Раздел = ПолныйСписок.Раздел;
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
	Отчеты.Сортировать("+"+Сортировка.ПолучитьЗначение(ВидСортировки)); // Название
	АктивизироватьОбъект(Отчеты);
КонецПроцедуры // ПриСменеРаздела
//*****************************************************************************
Процедура ПриВыбореСортировки()
	ТекЗнач = Отчеты.ПолучитьЗначение(Отчеты.ТекущаяСтрока(),"ФайлОтчета");
	ВидСортировки = Сортировка.ТекущаяСтрока();
	Отчеты.Сортировать("+"+Сортировка.ПолучитьЗначение(ВидСортировки));
	Стр=0; 
	Отчеты.НайтиЗначение(ТекЗнач,Стр,"ФайлОтчета");
	Отчеты.ТекущаяСтрока(Стр);
	АктивизироватьОбъект(Отчеты);
КонецПроцедуры // ПриВыбореСортировки
//*****************************************************************************
Процедура ЗаполнитьСписокРазделов()
	СписокРазделов.УдалитьВсе();
	СписокРазделов.ДобавитьЗначение("Все разделы"); 
	Для Н=1 По ПолныйСписок.КоличествоСтрок() Цикл
		ПолныйСписок.ПолучитьСтрокуПоНомеру(Н);
		Раздел = ПолныйСписок.Раздел;
		Если (СписокРазделов.Принадлежит(Раздел)=0) И (ПустоеЗначение(Раздел)=0) Тогда
			СписокРазделов.ДобавитьЗначение(Раздел); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ЗаполнитьСписокРазделов
//*****************************************************************************
Функция ПроверитьТекст(ФайлСписка, ПолныйСписокСтрока)
	ВходТекст = СоздатьОбъект("Текст");
	ВходТекст.Открыть(КаталогКалендарей+"\"+СокрЛП(ФайлСписка));	// открываем файл 
	// Сведения о текстовых данных для обработки "ИППДополнительнаяИнформация", хранящихся на сайте 
	//
	// Для текста существует заголовок, кот. при выдаче на экран не показывается.
	// Заголовок всегда расположен в начале текста (исключая комментарии и пустые строки до заголовка)
	// Начало заголовка: ##$$&&
	// После этих символов располагаются данные заголовка:
	//	1	- 	Название группы / раздела
	//	2	-	Название данных
	//	3	-	Версия
	//  [4]	-	Тип данных (пока = 1 (текст), далее будет использоваться для универсальных обработок)
	//			данные в этом случае будут представлять только контекст, а наполнение будет стандартным 
	//			и определяться по типу (обработки для отработки различных типов текстовых файлов также 
	//			могут быть получены средствами ИПП).
	//
	// новое
	//	5	- 	идентификаторы информации (файлов)
	//  [6]	-	дата опубликования, если не задана, то дата установки
	//	[7]	-	срок использования (дата / число дней (<6> - обязательно), если не задана, то бессрочно).
	//			если <6> не задана, то только дата окончания (если нужно)
	//  [8]	-	действие (число) (=0 снимать показ / =1 стирать), если не задано, то 0
	// *****
	//
	// поля разделяются разделителем ";";
	// пробелы в полях не учитываются.
	//	После строки заголовка располагается собственно текст.
	Для К=1 По ВходТекст.КоличествоСтрок() Цикл
		Стр = ВходТекст.ПолучитьСтроку(К);
		Стр = СокрЛП(Стр);
		Если (Лев(Стр,2) = "//") ИЛИ (ПустоеЗначение(Стр)=1) Тогда
		    Продолжить;
		Иначе
			Поз = Найти(Стр,"##$$&&");
			Если Поз>0 Тогда 
				Стр = СокрЛП(Сред(Стр,Поз+6));
				Список = Разложить (Стр);
				ПолныйСписокСтрока.ФайлОтчета = СокрЛП(ФайлСписка);
				ПолныйСписокСтрока.Раздел = ?(0 < Список.РазмерСписка(), Список.ПолучитьЗначение(1), "");
				ПолныйСписокСтрока.Название = ?(1 < Список.РазмерСписка(), Список.ПолучитьЗначение(2), "");
				ПолныйСписокСтрока.Версия = ?(2 < Список.РазмерСписка(), Список.ПолучитьЗначение(3), "");
				ПолныйСписокСтрока.Пикт = "3";
				ПолныйСписокСтрока.ИнфоИД=?(4 < Список.РазмерСписка(), Список.ПолучитьЗначение(5), "");
				ДатаОпубликования = ?(5 < Список.РазмерСписка(), Дата(Список.ПолучитьЗначение(6)), ПолучитьПустоеЗначение("Дата"));
				ПолныйСписокСтрока.ДатаОпубликования=?(ПустоеЗначение(ДатаОпубликования)=0, ДатаОпубликования, ТекущаяДата());
				СрокИспользования=?(6 < Список.РазмерСписка(), Список.ПолучитьЗначение(7), "");
				Если (СтрДлина(СрокИспользования)<>10) И (ПустоеЗначение(СрокИспользования)=0) Тогда 
					// задано число дней "годности" 
					Если ПустоеЗначение(ДатаОпубликования)=0 Тогда
						ПолныйСписок.СрокИспользования = ПолныйСписок.ДатаОпубликования+Число(СрокИспользования);
					Иначе
						ПолныйСписок.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
					КонецЕсли;                          
				ИначеЕсли СтрДлина(СрокИспользования)=10 Тогда 
					// задана конкретная дата
					ПолныйСписок.СрокИспользования = Дата(СрокИспользования); 
				Иначе // бессрочное использование
					ПолныйСписок.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
				КонецЕсли;                          
				ПолныйСписокСтрока.Действие=?(7 < Список.РазмерСписка(), Число(Список.ПолучитьЗначение(8)), 0);
				
				Возврат К+1;
			Иначе
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции // ПроверитьТекст	

//*****************************************************************************
Процедура ПроверкаПоказа(Список, Режим=0) 
	Р = Список.КоличествоСтрок();
	Для Н=1 По Р Цикл 
		Список.ПолучитьСтрокуПоНомеру(Р-Н+1);
		Если ПустоеЗначение(Список.СрокИспользования)=0 Тогда
			Если Дата(Список.СрокИспользования)<ТекущаяДата() Тогда 
				Если (Список.Действие=1)Тогда   
					Если ФС.СуществуетФайл(КаталогКалендарей+"\"+СокрЛП(Список.ФайлОтчета))=1 Тогда
						ФС.УдалитьФайл();
					КонецЕсли;
				КонецЕсли;
				Список.УдалитьСтроку(Р-Н+1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  ПроверкаПоказа

//*****************************************************************************
// Заполнить() 
//
// Описание: Формирует список файлов и данными, входящими 
// 			  в состав дополнительной информации 
//
Процедура Заполнить(Режим="Заполнить")
	Перем Раздел,Название,Версия,Тип;
	Если (ПолныйСписок.КоличествоСтрок()>0)И(Режим="Заполнить") Тогда
		ПолныйСписок.УдалитьСтроки();
	КонецЕсли;
	
	ТекКаталог = ФС.ТекКаталог(); 
	ФС.УстТекКаталог(КаталогКалендарей); 
	
	// Просмотр таблиц
	Файл = ФС.НайтиПервыйФайл("*.mxl");
	Пока ПустаяСтрока(Файл) = 0 Цикл              
		Если (Файл <> "..") И (Файл <> ".") И (Сред(Файл,8,1)<>"R") Тогда 
			Если ФС.СуществуетФайл(КаталогКалендарей+"\"+Лев(Файл,12))=1 Тогда
				Если Режим="Обновить" Тогда 
					СтрокаТаблицы = 0;
					Если ПолныйСписок.НайтиЗначение(ВРег(Лев(Файл+"            ",12)),СтрокаТаблицы,"ФайлОтчета")=1 Тогда
						Файл = ФС.НайтиСледующийФайл();
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				ТабТМП=СоздатьОбъект("Таблица");
				ТабТМП.ИсходнаяТаблица(КаталогКалендарей+"\"+Лев(Файл,12));
				Попытка
					ПолныйСписок.НоваяСтрока();
					Секц=ТабТМП.ПолучитьСекцию("Служебная|Основная");
					
					ПолныйСписок.Название=СокрЛП(Секц.Область("R8C5").Текст)+"  "+СокрЛП(Секц.Область("R9C5").Текст);
					ПолныйСписок.НазваниеВР = Врег(ПолныйСписок.Название);
					ПолныйСписок.Пикт = СокрЛП(Секц.Область("R7C5").Текст);
					ПолныйСписок.Пикт = ?(ПустаяСтрока(ПолныйСписок.Пикт)=1,"1",ПолныйСписок.Пикт);
					ПолныйСписок.ФайлОтчета = Врег(Файл);
					ПолныйСписок.Версия = СокрЛП(Секц.Область("R10C5").Текст);
					ПолныйСписок.Раздел = СокрЛП(Секц.Область("R11C5").Текст);
					Если ПустаяСтрока(ПолныйСписок.Раздел)=1 Тогда 
						Если Найти(ПолныйСписок.НазваниеВР,"1С")>0 Тогда
							ПолныйСписок.Раздел = "Информация от фирмы ""1С""";
						ИначеЕсли Найти(ПолныйСписок.НазваниеВР,"КАЛЕНДАРЬ")>0 Тогда
							ПолныйСписок.Раздел = "Календари";
						ИначеЕсли Найти(ПолныйСписок.НазваниеВР,"СПРАВОЧНАЯ")>0 Тогда
							ПолныйСписок.Раздел = "Справочная информация";
						Иначе
							ПолныйСписок.Раздел = "Прочее";
						КонецЕсли;
					КонецЕсли; 
					
					ПолныйСписок.ИнфоИД = СокрЛП(Секц.Область("R12C5").Текст); 
					ДатаОпубликования = Дата(СокрЛП(Секц.Область("R18C5").Текст));
					ПолныйСписок.ДатаОпубликования=?(ПустоеЗначение(ДатаОпубликования)=0, ДатаОпубликования, ТекущаяДата());
					СрокИспользования = СокрЛП(Секц.Область("R19C5").Текст);
					Если (СтрДлина(СрокИспользования)<>10) И (ПустоеЗначение(СрокИспользования)=0) Тогда 
						// задано число дней "годности" 
						Если ПустоеЗначение(ДатаОпубликования)=0 Тогда
							ПолныйСписок.СрокИспользования = ПолныйСписок.ДатаОпубликования+Число(СрокИспользования);
						Иначе
							ПолныйСписок.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
						КонецЕсли;                          
					ИначеЕсли СтрДлина(СрокИспользования)=10 Тогда 
						// задана конкретная дата
						ПолныйСписок.СрокИспользования = Дата(СрокИспользования); 
					Иначе // бессрочное использование
						ПолныйСписок.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
					КонецЕсли;                          
					
					Если ТабТМП.ВысотаСекции("Служебная|Основная")>19 Тогда
						ПолныйСписок.Действие = Число(СокрЛП(Секц.Область("R20C5").Текст));
					Иначе
						ПолныйСписок.Действие = 0;
					КонецЕсли;
					
					Если ТабТМП.ВысотаСекции("Служебная|Основная")>21 Тогда
						ПолныйСписок.НеобходимостьОткрытия = Число(СокрЛП(Секц.Область("R21C5").Текст));
					Иначе
						ПолныйСписок.НеобходимостьОткрытия = 1;
					КонецЕсли;  
					
					// если "старая" таблица, то не показывать
					Если (ПолныйСписок.СрокИспользования<ТекущаяДата()) И (ПустоеЗначение(ПолныйСписок.СрокИспользования)=0) Тогда 
						Если (ПолныйСписок.Действие=1)Тогда  
							Если ФС.СуществуетФайл(КаталогКалендарей+"\"+СокрЛП(ПолныйСписок.ФайлОтчета))=1 Тогда
								ФС.УдалитьФайл();
							КонецЕсли;
						КонецЕсли;
						ПолныйСписок.УдалитьСтроку(ПолныйСписок.НомерСтроки);
					КонецЕсли; 
				Исключение
					ПолныйСписок.УдалитьСтроку(ПолныйСписок.НомерСтроки);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Файл = ФС.НайтиСледующийФайл();
	КонецЦикла;
	
	// Просмотр внешних обработок
	Файл = ФС.НайтиПервыйФайл("*.ert");
	Пока ПустаяСтрока(Файл) = 0 Цикл              
		Если (Файл <> "..") И (Файл <> ".") Тогда 
			Если ФС.СуществуетФайл(КаталогКалендарей+"\"+Лев(Файл,12))=1 Тогда
				Если Режим="Обновить" Тогда 
					СтрокаТаблицы = 0;
					Если ПолныйСписок.НайтиЗначение(ВРег(Лев(Файл+"            ",12)),СтрокаТаблицы,"ФайлОтчета")=1 Тогда
						Файл = ФС.НайтиСледующийФайл();
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				Попытка 
					ПолныйСписок.НоваяСтрока();
					Парам = СоздатьОбъект("СписокЗначений");
					Парам.ДобавитьЗначение("Опрос");
					ОткрытьФорму("Отчет",Парам,КаталогКалендарей+"\"+Файл);
					ПолныйСписок.Название=СокрЛП(""+Парам.Получить("Группа")+"  "+Парам.Получить("Название"));
					ПолныйСписок.НазваниеВР=Врег(ПолныйСписок.Название);
					ПолныйСписок.Пикт="2";
					ПолныйСписок.ФайлОтчета=Врег(Файл);
					ПолныйСписок.Версия=Парам.Получить("Версия");
					ПолныйСписок.Раздел=Парам.Получить("Раздел");
					ПолныйСписок.ИнфоИД=Парам.Получить("ИнфоИД");
					ПолныйСписок.ДатаОпубликования=Парам.Получить("ДатаОпубликования");
					СрокИспользования = Парам.Получить("СрокИспользования");
					Если (СтрДлина(СрокИспользования)<>10) И (ПустоеЗначение(СрокИспользования)=0) Тогда 
						// задано число дней "годности"
						Если ПустоеЗначение(ПолныйСписок.ДатаОпубликования)=0 Тогда
							ПолныйСписок.СрокИспользования = ПолныйСписок.ДатаОпубликования+Число(СрокИспользования);
						Иначе
							ПолныйСписок.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
						КонецЕсли;                          
					ИначеЕсли СтрДлина(СрокИспользования)=10 Тогда 
						// задана конкретная дата
						ПолныйСписок.СрокИспользования = Дата(СрокИспользования);
					Иначе // бессрочное использование
						ПолныйСписок.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
					КонецЕсли;                          
					//ПолныйСписок.СрокИспользования=Парам.Получить("СрокИспользования");
					ПолныйСписок.Действие=Парам.Получить("Действие");
					ПолныйСписок.НеобходимостьОткрытия=Парам.Получить("НеобходимостьОткрытия");
					Если (ПолныйСписок.СрокИспользования<ТекущаяДата()) И (ПустоеЗначение(ПолныйСписок.СрокИспользования)=0) Тогда 
						Если (ПолныйСписок.Действие=1)Тогда  
							Если ФС.СуществуетФайл(КаталогКалендарей+"\"+СокрЛП(ПолныйСписок.ФайлОтчета))=1 Тогда
								ФС.УдалитьФайл();
							КонецЕсли;
						КонецЕсли;
						ПолныйСписок.УдалитьСтроку(ПолныйСписок.НомерСтроки);
					КонецЕсли; 
				Исключение
					ПолныйСписок.УдалитьСтроку(ПолныйСписок.НомерСтроки);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Файл = ФС.НайтиСледующийФайл();
	КонецЦикла; 
	
	// Просмотр текстовых файлов
	Файл = ФС.НайтиПервыйФайл("*.txt");
	Пока ПустаяСтрока(Файл) = 0 Цикл              
		Если (Файл <> "..") И (Файл <> ".") Тогда 
			Если ФС.СуществуетФайл(КаталогКалендарей+"\"+Лев(Файл,12))=1 Тогда
				Если Режим="Обновить" Тогда 
					СтрокаТаблицы = 0;
					Если ПолныйСписок.НайтиЗначение(ВРег(Лев(Файл+"            ",12)),СтрокаТаблицы,"ФайлОтчета")=1 Тогда
						Файл = ФС.НайтиСледующийФайл();
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				Попытка
					ПолныйСписок.НоваяСтрока();
					Если ПроверитьТекст(Лев(Файл,12),ПолныйСписок)=0 Тогда
						ПолныйСписок.УдалитьСтроку(ПолныйСписок.НомерСтроки);
					КонецЕсли;
				Исключение
					ПолныйСписок.УдалитьСтроку(ПолныйСписок.НомерСтроки);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Файл = ФС.НайтиСледующийФайл();
	КонецЦикла; 
	ЗаполнитьСписокРазделов();
	СписокРазделов.ТекущаяСтрока(1);
	ПриСменеРаздела();
	
	ФС.УстТекКаталог(ТекКаталог);
КонецПроцедуры  // Заполнить

//*****************************************************************************
// Выбрать() 
//
// Описание: Открывает выбранный внешний файл. 
// 			 Вызывается из кнопки "Открыть" или по двойному клику в списке данных
//
Процедура Выбрать()
	Перем СтрокаТаблицы;
	Если Отчеты.ТекущаяСтрока()=0 Тогда
		Возврат;
	КонецЕсли;
	Файл = СокрЛП(Отчеты.ФайлОтчета);
	Если ФС.СуществуетФайл(КаталогКалендарей+"\"+Файл)=1 Тогда
		Расширение = ВРег(Прав(Файл,3));
		Если Расширение = "ERT" Тогда
			Если ПолныйСписок.НайтиЗначение(ВРег(Лев(Файл+"            ",12)),СтрокаТаблицы,"ФайлОтчета")=1 Тогда
				ПолныйСписок.ПолучитьСтрокуПоНомеру(СтрокаТаблицы);
				Парам = СоздатьОбъект("СписокЗначений");
				Парам.ДобавитьЗначение("открытие","Режим");
				Парам.ДобавитьЗначение(ПолныйСписок.НеобходимостьОткрытия,"НеобходимостьОткрытия");
				ОткрытьФорму("Отчет",Парам,КаталогКалендарей+"\"+Файл);
			Иначе
				ОткрытьФорму("Отчет",,КаталогКалендарей+"\"+Файл);
			КонецЕсли;
		ИначеЕсли Расширение = "MXL" Тогда
			ОткрытьФорму("Отчет.ИППКалендарь#"+Файл,Файл);
		ИначеЕсли Расширение = "TXT" Тогда
			ФС.КопироватьФайл(КаталогКалендарей+"\"+Файл,КаталогВременныхФайлов()+"tmp.txt",0);
			Текст = СоздатьОбъект("Текст");
			Текст.Открыть(КаталогВременныхФайлов()+"tmp.txt");
			Текст.УдалитьСтроку(1);
			Текст.Записать(КаталогВременныхФайлов()+"tmp.txt");   
			Текст1 = СоздатьОбъект("Текст");
			Текст1.Открыть(КаталогВременныхФайлов()+"tmp.txt");
	     	Текст1.Показать(Отчеты.Название,"");   
			Текст1.ТолькоПросмотр(1);
		КонецЕсли;
	Иначе
		Предупреждение("Выбранная информация отсутствует!", 10 );
	КонецЕсли;
КонецПроцедуры // Выбрать

//*****************************************************************************
// Удалить() 
//
// Описание: Удаляет выбранный внешний файл с данными 
//
Процедура Удалить()
	Перем Размер,Атр,ВС,ВД,ВЗ,Расш;
	Если Отчеты.ТекущаяСтрока()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если Вопрос("Удалить таблицу данных?","Да+Нет")="Да" Тогда 
		Стр=Отчеты.ТекущаяСтрока();
		Файл = Отчеты.ФайлОтчета;
		ФГ=СоздатьОбъект("ФС");
		ФГ.АтрибутыФайла(Файл, Размер, Атр, ВС, ВД, ВЗ, Расш);
		Если Лев(Атр,1)="1" Тогда
			СнятьАтрибут(Файл);
		КонецЕсли;
		ФС.УдалитьФайл(КаталогКалендарей+"\"+Отчеты.ФайлОтчета);
		Отчеты.УдалитьСтроку();
		Отчеты.ТекущаяСтрока(?(Стр>Отчеты.КоличествоСтрок(),Стр-1,Стр));
		Стр = 0;
		ПолныйСписок.НайтиЗначение(Файл,Стр,"ФайлОтчета");
		ПолныйСписок.УдалитьСтроку(Стр);
	КонецЕсли;
КонецПроцедуры // Удалить

//*****************************************************************************
Процедура НовыйРаздел() 
	Перем Название;
	Если ВвестиСтроку(Название,"Введите наименование раздела",100)=1 Тогда 
		СписокРазделов.ДобавитьЗначение(Название);
	КонецЕсли;
КонецПроцедуры // НовыйРаздел
//*****************************************************************************
Процедура НазваниеРаздела()
	Перем ПрежнееНазвание,Стр;
	Название = СписокРазделов.ПолучитьЗначение(СписокРазделов.ТекущаяСтрока());
	ПрежнееНазвание = Название;
	Если ВвестиСтроку(Название,"Исправьте наименование",100)=1 Тогда 
		СписокРазделов.УстановитьЗначение(СписокРазделов.ТекущаяСтрока(),Название);
		Стр = 0;
		Пока ПолныйСписок.НайтиЗначение(ПрежнееНазвание,Стр,"Раздел")=1 Цикл 
			ПолныйСписок.УстановитьЗначение(Стр,"Раздел",Название);
			Стр = 0;
		КонецЦикла;
		Стр = 0;
		Пока Отчеты.НайтиЗначение(ПрежнееНазвание,Стр,"Раздел")=1 Цикл 
			Отчеты.УстановитьЗначение(Стр,"Раздел",Название);
			Стр = 0;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // НазваниеРаздела
//*****************************************************************************
Процедура Перенос()
	Перем Раздел,Разделы,Поз;
	Если Отчеты.ТекущаяСтрока()=0 Тогда
		Возврат;
	КонецЕсли;
	СписокРазделов.Выгрузить(Разделы,,);  
	Разделы.УдалитьЗначение(1);
	Файл = Отчеты.ФайлОтчета;
	РазделПрежний = Отчеты.Раздел;   
	Поз=1;
	Если Разделы.ВыбратьЗначение(Раздел,,Поз,,2)=1 Тогда
		Если Раздел<>РазделПрежний Тогда
			Если СписокРазделов.ПолучитьЗначение(СписокРазделов.ТекущаяСтрока())<>"Все разделы" Тогда
				Отчеты.УдалитьСтроку();
			Иначе
				Отчеты.Раздел = Раздел;
			КонецЕсли;
			Стр = 0;
			ПолныйСписок.НайтиЗначение(Файл,Стр,"ФайлОтчета");
			ПолныйСписок.ПолучитьСтрокуПоНомеру(Стр);
			ПолныйСписок.Раздел = Раздел;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // Перенос
//*****************************************************************************
Процедура Изменить()
	Если Отчеты.ТекущаяСтрока()=0 Тогда
		Возврат;
	КонецЕсли;
	Файл = Отчеты.ФайлОтчета;
	Название = Отчеты.Название;   
	Если ВвестиСтроку(Название,"Исправьте наименование",100)=1 Тогда 
		Отчеты.Название = Название;
		Отчеты.НазваниеВР = Врег(Название);
		Стр = 0;
		ПолныйСписок.НайтиЗначение(Файл,Стр,"ФайлОтчета");
		ПолныйСписок.ПолучитьСтрокуПоНомеру(Стр);
		ПолныйСписок.Название = Название;
		ПолныйСписок.НазваниеВР = Врег(Название);
		ПриВыбореСортировки();
	КонецЕсли;
КонецПроцедуры // Изменить
//*****************************************************************************
Процедура УдалитьИзСписка()
	Если Отчеты.ТекущаяСтрока()=0 Тогда
		Возврат;
	КонецЕсли;
	ТекСтрока = Отчеты.ТекущаяСтрока();
	Файл = Отчеты.ФайлОтчета;
	Отчеты.УдалитьСтроку();
	Стр = 0;
	ПолныйСписок.НайтиЗначение(Файл,Стр,"ФайлОтчета");
	ПолныйСписок.УдалитьСтроку(Стр); 
	Отчеты.ТекущаяСтрока(?(ТекСтрока>Отчеты.КоличествоСтрок(),?(ТекСтрока=1,1,ТекСтрока-1),ТекСтрока));
КонецПроцедуры // УдалитьИзСписка
//*****************************************************************************

Процедура ДобавитьДанные(Нов, Табл, Список); 
	Название = ?(0 < Список.РазмерСписка(), Список.ПолучитьЗначение(1), "");
	Раздел = Название;
	Название = СокрЛП(Название +"  "+ ?(1 < Список.РазмерСписка(), Список.ПолучитьЗначение(2), ""));
	Версия = ?(2 < Список.РазмерСписка(), Список.ПолучитьЗначение(3), "");
	ТабРазмер.НоваяСтрока();  
	ТабРазмер.Размер = ?(3 < Список.РазмерСписка(), Список.ПолучитьЗначение(4), 0);
	ФайлОтчета = Врег(?(4 < Список.РазмерСписка(), Список.ПолучитьЗначение(5), ""));
	ТипФайла = Врег(?(Прав(ФайлОтчета,3)="EXE","MXL",Прав(ФайлОтчета,3)));
	ТМП = ?(5 < Список.РазмерСписка(), Список.ПолучитьЗначение(6), "");
    Раздел = ?(ПустаяСтрока(ТМП)=1,Раздел,ТМП); 
	ТМП = ?(6 < Список.РазмерСписка(), Список.ПолучитьЗначение(7), ТипФайла);
	ТипФайла = Врег(?(ПустаяСтрока(ТМП)=1,ТипФайла,ТМП));
	Пикт = ?(7 < Список.РазмерСписка(), Список.ПолучитьЗначение(8), 0);
	ИнфоИД = ?(8 < Список.РазмерСписка(), Список.ПолучитьЗначение(9), ""); 
	ДатаОпубликования = ?(9 < Список.РазмерСписка(), Дата(Список.ПолучитьЗначение(10)), ТекущаяДата());  
	СрокИспользования = ?(10 < Список.РазмерСписка(), Список.ПолучитьЗначение(11), "");
	Действие = ?(11 < Список.РазмерСписка(), Число(Список.ПолучитьЗначение(12)), 0);
	
	Табл.НоваяСтрока();
	Табл.Название = Название;
	Табл.НазваниеВР = Врег(Название);
	Табл.Версия = Версия;
	Табл.ФайлОтчета = Врег(ФайлОтчета);
	Табл.Раздел = Раздел;
	Табл.ТипФайла = ТипФайла;
	Табл.Пикт = ?(ТипФайла="MXL",Пикт,?(ТипФайла="ERT",2,3)); 
	Табл.ИнфоИД = ИнфоИД;
	Табл.ДатаОпубликования = ДатаОпубликования;
	Если (СтрДлина(СрокИспользования)<>10) И (ПустоеЗначение(СрокИспользования)=0) Тогда 
		// задано число дней "годности"
		Табл.СрокИспользования = ДатаОпубликования+Число(СрокИспользования);
	ИначеЕсли СтрДлина(СрокИспользования)=10 Тогда 
		// задана конкретная дата
		Табл.СрокИспользования = СрокИспользования; 
	Иначе // бессрочное использование
		Табл.СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
	КонецЕсли;                          
	Табл.Действие = Действие; 
	Если (Табл.СрокИспользования >= ТекущаяДата()) ИЛИ (ПустоеЗначение(Табл.СрокИспользования)=1) Тогда
		Нов.ДобавитьЗначение(Табл.ФайлОтчета,Табл.Название);
		Нов.Пометка(Новые.РазмерСписка(),1);
	Иначе
		Табл.УдалитьСтроку(Табл.НомерСтроки);
	КонецЕсли;                          
КонецПроцедуры // ДобавитьДанные
//*****************************************************************************

Процедура Параметры()
	Если Отчеты.ТекущаяСтрока()=0 Тогда
		Возврат;
	КонецЕсли;
	ТекСтрока = Отчеты.ТекущаяСтрока();
	ФайлОтчета = СокрЛП(Отчеты.ФайлОтчета);
	ТипДанных = "0";
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	Таб.Очистить();
	Если НРег(Прав(ФайлОтчета,3))="mxl" Тогда
		Если ФС.СуществуетФайл(КаталогКалендарей+"\"+ФайлОтчета)=1 Тогда
			ТабТМП=СоздатьОбъект("Таблица");
			ТабТМП.ИсходнаяТаблица(КаталогКалендарей+"\"+ФайлОтчета);
			Попытка
				Секц=ТабТМП.ПолучитьСекцию("Служебная|Основная");
				ТипДанных = Секц.Область("R7C5").Текст;
				Группа = СокрЛП(Секц.Область("R8C5").Текст);
				Наименование = СокрЛП(Секц.Область("R9C5").Текст);
				Версия = СокрЛП(Секц.Область("R10C5").Текст);
				Раздел = СокрЛП(Секц.Область("R11C5").Текст);
				ИнфоИД = СокрЛП(Секц.Область("R12C5").Текст);
				ДатаО = Дата(СокрЛП(Секц.Область("R18C5").Текст));
				ДатаОпубликования = ?(ПустоеЗначение(ДатаО)=1,ТекущаяДата(),ДатаО);
				Если ТабТМП.ВысотаСекции("Служебная|Основная")>19 Тогда
					Действо = Число(СокрЛП(Секц.Область("R20C5").Текст));
				Иначе
					Действо = 0;
				КонецЕсли;  
				Действие = ?(Действо=0,"Исключать из списка","Исключать из списка и удалять");
				Срок = СокрЛП(Секц.Область("R19C5").Текст);
				Если (СтрДлина(Срок)<>10) И (ПустоеЗначение(Срок)=0) Тогда 
					// задано число дней "годности"
					Если ПустоеЗначение(ДатаО)=0 Тогда
						СрокИспользования = ДатаО+Число(Срок);
					Иначе
						СрокИспользования = "Бессрочное использование";
					КонецЕсли;                          
				ИначеЕсли СтрДлина(Срок)=10 Тогда 
					// задана конкретная дата
					СрокИспользования = Срок; 
				Иначе // бессрочное использование
					СрокИспользования = "Бессрочное использование";
					Действие = "";
				КонецЕсли;                          
				ПериодГод=Секц.Область("R14C5").Текст;
				Тип=Секц.Область("R15C5").Текст; 
				ПериодТип = ?(Тип="0","год",?(Тип="1","полугодие",?(Тип="2","квартал","месяц"))); 
				ПериодЗначение=Секц.Область("R16C5").Текст;
				ПроверятьПриЗапуске=?(Секц.Область("R17C5").Текст="1","Да","Нет");
			Исключение
				Возврат;
			КонецПопытки;
		КонецЕсли;
	ИначеЕсли НРег(Прав(ФайлОтчета,3))="ert" Тогда 
		Если ФС.СуществуетФайл(КаталогКалендарей+"\"+ФайлОтчета)=1 Тогда
			Попытка 
				Парам = СоздатьОбъект("СписокЗначений");
				Парам.ДобавитьЗначение("Опрос");
				ОткрытьФорму("Отчет",Парам,КаталогКалендарей+"\"+ФайлОтчета);
				Наименование = Парам.Получить("Название");
				Группа = Парам.Получить("Группа");
				Версия=Парам.Получить("Версия");
				Раздел=Парам.Получить("Раздел");
				ИнфоИД=Парам.Получить("ИнфоИД");
				ДатаОпубликования=Парам.Получить("ДатаОпубликования");
				Срок=Парам.Получить("СрокИспользования");
				Действо=Парам.Получить("Действие");
				Действие = ?(Действо=0,"Исключать из списка","Исключать из списка и удалять");
				Если (СтрДлина(Срок)<>10) И (ПустоеЗначение(Срок)=0) Тогда 
					// задано число дней "годности"
					СрокИспользования = ДатаОпубликования+Число(Срок);
				ИначеЕсли СтрДлина(Срок)=10 Тогда 
					// задана конкретная дата
					СрокИспользования = Срок; 
				Иначе // бессрочное использование
					СрокИспользования = "Бессрочное использование"; 
					Действие = "";
				КонецЕсли;                          
			Исключение 
				Возврат;
			КонецПопытки;
		КонецЕсли;
	ИначеЕсли НРег(Прав(ФайлОтчета,3))="txt" Тогда
		Если ФС.СуществуетФайл(КаталогКалендарей+"\"+ФайлОтчета)=1 Тогда
			Попытка
				ВходТекст = СоздатьОбъект("Текст");
				ВходТекст.Открыть(КаталогКалендарей+"\"+ФайлОтчета);	// открываем файл 
				Для К=1 По ВходТекст.КоличествоСтрок() Цикл
					Стр = ВходТекст.ПолучитьСтроку(К);
					Стр = СокрЛП(Стр);
					Если (Лев(Стр,2) = "//") ИЛИ (ПустоеЗначение(Стр)=1) Тогда
					    Продолжить;
					Иначе
						Поз = Найти(Стр,"##$$&&");
						Если Поз>0 Тогда 
							Стр = СокрЛП(Сред(Стр,Поз+6));
							Список = Разложить (Стр);
							Раздел = ?(0 < Список.РазмерСписка(), Список.ПолучитьЗначение(1), "");
							Наименование = ?(1 < Список.РазмерСписка(), Список.ПолучитьЗначение(2), "");
							Версия = ?(2 < Список.РазмерСписка(), Список.ПолучитьЗначение(3), "");
							ИнфоИД=?(4 < Список.РазмерСписка(), Список.ПолучитьЗначение(5), "");
							ДатаОпубликования=?(5 < Список.РазмерСписка(), Дата(Список.ПолучитьЗначение(6)), ТекущаяДата());
							Действо=?(7 < Список.РазмерСписка(), Число(Список.ПолучитьЗначение(8)), 0);
							Действие = ?(Действо=0,"Исключать из списка","Исключать из списка и удалять");
							Срок=?(6 < Список.РазмерСписка(), Список.ПолучитьЗначение(7), "");
							Если (СтрДлина(Срок)<>10) И (ПустоеЗначение(Срок)=0) Тогда 
								// задано число дней "годности"
								Если ПустоеЗначение(ДатаОпубликования)=0 Тогда
									СрокИспользования = ДатаОпубликования+Число(Срок);
								Иначе
									СрокИспользования = ПолучитьПустоеЗначение("Дата"); 
								КонецЕсли;                          
							ИначеЕсли СтрДлина(Срок)=10 Тогда 
								// задана конкретная дата
								СрокИспользования = Дата(Срок); 
							Иначе // бессрочное использование
								СрокИспользования = "Бессрочное использование"; 
								Действие = "";
							КонецЕсли;                          
						Иначе
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Исключение
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;                          
	Таб.ВывестиСекцию("Общее");
	Если ТипДанных="1" Тогда
		Таб.ВывестиСекцию("Календарь");
	КонецЕсли;
	Таб.Опции(0,0,1,0,,"ОпцииПараметры");
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
КонецПроцедуры // Параметры
//*****************************************************************************

Процедура Действия()
	Перем Выбор,Поз;
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("П&еренести в раздел");
	Меню.ДобавитьЗначение("&Новый раздел");
	Меню.ДобавитьЗначение("Наз&вание раздела");
	Меню.ДобавитьЗначение("Из&менить название");
	Меню.ДобавитьЗначение("Уд&алить из списка");
	Меню.ДобавитьЗначение("Удалить по&лностью"); 
	Меню.ДобавитьЗначение("Па&раметры"); 
	// если раздел пустой, то при открытии обработки 
	// или выполнении обновления он автоматически удаляется
	
	Если Меню.ВыбратьЗначение(Выбор,,Поз,60,1)=1 Тогда
		Если Поз=1 Тогда
			Перенос();
		ИначеЕсли Поз=2 Тогда
			НовыйРаздел();
		ИначеЕсли Поз=3 Тогда
			НазваниеРаздела();
		ИначеЕсли Поз=4 Тогда
			Изменить();
		ИначеЕсли Поз=5 Тогда
			УдалитьИзСписка();
		ИначеЕсли Поз=6 Тогда
			Удалить();
		ИначеЕсли Поз=7 Тогда
			Параметры();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // Действия
//*****************************************************************************
// ПроверкаФайла(Файл) 
//
// Описание: Проверяет выбранный внешний файл на принадлежность к разделу "Дополнительная информация"
// Параметры: Файл - имя файла с данными формата mxl
//
Функция ПроверкаФайла(Файл)
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица(Файл);
	Попытка
		Секц = Таб.ПолучитьСекцию("Служебная|Основная");
		Тхт = Секц.Область("R1C1:R1C1").Текст;
		Возврат 1;
	Исключение
		Возврат 0;
	КонецПопытки;		
	Возврат 1;
КонецФункции

//*****************************************************************************
//
//Функция ПоказатьНовыйСписокТаблиц() 
// Описание: формирует таблицу со списком
// Параметры: ФайлСписка - файл списка доп. информации (файл уже получен) текущего раздела
//
Функция ПоказатьНовыйСписок(ФайлСписка) 
	Перем Название, Версия, ФайлОтчета;
	ТекКаталог = ФС.ТекКаталог();
	Новые.УдалитьВсе();
	ТабРазмер.УдалитьСтроки();
	ВходТекст = СоздатьОбъект("Текст");
	Если ФС.СуществуетФайл(ФайлСписка)=1 Тогда
		НовыеТабл.УдалитьСтроки();
		ВходТекст.Открыть(ФайлСписка);	// открываем файл 
		// Сведения о данных для обработки "ИППДополнительнаяИнформация", хранящихся на сайте 
		//
		// структура: 
		// N поля   Поле
		//	1	- 	Название группы
		//	2	-	Название данных
		//	3	-	Версия
		//	4	-	Размер файла (кВ)
		//	5	-	Имя файла (EXE - самораскрывающийся архив). В случае, если в архиве несколько
		//			файлов, то один из них основной и его имя должно совпадать с полем 5, а расширение 
		//			указывается в 7-м поле. Этот основной файл и должен уметь опрашиваться, 
		//			т.е. сообщать о себе все необходимые сведения (группа, название, версия...)
		//	6	-	Группа информации (подобие каталога), если не указано, то выбирается из 1 поля
		//	7	-	Тип основного файла для архива (mxl / ert / txt), если не указан, то "mxl"
		//	8	-	Номер пиктограммы для типа "mxl" = 0 - таблица; = 1 - календарь. По умолчанию = 0.  
		// ==============
		//	9 	- 	идентификаторы информации (файлов)
		// [10]	-	дата опубликования, если не задана, то дата установки
		// [11]	-	срок использования (дата / число дней), если не задана, то бессрочно
		// [12]	-	действие (число) (=0 снимать показ / =1 стирать), если не задано, то 0
		//
		// поля разделяются разделителем ";";
		// начальные и конечные пробелы в полях не учитываются;
		// файл может содержать строки комментариев (начинаются с символов "//")
		Для К=1 По ВходТекст.КоличествоСтрок() Цикл
			Стр = ВходТекст.ПолучитьСтроку(К);
			Стр = СокрЛП(Стр);
			Если (Лев(Стр,2) = "//") ИЛИ (ПустоеЗначение(Стр)=1) Тогда
			    Продолжить;
			Иначе
				Список = Разложить (Стр);
				
				ИнфоИД = ?(8 < Список.РазмерСписка(), Список.ПолучитьЗначение(9), ""); 
				ФайлОтчета = Врег(?(4 < Список.РазмерСписка(), Список.ПолучитьЗначение(5), ""));
				ТипФайла = Врег(?(Прав(ФайлОтчета,3)="EXE","MXL",Прав(ФайлОтчета,3)));
				Версия = ?(2 < Список.РазмерСписка(), Список.ПолучитьЗначение(3), "");
				Если Показ=2 Тогда 
					НомСтр=0;
					// сначала найти по ИнфоИД, если не найден, то по ФО  
					Если ПолныйСписок.НайтиЗначение(ИнфоИД,НомСтр,"ИнфоИД")=0 Тогда 
						ФО = Врег(?(Прав(ФайлОтчета,3)="EXE",Лев(ФайлОтчета,СтрДлина(ФайлОтчета)-4)+"."+ТипФайла,ФайлОтчета));	
						Если ПолныйСписок.НайтиЗначение(Лев(ФО+"             ",12),НомСтр,"ФайлОтчета")=0 Тогда
							ДобавитьДанные(Новые,НовыеТабл,Список);
						Иначе  
							ПолныйСписок.ПолучитьСтрокуПоНомеру(НомСтр);
							Если СокрЛП(ПолныйСписок.Версия) < СокрЛП(Версия) Тогда 
								ДобавитьДанные(Новые,НовыеТабл,Список);
							КонецЕсли;
						КонецЕсли;
					Иначе
						ПолныйСписок.ПолучитьСтрокуПоНомеру(НомСтр);
						Если СокрЛП(ПолныйСписок.Версия) < СокрЛП(Версия) Тогда 
							ДобавитьДанные(Новые,НовыеТабл,Список);
						КонецЕсли;
					КонецЕсли;
				Иначе
					ДобавитьДанные(Новые,НовыеТабл,Список);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ФС.УстТекКаталог(ТекКаталог); 
		
		Если Показ=2 Тогда 
			Сообщение= ?(Новые.РазмерСписка()=0,"Нет новых или обновленных данных","Отметьте нужные данные и нажмите кнопку Установить"); 
		Иначе 
			Сообщение= ?(Новые.РазмерСписка()=0,"Список пуст","Отметьте нужные данные и нажмите кнопку Установить"); 
		КонецЕсли;
		Возврат 1; 
	Иначе
		ФС.УстТекКаталог(ТекКаталог); 
		Возврат 0; 
	КонецЕсли;
КонецФункции  // ПоказатьНовыйСписок

//*****************************************************************************
//Функция ПолучитьСписокИнет(АдресВЭБ) 
Функция ПолучитьСписокИнет(АдресВЭБ, ФайлСписка) 
	//Перем Название, Версия, ФайлОтчета;
	ТекКаталог = ФС.ТекКаталог();
	ФС.УстТекКаталог(КаталогКалендарей);
	Новые.УдалитьВсе();
	Попытка                    
		Соединение.ПолучитьКакФайл(АдресВЭБ+ИмяФайлаСписка, ФайлСписка);
	Исключение 
		Сообщить("Не удалось получить данные с сервера!");
		Возврат 0;
	КонецПопытки;
	Возврат 1;
КонецФункции

//*****************************************************************************
// Получить() 
//
// Описание: Запускает диалог выбора источника данных и получает список дополнительной информации
//
Процедура Получить()
	Перем Файл, Результат;
	Результат=0;
	Каталог = ?(ПустоеЗначение(Каталог)=1,КаталогИБ(),Каталог);
	КаталогИТС = "";
	Если Источник=1 Тогда   // "Интернет"
		Результат=ПолучитьСписокИнет(АдресВЭБ, ФайлТМП);
	ИначеЕсли Источник=2  Тогда // "ДискИТС"
		Для Индекс = 68 По 90 Цикл      
			Если ФС.СуществуетФайл(Симв(Индекс) + ":\1CITS\EXE\ExtDB") = 1 Тогда
				КаталогИТС = Симв(Индекс) + ":\1CITS\EXE\ExtDB\";
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если КаталогИТС<>"" Тогда
			Если ФС.СуществуетФайл(КаталогИТС+ИмяФайлаСписка)=1 Тогда
				ФС.КопироватьФайл(КаталогИТС+ИмяФайлаСписка, ФайлТМП, 0);
				Результат=1;
			КонецЕсли; 
		Иначе
			Сообщить ("Диск ИТС не найден");
		КонецЕсли;
	ИначеЕсли Источник=3  Тогда // "ДискетаВсе"
		Если ФС.ВыбратьКаталог(КаталогДискета,,)=1 Тогда
			Если ФС.СуществуетФайл(КаталогДискета+"\"+ИмяФайлаСписка)=1 Тогда
				ФС.КопироватьФайл(КаталогДискета+"\"+ИмяФайлаСписка,ФайлТМП,0);
				Результат=1;
			Иначе
				Сообщить ("Комплект дополнительной информации на "+КаталогДискета+" не обнаружен","!!");
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	Если Результат=1 Тогда
		ПоказатьНовыйСписок(ФайлТМП);
	КонецЕсли;
КонецПроцедуры // Получить

//*****************************************************************************
//	ОчиститьКаталог(Знач Каталог)
//
//	Параметры:  Каталог - наименование очищаемого каталога
//
//	Описание:  Рекурсивная процедура. Осуществляет полную очистку указанного каталога 
Процедура ОчиститьКаталог(Знач Каталог)
	Перем Размер,Атр,ВС,ВД,ВЗ,Расш;
	Перем СписокФайлов, СписокКаталогов;
	
	СписокФайлов	= СоздатьОбъект("СписокЗначений");
	СписокКаталогов	= СоздатьОбъект("СписокЗначений");
	
	// получим имя первого файла
	ФГ=СоздатьОбъект("ФС");
	Файл = ФГ.НайтиПервыйФайл(Каталог + "\*.*");
	Пока ПустаяСтрока(Файл) = 0 Цикл
		Если (Файл <> "..") И (Файл <> ".") Тогда
			ПолноеИмя	= Каталог + "\" + Файл;
			ФГ.АтрибутыФайла(ПолноеИмя, Размер, Атр, ВС, ВД, ВЗ, Расш);
			Если Сред(Атр, 4, 1) = "1" Тогда
				СписокКаталогов.ДобавитьЗначение(ПолноеИмя);
			Иначе
				СписокФайлов.ДобавитьЗначение(ПолноеИмя);
			КонецЕсли;
		КонецЕсли;
		Файл	= ФГ.НайтиСледующийФайл();
	КонецЦикла;
	
	// очистить текущий каталог
	Для Индекс = 1 По СписокФайлов.РазмерСписка() Цикл
		Имя = СписокФайлов.ПолучитьЗначение(Индекс);
		ФГ.АтрибутыФайла(Имя, Размер, Атр, ВС, ВД, ВЗ, Расш);
		Если Лев(Атр,1)="1" Тогда
			СнятьАтрибут(Имя);
		КонецЕсли;
		ФС.УдалитьФайл(Имя);
	КонецЦикла;
	// если есть еще каталоги, то надо их очистить
	Для Индекс = 1 По СписокКаталогов.РазмерСписка() Цикл
		Имя = СписокКаталогов.ПолучитьЗначение(Индекс);
		ОчиститьКаталог(Имя);
		ФС.УдалитьКаталог(Имя + "\");  
	КонецЦикла;
КонецПроцедуры  // ОчиститьКаталог
//*****************************************************************************
// КопироватьФайлы(ИсхКаталог,РезКаталог) 
//
// Описание: Копирует содержимое указанного каталога ИсхКаталог в каталог РезКаталог
//			 вместе с содержимым подкаталогов
//
Процедура КопироватьФайлы(ИсхКаталог,РезКаталог)
	Перем Размер,Атр,ВС,ВД,ВЗ,Расш;
	ФГ=СоздатьОбъект("ФС");
	Имя = ФГ.НайтиПервыйФайл(ИсхКаталог + "\*.*");
	Пока ПустаяСтрока(Имя) = 0  Цикл
		Если (Имя <> "..") И (Имя <> ".") Тогда
			ПолноеИмя = ИсхКаталог + "\" + Имя;
			ФГ.АтрибутыФайла(ПолноеИмя, Размер, Атр, ВС, ВД, ВЗ, Расш);
			Если Сред(Атр, 4, 1) = "1" Тогда
				// каталог 
				Если ФС.СуществуетФайл(РезКаталог + "\" + Имя)=0 Тогда
					ФГ.СоздатьКаталог(РезКаталог + "\" + Имя);  
				КонецЕсли;
				КопироватьФайлы(ПолноеИмя,РезКаталог + "\" + Имя);
			Иначе
				ФГ.КопироватьФайл(ИсхКаталог + "\" + Имя,РезКаталог + "\" + Имя,0);
			КонецЕсли;
		КонецЕсли;
		Имя = ФГ.НайтиСледующийФайл(); 
	КонецЦикла;
КонецПроцедуры // КопироватьФайлы
//*****************************************************************************
Процедура Копировать() 
	Перем Размер,Атр,ВС,ВД,ВЗ,Расш;
	Есть=0;  Стр="";
	Для Н=1 По Новые.РазмерСписка() Цикл 
		Если Новые.Пометка(Н)=1 Тогда 
			Установлен=0;
			Новые.ПолучитьЗначение(Н);
			ИмяФ = СокрЛП(Новые.ПолучитьЗначение(Н,Стр));
			КК = КаталогКалендарей;
			Если Врег(Прав(ИмяФ,3))="EXE" Тогда
				// самораскрывающийся архив копируется во временный каталог
				КК = КаталогВременныхФайлов()+"Clndr.Tmp";
				Если ФС.СуществуетФайл(КК)=0 Тогда
					ФС.СоздатьКаталог(КК);
				КонецЕсли;
				ОчиститьКаталог(КК);
			КонецЕсли;
			                             			
			// получение файла     
			Если Источник=1 Тогда   // "Интернет"
				Попытка
					Соединение.ПолучитьКакФайл(АдресВЭБ+ИмяФ, КК+"\"+ИмяФ);
					Есть=1; Установлен=1;
				Исключение
				КонецПопытки;
			ИначеЕсли Источник=2 Тогда // "ДискИТС"
				Если ФС.СуществуетФайл(КаталогИТС+ИмяФ)=1 Тогда
					ФС.КопироватьФайл(КаталогИТС+ИмяФ, КК+"\"+ИмяФ,0);
					Есть=1; Установлен=1;
				Иначе
				КонецЕсли;
			ИначеЕсли Источник=3 Тогда // "ДискетаВсе"
				Если ФС.СуществуетФайл(КаталогДискета+"\"+ИмяФ)=1 Тогда
					ФС.КопироватьФайл(КаталогДискета+"\"+ИмяФ, КК+"\"+ИмяФ,0);
					Есть=1; Установлен=1;
				Иначе
				КонецЕсли;
			КонецЕсли; 
			
			Если Установлен=1 Тогда
				// файл успешно получен
				НовыеТабл.ПолучитьСтрокуПоНомеру(Н);
				НомСтр=0;
				
				ФО = СокрЛП(НовыеТабл.ФайлОтчета);
				ФО = Врег(?(Прав(ФО,3)="EXE",Лев(ФО,СтрДлина(ФО)-4)+"."+НовыеТабл.ТипФайла,ФО));	
				// сначала найти по ИнфоИД, если не найден, то по ФО  
				Если ПолныйСписок.НайтиЗначение(НовыеТабл.ИнфоИД,НомСтр,"ИнфоИД")=0 Тогда
					// инфо по ИД не найдена
					Если ПолныйСписок.НайтиЗначение(Лев(ФО+"             ",12),НомСтр,"ФайлОтчета")=1 Тогда 
						// нашли по имени файла
						ПолныйСписок.ПолучитьСтрокуПоНомеру(НомСтр);
					Иначе
						ПолныйСписок.НоваяСтрока();
					КонецЕсли;
				Иначе
					// инфо найдена. проверить на совпадение имен файлов. если не совпадают, то нужно удалить старый
					ПолныйСписок.ПолучитьСтрокуПоНомеру(НомСтр);
					Если Врег(СокрЛП(ПолныйСписок.ФайлОтчета)) <> Врег(Лев(СокрЛП(НовыеТабл.ФайлОтчета),СтрДлина(СокрЛП(НовыеТабл.ФайлОтчета))-4)+"."+НовыеТабл.ТипФайла) Тогда 
						Если ФС.СуществуетФайл(КаталогКалендарей+"\"+ПолныйСписок.ФайлОтчета)=1 Тогда
							// файл спокойно удаляем, т.к. новый уже скопирован
							ФС.УдалитьФайл(КаталогКалендарей+"\"+ПолныйСписок.ФайлОтчета);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ТФ = Врег(НовыеТабл.ТипФайла);
				ТФ = ?(Прав(СокрЛП(НовыеТабл.ФайлОтчета),3)="EXE",ТФ,Прав(СокрЛП(НовыеТабл.ФайлОтчета),3));
				ПолныйСписок.Пикт = ?(ТФ="MXL",НовыеТабл.Пикт,?(ТФ="ERT","2","3"));
				ПолныйСписок.Название = НовыеТабл.Название;
				ПолныйСписок.НазваниеВР = НовыеТабл.НазваниеВР;
				ПолныйСписок.ФайлОтчета = Врег(Лев(СокрЛП(НовыеТабл.ФайлОтчета),СтрДлина(СокрЛП(НовыеТабл.ФайлОтчета))-4)+"."+НовыеТабл.ТипФайла);
				ПолныйСписок.Версия = НовыеТабл.Версия;
				ПолныйСписок.Раздел = НовыеТабл.Раздел;
				ПолныйСписок.ИнфоИД = НовыеТабл.ИнфоИД;
				ПолныйСписок.ДатаОпубликования = НовыеТабл.ДатаОпубликования;
				ПолныйСписок.СрокИспользования = НовыеТабл.СрокИспользования; 
				ПолныйСписок.Действие = НовыеТабл.Действие;
				
				Если СписокРазделов.НайтиЗначение(НовыеТабл.Раздел)=0 Тогда
					СписокРазделов.ДобавитьЗначение(НовыеТабл.Раздел);
				КонецЕсли;
				
				Если Врег(Прав(ИмяФ,3))="EXE" Тогда 
					// для самораскрывающегося архива производится его раскрытие и копирование 
					ТК = ФС.ТекКаталог();
					ФС.УстТекКаталог(КК);
					КомандаСистемы(""""+КК+"\"+ИмяФ+"""");
					Если ФС.СуществуетФайл(КК+"\"+ИмяФ)=1 Тогда
						ФГ=СоздатьОбъект("ФС");
						ФГ.АтрибутыФайла(КК+"\"+ИмяФ, Размер, Атр, ВС, ВД, ВЗ, Расш);
						Если Лев(Атр,1)="1" Тогда
							СнятьАтрибут(КК+"\"+ИмяФ);
						КонецЕсли;
						ФС.УдалитьФайл(КК+"\"+ИмяФ);
					КонецЕсли; 
					// с учетом типа основного файла (т.к. м.б. и обработка)
					КопироватьФайлы(КК,КаталогКалендарей);
					ОчиститьКаталог(КК);
					ФС.УстТекКаталог(ТК);
				КонецЕсли;
			Иначе
				Сообщить("Данные """+Стр+""" не получены","!");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Есть=1 Тогда
		Н=1;
		Пока Н <= Новые.РазмерСписка() Цикл
			Если Новые.Пометка(Н)=1 Тогда
				Новые.УдалитьЗначение(Н);
			Иначе
				Н=Н+1;
			КонецЕсли;
		КонецЦикла;
		ПриСменеРаздела();
		Если Показ=2 Тогда 
			Сообщение= ?(Новые.РазмерСписка()=0,"Нет новых или обновленных данных","Отметьте нужные данные и нажмите кнопку Установить"); 
		Иначе 
			Сообщение= ?(Новые.РазмерСписка()=0,"Список пуст","Отметьте нужные данные и нажмите кнопку Установить"); 
		КонецЕсли;
	Иначе
		Если Новые.РазмерСписка()>0 Тогда
			Предупреждение("Нет исходного файла",5); 
		Иначе
			Предупреждение("Не выбрано ни одного набора",5); 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // Копировать

//*****************************************************************************
// СменаПоказа() 
//
// Описание: При смене режима показа новых таблиц данных запускает 
// процедуду показа списка доп.информации
//
Процедура СменаПоказа()
	ПоказатьНовыйСписок(ФайлТМП);
КонецПроцедуры // СменаПоказа()

//*****************************************************************************
// Открывает всю дополнительную информацию, кот. предназначена для показа
// и показ которой не запретил пользователь
Процедура ОткрытьРекламу()
	Для Н=1 По ПолныйСписок.КоличествоСтрок() Цикл
		ПолныйСписок.ПолучитьСтрокуПоНомеру(Н);
		Если ПолныйСписок.НеобходимостьОткрытия=2 Тогда
			Файл = СокрЛП(ПолныйСписок.ФайлОтчета);
			Если ФС.СуществуетФайл(КаталогКалендарей+"\"+Файл)=1 Тогда
				Расширение = ВРег(Прав(Файл,3));
				Если Расширение = "ERT" Тогда
					ОткрытьФорму("Отчет",,КаталогКалендарей+"\"+Файл);
				ИначеЕсли Расширение = "MXL" Тогда
					ОткрытьФорму("Отчет.ИППКалендарь#"+Файл,Файл);
				ИначеЕсли Расширение = "TXT" Тогда
					ФС.КопироватьФайл(КаталогКалендарей+"\"+Файл,КаталогВременныхФайлов()+"tmp.txt",0);
					Текст = СоздатьОбъект("Текст");
					Текст.Открыть(КаталогВременныхФайлов()+"tmp.txt");
					Текст.УдалитьСтроку(1);
					Текст.Записать(КаталогВременныхФайлов()+"tmp.txt");   
					Текст1 = СоздатьОбъект("Текст");
					Текст1.Открыть(КаталогВременныхФайлов()+"tmp.txt");
			     	Текст1.Показать(Отчеты.Название,"");   
					Текст1.ТолькоПросмотр(1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // СменаПоказа()

//*****************************************************************************
// УстановитьКомпоненту() 
//
// Описание: Инициализирует объект V7HttpReader
//
Функция УстановитьКомпоненту()
	Если ЗагрузитьВнешнююКомпоненту(КаталогИБ()+"ExtForms\v7plus.dll")=0 Тогда
		Если ЗагрузитьВнешнююКомпоненту("v7plus.dll")=0 Тогда
			Сообщить("Не удалось обнаружить компоненту v7plus.dll!"); 
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Попытка
		Соединение = СоздатьОбъект("Addin.V7HttpReader");
		Соединение.КоличествоПопытокАвторизации = 3;
	Исключение 
		Сообщить("Не удалось создать объект Addin.V7HttpReader!");
		Возврат 0;
	КонецПопытки; 
	Возврат 1;
КонецФункции  //  УстановитьКомпоненту

//*****************************************************************************
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки) 
	Если НомерЗакладки=1 Тогда
		Форма.ИспользоватьСлой("Основной,Кнопки", 2);
		Форма.кнОбновить.Доступность(1);
	Иначе
		Форма.ИспользоватьСлой("Получение,Кнопки", 2);
		Форма.кнОбновить.Доступность(0);
    КонецЕсли;
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
Процедура ПриПовторномОткрытии()
	Перем СтрокаТаблицы;
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			Если НРег(Форма.Параметр.Получить("Режим"))="изменить" Тогда
				Если ПолныйСписок.НайтиЗначение(Форма.Параметр.Получить("ИнфоИД"),СтрокаТаблицы,"ИнфоИД")=1 Тогда
					ПолныйСписок.ПолучитьСтрокуПоНомеру(СтрокаТаблицы);
					ПолныйСписок.Раздел = ?(ПустоеЗначение(Форма.Параметр.Получить("Раздел"))=0,Форма.Параметр.Получить("Раздел"),ПолныйСписок.Раздел);
					ПолныйСписок.Название = ?(ПустоеЗначение(Форма.Параметр.Получить("Название"))=0,Форма.Параметр.Получить("Название"),ПолныйСписок.Название);
					ПолныйСписок.НазваниеВР = ВРег(ПолныйСписок.Название);
					ПолныйСписок.Версия = ?(ПустоеЗначение(Форма.Параметр.Получить("Версия"))=0,Форма.Параметр.Получить("Версия"),ПолныйСписок.Версия);
					ПолныйСписок.ДатаОпубликования = ?(ПустоеЗначение(Форма.Параметр.Получить("ДатаОпубликования"))=0,Форма.Параметр.Получить("ДатаОпубликования"),ПолныйСписок.ДатаОпубликования);
					ПолныйСписок.СрокИспользования = ?(ПустоеЗначение(Форма.Параметр.Получить("СрокИспользования"))=0,Форма.Параметр.Получить("СрокИспользования"),ПолныйСписок.СрокИспользования);
					ПолныйСписок.Действие = ?(ПустоеЗначение(Форма.Параметр.Получить("Действие"))=0,Форма.Параметр.Получить("Действие"),ПолныйСписок.Действие);
					ПолныйСписок.НеобходимостьОткрытия = ?(ПустоеЗначение(Форма.Параметр.Получить("НеобходимостьОткрытия"))=0,Форма.Параметр.Получить("НеобходимостьОткрытия"),ПолныйСписок.НеобходимостьОткрытия);
			    КонецЕсли;
		    КонецЕсли;
	    КонецЕсли;
   КонецЕсли;
КонецПроцедуры // ПриПовторномОткрытии()

//*****************************************************************************
Процедура ПриЗакрытии() 
	Если Отчеты.ТекущаяСтрока() > 0 Тогда
		ФайлОтчета=Отчеты.ПолучитьЗначение(Отчеты.ТекущаяСтрока(),"ФайлОтчета");
		СохранитьЗначение("ВнОтчОтчет",ФайлОтчета);
	КонецЕсли;	
	СохранитьЗначение("СписокДополнительнойИнформации5",ПолныйСписок);
	СохранитьЗначение("ИсточникИПП",Источник+1);
	Если ЗапоминатьНомерРаздела=1 Тогда
		СохранитьЗначение("РазделДополнительнойИнформации",СписокРазделов.ТекущаяСтрока());
	КонецЕсли;
	СохранитьЗначение("СортировкаСпискаИнформации",ВидСортировки);
	Если ФС.СуществуетФайл(ФайлТМП)=1 Тогда
		ФС.УдалитьФайл(ФайлТМП);
	КонецЕсли;
КонецПроцедуры // ПриЗакрытии

//*****************************************************************************
Процедура СохранитьИзменения() 
	ВремПерем5 = ВосстановитьЗначение("СписокДополнительнойИнформации5");
	ВремПерем5.Выгрузить(ПолныйСписок);
	ПриПовторномОткрытии();
	ПриЗакрытии();
КонецПроцедуры // СохранитьИзменения

//*****************************************************************************
Процедура ПриОткрытии() 
	ВремПерем5 = ВосстановитьЗначение("СписокДополнительнойИнформации5");
	Если ПустоеЗначение(ВремПерем5)=1 Тогда
		ВремПерем4 = ВосстановитьЗначение("СписокДополнительнойИнформации4");
		Если ПустоеЗначение(ВремПерем4)=1 Тогда
			ВремПерем3 = ВосстановитьЗначение("СписокДополнительнойИнформации3");
		КонецЕсли;
	КонецЕсли;
	ВидСортировки = ВосстановитьЗначение("СортировкаСпискаИнформации");
	ВидСортировки = ?(ПустоеЗначение(ВидСортировки)=1,1,ВидСортировки);
	Сортировка.ТекущаяСтрока(ВидСортировки);
	Отчеты.ВыводитьПиктограммы("Пикт",3);
	Отчеты.ВидимостьКолонки("Версия",0); 
	Отчеты.ВидимостьКолонки("Раздел",0); 
	Отчеты.ВидимостьКолонки("НазваниеВР",0); 
	Если ПустоеЗначение(ВремПерем5)=1 Тогда 
		Если ПустоеЗначение(ВремПерем4)=1 Тогда 
			Если ПустоеЗначение(ВремПерем3)=1 Тогда 
				// Первый запуск
				Заполнить();
			Иначе 
				// есть данные
				// произведено обновление. Выполнить преобразование старого списка в новый
				Для Н=1 По ВремПерем3.КоличествоСтрок() Цикл
					ПолныйСписок.НоваяСтрока();
					ВремПерем3.ПолучитьСтрокуПоНомеру(Н);
					ПолныйСписок.Пикт = ВремПерем3.Пикт;
					ПолныйСписок.Название = ВремПерем3.Название;
					ПолныйСписок.НазваниеВР = ВремПерем3.НазваниеВР;
					ПолныйСписок.ФайлОтчета = ВремПерем3.ФайлОтчета;
					ПолныйСписок.Версия = ВремПерем3.Версия;
					ПолныйСписок.Раздел = ВремПерем3.Раздел;
				КонецЦикла;
			КонецЕсли;
		Иначе
			// произведено обновление. Выполнить преобразование старого списка в новый
			Для Н=1 По ВремПерем4.КоличествоСтрок() Цикл
				ПолныйСписок.НоваяСтрока();
				ВремПерем4.ПолучитьСтрокуПоНомеру(Н);
				ПолныйСписок.Пикт = ВремПерем4.Пикт;
				ПолныйСписок.Название = ВремПерем4.Название;
				ПолныйСписок.НазваниеВР = ВремПерем4.НазваниеВР;
				ПолныйСписок.ФайлОтчета = ВремПерем4.ФайлОтчета;
				ПолныйСписок.Версия = ВремПерем4.Версия;
				ПолныйСписок.Раздел = ВремПерем4.Раздел;
				Попытка
					ПолныйСписок.ТипФайла = ВремПерем4.ТипФайла;
					ПолныйСписок.ИнфоИД = ВремПерем4.ИнфоИД;
					ПолныйСписок.ДатаОпубликования = ВремПерем4.ДатаОпубликования;
					ПолныйСписок.СрокИспользования = ВремПерем4.СрокИспользования;
					ПолныйСписок.Действие = ВремПерем4.Действие;
					ПолныйСписок.НеобходимостьОткрытия = 1;
				Исключение
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
		СписокРазделов.ТекущаяСтрока(1);
	Иначе
		ВремПерем5.Выгрузить(ПолныйСписок);
	КонецЕсли;
	с = 1;
	ПроверкаПоказа(ПолныйСписок);
	Источник = ВосстановитьЗначение("ИсточникИПП");
	Источник = ?(ПустоеЗначение(Источник)=1,1,Источник-1);
	ЗапоминатьНомерРаздела = 1;
	НомСтрРаздела = ВосстановитьЗначение("РазделДополнительнойИнформации");
	НомСтрРаздела = ?(ПустоеЗначение(НомСтрРаздела)=1,1,НомСтрРаздела);
	ЗаполнитьСписокРазделов();
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			Если НРег(Форма.Параметр.Получить("Режим"))="добавить" Тогда
				Заполнить("Обновить");
				ПриЗакрытии();
				СтатусВозврата(0);
				Возврат;
			ИначеЕсли НРег(Форма.Параметр.Получить("Режим"))="открыть" Тогда
				ОткрытьРекламу();
				СтатусВозврата(0);
				Возврат;
			ИначеЕсли НРег(Форма.Параметр.Получить("Режим"))="раздел" Тогда
				Ном = СписокРазделов.НайтиЗначение(Форма.Параметр.Получить("Раздел"));
				НомСтрРаздела = ?(Ном=0,НомСтрРаздела,Ном);
				ЗапоминатьНомерРаздела = 0;
			ИначеЕсли НРег(Форма.Параметр.Получить("Режим"))="изменить" Тогда
				СохранитьИзменения();
				СтатусВозврата(0);
				Возврат;
			ИначеЕсли НРег(Форма.Параметр.Получить("Режим"))="заполнить" Тогда
				Заполнить();
				ПриЗакрытии();
				СтатусВозврата(0);
				Возврат;
			Иначе
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	СписокРазделов.ТекущаяСтрока(?((НомСтрРаздела=0)ИЛИ(НомСтрРаздела>СписокРазделов.РазмерСписка()),1,НомСтрРаздела));
	ПриСменеРаздела();
	ВосстановитьТекОтчет();
	Форма.ИспользоватьСлой("Основной,Кнопки", 2);
	УстановитьКомпоненту();
	АктивизироватьОбъект(Отчеты);
	Показ = 2; 
	Сообщение = "Для получения новых данных выберите режим и нажмите кнопку Получить";
КонецПроцедуры // ПриОткрытии

//*****************************************************************************

КаталогКалендарей=КаталогИБ()+"ExtForms\Calendar";
ИмяФайлаСписка = "LSTCLNDR.TXT";
Если ФС.СуществуетФайл(КаталогИБ()+"ExtForms")=0 Тогда 
	ФС.СоздатьКаталог(КаталогИБ()+"ExtForms");
КонецЕсли;
Если ФС.СуществуетФайл(КаталогКалендарей)=0 Тогда 
	ФС.СоздатьКаталог(КаталогКалендарей);
КонецЕсли;
ТабРазмер=СоздатьОбъект("ТаблицаЗначений");
ТабРазмер.НоваяКолонка("Размер","Число");
Текст=СоздатьОбъект("Текст");
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение("Основной", "Просмотр");
Форма.Закладки.ДобавитьЗначение("Получение", "Получение");
АдресВЭБ="http://downloads.1c.ru/ipp/ITSREPV/CALENDAR/";
Если Лев(КаталогИБ(), 2)="\\" Тогда
	ФайлТМП = КаталогВременныхФайлов()+"tmp.txt"; 
Иначе
	ФайлТМП = КаталогКалендарей+"\"+"tmp.txt"; 
КонецЕсли;
Отчеты.НоваяКолонка("Пикт","Строка",	1,	,	"Тип",3);
Отчеты.НоваяКолонка("Название","Строка",,,,40);
Отчеты.НоваяКолонка("НазваниеВР","Строка",,,,40);
Отчеты.НоваяКолонка("ФайлОтчета","Строка",12,,"Файл",10);
Отчеты.НоваяКолонка("Версия","Строка");  
Отчеты.НоваяКолонка("Раздел","Строка");  
НовыеТабл = СоздатьОбъект("ТаблицаЗначений");
НовыеТабл.НоваяКолонка("Пикт","Строка",	1,	,	"",3);
НовыеТабл.НоваяКолонка("Название","Строка",,,,40);
НовыеТабл.НоваяКолонка("НазваниеВР","Строка",,,,40);
НовыеТабл.НоваяКолонка("ФайлОтчета","Строка",12,,"Файл",10);
НовыеТабл.НоваяКолонка("Версия","Строка");  
НовыеТабл.НоваяКолонка("Раздел","Строка");  
НовыеТабл.НоваяКолонка("ТипФайла","Строка",3);
НовыеТабл.НоваяКолонка("ИнфоИД","Строка",20); 
НовыеТабл.НоваяКолонка("ДатаОпубликования","Дата"); 
НовыеТабл.НоваяКолонка("СрокИспользования","Дата"); 
НовыеТабл.НоваяКолонка("Действие","Число",1); 
НовыеТабл.НоваяКолонка("НеобходимостьОткрытия","Число",1); 

ПолныйСписок = СоздатьОбъект("ТаблицаЗначений");
ПолныйСписок.НоваяКолонка("Пикт","Строка",	1,	,	"",3);
ПолныйСписок.НоваяКолонка("Название","Строка",,,,40);
ПолныйСписок.НоваяКолонка("НазваниеВР","Строка",,,,40);
ПолныйСписок.НоваяКолонка("ФайлОтчета","Строка",12,,"Файл",10);
ПолныйСписок.НоваяКолонка("Версия","Строка");  
ПолныйСписок.НоваяКолонка("Раздел","Строка");
ПолныйСписок.НоваяКолонка("ИнфоИД","Строка",20); 
ПолныйСписок.НоваяКолонка("ДатаОпубликования","Дата"); 
ПолныйСписок.НоваяКолонка("СрокИспользования","Дата"); 
ПолныйСписок.НоваяКолонка("Действие","Число",1); 
ПолныйСписок.НоваяКолонка("НеобходимостьОткрытия","Число",1); 

СписокРазделов.ДобавитьЗначение("Все разделы");
Сортировка.ДобавитьЗначение("НазваниеВР","По наименованию");
Сортировка.ДобавитьЗначение("Пикт","По типу");
Сортировка.ДобавитьЗначение("Раздел","По разделу");
Сортировка.ДобавитьЗначение("ФайлОтчета","По имени файла");
Разделитель=";"; 

