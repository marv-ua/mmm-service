Перем Авто,Соединение;
//******************************************************************************
//  ДоступностьЗагрузки()
//
//	Описание:  Осуществляет проверку возможности загрузки курсов валют 
//             Если есть помеченные строки, возвращает 1, если нет - 0
Функция ДоступностьЗагрузки()
	Д=0;
	Для Н=1 По СписокВалют.РазмерСписка() Цикл  
		Д=Д+СписокВалют.Пометка(Н);
		Если Д=1 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Д;
КонецФункции  // ДоступностьЗагрузки      
//******************************************************************************
//	ВыделитьПодСтроку(ИсхСтр)
//
//	Параметры:  ИсхСтр - исходная строка
//
//	Описание:  Выделяет подстроку из строки и возвращает ее
Функция ВыделитьПодСтроку(ИсхСтр)
	Перем Стр;
    Поз=Найти(ИсхСтр,СимволТабуляции);
	Если Поз>0 Тогда
		Стр=Лев(ИсхСтр,Поз-1);
		ИсхСтр=Сред(ИсхСтр,Поз+1);
	Иначе
		Стр=ИсхСтр;
		ИсхСтр="";
	КонецЕсли;
	Возврат Стр;
КонецФункции   //  ВыделитьПодСтроку    
//******************************************************************************
//  ОткрытьСправочник()
//
//	Описание:  Осуществляет открытие справочника валют
Процедура ОткрытьСправочник()
	Перем Конт;
	ОткрытьФорму("Справочник.Валюты",Конт);
	Конт.АктивизироватьОбъект(СписокВалют.ПолучитьЗначение(СписокВалют.ТекущаяСтрока()));
КонецПроцедуры  // ОткрытьСправочник
//******************************************************************************
//	Установить(Режим="") 
//
//	Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
//	Описание: Устанавливает, снимает или инвертирует отметки выбора строк 
Процедура Установить(Режим="") 
	Для Н=1 По СписокВалют.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			СписокВалют.Пометка(Н,1);
		ИначеЕсли Режим="Сброс" Тогда
			СписокВалют.Пометка(Н,0); 
		Иначе
			СписокВалют.Пометка(Н,?(СписокВалют.Пометка(Н)=1,0,1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  Установить
//******************************************************************************
//	ОбновитьСписокВалют()
//
//	Описание:  Обновляет список валют (значения курсов и даты курсов)
Процедура ОбновитьСписокВалют()     
	Для Н=1 По СписокВалют.РазмерСписка() Цикл  
		Если СписокВалют.Пометка(Н)=1 Тогда
			СписокВалют.УстановитьЗначение(Н,СписокВалют.ПолучитьЗначение(Н),);
			Курсы=СоздатьОбъект("Периодический");    
			Курсы.ИспользоватьОбъект("Курс",СписокВалют.ПолучитьЗначение(Н)); 
			Курсы.ОбратныйПорядок();
			Если Курсы.ВыбратьЗначения()=1 Тогда    
				Курсы.ПолучитьЗначение();
				ДатаЗнач = Курсы.ДатаЗнач; 
			Иначе 
				ДатаЗнач = 0;       
			КонецЕсли;
			СписокВалют.УстановитьЗначение(Н,СписокВалют.ПолучитьЗначение(Н),"     "+СокрЛП(СписокВалют.ПолучитьЗначение(Н).Наименование)+";     на: "+Строка(ДатаЗнач)+"  =  "+Формат(Курсы.Значение,"Ч10.4")); 
			СписокВалют.Пометка(Н,1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры   //  ОбновитьСписокВалют                                             
//******************************************************************************
//	Загрузить()
//
//	Описание:  Осуществляет загрузку курсов валют с сервера РБК
Процедура Загрузить()
	Перем Адрес1,Адрес2,Адрес,ТМП;
	Если ДоступностьЗагрузки()=0 Тогда
		Если Авто=0 Тогда
			Предупреждение("Необходимо указать валюты, "+РазделительСтрок+"по которым требуется получить курсы!");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	Если НачДата>КонДата Тогда
		Если Авто=0 Тогда
			Предупреждение("Неверно указан период!");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	Адрес1 = "http://cbrates.rbc.ru/tsv/cb/";  // в интервале
	Адрес2 = "http://cbrates.rbc.ru/tsv/";     // по 1 дате
	Если НачДата=КонДата Тогда  // по 1 дате
		Адрес = Адрес2;
		ТМП = "/"+ДатаГод(КонДата)+"/"+Формат(ДатаМесяц(КонДата),"Ч(0)2.0")+"/"+Формат(ДатаЧисло(КонДата),"Ч(0)2.0");
	Иначе    // в интервале
		Адрес = Адрес1;
		ТМП = "";
	КонецЕсли;
	Валюта=СоздатьОбъект("Справочник.Валюты");
	Стр = "";  
	МахДата = Дата(0);
	Для Н=1 По СписокВалют.РазмерСписка() Цикл 
		Если СписокВалют.Пометка(Н)=0 Тогда
			Продолжить;
		КонецЕсли;    
		ВалютаТМП = СписокВалют.ПолучитьЗначение(Н);
		Если (Результат=1)И(Авто=0) Тогда
			Сообщить("Загрузка курсов валюты: "+ВалютаТМП); 
			Сообщить("Дата"+СимволТабуляции+СимволТабуляции+"Курс"+СимволТабуляции+"Кратность"); 
		КонецЕсли;
		Если Авто=1 Тогда
			Состояние("Загрузка курсов валюты: "+ВалютаТМП); 
		КонецЕсли;
		
		Попытка                    
			Соединение.ПолучитьКакСтроку(Адрес+Прав(ВалютаТМП.Код,3)+ТМП+".tsv", Стр);
		Исключение 
			Сообщить("Неудачная попытка соединения.");                          
		КонецПопытки;
		Текст=СоздатьОбъект("Текст"); 
		Текст.ДобавитьСтроку(Стр);   
		
		Курсы=СоздатьОбъект("Периодический");
		Курсы.ИспользоватьОбъект("Курс",ВалютаТМП);
		Кратности=СоздатьОбъект("Периодический");
		Кратности.ИспользоватьОбъект("Кратность",ВалютаТМП);
		                          
		НачальныйКурс=0;
		НачальнаяКратность=0;
		НачальнаяДатаКурса=Дата(0);
		НачатьТранзакцию();
		Для Инд=1 По Текст.КоличествоСтрок() Цикл
		   	Стр=Текст.ПолучитьСтроку(Инд);
		   	Если (Стр="")ИЛИ(Найти(Стр,СимволТабуляции)=0) Тогда
		   		Продолжить;
		   	КонецЕсли;
		   	Если НачДата=КонДата Тогда  
		   		ДатаКурса=КонДата;
		   	Иначе 
			   	ДатаКурсаСтр=ВыделитьПодСтроку(Стр);
			   	ДатаКурса=Дата(Лев(ДатаКурсаСтр,4),Сред(ДатаКурсаСтр,5,2),Сред(ДатаКурсаСтр,7,2));
		   	КонецЕсли;
		   	Кратность=Число(ВыделитьПодСтроку(Стр));
		   	Курс=Число(ВыделитьПодСтроку(Стр));
		   	
		   	Если ДатаКурса>КонДата Тогда
		   		Прервать;
		   	КонецЕсли;
		   	
		   	Если ДатаКурса<НачДата Тогда  //Запоминание курса на начало интервала
		   		Продолжить;
		   	КонецЕсли;
		   	
			Курсы.ВыбратьЗначения(ДатаКурса,ДатаКурса);
			Курсы.ПолучитьЗначение();
			Кратности.ВыбратьЗначения(ДатаКурса,ДатаКурса);
			Кратности.ПолучитьЗначение();
			Если (Курс<>Курсы.Значение) или (Кратность<>ВалютаТМП.Кратность.Получить(ДатаКурса)) Тогда
				Курсы.ДатаЗнач=ДатаКурса;
				Курсы.Значение=Курс;
				Курсы.Записать();
				Кратности.ДатаЗнач=ДатаКурса;
				Кратности.Значение=Кратность;
				Если ВалютаТМП.Кратность.Получить(ДатаКурса)<>Кратность Тогда
					Кратности.Записать();
				КонецЕсли;
				Если (Результат=1)И(Авто=0) Тогда
					Сообщить(Строка(ДатаКурса)+СимволТабуляции+Курс  +СимволТабуляции+СимволТабуляции+ Кратность,"I");
				КонецЕсли;
			   	МахДата = макс(ДатаКурса,МахДата);
			КонецЕсли;
			Если (Результат=1)И(Авто=0) Тогда
				Состояние("Загрузка курса на "+ДатаКурса+" - "+Курс);
			КонецЕсли;
		КонецЦикла;                           
		ЗафиксироватьТранзакцию();                          
	КонецЦикла;                           
	ОбновитьСписокВалют(); 
	Если Авто=0 Тогда
		Предупреждение("Загрузка курсов закончена!",3);
	Иначе
		Состояние("Загрузка курсов закончена!");
	КонецЕсли;
	СохранитьЗначение("ДатаСкачиванияКурсовВалют",МахДата);
КонецПроцедуры   //  Загрузить                                             
//******************************************************************************
//	ЗагрузитьСписокВалют()
//
//	Описание:  Осуществляет загрузку списка валют при открытии формы
Процедура ЗагрузитьСписокВалют()
	ДатаЗнач=СоздатьОбъект("Периодический");
	Валюта=СоздатьОбъект("Справочник.Валюты");
	Валюта.ВыбратьЭлементы(); 
	ДатаМин = ТекущаяДата();
	Пока Валюта.ПолучитьЭлемент()=1 Цикл
		Если (Прав(Валюта.Код,3)="001")ИЛИ(Прав(Валюта.Код,3)="000")ИЛИ(Прав(Валюта.Код,3)="0")
				ИЛИ(Прав(Валюта.Код,3)="810")ИЛИ(Прав(Валюта.Код,3)="643") Тогда
			Продолжить;
		Иначе
			Курсы=СоздатьОбъект("Периодический");    
			Курсы.ИспользоватьОбъект("Курс",Валюта.ТекущийЭлемент()); 
			Курсы.ОбратныйПорядок();
			Если Курсы.ВыбратьЗначения()=1 Тогда    
				Курсы.ПолучитьЗначение();
				ДатаЗнач = Курсы.ДатаЗнач; 
			Иначе 
				ДатаЗнач = 0;       
			КонецЕсли;
			ДатаМин=?(ДатаЗнач<ДатаМин,ДатаЗнач,ДатаМин);
			СписокВалют.ДобавитьЗначение(Валюта.ТекущийЭлемент(),"     "+СокрЛП(Валюта.Наименование)+";     на: "+Строка(ДатаЗнач)+"  =  "+Формат(Курсы.Значение,"Ч10.4")); 
			СписокВалют.Пометка(СписокВалют.РазмерСписка(),1);
		КонецЕсли;
	КонецЦикла;
	НачДата = ДатаМин;
КонецПроцедуры  // ЗагрузитьСписокВалют
//******************************************************************************
Функция УстановитьКомпоненту()
	Если ЗагрузитьВнешнююКомпоненту(КаталогИБ()+"ExtForms\v7plus.dll")=0 Тогда
		Если ЗагрузитьВнешнююКомпоненту("v7plus.dll")=0 Тогда
			Сообщить("Не удалось обнаружить компоненту V7Plus.dll!"); 
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Попытка
		Соединение = СоздатьОбъект("Addin.V7HttpReader");
		Соединение.КоличествоПопытокАвторизации = 3;
	Исключение 
		Сообщить("Не удалось создать объект Addin.V7HttpReader!");
		Возврат 0;
	КонецПопытки; 
	Возврат 1;
КонецФункции  // УстановитьКомпоненту
//******************************************************************************
Процедура ПриОткрытии(ФлагЧтенияНастройки)  // Предопределенная
	Если ФлагЧтенияНастройки=0 Тогда
		КонДата=ТекущаяДата();
		НачДата=ТекущаяДата()-30;
	КонецЕсли;
	
	Если Метаданные.Справочник("Валюты").Выбран()=0 Тогда
		Предупреждение("Не существует справочника ""Валюты""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если Метаданные.Справочник("Валюты").Реквизит("Курс").Выбран()=0 Тогда
		Предупреждение("Не существует реквизит ""Курс"" справочника ""Валюты""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если Метаданные.Справочник("Валюты").Реквизит("Кратность").Выбран()=0 Тогда
		Предупреждение("Не существует реквизит ""Кратность"" справочника ""Валюты""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Авто = 0;  
	УстановитьКомпоненту();
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			Если Форма.Параметр.Получить("Автоматически")=1 Тогда
				Авто = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Результат = ?(ПустоеЗначение(Результат)=1,1,Результат);
	ЗагрузитьСписокВалют();   
	// Если запуск обработки осуществляется при запуске программы, то диалог не выводится, 
	// а прозводится автоматическая загрузка курсов всех валют справочника
	Если Авто=1 Тогда
		Загрузить();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии
//******************************************************************************

Процедура ПриПовторномОткрытии()  // Предопределенная
	ЗагрузитьСписокВалют();   
КонецПроцедуры // ПриОткрытии
//******************************************************************************
