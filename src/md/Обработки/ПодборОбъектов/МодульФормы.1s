Перем гСтрПуть;
Перем гИмяФайла;

Перем гИмяДаннойОбработки;
Перем гИмяОткрывшейФормы;
Перем гБуфер;
Перем гПараметрыВызова;
Перем гСписОбъектов;
Перем гСписНомеровУдовлетворительныхСтрок;

//--------------------------------------------------------------------------------------------------

Перем гТекЗакладка;
Перем гАлгоритм;

Перем гСписокСписков;
Перем гСписокОтобранных;

//--------------------------------------------------------------------------------------------------

Перем гТекСтрокаВТаблице_Подч;

Перем гОбъектМД_Подч;

 
Перем гТипОбъекта_Подч;
Перем гВидОбъекта_Подч;

Перем гРекОбъекта_Подч;

Перем гТипЗначения_Подч;
Перем гВидЗначения_Подч;
Перем гДлинаЗначения_Подч;
Перем гТочностьЗначения_Подч;

Перем гСписокРекв_Подч;
Перем гНепоказРеквизиты_Подч;
Перем гНепоказРеквизиты_Все;
Перем гПредставлениеРекв_Подч;

//--------------------------------------------------------------------------------------------------

Перем гТекСтрокаВТаблице;

Перем гОбъектМД;

Перем гТипОбъекта;
Перем гВидОбъекта;

Перем гРекОбъекта;

Перем гВладелецСправочника;

Перем гТипЗначения;
Перем гВидЗначения;
Перем гДлинаЗначения;
Перем гТочностьЗначения;

Перем гНепоказРеквизиты;
Перем гПредставлениеРекв;

Перем гВидСубконто;

//--------------------------------------------------------------------------------------------------

Перем гНеОткрывать;
Перем гНастройкаФильтра;
Перем гФлБезОткрытияФормы;
Перем гФлВыбиратьТолькоГруппы;
Перем гИспользоватьЗакладки;
Перем гЗапоминатьНомераСтрок;

Перем гКолонкиЗафиксированы;
Перем гСписОтмеченныхДопКолонок;

Перем гБезГрупп;

//--------------------------------------------------------------------------------------------------

Перем Пометка_Включена;
Перем Пометка_Выключена;

Перем Статус_Док_Записан;
Перем Статус_Док_Проведен;
Перем Статус_Док_Помечен;

Перем Статус_Опер_Включена;
Перем Статус_Опер_Выключена;
Перем Статус_Опер_Удалена;

Перем Статус_Спр_Группа;
Перем Статус_Спр_Элемент;
Перем Статус_Спр_Группа_Удалена;
Перем Статус_Спр_Элемент_Удален;
      
Перем Статус_Опер_Проведена;
Перем Статус_Опер_Записана;
Перем Статус_Опер_Проведена_Выключена;
Перем Статус_Опер_Записана_Выключена;
Перем Статус_Опер_Записана_Удалена;

//--------------------------------------------------------------------------------------------------

Перем гСписВидов;
Перем гСписСправочников;
Перем гСписДокументов;
Перем гСписБухДокументов;
Перем гСписПеречислений;
Перем гСписПлановСчетов;

Перем гСписРеквизитовОпераций;
Перем гСписокРеквизитовПроводки;

//--------------------------------------------------------------------------------------------------

//**********    Здесь обрабатываются условия     ***************************************************

Перем гУсл1,гУсл2,гУсл3,гУсл4,гУсл5,гУсл6,гУсл7,гУсл8,гУсл9,гУсл10;
Перем гУсл11,гУсл12,гУсл13,гУсл14,гУсл15,гУсл16,гУсл17,гУсл18,гУсл19,гУсл20;

Перем ТабУсловия;

//--------------------------------------------------------------------------------------------------

Функция ПрисвоитьУсловие(Ном, Значен, ЗнакУсловия="")
	Если (ЗнакУсловия = ">")  Или (ЗнакУсловия = "<") Или
		 (ЗнакУсловия = ">=") Или (ЗнакУсловия = "<=") Тогда
		Если ТипЗначенияСтр(Значен) = "СписокЗначений" Тогда 
			Значен = Значен.ПолучитьЗначение(1);
		КонецЕсли;	
	КонецЕсли;
	
	Если ТипЗначенияСтр(Значен) = "Строка" Тогда Значен = СокрЛП(Значен) КонецЕсли;
	
	Если Ном=1 Тогда
		гУсл1=Значен;
	ИначеЕсли Ном=2 Тогда
		гУсл2=Значен;
	ИначеЕсли Ном=3 Тогда
		гУсл3=Значен;
	ИначеЕсли Ном=4 Тогда
		гУсл4=Значен;
	ИначеЕсли Ном=5 Тогда
		гУсл5=Значен;
	ИначеЕсли Ном=6 Тогда
		гУсл6=Значен;
	ИначеЕсли Ном=7 Тогда
		гУсл7=Значен;
	ИначеЕсли Ном=8 Тогда
		гУсл8=Значен;
	ИначеЕсли Ном=9 Тогда
		гУсл9=Значен;
	ИначеЕсли Ном=10 Тогда
		гУсл10=Значен;
	ИначеЕсли Ном=11 Тогда
		гУсл11=Значен;
	ИначеЕсли Ном=12 Тогда
		гУсл12=Значен;
	ИначеЕсли Ном=13 Тогда
		гУсл13=Значен;
	ИначеЕсли Ном=14 Тогда
		гУсл14=Значен;
	ИначеЕсли Ном=15 Тогда
		гУсл15=Значен;
	ИначеЕсли Ном=16 Тогда
		гУсл16=Значен;
	ИначеЕсли Ном=16 Тогда
		гУсл17=Значен;
	ИначеЕсли Ном=18 Тогда
		гУсл18=Значен;
	ИначеЕсли Ном=19 Тогда
		гУсл19=Значен;
	ИначеЕсли Ном=20 Тогда
		гУсл20=Значен;
	Иначе
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//------------------------------------------------------------------------------------------------

Функция СтатусОбъекта(Объект)
	
	Если		гТипОбъекта = "Документ" Тогда
		
			Если Объект.Вид() = "Операция" Тогда
				Если Объект.ПометкаУдаления() = 1 Тогда
					Возврат Статус_Опер_Удалена;
				ИначеЕсли Объект.Операция.ВключитьПроводки() = 1 Тогда
					Возврат Статус_Опер_Включена;
				ИначеЕсли Объект.Операция.ВключитьПроводки() = 0 Тогда
					Возврат Статус_Опер_Выключена;	
				КонецЕсли;
			ИначеЕсли Объект.ПометкаУдаления() = 1 Тогда
				Возврат Статус_Док_Помечен;
			ИначеЕсли Объект.Проведен() = 1 Тогда				
				Возврат Статус_Док_Проведен;
			Иначе
				Возврат Статус_Док_Записан;
			КонецЕсли;			
	
	ИначеЕсли	гТипОбъекта = "Операция" Тогда
		
			Если Объект.Вид() = "Операция" Тогда
				Если Объект.ПометкаУдаления() = 1 Тогда
					Возврат Статус_Опер_Удалена;
				ИначеЕсли Объект.Операция.ВключитьПроводки() = 1 Тогда
					Возврат Статус_Опер_Включена;
				ИначеЕсли Объект.Операция.ВключитьПроводки() = 0 Тогда
					Возврат Статус_Опер_Выключена;	
				КонецЕсли;
			Иначе
				Если	Объект.ПометкаУдаления() = 1 Тогда
					Возврат	Статус_Опер_Записана_Удалена;
				Иначе
					Если Объект.Проведен() = 1 Тогда
						Если Объект.Операция.ВключитьПроводки() = 1 Тогда
							Возврат Статус_Опер_Проведена;
						Иначе
							Возврат Статус_Опер_Проведена_Выключена;
						КонецЕсли;
					Иначе
						Если Объект.Операция.ВключитьПроводки() = 1 Тогда
							Возврат Статус_Опер_Записана;
						Иначе
							Возврат Статус_Опер_Записана_Выключена;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				
	ИначеЕсли	гТипОбъекта = "Справочник" Тогда
		
		Эл = Объект;
		Если Эл.ЭтоГруппа() = 1 Тогда
			Если Эл.ПометкаУдаления() = 1 Тогда
				Возврат Статус_Спр_Группа_Удалена;
			Иначе
				Возврат Статус_Спр_Группа;
			КонецЕсли;
		Иначе
			Если Эл.ПометкаУдаления() = 1 Тогда
				Возврат Статус_Спр_Элемент_Удален;
			Иначе
				Возврат Статус_Спр_Элемент;
			КонецЕсли;			
		КонецЕсли;
		
	КонецЕсли;
	
    Возврат "";
	
КонецФункции

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ПрописатьЗначениеКолонки(ИдКолонки)
    
	Для Сч = 1 По гТабВыборка.КоличествоСтрок() Цикл
        Объект	=	гТабВыборка.ПолучитьЗначение(Сч, "Объект");
		
		Если ТипЗначенияСтр(ИдКолонки) = "СписокЗначений" Тогда
			Для СчКолонок = 1 По ИдКолонки.РазмерСписка() Цикл
				ИдКол	=	ИдКолонки.ПолучитьЗначение(СчКолонок);
				Если ИдКол = "Статус" Тогда
				    гТабВыборка.УстановитьЗначение(Сч, ИдКол, СтатусОбъекта(Объект));
					Продолжить;
				КонецЕсли;
                        
				Если гТипОбъекта = "Справочник" Тогда
					Объект.ИспользоватьДату(РабочаяДата(), 1);
				ИначеЕсли	гТипОбъекта = "Документ" Тогда
					Если 	гСписокРеквТабДок.Принадлежит(ИдКол) = 1	Тогда
						ЗначРеквизита	=	Объект.Итог(ИдКол);
						гТабВыборка.УстановитьЗначение(Сч, ИдКол, ЗначРеквизита);
						Продолжить;
					КонецЕсли;
				ИначеЕсли	гТипОбъекта = "Операция" Тогда
					Если Метаданные.ОбщийРеквизитДокумента(ИдКол).Выбран()  = 0 Тогда
						Опер			=	Объект.Операция;
						ЗначРеквизита	=	Опер.ПолучитьАтрибут(ИдКол);
						гТабВыборка.УстановитьЗначение(Сч, ИдКол, ЗначРеквизита);
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				ЗначРеквизита	=	Объект.ПолучитьАтрибут(ИдКол);
				гТабВыборка.УстановитьЗначение(Сч, ИдКол, ЗначРеквизита);
			КонецЦикла;
		Иначе
			Если гТипОбъекта = "Справочник" Тогда
				Объект.ИспользоватьДату(РабочаяДата(), 1);
			ИначеЕсли	гТипОбъекта = "Документ" Тогда
				Если 	гСписокРеквТабДок.Принадлежит(ИдКолонки) = 1	Тогда
					ЗначРеквизита	=	Объект.Итог(ИдКолонки);
					гТабВыборка.УстановитьЗначение(Сч, ИдКолонки, ЗначРеквизита);
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ЗначРеквизита	=	Объект.ПолучитьАтрибут(ИдКолонки);
			гТабВыборка.УстановитьЗначение(Сч, ИдКолонки, ЗначРеквизита);
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ДобавитьОбъект(Об)

	Если 		гАлгоритм = "ПоПодчиненным" Тогда
		Если гСписокОтобранных.Принадлежит(Об.Владелец) = 0 Тогда
			гСписокОтобранных.ДобавитьЗначение(Об.Владелец);	
		КонецЕсли;
        Возврат;		
	ИначеЕсли	гАлгоритм = "ПоРеквизитамДляПодчиненных" Тогда		
		Если гСписокОтобранных.Принадлежит(Об) = 0 Тогда
			гСписокОтобранных.ДобавитьЗначение(Об);	
		КонецЕсли;
        Возврат;
	КонецЕсли;
	
	НомСтр = "";
	Если гТабВыборка.НайтиЗначение(Об, НомСтр, "Объект") = 1 Тогда Возврат КонецЕсли;

	гТабВыборка.НоваяСтрока();
	гТабВыборка.Объект		= Об;
	гТабВыборка.Пометка		= Пометка_Включена;    

	Если	(гТипОбъекта = "Операция") Или (гТипОбъекта = "Документ") Тогда
		Если (гФлБезОткрытияФормы = 1) Или (гЗапоминатьНомераСтрок = 1) Тогда
			Попытка
				гТабВыборка.НомераСтрок = гСписНомеровУдовлетворительныхСтрок.ВСтрокуСРазделителями();    
			Исключение	КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Для СчДопКолонок = 1 По гСписОтмеченныхДопКолонок.РазмерСписка() Цикл
		ИдДопКолонки	=	гСписОтмеченныхДопКолонок.ПолучитьЗначение(СчДопКолонок);
		
		Если ИдДопКолонки = "Статус" Тогда
			гТабВыборка.Статус	= СтатусОбъекта(Об);
			Продолжить;
		ИначеЕсли ИдДопКолонки = "Объект" Тогда
			Продолжить;
		КонецЕсли;

		Если		гТипОбъекта = "Справочник" Тогда
			Об.ИспользоватьДату(РабочаяДата(), 1);
		ИначеЕсли	гТипОбъекта = "Документ" Тогда
			Если 	гСписокРеквТабДок.Принадлежит(ИдДопКолонки) = 1	Тогда
				ЗначРеквизита	=	Об.Итог(ИдДопКолонки);
				гТабВыборка.УстановитьЗначение(гТабВыборка.НомерСтроки, ИдДопКолонки, ЗначРеквизита);
				Продолжить;
			КонецЕсли;
		ИначеЕсли	гТипОбъекта = "Операция" Тогда
			Если Метаданные.ОбщийРеквизитДокумента(ИдДопКолонки).Выбран()  = 0 Тогда
				Опер			=	Об.Операция;
				ЗначРеквизита	=	Опер.ПолучитьАтрибут(ИдДопКолонки);
				гТабВыборка.УстановитьЗначение(гТабВыборка.НомерСтроки, ИдДопКолонки, ЗначРеквизита);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗначРеквизита	=	Об.ПолучитьАтрибут(ИдДопКолонки);
		гТабВыборка.УстановитьЗначение(гТабВыборка.НомерСтроки, ИдДопКолонки, ЗначРеквизита);
	КонецЦикла;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------


Процедура Запрос(ВидОбъекта)
	
	Запрос = СоздатьОбъект("Запрос");
	Если ВклПомеч = 2  Тогда
		ТекстЗапроса = "Обрабатывать НеПомеченныеНаУдаление;";
	ИначеЕсли ВклПомеч = 3  Тогда
		ТекстЗапроса = "Обрабатывать ПомеченныеНаУдаление;";
	Иначе
		ТекстЗапроса = "Обрабатывать Все;";
	КонецЕсли;      
	                             
    Если (гТипОбъекта = "Операция") Или (гТипОбъекта = "Документ") Тогда
		ТекстЗапроса = ТекстЗапроса + "
					   |Период с ФормДатаНач по ФормДатаКон;";
    КонецЕсли;

	стрТочка	=	".";
	Добавок		=	"";
	Если гТипОбъекта = "Справочник" Тогда
		стрТекущий	= ".ТекущийЭлемент";
		Добавок		= " Без Групп";
	ИначеЕсли гТипОбъекта = "ПланСчетов" Тогда
		гТипОбъекта = "Счет";
		стрТекущий = ".ТекущийСчет";
	ИначеЕсли гТипОбъекта = "Документ" Тогда
		стрТекущий = ".ТекущийДокумент";
		Если (ВклПроведенныеВсе = 2) И (Форма.ВклПроведенныеВсе.Доступность() = 1)  Тогда
			ТекстЗапроса = ТекстЗапроса + "
						   |ОбрабатыватьДокументы Проведенные;";
		ИначеЕсли (ВклПроведенныеВсе = 3) И (Форма.ВклПроведенныеВсе.Доступность() = 1)  Тогда
			ТекстЗапроса = ТекстЗапроса +"
						   |ОбрабатыватьДокументы Непроведенные;";
		Иначе
			ТекстЗапроса = ТекстЗапроса +"
						   |ОбрабатыватьДокументы Все;";
		КонецЕсли;
	ИначеЕсли гТипОбъекта = "Операция" Тогда
		стрТочка   = "";
		стрТекущий = ".ТекущийДокумент";					
		Если (ВклВключенныеВсе = 2) И (Форма.ВклВключенныеВсе.Доступность() = 1)  Тогда
			ТекстЗапроса = ТекстЗапроса + "
						   |ОбрабатыватьОперации Включенные;";
		ИначеЕсли ВклВключенныеВсе = 3 Тогда
			ТекстЗапроса = ТекстЗапроса +"
						   |ОбрабатыватьОперации Выключенные;";
		Иначе
			ТекстЗапроса = ТекстЗапроса +"
						   |ОбрабатыватьОперации Все;";
		КонецЕсли;					
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
				   |ПеремОбъект = " +  гТипОбъекта + стрТочка + ВидОбъекта +  стрТекущий + ";"
				   "Группировка ПеремОбъект" + Добавок +";	";
    			   //|Без Итогов;";
	
	Если гАлгоритм = "НахождениеПересечений" Тогда
		Для СчМножеств = 1 По гСписокСписков.РазмерСписка() Цикл
		    Усл = "";
			Если ПрисвоитьУсловие(СчМножеств, гСписокСписков.ПолучитьЗначение(СчМножеств, Усл)) = 0 Тогда
			     Предупреждение("Допустимо использовать не более " + СчМножеств + " условий!");
				 Прервать;
			КонецЕсли;
			Если		Усл = "В" Тогда
				ТекстЗапроса = ТекстЗапроса + "
											|Условие (ПеремОбъект В гУсл" + Строка(СчМножеств) + ");";
			ИначеЕсли	Усл = "Не" Тогда
				ТекстЗапроса = ТекстЗапроса + "
											|Условие (Не(ПеремОбъект В гУсл" + Строка(СчМножеств) + "));";
			КонецЕсли;
		КонецЦикла;
		СчМножеств = гСписокСписков.РазмерСписка();
	Иначе
		СчМножеств = 0;
	КонецЕсли;
				   
				   
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если ТабУсловия.ФлВкл <> Пометка_Включена Тогда Продолжить КонецЕсли;
		НомСтр		= ТабУсловия.НомерСтроки + СчМножеств;
		ЗнакУсловия = СокрЛП(ТабУсловия.КолУсловие);
		Если ПрисвоитьУсловие(НомСтр, ТабУсловия.КолЗначение, ЗнакУсловия) = 0 Тогда
		     Предупреждение("Допустимо использовать не более " + НомСтр + " условий!");
			 Прервать;
		КонецЕсли;		
	КонецЦикла;			
				   
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если ТабУсловия.ФлВкл <> Пометка_Включена Тогда Продолжить КонецЕсли;
		НомСтр   = Строка(ТабУсловия.НомерСтроки + СчМножеств);
		ИмяПерем = ТабУсловия.КолИдентификатор;
		МДАттр   = Метаданные.ОбщийРеквизитДокумента(ИмяПерем);
		
		Если (МДАттр.Выбран() = 1) И (гТипОбъекта = "Операция") Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
						   |Условие (ПеремОбъект." + ИмяПерем + " " + 
						            ТабУсловия.КолУсловие + "гУсл" + НомСтр + ");";

		ИначеЕсли (ИмяПерем = "Счет") И (гТипОбъекта = "Операция") Тогда
		          
			ТекстЗапроса = ТекстЗапроса + "
						  |Счет"  + НомСтр + "1 = Операция.Кредит.Счет;"
						  "Счет"  + НомСтр + "2 = Операция.Дебет.Счет;"
						  "Условие ((Счет" + НомСтр + "1 " + ТабУсловия.КолУсловие + " гУсл" + НомСтр + ") Или " + 
						  		  "(Счет" + НомСтр + "2 " + ТабУсловия.КолУсловие + " гУсл" + НомСтр + "));";
									
		ИначеЕсли ((ИмяПерем = "СубконтоДт") Или (ИмяПерем = "СубконтоКт")) И (гТипОбъекта = "Операция") Тогда
		          
			ВидОперации = ?(ИмяПерем = "СубконтоДт", "Дебет.", "Кредит.");
			ТекстЗапроса = ТекстЗапроса + "
						   |Субконто"  + НомСтр + " = Операция." + ВидОперации + ТабУсловия.КолВидСубконто + ";" 
						  "Условие (Субконто" + НомСтр + " " + ТабУсловия.КолУсловие + " гУсл" + НомСтр + ");";
						  
		ИначеЕсли (ИмяПерем = "Документ") И (гТипОбъекта = "Операция") Тогда
			
			Если СокрЛП(ТабУсловия.КолУсловие) = "<>" Тогда
				ТекстЗапроса = ТекстЗапроса + "
							   |Условие (Не(ПеремОбъект.Вид() в гУсл" + НомСтр + "));";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
							   |Условие (ПеремОбъект.Вид() в гУсл" + НомСтр + ");";
			КонецЕсли;
						   
		Иначе
						
			Если СокрЛП(ТабУсловия.КолУсловие) = "<>" Тогда
				ТекстЗапроса = ТекстЗапроса + "
							   |Перем" + НомСтр + " = "  + гТипОбъекта + стрТочка + ВидОбъекта + "."
													  + ИмяПерем + ";"
							  "Условие (Не(Перем" + НомСтр + " В гУсл" + НомСтр + "));";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
							   |Перем" + НомСтр + " = "  + гТипОбъекта + стрТочка + ВидОбъекта + "."
													  + ИмяПерем + ";"
							  "Условие (Перем" + НомСтр + " " + ТабУсловия.КолУсловие + " гУсл" + НомСтр + ");";
			КонецЕсли;	
			
		КонецЕсли;
	КонецЦикла;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Предупреждение("Запрос не выполнен!");
		Возврат;
	КонецЕсли;
	     
	Пока Запрос.Группировка(1, 1) = 1 Цикл
		ДобавитьОбъект(Запрос.ПеремОбъект);
	КонецЦикла;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Функция ПривестиКТипу(Зн, Тип)
    Если		Тип = "Строка" Тогда
    	Возврат Строка(Зн);
    ИначеЕсли	Тип = "Дата" Тогда
		Возврат Дата(Зн);                                  
	ИначеЕсли	Тип = "Число" Тогда
		Возврат Число(Зн);
    КонецЕсли;
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция СравнитьЗначения(СтрЗнак, Знач1, Знач2)
	Рез			= 1;
	ТипЗнач1	= ТипЗначенияСтр(Знач1);
	ТипЗнач2	= ТипЗначенияСтр(Знач2);
	Если ТипЗнач1 <> ТипЗнач2 Тогда
		Если (Найти("Строка,Число,Дата", ТипЗнач1) > 0) И (Найти("Строка,Число,Дата", ТипЗнач2) > 0)  Тогда
			Знач1 = СокрЛП(Знач1);
			Знач2 = СокрЛП(Знач2);
		ИначеЕсли (ПустоеЗначение(Знач1) = 1) Или (ПустоеЗначение(Знач2) = 1) Тогда
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Если ТипЗначенияСтр(Знач1) = "Строка" Тогда Знач1 = НРег(СокрЛП(Знач1)); Знач2 = НРег(СокрЛП(Знач2)) КонецЕсли;
	Если (СтрЗнак="<>") Тогда
		Попытка
			Если Знач2.ЭтоГруппа() = 1 Тогда 
				Рез = ?(Знач1.ПринадлежитГруппе(Знач2) <> 1, 1, 0);
			Иначе 
				Рез = ?(Знач1 <> Знач2, 1, 0);
			КонецЕсли;		    
		Исключение
			Рез = ?(Знач1 <> Знач2, 1, 0);
		КонецПопытки;
	ИначеЕсли (СтрЗнак="<=") Тогда
		Рез=?(Знач1<=Знач2, 1, 0);
	ИначеЕсли (СтрЗнак=">=") Тогда
		Рез=?(Знач1>=Знач2, 1, 0);
	ИначеЕсли (СтрЗнак=">") Тогда
		Рез=?(Знач1>Знач2, 1, 0);
	ИначеЕсли (СтрЗнак="<") Тогда
		Рез=?(Знач1<Знач2, 1, 0);
	ИначеЕсли (СтрЗнак="ПоВхождению") Тогда
		Рез=?(Найти(НРег(Знач1), НРег(Знач2))>0, 1, 0);
	ИначеЕсли (СтрЗнак="ПоНеВхождению") Тогда
		Рез=?(Найти(НРег(Знач1), НРег(Знач2))=0, 1, 0);
	ИначеЕсли (СтрЗнак="В") Или (СтрЗнак="=") Тогда
		Попытка
			Если Знач2.ЭтоГруппа() = 1 Тогда 
				Рез = ?(Знач1.ПринадлежитГруппе(Знач2)=1, 1, 0);				
			Иначе 
				Рез = ?(Знач1 = Знач2, 1, 0);
			КонецЕсли;		    
		Исключение
			Рез = ?(Знач1 = Знач2, 1, 0);
		КонецПопытки;
	КонецЕсли;
	Возврат Рез;
КонецФункции

//------------------------------------------------------------------------------------------------

Функция ПроверитьУсловие(Условие, Знач1, Спис)
	Условие = СокрЛП(Условие);
	
	Если (Условие = "В") Или (Условие = "=") Или (Условие = "ПоВхождению") Или (Условие = "ПоНеВхождению") Тогда
		Фл = 0;
		Для Инд = 1 По Спис.РазмерСписка() Цикл
			Знач2 = Спис.ПолучитьЗначение(Инд);
			Если СравнитьЗначения(Условие, Знач1, Знач2) = 1 Тогда
				Фл = 1;
				Прервать;
			КонецЕсли;				
		КонецЦикла;
		Если Фл = 0 Тогда
			Возврат 0;
		КонецЕсли;
	ИначеЕсли Условие = "<>" Тогда
		Для Инд = 1 По Спис.РазмерСписка() Цикл
			Знач2 = Спис.ПолучитьЗначение(Инд);
			Если СравнитьЗначения(Условие, Знач1, Знач2) = 0 Тогда
				Возврат 0;
			КонецЕсли;				
		КонецЦикла;
	Иначе 
		Знач2 = Спис.ПолучитьЗначение(1);
		Если СравнитьЗначения(Условие, Знач1, Знач2) = 0 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

//------------------------------------------------------------------------------------------------

Функция ПроверитьПроводку(Пров)
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		РеквИдентиф = СокрЛП(ТабУсловия.КолИдентификатор);
		Если (ТабУсловия.ФлВкл = Пометка_Выключена) Или
			 (гСписокОбщРекв.Принадлежит(РеквИдентиф) = 1) Или
			 (гСписРеквизитовОпераций.Принадлежит(РеквИдентиф) = 1) Или
			 (РеквИдентиф = "Документ") Тогда
			Продолжить;
		КонецЕсли;
		            
		Если		РеквИдентиф = "Счет" Тогда
			
			ЗнДебетовогоУсловия		= ПроверитьУсловие(ТабУсловия.КолУсловие, Пров.Дебет.Счет,	ТабУсловия.КолЗначение);
			ЗнКредитовогоУсловия	= ПроверитьУсловие(ТабУсловия.КолУсловие, Пров.Кредит.Счет,	ТабУсловия.КолЗначение);
			
			Если ТабУсловия.КолУсловие = "<>" Тогда
				Если	(ЗнДебетовогоУсловия = 0) Или	(ЗнКредитовогоУсловия = 0) Тогда Возврат 0 КонецЕсли;
			Иначе
				Если	(ЗнДебетовогоУсловия = 0) И 	(ЗнКредитовогоУсловия = 0) Тогда Возврат 0 КонецЕсли;
			КонецЕсли;
			Продолжить;
			
		ИначеЕсли	РеквИдентиф = "Дебет.Счет" Тогда
			
			Знач1   = Пров.Дебет.Счет;
			
		ИначеЕсли	РеквИдентиф = "Кредит.Счет" Тогда
			
			Знач1 = Пров.Кредит.Счет;

		ИначеЕсли	РеквИдентиф = "Субконто" Тогда
                    
			ФлСуб = 0;
			Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
				ЗнСубкДебета			= Пров.Дебет.Субконто(Сч);
				ЗнСубкКредита			= Пров.Кредит.Субконто(Сч);
				Если ПустоеЗначение(ЗнСубкДебета)	= 1	Тогда ЗнСубкДебета	= ПолучитьПустоеЗначение("ВидСубконто") КонецЕсли;
				Если ПустоеЗначение(ЗнСубкКредита)	= 1	Тогда ЗнСубкКредита	= ПолучитьПустоеЗначение("ВидСубконто") КонецЕсли;				
				ЗнДебетовогоУсловия		= ПроверитьУсловие(ТабУсловия.КолУсловие, ЗнСубкДебета,		ТабУсловия.КолЗначение);
				ЗнКредитовогоУсловия	= ПроверитьУсловие(ТабУсловия.КолУсловие, ЗнСубкКредита,	ТабУсловия.КолЗначение);
				
				Если ТабУсловия.КолУсловие = "<>" Тогда
					Если	(ЗнДебетовогоУсловия = 0) Или	(ЗнКредитовогоУсловия = 0) Тогда Возврат 0 КонецЕсли;
				Иначе
					Если	(ЗнДебетовогоУсловия = 1) Или 	(ЗнКредитовогоУсловия = 1) Тогда ФлСуб = 1; Прервать; КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если ТабУсловия.КолУсловие <> "<>" Тогда Если ФлСуб = 0 Тогда Возврат 0 КонецЕсли; КонецЕсли;
			Продолжить;
			
		ИначеЕсли	РеквИдентиф = "СубконтоДт" Тогда
                    
			ФлСуб = 0;
			Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
				ЗнСубкДебета			= Пров.Дебет.Субконто(Сч);
				Если ПустоеЗначение(ЗнСубкДебета)	= 1	Тогда ЗнСубкДебета	= ПолучитьПустоеЗначение("ВидСубконто") КонецЕсли;
				ЗнДебетовогоУсловия		= ПроверитьУсловие(ТабУсловия.КолУсловие, ЗнСубкДебета,	ТабУсловия.КолЗначение);
				Если ТабУсловия.КолУсловие = "<>" Тогда
					Если	ЗнДебетовогоУсловия = 0 Тогда Возврат 0 КонецЕсли;
				Иначе
					Если	ЗнДебетовогоУсловия = 1 Тогда ФлСуб = 1; Прервать; КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если ТабУсловия.КолУсловие <> "<>" Тогда Если ФлСуб = 0 Тогда Возврат 0 КонецЕсли; КонецЕсли;
			Продолжить;
			
		ИначеЕсли	РеквИдентиф = "СубконтоКт" Тогда
                    
			ФлСуб = 0;
			Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
				ЗнСубкКредита			= Пров.Кредит.Субконто(Сч);
				Если ПустоеЗначение(ЗнСубкКредита)	= 1	Тогда ЗнСубкКредита	= ПолучитьПустоеЗначение("ВидСубконто") КонецЕсли;				
				ЗнКредитовогоУсловия	= ПроверитьУсловие(ТабУсловия.КолУсловие, ЗнСубкКредита, ТабУсловия.КолЗначение);
				Если ТабУсловия.КолУсловие = "<>" Тогда
					Если	ЗнКредитовогоУсловия = 0 Тогда Возврат 0 КонецЕсли;
				Иначе
					Если	ЗнКредитовогоУсловия = 1 Тогда ФлСуб = 1; Прервать; КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если ТабУсловия.КолУсловие <> "<>" Тогда Если ФлСуб = 0 Тогда Возврат 0 КонецЕсли; КонецЕсли;
			Продолжить;
			
		ИначеЕсли	Найти(РеквИдентиф, "СубконтоДт") > 0 Тогда
			
			НомерСубконто = Число(СтрЗаменить(РеквИдентиф, "СубконтоДт", ""));
			Знач1 = Пров.Дебет.Субконто(НомерСубконто);
			Если ПустоеЗначение(Знач1) = 1 Тогда Знач1 = ПолучитьПустоеЗначение("ВидСубконто") КонецЕсли;
			
		ИначеЕсли	Найти(РеквИдентиф, "СубконтоКт") > 0 Тогда
			
			НомерСубконто = Число(СтрЗаменить(РеквИдентиф, "СубконтоКт", ""));
			Знач1 = Пров.Кредит.Субконто(НомерСубконто);
			Если ПустоеЗначение(Знач1) = 1 Тогда Знач1 = ПолучитьПустоеЗначение("ВидСубконто") КонецЕсли;
			
		ИначеЕсли	РеквИдентиф = "Количество" Тогда
			Знач1 = Пров.Количество;
		ИначеЕсли	РеквИдентиф = "Сумма" Тогда
			Знач1 = Пров.Сумма;
		ИначеЕсли	РеквИдентиф = "Валюта" Тогда
			Знач1 = Пров.Валюта;
		ИначеЕсли	РеквИдентиф = "ВалСумма" Тогда
			Знач1 = Пров.ВалСумма;
		ИначеЕсли	РеквИдентиф = "ПланСчетов" Тогда 
			Знач1 = Пров.ПланСчетов();
		ИначеЕсли	Метаданные.РеквизитПроводки(РеквИдентиф).Выбран() = 1 Тогда 
			Знач1 = Пров.ПолучитьАтрибут(СокрЛП(ТабУсловия.КолИдентификатор));	
		Иначе
			Сообщить("Неизвестный реквизит " + РеквИдентиф + " !");
			Продолжить;
		КонецЕсли;
		
		Если ПроверитьУсловие(ТабУсловия.КолУсловие, Знач1, ТабУсловия.КолЗначение) = 0 Тогда Возврат 0 КонецЕсли;
		
	КонецЦикла;
    Возврат 1;
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция ПроверитьОперацию(Опер)
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		РеквИдентиф = СокрЛП(ТабУсловия.КолИдентификатор);
		Если (ТабУсловия.ФлВкл = Пометка_Выключена) Или
			 (гСписокРеквизитовПроводки.Принадлежит(РеквИдентиф) = 1) Тогда
			Продолжить;
		КонецЕсли;
		Если		РеквИдентиф = "Документ" Тогда
			Знач1   = Опер.Документ.Вид();
		ИначеЕсли	Метаданные.ОбщийРеквизитДокумента(РеквИдентиф).Выбран() = 1 Тогда
			Знач1 = Опер.Документ.ПолучитьАтрибут(РеквИдентиф);
		Иначе
			Знач1 = Опер.ПолучитьАтрибут(РеквИдентиф);
		КонецЕсли;
            
		Если ПроверитьУсловие(ТабУсловия.КолУсловие, Знач1, ТабУсловия.КолЗначение) = 0 Тогда Возврат 0 КонецЕсли;		
	КонецЦикла;
	
	Для Сч = 1 По Опер.КоличествоПроводок() Цикл
		Опер.ПолучитьПроводкуПоНомеру(Сч);
		Если ПроверитьПроводку(Опер) = 1 Тогда
			гСписНомеровУдовлетворительныхСтрок.ДобавитьЗначение(Сч);
		КонецЕсли;
	КонецЦикла;
		
	Если гСписНомеровУдовлетворительныхСтрок.РазмерСписка() > 0 Тогда
		Возврат 1;
	КонецЕсли;
		
    Возврат 0;
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция ПроверитьЭлемент(Элем)
	Элем.ИспользоватьДату(РабочаяДата(), 1);
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если ТабУсловия.ФлВкл = Пометка_Выключена Тогда Продолжить	КонецЕсли;
		                                              
		РеквИдентиф = СокрЛП(ТабУсловия.КолИдентификатор);		
		Если РеквИдентиф = "Наименование" Тогда 
			Знач1 = СокрЛП(Элем.Наименование);
		Иначе 
			Знач1 = Элем.ПолучитьАтрибут(РеквИдентиф);
		КонецЕсли;
		
		Если ПроверитьУсловие(ТабУсловия.КолУсловие, Знач1, ТабУсловия.КолЗначение) = 0 Тогда Возврат(0) КонецЕсли;
	КонецЦикла;
    Возврат 1;
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция ПроверитьСчет(Элем)
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если ТабУсловия.ФлВкл = Пометка_Выключена Тогда Продолжить	КонецЕсли;
		                                              
		РеквИдентиф = СокрЛП(ТабУсловия.КолИдентификатор);		
		Если РеквИдентиф = "Наименование" Тогда
			Знач1 = СокрЛП(Элем.Наименование);
		Иначе 
			Знач1 = Элем.ПолучитьАтрибут(РеквИдентиф);
		КонецЕсли;

		Если ПроверитьУсловие(ТабУсловия.КолУсловие, Знач1, ТабУсловия.КолЗначение) = 0 Тогда Возврат 0 КонецЕсли;
	КонецЦикла;
    Возврат 1;
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция ПроверитьСтрокуДокумента(СтрокаДок)
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Знач2 = ТабУсловия.КолЗначение;
		РеквИдентиф = СокрЛП(ТабУсловия.КолИдентификатор);
		Если 	(ТабУсловия.ФлВкл = Пометка_Выключена) Или
				(РеквИдентиф = "ДатаДок") Или (РеквИдентиф = "НомерДок") Или
			 	(гСписокОбщРекв.Принадлежит(РеквИдентиф) = 1) Или
			 	(гСписокРеквШапки.Принадлежит(РеквИдентиф) = 1) Тогда
			Продолжить;
		ИначеЕсли гСписокРеквТабДок.Принадлежит(РеквИдентиф) = 1 Тогда
			Знач1 = СтрокаДок.ПолучитьАтрибут(СокрЛП(ТабУсловия.КолИдентификатор));	
		Иначе
			Сообщить("Неизвестный реквизит " + РеквИдентиф + " !");
			Продолжить;
		КонецЕсли;
		
		Если ПроверитьУсловие(ТабУсловия.КолУсловие, Знач1, ТабУсловия.КолЗначение) = 0 Тогда Возврат 0 КонецЕсли;
	КонецЦикла;
	
    Возврат 1;    
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция ПроверитьДокумент(Док)
	
	ФлВкл = 0;
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьСтрокуДокумента(Док) = 1 Тогда
			гСписНомеровУдовлетворительныхСтрок.ДобавитьЗначение(Док.НомерСтроки);
			ФлВкл = 1;
		КонецЕсли;			
	КонецЦикла;
	
	Если (ФлВкл = 0) И (Док.КоличествоСтрок() <> 0) Тогда 
		Возврат 0;
	ИначеЕсли (Док.КоличествоСтрок() = 0) И (ПроверитьСтрокуДокумента(Док) = 0) Тогда
		Возврат 0;
	КонецЕсли;
	
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		
		Если ТабУсловия.ФлВкл = Пометка_Выключена Тогда Продолжить	КонецЕсли;
		Знач2 = ТабУсловия.КолЗначение;
		РеквИдентиф = СокрЛП(ТабУсловия.КолИдентификатор);		
		Если гСписокРеквТабДок.Принадлежит(РеквИдентиф) = 1 Тогда Продолжить КонецЕсли;
		Знач1 = Док.ПолучитьАтрибут(РеквИдентиф);
		Если (РеквИдентиф = "НомерДок") И (гОбъектМД.ТипНомера = "Числовой") Тогда
			Знач1 = Число(Знач1);
		КонецЕсли;
		
		Если ПроверитьУсловие(ТабУсловия.КолУсловие, Знач1, ТабУсловия.КолЗначение) = 0 Тогда Возврат 0 КонецЕсли;
	КонецЦикла;
	
    Возврат 1;    
КонецФункции

//--------------------------------------------------------------------------------------------------

Процедура СделатьВыборкуПеребором(ВидОбъекта)
	
	Если гТипОбъекта = "Операция" Тогда
		
		Опер = СоздатьОбъект("Операция");
		Опер.ВыбратьОперации(ФормДатаНач, ФормДатаКон);
		Пока Опер.ПолучитьОперацию() = 1 Цикл
			Если ВклПомеч = 3 Тогда
				Если Опер.ПометкаУдаления() <> 1 Тогда Продолжить КонецЕсли;
			ИначеЕсли ВклПомеч = 2 Тогда				
				Если Опер.ПометкаУдаления() = 1 Тогда Продолжить КонецЕсли;
			КонецЕсли;
			Если ВклВключенныеВсе = 3 Тогда 
				Если Опер.ВключитьПроводки() <> 0 Тогда Продолжить КонецЕсли;
			ИначеЕсли ВклВключенныеВсе = 2 Тогда
				Если Опер.ВключитьПроводки() = 0 Тогда Продолжить КонецЕсли;							
			КонецЕсли;
			                                 
			гСписНомеровУдовлетворительныхСтрок = СоздатьОбъект("СписокЗначений");
			
			Если ВклПомеч <> 3 Тогда
				Если ПроверитьОперацию(Опер) = 0 Тогда	Продолжить	КонецЕсли;
			КонецЕсли;
			
			ДобавитьОбъект(Опер.Документ.ТекущийДокумент());
			
		КонецЦикла;					
		
	ИначеЕсли гТипОбъекта = "Справочник" Тогда
		ЭлСпр = СоздатьОбъект("Справочник." + ВидОбъекта);
		ЭлСпр.ВыбратьЭлементы(0);
		Пока ЭлСпр.ПолучитьЭлемент() = 1 Цикл
			Если (ЭлСпр.ЭтоГруппа() = 1) И (ФормФлВключатьГруппы = 0) Тогда Продолжить КонецЕсли;
			
			Если ВклПомеч = 3 Тогда
				Если ЭлСпр.ПометкаУдаления() <> 1 Тогда Продолжить КонецЕсли;
			ИначеЕсли ВклПомеч = 2 Тогда				
				Если ЭлСпр.ПометкаУдаления() = 1 Тогда Продолжить КонецЕсли;
			КонецЕсли;
			
			Если ПроверитьЭлемент(ЭлСпр) = 0 Тогда	Продолжить	КонецЕсли;
			
			ДобавитьОбъект(ЭлСпр.ТекущийЭлемент());
		КонецЦикла;
		
	ИначеЕсли гТипОбъекта = "Документ" Тогда
		
		Док = СоздатьОбъект("Документ." + ВидОбъекта);
		Док.ВыбратьДокументы(ФормДатаНач, ФормДатаКон);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если ВклПомеч = 3 Тогда
				Если Док.ПометкаУдаления() <> 1 Тогда Продолжить КонецЕсли;
			ИначеЕсли ВклПомеч = 2 Тогда				
				Если Док.ПометкаУдаления() = 1 Тогда Продолжить КонецЕсли;
			КонецЕсли;

			Если (ВклПроведенныеВсе = 2) И (Форма.ВклПроведенныеВсе.Доступность() = 1)  Тогда
				Если Док.Проведен() <> 1 Тогда Продолжить КонецЕсли;
			ИначеЕсли (ВклПроведенныеВсе = 3) И (Форма.ВклПроведенныеВсе.Доступность() = 1)  Тогда
				Если Док.Проведен() <> 0 Тогда Продолжить КонецЕсли;
			КонецЕсли;
			
			гСписНомеровУдовлетворительныхСтрок = СоздатьОбъект("СписокЗначений");
			
			Если ПроверитьДокумент(Док) = 0 Тогда	Продолжить	КонецЕсли;
			
			ДобавитьОбъект(Док.ТекущийДокумент());
		КонецЦикла;
		
	ИначеЕсли гТипОбъекта = "ПланСчетов" Тогда
		
		ЭлСчет = СоздатьОбъект("Счет." + ВидОбъекта);
		ЭлСчет.ВыбратьСчета();
		Пока ЭлСчет.ПолучитьСчет() = 1 Цикл
			Если ВклПомеч = 3 Тогда
				Если ЭлСчет.ПометкаУдаления() <> 1 Тогда Продолжить КонецЕсли;
			ИначеЕсли ВклПомеч = 2 Тогда				
				Если ЭлСчет.ПометкаУдаления() = 1 Тогда Продолжить КонецЕсли;
			КонецЕсли;
			Если ПроверитьСчет(ЭлСчет.ТекущийСчет()) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ДобавитьОбъект(ЭлСчет.ТекущийСчет());
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Функция ВыполнятьЗапрос()
	                                             
	НомСтр = 0;
	Если 		ТабУсловия.НайтиЗначение("ПоВхождению",		НомСтр, "КолУсловие") = 1 Тогда
		Возврат 0;
	ИначеЕсли	ТабУсловия.НайтиЗначение("ПоНеВхождению",	НомСтр, "КолУсловие") = 1 Тогда
		Возврат 0;
	КонецЕсли;
	
	Если гТипОбъекта = "Операция" Тогда
		    
		Возврат 0;
		
		Если (ВклПомеч = 2) Или (ВклПомеч = 3) Тогда
			Возврат 0;
		КонецЕсли;		
		НомСтр  = 0; 
		Если ТабУсловия.НайтиЗначение("Количество", НомСтр, "КолИдентификатор") = 1 Тогда
			Если ТабУсловия.ПолучитьЗначение(НомСтр, "ФлВкл") = Пометка_Включена Тогда 
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		НомСтр  = 0;
		Если ТабУсловия.НайтиЗначение("Содержание", НомСтр, "КолИдентификатор") = 1 Тогда
			Если ТабУсловия.ПолучитьЗначение(НомСтр, "ФлВкл") = Пометка_Включена Тогда 
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		НомСтр1 = 0;
		НомСтр2 = 0;
		НомСтр3 = 0;
		НомСтр4 = 0;
		НомСтр5 = 0;
		
		ТабУсловия.НайтиЗначение("Дебет.Счет",	НомСтр1, "КолИдентификатор");
		ТабУсловия.НайтиЗначение("Кредит.Счет",	НомСтр2, "КолИдентификатор");
		ТабУсловия.НайтиЗначение("СубконтоДт",	НомСтр3, "КолИдентификатор");
		ТабУсловия.НайтиЗначение("СубконтоКт",	НомСтр4, "КолИдентификатор");
		ТабУсловия.НайтиЗначение("Счет", 		НомСтр1, "КолИдентификатор");
		
		Если (?(НомСтр1 > 0, ТабУсловия.ПолучитьЗначение(НомСтр1, "ФлВкл"), "") = Пометка_Включена) Или
			 (?(НомСтр2 > 0, ТабУсловия.ПолучитьЗначение(НомСтр2, "ФлВкл"), "") = Пометка_Включена) Или
			 (?(НомСтр3 > 0, ТабУсловия.ПолучитьЗначение(НомСтр3, "ФлВкл"), "") = Пометка_Включена) Или
			 (?(НомСтр3 > 0, ТабУсловия.ПолучитьЗначение(НомСтр4, "ФлВкл"), "") = Пометка_Включена) Или
			 (?(НомСтр4 > 0, ТабУсловия.ПолучитьЗначение(НомСтр5, "ФлВкл"), "") = Пометка_Включена) Тогда
			Возврат 1;
		Иначе
			ТабУсловия.ВыбратьСтроки();
			Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
				Если (Метаданные.РеквизитПроводки(ТабУсловия.КолИдентификатор).Выбран() = 1) Или
					 (Метаданные.РеквизитОперации(ТабУсловия.КолИдентификатор).Выбран() = 1) Или
					 (Метаданные.ОбщийРеквизитДокумента(ТабУсловия.КолИдентификатор).Выбран() = 1) Тогда
					Возврат 0;
				КонецЕсли;					
			КонецЦикла;			
		КонецЕсли;
		
	ИначеЕсли гТипОбъекта = "Справочник" Тогда
		
		Если ФормФлВключатьГруппы = 1 Тогда Возврат(0) КонецЕсли;
		
		НомСтр  = 0; 
		ТабУсловия.НайтиЗначение("Наименование", НомСтр, "КолИдентификатор");
		Если (?(НомСтр > 0, ТабУсловия.ПолучитьЗначение(НомСтр, "ФлВкл"), "") = Пометка_Включена) Тогда
			Возврат 0;
		КонецЕсли;
		
		ТабУсловия.ВыбратьСтроки();
		Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
			МДАттр = гОбъектМД.Реквизит(ТабУсловия.КолИдентификатор);
			Если МДАттр.Выбран() = 1 Тогда 
				Если ((МДАттр.Использование = "ДляОбоих") Или
					 (МДАттр.Использование = "ДляГруппы")) И
					 (ТабУсловия.ФлВкл = Пометка_Включена) Тогда
					Возврат 0;
				ИначеЕсли (МДАттр.Тип = "Строка") И (Число(МДАттр.Длина) = 0) Тогда
					Возврат 0;
				КонецЕсли; 
			ИначеЕсли (ТабУсловия.КолИдентификатор = "Наименование") И (ТабУсловия.ФлВкл = Пометка_Включена) Тогда
				Возврат 0;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли гТипОбъекта = "Документ" Тогда
		
		ТабУсловия.ВыбратьСтроки();
		Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
			РекОбъекта	= СокрЛП(ТабУсловия.КолИдентификатор);
			ОбъектМД	= гОбъектМД;
			Если (РекОбъекта = "НомерДок") И (ОбъектМД.ТипНомера = "Числовой") Тогда Возврат(0) КонецЕсли;
			РеквМД		= Метаданные.ОбщийРеквизитДокумента(РекОбъекта);
			Если РеквМД.Выбран() = 0 Тогда
				РеквМД = ОбъектМД.РеквизитШапки(РекОбъекта);
				Если РеквМД.Выбран() = 0 Тогда
					РеквМД = ОбъектМД.РеквизитТабличнойЧасти(РекОбъекта);
					Если РеквМД.Выбран() = 0 Тогда
						Продолжить;
					Иначе
						Если (гФлБезОткрытияФормы = 1) Или (гЗапоминатьНомераСтрок = 1) Тогда
							Возврат(0);
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
			
			Если (РеквМД.Тип = "Строка") И (Число(РеквМД.Длина) = 0) Тогда
				Если ТабУсловия.ФлВкл = Пометка_Включена Тогда
					Возврат 0;
				КонецЕсли;					
			КонецЕсли;			
		КонецЦикла;
		
	ИначеЕсли гТипОбъекта = "ПланСчетов" Тогда
		
		Возврат 0;
		
	КонецЕсли;
	Возврат 1;
КонецФункции

//--------------------------------------------------------------------------------------------------

Процедура ЗаполнитьТаблицуУсловий(Таб, ВидОбъекта)
	ТабУсловия = СоздатьОбъект("ТаблицаЗначений");
	ТабУсловия.НоваяКолонка("ФлВкл");
	ТабУсловия.НоваяКолонка("КолИдентификатор");
	ТабУсловия.НоваяКолонка("КолУсловие");
	ТабУсловия.НоваяКолонка("КолЗначение");	
	ТабУсловия.НоваяКолонка("КолВидСубконто");
	
	КопияТабРеквизитов = СоздатьОбъект("ТаблицаЗначений");
	КопияТабРеквизитов.Загрузить(Таб);	
                                        
	Для СчРекв = 1 По КопияТабРеквизитов.КоличествоСтрок() Цикл
		
		ФлВкл = КопияТабРеквизитов.ПолучитьЗначение(СчРекв, "ФлВкл");
		Если ФлВкл = Пометка_Выключена Тогда Продолжить КонецЕсли;
		Иден				= КопияТабРеквизитов.ПолучитьЗначение(СчРекв, "РеквИдентиф");
		ЗнакУсловия			= КопияТабРеквизитов.ПолучитьЗначение(СчРекв, "ЗнакУсловия");		
		СписЗначенийОтбора	= КопияТабРеквизитов.ПолучитьЗначение(СчРекв, "Значение");
		Тип					= КопияТабРеквизитов.ПолучитьЗначение(СчРекв, "Тип");
		
		Если гТипОбъекта = "Операция" Тогда
			ИдВидаСубконто		= КопияТабРеквизитов.ПолучитьЗначение(СчРекв, "ВидСубконто");
		Иначе
			ИдВидаСубконто		= "";
		КонецЕсли;
		                                     
		Если ПустоеЗначение(гФлБезОткрытияФормы) = 1 Тогда
			КопияСписЗначенийОтбора = СоздатьОбъект("СписокЗначений");
			СписЗначенийОтбора.Выгрузить(КопияСписЗначенийОтбора);
	
			СписЗначенийОтбораВключенных = СоздатьОбъект("СписокЗначений");
			Для Сч = 1 По КопияСписЗначенийОтбора.РазмерСписка() Цикл
			    Если КопияСписЗначенийОтбора.Пометка(Сч) = 1 Тогда
					ЗнИзСтроки = КопияСписЗначенийОтбора.ПолучитьЗначение(Сч);
					СписЗначенийОтбораВключенных.ДобавитьЗначение(ЗнИзСтроки);
			    КонецЕсли;
			КонецЦикла;			
		Иначе
			СписЗначенийОтбора.Выгрузить(СписЗначенийОтбораВключенных);
		КонецЕсли;
		           
		Если СписЗначенийОтбораВключенных.РазмерСписка() = 0 Тогда Продолжить КонецЕсли;

		Если Найти("ИнтСГраницами, ИнтБезГраниц", ЗнакУсловия) > 0 Тогда
			ОбаЗначения = СписЗначенийОтбораВключенных.ПолучитьЗначение(1);
			             
			ПозРазделителя = Найти(ОбаЗначения, " ");
			Если ПозРазделителя = 0 Тогда Продолжить КонецЕсли;
			
			ЗнНижнее	= СокрЛП(Лев(ОбаЗначения, ПозРазделителя));
			ЗнВерхнее	= СокрЛП(Прав(ОбаЗначения, СтрДлина(ОбаЗначения) - ПозРазделителя));
			
			СписЗначенийОтбораВключенных.УдалитьВсе();	СписЗначенийОтбораВключенных.ДобавитьЗначение(ПривестиКТипу(ЗнНижнее, Тип));
			
			ТабУсловия.НоваяСтрока();
			ТабУсловия.ФлВкл			= Пометка_Включена;
			ТабУсловия.КолИдентификатор = Иден;
			ТабУсловия.КолУсловие		= ?(ЗнакУсловия="ИнтСГраницами", ">=", ">");
			ТабУсловия.КолВидСубконто	= ИдВидаСубконто;
			ТабУсловия.КолЗначение		= СоздатьОбъект("СписокЗначений");
			СписЗначенийОтбораВключенных.Выгрузить(ТабУсловия.КолЗначение);
                                     
			СписЗначенийОтбораВключенных.УдалитьВсе();	СписЗначенийОтбораВключенных.ДобавитьЗначение(ПривестиКТипу(ЗнВерхнее, Тип));
			
			ТабУсловия.НоваяСтрока();
			ТабУсловия.ФлВкл			= Пометка_Включена;
			ТабУсловия.КолИдентификатор = Иден;
			ТабУсловия.КолУсловие		= ?(ЗнакУсловия="ИнтСГраницами", "<=", "<");
			ТабУсловия.КолВидСубконто	= ИдВидаСубконто;
			ТабУсловия.КолЗначение		= СоздатьОбъект("СписокЗначений");
			СписЗначенийОтбораВключенных.Выгрузить(ТабУсловия.КолЗначение);			
		Иначе
			ТабУсловия.НоваяСтрока();
			ТабУсловия.ФлВкл			= Пометка_Включена;
			ТабУсловия.КолИдентификатор = Иден;
			ТабУсловия.КолУсловие		= ЗнакУсловия;
			ТабУсловия.КолВидСубконто	= ИдВидаСубконто;
			ТабУсловия.КолЗначение		= СоздатьОбъект("СписокЗначений");
			СписЗначенийОтбораВключенных.Выгрузить(ТабУсловия.КолЗначение);
		КонецЕсли;
		
	КонецЦикла;

	Если (гТипОбъекта = "Операция") Или (гТипОбъекта = "Документ") Тогда
		                                             
		гСписНомеровУдовлетворительныхСтрок	=	СоздатьОбъект("СписокЗначений");
		
		Если (гФлБезОткрытияФормы = 1) Или (гЗапоминатьНомераСтрок = 1) Тогда
			Попытка
			    гТабВыборка.ПолучитьПараметрыКолонки("НомераСтрок");
			Исключение
				гТабВыборка.НоваяКолонка("НомераСтрок");
				гТабВыборка.ВидимостьКолонки("НомераСтрок", 0);
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗапрос() = 1 Тогда
		Запрос(ВидОбъекта);
	Иначе
		СделатьВыборкуПеребором(ВидОбъекта);
	КонецЕсли;
	
КонецПроцедуры

//**************************************************************************************************
          
//--------------------------------------------------------------------------------------------------

Процедура Выбрать()
	СписВозврата	= СоздатьОбъект("СписокЗначений");
	гСписОбъектов.УдалитьВсе();
	СписВозврата.ДобавитьЗначение(гТипОбъекта,			"Тип");
	СписВозврата.ДобавитьЗначение(гВидОбъекта,			"Вид");
	СписВозврата.ДобавитьЗначение(гИмяДаннойОбработки,	"ИмяВызвавшейФормы");
	СписВозврата.ДобавитьЗначение(гСписОбъектов,		"Объекты");

	Если ПустоеЗначение(гНепоказРеквизиты) = 0 Тогда
		СписВрем	=	СоздатьОбъект("СписокЗначений");
		гНепоказРеквизиты.Выгрузить(СписВрем);
		СписВозврата.ДобавитьЗначение(СписВрем, "НепоказываемыеРеквизиты");
	КонецЕсли;

	ИмяФормыДействия = "";
	Если ФормСписДействий.РазмерСписка() > 0 Тогда
		ИмяДействия			= "";
		ИмяФормыДействия	= ФормСписДействий.ПолучитьЗначение(ФормСписДействий.ТекущаяСтрока(), ИмяДействия);
		СписВозврата.ДобавитьЗначение(ИмяДействия, "ВыбранноеДействие");
	КонецЕсли;
	
	Если ПустоеЗначение(гБуфер) = 0 Тогда
		СписВозврата.ДобавитьЗначение(гБуфер, "Буфер");
	КонецЕсли;
	
	Попытка
	    гТабВыборка.ПолучитьПараметрыКолонки("НомераСтрок");
	Исключение
		гТабВыборка.НоваяКолонка("НомераСтрок", "Строка");
		гТабВыборка.ВидимостьКолонки("НомераСтрок", 0);
	КонецПопытки;
	
	гТабВыборка.ВыбратьСтроки();
	Пока гТабВыборка.ПолучитьСтроку() = 1 Цикл
		Если гТабВыборка.Пометка = Пометка_Включена Тогда
			
			Если	(гТипОбъекта = "Операция") Или (гТипОбъекта = "Документ") Тогда
				Если (гФлБезОткрытияФормы = 1) Или (гЗапоминатьНомераСтрок = 1) Тогда
			    	гСписОбъектов.ДобавитьЗначение(гТабВыборка.Объект, гТабВыборка.НомераСтрок);
					гСписОбъектов.Пометка(гСписОбъектов.РазмерСписка(), 1);
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			    
			Добавок	=	"";
			Если гТипОбъекта = "Справочник" Тогда
				Если СокрЛП(гОбъектМД.Владелец) <> "Метаданные" Тогда
					Добавок	=	" (" + гТабВыборка.Объект.Владелец + ")";
				КонецЕсли;
			КонецЕсли;
			
			гСписОбъектов.ДобавитьЗначение(гТабВыборка.Объект, СокрЛП(гТабВыборка.Объект) + Добавок);
			гСписОбъектов.Пометка(гСписОбъектов.РазмерСписка(), 1);
		КонецЕсли;		
	КонецЦикла;
	
	Если		ПустоеЗначение(ИмяФормыДействия) = 0 Тогда
		Если Найти(ИмяФормыДействия, ".ert") > 0 Тогда
			ОткрытьФорму("Отчет", СписВозврата, ИмяФормыДействия);
		Иначе
			ОткрытьФорму(ИмяФормыДействия, СписВозврата);
		КонецЕсли;		
	ИначеЕсли	ПустоеЗначение(гИмяОткрывшейФормы) = 0 Тогда
		Если Найти(НРег(гИмяОткрывшейФормы), ".ert") > 0 Тогда
			ОткрытьФорму("Отчет", СписВозврата, гИмяОткрывшейФормы);
		Иначе
			ОткрытьФорму(гИмяОткрывшейФормы, СписВозврата);
		КонецЕсли;
		Форма.Закрыть();
	Иначе
		Если ПустоеЗначение(гФлБезОткрытияФормы) = 1 Тогда Форма.Закрыть() КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Функция ФильтроватьПоРеквизитам()
	ТабРеквизиты.ВыбратьСтроки();
	Пока ТабРеквизиты.ПолучитьСтроку() = 1 Цикл
		Если ТабРеквизиты.ФлВкл = Пометка_Включена Тогда
			Возврат 1;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции

//-------------------------------------------------------------------------------------------------- 

Функция ФильтроватьПоПодчиненному()
	Если гТипОбъекта <> "Справочник" Тогда Возврат(0) КонецЕсли;
	ТабРеквизиты_Подч.ВыбратьСтроки();
	Пока ТабРеквизиты_Подч.ПолучитьСтроку() = 1 Цикл
		Если ТабРеквизиты_Подч.ФлВкл = Пометка_Включена Тогда
			Возврат 1;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура УдалитьСтрокиТаблицы(Таб)
    НомерСтр = "";
    Пока 1 = 1 Цикл
        Если Таб.НайтиЗначение(1, НомерСтр, "Удалить") = 1 Тогда 
    		Таб.УдалитьСтроку(НомерСтр);				    				
    		НомерСтр = "";
        Иначе
    		Прервать;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ПоказатьОбъект(Поз)
	Если		гТекЗакладка = "Отбор" Тогда
		ОткрытьФорму(ФормСписЗначений.ПолучитьЗначение(Поз));    
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		ОткрытьФорму(ФормСписЗначений_Подч.ПолучитьЗначение(Поз));
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ПереместитьСтроку(Режим)
	                    
	ТекСтрока	= гТабВыборка.ТекущаяСтрока();
	ТекКолонка	= гТабВыборка.ТекущаяКолонка();
	     
	Если	Режим = "Сортировать" Тогда
		Если ПустоеЗначение(ТекКолонка) = 1 Тогда
			Предупреждение("Не выбрана колонка по которой производится сортировка!");
			Возврат;
		КонецЕсли;
		                 
		СписНаправлений = СоздатьОбъект("СписокЗначений");
		СписНаправлений.ДобавитьЗначение("+", "По возрастанию");
		СписНаправлений.ДобавитьЗначение("-", "По убыванию");
		
		Направление  = ""; Поз = "";
		Если СписНаправлений.ВыбратьЗначение(Направление, "", Поз, , 1) = 0 Тогда Возврат КонецЕсли;
		
		гТабВыборка.Сортировать(ТекКолонка + Направление);
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ТекСтрока) = 1 Тогда Возврат КонецЕсли;
    	
    Если		Режим = "Вверх" Тогда
        Если ТекСтрока = 1 Тогда
        	гТабВыборка.СдвинутьСтроку(гТабВыборка.КоличествоСтрок() - 1);
			гТабВыборка.ТекущаяСтрока(гТабВыборка.КоличествоСтрок());
        Иначе
        	гТабВыборка.СдвинутьСтроку(-1);
			гТабВыборка.ТекущаяСтрока(ТекСтрока - 1);
        КонецЕсли;
	ИначеЕсли	Режим = "Вниз" Тогда
        Если ТекСтрока = гТабВыборка.КоличествоСтрок() Тогда
        	гТабВыборка.СдвинутьСтроку( - гТабВыборка.КоличествоСтрок() + 1);
			гТабВыборка.ТекущаяСтрока(1);
        Иначе
        	гТабВыборка.СдвинутьСтроку(1);
			гТабВыборка.ТекущаяСтрока(ТекСтрока + 1);
        КонецЕсли;
    КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ВклПометки(Пометка)
	Если		гТекЗакладка = "Отбор" Тогда
		Для Сч = 1 По ФормСписЗначений.РазмерСписка() Цикл
		    ФормСписЗначений.Пометка(Сч, Пометка);
		КонецЦикла;
		ФормСписЗначений.Выгрузить(ТабРеквизиты.Значение);
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Для Сч = 1 По ФормСписЗначений_Подч.РазмерСписка() Цикл
		    ФормСписЗначений_Подч.Пометка(Сч, Пометка);
		КонецЦикла;
		ФормСписЗначений_Подч.Выгрузить(ТабРеквизиты_Подч.Значение);
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура УдалитьЗначениеВСписке(Поз)
	
	Если		гТекЗакладка = "Отбор" Тогда
		Спис	= ФормСписЗначений;
		Таб		= ТабРеквизиты;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Спис	= ФормСписЗначений_Подч;
		Таб		= ТабРеквизиты_Подч;
	КонецЕсли;
	                                                       
	Если Поз = "Все" Тогда
		Спис.УдалитьВсе();
	Иначе
		Если Поз = 0 Тогда Возврат КонецЕсли;

		УдПоз = Спис.ТекущаяСтрока();
		Спис.УдалитьЗначение(Поз);
		Если Спис.РазмерСписка() < УдПоз Тогда 
			Спис.ТекущаяСтрока(УдПоз - 1);
		Иначе 
			Спис.ТекущаяСтрока(УдПоз);
		КонецЕсли;
	КонецЕсли;
	                                  
	Спис.Выгрузить(Таб.Значение);
	
	Если Спис.РазмерСписка() = 0 Тогда
		Таб.ФлВкл = Пометка_Выключена;
	КонецЕсли;
КонецПроцедуры

//------------------------------------------------------------------------------------------------

Процедура ОбработкаПодбора(ЗначПод)
	
	Если		гТекЗакладка = "Главная" Тогда
		
		НомСтр = "";
		Если гТабВыборка.НайтиЗначение(ЗначПод, НомСтр, "Объект") = 0 Тогда			
			ДобавитьОбъект(ЗначПод);			
		Иначе 
			Сообщить(СокрЛП(ЗначПод) + " - это значение уже выбрано!");
		КонецЕсли;			
		
	ИначеЕсли	гТекЗакладка = "Отбор" Тогда
		
		Если гФлВыбиратьТолькоГруппы = 1 Тогда
			Если (ЗначПод.ЭтоГруппа() = 0) И (ПустоеЗначение(ЗначПод) = 0) Тогда
				Предупреждение("Это не группа!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ФормСписЗначений.Принадлежит(ЗначПод) = 0 Тогда 
			ФормСписЗначений.ДобавитьЗначение(ЗначПод);
			ФормСписЗначений.ТекущаяСтрока(ФормСписЗначений.РазмерСписка());
			ФормСписЗначений.Пометка(ФормСписЗначений.РазмерСписка(), 1);
			
			ФормСписЗначений.Выгрузить(ТабРеквизиты.Значение);
			ТабРеквизиты.ФлВкл = Пометка_Включена;
		Иначе 
			Сообщить(СокрЛП(ЗначПод) + " - это значение уже выбрано!");
		КонецЕсли;
		                                  
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда

		Если гФлВыбиратьТолькоГруппы = 1 Тогда
			Если (ЗначПод.ЭтоГруппа() = 0) И (ПустоеЗначение(ЗначПод) = 0) Тогда
				Предупреждение("Это не группа!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ФормСписЗначений_Подч.Принадлежит(ЗначПод) = 0 Тогда 
			ФормСписЗначений_Подч.ДобавитьЗначение(ЗначПод);
			ФормСписЗначений_Подч.ТекущаяСтрока(ФормСписЗначений_Подч.РазмерСписка());
			ФормСписЗначений_Подч.Пометка(ФормСписЗначений_Подч.РазмерСписка(), 1);
			
			ФормСписЗначений_Подч.Выгрузить(ТабРеквизиты_Подч.Значение);
			ТабРеквизиты_Подч.ФлВкл = Пометка_Включена;
		Иначе 
			Сообщить(СокрЛП(ЗначПод) + " - это значение уже выбрано!");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
                  
//--------------------------------------------------------------------------------------------------

Процедура ПриВыбореЗнака()
	Если		гТекЗакладка = "Отбор" Тогда
		Условие			= ФормВыбУсловие.ПолучитьЗначение(ФормВыбУсловие.ТекущаяСтрока());
		Спис			= ФормСписЗначений;
		ФормУсл			= ФормВыбУсловие;
		Таб				= ТабРеквизиты;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Условие			= ФормВыбУсловие_Подч.ПолучитьЗначение(ФормВыбУсловие_Подч.ТекущаяСтрока());
		Спис			= ФормСписЗначений_Подч;
		ФормУсл			= ФормВыбУсловие_Подч;
		Таб				= ТабРеквизиты_Подч;
	КонецЕсли;
	
	Если Найти("ИнтСГраницами, ИнтБезГраниц, >=, <=", Условие) > 0 Тогда
		Если Спис.РазмерСписка() > 0 Тогда
			ФормУсл.ТекущаяСтрока(ФормУсл.НайтиЗначение(Таб.ЗнакУсловия));
			Предупреждение("Для данного условия не имеет смысла выбор нескольких 
							|значений. Необходимо очистить список перед выбором!");
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	                                                                                          
	Если (Найти("ИнтСГраницами, ИнтБезГраниц, >=, <=", Таб.ЗнакУсловия) > 0) И (Таб.ЗнакУсловия <> Условие) Тогда
		Спис.УдалитьВсе();
	КонецЕсли;
	
    Таб.ЗнакУсловия = ФормУсл.ПолучитьЗначение(ФормУсл.ТекущаяСтрока());
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ПриВыбореЗначенияВСписке()
	Если		гТекЗакладка = "Отбор" Тогда
		ТипЗнач			= гТипЗначения;
		ВидЗнач			= гВидЗначения;
		ДлинаЗнач		= гДлинаЗначения;
		ТочностьЗнач	= гТочностьЗначения;
		Условие			= ФормВыбУсловие.ПолучитьЗначение(ФормВыбУсловие.ТекущаяСтрока());
		Спис			= ФормСписЗначений;
		Таб				= ТабРеквизиты;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		ТипЗнач			= гТипЗначения_Подч;
		ВидЗнач			= гВидЗначения_Подч;
		ДлинаЗнач		= гДлинаЗначения_Подч;
		ТочностьЗнач	= гТочностьЗначения_Подч;
		Условие			= ФормВыбУсловие_Подч.ПолучитьЗначение(ФормВыбУсловие_Подч.ТекущаяСтрока());
		Спис			= ФормСписЗначений_Подч;
		Таб				= ТабРеквизиты_Подч;
	КонецЕсли;
	                                                 
	ТекСтрока	= Спис.ТекущаяСтрока();
	         
	Если ПустоеЗначение(ТекСтрока) = 1 Тогда Возврат КонецЕсли;
	
	Зн			= Спис.ПолучитьЗначение(ТекСтрока);
	
	Если Найти("Строка,Число,Дата", ТипЗнач) > 0 Тогда
		
		Если Найти("ИнтСГраницами, ИнтБезГраниц", Условие) > 0 Тогда
			ПозРазделителя = Найти(Зн, " ");
			Если ПозРазделителя = 0 Тогда Возврат КонецЕсли;
			
			ЗнНижнее	= СокрЛП(Лев(Зн, ПозРазделителя));
			ЗнВерхнее	= СокрЛП(Прав(Зн, СтрДлина(Зн) - ПозРазделителя));
			
			Если ТипЗнач = "Число" Тогда
				Если ВвестиЗначение(ЗнНижнее,	"Введите нижнюю границу интервала",		ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 0 Тогда Возврат КонецЕсли;
				Если ВвестиЗначение(ЗнВерхнее,	"Введите верхнюю границу интервала",	ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 0 Тогда Возврат КонецЕсли;
				СтрПредставление = Строка(ЗнНижнее) + ?(Условие="ИнтСГраницами", " <= Значение <= ", " < Значение < ") + Строка(ЗнВерхнее);
			ИначеЕсли ТипЗнач = "Дата" Тогда
				ВвестиПериод(ЗнНижнее, ЗнВерхнее);
				СтрПредставление = ПериодСтр(ЗнНижнее, ЗнВерхнее);
			КонецЕсли;
			
			Если ЗнНижнее >= ЗнВерхнее Тогда
				Предупреждение("Интервал введен неправильно! Попробуйте еще раз.");
				Возврат;
			КонецЕсли;
			                                
			Зн = СокрЛП(ЗнНижнее) + " " + СокрЛП(ЗнВерхнее);
			Спис.УстановитьЗначение(ТекСтрока, Зн, СтрПредставление);
		Иначе
			НовоеЗн = Зн;
			Если ВвестиЗначение(НовоеЗн, "Введите значение", ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 1 Тогда
				Если НовоеЗн = Зн Тогда Возврат КонецЕсли;
			Иначе Возврат;
			КонецЕсли;
			                
			Спис.УдалитьЗначение(ТекСтрока);
			
			Если Спис.Принадлежит(НовоеЗн) = 0 Тогда
				Зн					= НовоеЗн;
			Иначе 
				Сообщить(СокрЛП(НовоеЗн) + " - это значение уже выбрано!");
			КонецЕсли;
			Спис.ВставитьЗначение(ТекСтрока, Зн);
		КонецЕсли;
		
		Спис.ТекущаяСтрока(ТекСтрока);
		Спис.Пометка(ТекСтрока, 1);
		
		Спис.Выгрузить(Таб.Значение);
		Таб.ФлВкл = Пометка_Включена;
	Иначе
		ПоказатьОбъект(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ПриВыбореОбъекта()
	ТекСтр	= гТабВыборка.ТекущаяСтрока();
	ТекКол	= СокрЛП(гТабВыборка.ТекущаяКолонка());
	
	Если ТекСтр = 0 Тогда Возврат КонецЕсли;
	         
	гТабВыборка.ПолучитьСтрокуПоНомеру(ТекСтр);
	
	Если ТекКол = "Пометка" Тогда
		
		Если гТабВыборка.Пометка = Пометка_Включена Тогда
			гТабВыборка.Пометка = Пометка_Выключена;
		Иначе
			гТабВыборка.Пометка = Пометка_Включена;
		КонецЕсли;	
		
	Иначе		
		Если Форма.РежимВыбора() > 0 Тогда
			Форма.ВыполнитьВыбор(гТабВыборка.ПолучитьЗначение(ТекСтр, "Объект"));
		Иначе
			Если ПустоеЗначение(гКолонкиЗафиксированы) = 1 Тогда
				ОткрытьФорму(гТабВыборка.ПолучитьЗначение(ТекСтр, "Объект"));
			Иначе
				Если гТабВыборка.Пометка = Пометка_Включена Тогда
					гТабВыборка.Пометка = Пометка_Выключена;
				Иначе
					гТабВыборка.Пометка = Пометка_Включена;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ВыбратьПоФильтру()
	Если		гТекЗакладка = "Отбор" Тогда
		ТипЗнач			= гТипЗначения;
		ВидЗнач			= гВидЗначения;
		Спис			= ФормСписЗначений;
		Таб				= ТабРеквизиты;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		ТипЗнач			= гТипЗначения_Подч;
		ВидЗнач			= гВидЗначения_Подч;
		Спис			= ФормСписЗначений_Подч;
		Таб				= ТабРеквизиты_Подч;
	КонецЕсли;	
		
	Если	ТипЗнач = "Неопределенный" Тогда
		сзТипов = СоздатьОбъект("СписокЗначений");
		сзТипов.ДобавитьЗначение("ВидСубконто", "Вид субконто");
		сзТипов.ДобавитьЗначение("Справочник");
		сзТипов.ДобавитьЗначение("Документ");
		сзТипов.ДобавитьЗначение("Операция");
		Поз		= ПолучитьПустоеЗначение();
		ТипЗнач = "";
		ВидЗнач = "";
		Если сзТипов.ВыбратьЗначение(ТипЗнач, "Выберите тип объекта", Поз, , 0) = 0 Тогда
			Возврат;
		КонецЕсли;		
	КонецЕсли;
		
	Если ТипЗнач = "ВидСубконто" Тогда
		ВыбВидСубконто = ПолучитьПустоеЗначение(); 
		Если ВвестиВидСубконто(ВыбВидСубконто,"Выберите вид субконто") = 0 Тогда Возврат КонецЕсли;
		ТипЗнач = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Тип;
		ВидЗнач = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Вид;
		Если (ТипЗнач <> "Справочник") И (ТипЗнач <> "Документ") Тогда
			Предупреждение("По данному виду субконто не имеет смысла делать отбор значений!");
			Возврат;
		КонецЕсли;
	ИначеЕсли (ПустоеЗначение(ВидЗнач) = 1) И (ТипЗнач <> "Операция") Тогда
		СписВидов = гСписВидов.Получить(ТипЗнач);
		Если СписВидов.ВыбратьЗначение(ВидЗнач, "Выберите вид объекта", Поз, , 0) = 0 Тогда Возврат КонецЕсли;
	КонецЕсли;

	СписокПараметровВызова = СоздатьОбъект("СписокЗначений");
	СписокПараметровВызова.ДобавитьЗначение(ТипЗнач,					"Тип");
	СписокПараметровВызова.ДобавитьЗначение(ВидЗнач,					"Вид");
	СписокПараметровВызова.ДобавитьЗначение(Спис,						"Объекты");
	СписокПараметровВызова.ДобавитьЗначение(гИмяДаннойОбработки,		"ИмяВызвавшейФормы");

	Если Найти(НРег(гИмяДаннойОбработки), ".ert") > 0 Тогда
		ОткрытьФорму("Отчет#", СписокПараметровВызова, гИмяДаннойОбработки);
	Иначе
		ОткрытьФорму(гИмяДаннойОбработки + "#", СписокПараметровВызова);
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ВыбратьЗначения(Реж)
	Перем ПолнИден;
	Перем Фрм;

	Если		гТекЗакладка = "Отбор" Тогда
		ТипЗнач			= гТипЗначения;
		ВидЗнач			= гВидЗначения;
		ДлинаЗнач		= гДлинаЗначения;
		ТочностьЗнач	= гТочностьЗначения;
		Условие			= ФормВыбУсловие.ПолучитьЗначение(ФормВыбУсловие.ТекущаяСтрока());
		Спис			= ФормСписЗначений;
		Таб				= ТабРеквизиты;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		ТипЗнач			= гТипЗначения_Подч;
		ВидЗнач			= гВидЗначения_Подч;
		ДлинаЗнач		= гДлинаЗначения_Подч;
		ТочностьЗнач	= гТочностьЗначения_Подч;
		Условие			= ФормВыбУсловие_Подч.ПолучитьЗначение(ФормВыбУсловие_Подч.ТекущаяСтрока());
		Спис			= ФормСписЗначений_Подч;
		Таб				= ТабРеквизиты_Подч;
	КонецЕсли;
	
	Если Найти("ИнтСГраницами, ИнтБезГраниц, >=, <=", Условие) > 0 Тогда
		Если Спис.РазмерСписка() > 0 Тогда
			Предупреждение("Для данного условия не имеет смысла выбор нескольких 
							|значений. Необходимо очистить список перед выбором!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФлТипБылНеопределен = 0;
	ФлВидБылНеопределен = 0;
                              
	Если Реж = "Пусто" Тогда		                                                    
		ПолнИден = ТипЗнач + ?(СокрЛП(ВидЗнач) = "", "", ".") + ВидЗнач;
		ОбработкаПодбора(ПолучитьПустоеЗначение(ПолнИден));
		Возврат;
	КонецЕсли;
	
	Если (гТипОбъекта = "Операция") И (гРекОбъекта = "Документ") Тогда
		Зн  = ""; Поз = ""; Пред = "";
		Если гСписБухДокументов.ВыбратьЗначение(Зн, "", Поз, , 0) = 1 Тогда
			гСписБухДокументов.ПолучитьЗначение(Поз, Пред);
			Если ФормСписЗначений.Принадлежит(Зн) = 0 Тогда 
				ФормСписЗначений.ДобавитьЗначение(Зн, Пред);
				ФормСписЗначений.ТекущаяСтрока(ФормСписЗначений.РазмерСписка());
				ФормСписЗначений.Пометка(ФормСписЗначений.РазмерСписка(), 1);
				
				ФормСписЗначений.Выгрузить(ТабРеквизиты.Значение);
				ТабРеквизиты.ФлВкл = Пометка_Включена;
			Иначе 
				Сообщить(СокрЛП(Зн) + " - это значение уже выбрано!");
			КонецЕсли;
			Если Реж = 1 Тогда
				ВыбратьЗначения(Реж);
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;

	
	Если ТипЗнач = "Неопределенный" Тогда
		ФлТипБылНеопределен = 1;
		ФлВидБылНеопределен = 1;
	
		сзТипов = СоздатьОбъект("СписокЗначений");
		сзТипов.ДобавитьЗначение("ВидСубконто", "Значение субконто");
		сзТипов.ДобавитьЗначение("Справочник");
		сзТипов.ДобавитьЗначение("Документ");
		сзТипов.ДобавитьЗначение("Перечисление");
		сзТипов.ДобавитьЗначение("Счет");
		сзТипов.ДобавитьЗначение("Число");
		сзТипов.ДобавитьЗначение("Строка");
		сзТипов.ДобавитьЗначение("Дата");
		Поз = ПолучитьПустоеЗначение();
		ТипЗнач = "";
		ВидЗнач = "";
		Если сзТипов.ВыбратьЗначение(ТипЗнач, "Выберите тип объекта", Поз, , 0) = 0 Тогда
			Если ФлТипБылНеопределен = 1 Тогда
				ТипЗнач = "Неопределенный";
			КонецЕсли;
			
			Если ФлВидБылНеопределен = 1 Тогда 
				ВидЗнач = "";
			КонецЕсли;				
			Возврат;
		КонецЕсли;
		Если ТипЗнач = "Число" Тогда
			ДлинаЗначен = "";
			Если ВвестиЗначение(ДлинаЗначен,"Введите длину числа", "Число", 2, 0) = 0 Тогда
				Возврат;
			КонецЕсли;
			ТочностьЗначен = "";
			Если ВвестиЗначение(ТочностьЗначен,"Введите точность числа", "Число", 1, 0) = 0 Тогда
				Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнач = "Строка" Тогда
			
		ИначеЕсли ТипЗнач = "Перечисление" Тогда
			Поз = ПолучитьПустоеЗначение();
			Если гСписПеречислений.ВыбратьЗначение(ВидЗнач, "Выберите вид перечисления", Поз, , 0) = 0 Тогда
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				КонецЕсли;					
				Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнач = "ВидСубконто" Тогда
			ВыбВидСубконто = ПолучитьПустоеЗначение(); 
			Если ВвестиВидСубконто(ВыбВидСубконто,"Выберите вид субконто") = 0 Тогда
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				КонецЕсли;					
				Возврат;
			КонецЕсли;		
			ТипЗнач = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Тип;
			ВидЗнач = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Вид;
		КонецЕсли;
		
		Если ТипЗнач = "ПланСчетов" Тогда
			ВыбЗначение = ПланыСчетов.ЗначениеПоНомеру(1);
		КонецЕсли;
					
	КонецЕсли; // Неопределенный
	
	Если ТипЗнач = "ВидСубконто" Тогда
		ВыбВидСубконто = ПолучитьПустоеЗначение(); 
		Если ВвестиВидСубконто(ВыбВидСубконто,"Выберите вид субконто") = 0 Тогда
			Возврат;
		КонецЕсли;
		ТипЗнач = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Тип;
		ВидЗнач = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Вид;
		гВидСубконто = ВыбВидСубконто.Идентификатор();
	КонецЕсли;

	Если ТипЗнач = "Счет" Тогда 
		ТипЗнач = "ПланСчетов";
	КонецЕсли;	
	
	ПолнИден = ТипЗнач + ?(СокрЛП(ВидЗнач) = "", "", ".") + ВидЗнач;
	
	Если ТипЗнач = "Перечисление" Тогда
		
		Если Реж = 0 Тогда
			Зн = "";
			Если ВвестиЗначение(Зн, "Выберите значение", ПолнИден) = 1 Тогда
				ОбработкаПодбора(Зн);
			КонецЕсли;
		Иначе 
			Если ВвестиЗначение(Зн, "Выберите значение", ПолнИден) = 1 Тогда
				ОбработкаПодбора(Зн);
			Иначе
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				ИначеЕсли ФлТипБылНеопределен = 2 Тогда
					ТипЗнач = "ВидСубконто";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				ИначеЕсли ФлВидБылНеопределен = 2 Тогда
					ВидЗнач = "";
				КонецЕсли;
				Возврат;
			КонецЕсли;				
			ВыбратьЗначения(Реж);
		КонецЕсли;		
		
	ИначеЕсли  ТипЗнач = "Справочник" Тогда
		    
		Если СокрЛП(ВидЗнач) = "" Тогда
			ФлВидБылНеопределен = 1;
			Поз = ПолучитьПустоеЗначение();
			Если гСписСправочников.ВыбратьЗначение(ВидЗнач, "Выберите вид справочника", Поз, , 0) = 0 Тогда
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				ИначеЕсли ФлТипБылНеопределен = 2 Тогда
					ТипЗнач = "ВидСубконто";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				ИначеЕсли ФлВидБылНеопределен = 2 Тогда
					ВидЗнач = "";
				КонецЕсли;
				Возврат;
			КонецЕсли;
			ПолнИден = ТипЗнач + ?(СокрЛП(ВидЗнач) = "", "", ".") + ВидЗнач;
		КонецЕсли;
        
		Если СокрЛП(Метаданные.Справочник(ВидЗнач).Владелец) <> "Метаданные" Тогда
			Зн = "";
			Если ВвестиЗначение(Зн, "", Метаданные.Справочник(ВидЗнач).Владелец.ПолныйИдентификатор()) = 0 Тогда
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				ИначеЕсли ФлТипБылНеопределен = 2 Тогда
					ТипЗнач = "ВидСубконто";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				ИначеЕсли ФлВидБылНеопределен = 2 Тогда
					ВидЗнач = "";
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецЕсли;		
        
		Если Спис.РазмерСписка() > 0 Тогда
			Тек = Спис.ПолучитьЗначение(Спис.ТекущаяСтрока());
		КонецЕсли;
		
		ОткрытьПодбор(ПолнИден, ,Фрм, Реж, Тек);
		Если СокрЛП(Метаданные.Справочник(ВидЗнач).Владелец) <> "Метаданные" Тогда
			Фрм.ИспользоватьВладельца(Зн);
		КонецЕсли;
		
		Если ФлВидБылНеопределен = 1 Тогда 
			ВидЗнач = "";
		КонецЕсли;

		Фрм.ВыборГруппы(1);
		
	ИначеЕсли  ТипЗнач = "Документ" Тогда
		
		ФлВидБылНеопределен = 0;
		Если СокрЛП(ВидЗнач) = "" Тогда
			ФлВидБылНеопределен = 1;
			Поз = ПолучитьПустоеЗначение();
			Если гСписДокументов.ВыбратьЗначение(ВидЗнач, "Выберите вид документа", Поз, , 0) = 0 Тогда
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				ИначеЕсли ФлТипБылНеопределен = 2 Тогда
					ТипЗнач = "ВидСубконто";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				ИначеЕсли ФлВидБылНеопределен = 2 Тогда
					ВидЗнач = "";
				КонецЕсли;
				Возврат;
			КонецЕсли;
			ПолнИден = ТипЗнач + ?(СокрЛП(ВидЗнач) = "", "", ".") + ВидЗнач;
		КонецЕсли;
		
		Если Спис.РазмерСписка() > 0 Тогда
			Тек = Спис.ПолучитьЗначение(Спис.ТекущаяСтрока());
		КонецЕсли;
		
		ОткрытьПодбор(ПолнИден, ,Фрм, Реж, Тек);

		Если ФлВидБылНеопределен = 1 Тогда 
			ВидЗнач = "";
		КонецЕсли;
		
		Фрм.УстановитьИнтервал(ФормДатаНач, ФормДатаКон, 1);
		
	ИначеЕсли (ТипЗнач = "Число") Или (ТипЗнач = "Строка") Или (ТипЗнач = "Дата") Тогда
		    
		Если Найти("ИнтСГраницами, ИнтБезГраниц", Условие) > 0 Тогда
        	Если Спис.РазмерСписка() > 0 Тогда
				Предупреждение("Для данного условия не имеет смысла выбор нескольких 
								|значений. Необходимо очистить список перед выбором!");
        	Иначе                   
                ЗнНижнее	= ПолучитьПустоеЗначение(ТипЗнач);
				ЗнВерхнее	= ПолучитьПустоеЗначение(ТипЗнач);
				
				Если ТипЗнач = "Число" Тогда
					Если ВвестиЗначение(ЗнНижнее,	"Введите нижнюю границу интервала",		ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 0 Тогда Возврат КонецЕсли;
					Если ВвестиЗначение(ЗнВерхнее,	"Введите верхнюю границу интервала",	ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 0 Тогда Возврат КонецЕсли;
					ПредИнтервала = Строка(ЗнНижнее) + ?(Условие="ИнтСГраницами", " <= Значение <= ", " < Значение < ") + Строка(ЗнВерхнее);
				ИначеЕсли ТипЗнач = "Дата" Тогда
					ВвестиПериод(ЗнНижнее, ЗнВерхнее);
					ПредИнтервала = ПериодСтр(ЗнНижнее, ЗнВерхнее);
				КонецЕсли;
				
				Если ЗнНижнее >= ЗнВерхнее Тогда
					Предупреждение("Интервал введен неправильно! Попробуйте еще раз.");
					Возврат;
				КонецЕсли;
				                                
				Зн = СокрЛП(ЗнНижнее) + " " + СокрЛП(ЗнВерхнее);
				
				Спис.ДобавитьЗначение(Зн, ПредИнтервала);
				Спис.ТекущаяСтрока(Спис.РазмерСписка());
				Спис.Пометка(Спис.РазмерСписка(), 1);
				
				Спис.Выгрузить(Таб.Значение);
				Таб.ФлВкл = Пометка_Включена;
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		
		Если Реж = 0 Тогда
			Зн = "";
			Если ВвестиЗначение(Зн, "Введите значение", ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 1 Тогда
				ОбработкаПодбора(Зн);
			КонецЕсли;
		Иначе 
			Если ВвестиЗначение(Зн, "Введите значение", ТипЗнач, ДлинаЗнач, ТочностьЗнач) = 1 Тогда
				ОбработкаПодбора(Зн);
			Иначе
				Если ФлТипБылНеопределен = 1 Тогда 
					ТипЗнач = "Неопределенный";
				ИначеЕсли ФлТипБылНеопределен = 2 Тогда
					ТипЗнач = "ВидСубконто";
				КонецЕсли;
				
				Если ФлВидБылНеопределен = 1 Тогда 
					ВидЗнач = "";
				ИначеЕсли ФлВидБылНеопределен = 2 Тогда
					ВидЗнач = "";
				КонецЕсли;
				Возврат;
			КонецЕсли;
			
			Если (Найти(">=, <=", Условие) > 0) И (Спис.РазмерСписка() > 0) Тогда
				Возврат;
			Иначе
				ВыбратьЗначения(Реж);
			КонецЕсли;
		КонецЕсли; 
		
	Иначе 
		Если Спис.РазмерСписка() > 0 Тогда
			Тек = Спис.ПолучитьЗначение(Спис.ТекущаяСтрока());
		КонецЕсли;
		
		Если ПолнИден = "Операция" Тогда
			ОткрытьПодбор("ЖурналОпераций", ,Фрм, Реж, Тек);
		Иначе
			ОткрытьПодбор(ПолнИден, ,Фрм, Реж, Тек);
		КонецЕсли;		
	КонецЕсли;	     

	Если ФлТипБылНеопределен = 1 Тогда 
		ТипЗнач = "Неопределенный";
	ИначеЕсли ФлТипБылНеопределен = 2 Тогда
		ТипЗнач = "ВидСубконто";
	КонецЕсли;
	
	Если ФлВидБылНеопределен = 1 Тогда 
		ВидЗнач = "";
	ИначеЕсли ФлВидБылНеопределен = 2 Тогда
		ВидЗнач = "";
	КонецЕсли;
	
КонецПроцедуры
           
//--------------------------------------------------------------------------------------------------

Процедура ВыбратьОбъекты(Реж)
	Перем Фрм;
	ПолнИден = гТипОбъекта + ?(СокрЛП(гВидОбъекта) = "", "", ".") + гВидОбъекта;
                                   
	гСписНомеровУдовлетворительныхСтрок	=	СоздатьОбъект("СписокЗначений");
	
	Если гТипОбъекта = "Справочник" Тогда
		Если ПустоеЗначение(гВладелецСправочника) = 0 Тогда
			Зн	= гВладелецСправочника.ТекущийЭлемент();
		Иначе
			Если СокрЛП(гОбъектМД.Владелец) <> "Метаданные" Тогда
				Зн = "";
				Если ВвестиЗначение(Зн, "", гОбъектМД.Владелец.ПолныйИдентификатор()) = 0 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
        
	гСписОтмеченныхДопКолонок.УдалитьВсе();
	Для СчДопКолонок = 1 По гСписДопКолонок.РазмерСписка() Цикл
	    Если гСписДопКолонок.Пометка(СчДопКолонок) = 0 Тогда Продолжить КонецЕсли;
		гСписОтмеченныхДопКолонок.ДобавитьЗначение(гСписДопКолонок.ПолучитьЗначение(СчДопКолонок));
	КонецЦикла;
	
	Тек = "";
	Если гТабВыборка.ТекущаяСтрока() > 0 Тогда
		Тек = гТабВыборка.ПолучитьЗначение(гТабВыборка.ТекущаяСтрока(), "Объект");
	КонецЕсли;

	Если гТипОбъекта = "Операция" Тогда
		//Если ПустоеЗначение(Тек) = 0 Тогда		
		//	Опер = СоздатьОбъект("Операция");
		//	Если Опер.НайтиОперацию(Тек) = 1 Тогда Тек = Опер КонецЕсли;
		//КонецЕсли;				// это почему то не работает ?!
		ОткрытьПодбор("ЖурналОпераций", ,Фрм, 1, Тек);
	Иначе
		ОткрытьПодбор(ПолнИден, ,Фрм, Реж, Тек);
	КонецЕсли;
	
	Если гТипОбъекта = "Справочник" Тогда
		Если СокрЛП(гОбъектМД.Владелец) <> "Метаданные" Тогда
			Фрм.ИспользоватьВладельца(Зн);
		КонецЕсли;
	КонецЕсли;
	
	Попытка Фрм.ВыборГруппы(1 - Число(гБезГрупп)) Исключение КонецПопытки;
КонецПроцедуры
                  
//--------------------------------------------------------------------------------------------------

Процедура УдалитьОбъект(Реж="")
    Если Реж = "Все" Тогда
    	гТабВыборка.УдалитьСтроки();
		Возврат;
	Иначе
		ТекСтр = гТабВыборка.ТекущаяСтрока();
		Если ТекСтр = 0 Тогда Возврат КонецЕсли;
		гТабВыборка.УдалитьСтроку(гТабВыборка.ТекущаяСтрока());
		гТабВыборка.ТекущаяСтрока(?(ТекСтр <= гТабВыборка.КоличествоСтрок(), ТекСтр, гТабВыборка.КоличествоСтрок()));
    КонецЕсли;
КонецПроцедуры


//--------------------------------------------------------------------------------------------------

Процедура ВклОбъекты(Режим)
	
	Если		гТекЗакладка = "Главная" Тогда
		Таб			= гТабВыборка;
		ИдРеквизита = "Пометка";
	ИначеЕсли	гТекЗакладка = "Отбор" Тогда
		Таб			= ТабРеквизиты;
		ИдРеквизита = "ФлВкл";
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Таб			= ТабРеквизиты_Подч;
		ИдРеквизита = "ФлВкл";
	КонецЕсли;
	
    Таб.ВыбратьСтроки();
    Пока Таб.ПолучитьСтроку() = 1 Цикл
    	Если Режим = "Инвертировать" Тогда
    		Таб.Пометка = ?(Таб.Пометка = Пометка_Включена, Пометка_Выключена, Пометка_Включена);
		Иначе
			Таб.УстановитьЗначение(Таб.НомерСтроки, ИдРеквизита, Режим);
    	КонецЕсли;
    КонецЦикла;
КонецПроцедуры
                               
//--------------------------------------------------------------------------------------------------

Процедура ФормФлВключатьГруппы()
    Если ФормФлВключатьГруппы = 0 Тогда
    	гБезГрупп	=	1;
    Иначе
    	гБезГрупп	=	0;
    КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ПриИзменВключения()
	Если ВклПомеч=3 Тогда
		ВклПроведенныеВсе=3;
		Форма.ВклПроведенныеВсе.Доступность(0);
		Форма.ВклПроведенныеПров.Доступность(0);
		Форма.ВклПроведенныеНеПров.Доступность(0);
		ВклВключенныеВсе=3;
		Форма.ВклВключенныеВсе.Доступность(0);
		Форма.ВклВключенные.Доступность(0);
		Форма.ВклВыключенные.Доступность(0);		
	Иначе
		Форма.ВклПроведенныеВсе.Доступность(1);
		Форма.ВклПроведенныеПров.Доступность(1);
		Форма.ВклПроведенныеНеПров.Доступность(1);
		Форма.ВклВключенныеВсе.Доступность(1);
		Форма.ВклВключенные.Доступность(1);
		Форма.ВклВыключенные.Доступность(1);		
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ВклАтрибуты()
	ТабРеквизиты.ПолучитьСтрокуПоНомеру(1);
	Если ТабРеквизиты.ФлВкл = Пометка_Включена Тогда
		Фл = Пометка_Выключена;
	Иначе
		Фл = Пометка_Включена;
	КонецЕсли;	
	ТабРеквизиты.ВыбратьСтроки();
	Пока ТабРеквизиты.ПолучитьСтроку() = 1 Цикл
		ТабРеквизиты.ФлВкл = Фл;
	КонецЦикла;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ПриВыбореРеквизита(Таб)
	
	ТекПозиция	= Таб.ТекущаяСтрока();
	ТекКолонка	= Таб.ТекущаяКолонка();
	
	Если ТекПозиция = 0 Тогда Возврат КонецЕсли;
         
	
	Таб.ПолучитьСтрокуПоНомеру(ТекПозиция);	

	
	Если ТекКолонка = "ФлВкл" Тогда
		    
		Если ПустоеЗначение(Таб.Значение) = 1 Тогда
			Если		гТекЗакладка = "Отбор" Тогда
				Спис			= ФормСписЗначений;
			ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
				Спис			= ФормСписЗначений_Подч;
			КонецЕсли;
			
			Если Спис.РазмерСписка() > 0 Тогда
				Спис.Выгрузить(Таб.Значение);
				Спис.ТекущаяСтрока(1);
			Иначе
				ВыбратьЗначения(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если  Таб.ФлВкл = Пометка_Выключена Тогда
			Таб.ФлВкл = Пометка_Включена;
		Иначе
			Таб.ФлВкл = Пометка_Выключена;
		КонецЕсли;
		Возврат;
		
	ИначеЕсли ТекКолонка = "Реквизит" Тогда
                                                         
		ВыбратьЗначения(0);
		
	КонецЕсли;
    
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Функция ОбновитьСписокЗначений_Подч()
	
	Если гТекСтрокаВТаблице_Подч = ТабРеквизиты_Подч.ТекущаяСтрока() Тогда
		Возврат "";
	КонецЕсли;
    
	Если ПустоеЗначение(гТекСтрокаВТаблице_Подч) = 0 Тогда
		Попытка
			ТабРеквизиты_Подч.ПолучитьСтрокуПоНомеру(гТекСтрокаВТаблице_Подч);
		Исключение Возврат "" КонецПопытки;
	    ФормСписЗначений_Подч.Выгрузить(ТабРеквизиты_Подч.Значение);
	КонецЕсли;
	
	гТекСтрокаВТаблице_Подч = ТабРеквизиты_Подч.ТекущаяСтрока();
	Попытка
		ТабРеквизиты_Подч.ПолучитьСтрокуПоНомеру(гТекСтрокаВТаблице_Подч);
	Исключение Возврат "" КонецПопытки;
	
	ФормСписЗначений_Подч.УдалитьВсе();
	
	Попытка
		Спис	= ТабРеквизиты_Подч.Значение;
	Исключение
		Возврат "";
	КонецПопытки;
	
	Если ТипЗначенияСтр(Спис) = "СписокЗначений" Тогда
		Спис.Выгрузить(ФормСписЗначений_Подч);
	Иначе			
		ТабРеквизиты_Подч.Значение = СоздатьОбъект("СписокЗначений");
	КонецЕсли;	
	
	//---------------------------------------------------------------------------------------------	
    
	гРекОбъекта_Подч		= ТабРеквизиты_Подч.РеквИдентиф;
	гПредставлениеРекв_Подч	= ТабРеквизиты_Подч.Реквизит;
	ЗнакУсловия_Подч		= ТабРеквизиты_Подч.ЗнакУсловия;	
	
	гТипЗначения_Подч		= ТабРеквизиты_Подч.Тип;
	гВидЗначения_Подч		= ТабРеквизиты_Подч.Вид;					                  
	гДлинаЗначения_Подч		= ТабРеквизиты_Подч.Длина;
	гТочностьЗначения_Подч	= ТабРеквизиты_Подч.Точность;
		  
	Если (гТипЗначения_Подч = "Справочник") И (гРекОбъекта_Подч = "Родитель") Тогда
		гФлВыбиратьТолькоГруппы	= 1;
	Иначе
		гФлВыбиратьТолькоГруппы	= 0;
	КонецЕсли;
	
	Если (гТипЗначения_Подч = "Число") Или (гТипЗначения_Подч = "Дата") Тогда
		
		ФормВыбУсловие_Подч.УдалитьВсе();
		ФормВыбУсловие_Подч.ДобавитьЗначение("В",				"Одно из списка");
		ФормВыбУсловие_Подч.ДобавитьЗначение("<>",				"Все кроме выбранных");
		
		Если ФормФлОграничитьСписокУсловий = 0 Тогда
			ФормВыбУсловие_Подч.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала (с граничными значениями)");
			ФормВыбУсловие_Подч.ДобавитьЗначение("ИнтБезГраниц",	"Все из интервала (без граничных значений)");
			ФормВыбУсловие_Подч.ДобавитьЗначение(">",				"Больше");
			ФормВыбУсловие_Подч.ДобавитьЗначение("<",				"Меньше");
		Иначе
			ФормВыбУсловие_Подч.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала");
		КонецЕсли;
		
		ФормВыбУсловие_Подч.ДобавитьЗначение(">=",				"Больше или равно");
		ФормВыбУсловие_Подч.ДобавитьЗначение("<=",				"Меньше или равно");
		
		

	ИначеЕсли (гТипЗначения_Подч = "Строка") Тогда

		ФормВыбУсловие_Подч.УдалитьВсе();
		ФормВыбУсловие_Подч.ДобавитьЗначение("В",				"Одно из списка");
		ФормВыбУсловие_Подч.ДобавитьЗначение("<>",				"Все кроме выбранных");
		ФормВыбУсловие_Подч.ДобавитьЗначение("ПоВхождению",		"Искать вхождения строк");
		Если ФормФлОграничитьСписокУсловий = 0 Тогда
			ФормВыбУсловие_Подч.ДобавитьЗначение("ПоНеВхождению",	"Искать невхождения строк");
		КонецЕсли;
		
	ИначеЕсли (гТипЗначения_Подч = "Справочник") Или (гТипЗначения_Подч = "Документ")		Или (гТипЗначения_Подч = "Счет")		Или 
			  (гТипЗначения_Подч = "ПланСчетов") Или (гТипЗначения_Подч = "Перечисление") 	Или (гТипЗначения_Подч = "Операция") 	Или
			  (гТипЗначения_Подч = "ВидСубконто")Тогда
			  	
		ФормВыбУсловие_Подч.УдалитьВсе();		
		ФормВыбУсловие_Подч.ДобавитьЗначение("В",				"Одно из списка");
		ФормВыбУсловие_Подч.ДобавитьЗначение("<>",				"Все кроме выбранных");
		
	ИначеЕсли гТипЗначения_Подч = "Неопределенный" Тогда
		
		ФормВыбУсловие_Подч.УдалитьВсе();
		ФормВыбУсловие_Подч.ДобавитьЗначение("В",				"Одно из списка");
		ФормВыбУсловие_Подч.ДобавитьЗначение("<>",				"Все кроме выбранных");
		ФормВыбУсловие_Подч.ДобавитьЗначение("ПоВхождению",		"Искать вхождения строк");
		
		Если ФормФлОграничитьСписокУсловий = 1 Тогда
			ФормВыбУсловие_Подч.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала");
		Иначе
			ФормВыбУсловие_Подч.ДобавитьЗначение("ПоНеВхождению",	"Искать невхождения строк");
			ФормВыбУсловие_Подч.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала (с граничными значениями)");
			ФормВыбУсловие_Подч.ДобавитьЗначение("ИнтБезГраниц",	"Все из интервала (без граничных значений)");
			ФормВыбУсловие_Подч.ДобавитьЗначение(">",				"Больше");
			ФормВыбУсловие_Подч.ДобавитьЗначение("<",				"Меньше");
		КонецЕсли;
		ФормВыбУсловие_Подч.ДобавитьЗначение(">=",				"Больше или равно");
		ФормВыбУсловие_Подч.ДобавитьЗначение("<=",				"Меньше или равно");
		
	КонецЕсли;

	Если ((гТипЗначения_Подч = "Справочник") Или (гТипЗначения_Подч = "Документ")) И (ПустоеЗначение(гВидЗначения_Подч) = 0) И (гТекЗакладка = "Дополнительная") Тогда
		Форма.кнОтбор_Подч.Видимость(1);
	ИначеЕсли (гТипЗначения_Подч = "ВидСубконто")  Или (гТипЗначения_Подч = "Неопределенный") И (гТекЗакладка = "Дополнительная") Тогда
		Форма.кнОтбор_Подч.Видимость(1);
	Иначе
		Форма.кнОтбор_Подч.Видимость(0);
	КонецЕсли;
	
	ПозЗнакаУсловия = ФормВыбУсловие_Подч.НайтиЗначение(ЗнакУсловия_Подч);
	Если ПозЗнакаУсловия > 0 Тогда
		ФормВыбУсловие_Подч.ТекущаяСтрока(ПозЗнакаУсловия);
	Иначе
		ФормВыбУсловие_Подч.ТекущаяСтрока(1);
	КонецЕсли;
	ТабРеквизиты_Подч.ЗнакУсловия = ФормВыбУсловие_Подч.ПолучитьЗначение(ФормВыбУсловие_Подч.ТекущаяСтрока());
		
	Возврат "";    
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция ОбновитьСписокЗначений()
	
	Если гТекСтрокаВТаблице = ТабРеквизиты.ТекущаяСтрока() Тогда
		Возврат "";
	КонецЕсли;
    
	Если ПустоеЗначение(гТекСтрокаВТаблице) = 0 Тогда
		Попытка
			ТабРеквизиты.ПолучитьСтрокуПоНомеру(гТекСтрокаВТаблице);    
		Исключение Возврат "" КонецПопытки;
	    ФормСписЗначений.Выгрузить(ТабРеквизиты.Значение);
	КонецЕсли;
	
	гТекСтрокаВТаблице = ТабРеквизиты.ТекущаяСтрока();	
	Попытка
		ТабРеквизиты.ПолучитьСтрокуПоНомеру(гТекСтрокаВТаблице);    
	Исключение Возврат "" КонецПопытки;
	
	ФормСписЗначений.УдалитьВсе();
	
	Попытка
		Спис	= ТабРеквизиты.Значение;
	Исключение
		Возврат "";
	КонецПопытки;
	
	Если ТипЗначенияСтр(Спис) = "СписокЗначений" Тогда
		Спис.Выгрузить(ФормСписЗначений);
	Иначе			
		ТабРеквизиты.Значение = СоздатьОбъект("СписокЗначений");
	КонецЕсли;	
	
	//---------------------------------------------------------------------------------------------	

	гРекОбъекта 		= ТабРеквизиты.РеквИдентиф;
	гПредставлениеРекв	= ТабРеквизиты.Реквизит;
	
	ЗнакУсловия			= ТабРеквизиты.ЗнакУсловия;
	гВидСубконто		= ТабРеквизиты.ВидСубконто;
	
	гТипЗначения		= ТабРеквизиты.Тип;
	гВидЗначения		= ТабРеквизиты.Вид;					                  
	гДлинаЗначения		= ТабРеквизиты.Длина;
	гТочностьЗначения	= ТабРеквизиты.Точность;
	
	Если (гТипЗначения = "Справочник") И (гРекОбъекта = "Родитель") Тогда
		гФлВыбиратьТолькоГруппы	= 1;
	Иначе
		гФлВыбиратьТолькоГруппы	= 0;
	КонецЕсли;
		
	Если (гТипЗначения = "Число") Или (гТипЗначения = "Дата") Тогда
		
		ФормВыбУсловие.УдалитьВсе();
		ФормВыбУсловие.ДобавитьЗначение("В",					"Одно из списка");
		ФормВыбУсловие.ДобавитьЗначение("<>",					"Все кроме выбранных");
		
		Если ФормФлОграничитьСписокУсловий = 0 Тогда
			ФормВыбУсловие.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала (с граничными значениями)");
			ФормВыбУсловие.ДобавитьЗначение("ИнтБезГраниц",		"Все из интервала (без граничных значений)");
			ФормВыбУсловие.ДобавитьЗначение(">",				"Больше");
			ФормВыбУсловие.ДобавитьЗначение("<",				"Меньше");
		Иначе
			ФормВыбУсловие.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала");
		КонецЕсли;
		
		ФормВыбУсловие.ДобавитьЗначение(">=",					"Больше или равно");
		ФормВыбУсловие.ДобавитьЗначение("<=",					"Меньше или равно");

	ИначеЕсли (гТипЗначения = "Строка") Тогда

		ФормВыбУсловие.УдалитьВсе();
		ФормВыбУсловие.ДобавитьЗначение("В",					"Одно из списка");
		ФормВыбУсловие.ДобавитьЗначение("<>",					"Все кроме выбранных");
		ФормВыбУсловие.ДобавитьЗначение("ПоВхождению",			"Искать вхождения строк");
		Если ФормФлОграничитьСписокУсловий = 0 Тогда
			ФормВыбУсловие.ДобавитьЗначение("ПоНеВхождению",	"Искать невхождения строк");
		КонецЕсли;
		
	ИначеЕсли (гТипЗначения = "Справочник") Или (гТипЗначения = "Документ")		Или (гТипЗначения = "Счет")		Или 
			  (гТипЗначения = "ПланСчетов") Или (гТипЗначения = "Перечисление") Или (гТипЗначения = "Операция") Или
			  (гТипЗначения = "ВидСубконто")Тогда
			  	
		ФормВыбУсловие.УдалитьВсе();		
		ФормВыбУсловие.ДобавитьЗначение("В",					"Одно из списка");
		ФормВыбУсловие.ДобавитьЗначение("<>",					"Все кроме выбранных");
		
	ИначеЕсли гТипЗначения = "Неопределенный" Тогда
		
		ФормВыбУсловие.УдалитьВсе();
		ФормВыбУсловие.ДобавитьЗначение("В",					"Одно из списка");
		ФормВыбУсловие.ДобавитьЗначение("<>",					"Все кроме выбранных");
		ФормВыбУсловие.ДобавитьЗначение("ПоВхождению",			"Искать вхождения строк");
		
		Если ФормФлОграничитьСписокУсловий = 1 Тогда
			ФормВыбУсловие.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала");
		Иначе
			ФормВыбУсловие.ДобавитьЗначение("ПоНеВхождению",	"Искать невхождения строк");
			ФормВыбУсловие.ДобавитьЗначение("ИнтСГраницами",	"Все из интервала (с граничными значениями)");
			ФормВыбУсловие.ДобавитьЗначение("ИнтБезГраниц",		"Все из интервала (без граничных значений)");
			ФормВыбУсловие.ДобавитьЗначение(">",				"Больше");
			ФормВыбУсловие.ДобавитьЗначение("<",				"Меньше");
		КонецЕсли;
		ФормВыбУсловие.ДобавитьЗначение(">=",					"Больше или равно");
		ФормВыбУсловие.ДобавитьЗначение("<=",					"Меньше или равно");
		
	КонецЕсли;
	
	Если ((гТипЗначения = "Справочник") Или (гТипЗначения = "Документ")) И (ПустоеЗначение(гВидЗначения) = 0) И (гТекЗакладка = "Отбор")Тогда
		Форма.кнОтбор.Видимость(1);
	ИначеЕсли (гТипЗначения = "ВидСубконто") Или (гТипЗначения = "Неопределенный") И (гТекЗакладка = "Отбор") Тогда
		Форма.кнОтбор.Видимость(1);
	Иначе
		Форма.кнОтбор.Видимость(0);
	КонецЕсли;
         
	ПозЗнакаУсловия = ФормВыбУсловие.НайтиЗначение(ЗнакУсловия);
	Если ПозЗнакаУсловия > 0 Тогда
		ФормВыбУсловие.ТекущаяСтрока(ПозЗнакаУсловия);
	Иначе
		ФормВыбУсловие.ТекущаяСтрока(1);
	КонецЕсли;
	ТабРеквизиты.ЗнакУсловия = ФормВыбУсловие.ПолучитьЗначение(ФормВыбУсловие.ТекущаяСтрока());
	
	Возврат "";    
КонецФункции

//--------------------------------------------------------------------------------------------------

Функция РеквизитМД(ИдРеквизита)
	
	Если		гТипОбъекта = "Справочник" Тогда

		Если		гТекЗакладка = "Отбор" Тогда
			Возврат гОбъектМД.Реквизит(ИдРеквизита);
		ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
			Возврат гОбъектМД_Подч.Реквизит(ИдРеквизита);
		КонецЕсли;		
		
	ИначеЕсли	гТипОбъекта = "Документ" Тогда
	    
		РеквМД   = Метаданные.ОбщийРеквизитДокумента(ИдРеквизита);
		Если РеквМД.Выбран() = 0 Тогда
			РеквМД = гОбъектМД.РеквизитШапки(ИдРеквизита);
			Если РеквМД.Выбран() = 0 Тогда
				РеквМД = гОбъектМД.РеквизитТабличнойЧасти(ИдРеквизита);
				Если РеквМД.Выбран() = 0 Тогда
					Возврат ПолучитьПустоеЗначение();
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		Возврат РеквМД;
		
	ИначеЕсли	гТипОбъекта = "Операция" Тогда

		РеквМД   = Метаданные.ОбщийРеквизитДокумента(ИдРеквизита);
		Если РеквМД.Выбран() = 0 Тогда
			РеквМД = Метаданные.РеквизитОперации(ИдРеквизита);
			Если РеквМД.Выбран() = 0 Тогда
				РеквМД = Метаданные.РеквизитПроводки(ИдРеквизита);
				Если РеквМД.Выбран() = 0 Тогда
					Возврат ПолучитьПустоеЗначение();
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		Возврат РеквМД;
		
	КонецЕсли;
	
КонецФункции
                                                                                                    
//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ДобавитьСтрокуВТаблицу(Таб, ФлВкл="", ИдРекв="", ПрРекв="", ТипРекв="", ВидРекв="", ДлинаРекв="", ТочностьРекв="")
	
	Таб.НоваяСтрока();
	
	Таб.ФлВкл		= ФлВкл;
	Таб.Реквизит	= ПрРекв;		
	Таб.РеквИдентиф	= ИдРекв;
	Таб.Тип		   	= ТипРекв;
	Таб.Вид		 	= ВидРекв;
	Таб.Длина		= ДлинаРекв;
	Таб.Точность	= ТочностьРекв;
    
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ДобавитьОсновныеРеквизиты(Таб, ОбъектМД, ТипОбъекта, ВидОбъекта, НепоказываемыеРеквизиты="")
	Если ПустоеЗначение(НепоказываемыеРеквизиты) = 1 Тогда НепоказываемыеРеквизиты = СоздатьОбъект("СписокЗначений") КонецЕсли;
	
	Если ТипОбъекта = "Справочник" Тогда
		
		Если (ОбъектМД.ДлинаКода > 0) И ((ПустоеЗначение(НепоказываемыеРеквизиты) = 1) Или (НепоказываемыеРеквизиты.Принадлежит("Код") = 0)) Тогда
			Таб.НоваяСтрока();
			Таб.ФлВкл		= Пометка_Выключена;
			Таб.Реквизит	= "Код";		
			Таб.РеквИдентиф	= "Код";
			Таб.Тип		   	= ?(ОбъектМД.ТипКода="Числовой", "Число", "Строка");
			Таб.Вид		 	= "";
			Таб.Длина		= ОбъектМД.ДлинаКода;
			Таб.Точность	= 0;
		КонецЕсли;
		Если (ОбъектМД.ДлинаНаименования > 0) И ((ПустоеЗначение(НепоказываемыеРеквизиты) = 1) Или (НепоказываемыеРеквизиты.Принадлежит("Наименование") = 0)) Тогда			
			Таб.НоваяСтрока();
			Таб.ФлВкл		= Пометка_Выключена;
			Таб.Реквизит    = "Наименование";
			Таб.РеквИдентиф = "Наименование";
			Таб.Тип      	= "Строка";
			Таб.Вид			= "";
			Таб.Длина		= ОбъектМД.ДлинаНаименования;
			Таб.Точность	= 0;
		КонецЕсли;
		Если (ОбъектМД.КоличествоУровней > 1) И ((ПустоеЗначение(НепоказываемыеРеквизиты) = 1) Или (НепоказываемыеРеквизиты.Принадлежит("Родитель") = 0)) Тогда			
			Таб.НоваяСтрока();
			Таб.ФлВкл		= Пометка_Выключена;
			Таб.Реквизит	= "Группа (родитель)";
			Таб.РеквИдентиф	= "Родитель";
			Таб.Тип			= "Справочник";
			Таб.Вид			= ВидОбъекта;
			Таб.Длина		= "";
			Таб.Точность	= "";
		КонецЕсли;
		Если (СокрЛП(ОбъектМД.Владелец) <> "Метаданные") И ((ПустоеЗначение(НепоказываемыеРеквизиты) = 1) Или (НепоказываемыеРеквизиты.Принадлежит("Владелец") = 0)) Тогда
			//Если ПустоеЗначение(гВладелецСправочника) = 1 Тогда
				Таб.НоваяСтрока();
				Таб.ФлВкл		= Пометка_Выключена;
				Таб.Реквизит	= ОбъектМД.Владелец.Представление() + " (владелец)";
				Таб.РеквИдентиф	= "Владелец";
				Таб.Тип			= "Справочник";
				Таб.Вид			= ОбъектМД.Владелец.Идентификатор;
				Таб.Длина		= "";
				Таб.Точность	= "";
			//КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		
		Если ((ПустоеЗначение(НепоказываемыеРеквизиты) = 1) Или (НепоказываемыеРеквизиты.Принадлежит("НомерДок") = 0)) Тогда
			Таб.НоваяСтрока();
			Таб.ФлВкл		= Пометка_Выключена;
			Таб.Реквизит	= "Номер документа";
			Таб.РеквИдентиф	= "НомерДок";
			Таб.Тип			= ?(ОбъектМД.ТипНомера="Числовой", "Число", "Строка");
			Таб.Вид			= "";
			Таб.Длина		= ОбъектМД.ДлинаНомера;
			Таб.Точность	= 0;
		КонецЕсли;
		Если ((ПустоеЗначение(НепоказываемыеРеквизиты) = 1) Или (НепоказываемыеРеквизиты.Принадлежит("ДатаДок") = 0)) Тогда
			Таб.НоваяСтрока();
			Таб.ФлВкл		= Пометка_Выключена;
			Таб.Реквизит    = "Дата документа";
			Таб.РеквИдентиф = "ДатаДок";
			Таб.Тип      	= "Дата";
			Таб.Вид			= "";
			Таб.Длина		= "";
			Таб.Точность	= "";
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ЗаполнитьНепоказываемыеРеквизиты(Спис, ИдОбъекта)
	Для Сч = 1 По гНепоказРеквизиты_Все.РазмерСписка() Цикл
	    Иден	= "";
		Рекв	= гНепоказРеквизиты_Все.ПолучитьЗначение(Сч, Иден);
		Если ((ПустоеЗначение(Иден) = 1) И (ИдОбъекта = гВидОбъекта)) Или (Иден = ИдОбъекта) Тогда
			Спис.ДобавитьЗначение(Рекв);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры                                                                                                    

//--------------------------------------------------------------------------------------------------

Процедура ПриВыбореПодчСправочника()
            
	ТабРеквизиты_Подч.УдалитьСтроки();
	гСписокРекв_Подч.УдалитьВсе();
	ФормСписЗначений_Подч.УдалитьВсе();
	                             
	гТипОбъекта_Подч	= "Справочник";
	гВидОбъекта_Подч	= ФормСписПодчСправочников.ПолучитьЗначение(ФормСписПодчСправочников.ТекущаяСтрока());
	гОбъектМД_Подч		= Метаданные.Справочник(СокрЛП(гВидОбъекта_Подч));

	гНепоказРеквизиты_Подч = СоздатьОбъект("СписокЗначений");
	ЗаполнитьНепоказываемыеРеквизиты(гНепоказРеквизиты_Подч, СокрЛП(гВидОбъекта_Подч));
	         
	ДобавитьОсновныеРеквизиты(ТабРеквизиты_Подч, гОбъектМД_Подч, гТипОбъекта_Подч, СокрЛП(гВидОбъекта_Подч), гНепоказРеквизиты_Подч);
	
	Для Сч = 1 По гОбъектМД_Подч.Реквизит() Цикл
		РеквМД	= гОбъектМД_Подч.Реквизит(Сч);
		ИденМД	= РеквМД.Идентификатор;
		
		Если (ПустоеЗначение(гНепоказРеквизиты_Подч) = 1) Или (гНепоказРеквизиты_Подч.Принадлежит(ИденМД) = 0) Тогда
			гСписокРекв_Подч.ДобавитьЗначение(РеквМД.Идентификатор, РеквМД.Представление());
			
			ТабРеквизиты_Подч.НоваяСтрока();
			ТабРеквизиты_Подч.ФлВкл			= Пометка_Выключена;
			ТабРеквизиты_Подч.Реквизит		= РеквМД.Представление();
			ТабРеквизиты_Подч.РеквИдентиф	= РеквМД.Идентификатор;
			ТабРеквизиты_Подч.Тип			= РеквМД.Тип;
			ТабРеквизиты_Подч.Вид			= РеквМД.Вид;
			ТабРеквизиты_Подч.Длина			= РеквМД.Длина;
			ТабРеквизиты_Подч.Точность		= РеквМД.Точность;
		КонецЕсли;
	КонецЦикла;

	гРекОбъекта_Подч		= "";
	гТекСтрокаВТаблице_Подч	= "";
	
	ОбновитьСписокЗначений_Подч();	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ПриВыбореЗакладки(Ном, ИмяЗакладки)
	
	гТекЗакладка = ИмяЗакладки;
	
	Если ИмяЗакладки = "Отбор" Тогда               
		Форма.ИспользоватьСлой("Основной, Отбор", 2);

		гТекСтрокаВТаблице	= "";
		ОбновитьСписокЗначений();
		
	ИначеЕсли ИмяЗакладки = "Главная" Тогда
		Форма.ИспользоватьСлой("Основной, Выбор", 2);

		Если Форма.РежимВыбора() > 0 Тогда
			Форма.ИспользоватьСлой("РежимНеПодбора", 0);
		Иначе
			Форма.ИспользоватьСлой("РежимНеПодбора", 1);
		КонецЕсли;
			
		Если ФормСписДействий.РазмерСписка() > 0 Тогда
			Форма.ФормСписДействий.Видимость(1);
			Форма.ФормЗаголовок_Действие.Видимость(1);
		Иначе
			Форма.ФормСписДействий.Видимость(0);
			Форма.ФормЗаголовок_Действие.Видимость(0);
		КонецЕсли;
		
	ИначеЕсли ИмяЗакладки = "Дополнительная" Тогда
		Форма.ИспользоватьСлой("Основной, Дополнительный", 2);
		                        
		гТекСтрокаВТаблице_Подч	= "";
		ОбновитьСписокЗначений_Подч();
		
	ИначеЕсли ИмяЗакладки = "Общие" Тогда
		Форма.ИспользоватьСлой("Основной, Помеченные, Опции", 2);
		
		Если гТипОбъекта = "Операция" Тогда
			Форма.ИспользоватьСлой("ДляОпераций", 1);
		Иначе
			Форма.ИспользоватьСлой("ДляОпераций", 0);
		КонецЕсли;
		
		Если гТипОбъекта = "Документ" Тогда
			Форма.ИспользоватьСлой("ДляДокументов", 1);
		Иначе
			Форма.ИспользоватьСлой("ДляДокументов", 0);
		КонецЕсли;
		
	КонецЕсли;
	      
	Если Форма.РежимВыбора() > 0 Тогда
		Форма.кнВыполнить.Видимость(0);	
		Форма.КнопкаПоУмолчанию("КнЗаполнитьСписок");
	Иначе
		Форма.кнВыполнить.Видимость(1);	
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ЗаполнитьСписок()
	    
	гСписОтмеченныхДопКолонок.УдалитьВсе();
	Для СчДопКолонок = 1 По гСписДопКолонок.РазмерСписка() Цикл
	    Если гСписДопКолонок.Пометка(СчДопКолонок) = 0 Тогда Продолжить КонецЕсли;
		гСписОтмеченныхДопКолонок.ДобавитьЗначение(гСписДопКолонок.ПолучитьЗначение(СчДопКолонок));
	КонецЦикла;
	
	Если ФормФлОчищать = 1 Тогда
		гТабВыборка.УдалитьСтроки();
	КонецЕсли;
	
	Если ПустоеЗначение(гФлБезОткрытияФормы) = 1 Тогда
		Попытка
			Если		гТекЗакладка = "Отбор" Тогда
				ФормСписЗначений.Выгрузить(ТабРеквизиты.Значение);
			ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
				ФормСписЗначений_Подч.Выгрузить(ТабРеквизиты_Подч.Значение);
			КонецЕсли;
		Исключение КонецПопытки;
	КонецЕсли;
              
	ФлПоРекв		= ФильтроватьПоРеквизитам();
	ФлПоПодч		= ФильтроватьПоПодчиненному();

	гСписокСписков	= СоздатьОбъект("СписокЗначений");
	
	Если		(ФлПоРекв = 1) И (ФлПоПодч = 0) Тогда
		
	    гАлгоритм = "ПоРеквизитам";
		ЗаполнитьТаблицуУсловий(ТабРеквизиты, гВидОбъекта);
		
	ИначеЕсли	(ФлПоПодч = 1) Тогда
		
		гАлгоритм = "ПоПодчиненным";
		
		СписУжеБыло		= СоздатьОбъект("СписокЗначений");
		ТабДополнений	= СоздатьОбъект("ТаблицаЗначений");
		КопияТаб		= СоздатьОбъект("ТаблицаЗначений");
		ТабРеквизиты_Подч.Выгрузить(КопияТаб);
        КопияТаб.НоваяКолонка("Удалить");
		КопияТаб.Выгрузить(ТабДополнений);
		
		КопияТаб.ВыбратьСтроки();
		Пока КопияТаб.ПолучитьСтроку() = 1 Цикл
			Если КопияТаб.ФлВкл = Пометка_Выключена Тогда
				КопияТаб.Удалить = 1;
				ТабДополнений.УстановитьЗначение(КопияТаб.НомерСтроки, "Удалить", 1);
			ИначеЕсли (СписУжеБыло.Принадлежит(КопияТаб.РеквИдентиф) = 1) Или (КопияТаб.ЗнакУсловия = "<>") Или (КопияТаб.ЗнакУсловия = "ПоНеВхождению") Тогда
				КопияТаб.Удалить = 1;
				ТабДополнений.УстановитьЗначение(КопияТаб.НомерСтроки, "Удалить", 0);
			Иначе
				КопияТаб.Удалить = 0;
				ТабДополнений.УстановитьЗначение(КопияТаб.НомерСтроки, "Удалить", 1);
				СписУжеБыло.ДобавитьЗначение(КопияТаб.РеквИдентиф);
			КонецЕсли;
		КонецЦикла;
		
		гСписокОтобранных	= СоздатьОбъект("СписокЗначений");
		
		УдалитьСтрокиТаблицы(КопияТаб);
		УдалитьСтрокиТаблицы(ТабДополнений);
		
		Если КопияТаб.КоличествоСтрок() > 0 Тогда
			ЗаполнитьТаблицуУсловий(КопияТаб, СокрЛП(гВидОбъекта_Подч));
			
			Если гСписокОтобранных.РазмерСписка() = 0 Тогда
				Предупреждение("Не найдено ни одного объекта!");
				Возврат;
			Иначе
				гСписокСписков.ДобавитьЗначение(гСписокОтобранных, "В");
			КонецЕсли;
		КонецЕсли;
		
		Для СчСтрок = 1 По ТабДополнений.КоличествоСтрок() Цикл
			гСписокОтобранных	= СоздатьОбъект("СписокЗначений");
            КопияТаб			= СоздатьОбъект("ТаблицаЗначений");
			
			ТабДополнений.Выгрузить(КопияТаб, СчСтрок, СчСтрок);
			                                                    
			КопияТаб.ПолучитьСтрокуПоНомеру(1);
			Если		КопияТаб.ЗнакУсловия = "<>" Тогда
				КопияТаб.ЗнакУсловия = "В";
			ИначеЕсли	КопияТаб.ЗнакУсловия = "ПоНеВхождению" Тогда
				КопияТаб.ЗнакУсловия = "ПоВхождению";
			КонецЕсли;			
			
			ЗаполнитьТаблицуУсловий(КопияТаб, СокрЛП(гВидОбъекта_Подч));
			
			ТабДополнений.ПолучитьСтрокуПоНомеру(СчСтрок);
			
			Если		(гСписокОтобранных.РазмерСписка() = 0) И (ТабДополнений.ЗнакУсловия <> "<>") И (ТабДополнений.ЗнакУсловия <> "ПоНеВхождению") Тогда
				Предупреждение("Не найдено ни одного объекта!");
				Возврат;
			ИначеЕсли	(гСписокОтобранных.РазмерСписка() = 0) Тогда
				                                                    
			ИначеЕсли	(ТабДополнений.ЗнакУсловия = "<>") Или (ТабДополнений.ЗнакУсловия = "ПоНеВхождению") Тогда
				гСписокСписков.ДобавитьЗначение(гСписокОтобранных, "Не");
			Иначе
				гСписокСписков.ДобавитьЗначение(гСписокОтобранных, "В");
			КонецЕсли;
		КонецЦикла;
		    
		Если ВыполнятьЗапрос() = 0 Тогда
			гСписокОтобранных = СоздатьОбъект("СписокЗначений");
			гСписокСписков.ДобавитьЗначение(гСписокОтобранных, "В");
			
			гАлгоритм = "ПоРеквизитамДляПодчиненных";
			ЗаполнитьТаблицуУсловий(ТабРеквизиты, гВидОбъекта);
			                       
			Табл = СоздатьОбъект("ТаблицаЗначений");
			ТабРеквизиты.Выгрузить(Табл);
			Табл.УдалитьСтроки();
		Иначе
			Табл = ТабРеквизиты;
		КонецЕсли;
		
		гАлгоритм = "НахождениеПересечений";
		ЗаполнитьТаблицуУсловий(Табл, гВидОбъекта);

	ИначеЕсли	(ФлПоРекв = 0) И (ФлПоПодч = 0) Тогда
		
		гАлгоритм = "Заполнить";
		ЗаполнитьТаблицуУсловий(ТабРеквизиты, гВидОбъекта);
		
	КонецЕсли;
	
	Если (ПустоеЗначение(гФлБезОткрытияФормы) = 1) И (гИспользоватьЗакладки <> "Нет") Тогда
		Форма.Закладки.ТекущаяСтрока(1);
		ПриВыбореЗакладки(1, "Главная");
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ФиксироватьКолонки()
	
	Если гКолонкиЗафиксированы = 1 Тогда
	    гТабВыборка.Фиксировать(, 0);
		гТабВыборка.ТекущаяКолонка(1);
		гКолонкиЗафиксированы = 0;
	Иначе
		Если гТабВыборка.КоличествоКолонок() <= 3 Тогда
			КолвоФиксируемых = 1;
		Иначе
			КолвоФиксируемых	=	?(Форма.РежимВыбора()>0, 2, 3);
		КонецЕсли;
	    гТабВыборка.Фиксировать(, КолвоФиксируемых);
		гТабВыборка.ТекущаяКолонка(КолвоФиксируемых + 1);
		гКолонкиЗафиксированы = 1;
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Функция ПрочитатьИнформациюОТипеРеквизита(ТипОбъекта, ВидОбъекта, Реквизит, Тип="", Вид="", Длина="", Точность="", Периодический="")
	
    Если ПустоеЗначение(Реквизит) = 1 Тогда Возврат("") КонецЕсли;
	
	МД	=	Метаданные;
	
	Если		ТипОбъекта = "Справочник"		Тогда
		
		Если ПустоеЗначение(ВидОбъекта) = 1 Тогда Возврат("") КонецЕсли;
		ОбъектМД			=	МД.Справочник(ВидОбъекта);
		
		Если		Реквизит	= "Код"				Тогда
			Тип				=	?(ОбъектМД.ТипКода="Числовой", "Число", "Строка");
			Длина			=	ОбъектМД.ДлинаКода;
		ИначеЕсли	Реквизит	= "Наименование"	Тогда
			Тип				=	"Строка";
			Длина			=	ОбъектМД.ДлинаНаименования;
		ИначеЕсли	Реквизит	= "Родитель"		Тогда
			Тип				=	"Справочник";
			Вид				=	ВидОбъекта;
		ИначеЕсли	Реквизит	= "Владелец"	Тогда
			Тип				=	"Справочник";
			Вид				=	ОбъектМД.Владелец.Идентификатор;
		Иначе
			РеквМД			=	ОбъектМД.Реквизит(Реквизит);
			Если РеквМД.Выбран() = 0 Тогда Возврат("") КонецЕсли;
			Тип				=	РеквМД.Тип;
			Вид				=	РеквМД.Вид;
			Длина			=	РеквМД.Длина;
			Точность		=	РеквМД.Точность;
			Периодический	=	РеквМД.Периодический;
			Возврат(РеквМД);
		КонецЕсли;
		
	ИначеЕсли	ТипОбъекта = "Документ"			Тогда
                                           
		Если ПустоеЗначение(ВидОбъекта) = 1 Тогда Возврат("") КонецЕсли;
		ОбъектМД		= МД.Документ(ВидОбъекта);
		
		Если		Реквизит	= "НомерДок"		Тогда
			Тип			=	?(ОбъектМД.ТипНомера="Числовой", "Число", "Строка");
			Длина		=	ОбъектМД.ДлинаНомера;
		ИначеЕсли	Реквизит	= "ДатаДок"			Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "ВремяДок"		Тогда
			Тип			=	"Строка";
			Длина		=	8;
		ИначеЕсли	Реквизит	= "НомерСтроки"		Тогда
			Тип			=	"Число";
			Длина		=	3;
			Точность	=	0;
		Иначе
			РеквМД		= МД.ОбщийРеквизитДокумента(Реквизит);
			Если РеквМД.Выбран() = 0 Тогда	РеквМД = ОбъектМД.РеквизитШапки(Реквизит);
				Если РеквМД.Выбран() = 0 Тогда	РеквМД = ОбъектМД.РеквизитТабличнойЧасти(Реквизит)	КонецЕсли;
			КонецЕсли;
			Если РеквМД.Выбран() = 0 Тогда Возврат("") КонецЕсли;
			Тип			=	РеквМД.Тип;
			Вид			=	РеквМД.Вид;
			Длина		=	РеквМД.Длина;
			Точность	=	РеквМД.Точность;
			Возврат(РеквМД);
		КонецЕсли;
		
	ИначеЕсли	ТипОбъекта = "Операция"			Тогда
		     
		Если		Реквизит	= "Содержание"				Тогда
			Тип			=	"Строка";
			Длина		=	МД.ДлинаСодержанияОперации;
		ИначеЕсли	Реквизит	= "СуммаОперации"			Тогда
			Тип			=	"Число";
			Длина		=	МД.ДлинаСуммыОперация;
			Точность	=	МД.ТочностьСуммыОперации;
		ИначеЕсли	Реквизит	= "ДатаОперации"			Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "Документ"				Тогда
			Тип			=	"Документ";
		ИначеЕсли	Реквизит	= "Сумма"					Тогда
			Тип			=	"Число";
			Длина		=	МД.ДлинаСуммыПроводки;
			Точность	=	МД.ТочностьСуммыПроводки;
		ИначеЕсли	Реквизит	= "Количество"				Тогда
			Тип			=	"Число";
			Длина		=	МД.ДлинаКоличестваПроводки;
			Точность	=	МД.ТочностьКоличестваПроводки;
		ИначеЕсли	Реквизит	= "ВалСумма"				Тогда
			Тип			=	"Число";
			Длина		=	МД.ДлинаВалютнойСуммыПроводки;
			Точность	=	МД.ТочностьВалютнойСуммыПроводки;
		ИначеЕсли	Реквизит	= "Валюта"					Тогда
			Если МД.Валюта.Выбран() = 0 Тогда Возврат("") КонецЕсли;
			Тип			=	"Справочник";
			Вид			=	МД.Валюта.Идентификатор;
		Иначе
			РеквМД 		= МД.РеквизитОперации(Реквизит);
			Если РеквМД.Выбран() = 0 Тогда	РеквМД = МД.РеквизитПроводки(Реквизит)	КонецЕсли;
			Если РеквМД.Выбран() = 0 Тогда Возврат("") КонецЕсли;
			Тип			=	РеквМД.Тип;
			Вид			=	РеквМД.Вид;
			Длина		=	РеквМД.Длина;
			Точность	=	РеквМД.Точность;
			Возврат(РеквМД);
		КонецЕсли;
	
	ИначеЕсли	ТипОбъекта = "ВидСубконто"		Тогда
		
		РеквМД		=	МД.ВидСубконто(Реквизит);
		Если РеквМД.Выбран() = 0 Тогда Возврат("") КонецЕсли;
		Тип			=	РеквМД.Тип;
		Вид			=	РеквМД.Вид;
		Длина		=	РеквМД.Длина;
		Точность	=	РеквМД.Точность;
		Возврат(РеквМД);
		
	ИначеЕсли	ТипОбъекта = "ЖурналРасчетов"	Тогда
		                           
		ОбъектМД				=	МД.ЖурналРасчетов(ВидОбъекта);
		
		Если		Реквизит	= "Документ"					Тогда
			Тип			=	"Документ";
		ИначеЕсли	Реквизит	= "РодительскийДокумент"		Тогда
			Тип			=	"Документ";
		ИначеЕсли	Реквизит	= "Объект"						Тогда
			Тип			=	"Справочник";
			Вид			=	ОбъектМД.ОсновнойСправочник.Идентификатор;
		ИначеЕсли	Реквизит	= "ВидРасч"						Тогда
			Тип			=	"ВидРасчета";
		ИначеЕсли	Реквизит	= "ДатаНачала"					Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "ДатаОкончания"				Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "ПериодДействия"				Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "ПериодРегистрации"			Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "Сторно"						Тогда
			Тип			=	"Число";
			Длина		=	1;
			Точность	=	0;
		ИначеЕсли	Реквизит	= "Рассчитана"					Тогда
			Тип			=	"Число";
			Длина		=	1;
			Точность	=	0;
		ИначеЕсли	Реквизит	= "Исправлена"					Тогда
			Тип			=	"Число";
			Длина		=	1;
			Точность	=	0;
		ИначеЕсли	Реквизит	= "Фиксирована"					Тогда
			Тип			=	"Число";
			Длина		=	1;
			Точность	=	0;
		ИначеЕсли	Реквизит	= "Перерасчет"					Тогда
			Тип			=	"Число";
			Длина		=	1;
			Точность	=	0;
		ИначеЕсли	Реквизит	= "ДокументПервичнойЗаписи"		Тогда
			Тип			=	"Документ";
		ИначеЕсли	Реквизит	= "РегистрацияПервичнойЗаписи"	Тогда
			Тип			=	"Дата";
		ИначеЕсли	Реквизит	= "Результат"					Тогда
			Тип			=	"Число";
			Длина		=	ОбъектМД.ДлинаРезультата;
			Точность	=	ОбъектМД.ТочностьРезультата;
		ИначеЕсли	Реквизит	= "ПервичнаяЗапись"				Тогда
			
		Иначе
			
			РеквМД	= ОбъектМД.Реквизит(Реквизит);
			Если РеквМД.Выбран() = 0 Тогда Возврат("") КонецЕсли;
			Тип			=	РеквМД.Тип;
			Вид			=	РеквМД.Вид;
			Длина		=	РеквМД.Длина;
			Точность	=	РеквМД.Точность;
			Возврат(РеквМД);
			
		КонецЕсли;
		
	ИначеЕсли	ТипОбъекта = "Константа"		Тогда
		
		РеквМД		=	МД.Константа(Реквизит);
		Если РеквМД.Выбран() = 0 Тогда Возврат("") КонецЕсли;
		Тип			=	РеквМД.Тип;
		Вид			=	РеквМД.Вид;
		Длина		=	РеквМД.Длина;
		Точность	=	РеквМД.Точность;
		Возврат(РеквМД);
		
	Иначе
		
		Возврат("");
		
	КонецЕсли;    
	
	Возврат("");
	
КонецФункции		//	ПрочитатьИнформациюОТипеРеквизита()

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ВыбратьПоказываемыеРеквизиты(ФлПрограммно=0)
                                                     
	Если ФлПрограммно = 0 Тогда
		СписДляОтметки	=	СоздатьОбъект("СписокЗначений");
		гСписДопКолонок.Выгрузить(СписДляОтметки);
		
		Зн = "";
		Если СписДляОтметки.ОтметитьЗначения(Зн, "Выберите показываемые реквизиты") = 0 Тогда Возврат КонецЕсли;
		
		СписДляОтметки.Выгрузить(гСписДопКолонок);
	КонецЕсли;
	
	СписНовыхКолонок = СоздатьОбъект("СписокЗначений");

	Для Сч = 1 По гСписДопКолонок.РазмерСписка() Цикл
		ПрКолонки	=	"";
		ИдКолонки	=	гСписДопКолонок.ПолучитьЗначение(Сч, ПрКолонки);
		
		Если гСписДопКолонок.Пометка(Сч) = 0 Тогда
			Если ИдКолонки = "Объект" Тогда
				гТабВыборка.ВидимостьКолонки("Объект", 0);
				Продолжить;
			КонецЕсли;
			Попытка
				гТабВыборка.УдалитьКолонку(ИдКолонки);
			Исключение КонецПопытки;
		Иначе
			Если ИдКолонки = "Объект" Тогда
				гТабВыборка.ВидимостьКолонки("Объект", 1);
				Продолжить;
			КонецЕсли;
			Попытка
			     гТабВыборка.ПолучитьПараметрыКолонки(ИдКолонки);
			Исключение
				Если ИдКолонки = "Статус" Тогда
					гТабВыборка.ВставитьКолонку(ИдКолонки, 2, , , , ПрКолонки, 9);
					гТабВыборка.ВыводитьПиктограммы("Статус");
				Иначе
					_Тип="";	_Длина=0;	_Точность=0;
					ПрочитатьИнформациюОТипеРеквизита(гТипОбъекта, гВидОбъекта, ИдКолонки, _Тип, , _Длина, _Точность);
					Если Найти("Строка,Число,Дата", _Тип) > 0 Тогда
						гТабВыборка.НоваяКолонка(ИдКолонки, _Тип, _Длина, _Точность, ПрКолонки);
					Иначе
						гТабВыборка.НоваяКолонка(ИдКолонки, , , , ПрКолонки);
					КонецЕсли;
				КонецЕсли;
				СписНовыхКолонок.ДобавитьЗначение(ИдКолонки);
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	    
	Если СписНовыхКолонок.РазмерСписка() > 0 Тогда ПрописатьЗначениеКолонки(СписНовыхКолонок) КонецЕсли;

	гСписОтмеченныхДопКолонок.УдалитьВсе();
	Для СчДопКолонок = 1 По гСписДопКолонок.РазмерСписка() Цикл
	    Если гСписДопКолонок.Пометка(СчДопКолонок) = 0 Тогда Продолжить КонецЕсли;
		гСписОтмеченныхДопКолонок.ДобавитьЗначение(гСписДопКолонок.ПолучитьЗначение(СчДопКолонок));
	КонецЦикла;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ДобавитьОсновнойРеквизитОперации(Таб, ИдРекв, ПрРекв="")
	                                                       
	Если		ИдРекв = "Документ" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Документ", 		"Вид документа операции",	"Строка", "", 40, "");
		
	ИначеЕсли	ИдРекв = "ДатаОперации" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "ДатаОперации",	"Дата операции",			"Дата");
		
	ИначеЕсли	ИдРекв = "СуммаОперации" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "СуммаОперации",	"Сумма операции",			"Число", , Метаданные.ДлинаСуммыОперация, Метаданные.ТочностьСуммыОперации);
		
	ИначеЕсли	ИдРекв = "Содержание" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Содержание",	"Содержание операции",		"Строка", , Метаданные.ДлинаСодержанияОперации);
	
	ИначеЕсли	ИдРекв = "Счет" Тогда
	
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Счет",			"Счет дебета или кредита проводки",		"Счет");
		
	ИначеЕсли	ИдРекв = "Дебет.Счет" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Дебет.Счет",	"Счет дебета проводки",		"Счет");
		
	ИначеЕсли	ИдРекв = "Кредит.Счет" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Кредит.Счет",	"Счет кредита проводки",	"Счет");
		
	ИначеЕсли	ИдРекв = "Количество" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Количество",	"Количество проводки",		"Число", , Метаданные.ДлинаКоличестваПроводки, Метаданные.ТочностьКоличестваПроводки);
		
	ИначеЕсли	ИдРекв = "Сумма" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Сумма",			"Сумма проводки",			"Число", , Метаданные.ДлинаСуммыПроводки,		Метаданные.ТочностьСуммыПроводки);
		
	ИначеЕсли	ИдРекв = "Валюта" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Валюта",		"Валюта проводки",			"Справочник", СокрЛП(Метаданные.Валюта));
		
	ИначеЕсли	ИдРекв = "ВалСумма" Тогда
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "ВалСумма",		"Сумма в валюте",			"Число", , Метаданные.ДлинаВалютнойСуммыПроводки, Метаданные.ТочностьВалютнойСуммыПроводки);
		
	ИначеЕсли	ИдРекв = "Субконто" Тогда
	
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "Субконто",		"Субконто дебета или кредита проводки",		"ВидСубконто");
		
	ИначеЕсли	ИдРекв = "СубконтоДт" Тогда
	
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "СубконтоДт",		"Субконто дебета проводки",				"ВидСубконто");
		
	ИначеЕсли	ИдРекв = "СубконтоКт" Тогда
	
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена, "СубконтоКт",		"Субконто кредита проводки",			"ВидСубконто");
		
	Иначе
		
		ДобавитьСтрокуВТаблицу(Таб, Пометка_Выключена,	ИдРекв, 			ПрРекв,									"ВидСубконто");
		
	КонецЕсли;
		
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ВыбратьРеквизиты(Реж)
	
	Если		гТекЗакладка = "Отбор" Тогда
		Таб		= ТабРеквизиты;
		Спис	= гСписокРекв;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Таб		= ТабРеквизиты_Подч;
		Спис	= гСписокРекв_Подч;
	КонецЕсли;
	
	Если Реж = 0 Тогда
		
		Зн  = ""; Поз = ""; Пред = "";
		Если Спис.ВыбратьЗначение(Зн, "", Поз, , 1) = 1 Тогда			
			Спис.ПолучитьЗначение(Поз, Пред);
			РеквМД = РеквизитМД(Зн);
			
			Если гТекЗакладка = "Отбор" Тогда
				НомСтр = "";
				Если 	(Таб.НайтиЗначение(Зн, НомСтр, "РеквИдентиф") = 1) И 
						(Зн <> "СубконтоДт") И (Зн <> "СубконтоКт") И (Зн <> "Субконто") Тогда
							
					Таб.ПолучитьСтрокуПоНомеру(НомСтр);
					Сообщить(Таб.Реквизит + " - этот реквизит уже выбран!");
					Возврат;
				КонецЕсли;
			КонецЕсли;
			          
			Если		(ПустоеЗначение(РеквМД) = 1) И (гТипОбъекта <> "Операция") Тогда
				Возврат;
			ИначеЕсли	(ПустоеЗначение(РеквМД) = 1) И (гТипОбъекта = "Операция") Тогда
				ДобавитьОсновнойРеквизитОперации(Таб, Зн, Пред);
			Иначе
				Таб.НоваяСтрока();
				Таб.ФлВкл		= Пометка_Выключена;
				Таб.Реквизит	= РеквМД.Представление();
				Таб.РеквИдентиф	= РеквМД.Идентификатор;
				Таб.Тип			= РеквМД.Тип;
				Таб.Вид			= РеквМД.Вид;
				Таб.Длина		= РеквМД.Длина;
				Таб.Точность	= РеквМД.Точность;
			КонецЕсли;
			
			Таб.ТекущаяСтрока(Таб.КоличествоСтрок());

			Если		гТекЗакладка = "Отбор" Тогда
				гРекОбъекта			= "";
				гТекСтрокаВТаблице	= "";			
				ОбновитьСписокЗначений();
			ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
				гРекОбъекта_Подч		= "";
				гТекСтрокаВТаблице_Подч	= "";			
				ОбновитьСписокЗначений_Подч();			
			КонецЕсли;			
			Форма.Обновить();			
			ВыбратьЗначения(0);
			
		КонецЕсли;
		
	Иначе	// Если режим = 1
		
		Для Сч = 1 По Спис.РазмерСписка() Цикл
			НомСтр	= "";
			Зн		= Спис.ПолучитьЗначение(Сч);
		    Если Таб.НайтиЗначение(Зн, НомСтр, "РеквИдентиф") = 1 Тогда
		    	Спис.Пометка(Сч, 1);
		    Иначе
		    	Спис.Пометка(Сч, 0);
			КонецЕсли;
		КонецЦикла;
			
		Зн = ""; Поз = "";
		Если Спис.ОтметитьЗначения(Зн, "Отметьте нужные реквизиты", Поз) = 1 Тогда
			Таб.НоваяКолонка("Удалить");
			
			Для Сч = 1 По Спис.РазмерСписка() Цикл
				НомСтр	= ""; Пред = "";
			    Зн		= Спис.ПолучитьЗначение(Сч, Пред);
				Если Таб.НайтиЗначение(Зн, НомСтр, "РеквИдентиф") = 0 Тогда
					Если Спис.Пометка(Сч) = 1 Тогда
						РеквМД	= РеквизитМД(Зн);
						
						Если		(ПустоеЗначение(РеквМД) = 1) И (гТипОбъекта <> "Операция") Тогда
							Возврат;
						ИначеЕсли	(ПустоеЗначение(РеквМД) = 1) И (гТипОбъекта = "Операция") Тогда
							ДобавитьОсновнойРеквизитОперации(Таб, Зн, Пред);
						Иначе
							Таб.НоваяСтрока();
							Таб.ФлВкл		= Пометка_Выключена;
							Таб.Реквизит	= РеквМД.Представление();
							Таб.РеквИдентиф	= РеквМД.Идентификатор;
							Таб.Тип			= РеквМД.Тип;
							Таб.Вид			= РеквМД.Вид;
							Таб.Длина		= РеквМД.Длина;
							Таб.Точность	= РеквМД.Точность;
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Если Спис.Пометка(Сч) = 0 Тогда
						Таб.УстановитьЗначение(НомСтр, "Удалить", 1);
					КонецЕсли;
				КонецЕсли;				
			КонецЦикла;
			
			НомерСтр = "";
			Пока 1 = 1 Цикл
			    Если Таб.НайтиЗначение(1, НомерСтр, "Удалить") = 1 Тогда 
					Таб.УдалитьСтроку(НомерСтр);				    				
					НомерСтр = "";
			    Иначе 
					Прервать;	    				
			    КонецЕсли;
			КонецЦикла;
			Таб.УдалитьКолонку("Удалить");
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура УдалитьРеквизиты(Реж=0)
	Если		гТекЗакладка = "Отбор" Тогда
		Таб		= ТабРеквизиты;
		Спис	= ФормСписЗначений;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Таб		= ТабРеквизиты_Подч;
		Спис	= ФормСписЗначений_Подч;
	КонецЕсли;
	
    Если Реж = "Все" Тогда
    	Таб.УдалитьСтроки();
		Спис.УдалитьВсе();
		
		Если		гТекЗакладка = "Отбор" Тогда
			ДобавитьОсновныеРеквизиты(Таб, гОбъектМД, гТипОбъекта, гВидОбъекта, гНепоказРеквизиты);
		ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
			ДобавитьОсновныеРеквизиты(Таб, гОбъектМД_Подч, гТипОбъекта_Подч, СокрЛП(гВидОбъекта_Подч), гНепоказРеквизиты_Подч);
		КонецЕсли;
	Иначе
		ТекСтр = Таб.ТекущаяСтрока();
		Если ТекСтр = 0 Тогда Возврат КонецЕсли;
		
		Если	(Таб.РеквИдентиф = "Код")		Или (Таб.РеквИдентиф = "Наименование") Или
				(Таб.РеквИдентиф = "Родитель")	Или (Таб.РеквИдентиф = "Владелец")		Или 
				(Таб.РеквИдентиф = "ДатаДок") 	Или (Таб.РеквИдентиф = "НомерДок") 	Тогда
			Предупреждение("Этот реквизит удалять нельзя!");
			Возврат;
		КонецЕсли;
		Таб.УдалитьСтроку(Таб.ТекущаяСтрока());
		Таб.ТекущаяСтрока(?(ТекСтр <= Таб.КоличествоСтрок(), ТекСтр, Таб.КоличествоСтрок()));
	КонецЕсли;
	гРекОбъекта				= "";
	гТекСтрокаВТаблице		= "";

	гРекОбъекта_Подч		= "";
	гТекСтрокаВТаблице_Подч	= "";
	                                      
	ОбновитьСписокЗначений();
	ОбновитьСписокЗначений_Подч();
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ДобавитьКолонкиВГлавнуюТаблицу()
	
	Если		гТипОбъекта = "Справочник" Тогда
		ИмяКолонки_Объект = "Элемент";
	ИначеЕсли	гТипОбъекта = "Документ" Тогда
		ИмяКолонки_Объект = "Документ";
	ИначеЕсли	гТипОбъекта = "Операция" Тогда
		ИмяКолонки_Объект = "Документ операции";
	ИначеЕсли	гТипОбъекта = "Счет" Тогда
		ИмяКолонки_Объект = "Счет";
	КонецЕсли;
	
	гТабВыборка.НоваяКолонка("Пометка",	"Число", 4, 0,	"Вкл",				6);
	гТабВыборка.НоваяКолонка("Статус", 	"Число", 4, 0,	"Статус", 			9);
	гТабВыборка.НоваяКолонка("Объект", , , , 			ИмяКолонки_Объект,	42);
	           
	Если Форма.РежимВыбора() > 0 Тогда
		гТабВыборка.ВидимостьКолонки("Пометка", 0);
	КонецЕсли;

	гТабВыборка.ВыводитьПиктограммы("Пометка");
	гТабВыборка.ВыводитьПиктограммы("Статус");
		
	Если		гТипОбъекта = "Справочник" Тогда
		гОбъектМД = Метаданные.Справочник(гВидОбъекта);
	ИначеЕсли	гТипОбъекта = "Документ" Тогда
		гОбъектМД = Метаданные.Документ(гВидОбъекта);	
	ИначеЕсли	гТипОбъекта = "Операция" Тогда
	КонецЕсли;
КонецПроцедуры

//------------------------------------------------------------------------------------------------
        
Процедура ОтборБезОткрытияФормы()
	
	ТабРеквизиты_Подч.Загрузить(ЗначениеИзСтрокиВнутр(гНастройкаФильтра.Получить("ТабРеквизиты_Подч")));
	
	гВидОбъекта_Подч = гНастройкаФильтра.Получить("ИдПодчиненногоСправочника");
	                       
	ЗаполнитьСписок();
	
	Выбрать();	
    
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ПриПовторномОткрытии()
	
	Если		гТекЗакладка = "Отбор" Тогда
		Спис	= ФормСписЗначений;
		Таб		= ТабРеквизиты;
	ИначеЕсли	гТекЗакладка = "Дополнительная" Тогда
		Спис	= ФормСписЗначений_Подч;
		Таб		= ТабРеквизиты_Подч;
	Иначе
		Спис	= СоздатьОбъект("СписокЗначений");
	КонецЕсли;
	                             
	Если Спис.РазмерСписка() > 0 Тогда
		Спис.Выгрузить(Таб.Значение);
		Спис.ТекущаяСтрока(1);
		Таб.ФлВкл = Пометка_Включена;
	КонецЕсли;
	
	Если ПустоеЗначение(гСписОбъектов) = 0 Тогда
		гТабВыборка.УдалитьСтроки();
		Для Сч = 1 По гСписОбъектов.РазмерСписка() Цикл
			ДобавитьОбъект(гСписОбъектов.ПолучитьЗначение(Сч));
			гТабВыборка.Пометка = Пометка_Включена;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ЗаполнитьТаблицуРеквизитов()
	
	Если гТипОбъекта = "Справочник" Тогда
		                                               
		ДобавитьОсновныеРеквизиты(ТабРеквизиты, гОбъектМД, гТипОбъекта, гВидОбъекта, гНепоказРеквизиты);
		
		Для Сч = 1 По гОбъектМД.Реквизит() Цикл
			РеквМД	= гОбъектМД.Реквизит(Сч);
			ИденМД	= РеквМД.Идентификатор;
			
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(РеквМД.Идентификатор, РеквМД.Представление());
				
				ТабРеквизиты.НоваяСтрока();
				ТабРеквизиты.ФлВкл			= Пометка_Выключена;
				ТабРеквизиты.Реквизит		= РеквМД.Представление();
				ТабРеквизиты.РеквИдентиф	= РеквМД.Идентификатор;
				ТабРеквизиты.Тип			= РеквМД.Тип;
				ТабРеквизиты.Вид			= РеквМД.Вид;
				ТабРеквизиты.Длина			= РеквМД.Длина;
				ТабРеквизиты.Точность		= РеквМД.Точность;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли гТипОбъекта = "Документ" Тогда
		
		ДобавитьОсновныеРеквизиты(ТабРеквизиты, гОбъектМД, гТипОбъекта, гВидОбъекта, гНепоказРеквизиты);
		
		//- общие реквизиты
		Для Сч = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
			РеквМД	= Метаданные.ОбщийРеквизитДокумента(Сч);
			ИденМД = РеквМД.Идентификатор;
			ПредМД = РеквМД.Представление();
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(ИденМД, ПредМД);
				гСписокОбщРекв.ДобавитьЗначение(ИденМД, ПредМД);
				ТабРеквизиты.НоваяСтрока();
				ТабРеквизиты.ФлВкл			= Пометка_Выключена;
				ТабРеквизиты.Реквизит    	= ПредМД;
				ТабРеквизиты.РеквИдентиф 	= ИденМД;
				ТабРеквизиты.Тип			= РеквМД.Тип;
				ТабРеквизиты.Вид			= РеквМД.Вид;
				ТабРеквизиты.Длина			= РеквМД.Длина;
				ТабРеквизиты.Точность		= РеквМД.Точность;			
			КонецЕсли;
		КонецЦикла;
		
		//- реквизиты шапки
		Для Сч = 1 По гОбъектМД.РеквизитШапки() Цикл
			РеквМД	= гОбъектМД.РеквизитШапки(Сч);
			ИденМД	= РеквМД.Идентификатор;
			ПредМД	= РеквМД.Представление();
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(ИденМД, ПредМД);
				гСписокРеквШапки.ДобавитьЗначение(ИденМД, ПредМД);
				ТабРеквизиты.НоваяСтрока();
				ТабРеквизиты.ФлВкл			= Пометка_Выключена;
				ТабРеквизиты.Реквизит	    = ПредМД;
				ТабРеквизиты.РеквИдентиф	= ИденМД;
				ТабРеквизиты.Тип			= РеквМД.Тип;
				ТабРеквизиты.Вид			= РеквМД.Вид;
				ТабРеквизиты.Длина			= РеквМД.Длина;
				ТабРеквизиты.Точность		= РеквМД.Точность;			
			КонецЕсли;
		КонецЦикла;
		
		//- реквизиты табл. части
		Для Сч = 1 По гОбъектМД.РеквизитТабличнойЧасти() Цикл
			РеквМД	= гОбъектМД.РеквизитТабличнойЧасти(Сч);
			ИденМД	= РеквМД.Идентификатор;
			ПредМД	= РеквМД.Представление();
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(ИденМД, ПредМД);
				гСписокРеквТабДок.ДобавитьЗначение(ИденМД, ПредМД);
				ТабРеквизиты.НоваяСтрока();
				ТабРеквизиты.ФлВкл			= Пометка_Выключена;
				ТабРеквизиты.Реквизит		= ПредМД;
				ТабРеквизиты.РеквИдентиф	= ИденМД;
				ТабРеквизиты.Тип			= РеквМД.Тип;
				ТабРеквизиты.Вид			= РеквМД.Вид;
				ТабРеквизиты.Длина			= РеквМД.Длина;
				ТабРеквизиты.Точность		= РеквМД.Точность;			
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли гТипОбъекта = "Операция" Тогда
		
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Документ");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "ДатаОперации");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "СуммаОперации");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Содержание");
		
		гСписокРекв.ДобавитьЗначение("Документ", 		"Вид документа операции");
		гСписокРекв.ДобавитьЗначение("ДатаОперации",	"Дата операции");
		гСписокРекв.ДобавитьЗначение("СуммаОперации",	"Сумма операции");
		гСписокРекв.ДобавитьЗначение("Содержание",		"Содержание операции");
		
		//реквизиты операций
		Для Инд = 1 По Метаданные.РеквизитОперации() Цикл
			РеквМД	= Метаданные.РеквизитОперации(Инд);
			ИденМД	= РеквМД.Идентификатор;
			ПредМД	= РеквМД.Представление();			
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(ИденМД, ПредМД);
				ДобавитьСтрокуВТаблицу(ТабРеквизиты, Пометка_Выключена, ИденМД, ПредМД, РеквМД.Тип, РеквМД.Вид, РеквМД.Длина, РеквМД.Точность);
			КонецЕсли;
		КонецЦикла;
        
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Счет");
		
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Дебет.Счет");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Кредит.Счет");
        
		гСписокРекв.ДобавитьЗначение("Счет",			"Счет дебета или кредита проводки");
		гСписокРекв.ДобавитьЗначение("Дебет.Счет",		"Счет дебета проводки");
		гСписокРекв.ДобавитьЗначение("Кредит.Счет",		"Счет кредита проводки");
		                                                       
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Субконто");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "СубконтоДт");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "СубконтоКт");
		
		гСписокРекв.ДобавитьЗначение("Субконто",		"Субконто дебета или кредита проводки");
		гСписокРекв.ДобавитьЗначение("СубконтоДт",		"Субконто дебета проводки");
		гСписокРекв.ДобавитьЗначение("СубконтоКт",		"Субконто кредита проводки");
		
		Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
			ИдРекв	= "СубконтоДт"					+ Строка(Сч);
			ПрРекв	= "Субконто дебета проводки "	+ Строка(Сч);
			гСписокРекв.ДобавитьЗначение(ИдРекв, ПрРекв);
			ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, ИдРекв, ПрРекв);
		КонецЦикла;
		
		Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
			ИдРекв	= "СубконтоКт"					+ Строка(Сч);
			ПрРекв	= "Субконто кредита проводки "	+ Строка(Сч);
			гСписокРекв.ДобавитьЗначение(ИдРекв, ПрРекв);
			ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, ИдРекв, ПрРекв);
		КонецЦикла;	

		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Количество");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Сумма");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "Валюта");
		ДобавитьОсновнойРеквизитОперации(ТабРеквизиты, "ВалСумма");

		гСписокРекв.ДобавитьЗначение("Количество",	"Количество проводки");
		гСписокРекв.ДобавитьЗначение("Сумма",		"Сумма проводки");
		гСписокРекв.ДобавитьЗначение("Валюта",		"Валюта проводки");
		гСписокРекв.ДобавитьЗначение("ВалСумма",	"Сумма в валюте");
		
		//реквизиты проводок
		Для Инд = 1 По Метаданные.РеквизитПроводки() Цикл
			РеквМД	= Метаданные.РеквизитПроводки(Инд);
			ИденМД	= РеквМД.Идентификатор;
			ПредМД	= РеквМД.Представление();			
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(ИденМД, ПредМД);
				ДобавитьСтрокуВТаблицу(ТабРеквизиты, Пометка_Выключена, ИденМД, ПредМД, РеквМД.Тип, РеквМД.Вид, РеквМД.Длина, РеквМД.Точность);
			КонецЕсли;
		КонецЦикла;
		
		//- общие реквизиты
		Для Сч = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
			РеквМД	= Метаданные.ОбщийРеквизитДокумента(Сч);
			ИденМД = РеквМД.Идентификатор;
			ПредМД = РеквМД.Представление();
			Если (ПустоеЗначение(гНепоказРеквизиты) = 1) Или (гНепоказРеквизиты.Принадлежит(ИденМД) = 0) Тогда
				гСписокРекв.ДобавитьЗначение(ИденМД, ПредМД);
				ДобавитьСтрокуВТаблицу(ТабРеквизиты, Пометка_Выключена, ИденМД, ПредМД, РеквМД.Тип, РеквМД.Вид, РеквМД.Длина, РеквМД.Точность);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

Процедура ПриОткрытии()
    
	ЗаполнитьНепоказываемыеРеквизиты(гНепоказРеквизиты, гВидОбъекта);
	
	ЗаполнитьТаблицуРеквизитов();
	    
	гСписДопКолонок.ДобавитьЗначение("Статус",	"Статус");
	гСписДопКолонок.Пометка(гСписДопКолонок.РазмерСписка(), 1);
	гСписДопКолонок.ДобавитьЗначение("Объект",	"Основное представление");
	гСписДопКолонок.Пометка(гСписДопКолонок.РазмерСписка(), 1);
	
	ТабРеквизиты.ВыбратьСтроки();
	Пока ТабРеквизиты.ПолучитьСтроку() = 1 Цикл
		Пред	=	ТабРеквизиты.Реквизит;
		Иден	=	ТабРеквизиты.РеквИдентиф;
		
		Если		гТипОбъекта = "Справочник" Тогда
			Если		(Иден = "Наименование")	И ((гОбъектМД.ДлинаНаименования = 0)	Или (гОбъектМД.ОсновноеПредставление = "ВВидеНаименования"))	Тогда
				Продолжить;
			ИначеЕсли	(Иден = "Код")			И ((гОбъектМД.ДлинаКода = 0)			Или (гОбъектМД.ОсновноеПредставление = "ВВидеКода")) 			Тогда
				Продолжить;
			КонецЕсли;
		ИначеЕсли	гТипОбъекта = "Документ" Тогда
			Если 	гСписокРеквТабДок.Принадлежит(Иден) = 1							Тогда
				Если гОбъектМД.РеквизитТабличнойЧасти(Иден).ИтогПоКолонке = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли	гТипОбъекта = "Операция" Тогда
			Если гСписокРеквизитовПроводки.Принадлежит(Иден) = 1	Тогда Продолжить КонецЕсли;
			Если Иден	=	"Документ" 								Тогда Продолжить КонецЕсли;
		КонецЕсли;
		
		гСписДопКолонок.ДобавитьЗначение(Иден, Пред);
	КонецЦикла;
	
	Если гФлБезОткрытияФормы = 1 Тогда
		ОтборБезОткрытияФормы();
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли гНеОткрывать = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если		гТипОбъекта = "Справочник" Тогда
		                             
		Добавок = "";
		Если ПустоеЗначение(гВладелецСправочника) = 0 Тогда
			Добавок = " (" + гВладелецСправочника + ")";
		КонецЕсли;
		
		ИмяГлавнойЗакладки = "Выбор элементов";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти элементы");
		Если ФормСписДействий.РазмерСписка() > 0 Тогда
			Форма.Заголовок("Групповая обработка эл-ов справочника:  " + гОбъектМД.Представление() + Добавок, 0);
		Иначе
			Форма.Заголовок("Выбор элементов справочника:  " + гОбъектМД.Представление() + Добавок, 0);
		КонецЕсли;
		
	ИначеЕсли	гТипОбъекта = "Документ" Тогда
		
		ИмяГлавнойЗакладки = "Выбор документов";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти документы");
		Если ФормСписДействий.РазмерСписка() > 0 Тогда
			Форма.Заголовок("Групповая обработка док-ов вида:  " + гОбъектМД.Представление(), 0);
		Иначе
			Форма.Заголовок("Выбор документов вида:  " + гОбъектМД.Представление(), 0);
		КонецЕсли;				
		
	ИначеЕсли	гТипОбъекта = "Операция" Тогда
		
		ИмяГлавнойЗакладки = "Выбор операций";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти операции");
		Если ФормСписДействий.РазмерСписка() > 0 Тогда
			Форма.Заголовок("Групповая обработка операций документов", 0);
		Иначе
			Форма.Заголовок("Выбор операций документов", 0);
		КонецЕсли;
		
	ИначеЕсли	гТипОбъекта = "Счет" Тогда
		
		ИмяГлавнойЗакладки = "Выбор счетов";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти счета");
		Если ФормСписДействий.РазмерСписка() > 0 Тогда
			Форма.Заголовок("Групповая обработка бухгалтерских счетов", 0);
		Иначе
			Форма.Заголовок("Выбор счетов", 0);
		КонецЕсли;
		
	КонецЕсли;
	
	Если	гИспользоватьЗакладки <> "Нет" Тогда
		Форма.Закладки.УдалитьВсе();
		Форма.Закладки.ДобавитьЗначение("Главная",			ИмяГлавнойЗакладки);
		Форма.Закладки.ДобавитьЗначение("Отбор",			"Отбор по значениям реквизитов");
		Форма.Закладки.ДобавитьЗначение("Общие",			"Общие свойства");
	КонецЕсли;
	
	Если гТипОбъекта = "Справочник" Тогда		
		Для СчПодчСправочников = 1 По Метаданные.Справочник() Цикл
			ПодчСпр = Метаданные.Справочник(СчПодчСправочников);
			ВладелецПодч = ПодчСпр.Владелец;
			Если СокрЛП(ВладелецПодч) = "Метаданные" Тогда Продолжить КонецЕсли;
			Если ВладелецПодч.Идентификатор = гВидОбъекта Тогда
				Если гНепоказРеквизиты_Все.Получить(ПодчСпр.Идентификатор) = "ВесьСправочник" Тогда Продолжить КонецЕсли;
				ФормСписПодчСправочников.ДобавитьЗначение(ПодчСпр.Идентификатор, ПодчСпр.Представление());
			КонецЕсли;
		КонецЦикла;
		Если (ФормСписПодчСправочников.РазмерСписка() > 0) И (гИспользоватьЗакладки <> "Нет") Тогда
			Форма.Закладки.ДобавитьЗначение("Дополнительная",	"Отбор по подчиненным элементам");
			ФормСписПодчСправочников.ТекущаяСтрока(1);
			ПриВыбореПодчСправочника();
		КонецЕсли;
	КонецЕсли;
	
	гТекЗакладка = "Главная";
	
	ПриВыбореЗакладки(1, гТекЗакладка);

	Если ФормСписДействий.РазмерСписка() > 0 Тогда
		Форма.ФормСписДействий.Видимость(1);
		Форма.ФормЗаголовок_Действие.Видимость(1);
	Иначе
		Форма.ФормСписДействий.Видимость(0);
		Форма.ФормЗаголовок_Действие.Видимость(0);
	КонецЕсли;
	
	Если гИспользоватьЗакладки = "Нет" Тогда
		Форма.КнЗаполнитьСписок.Видимость(0);
		Форма.КнВыбратьПоказываемыеРеквизиты.Видимость(0);
		Форма.КнФиксироватьКолонки.Видимость(0);
	КонецЕсли;
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------
                                                                                                    
Процедура ВводНового()
	
	
	гТипОбъекта			=	СокрЛП(гТипОбъекта_ДляСохранения);
	гВидОбъекта			=	СокрЛП(гВидОбъекта_ДляСохранения);

	Если		гТипОбъекта = "Справочник" Тогда
		гОбъектМД = Метаданные.Справочник(гВидОбъекта);
	ИначеЕсли	гТипОбъекта = "Документ" Тогда
		гОбъектМД = Метаданные.Документ(гВидОбъекта);
	ИначеЕсли	гТипОбъекта = "Операция" Тогда
	КонецЕсли;
	         
	Если гИспользоватьЗакладки = "Нет" Тогда
		Поз	=	0;
		Форма.КнЗаполнитьСписок.Видимость(0);
		Форма.КнВыбратьПоказываемыеРеквизиты.Видимость(0);
		Форма.КнФиксироватьКолонки.Видимость(0);
	Иначе
		Поз	=	Форма.Закладки.НайтиЗначение("Дополнительная");
	КонецЕсли;
	
	Если Найти("Документ,Операция", гТипОбъекта) > 0 Тогда
		Если Поз > 0 Тогда
			Форма.Закладки.УдалитьЗначение(Поз);
			ТабРеквизиты_Подч.УдалитьСтроки();
		КонецЕсли;
	Иначе
		Если (Поз = 0) И (ФормСписПодчСправочников.РазмерСписка() > 0) И (гИспользоватьЗакладки <> "Нет") Тогда
			Форма.Закладки.ДобавитьЗначение("Дополнительная",	"Отбор по подчиненным элементам");

			гТипОбъекта_Подч	= "Справочник";
			гВидОбъекта_Подч	= ФормСписПодчСправочников.ПолучитьЗначение(ФормСписПодчСправочников.ТекущаяСтрока());
			гОбъектМД_Подч		= Метаданные.Справочник(СокрЛП(гВидОбъекта_Подч));
		
			гНепоказРеквизиты_Подч = СоздатьОбъект("СписокЗначений");
			ЗаполнитьНепоказываемыеРеквизиты(гНепоказРеквизиты_Подч, СокрЛП(гВидОбъекта_Подч));
			
			гРекОбъекта_Подч		= "";
			гТекСтрокаВТаблице_Подч	= "";
			ОбновитьСписокЗначений_Подч();	
		КонецЕсли;
	КонецЕсли;
	
	ТабРеквизиты.ВыводитьПиктограммы("ФлВкл");
	ТабРеквизиты_Подч.ВыводитьПиктограммы("ФлВкл");
	   
	гТабВыборка.ВыводитьПиктограммы("Пометка");
	гТабВыборка.ВыводитьПиктограммы("Статус");
	
	ЗаполнитьНепоказываемыеРеквизиты(гНепоказРеквизиты, гВидОбъекта);
	
	Если		гТипОбъекта = "Справочник" Тогда
		ИмяГлавнойЗакладки = "Выбор элементов";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти элементы");
	ИначеЕсли	гТипОбъекта = "Документ" Тогда
		ИмяГлавнойЗакладки = "Выбор документов";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти документы");
	ИначеЕсли	гТипОбъекта = "Операция" Тогда
		ИмяГлавнойЗакладки = "Выбор операций";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти операции");
	ИначеЕсли	гТипОбъекта = "Счет" Тогда
		ИмяГлавнойЗакладки = "Выбор счетов";
		Форма.КнЗаполнитьСписок.Заголовок("&Найти счета");
	КонецЕсли;
	
	ВыбратьПоказываемыеРеквизиты(1);

	гРекОбъекта			= "";
	гТекСтрокаВТаблице	= "";			
	ОбновитьСписокЗначений();
	
КонецПроцедуры

//--------------------------------------------------------------------------------------------------

гСписОтмеченныхДопКолонок	=	СоздатьОбъект("СписокЗначений");

гСписОтмеченныхДопКолонок.ДобавитьЗначение("Статус");
гСписОтмеченныхДопКолонок.ДобавитьЗначение("Объект");

гСписВидов					=	СоздатьОбъект("СписокЗначений");

гСписСправочников = СоздатьОбъект("СписокЗначений");
Для Сч = 1 По Метаданные.Справочник() Цикл
	ИденМД = Метаданные.Справочник(Сч).Идентификатор;
	ПредМД = Метаданные.Справочник(Сч).Представление();
	гСписСправочников.ДобавитьЗначение(ИденМД, ПредМД);
КонецЦикла;
гСписВидов.ДобавитьЗначение(гСписСправочников, "Справочник");

гСписДокументов		= СоздатьОбъект("СписокЗначений");
гСписБухДокументов	= СоздатьОбъект("СписокЗначений");
Для Сч = 1 По Метаданные.Документ() Цикл
	ИденМД = Метаданные.Документ(Сч).Идентификатор;
	ПредМД = Метаданные.Документ(Сч).Представление();
	гСписДокументов.ДобавитьЗначение(ИденМД, ПредМД);
	Если СокрЛП(Метаданные.Документ(Сч).БухгалтерскийУчет) = "1" Тогда
		гСписБухДокументов.ДобавитьЗначение(ИденМД, ПредМД);
	КонецЕсли;
КонецЦикла;
гСписВидов.ДобавитьЗначение(гСписДокументов, "Документ");

гСписПеречислений = СоздатьОбъект("СписокЗначений");
Для Сч = 1 По Метаданные.Перечисление() Цикл
	ИденМД = Метаданные.Перечисление(Сч).Идентификатор;
	ПредМД = Метаданные.Перечисление(Сч).Представление();
	гСписПеречислений.ДобавитьЗначение(ИденМД, ПредМД);
КонецЦикла;
гСписВидов.ДобавитьЗначение(гСписПеречислений, "Перечисление");

//общие реквизиты документов
Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
	Рекв = Метаданные.ОбщийРеквизитДокумента(Инд);
	гСписокОбщРекв.ДобавитьЗначение(Рекв.Идентификатор, Рекв.Представление());
КонецЦикла;

Если Метаданные.ПланСчетов(1).Выбран() = 1 Тогда
	гСписПлановСчетов = СоздатьОбъект("СписокЗначений");
	Для Сч = 1 По Метаданные.ПланСчетов() Цикл
		ИденМД = Метаданные.ПланСчетов(Сч).Идентификатор;
		ПредМД = Метаданные.ПланСчетов(Сч).Представление();
		гСписПлановСчетов.ДобавитьЗначение(ИденМД, ПредМД);
	КонецЦикла;
	гСписВидов.ДобавитьЗначение(гСписПлановСчетов, "ПланСчетов");
	
	гСписРеквизитовОпераций		= СоздатьОбъект("СписокЗначений");
	гСписокРеквизитовПроводки	= СоздатьОбъект("СписокЗначений");
	
	гСписРеквизитовОпераций.ДобавитьЗначение("Документ",		"Вид документа операции");
	гСписРеквизитовОпераций.ДобавитьЗначение("ДатаОперации",	"Дата операции");
	гСписРеквизитовОпераций.ДобавитьЗначение("СуммаОперации",	"Сумма операции");
	гСписРеквизитовОпераций.ДобавитьЗначение("Содержание",		"Содержание операции");
	
	//реквизиты операций	
	Для Сч = 1 По Метаданные.РеквизитОперации() Цикл
		Рекв = Метаданные.РеквизитОперации(Сч);
		гСписРеквизитовОпераций.ДобавитьЗначение(Рекв.Идентификатор, Рекв.Представление());
	КонецЦикла;
	
	//реквизиты проводок
	Для Сч = 1 По Метаданные.РеквизитПроводки() Цикл
		Рекв = Метаданные.РеквизитПроводки(Сч);
		гСписокРеквизитовПроводки.ДобавитьЗначение(Рекв.Идентификатор, Рекв.Представление() + " проводки");
	КонецЦикла;
	
	гСписокРеквизитовПроводки.ДобавитьЗначение("Счет",			"Счет дебета или кредита проводки");
	
	гСписокРеквизитовПроводки.ДобавитьЗначение("Дебет.Счет",	"Счет дебета проводки");
	гСписокРеквизитовПроводки.ДобавитьЗначение("Кредит.Счет",	"Счет кредита проводки");
	гСписокРеквизитовПроводки.ДобавитьЗначение("Сумма",			"Сумма проводки");
	гСписокРеквизитовПроводки.ДобавитьЗначение("ВалСумма",		"Валютная сумма проводки");
	гСписокРеквизитовПроводки.ДобавитьЗначение("Количество",	"Количество проводки");
	гСписокРеквизитовПроводки.ДобавитьЗначение("Валюта",		"Валюта проводки");
	    
	гСписокРеквизитовПроводки.ДобавитьЗначение("СубконтоДт");
	гСписокРеквизитовПроводки.ДобавитьЗначение("СубконтоКт");
	гСписокРеквизитовПроводки.ДобавитьЗначение("Субконто");
	
	Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
		ПредМД = "Субконто дебета проводки " + Строка(Сч);
		гСписокРеквизитовПроводки.ДобавитьЗначение("СубконтоДт" + Строка(Сч), ПредМД);
	КонецЦикла;
	
	Для Сч = 1 По МаксимальноеКоличествоСубконто() Цикл
		ПредМД = "Субконто кредита проводки " + Строка(Сч);
		гСписокРеквизитовПроводки.ДобавитьЗначение("СубконтоКт" + Строка(Сч), ПредМД);
	КонецЦикла;
	
КонецЕсли;

СписМетаОбъектов = СоздатьОбъект("СписокЗначений");
СписМетаОбъектов.ДобавитьЗначение("Справочник");
СписМетаОбъектов.ДобавитьЗначение("Документ");
Если Метаданные.ПланСчетов(1).Выбран() = 1 Тогда
	СписМетаОбъектов.ДобавитьЗначение("Операция");
	//СписМетаОбъектов.ДобавитьЗначение("Счет");	//	Это планируется...
КонецЕсли; 

//-------	Пиктограммы		------------------------------------------------------------------------
    
Пометка_Включена				= 16; 
Пометка_Выключена				= 15;
Статус_Док_Записан				= 1;
Статус_Док_Проведен				= 2;
Статус_Док_Помечен				= 7;
Статус_Опер_Включена			= 8; 
Статус_Опер_Выключена			= 9;
Статус_Опер_Удалена				= 10;
Статус_Спр_Группа				= 13;
Статус_Спр_Элемент				= 14;
Статус_Спр_Группа_Удалена		= 11;
Статус_Спр_Элемент_Удален		= 12;

Статус_Опер_Проведена			= 17;
Статус_Опер_Записана			= 18;
Статус_Опер_Проведена_Выключена	= 19;
Статус_Опер_Записана_Выключена	= 20;
Статус_Опер_Записана_Удалена	= 21;

//--------------------------------------------------------------------------------------------------

гБезГрупп				=	0;
гНеОткрывать			=	0;
    
ИскатьВнешниеОбработки	=	0;

Если ПустоеЗначение(Форма.Параметр) = 1 Тогда
                
	Поз = "";
	Если СписМетаОбъектов.ВыбратьЗначение(гТипОбъекта, "Выберите тип объекта", Поз, , 0) = 1 Тогда
		СписВидов = гСписВидов.Получить(гТипОбъекта);
		Если гТипОбъекта <> "Операция" Тогда
			Если СписВидов.ВыбратьЗначение(гВидОбъекта, "Выберите вид объекта", Поз, , 0) = 0 Тогда
				гТипОбъекта		= "";
				гНеОткрывать	= 1;
			КонецЕсли;
		КонецЕсли;
	Иначе
		гНеОткрывать = 1;
	КонецЕсли;
	
	ИскатьВнешниеОбработки		=	1;
	гЗапоминатьНомераСтрок		=	1;
	
Иначе	
	гПараметрыВызова			=	Форма.Параметр;

	гИмяОткрывшейФормы			=	гПараметрыВызова.Получить("ИмяВызвавшейФормы");
	гБуфер						=	гПараметрыВызова.Получить("Буфер");
	
	ФормДатаНач					=	гПараметрыВызова.Получить("ДатаНачалаИнтервала");
	ФормДатаКон	 				=	гПараметрыВызова.Получить("ДатаКонцаИнтервала");
	
	гТипОбъекта					=	гПараметрыВызова.Получить("Тип");
	гВидОбъекта					=	гПараметрыВызова.Получить("Вид");
	
	гВладелецСправочника		=	гПараметрыВызова.Получить("Владелец");
	гБезГрупп					=	гПараметрыВызова.Получить("БезГрупп");
	
	гНепоказРеквизиты_Все		=	гПараметрыВызова.Получить("НепоказываемыеРеквизиты");
	гИспользоватьЗакладки		=	гПараметрыВызова.Получить("ИспользоватьЗакладки");
	
	Действия					=	гПараметрыВызова.Получить("Действия");
	гСписОбъектов				=	гПараметрыВызова.Получить("Объекты");
	
	гЗапоминатьНомераСтрок		=	гПараметрыВызова.Получить("ЗапоминатьНомераСтрок");
	
	гФлБезОткрытияФормы			=	гПараметрыВызова.Получить("НеОткрыватьФорму");
	гНастройкаФильтра			=	гПараметрыВызова.Получить("НастройкаФильтра");
	
КонецЕсли;

гТипОбъекта_ДляСохранения		=	гТипОбъекта;
гВидОбъекта_ДляСохранения		=	гВидОбъекта;
	
Если ТипЗначенияСтр(Действия) = "СписокЗначений" Тогда
	ИскатьВнешниеОбработки		=	1;
	гЗапоминатьНомераСтрок		=	1;
КонецЕсли;

Форма.ИспользоватьЗакладки(?(гИспользоватьЗакладки="Нет", 0, 1));

ДобавитьКолонкиВГлавнуюТаблицу();

Если ПустоеЗначение(Действия) = 0 Тогда
	Для Сч = 1 По Действия.РазмерСписка() Цикл
		ИмяФормы = "";
		ИмяДействия = Действия.ПолучитьЗначение(Сч, ИмяФормы);
		ФормСписДействий.ДобавитьЗначение(ИмяФормы, ИмяДействия);
	КонецЦикла;
КонецЕсли;

гНепоказРеквизиты = СоздатьОбъект("СписокЗначений");
Если ТипЗначенияСтр(гНепоказРеквизиты_Все) <> "СписокЗначений" Тогда
	гНепоказРеквизиты_Все	= СоздатьОбъект("СписокЗначений");
КонецЕсли;

Если ТипЗначенияСтр(гСписОбъектов) <> "СписокЗначений" Тогда
	Если СокрЛП(гСписОбъектов) = "ВсеВИнтервале" Тогда
		ЗаполнитьСписок();
	КонецЕсли;
	гСписОбъектов = СоздатьОбъект("СписокЗначений");
Иначе
	Для Сч = 1 По гСписОбъектов.РазмерСписка() Цикл
		ДобавитьОбъект(гСписОбъектов.ПолучитьЗначение(Сч));
		гТабВыборка.Пометка = Пометка_Выключена + гСписОбъектов.Пометка(Сч);
	КонецЦикла;
КонецЕсли;


Если ПустоеЗначение(ФормДатаНач) = 1 Тогда
	ФормДатаНач = Дата("01.01.1900");
КонецЕсли;

Если ПустоеЗначение(ФормДатаКон) = 1 Тогда
	ФормДатаКон = Дата("01.01.2050");
КонецЕсли;

ТабРеквизиты.ВставитьКолонку("ФлВкл", "Число", 4, 0,,"Вкл", 4,,);
ТабРеквизиты.ВставитьКолонку("Реквизит");
ТабРеквизиты.ВставитьКолонку("РеквИдентиф");

ТабРеквизиты.ВставитьКолонку("Значение");
ТабРеквизиты.ВставитьКолонку("ЗнакУсловия");

ТабРеквизиты.ВставитьКолонку("Тип");
ТабРеквизиты.ВставитьКолонку("Вид");
ТабРеквизиты.ВставитьКолонку("Длина");
ТабРеквизиты.ВставитьКолонку("Точность");

ТабРеквизиты.ВставитьКолонку("ВидСубконто");


ТабРеквизиты.ВидимостьКолонки("Значение",		0);
ТабРеквизиты.ВидимостьКолонки("Тип",			0);
ТабРеквизиты.ВидимостьКолонки("Вид",			0);
ТабРеквизиты.ВидимостьКолонки("Длина",			0);
ТабРеквизиты.ВидимостьКолонки("Точность",		0);
ТабРеквизиты.ВидимостьКолонки("ВидСубконто",	0);
ТабРеквизиты.ВидимостьКолонки("РеквИдентиф",	0);
ТабРеквизиты.ВидимостьКолонки("ЗнакУсловия",	0);

ТабРеквизиты_Подч.Загрузить(ТабРеквизиты);

ТабРеквизиты.ВыводитьПиктограммы("ФлВкл");
ТабРеквизиты_Подч.ВыводитьПиктограммы("ФлВкл");

гСписокРекв_Подч		= СоздатьОбъект("СписокЗначений");

ВклПомеч				= 1;
ВклПроведенныеВсе		= 1;
ВклВключенныеВсе		= 1;

РасположениеФайла(гСтрПуть, гИмяФайла);

гИмяДаннойОбработки = гСтрПуть + гИмяФайла;

Если ПустоеЗначение(гИмяДаннойОбработки) = 1 Тогда
	гИмяДаннойОбработки =	"Обработка.ПодборОбъектов";
	КаталогДопОбработок	=	КаталогИБ() + "ExtForms\";
Иначе
	КаталогДопОбработок	=	гСтрПуть;
КонецЕсли;

Если (ФС.СуществуетФайл(КаталогДопОбработок + "UCPlugIn.txt") = 1) И (ИскатьВнешниеОбработки = 1) Тогда
	Текст = СоздатьОбъект("Текст");
	Текст.Открыть(КаталогДопОбработок + "UCPlugIn.txt");
	Для Сч = 1 По Текст.КоличествоСтрок() Цикл
	    Стр = СокрЛП(Текст.ПолучитьСтроку(Сч));
		
		Если (ПустаяСтрока(Стр) = 1) Или (Найти(Стр, "//") > 0) Тогда Продолжить КонецЕсли;
		
		Если Найти(Стр, ".ert") > 0 Тогда 
		
			СписокПараметровОбработки	=	СоздатьОбъект("СписокЗначений");
			СписокПараметровОбработки.ИзСтрокиСРазделителями(СтрЗаменить(Стр, СимволТабуляции, ""));
			
			Если ПустоеЗначение(СписокПараметровОбработки) = 1 Тогда Продолжить КонецЕсли;
            
			Файл						=	ПолучитьПустоеЗначение();
			ИмяОбработки				=	ПолучитьПустоеЗначение();
			ТипОбъектаОбработки			=	ПолучитьПустоеЗначение();
			ВидОбъектаОбработки			=	ПолучитьПустоеЗначение();
			
			Попытка	Файл				=	СписокПараметровОбработки.ПолучитьЗначение(1)	Исключение	КонецПопытки;
			Попытка	ИмяОбработки		=	СписокПараметровОбработки.ПолучитьЗначение(2)	Исключение	КонецПопытки;
			Попытка	ТипОбъектаОбработки	=	СписокПараметровОбработки.ПолучитьЗначение(3)	Исключение	КонецПопытки;
			Попытка	ВидОбъектаОбработки	=	СписокПараметровОбработки.ПолучитьЗначение(4)	Исключение	КонецПопытки;
			                              
			Если (ПустоеЗначение(ТипОбъектаОбработки) = 0) И (ТипОбъектаОбработки <> гТипОбъекта)	Тогда	Продолжить	КонецЕсли;
			Если (ПустоеЗначение(ВидОбъектаОбработки) = 0) И (ВидОбъектаОбработки <> гВидОбъекта)	Тогда	Продолжить	КонецЕсли;
				
			Если ФС.СуществуетФайл(КаталогДопОбработок + Файл) = 0									Тогда	Продолжить	КонецЕсли;
		                                                                
			ФормСписДействий.ДобавитьЗначение(КаталогДопОбработок + Файл, ?(ПустоеЗначение(ИмяОбработки)=1, Файл, ИмяОбработки));
		
		КонецЕсли;		
		
	КонецЦикла;	
КонецЕсли;



//------- Настроечные Флаги ------------------------------------------------------------------------

гБезГрупп						= 1;	// если 1, то группы не будут выбираться интерактивно
ФормФлВключатьГруппы			= 0;    // если 1, то в выборку будут попадать также группы элементов

ФормФлОчищать					= 1;	// если 0, то таблица объектов при каждом поиске будет дополнятся объектами без очистки
ФормФлОграничитьСписокУсловий	= 1;	// если 1, то из списка условий пропадут второстепенные условия (">","<" и др.)

//--------------------------------------------------------------------------------------------------
//**************************************************************************************************
//--------------------------------------------------------------------------------------------------


//------------       Непоказываемые реквизиты объектов          ------------------------------------

//	Здесь указываются те реквизиты, по которым запрещено производить отбор (они не будут показываться)

//гНепоказРеквизиты_Все.ДобавитьЗначение("РозничнаяЦена",				"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("МелкооптоваяЦена",			"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("БазоваяЕдиницаИзмерения",		"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("ВалютаЗакупки",				"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("ВалютаПродажи",				"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("НомерГТД",					"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("ОптоваяЦена",					"Номенклатура");
//гНепоказРеквизиты_Все.ДобавитьЗначение("ЦенаПриобретения",			"Номенклатура");

//--------------------------------------------------------------------------------------------------

