//_____________________________________________________________________________
Перем ТекущаяСтраница;
Перем АдресОрганизации;
Перем ПочтовыйАдресОрганизации;
Перем НеЗакрывать;

//_____________________________________________________________________________
Процедура ПриВводеНазванияОрганизации()

	Если (ПустаяСтрока(ОфициальноеНазваниеОрганизации) = 1) и
		 (ПустаяСтрока(НаименованиеПлательщикаПриПеречисленииНалогов) = 1) Тогда
		 	
		ОфициальноеНазваниеОрганизации = НазваниеОрганизации;
		НаименованиеПлательщикаПриПеречисленииНалогов = НазваниеОрганизации;
		
	ИначеЕсли Вопрос("Изменить полное название организации и наименование плательщика
						 |в платежных поручениях на перечисление налогов?", "Да+Нет") = "Да" Тогда
					 	
		ОфициальноеНазваниеОрганизации = НазваниеОрганизации;
		НаименованиеПлательщикаПриПеречисленииНалогов = НазваниеОрганизации;
	КонецЕсли;
                                       
КонецПроцедуры // ПриВводеНазванияОрганизации()

//_____________________________________________________________________________
Процедура ПоказатьРеквизитыСчета();
  	СтрОрганизация=""; СтрБанк=""; РасчСчет=""; БИК=""; КоррСчет="";
	Если БанковскийСчет.Выбран() = 1 Тогда
		ОсновнойБанковскийСчет = СоздатьОбъект("Справочник.БанковскиеСчета");
		ОсновнойБанковскийСчет.НайтиЭлемент(БанковскийСчет);
		БанковскийСчет=ОсновнойБанковскийСчет.ТекущийЭлемент();
		глПлатежныеРеквизиты(БанковскийСчет, СтрОрганизация, СтрБанк, РасчСчет, БИК, КоррСчет, , , 2);
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПоКнопкеВводаАдреса(Адрес1, Адрес2="")
	глВводАдреса(Адрес1);
КонецПроцедуры // ПоКнопкеВводаАдреса()

//_____________________________________________________________________________
Процедура Установить(Объект, Значение)
	Период = СоздатьОбъект("Периодический");
	Период.ИспользоватьОбъект(Объект);
	ДатаЗнач = НачГода(РабочаяДата());
	Период.ВыбратьЗначения();
	Если Период.ПолучитьЗначение() = 1 Тогда
		Если Период.ДатаЗнач <= ТекущаяДата() Тогда
			ДатаЗнач = РабочаяДата();
		КонецЕсли;
	КонецЕсли;
	СтароеЗначение = Период.ЗначениеНаДату(ДатаЗнач);
	Если ТипЗначения(СтароеЗначение) = 2 Тогда
		СтароеЗначение = СокрП(СтароеЗначение);
	КонецЕсли;
	НовоеЗначение = Значение;
	Если ТипЗначения(НовоеЗначение) = 2 Тогда
		НовоеЗначение = СокрП(НовоеЗначение);
	КонецЕсли;

	Если СтароеЗначение <> НовоеЗначение Тогда
		Если Объект = "РозницаОблагаетсяЕНВД" Тогда
		    Период.ДатаЗнач = НачГода(ДатаЗнач);
		Иначе
			Период.ДатаЗнач = ДатаЗнач;
		КонецЕсли;
		
		Период.Значение = НовоеЗначение;
		Период.Записать();
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии()
	Форма.Руководитель.ВыборГруппы(0);
	Форма.ГлБухгалтер.ВыборГруппы(0);
	Форма.Кассир.ВыборГруппы(0);
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение(1, "Организация");
	Форма.Закладки.ДобавитьЗначение(2, "Коды");
	Форма.Закладки.ДобавитьЗначение(3, "Банк");
	Форма.Закладки.ДобавитьЗначение(4, "ИФНС");
	Форма.Закладки.ДобавитьЗначение(5, "Налоги");
	Форма.Закладки.ДобавитьЗначение(6, "Ответственные лица");

	ДатаРегистрации = Константа.ДатаРегистрации;
	НазваниеОрганизации = Константа.НазваниеОрганизации;
	ОфициальноеНазваниеОрганизации = Константа.ОфициальноеНазваниеОрганизации;
	ИННОрганизации = Константа.ИННОрганизации;
	АдресОрганизации = Константа.АдресОрганизации;
	ПочтовыйАдресОрганизации = Константа.ПочтовыйАдресОрганизации;
	ТелефоныОрганизации = Константа.ТелефоныОрганизации;
	ОргПравФорма = Константа.ОргПравФорма;
	КодОКПО = Константа.КодОКПО;  
	КодОКВЭД = Константа.КодОКВЭД;
    Отрасль = Константа.Отрасль;
	КодКФС = Константа.КодКФС;
	КодКОПФ = Константа.КодКОПФ;
	КодОГРН = Константа.ОГРН;
	НаименованиеТерриториальногоОрганаПФР = Константа.НаименованиеТерриториальногоОрганаПФР;
	ОрганизацияЯвляетсяПлательщикомЕНВД = Константа.ОрганизацияЯвляетсяПлательщикомЕНВД;
	РозницаОблагаетсяЕНВД = Константа.РозницаОблагаетсяЕНВД.Получить(РабочаяДата());
	РозницаОблагаетсяЕНВД = ?(ПустоеЗначение(РозницаОблагаетсяЕНВД)=1, Нет, РозницаОблагаетсяЕНВД);
	Если ОрганизацияЯвляетсяПлательщикомЕНВД = Нет Тогда
	   	Форма.РозницаОблагаетсяЕНВД.Доступность(0);
	Иначе
	   	Форма.РозницаОблагаетсяЕНВД.Доступность(1);
	КонецЕсли;
	ОрганизацияЯвляетсяПлательщикомНДС = Константа.ОрганизацияЯвляетсяПлательщикомНДС;
	ИнвалиднаяОрганизация = Константа.ИнвалиднаяОрганизация.Получить(РабочаяДата());
	КодИМНС = Константа.КодИМНС;
	КодИФНСПолучателя = Константа.КодИФНСПолучателя;
	ТерриториальныеУсловия = Константа.ТерриториальныеУсловия;
	
	СвидетельствоСерияНомер       = Константа.СвидетельствоСерияНомер;
	СвидетельствоДатаВыдачи       = Константа.СвидетельствоДатаВыдачи;
	СвидетельствоНаименованиеИМНС = Константа.СвидетельствоНаименованиеИМНС;
	СвидетельствоКодИМНС          = Константа.СвидетельствоКодИМНС;

	ОсновнойБанковскийСчет = СоздатьОбъект("Справочник.БанковскиеСчета");
	ОсновнойБанковскийСчет.НайтиЭлемент(Константа.ОсновнойБанковскийСчет);
	Если ОсновнойБанковскийСчет.Выбран() = 1 Тогда
		БанковскийСчет=ОсновнойБанковскийСчет.ТекущийЭлемент();
		ПоказатьРеквизитыСчета();
	КонецЕсли;

	Руководитель = Константа.Руководитель.Получить(РабочаяДата());
	ГлБухгалтер = Константа.ГлБухгалтер.Получить(РабочаяДата());
	Кассир = Константа.Кассир.Получить(РабочаяДата());
	ОтветственныйЗаРегистры = Константа.ОтветственныйЗаСоставлениеРегистровНУ;
    ГНИОрганизации = Константа.ГНИОрганизации;
	НаименованиеПлательщикаПриПеречисленииНалогов = Константа.НаименованиеПлательщикаПриПеречисленииНалогов;
	Форма.Кн_Видеокурс.Видимость( ?(ТипЗначения(Видео_Компонента)=0,0,1 )); 
	РегНомерПФР= СокрЛП(глПолучитьНалог("ПФР_страх").РегНомер);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореЕНВД()
	Если ОрганизацияЯвляетсяПлательщикомЕНВД = Нет Тогда 
		РозницаОблагаетсяЕНВД = Нет;
	   	Форма.РозницаОблагаетсяЕНВД.Доступность(0);
	Иначе
	   	Форма.РозницаОблагаетсяЕНВД.Доступность(1);
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ОК()
	
	Если СтрДлина(СокрП(ИННОрганизации)) <> 12 Тогда
		// Налогоплательщик - юр. лицо
        ИНН			= СРЕД(ИННОрганизации, 1, 10);
		КПП			= СРЕД(ИННОрганизации, 12,20);
		ДлинаОГРН	= 13;
		
	Иначе                                     
		// Налогоплательщик - физ. лицо 
		ИНН     	= ИННОрганизации;
		КПП			= "";		
		ДлинаОГРН 	= 15;
	КонецЕсли;
	
	КонтрольИНН = ИНН;
	
	ДлинаИНН = СтрДлина(Строка(Число(СтрЗаменить(КонтрольИНН, "0", "9"))));
	Если НЕ( (ДлинаИНН = 10) ИЛИ (ДлинаИНН = 12) ) Тогда			             
		Предупреждение("Не указан или неверно указан ИНН организации!");
		НеЗакрывать = 1;
		Возврат;
	КонецЕсли;
	                
	Если ПустоеЗначение(КПП) = 0 Тогда
		ДлинаКПП = СтрДлина(Строка(Число(СтрЗаменить(КПП, "0", "9"))));
		Если ДлинаКПП <> 9 Тогда
			Предупреждение("Неверно указан КПП организации!");
			НеЗакрывать = 1;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(КодОГРН) = 0 Тогда
		ТекущаяДлинаОГРН = СтрДлина(Строка(Число(СтрЗаменить(КодОГРН, "0", "9"))));
		Если ТекущаяДлинаОГРН <> ДлинаОГРН Тогда			             
			Предупреждение("Указано неверное значение ОГРН. ОГРН должен состоять из " + ДлинаОГРН + " цифр.");
			НеЗакрывать = 1;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Константа.ДатаРегистрации = ДатаРегистрации;
	Константа.НазваниеОрганизации = НазваниеОрганизации;
	Константа.ОфициальноеНазваниеОрганизации = ОфициальноеНазваниеОрганизации;
	Константа.АдресОрганизации = АдресОрганизации;
	Константа.ПочтовыйАдресОрганизации = ПочтовыйАдресОрганизации;
	Константа.ИННОрганизации = ИННОрганизации;
	Константа.ТелефоныОрганизации = ТелефоныОрганизации;
	Константа.ОргПравФорма = ОргПравФорма;
	Константа.КодОКВЭД = КодОКВЭД;
	Константа.КодОКПО = КодОКПО;
	Константа.Отрасль = Отрасль;
	Константа.КодКФС = КодКФС;
	Константа.КодКОПФ = КодКОПФ;
	Константа.ОГРН = КодОГРН;
	Константа.НаименованиеТерриториальногоОрганаПФР = НаименованиеТерриториальногоОрганаПФР;
	Константа.ТерриториальныеУсловия = ТерриториальныеУсловия;
	
	Константа.СвидетельствоСерияНомер       = СвидетельствоСерияНомер;
	Константа.СвидетельствоДатаВыдачи       = СвидетельствоДатаВыдачи;
	Константа.СвидетельствоНаименованиеИМНС = СвидетельствоНаименованиеИМНС;
	Константа.СвидетельствоКодИМНС          = СвидетельствоКодИМНС;
	
    Константа.ОсновнойБанковскийСчет = БанковскийСчет;

	Установить("Руководитель", Руководитель);
	Установить("ГлБухгалтер", ГлБухгалтер);
	Установить("Кассир", Кассир);
	Установить("ИнвалиднаяОрганизация", ИнвалиднаяОрганизация);      
    Установить("РозницаОблагаетсяЕНВД", РозницаОблагаетсяЕНВД);      
	
	Константа.ОтветственныйЗаСоставлениеРегистровНУ = ОтветственныйЗаРегистры;
	
	Константа.ГНИОрганизации = ГНИОрганизации;
	
	Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = ОрганизацияЯвляетсяПлательщикомЕНВД;
	Константа.ОрганизацияЯвляетсяПлательщикомНДС = ОрганизацияЯвляетсяПлательщикомНДС;
	Константа.КодИМНС = КодИМНС;
	Константа.КодИФНСПолучателя = КодИФНСПолучателя;
	Константа.НаименованиеПлательщикаПриПеречисленииНалогов = НаименованиеПлательщикаПриПеречисленииНалогов;
	
	НалогПФР_Страх = СоздатьОбъект("Справочник.НалогиИОтчисления");
	Если НалогПФР_Страх.НайтиПоКоду("ПФР_страх",)=1 Тогда
		НалогПФР_Страх.РегНомер=СокрЛП(РегНомерПФР);
		НалогПФР_Страх.Записать();
	КонецЕсли;
		
КонецПроцедуры
//_____________________________________________________________________________
Процедура ФормирСтраниц(НоваяСтраница)
	Форма.ИспользоватьСлой("Страница"+СокрЛП(ТекущаяСтраница), 0);
	ТекущаяСтраница = НоваяСтраница;

	Форма.ИспользоватьСлой("Страница"+СокрЛП(НоваяСтраница), 1);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	ФормирСтраниц(НомерЗакладки);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриЗакрытии()
	Если НеЗакрывать = 1 Тогда
		НеЗакрывать = 0; 
	    СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________

Форма.ИспользоватьСлой("Основной", 2);
ТекущаяСтраница = 0;
ФормирСтраниц(1);
НеЗакрывать = 0;