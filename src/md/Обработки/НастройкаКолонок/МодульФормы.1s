Перем СписокКолонок, ТекущаяКолонка, ИдКолонки, Колонка; 
Перем Конт, ИдентификаторФормы, НачальныйСписок, ПриОткрытии;
Перем ВремТекКолонка;

//******************************************************************************
//	Установить(Режим="") 
//
//	Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
//	Описание: Устанавливает, снимает или инвертирует отметки выбора строк 
//
Процедура Установить(Список, Режим="") 
	Для Н = 1 По Список.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			Список.Пометка(Н, 1);
		ИначеЕсли Режим="Сброс" Тогда
			Список.Пометка(Н, 0); 
		Иначе
			Список.Пометка(Н, ?(Список.Пометка(Н) = 1, 0, 1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  Установить()

//*******************************************

Процедура Принять(Список);
	Если Актив.ТекущаяСтрока()>0 Тогда
	    ВремТекКолонка = Актив.ПолучитьЗначение(Макс(Актив.ТекущаяСтрока(),1));
	КонецЕсли;
	Если ПустоеЗначение(ВремТекКолонка)=0 Тогда
	    ТекущаяКолонка = ВремТекКолонка;
	КонецЕсли;
	Для Сч = 1 По Список.РазмерСписка() Цикл
		ИдКолонки	=	Список.ПолучитьЗначение(Сч);
		Попытка 
			Колонка	= Конт.Форма.ПолучитьАтрибут(ИдКолонки);
		Исключение
			Сообщить(ИдКолонки);
		КонецПопытки;

		Если Список.Пометка(Сч) = 1 Тогда
			Колонка.Видимость(1);
			Если ИдКолонки = ТекущаяКолонка Тогда
				Конт.Активизировать(ИдКолонки,0);				
			КонецЕсли;

		Иначе
			Колонка.Видимость(0);
		КонецЕсли;
	КонецЦикла;
	СохранитьЗначение("СписокКолонок_"+ ИдентификаторФормы,	Список);
	СохранитьЗначение("ТекущаяКолонока_" + ИдентификаторФормы,	ТекущаяКолонка);
КонецПроцедуры

//*******************************************

Процедура ПриОткрытии()
    Если ПустоеЗначение(Форма.Параметр)=1 Тогда
        Возврат;
	КонецЕсли;  
	Конт = Форма.Параметр.ПолучитьЗначение(1);
	ИдентификаторФормы = Форма.Параметр.ПолучитьЗначение(2);
	НачальныйСписок = Форма.Параметр.ПолучитьЗначение(3);
	
	СписокКолонок	=	ВосстановитьЗначение("СписокКолонок_" + ИдентификаторФормы);
	ТекущаяКолонка	=	ВосстановитьЗначение("ТекущаяКолонока_" + ИдентификаторФормы);

	Если ПустоеЗначение(СписокКолонок) = 1 Тогда
		НачальныйСписок.Выгрузить(СписокКолонок);
		СохранитьЗначение("СписокКолонок_" + ИдентификаторФормы,	СписокКолонок);

	ИначеЕсли ТипЗначенияСтр(СписокКолонок) = "СписокЗначений" Тогда
		Если  СписокКолонок.ВСтрокуСРазделителями() <> НачальныйСписок.ВСтрокуСРазделителями() Тогда
			НачальныйСписок.Выгрузить(СписокКолонок);
			СохранитьЗначение("СписокКолонок_" + ИдентификаторФормы,	СписокКолонок);
		КонецЕсли;
	КонецЕсли;

	Форма.Заголовок("Настройка колонок",0);
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Видимость","Видимость");
	Форма.Закладки.ДобавитьЗначение("Активизировать","Активизировать при открытии");
	
	Форма.ИспользоватьСлой("Основной,Видимость",2);
	
	СписокКолонок.Выгрузить(Видим);
    ВремТекКолонка = Видим.ПолучитьЗначение(макс(Видим.НайтиЗначение(ТекущаяКолонка),1));
КонецПроцедуры

//------------------------------------------- 
Процедура ПриВыбореЗакладки(НомерСлоя,Слой) 
	
	Форма.ИспользоватьСлой("Основной,"+Слой,2);
	
	Если Слой = "Активизировать"  Тогда
		Актив.УдалитьВсе();
		Для Сч = 1 По Видим.РазмерСписка() Цикл
			Если Видим.Пометка(Сч) = 1 Тогда
				Представление = "";
				Значение = Видим.ПолучитьЗначение(Сч,Представление);
				Актив.ДобавитьЗначение(Значение,Представление);
			КонецЕсли;
		КонецЦикла;
		Актив.ТекущаяСтрока(макс(Актив.НайтиЗначение(ВремТекКолонка),1));
	Иначе 
		Если Актив.РазмерСписка() > 0 Тогда
		    ВремТекКолонка = Актив.ПолучитьЗначение(Макс(Актив.ТекущаяСтрока(),1));
		Иначе
			ВремТекКолонка = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры