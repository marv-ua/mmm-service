Перем ТекстПериодПлатежа;
Перем НадписьДатаПлатежа;
Перем ВидДатыОснованияПлатежа;
Перем ВидНомераДокументаПлатежа;
Перем ВидДатыДокументаПлатежа;
Перем НадписьДатаДокумента;                                                                                                               
Перем НадписьНомерДокумента;
Перем СписокПараметров;
Перем Конт;
Перем П101;
Перем П104;
Перем П105;
Перем П106;
Перем П107;
Перем П108;
Перем П109;
Перем П110;

//******************************************************************************
// Функция Сформировать() - формирует стоковые значения полей , для последующей 
// передачи в документ "Платежное поручение"
//
Функция Сформировать()
    П101 = СтатусСоставителя.ПолучитьЗначение(СтатусСоставителя.ТекущаяСтрока());
	П104 = КодБК;
	П105 = КодОКАТО;
	Если П101 = "08" Тогда
		П106 = "0";
		П107 = "";
		П108 = "0";
		П109 = "0";
	Иначе
		П106 = ОснованиеПлатежа.ПолучитьЗначение(ОснованиеПлатежа.ТекущаяСтрока()); 
		Если Найти("ТП", П106) > 0 Тогда
			Если ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока())="-" Тогда
			    П107 = Строка(Формат(ДатаПоказателя,"Д ДДММГГГГ"));
			Иначе
				П107 = ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока())+"."+Формат(ПериодПлатежа,"Ч(0)2")+"."+Формат(ГодПлатежа,"Ч(0)4");
			КонецЕсли;
			П108 = "0";
			П109 = Строка(Формат(ДатаДокумента,"Д ДДММГГГГ"));
		ИначеЕсли Найти("ЗД", П106) > 0 Тогда
			Если ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока())="-" Тогда
			    П107 = Строка(Формат(ДатаПоказателя,"Д ДДММГГГГ"));
			Иначе
				П107 = ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока())+"."+Формат(ПериодПлатежа,"Ч(0)2")+"."+Формат(ГодПлатежа,"Ч(0)4");
			КонецЕсли;
			П108 = "0";
			П109 = "0";
		ИначеЕсли Найти("АП, АР", П106) > 0 Тогда
			П107 = "";
			П108 = Строка(НомерДокумента);
			П109 = Строка(Формат(ДатаДокумента,"Д ДДММГГГГ"));
		Иначе
			П107 = Строка(Формат(ДатаПлатежа,"Д ДДММГГГГ"));
			П108 = Строка(НомерДокумента); 
			П109 = Строка(Формат(ДатаДокумента,"Д ДДММГГГГ"));		
		КонецЕсли;
		П110 = ТипПлатежа.ПолучитьЗначение(ТипПлатежа.ТекущаяСтрока());	
	КонецЕсли;
	Возврат П107;
КонецФункции //Сформировать()

//*****************************************************************************
// Функция Проверить() - осуществляет проверку корректности заполнения
// реквизитов платежного поручения перед печатью
//
Функция Проверить()
	Ошибка = СоздатьОбъект("СписокЗначений");
	
	П101 = СокрЛП(П101);
	П104 = СокрЛП(П104);
	П105 = СокрЛП(П105);
	П106 = СокрЛП(П106);
	П107 = ?(ПустаяСтрока(СокрЛП(СтрЗаменить(П107,".","")))=1,"", П107);
	П107 = ?(СокрЛП(СтрЗаменить(П107,".",""))="0","",П107);
	П108 = СокрЛП(П108);
	П109 = СокрЛП(П109);
	П110 = СокрЛП(П110);
	
	Если (Найти("01,02,03,04,05,06,07,08", П101) =0) или
		(ПустаяСтрока(СокрЛП(П101)) = 1) Тогда
		
		Ошибка.ДобавитьЗначение("Неверное значение поля ""Статус составителя"".");
	КонецЕсли;
	
	Если (СтрЗаменить(П104,"0","")="")и(Найти("06,07", П101) =0) Тогда
		
		Ошибка.ДобавитьЗначение("Необходимо заполнить поле ""Код БК"".");
	КонецЕсли;
	
	// Проверяем в зависимости от статуса составителя
	Если П101 = "08" Тогда
		Если СтрЗаменить(П106,"0","")<>"" Тогда 
			
			Ошибка.ДобавитьЗначение("При статусе составителя ""08"" не следует заполнять поле ""Основание платежа"".");
		КонецЕсли;
		Если СтрЗаменить(П107,"0","")<>"" Тогда
			
			Ошибка.ДобавитьЗначение("При статусе составителя ""08"" не следует заполнять поле ""Период"".");
		КонецЕсли;
		Если СтрЗаменить(П108,"0","")<>"" Тогда
			
			Ошибка.ДобавитьЗначение("При статусе составителя ""08"" не следует заполнять поле ""Номер"".");
		КонецЕсли;
		Если СтрЗаменить(П109,"0","")<>"" Тогда
			
			Ошибка.ДобавитьЗначение("При статусе составителя ""08"" не следует заполнять поле ""Дата"".");
		КонецЕсли;
		Если СтрЗаменить(П110,"0","")<>"" Тогда
			
			Ошибка.ДобавитьЗначение("При статусе составителя ""08"" не следует заполнять поле ""Тип платежа"".");			
		КонецЕсли;
	Иначе                                            
		// Проверяем в зависимости от основания платежа
		Если СтрЗаменить(СокрЛП(П106),"0","") = "" Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Если ПустоеЗначение(Дата(П107))=1 Тогда
					
				    Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Период""."); 
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П109,"0","")<>"" Тогда
				Если ПустоеЗначение(Дата(П109))=1 Тогда
					
				    Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Дата""."); 
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СтрДлина(П106)<>2 Тогда
			Ошибка.ДобавитьЗначение("Возможно, неверно заполнено поле ""Основание платежа"".");
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Если ПустоеЗначение(Дата(П107))=1 Тогда
					
				    Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Период""."); 
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П109,"0","")<>"" Тогда
				Если ПустоеЗначение(Дата(П109))=1 Тогда
					
				    Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Дата""."); 
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Найти("АП, АР", П106) > 0 Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				
				Ошибка.ДобавитьЗначение("При основании платежа ""АП"" или ""АР"" в поле ""Период"" необходимо указывать ""0"".");
			КонецЕсли;
		ИначеЕсли Найти("ТР, РС, ОТ, РТ, ВУ, ПР", П106) > 0 Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Если ПустоеЗначение(Дата(П107))=1 Тогда
					
				    Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Период""."); 
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П109,"0","")<>"" Тогда
				Если ПустоеЗначение(Дата(П109))=1 Тогда
				
				    Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Дата""."); 
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Найти("ТП ,ЗД ", П106) > 0 Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				ДД = Сред(СокрЛП(П107), 1, 2);                          
				ММ = Число(Сред(СокрЛП(П107), 4, 2));
				ГГ = Число(Сред(СокрЛП(П107), 7, 4));
				Если (Найти("Д1, Д2, Д3, МС", ДД) > 0) Тогда
					Если (ММ<1)или
						(ММ>12)или 
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
						
						Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Период""."); 
					КонецЕсли;
				ИначеЕсли (Найти("КВ", ДД) > 0) Тогда	
					Если (ММ<1)или
						(ММ>4)или 
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
							
							Ошибка.ДобавитьЗначение("Неверно указан показатель налогового периода в поле ""Период"".");
					КонецЕсли;
				ИначеЕсли (Найти("ПЛ", ДД) > 0) Тогда	
					Если (ММ<1)или
						(ММ>2)или 
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
							
					    	Ошибка.ДобавитьЗначение("Неверно указан показатель налогового периода в поле ""Период"".");
					КонецЕсли;
				ИначеЕсли (Найти("ГД", ДД) > 0) Тогда	
					Если (ММ<>0)или
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
							
							Ошибка.ДобавитьЗначение("Неверно указан показатель налогового периода в поле ""Период"".");
					КонецЕсли;
				Иначе
					Если ПустоеЗначение(Дата(П107))=1 Тогда
						
						Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Период""."); 
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П108,"0","")<>"" Тогда
				Ошибка.ДобавитьЗначение("При основании платежа ""ТП"" или ""ЗД"" в поле ""Номер"" необходимо указывать ""0"".");
			КонецЕсли;
			Если Найти("ЗД ", П106) > 0 Тогда
				Если СтрЗаменить(П109,"0","")<>"" Тогда
					Ошибка.ДобавитьЗначение("Не должна заполнятся дата");
				КонецЕсли;
			Иначе
				Если СтрЗаменить(П109,"0","")<>"" Тогда
					Если ПустоеЗначение(Дата(П109))=1 Тогда
						
						Ошибка.ДобавитьЗначение("Возможно, неверно указана дата в поле ""Дата""."); 
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Ошибка.ДобавитьЗначение("Неверно указано значение в поле ""Основание платежа"".");
		КонецЕсли;
		
		Если СтрЗаменить(П110,"0","")="" Тогда
		ИначеЕсли Найти("НС, АВ, ПЕ, ПЦ, СА, АШ, ИШ", П110) > 0 Тогда
		Иначе
			Ошибка.ДобавитьЗначение("Не корректный тип платежа");
		КонецЕсли;
		
	КонецЕсли;
	
	//Выводим список найденых ошибок
	Для Ном=1 по Ошибка.РазмерСписка() Цикл
		Сообщить(Ошибка.ПолучитьЗначение(Ном),"!");
	КонецЦикла;
	
	Возврат Ошибка;   
	
КонецФункции    //Проверить()

//******************************************************************************
Процедура ПриИзмененииОснованияПлатежа()
	
	ВыбПериодичностьУплаты = ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока());
	ВыбОснованиеПлатежа = ОснованиеПлатежа.ПолучитьЗначение(ОснованиеПлатежа.ТекущаяСтрока());
	ВидНомераДокументаПлатежа.ПолучитьЗначение( ВидНомераДокументаПлатежа.НайтиЗначение( ОснованиеПлатежа.ТекущаяСтрока() ),НадписьНомерДокумента);
	ВидДатыДокументаПлатежа.ПолучитьЗначение( ВидДатыДокументаПлатежа.НайтиЗначение( ОснованиеПлатежа.ТекущаяСтрока() ),НадписьДатаДокумента);
	Если Найти("ТП", ВыбОснованиеПлатежа) > 0 Тогда
	 	
		Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
			Форма.ИспользоватьСлой("Основной,ПоказательПериода,ПоказательДатой,Подвал", 2);
		Иначе
			Форма.ИспользоватьСлой("Основной,ПоказательПериода,СоставнойПоказатель,Подвал", 2);
		КонецЕсли;
	    Форма.ДатаДокумента.Видимость(1);
		Форма.НомерДокумента.Видимость(0);
	
	ИначеЕсли Найти("ЗД", ВыбОснованиеПлатежа) > 0 Тогда
	 	
		Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
			Форма.ИспользоватьСлой("Основной,ПоказательПериода,ПоказательДатой,Подвал", 2);
		Иначе
			Форма.ИспользоватьСлой("Основной,ПоказательПериода,СоставнойПоказатель,Подвал", 2);
		КонецЕсли;
	    Форма.ДатаДокумента.Видимость(0);
		Форма.НомерДокумента.Видимость(0);
		
	ИначеЕсли Найти("АП, АР", ВыбОснованиеПлатежа) > 0 Тогда
	 	
		ВидДатыОснованияПлатежа.ПолучитьЗначение( ВидДатыОснованияПлатежа.НайтиЗначение( ОснованиеПлатежа.ТекущаяСтрока() ), НадписьДатаПлатежа);
		Форма.ИспользоватьСлой("Основной,ДатаПериода,Подвал", 2);
		Форма.ДатаПлатежа.Видимость(0);
		Форма.ДатаДокумента.Видимость(1);
		Форма.НомерДокумента.Видимость(1);
		
	Иначе
				
		ВидДатыОснованияПлатежа.ПолучитьЗначение( ВидДатыОснованияПлатежа.НайтиЗначение( ОснованиеПлатежа.ТекущаяСтрока() ), НадписьДатаПлатежа);
		Форма.ИспользоватьСлой("Основной,ДатаПериода,Подвал", 2);
		Форма.ДатаПлатежа.Видимость(1);
		Форма.ДатаДокумента.Видимость(1);
		Форма.НомерДокумента.Видимость(1);

	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииОснованияПлатежа()	
//******************************************************************************
Процедура ПриВыбореСтатусаСоставителя()
	
	ВыбСтатусСоставителя = СтатусСоставителя.ПолучитьЗначение(СтатусСоставителя.ТекущаяСтрока());
	Если Найти("06, 07",ВыбСтатусСоставителя) > 0  Тогда
	    Если ОснованиеПлатежа.НайтиЗначение("0")=0 Тогда
			ОснованиеПлатежа.ДобавитьЗначение("0", "0 - Конкретное значение указать невозможно");
			ТипПлатежа.ДобавитьЗначение("0", "0 - Конкретное значение указать невозможно");
	    КонецЕсли;
	ИначеЕсли ОснованиеПлатежа.НайтиЗначение("0")>0 Тогда
		Если П106 = "0" Тогда
		    ОснованиеПлатежа.ТекущаяСтрока(1);
			ПриИзмененииОснованияПлатежа();
		КонецЕсли;
		ОснованиеПлатежа.УдалитьЗначение(ОснованиеПлатежа.НайтиЗначение("0"));
		Если П110 = "0" Тогда
			ТипПлатежа.ТекущаяСтрока(1);
		КонецЕсли;
		ТипПлатежа.УдалитьЗначение(ТипПлатежа.НайтиЗначение("0"));
	КонецЕсли;
КонецПроцедуры  //ПриВыбореСтатусаСоставителя()

//******************************************************************************
Процедура ПриИзменениииПериодичностиУплаты()
	
	ВыбПериодичностьУплаты = ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока());
	Если Найти("Д1, Д2, Д3, МС", ВыбПериодичностьУплаты) > 0 Тогда
		ТекстПериодПлатежа = "Месяц:";
		Форма.НадписьПериодПлатежа.Доступность(1);
		Форма.ПериодПлатежа.Доступность(1);
	ИначеЕсли Найти("КВ", ВыбПериодичностьУплаты) > 0 Тогда
		ТекстПериодПлатежа = "Квартал:";
		Форма.НадписьПериодПлатежа.Доступность(1);
		Форма.ПериодПлатежа.Доступность(1);
	ИначеЕсли Найти("ПЛ", ВыбПериодичностьУплаты) > 0 Тогда
		ТекстПериодПлатежа = "Полугодие:";
		Форма.НадписьПериодПлатежа.Доступность(1);
		Форма.ПериодПлатежа.Доступность(1);
	Иначе
		Форма.НадписьПериодПлатежа.Доступность(0);
		Форма.ПериодПлатежа.Доступность(0);
		ПериодПлатежа = 00;
	КонецЕсли;
	ПриИзмененииОснованияПлатежа();
КонецПроцедуры // ПриИзменениииПериодичностиУплаты() 

//******************************************************************************
Процедура ПриВыбореНалога() 
	
	Если Налог.Выбран()=1 Тогда        
		
		Если СтатусСоставителя.НайтиЗначение(Налог.СтатусСоставителяПлДок)>0 Тогда
			СтатусСоставителя.ТекущаяСтрока(СтатусСоставителя.НайтиЗначение(Налог.СтатусСоставителяПлДок));
		КонецЕсли;
		
		Если Налог.Периодичность = Перечисление.ПериодичностьУплатыНалога.Декадная Тогда
			Если Найти("Д1, Д2, Д3", ПериодичностьУплаты.ПолучитьЗначение(ПериодичностьУплаты.ТекущаяСтрока())) = 0 Тогда
				ПериодичностьУплаты.ТекущаяСтрока(1);
			КонецЕсли;
		ИначеЕсли Налог.Периодичность = Перечисление.ПериодичностьУплатыНалога.Месячная Тогда	
			ПериодичностьУплаты.ТекущаяСтрока(4);
		ИначеЕсли Налог.Периодичность = Перечисление.ПериодичностьУплатыНалога.Квартальная Тогда	
			ПериодичностьУплаты.ТекущаяСтрока(5);
		ИначеЕсли Налог.Периодичность = Перечисление.ПериодичностьУплатыНалога.Полугодовая Тогда	
			ПериодичностьУплаты.ТекущаяСтрока(6);
		ИначеЕсли Налог.Периодичность = Перечисление.ПериодичностьУплатыНалога.Годовая Тогда	
			ПериодичностьУплаты.ТекущаяСтрока(7);
		КонецЕсли;
		ПриИзменениииПериодичностиУплаты();
		
		КодБК = Налог.КодБК;
		КодОКАТО = Налог.КодОКАТО;
		
		Сформировать();
		
	КонецЕсли;
КонецПроцедуры  //ПриВыбореНалога()

//******************************************************************************
Процедура ПриОткрытии()
	
	ОснованиеПлатежа.УдалитьВсе();
	ОснованиеПлатежа.ДобавитьЗначение("ТП", "ТП - платежи текущего года");
	ОснованиеПлатежа.ДобавитьЗначение("ЗД", "ЗД - добровольное погашение задолженности по истекшим налоговым периодам");
	ОснованиеПлатежа.ДобавитьЗначение("ТР", "ТР - погашение задолженности по требованию об уплате налогов (сборов) от налогового органа");
	ОснованиеПлатежа.ДобавитьЗначение("РС", "РС - погашение рассроченной задолженности");
	ОснованиеПлатежа.ДобавитьЗначение("ОТ", "ОТ - погашение отсроченной задолженности");
	ОснованиеПлатежа.ДобавитьЗначение("РТ", "РТ - погашение реструктурируемой задолженности");
	ОснованиеПлатежа.ДобавитьЗначение("ВУ", "ВУ - погашение отсроченной задолженности в связи с введением внешнего управления");
	ОснованиеПлатежа.ДобавитьЗначение("ПР", "ПР - погашение задолженности, приостановленной к взысканию");
	ОснованиеПлатежа.ДобавитьЗначение("АП", "АП - погашение задолженности по акту проверки");
	ОснованиеПлатежа.ДобавитьЗначение("АР", "АР - погашение задолженности по исполнительному документу"); 
	
	ТипПлатежа.УдалитьВсе();
	ТипПлатежа.ДобавитьЗначение("НС", "НС - уплата налога или сбора");
	ТипПлатежа.ДобавитьЗначение("АВ", "АВ - уплата аванса или предоплата (в том числе декадные платежи)");
	ТипПлатежа.ДобавитьЗначение("ПЕ", "ПЕ - уплата пени");
	ТипПлатежа.ДобавитьЗначение("ПЦ", "ПЦ - уплата процентов");
	ТипПлатежа.ДобавитьЗначение("СА", "СА - налоговые санкции, установленные Налоговым кодексом РФ");
	ТипПлатежа.ДобавитьЗначение("АШ", "АШ - административные штрафы");
	ТипПлатежа.ДобавитьЗначение("ИШ", "ИШ - иные штрафы, установленные соответствующими нормативными актами");

	ПериодичностьУплаты.УдалитьВсе();
	ПериодичностьУплаты.ДобавитьЗначение("Д1", "Д1 - платеж за первую декаду месяца");
	ПериодичностьУплаты.ДобавитьЗначение("Д2", "Д2 - платеж за вторую декаду месяца");
	ПериодичностьУплаты.ДобавитьЗначение("Д3", "Д3 - платеж за третью декаду месяца");
	ПериодичностьУплаты.ДобавитьЗначение("МС", "МС - месячный платеж");
	ПериодичностьУплаты.ДобавитьЗначение("КВ", "КВ - квартальный платеж");
	ПериодичностьУплаты.ДобавитьЗначение("ПЛ", "ПЛ - полугодовой платеж");
	ПериодичностьУплаты.ДобавитьЗначение("ГД", "ГД - годовой платеж");
	ПериодичностьУплаты.ДобавитьЗначение("-",  "Платеж по конкретной дате");
	
	СтатусСоставителя.УдалитьВсе();
	СтатусСоставителя.ДобавитьЗначение("01", "01 - налогоплательщик (плательщик сборов)");
	СтатусСоставителя.ДобавитьЗначение("02", "02 - налоговый агент");
	СтатусСоставителя.ДобавитьЗначение("03", "03 - сборщик налогов и сборов");
	СтатусСоставителя.ДобавитьЗначение("04", "04 - налоговый орган");
	СтатусСоставителя.ДобавитьЗначение("05", "05 - служба судебных приставов");
	СтатусСоставителя.ДобавитьЗначение("06", "06 - участник внешнеэкономической деятельности");
	СтатусСоставителя.ДобавитьЗначение("07", "07 - таможенный орган");
	СтатусСоставителя.ДобавитьЗначение("08", "08 - плательщик иных обязательных платежей");
    	    
	ВидДатыДокументаПлатежа = СоздатьОбъект("СписокЗначений");
	
	// Значение - номер строки списка "Основание платежа", представление - 
	// текст, выдаваемый к качестве подсказки к полю для указания даты
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 1, "Дата декларации (расчета), представленной в налоговый орган:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 2, "");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 3, "Дата требования об уплате налогов (сборов) от налогового органа:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 4, "Дата решения о рассрочке:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 5, "Дата решения об отсрочке:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 6, "Дата решения о реструктуризации:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 7, "Дата принятия арбитражным судом решения о введении внешнего управления:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 8, "Дата решения о приостановлении взыскания:"); 
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 9, "Дата акта проверки:");
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 10,"Дата вынесения исполнительного документа:"); 
	ВидДатыДокументаПлатежа.ДобавитьЗначение( 11,"Показатель даты налогового документа:");
	
	ВидНомераДокументаПлатежа = СоздатьОбъект("СписокЗначений");
	
	// Значение - номер строки списка "Основание платежа", представление - 
	// текст, выдаваемый к качестве подсказки к полю для указания номера
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 1, "");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 2, "");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 3, "Номер требования об уплате налогов (сборов) от налогового органа:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 4, "Номер решения о рассрочке:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 5, "Номер решения об отсрочке:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 6, "Номер решения о реструктуризации:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 7, "Номер дела или материала, рассмотренного арбитражным судом:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 8, "Номер решения о приостановлении взыскания:"); 
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 9, "Номер акта проверки:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 10,"Номер исполнительного документа:");
	ВидНомераДокументаПлатежа.ДобавитьЗначение( 11,"Показатель номера налогового документа:");
	
	ВидДатыОснованияПлатежа = СоздатьОбъект("СписокЗначений");
	
	// Значение - номер строки списка "Основание платежа", представление - 
	// текст, выдаваемый к качестве подсказки к полю для указания даты
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 3, "Срок уплаты, установленный в требовании об уплате налогов (сборов):");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 4, "Дата уплаты части рассроченной суммы налога в соответствии с графиком:");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 5, "Дата завершения отсрочки:");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 6, "Дата уплаты части реструктурируемой задолженности в соответствии с графиком:");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 7, "Дата завершения внешнего управления:");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 8, "Дата завершения приостановления взыскания:"); 
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 9, "");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 10,"");
	ВидДатыОснованияПлатежа.ДобавитьЗначение( 11,"Показатель налового периода");
	
	СписокПараметров = Форма.Параметр;
	
	Если ПустоеЗначение(СписокПараметров)=0 Тогда
					
		Конт = СписокПараметров.Получить("Контекст");
		П101 = СписокПараметров.Получить("П101");
		П104 = СписокПараметров.Получить("П104");
		П105 = СписокПараметров.Получить("П105");
		П106 = СписокПараметров.Получить("П106");
		П107 = СписокПараметров.Получить("П107");
		П108 = СписокПараметров.Получить("П108");
		П109 = Строка(СписокПараметров.Получить("П109"));
		П110 = СписокПараметров.Получить("П110");
		
		// Если обработка вызвана для контроля платежного документа перед печатью
		// Запустим функцию проверки и закроем форму
		Если СписокПараметров.Получить("Контроль") = 1 Тогда
			Форма.Параметр = Проверить(); 
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
		//Подставляем значения, полученные из платежного документа
		СпрНалоги = СоздатьОбъект("Справочник.НалогиИОтчисления");
		Найден = 0;
		Если ПустоеЗначение(СокрЛП(Конт.КодБК)) = 0 Тогда
			Найден = СпрНалоги.НайтиПоРеквизиту("КодБК", Конт.КодБК, 1);
		КонецЕсли;
		Если (Найден = 0) и (Конт.СчетКонтрагента.Выбран() = 1) Тогда
			Найден = СпрНалоги.НайтиПоРеквизиту("РасчетныйСчет", Конт.СчетКонтрагента, 1);
		КонецЕсли;
		Если Найден = 1 Тогда
			Налог = СпрНалоги.ТекущийЭлемент();
		КонецЕсли;
		
		Если СтатусСоставителя.НайтиЗначение(П101)>0 Тогда
			СтатусСоставителя.ТекущаяСтрока(СтатусСоставителя.НайтиЗначение(П101));
		Иначе
			СтатусСоставителя.ТекущаяСтрока(1);
		КонецЕсли; 
		ПриВыбореСтатусаСоставителя();
		
		КодБК 			= П104;
		КодОКАТО		= П105;
		
		Если ОснованиеПлатежа.НайтиЗначение(П106)>0 Тогда
			ОснованиеПлатежа.ТекущаяСтрока(ОснованиеПлатежа.НайтиЗначение(П106));
		Иначе
			ОснованиеПлатежа.ТекущаяСтрока(1);
		КонецЕсли;                                                               
		ПериодичностьУплаты.ТекущаяСтрока(1);
		ПриИзмененииОснованияПлатежа();
		
		ДД = Сред(СокрЛП(П107), 1, 2); 
		ММ = Сред(СокрЛП(П107), 4, 2);
		ГГ = Сред(СокрЛП(П107), 7, 4);
		Если ПериодичностьУплаты.НайтиЗначение(ДД)>0 Тогда
			ПериодичностьУплаты.ТекущаяСтрока(ПериодичностьУплаты.НайтиЗначение(ДД));
			ПериодПлатежа = Число(ММ); 
			ГодПлатежа    = Число(ГГ);
		ИначеЕсли  Найти("ТП, ЗД", П106)>0 Тогда
			ДатаПоказателя = Дата(Число(ГГ),Число(ММ),Число(ДД));
			ПериодичностьУплаты.ТекущаяСтрока(8);
		Иначе
			ДатаПлатежа = Дата(Число(ГГ),Число(ММ),Число(ДД));
			ПериодичностьУплаты.ТекущаяСтрока(1);
		КонецЕсли;                                                               
		ПриИзменениииПериодичностиУплаты();
		
		НомерДокумента = П108;
		ДД = Сред(СокрЛП(П109), 1, 2); 
		ММ = Сред(СокрЛП(П109), 4, 2);
		ГГ = Сред(СокрЛП(П109), 7, 4);
		ДатаДокумента = Дата(Число(ГГ),Число(ММ),Число(ДД));
		
		Если ТипПлатежа.НайтиЗначение(П110)>0 Тогда
			ТипПлатежа.ТекущаяСтрока(ТипПлатежа.НайтиЗначение(П110));
		Иначе
			ТипПлатежа.ТекущаяСтрока(1);
		КонецЕсли;
		
	Иначе
		ОснованиеПлатежа.ТекущаяСтрока(1);
		ПериодичностьУплаты.ТекущаяСтрока(1);
		ТипПлатежа.ТекущаяСтрока(1);
		СтатусСоставителя.ТекущаяСтрока(1);
		
		ПриИзменениииПериодичностиУплаты();
		ПриИзмененииОснованияПлатежа();
		Форма.ИспользоватьСлой("Основной,ПоказательПериода,СоставнойПоказатель,Подвал", 2);
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//*****************************************************************************
Процедура Перенести()
	
	// Установим значения реквизитов платежного документа
	Если Налог.Выбран()=1 Тогда
		Конт.Контрагент = Налог.Получатель;
		Конт.СчетКонтрагента = Налог.РасчетныйСчет;
		Если (ПустоеЗначение(Конт.Содержание) = 1) и (ПустоеЗначение(Конт.СчетКонтрагента.Назначение) = 0) Тогда 
			Конт.Содержание = Конт.СчетКонтрагента.Назначение;
		КонецЕсли;
		Конт.Очередность = Налог.Очередность;
		Если Налог.Счет.Выбран() = 1 Тогда
			БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
			Для Индекс = 1 по Налог.Счет.КоличествоСубконто() Цикл
				Субк = Налог.ПолучитьАтрибут("Субконто" + Индекс);
				Если ПустоеЗначение(Субк) = 1 Тогда
					БухИт.ИспользоватьСубконто(Налог.Счет.ВидСубконто(Индекс));
				Иначе
					БухИт.ИспользоватьСубконто(Налог.Счет.ВидСубконто(Индекс), Субк, 2);
				КонецЕсли;
			КонецЦикла;
			
			БухИт.ВыполнитьЗапрос(,Конт.ДатаДок, Налог.Счет);
			Конт.Сумма = БухИт.СКК();
		КонецЕсли;
	КонецЕсли;
	
	Конт.СтатусСоставителяПлДок = П101; 
	Конт.КодБК 					= П104;
	Конт.КодОКАТО               = ?(П105="0","",П105);
	Конт.ПоказательОснования    = ?(П106="0","",П106);;
	Конт.ПоказательПериода      = ?(ПустоеЗначение(СокрЛП(СтрЗаменить(П107,"."," ")))=1,"",П107);
	Конт.ПоказательНомера       = ?(П108="0","",П108);;
	Конт.ПоказательДаты         = П109;
	Конт.ПоказательТипа         = ?(П110="0","",П110);; 
	
	Форма.Закрыть();
	
КонецПроцедуры; //Перенести()

