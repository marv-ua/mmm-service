Процедура ПриВыбореРасчетногоСчета()
	Если РасчетныйСчет.Выбран() = 1 Тогда
		Если РасчетныйСчет.Владелец <> Получатель Тогда
			Получатель = РасчетныйСчет.Владелец;
		КонецЕсли;
	КонецЕсли;               
КонецПроцедуры //ПриВыбореРасчетногоСчета
//_____________________________________________________________________________
Процедура ПриВыбореПолучателя()
	Если РасчетныйСчет.Владелец <> Получатель Тогда
		РасчетныйСчет = "";
	КонецЕсли;
	Если ПустоеЗначение(РасчетныйСчет) = 1 Тогда
	    РасчетныйСчет = глРасчетныйСчетКонтрагента(Получатель);
	КонецЕсли;
КонецПроцедуры //ПриВыбореПолучателя

//******************************************************************************
// ПоКнопкеВыбораДаты()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка выбора даты.
//
// Описание:
//  Выбирается дата просмотра и редактирования значений периодических реквизитов 
// выбирается по кнопке, чтобы не менялся признак модифицированности формы.
//
Процедура ПоКнопкеВыбораДаты()
	
	глВвестиДатуПериодическихРеквизитов(Контекст, 1);
	
КонецПроцедуры // ПоКнопкеВыбораДаты()

//_____________________________________________________________________________
Процедура ПриВыбореСчета()
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто"+А,Счет.ВидСубконто(А));
	КонецЦикла;
КонецПроцедуры //ПриВыбореСчета
//_____________________________________________________________________________
Процедура ВводНового(Копирование) //предопределенная
	ИспользоватьДату('01.01.1980');
	СтатусСоставителяПлДок = "01";
КонецПроцедуры //ВводНового
//_____________________________________________________________________________
Функция ПолучитьПервыйПредел(Реквизит)
	Если (Код = "ПФР_страх") или (Код = "ПФР_нак") Тогда
		Возврат "";
	КонецЕсли;
	
	Ставки = СоздатьОбъект("Справочник.СтавкиНалогов");
	Ставки.ИспользоватьВладельца(ТекущийЭлемент());
	Ставки.ПорядокКодов();
	Ставки.ВыбратьЭлементы();
	Если Ставки.ПолучитьЭлемент() = 1 Тогда
		Если Реквизит = "Наименование" Тогда
			Возврат "Ставка для первого предела:";
		Иначе
			Возврат СокрЛП(Формат(Ставки.ПолучитьАтрибут(Реквизит).Получить(ИспользоватьДату()),"Ч15.2.,"));
		КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции
//_____________________________________________________________________________
Процедура ПоказатьСтавки()
	Параметры = СоздатьОбъект("СписокЗначений");
	Параметры.Установить("Владелец", ТекущийЭлемент());
	Параметры.Установить("Дата", ИспользоватьДату());
	ОткрытьФормуМодально("Справочник.СтавкиНалогов", Параметры);
	Форма.Обновить();
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	СохранениеПериодическихРеквизитов(2, "*");
	Если (Найти(глФондыЕСН, СокрЛ(Код)) > 0) и (ИспользоватьДату() >= '01.01.2001') Тогда
		
		Если (ИспользоватьДату() >= '01.01.2010') Тогда
			Форма.ПервыйПредел.Видимость(0);
			Форма.Ставка.Видимость(0);
			Форма.кнСтавки.Видимость(0);
			Форма.стСтавка.Видимость(0);
			Форма.стПредел.Видимость(0);						
		Иначе
			Форма.ПервыйПредел.Видимость(1);
			Форма.Ставка.Видимость(0);
			Форма.кнСтавки.Видимость(1);
			Форма.стСтавка.Видимость(0);
			Форма.стПредел.Видимость(1);			
		КонецЕсли;
		
		Форма.Счет.Редактирование(0);
		Форма.Субконто1.Редактирование(0);
		Форма.Субконто2.Редактирование(0);
		Форма.Субконто3.Редактирование(0);
	Иначе
		Форма.ПервыйПредел.Видимость(0);
		Форма.Ставка.Видимость(1);
		Форма.кнСтавки.Видимость(0);
		Форма.стСтавка.Видимость(1);
		Форма.стПредел.Видимость(0);
	КонецЕсли;
КонецПроцедуры //ПриОткрытии
//_____________________________________________________________________________
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если ИдентЭлемДиалога = "СтатусСоставителяПлДок" Тогда
	    ФлагСтандОбр = 0;
		СтатусСоставителя = СоздатьОбъект("СписокЗначений");
		СтатусСоставителя.ДобавитьЗначение("01", "01 - налогоплательщик (плательщик сборов) - юридическое лицо");
		СтатусСоставителя.ДобавитьЗначение("02", "02 - налоговый агент");
		СтатусСоставителя.ДобавитьЗначение("03", "03 - организация федеральной почтовой связи");
		СтатусСоставителя.ДобавитьЗначение("04", "04 - налоговый орган");
		СтатусСоставителя.ДобавитьЗначение("05", "05 - территориальные органы Федеральной службы судебных приставов");
		СтатусСоставителя.ДобавитьЗначение("06", "06 - участник внешнеэкономической деятельности - юридическое лицо");
		СтатусСоставителя.ДобавитьЗначение("07", "07 - таможенный орган");
		СтатусСоставителя.ДобавитьЗначение("08", "08 - плательщик иных обязательных платежей"); 
		СтатусСоставителя.ДобавитьЗначение("09", "09 - налогоплательщик (плательщик сборов) - ИП");
		СтатусСоставителя.ДобавитьЗначение("10", "10 - налогоплательщик (плательщик сборов) - нотариус, занимающегося частной практикой"); 
		СтатусСоставителя.ДобавитьЗначение("11", "11 - налогоплательщик (плательщик сборов) - адвокат"); 
		СтатусСоставителя.ДобавитьЗначение("12", "12 - налогоплательщик (плательщик сборов) - глава КФХ"); 
		СтатусСоставителя.ДобавитьЗначение("13", "13 - налогоплательщик (плательщик сборов) - иное физическое лицо"); 
		СтатусСоставителя.ДобавитьЗначение("14", "14 - налогоплательщик, производящий выплаты физическим лицам"); 
		СтатусСоставителя.ДобавитьЗначение("15", "15 - кредитная организация - документ на общую сумму без открытия банковского счета физическому лицу"); 		
		СтатусСоставителя.ДобавитьЗначение("16", "16 - участник внешнеэкономической деятельности - физическое лицо"); 
		СтатусСоставителя.ДобавитьЗначение("17", "17 - участник внешнеэкономической деятельности - ИП"); 
		СтатусСоставителя.ДобавитьЗначение("18", "18 - плательщик таможенных платежей, не являющийся декларантом"); 
		СтатусСоставителя.ДобавитьЗначение("19", "19 - организации, оформившие перечисление средств, удержанных из заработка физического лица в счет погашения задолженности по таможенным платежам"); 
		СтатусСоставителя.ДобавитьЗначение("20", "20 - кредитная организация - документ по каждому платежу физического лица без открытия банковского счета"); 
		СтатусСоставителя.ВыбратьЗначение(СтатусСоставителяПлДок,,,,2);
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения
//_____________________________________________________________________________
Процедура ПриЗаписи()
	СтатусВозврата(глБухЗаписьПериодическихРеквизитов(Контекст));
КонецПроцедуры //ПриЗаписи
//_____________________________________________________________________________
