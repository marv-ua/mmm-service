Перем мТаблСтруктураСправочника;
Перем мСписокВыбора;
Перем мОтказОтЗаписи;

//******************************************************************************
Процедура УстановитьУровеньПоУмолчанию()        
	
	Если Родитель.Выбран() = 0 Тогда
		
		Если Выбран() = 0 Тогда
			// Редактируем новый раздел бух. отчетноси.
			
			// Установим заданное значение по умолчанию уровня сущенственности.
			НомСтр = 0;
			Если мТаблСтруктураСправочника.НайтиЗначение(ОбъектУчета, НомСтр, "РазделОтчета") > 0 Тогда
				УровеньСущественности = мТаблСтруктураСправочника.ПолучитьЗначение(НомСтр, "ПорогУровень");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;			
	
КонецПроцедуры // УстановитьУровеньПоУмолчанию()

//******************************************************************************
Процедура Очистить()
	                     
	Если Вопрос("Очистить настройку?", "ОК+Отмена") = "ОК" Тогда
	
		СпрНастройка = СоздатьОбъект("Справочник.НастройкаРаскрытияОтчетности");
		СпрНастройка.ВыбратьЭлементы();
	
		Пока СпрНастройка.ПолучитьЭлемент() = 1 Цикл
		    СпрНастройка.Удалить( 1 );
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры // Очистить() 

//******************************************************************************
Процедура УдалитьЭлемент()        
	                   
	ТекЭлемент = ТекущийЭлемент();	
	
	Если ТекЭлемент.Выбран() = 1 Тогда		              
		ТекстВопроса = "Удалить " + ? (ЭтоГруппа() = 1, "раздел бухгалтерской отчетности """ + СокрП(ОбъектУчета),
		                                                "объект учета """ + СокрП(ОбъектУчета.Наименование)) + """?";		
														
		Если Вопрос(ТекстВопроса, "Да+Нет+Отмена", 60) = "Да" Тогда
				
			СпрНастройка = СоздатьОбъект("Справочник.НастройкаРаскрытияОтчетности");
			Если СпрНастройка.НайтиЭлемент(ТекЭлемент) > 0 Тогда				
				СпрНастройка.Удалить(1);                                            
			КонецЕсли;                                          
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры // УдалитьЭлемент()

//******************************************************************************
Функция ПроверкаДублейСтрок()
	
	СпрНастройка = СоздатьОбъект("Справочник.НастройкаРаскрытияОтчетности");
	СпрНастройка.ИспользоватьРодителя(Родитель);
	СпрНастройка.ВыбратьЭлементы();
	
	НайденыДубли = 0;
	
	Пока СпрНастройка.ПолучитьЭлемент() = 1 Цикл
		
		Если СпрНастройка.ОбъектУчета <> ОбъектУчета Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выбран() = 1 Тогда
			Если СпрНастройка.ТекущийЭлемент() = ТекущийЭлемент() Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		                                                                                                     
		стрТипОбъекта  = ?(ЭтоГруппа() = 1, "раздел",              "объект"); 
		стрТипОбъектов = ?(ЭтоГруппа() = 1, "разделов отчетности", "объектов учета"); 
		
		Сообщить("Этот " + стрТипОбъекта + " ранее уже был внесен в список " + стрТипОбъектов + ".", "!");
		
		НайденыДубли = 1;
		Прервать;
	
	КонецЦикла;
	
	Возврат НайденыДубли;
	
КонецФункции // ПроверкаДублейСтрок()

//******************************************************************************
Процедура ПриРедактированииНовойСтроки() 
	
	мОтказОтЗаписи = 0;
       
	Если ЭтоГруппа() = 1 Тогда
		Если Родитель.Выбран() = 0 Тогда 
			
			// Добавляем раздел бухгалтерской отчетности.
			НазначитьТип("ОбъектУчета","Перечисление.РаскрываемыеРазделыОтчетности");
			
		Иначе 
			
			// Добавляем вид объектов учета.
			НомСтр = 0;
			Если мТаблСтруктураСправочника.НайтиЗначение(Родитель.ОбъектУчета, НомСтр, "РазделОтчета") = 0 Тогда
				мОтказОтЗаписи = 1;				
				
				СтатусВозврата(0);
				Возврат;           
			КонецЕсли;
			
			ВидОбъекта = мТаблСтруктураСправочника.ПолучитьЗначение(НомСтр, "ВидОбъекта");
			
			Если ПустаяСтрока(ВидОбъекта) = 1 Тогда
				Сообщить("По данному разделу отчетности """ + СокрП(Родитель.ОбъектУчета) + """ не предусмотрено раскрытие по видам объектов учета.", "!");
				мОтказОтЗаписи = 1;
				
				СтатусВозврата(0);
				Возврат; 
			КонецЕсли;
			
			Если Найти(ВидОбъекта, ".") > 0 Тогда         
				// Тип значения - объект метаданных.
				НазначитьТип("ОбъектУчета", ВидОбъекта);    
				
			Иначе    
				
				НазначитьТип("ОбъектУчета", "Строка", 100);				
				
				// Тип значения - строка, элемент заданного вручную списка значений.
				мСписокВыбора = СоздатьОбъект("СписокЗначений");
				мСписокВыбора.ИзСтрокиСРазделителями(ВидОбъекта);
				
			КонецЕсли;
			
			УровеньСущественности = Родитель.УровеньСущественности;
			
		КонецЕсли;
	
	Иначе  
		
		// Добавляем объект.
		
		Если Родитель.Выбран() = 0 Тогда			
			Сообщить("На верхнем уровне настройки необходимо указывать разделы отчетности.", "!");
			Сообщить("Для указания раздела выберите меню ""Действия - Новая группа"".", ".");
			мОтказОтЗаписи = 1;

			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		             
		ПредставлениеВида = ТипЗначенияСтр(Родитель.ОбъектУчета);
		               
		КолонкаПоиска  = "РазделОтчета";						
		                  
		НомСтр = 0;
		
		Если ПредставлениеВида = "Строка" Тогда
			
			ВидОбъекта = СокрП(Родитель.ОбъектУчета);
			
			мТаблСтруктураСправочника.ВыбратьСтроки();
			Пока мТаблСтруктураСправочника.ПолучитьСтроку() = 1 Цикл
				
				Если Найти(мТаблСтруктураСправочника.ВидОбъекта, ВидОбъекта) > 0 Тогда
					НомСтр = мТаблСтруктураСправочника.НомерСтроки;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			        
			Если НомСтр = 0 Тогда
				мОтказОтЗаписи = 1;			
				
				СтатусВозврата(0);
				Возврат;           
			КонецЕсли; 
			
		Иначе
			
			Если Родитель.Родитель.Выбран() = 1 Тогда
				// Родителем элемента справочника является вид объектов учета
				ВидОбъекта    = ПредставлениеВида + "." + Родитель.ОбъектУчета.Вид();
				КолонкаПоиска = "ВидОбъекта";				
			Иначе
				// Объект добавляется непосредственно в раздел учета
				ВидОбъекта    = Родитель.ОбъектУчета;
			КонецЕсли;  
			
			Если мТаблСтруктураСправочника.НайтиЗначение(ВидОбъекта, НомСтр, КолонкаПоиска) = 0 Тогда
				мОтказОтЗаписи = 1;			
				
				СтатусВозврата(0);
				Возврат;           
			КонецЕсли; 
			
		КонецЕсли;  
				
		// В случае добавления объекта непосредственно в раздел бух. отчетности
		// предварительно проверим, не предусмотрено ли раскрытие объектов по
		// видам объекта учета.
		Если Родитель.Родитель.Выбран() = 0 Тогда
			Если ПустоеЗначение(мТаблСтруктураСправочника.ПолучитьЗначение(НомСтр, "ВидОбъекта")) = 0 Тогда
				Сообщить("На этом уровне настройки раскрытия необходимо указывать виды объектов учета.", "!");
				Сообщить("Для указания вида выберите меню ""Действия - Новая группа"".", ".");
				мОтказОтЗаписи = 1;
			
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ТипОбъекта = мТаблСтруктураСправочника.ПолучитьЗначение(НомСтр, "ТипОбъекта");
		
		Если ПустаяСтрока(ТипОбъекта) = 1 Тогда
			                
			ЭтоОбъектыНезавершСтроительства = 0; 
			
			Если Родитель.Родитель.Выбран() = 1 Тогда
				Если Родитель.Родитель.ОбъектУчета = Перечисление.РаскрываемыеРазделыОтчетности.НезавершенноеCтроительство Тогда
					Если Родитель.ОбъектУчета = Перечисление.ГруппыНезавершенногоСтроительства.ОборудованиеКУстановке Тогда
						ТипОбъекта = "Справочник.Оборудование";
					Иначе
						ТипОбъекта = "Справочник.ОбъектыСтроительства";
					КонецЕсли;
					
					ЭтоОбъектыНезавершСтроительства = 1;			
				КонецЕсли;
			КонецЕсли;
						
			Если ЭтоОбъектыНезавершСтроительства = 0 Тогда
				Сообщить("По данному разделу отчетности """ + СокрП(Родитель.ОбъектУчета) + """ не предусмотрено раскрытие по объектам учета.", "!");
				мОтказОтЗаписи = 1;
			
				СтатусВозврата(0);
				Возврат;
			Конецесли;
		КонецЕсли;
		
		Если Найти(ТипОбъекта, ".") > 0 Тогда         
			// Тип значения - объект метаданных.
			НазначитьТип("ОбъектУчета", ТипОбъекта);    
			
			
		Иначе    
			НазначитьТип("ОбъектУчета", "Строка", 100);    
			
			// Тип значения - строка, элемент заданного вручную списка значений.
			мСписокВыбора = СоздатьОбъект("СписокЗначений");
			мСписокВыбора.ИзСтрокиСРазделителями(ТипОбъекта);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры // ПриРедактированииНовойСтроки() 

//******************************************************************************
Процедура ПриНачалеРедактированияСтроки()
	
	Если ЭтоГруппа() = 1 Тогда
		
		Если Уровень() = 1 Тогда 
			
			НазначитьТип("ОбъектУчета","Перечисление.РаскрываемыеРазделыОтчетности");
			
		Иначе 
			
			НомСтр = 0;
			Если мТаблСтруктураСправочника.НайтиЗначение(Родитель.ОбъектУчета, НомСтр, "РазделОтчета") = 0 Тогда
				СтатусВозврата(0);
				Возврат;           
			КонецЕсли;
			
			ВидОбъекта = мТаблСтруктураСправочника.ПолучитьЗначение(НомСтр, "ВидОбъекта");
			
			Если Найти(ВидОбъекта, ".") > 0 Тогда         
				// Тип значения - объект метаданных.
				НазначитьТип("ОбъектУчета", ВидОбъекта);    
				
				
			Иначе    
				
				НазначитьТип("ОбъектУчета", "Строка", 100);				
				
				// Тип значения - строка, элемент заданного вручную списка значений.
				мСписокВыбора = СоздатьОбъект("СписокЗначений");
				мСписокВыбора.ИзСтрокиСРазделителями(ВидОбъекта);
				
			КонецЕсли;			
		КонецЕсли;
		
	Иначе  

		ПредставлениеВида = ТипЗначенияСтр(Родитель.ОбъектУчета);
		                
		КолонкаПоиска  = "РазделОтчета";
		             
		НомСтр = 0;
		
		Если ПредставлениеВида = "Строка" Тогда
			
			ВидОбъекта = СокрП(Родитель.ОбъектУчета); 
			
			мТаблСтруктураСправочника.ВыбратьСтроки();
			Пока мТаблСтруктураСправочника.ПолучитьСтроку() = 1 Цикл
				
				Если Найти(мТаблСтруктураСправочника.ВидОбъекта, ВидОбъекта) > 0 Тогда
					НомСтр = мТаблСтруктураСправочника.НомерСтроки;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			        
			Если НомСтр = 0 Тогда
				СтатусВозврата(0);
				Возврат;           
			КонецЕсли; 
			
		Иначе
			
			Если Уровень() = 3 Тогда
				// Родителем элемента справочника является вид объектов учета
				ВидОбъекта    = ПредставлениеВида + "." + Родитель.ОбъектУчета.Вид();
				КолонкаПоиска = "ВидОбъекта";				
			Иначе
				// Объект указан непосредственно в разделе учета.
				ВидОбъекта    = Родитель.ОбъектУчета;
			КонецЕсли;
			
			Если мТаблСтруктураСправочника.НайтиЗначение(ВидОбъекта, НомСтр, КолонкаПоиска) = 0 Тогда
				СтатусВозврата(0);
				Возврат;           
			КонецЕсли;					
			
		КонецЕсли;
		              
		ВидОбъекта = мТаблСтруктураСправочника.ПолучитьЗначение(НомСтр, "ТипОбъекта");
		
		Если ПустаяСтрока(ВидОбъекта) = 1 Тогда
			Если Родитель.Родитель.Выбран() = 1 Тогда
				Если Родитель.Родитель.ОбъектУчета = Перечисление.РаскрываемыеРазделыОтчетности.НезавершенноеCтроительство Тогда
					Если Родитель.ОбъектУчета = Перечисление.ГруппыНезавершенногоСтроительства.ОборудованиеКУстановке Тогда
						ВидОбъекта = "Справочник.Оборудование";
					Иначе
						ВидОбъекта = "Справочник.ОбъектыСтроительства";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
		
		Если Найти(ВидОбъекта, ".") > 0 Тогда         
			// Тип значения - объект метаданных.
			НазначитьТип("ОбъектУчета", ВидОбъекта);    
			
			
		Иначе			
			НазначитьТип("ОбъектУчета", "Строка", 100);    
			
			// Тип значения - строка, элемент заданного вручную списка значений.
			мСписокВыбора = СоздатьОбъект("СписокЗначений");
			мСписокВыбора.ИзСтрокиСРазделителями(ВидОбъекта);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

//******************************************************************************
Процедура ПриНачалеВыбораЗначения(Элемент, Флаг)
	Перем ВыбЗнач;
	                  
	Если Элемент = "ОбъектУчета" Тогда
		Если ТипЗначенияСтр(ОбъектУчета) = "Строка" Тогда	
			Флаг = 0; 

			Поз  = 0;
			Если мСписокВыбора.ВыбратьЗначение(ВыбЗнач,,Поз,, 2) = 1 Тогда
				ОбъектУчета = ВыбЗнач;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
				
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
Процедура ПриЗаписи() 
	               
	Если Выбран() = 0 Тогда
		Если мОтказОтЗаписи = 1 Тогда 
			Сообщить("Для выхода из режима редактирования нажмите <Esc>.", ".");
			
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
		        
	Если ПустоеЗначение(ОбъектУчета) = 1 Тогда
		Сообщить("Не указан объект учета.", "!");
		Сообщить("Для выхода из режима редактирования нажмите <Esc>.", ".");		
		
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	Если ПроверкаДублейСтрок() = 1 Тогда
		Сообщить("Для выхода из режима редактирования нажмите <Esc>.", ".");		
		
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
					
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
Процедура ПриОткрытии()
    
    мТаблСтруктураСправочника = СоздатьОбъект("ТаблицаЗначений");
    мТаблСтруктураСправочника.НоваяКолонка("РазделОтчета",  "Перечисление.РаскрываемыеРазделыОтчетности"  );
    мТаблСтруктураСправочника.НоваяКолонка("ВидОбъекта",    "Строка"  );
    мТаблСтруктураСправочника.НоваяКолонка("ТипОбъекта",    "Строка"  );
	мТаблСтруктураСправочника.НоваяКолонка("ПорогУровень",  "Число", 2);
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.НематериальныеАктивы;
	мТаблСтруктураСправочника.ВидОбъекта    = "Перечисление.ГруппыНМА";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.НематериальныеАктивы"; 
	мТаблСтруктураСправочника.ПорогУровень  = 5;
    
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ОсновныеСредства;
	мТаблСтруктураСправочника.ВидОбъекта    = "Перечисление.ГруппыОС";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.ОсновныеСредства";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.НезавершенноеCтроительство;
	мТаблСтруктураСправочника.ВидОбъекта    = "Перечисление.ГруппыНезавершенногоСтроительства";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;

    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ДоходныеВложенияМЦ;
	мТаблСтруктураСправочника.ВидОбъекта    = "Перечисление.ВидыДоходныхВложений";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.ОсновныеСредства";
	мТаблСтруктураСправочника.ПорогУровень  = 5;
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ФинансовыеВложения;
	мТаблСтруктураСправочника.ВидОбъекта    = """Ценные бумаги""";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.ЦенныеБумаги";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	                                    
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ПрочиеВнеоборотныеАктивы; 
	мТаблСтруктураСправочника.ВидОбъекта    = "Перечисление.ВидыПрочихВнеоборотныхАктивов";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.ОбъектыСтроительства";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ТоварыОтгруженные;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.Контрагенты";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.РасходыБудущихПериодов;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.РасходыБудущихПериодов";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	             
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ДолгосрочнаяДебиторскаяЗадолженность;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;

    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.КраткосрочнаяДебиторскаяЗадолженность;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;
	         
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ДолгосрочнаяКредиторскаяЗадолженность; 
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.КраткосрочнаяКредиторскаяЗадолженность; 
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ДолгосрочныеЗаймыИКредиты;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	 
	
	мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.КраткосрочныеЗаймыИКредиты;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;
	                        
	мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.РезервыПредстоящихРасходов;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.Резервы";
	мТаблСтруктураСправочника.ПорогУровень  = 5;
	             
	мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.АрендованныеОсновныеСредства;
	мТаблСтруктураСправочника.ВидОбъекта    = "Перечисление.ГруппыОС";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.ОсновныеСредства";
	мТаблСтруктураСправочника.ПорогУровень  = 5;

    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ВыручкаИСебестоимость; 
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ОперационныеДоходы; 
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	          
    мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.ВнереализационныеДоходы; 
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "";
	мТаблСтруктураСправочника.ПорогУровень  = 5;

	мТаблСтруктураСправочника.НоваяСтрока();
    мТаблСтруктураСправочника.РазделОтчета  = Перечисление.РаскрываемыеРазделыОтчетности.РасходыНаНИОКР;
	мТаблСтруктураСправочника.ВидОбъекта    = "";
    мТаблСтруктураСправочника.ТипОбъекта    = "Справочник.НематериальныеАктивы";
	мТаблСтруктураСправочника.ПорогУровень  = 5;	
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************