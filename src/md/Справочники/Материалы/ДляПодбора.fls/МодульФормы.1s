////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем КонтекстФормыДокумента;
Перем БухИт, Сч10;

//******************************************************************************
// Функция ОстатокНаСкладе()
// 
// Вызывается из текстовой строки или колонки, в зависимости от того, где
// показываются остатки.
//
Функция ОстатокНаСкладе(РасчетИзКолонки=1)
    Остаток = 0;
	Если (РасчетИзКолонки = 0) или ((РасчетИзКолонки = 1) и (ФлагОстаткиВКолонке = 1)) Тогда
		Если (КонМесяца(КонтекстФормыДокумента.ДатаДок) <= КонецРассчитанногоПериодаБИ()) 
			и (ТекущийЭлемент().Выбран() = 1) Тогда
			Если МестоХранения.Выбран() = 1  Тогда
				Остаток = БухИт.СКД(ТекущийЭлемент().СубСчет10, "К",, ТекущийЭлемент(), МестоХранения);
			Иначе
				Остаток = БухИт.СКД(ТекущийЭлемент().СубСчет10, "К",, ТекущийЭлемент());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
    
	Возврат СокрЛ(Формат(Остаток, "Ч15.3."));
КонецФункции // ОстатокНаСкладе

//******************************************************************************
// СкладДокумента()
//
// Возвращаемое значение:
//  Строка, содержащая наименование места хранения.
//
// Вызывается из формул элементов диалога:
//  Текст "СкладДокумента".
//
// Описание:
//  Анализирует контекст формы документа, из которого открыт подбор. Если
// в документе выбрано место хранения, не совпадающее со значением отбора, 
// установленном в форме, то выводит в диалог предупреждающую об этом строку.
// 
Функция СкладДокумента()
	
	Если Метаданные.Документ(КонтекстФормыДокумента.Вид()).РеквизитШапки("МестоХранения").Выбран() = 1 Тогда
		Если КонтекстФормыДокумента.МестоХранения <> МестоХранения Тогда
			Возврат "Склад в документе: " + КонтекстФормыДокумента.МестоХранения.Наименование + "!";
		Иначе
			Возврат "";
		КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции // СкладДокумента()

//******************************************************************************
Функция ИнформационнаяСтрока()
	Перем Стр;

	Стр = "";
	Если ТекущийЭлемент().Выбран() = 1 Тогда
		Если КонМесяца(КонтекстФормыДокумента.ДатаДок) > КонецРассчитанногоПериодаБИ() Тогда
			Стр = "На " + Формат(КонтекстФормыДокумента.ДатаДок, "Д (0)ДДММГГГГ") + " бухгалтерские итоги не рассчитаны!"+РазделительСтрок+
					"Расчет итогов выполняется в режиме"+РазделительСтрок+
					"""Операции - Управление бухгалтерскими итогами"".";
	
		Иначе
			Стр = "Остаток материала """ + ТекущийЭлемент() + """: " + ОстатокНаСкладе(0) +
					" " +ТекущийЭлемент().ЕдиницаИзмерения + РазделительСтрок +
					"Вид материала: """+ТекущийЭлемент().СубСчет10.ПолнНаименование+""" (счет "+ТекущийЭлемент().СубСчет10+")"+РазделительСтрок+
					"Данные актуальны на конец дня " + Формат(КонМесяца(КонтекстФормыДокумента.ДатаДок), "Д (0)ДДММГГГГ");
		КонецЕсли;
	КонецЕсли;

	Возврат Стр;
КонецФункции //ИнформационнаяСтрока
//_____________________________________________________________________________
Процедура Отчет()
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомостьПоСчету");
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Счет", СчетПоКоду("10"));
	Расшифровка.Установить("ДанныеПоСубсчетам", 1);
	Расшифровка.Установить("Дата1", НачМесяца(КонтекстФормыДокумента.ДатаДок));
	Расшифровка.Установить("Дата2", КонМесяца(КонтекстФормыДокумента.ДатаДок));
	Расшифровка.Установить("ВидСубконто1", ВидыСубконто.Материалы);
	Если ТекущийЭлемент().Выбран() = 1 Тогда
		Расшифровка.Установить("Субконто1", ТекущийЭлемент());
		Если ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
			Расшифровка.Установить("ПоГруппам1", 1);
			Расшифровка.Установить("ОтборСубконто1", 1);
		Иначе
			Расшифровка.Установить("ПоГруппам1", 0);
			Расшифровка.Установить("ОтборСубконто1", 2);
		КонецЕсли;
	КонецЕсли;
	Расшифровка.Установить("ВидСубконто2", ВидыСубконто.МестаХранения);
	Расшифровка.Установить("Субконто2", МестоХранения);
	Если МестоХранения.Выбран() = 1 Тогда
		Расшифровка.Установить("ОтборСубконто2", 2);
	Иначе
		Расшифровка.Установить("ОтборСубконто2", 1);
	КонецЕсли;

	глРасшифровка = Расшифровка;
	глОбновить = 2;
	глТаблица = "";
	глФлагРасшифровки = 1;
	ОткрытьФорму("Отчет.ОборотноСальдоваяВедомостьПоСчету");
	глФлагРасшифровки = 0;
	глОбновить = 0;
КонецПроцедуры //Отчет

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Отчет();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Справочник." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
// Процедура ПриВыбореПоказаОстатковВКолонке()
// 
Процедура ПриВыбореПоказаОстатковВКолонке()
	Если ФлагОстаткиВКолонке = 0 Тогда
		Форма.КолонкаОстатка.Видимость(0);
	Иначе
		Форма.КолонкаОстатка.Видимость(1);
	КонецЕсли;
КонецПроцедуры // ПриВыбореПоказаОстатковВКолонке

//******************************************************************************
// 
Процедура ЗаполнениеФормы(Параметр)
	Если ТипЗначенияСтр(Параметр) = "СписокЗначений" Тогда
		КонтекстФормыДокумента = Параметр.Получить("Контекст");
		МестоХранения = Параметр.Получить("МестоХранения");
		БухИт.ПериодМ(КонтекстФормыДокумента.ДатаДок);
	КонецЕсли;
КонецПроцедуры // ЗаполнениеФормы

//******************************************************************************
// 
Процедура ПриОткрытии() // Предопределенная процедура
	Сч10 = СчетПоКоду("10");
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");

	ЗаполнениеФормы(Форма.Параметр);
	ФлагОстаткиВКолонке = ВосстановитьЗначение("ФормаПодбораМатериалов_ФлагОстаткиВКолонке");
	ПриВыбореПоказаОстатковВКолонке();
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Справочник." + Вид(),ТаблицаПечФорм);
	
КонецПроцедуры // ПриОткрытии

//******************************************************************************
// 
Процедура ПриПовторномОткрытии() // Предопределенная процедура
	ЗаполнениеФормы(Форма.Параметр);
КонецПроцедуры // ПриПовторномОткрытии

//******************************************************************************
// 
Процедура ПриЗакрытии() // Предопределенная процедура
	СохранитьЗначение("ФормаПодбораМатериалов_ФлагОстаткиВКолонке", ФлагОстаткиВКолонке);
КонецПроцедуры // ПриЗакрытии

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Оборотно-сальдовая ведомость по счету 10";
ТаблицаПечФорм.Кнопка       = "ОСВ-10";