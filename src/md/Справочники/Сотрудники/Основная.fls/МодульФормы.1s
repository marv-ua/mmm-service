////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем СписокНедоступныхКолонок;
Перем ИдентификаторФормы;
Перем ПолныйСписокКолонок;

//_____________________________________________________________________________
Процедура ФормированиеКарточек()
	
	Если ТекущийЭлемент().Выбран() = 0 Тогда
		Предупреждение("Нельзя ввести данные о доходах, не указав сотрудника.
						|Введите сотрудника.");
		Возврат;
						
	ИначеЕсли ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
		Предупреждение("Нельзя ввести данные о доходах для группы сотрудников.
						|Выберите конкретного сотрудника.");
		Возврат;
	КонецЕсли;
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Параметры.Установить("Год", ДатаГод(ИспользоватьДату()));
	Параметры.Установить("ДатаАктуальности", Мин(КонГода(ИспользоватьДату()), КонецРассчитанногоПериодаБИ()));
	Параметры.Установить("Сотрудник", ТекущийЭлемент());
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(2, "Налоговая карточка 1-НДФЛ");
	Меню.ДобавитьЗначение(9, "Справка о доходах физического лица 2-НДФЛ");	
	Меню.ДобавитьЗначение(6, "Индивидуальная карточка учета ЕСН за 2004-2009 гг.");
	Меню.ДобавитьЗначение(7, "Индивидуальная карточка по обязательному пенсионному страхованию");
	Меню.ДобавитьЗначение(11, "Карточка учета по страховым взносам");
	Меню.ДобавитьЗначение(8, "Формы прошлых лет");
	
	Выбор = "";
	Меню.ВыбратьЗначение(Выбор,,,,1);
	
	Если Выбор = 8 Тогда
		Меню = СоздатьОбъект("СписокЗначений");
		Меню.ДобавитьЗначение(1, "Налоговая карточка 1-НДФЛ за 2001 г.");
		Меню.ДобавитьЗначение(10, "Налоговая карточка 1-НДФЛ за 2002-2008 гг.");
		Меню.ДобавитьЗначение(3, "Справка о доходах физического лица 2-НДФЛ за 2001-2004 гг.");
		Меню.ДобавитьЗначение(4, "Индивидуальная карточка учета ЕСН за 2001 г.");
		Меню.ДобавитьЗначение(5, "Индивидуальная карточка учета ЕСН за 2002-2003 гг.");				
		
		Выбор = "";
		Меню.ВыбратьЗначение(Выбор,,,,1);
	КонецЕсли;
			
	Если Выбор = 1 Тогда
		ОткрытьФорму("Обработка.НалоговаяКарточка", Параметры);
		
	ИначеЕсли Выбор = 2 Тогда
		ОткрытьФорму("Обработка.Форма1НДФЛ2009", Параметры);
		
	ИначеЕсли Выбор = 3 Тогда
		ОткрытьФорму("Обработка.ОДоходах", Параметры);
		
	ИначеЕсли Выбор = 4 Тогда
		ОткрытьФорму("Обработка.ИндивидуальнаяКарточка", Параметры);
	
	ИначеЕсли Выбор = 5 Тогда
		ОткрытьФорму("Обработка.ИндивидуальнаяКарточкаПоЕСН2002", Параметры);
	
	ИначеЕсли Выбор = 6 Тогда
		ОткрытьФорму("Обработка.ИндивидуальнаяКарточкаПоЕСН2004", Параметры);
	
	ИначеЕсли Выбор = 7 Тогда
		ОткрытьФорму("Обработка.ИндивидуальнаяКарточкаПоОПС", Параметры);
		
	ИначеЕсли Выбор = 9 Тогда
		ОткрытьФорму("Отчет.ПодготовкаСведенийДляИМНС", Параметры);
		
	ИначеЕсли Выбор = 10 Тогда
		ОткрытьФорму("Обработка.Форма1НДФЛ2002", Параметры);
	
	ИначеЕсли Выбор = 11 Тогда
		ОткрытьФорму("Обработка.ФормаКарточкаУчетаПоСтраховымВзносам", Параметры);
	КонецЕсли;
	
КонецПроцедуры // ФормированиеКарточек()
//_____________________________________________________________________________
Процедура СформироватьНовыйПриказ()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("ПриказОПриемеНаРаботу","Приказ о приеме на работу");
	Меню.ДобавитьЗначение("ПриказОКадровыхИзменениях","Приказ о кадровых изменениях");
	Меню.ДобавитьЗначение("ПриказОбИзмененииОкладов","Приказ об изменении окладов");
	Меню.ДобавитьЗначение("ПриказОбУвольнении","Приказ об увольнении");
	ВидДокументаИзСписка = "";
	Если Меню.ВыбратьЗначение(ВидДокументаИзСписка,"Выберите вид приказа",,,1)=1 Тогда
		Расшифровка = СоздатьОбъект("СписокЗначений");
	    Расшифровка.Установить("Сотрудник", ?(ТекущийЭлемент().ЭтоГруппа()=0,ТекущийЭлемент(),""));

		глРасшифровка = Расшифровка;
		глФлагРасшифровки = 1;
		ОткрытьФорму("Документ."+ВидДокументаИзСписка);
		глФлагРасшифровки = 0;
	КонецЕсли;
КонецПроцедуры //СформироватьНовыйПриказ
//_____________________________________________________________________________
Процедура ПостроитьОтчетПоСотруднику()
	Если ТекущийЭлемент().Выбран() = 0 Тогда
		Предупреждение("Нельзя сформировать отчет, не указав сотрудника.
						|Введите сотрудника.");
	ИначеЕсли ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
		Предупреждение("Нельзя сформировать отчет для группы сотрудников.
						|Выберите конкретного сотрудника.");
	Иначе
		Расшифровка = СоздатьОбъект("СписокЗначений");
		Расшифровка.Установить("Отчет", "ОтчетПоСотрудникам");
		Расшифровка.Установить("ДатаОтчета", РабочаяДата());
		Расшифровка.Установить("Сотрудник", ТекущийЭлемент());
		
		глРасшифровка = Расшифровка;
		глФлагРасшифровки = 1;
		глОбновить = 0;
		ОткрытьФорму("Отчет.ОтчетПоСотрудникам");
		глФлагРасшифровки = 0;
	КонецЕсли;
КонецПроцедуры //ПостроитьОтчетПоСотруднику
//_____________________________________________________________________________
Процедура ПостроитьОтчетПоВсем()
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "ОтчетПоСотрудникам");
    Расшифровка.Установить("ДатаОтчета", РабочаяДата());
    Расшифровка.Установить("Сотрудник", "");

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.ОтчетПоСотрудникам");
	глФлагРасшифровки = 0;
КонецПроцедуры //ПостроитьОтчетПоВсем

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		ПостроитьОтчетПоСотруднику();
		
	ИначеЕсли НомерТекущейФормы = 2  Тогда
		ПостроитьОтчетПоВсем();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Справочник." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
// ПоКнопкеВыбораДаты()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка выбора даты.
//
// Описание:
//  Выбирается дата просмотра и редактирования значений периодических реквизитов 
// выбирается по кнопке, чтобы не менялся признак модифицированности формы.
//
Процедура ПоКнопкеВыбораДаты()
	
	глВвестиДатуПериодическихРеквизитов(Контекст, 0);
	
КонецПроцедуры // ПоКнопкеВыбораДаты()

//******************************************************************************
// ПоКнопкеИстория(ВидимыеРеквизиты)
//
// Параметры:
//  ВидимыеРеквизиты - "строка" - идентификаторы периодических реквизитов,
//                     значения которых надо показать, разделенные запятыми;
//                     если не передана - показываются все реквизиты.
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка "История".
//
// Описание:
//  Вызывается обработка "ЗначенияПериодическихРеквизитов" для просмотра истории 
// значений периодических реквизитов.
//
Процедура ПоКнопкеИстория(ВидимыеРеквизиты="")
	
	Если Константа.УчетЗарплатыВоВнешнейПрограмме = Да Тогда
		ВидимыеРеквизиты = "Подразделение";
	КонецЕсли;
	
	Стр = "Статус,Инвалид,КоличествоДнейБолезни,КоличествоДнейОтпуска,
	      |НачислятьНалогиСФОТ,НеВзиматьВзносыПФРиФСС,Оклад,Подразделение,ПроцентСевернойНадбавки,
		  |СальдоНалогаНаДоходы,СтатьяОтчисленийНаСоцНужды,СтатьяПрочихОтчисленийНаСоцНужды,
		  |СчетЗатрат,Субконто1,Субконто2,Субконто3,ХарактерРаботы";
	
	Если ПустоеЗначение(ВидимыеРеквизиты) = 1 Тогда
	    Меню = СоздатьОбъект("СписокЗначений");
		Меню.Установить("Все реквизиты", Стр);
		Меню.Установить("Подразделение", "Подразделение");
		Меню.Установить("Характер работы", "ХарактерРаботы");
		Меню.Установить("Инвалид", "Инвалид");
		Меню.Установить("Оклад", "Оклад,ПроцентСевернойНадбавки");
		Меню.Установить("Налог на доходы", "СальдоНалогаНаДоходы");
		Меню.Установить("Счет затрат", "СчетЗатрат,Субконто1,Субконто2,Субконто3,СтатьяОтчисленийНаСоцНужды,СтатьяПрочихОтчисленийНаСоцНужды");
		Меню.Установить("Статус резидента", "Статус");
		Меню.Установить("Данные в ПФР", "КоличествоДнейБолезни,КоличествоДнейОтпуска");
		Меню.Установить("Начисление налогов с ФОТ", "НачислятьНалогиСФОТ,НеВзиматьВзносыПФРиФСС");
		Если Меню.ВыбратьЗначение(ВидимыеРеквизиты, "", 0, 60, 1) = 0 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	глЗначенияПериодическихРеквизитов(Контекст,,, ВидимыеРеквизиты);
		
КонецПроцедуры // ПоКнопкеИстория()

//******************************************************************************
// УправлениеДиалогом()
//
// Параметры:
//  Нет
//
// Описание:
//  Управляет доступностью колонок
//
Процедура УправлениеДиалогом()
	
	Для Сч = 1 По СписокНедоступныхКолонок.РазмерСписка() Цикл
		Форма.ПолучитьАтрибут(СписокНедоступныхКолонок.ПолучитьЗначение(Сч)).Доступность(0);
	КонецЦикла;
	
КонецПроцедуры // УправлениеДиалогом()

//_____________________________________________________________________________
Процедура ПриОткрытии() //предопределенная
	
	Если Константа.УчетЗарплатыВоВнешнейПрограмме = Да Тогда
		Форма.КнопкаНалогиНаДоходы.Видимость(0);
		Форма.КнопкаНовыйПриказ.Видимость(0);
	КонецЕсли;
	РедактироватьВДиалоге(1,1);
	
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Справочник." + Вид(),ТаблицаПечФорм);
	
	// Управление видимостью колонок	
	глУстановитьВидимостьКолонок(Контекст, ИдентификаторФормы, ПолныйСписокКолонок, 1);
	
	СохранениеПериодическихРеквизитов(0);
	
КонецПроцедуры //ПриОткрытии

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриРедактированииНовойСтроки()
	
	УправлениеДиалогом();
	
	Копирование = ?(ПустоеЗначение(Наименование) = 1, 0, 1);
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;
	
	СпрОКСМ = СоздатьОбъект("Справочник.ОКСМ");
	Если СпрОКСМ.НайтиПоКоду("643") = 1 Тогда
	    Страна = СпрОКСМ.ТекущийЭлемент();
	КонецЕсли;
	
	ПаспортРоссии = СоздатьОбъект("Справочник.ДокументыУдостоверяющиеЛичность");
	Если ПаспортРоссии.НайтиПоНаименованию("Паспорт гражданина России") = 1 Тогда
	    ВидДокумента = ПаспортРоссии.ТекущийЭлемент();
	КонецЕсли;
					
	НачислятьНалогиСФОТ = 1;
	Подразделение = глЗначениеПоУмолчанию("ОсновноеПодразделение");
	
КонецПроцедуры // ПриРедактированииНовойСтроки()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеРедактированияСтроки()
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
ИдентификаторФормы	=	"Справочник_Сотрудники_ФормаСписка_Основная";

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Отчет по сотруднику";
ТаблицаПечФорм.Кнопка       = "По сотр.";

ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Отчет по всем сотрудникам";
ТаблицаПечФорм.Кнопка       = "По всем";

// Список колонок видимостью которых будем управлять
ПолныйСписокКолонок = СоздатьОбъект("СписокЗначений");
ПолныйСписокКолонок.ДобавитьЗначение("Код", "Код");
ПолныйСписокКолонок.ДобавитьЗначение("Наименование", "Наименование");
ПолныйСписокКолонок.ДобавитьЗначение("ИНН", "ИНН");
ПолныйСписокКолонок.ДобавитьЗначение("Пол", "Пол");
ПолныйСписокКолонок.ДобавитьЗначение("ДатаРождения", "Дата рождения");
ПолныйСписокКолонок.ДобавитьЗначение("СтраховойНомерПФР", "Номер страхового свидетельства ПФР");
ПолныйСписокКолонок.ДобавитьЗначение("Страна", "Страна ПМЖ");
ПолныйСписокКолонок.ДобавитьЗначение("ВидДокумента", "Вид документа");
ПолныйСписокКолонок.ДобавитьЗначение("ДокументСерия", "Серия документа");
ПолныйСписокКолонок.ДобавитьЗначение("ДокументНомер", "Номер документа");
ПолныйСписокКолонок.ДобавитьЗначение("ДокументКемВыдан", "Кем выдан документ");
ПолныйСписокКолонок.ДобавитьЗначение("ДокументДатаВыдачи", "Дата выдачи документа");
ПолныйСписокКолонок.ДобавитьЗначение("ДатаПриема", "Дата начала ведения учета налогов в программе");
ПолныйСписокКолонок.ДобавитьЗначение("ХарактерРаботы", "Характер работы (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Должность", "Должность");
ПолныйСписокКолонок.ДобавитьЗначение("Подразделение", "Подразделение (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Телефон", "Телефон");
ПолныйСписокКолонок.ДобавитьЗначение("Оклад", "Оклад (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("ПроцентСевернойНадбавки", "Северная надбавка (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("СчетЗатрат", "Счет затрат (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Субконто1", "Субконто 1 (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Субконто2", "Субконто 2 (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Субконто3", "Субконто 3 (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("СальдоНалогаНаДоходы", "Сальдо НДФЛ (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("ВаловойДоход_СНачалаГода", "Валовой доход с начала года");
ПолныйСписокКолонок.ДобавитьЗначение("ИнвалидТекст", "Инвалид (редактируется в форме элемента)");  // вычисляемая колонка
ПолныйСписокКолонок.ДобавитьЗначение("АдресПрописка", "Адрес по регистрации(редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("АдресФакт", "Адрес места жительства (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("МестоРождения", "Место рождения (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("НачислятьНалогиСФОТТекст", "Начислять налоги с ФОТ (редактируется в форме элемента)");  // вычисляемая колонка

//	При первом запуске, пока пользователь не настроил видимость колонок,
//  будут видимы только колонки "Код","Наименование"
ПолныйСписокКолонок.Пометка(1,	1);
ПолныйСписокКолонок.Пометка(2, 	1);

// Список недоступных для редактирования колонок
СписокНедоступныхКолонок = СоздатьОбъект("СписокЗначений");
СписокНедоступныхКолонок.ДобавитьЗначение("ХарактерРаботы");  
СписокНедоступныхКолонок.ДобавитьЗначение("Подразделение");  
СписокНедоступныхКолонок.ДобавитьЗначение("Оклад");
СписокНедоступныхКолонок.ДобавитьЗначение("СальдоНалогаНаДоходы");
СписокНедоступныхКолонок.ДобавитьЗначение("СчетЗатрат");
СписокНедоступныхКолонок.ДобавитьЗначение("Субконто1");
СписокНедоступныхКолонок.ДобавитьЗначение("Субконто2");
СписокНедоступныхКолонок.ДобавитьЗначение("Субконто3");
СписокНедоступныхКолонок.ДобавитьЗначение("ПроцентСевернойНадбавки");
СписокНедоступныхКолонок.ДобавитьЗначение("АдресПрописка");
СписокНедоступныхКолонок.ДобавитьЗначение("АдресФакт");
СписокНедоступныхКолонок.ДобавитьЗначение("МестоРождения");
