Перем МД;
Перем СправОтбора;
Перем СписокАтрибутов;
	
//******************************************************************************
//	ДоступностьРеквизитов()
//
//	Описание:
//	Определяет доступность методов обработки реквизита "Значение".

Процедура ДоступностьРеквизитов()
	
	Если (ТипЗначенияСтр(Значение) = "Справочник") или (ТипЗначенияСтр(Значение) = "Счет") Тогда
		Если (СокрП(Атрибут) = "РазделительУчета") Тогда
			Значение.ВыборГруппы(0);
		Иначе
			Значение.ВыборГруппы(1);
		КонецЕсли;
		Если (ТипЗначенияСтр(Значение) = "Счет") Тогда
			Форма.Значение.Редактирование(1);
		КонецЕсли;
	ИначеЕсли (ТипЗначенияСтр(Значение) = "Строка") Тогда
		Если Найти(Атрибут,".Вид()") > 0 Тогда
			Форма.Значение.Редактирование(0);
		Иначе 
			Форма.Значение.Редактирование(1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДоступностьРеквизитов()

//******************************************************************************
//	ПодобратьВидыСубконто(АтрибутСчета)
//
//	Параметры:
//	АтрибутСчета (строка) - ("Дебета" или "Кредита") - сторона бухгалтерских итогов
//	по которой строится список возможных видов субконто
//
//	Описание:
//	Определяет какие виды субконто могут быть 
//	использованы для отбора, приоритет в данном случае
//	отдается уже выбранным счетам "Дебета" или "Кредита"

Функция ПодобратьВидыСубконто(АтрибутСчета)
	
	СписокСубконто    = СоздатьОбъект("СписокЗначений");
	Если СправОтбора.ВыбратьЭлементыПоРеквизиту("Атрибут","Счет"+АтрибутСчета) = 1 Тогда
		Пока СправОтбора.ПолучитьЭлемент() = 1 Цикл
			Если (СправОтбора.Значение.Выбран() = 1) и (СписокСубконто.РазмерСписка() = 0) Тогда
				Для Номер = 1 По СправОтбора.Значение.КоличествоСубконто() Цикл
					СписокСубконто.ДобавитьЗначение(СправОтбора.Значение.ВидСубконто(Номер));
				КонецЦикла;
				
			ИначеЕсли (СправОтбора.Значение.Выбран() = 1) Тогда
				Номер = 1;
				Пока Номер <= СписокСубконто.РазмерСписка() Цикл
					ВидСубк = СписокСубконто.ПолучитьЗначение(Номер);
					
					Для Индекс = 1 По СправОтбора.Значение.КоличествоСубконто() Цикл
						Если СправОтбора.Значение.ВидСубконто(Индекс) = ВидСубк Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
						
					Если СправОтбора.Значение.КоличествоСубконто() < Индекс Тогда
						СписокСубконто.УдалитьЗначение(Номер);
					Иначе
						Номер = Номер+1;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли;
			
			Если (СправОтбора.Значение.Выбран() = 1) и (СписокСубконто.РазмерСписка() = 0) Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Для Номер = 1 По МД.ВидСубконто() Цикл
			СписокСубконто.ДобавитьЗначение(ВидыСубконто.ЗначениеПоИдентификатору(МД.ВидСубконто(Номер).Идентификатор));
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокСубконто;
	
КонецФункции // ПодобратьВидыСубконто()

//******************************************************************************
//	СформироватьСписокАтрибутовПланаСчетов()
//
//	Описание:
//	Формирует список атрибутов по которым устанавливаются
//	условия для расчета итогов по бухгалтерским итогам.

Процедура СформироватьСписокАтрибутовПланаСчетов()
	
	СписокАтрибутов.УдалитьВсе();
	Если (МД.РазделительУчета.Выбран() = 1) Тогда
		СписокАтрибутов.Установить("Разделитель учета","РазделительУчета");
	КонецЕсли;
	
	Если (ПустоеЗначение(Владелец.Статья) = 0) или ((ПустоеЗначение(Владелец.Показатель) = 0) и (СправОтбора.НайтиПоРеквизиту("Атрибут","СчетКредита",0) = 0)) Тогда
		СписокАтрибутов.Установить("Счет дебета","СчетДебета");
		Если ПодобратьВидыСубконто("Дебета").РазмерСписка() > 0 Тогда
			СписокАтрибутов.Установить("Субконто дебета","СубконтоДебета");
		КонецЕсли;
	КонецЕсли;
	
	Если (ПустоеЗначение(Владелец.Статья) = 0) или ((ПустоеЗначение(Владелец.Показатель) = 0) и (СправОтбора.НайтиПоРеквизиту("Атрибут","СчетДебета",0) = 0)) Тогда
		СписокАтрибутов.Установить("Счет кредита","СчетКредита");
		Если ПодобратьВидыСубконто("Кредита").РазмерСписка() > 0 Тогда
			СписокАтрибутов.Установить("Субконто кредита","СубконтоКредита");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СформироватьСписокАтрибутовПланаСчетов()
	
//******************************************************************************
//	СформироватьСписокАтрибутовРегистра()
//
//	Описание:
//	Формирует список атрибутов по которым устанавливаются
//	условия для расчета итогов по регистрам

Процедура СформироватьСписокАтрибутовРегистра()
	
	Если СписокАтрибутов.РазмерСписка() = 0 Тогда
		МДРегистр = МД.Регистр(СтрЗаменить(Владелец.ВидОбъекта,"Регистр.",""));
		СписокАтрибутов.Установить("Текущий документ", "ТекущийДокумент");
		СписокАтрибутов.Установить("Текущий документ (Вид документа)", "ТекущийДокумент.Вид()");
		Для Номер = 1 По МДРегистр.Измерение() Цикл
			СписокАтрибутов.Установить("Измерение " + """" + МДРегистр.Измерение(Номер).Представление() + """", МДРегистр.Измерение(Номер).Идентификатор);
			Если (МДРегистр.Измерение(Номер).Тип = "Документ") и 
			(ПустаяСтрока(МДРегистр.Измерение(Номер).Вид) = 1) Тогда
				СписокАтрибутов.Установить("Измерение " + """" + МДРегистр.Измерение(Номер).Представление() + " (Вид документа)" + """", МДРегистр.Измерение(Номер).Идентификатор+".Вид()");
			КонецЕсли;
		КонецЦикла;
		Для Номер = 1 По МДРегистр.Реквизит() Цикл
			СписокАтрибутов.Установить("Реквизит " + """" + МДРегистр.Реквизит(Номер).Представление() + """", МДРегистр.Реквизит(Номер).Идентификатор);
			Если (МДРегистр.Реквизит(Номер).Тип = "Документ") и 
			(ПустаяСтрока(МДРегистр.Реквизит(Номер).Вид) = 1) Тогда
				СписокАтрибутов.Установить("Реквизит " + """" + МДРегистр.Реквизит(Номер).Представление() + " (Вид документа)" + """", МДРегистр.Реквизит(Номер).Идентификатор+".Вид()");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // СформироватьСписокАтрибутовРегистра()
	
//******************************************************************************
//	Предопределенная процедура.

Процедура ПриОткрытии()
		
	СправОтбора.ИспользоватьВладельца(Владелец);
	Если Найти(Владелец.ВидОбъекта,"ПланСчетов.") > 0 Тогда
		СформироватьСписокАтрибутовПланаСчетов();
	ИначеЕсли Найти(Владелец.ВидОбъекта,"Регистр.") > 0 Тогда
		СформироватьСписокАтрибутовРегистра();
	КонецЕсли;
	
	ДоступностьРеквизитов();
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
//	Предопределенная процедура.

Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагПродолжения)
	
	Если ИдентЭлемДиалога = "Представление" Тогда
		Если СписокАтрибутов.ВыбратьЗначение(Атрибут,,,,2) = 1 Тогда
			Позиция = СписокАтрибутов.НайтиЗначение(СокрП(Атрибут));
			СписокАтрибутов.ПолучитьЗначение(Позиция,Представление);
			
			Если Найти(Владелец.ВидОбъекта,"Регистр.") > 0 Тогда
				Код = Позиция;
				Если СокрП(Атрибут) = "ТекущийДокумент" Тогда
					НазначитьТип("Значение", "Документ");
					
				ИначеЕсли Найти(Атрибут,".Вид()") > 0 Тогда
					НазначитьТип("Значение", "Строка", 100);
					
				Иначе
					Если МД.Регистр(СтрЗаменить(Владелец.ВидОбъекта,"Регистр.","")).Измерение(СокрП(Атрибут)).Выбран() = 1 Тогда
						МДАтрибут = МД.Регистр(СтрЗаменить(Владелец.ВидОбъекта,"Регистр.","")).Измерение(СокрП(Атрибут));
					Иначе
						МДАтрибут = МД.Регистр(СтрЗаменить(Владелец.ВидОбъекта,"Регистр.","")).Реквизит(СокрП(Атрибут));
					КонецЕсли;
					НазначитьТип("Значение", МДАтрибут.Тип + ?(ПустоеЗначение(МДАтрибут.Вид) = 0, "." + МДАтрибут.Вид,""), МДАтрибут.Длина, МДАтрибут.Точность);
					
				КонецЕсли;
				
			ИначеЕсли (СокрП(Атрибут) = "РазделительУчета") Тогда
				Код = 1;
				НазначитьТип("Значение", МД.РазделительУчета);
				
			ИначеЕсли (Сред(Атрибут,1,4) = "Счет") Тогда
				Код = ?(СокрП(Сред(Атрибут,5)) = "Дебета", 2, 4);
				НазначитьТип("Значение", "Счет"+СтрЗаменить(Владелец.ВидОбъекта,"ПланСчетов.","."));
				
			Иначе
				Код = ?(СокрП(Сред(Атрибут,9)) = "Дебета", 3, 5);
				СписокСубконто = ПодобратьВидыСубконто(СокрП(Сред(Атрибут,9)));
				ВидСубконто = ПолучитьПустоеЗначение("ВидыСубконто");
				Если СписокСубконто.РазмерСписка() = 1 Тогда
					ВидСубконто = СписокСубконто.ПолучитьЗначение(1);
				ИначеЕсли СписокСубконто.ВыбратьЗначение(ВидСубконто,,,,2) = 0 Тогда
					ВидСубконто = СписокСубконто.ПолучитьЗначение(1);
				КонецЕсли;
				
				ДополнительныеУсловия = ВидСубконто.Идентификатор();
				НазначитьТип("Значение",ВидСубконто);
				Представление  = СокрП(Представление) + " """+СокрП(ВидСубконто) + """";
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИдентЭлемДиалога = "Операнд" Тогда
		
		СписокОперандов = СоздатьОбъект("СписокЗначений");
		СписокОперандов.ДобавитьЗначение("Равно");
		СписокОперандов.ДобавитьЗначение("Не равно");
		СписокОперандов.ВыбратьЗначение(Операнд,,,,2);
		
	ИначеЕсли ИдентЭлемДиалога = "Значение" Тогда
		
		Если СокрП(Атрибут) = "ТекущийДокумент" Тогда
			ДокументыДляВыбора = "";
			Для Номер = 1 По МД.Документ() Цикл
				Если МД.Документ(Номер).ОперативныйУчет = 1 Тогда 
					ДокументыДляВыбора = ДокументыДляВыбора + МД.Документ(Номер).Идентификатор + "," ;
				КонецЕсли;
			КонецЦикла;
			Значение.ВидыДляВыбора(ДокументыДляВыбора);
			
		ИначеЕсли Найти(Атрибут,".Вид()") > 0 Тогда
			СписокВидовДокументов = СоздатьОбъект("СписокЗначений");
			Для Номер = 1 По МД.Документ() Цикл
				СписокВидовДокументов.ДобавитьЗначение(МД.Документ(Номер).Идентификатор, МД.Документ(Номер).Представление());
			КонецЦикла;
			Позиция = 0;
			СписокВидовДокументов.СортироватьПоПредставлению();
			Если СписокВидовДокументов.ВыбратьЗначение(ДополнительныеУсловия,,Позиция,,2) = 1 Тогда
				СписокВидовДокументов.ПолучитьЗначение(Позиция, Значение);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДоступностьРеквизитов();
	
	Если (Сред(Атрибут,1,8) <> "Субконто") и (Найти(Атрибут,".Вид()") = 0) Тогда
		ДополнительныеУсловия = "";
	КонецЕсли;
	Если ПустаяСтрока(Операнд) = 1 Тогда
		Операнд = "Равно";
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
//	Предопределенная процедура.

Процедура ПриЗаписи()
		
	Если (Сред(Атрибут,1,4) = "Счет") Тогда
		Если (Значение.Выбран() = 1) Тогда
			СписокСубконто    = СоздатьОбъект("СписокЗначений");
			СписокУдаляемыхСубконто  = СоздатьОбъект("СписокЗначений");
			СписокВидовСубконто  = СоздатьОбъект("СписокЗначений");
			Для Номер = 1 По Значение.КоличествоСубконто() Цикл
				СписокСубконто.ДобавитьЗначение(Значение.ВидСубконто(Номер));
			КонецЦикла;
			
			Если СправОтбора.ВыбратьЭлементыПоРеквизиту("Атрибут","Субконто"+СокрП(Сред(Атрибут,5))) = 1 Тогда
				Пока СправОтбора.ПолучитьЭлемент() = 1 Цикл
					ВидСубконто = ВидыСубконто.ЗначениеПоИдентификатору(СокрП(СправОтбора.ДополнительныеУсловия));
					Если СписокСубконто.НайтиЗначение(ВидСубконто) = 0 Тогда
						СписокВидовСубконто.Установить(СокрП(СправОтбора.ДополнительныеУсловия),ВидСубконто);
						СписокУдаляемыхСубконто.ДобавитьЗначение(СправОтбора.ТекущийЭлемент());
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если СписокВидовСубконто.РазмерСписка() > 0 Тогда
				
				ТекстВопроса = "Для счета "+Значение.Код+" """+Значение.Наименование+"""
							   |нельзя назначать фильтр по субконто.";
				Для Номер = 1 По СписокВидовСубконто.РазмерСписка() Цикл
					ТекстВопроса = ТекстВопроса + РазделительСтрок + СписокВидовСубконто.ПолучитьЗначение(Номер);
				КонецЦикла;
				
				ТекстВопроса = ТекстВопроса + РазделительСтрок + "Указанные субконто будут удалены!";
				Если Вопрос(ТекстВопроса,"ОК+Отмена") = "ОК" Тогда
					Для Номер = 1 По СписокУдаляемыхСубконто.РазмерСписка() Цикл
						СправОтбора.НайтиЭлемент(СписокУдаляемыхСубконто.ПолучитьЗначение(Номер));
						СправОтбора.Удалить();
					КонецЦикла;
				Иначе
					СтатусВозврата(0);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Предупреждение(СокрП(Представление) + " не установлен!");
			СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры // ПриЗаписи()

//******************************************************************************

МД              = Метаданные;
СписокАтрибутов = СоздатьОбъект("СписокЗначений");
СправОтбора     = СоздатьОбъект("Справочник.ФП_ОтборДанных");