Перем СписокВидовРасходов;  
Перем СписокЭлементовРасхода;
//******************************************************************************
// ПриУстановкеФлажкаНачислятьАмортизацию()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  одновременно с первой установкой флажка выставяется реквизит Дата прининятия к учету.
//
Процедура ПриУстановкеФлажкаНачислятьАмортизацию()
	Если ПустоеЗначение(МатериалДляОтраженияВСоставеМПЗ)=0 Тогда
		Если (НачислятьАмортизацию=1) И (ПустоеЗначение(ДатаВводаВЭксплуатацию)=1) Тогда
			ВвестиДату(ДатаВводаВЭксплуатацию,"Введите дату ввода в эксплуатацию"); 			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	// ПриУстановкеФлажкаНачислятьАмортизацию
//******************************************************************************
// ПриВыбореПорядкаНачисленияАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореПорядкаНачисленияАмортизации()
	
	Если ПодлежитАмортизации = 1 Тогда
		Форма.НачислятьАмортизацию.Заголовок("Начислять амортизацию");

	Иначе
		Форма.НачислятьАмортизацию.Заголовок("Начислять износ (для объектов введенных до 2006 г.)");
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореПорядкаНачисленияАмортизации()

//******************************************************************************
// ПриВыбореСпособаНачисленияАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореСпособаНачисленияАмортизации()
	    
	Если СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
        Форма.ИспользоватьСлой("Износ", 0);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 1);
		
	ИначеЕсли СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукцииРабот Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 1);
        Форма.ИспользоватьСлой("Износ", 0);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 0);
		
	ИначеЕсли СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.ПоЕдинымНормам Тогда
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
		Форма.ИспользоватьСлой("Износ", 1);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 0);
	Иначе
		Форма.ИспользоватьСлой("ОбъемПродукции", 0);
		Форма.ИспользоватьСлой("Износ", 0);
		Форма.ИспользоватьСлой("КоэффициентУскорения", 0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСпособаНачисленияАмортизации()

//******************************************************************************
// ПриВыбореМетодаНачисленияАмортизации()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореМетодаНачисленияАмортизации()
	
	Если МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Нелинейный Тогда
		Форма.ИспользоватьСлой("БазоваяСтоимость", 1);

	Иначе
		Форма.ИспользоватьСлой("БазоваяСтоимость", 0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореМетодаНачисленияАмортизации()

//******************************************************************************
// ПриВыбореВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//
Процедура ПриВыбореВидаРасхода()
	      
	Если (ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы)
	 или (ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы)	Тогда
	    ЭлементРасхода = Перечисление.ГруппыВидыРасходов.Амортизация;
	КонецЕсли;
	
КонецПроцедуры //ПриВыбореВидаРасхода

//******************************************************************************
//
// ПриИзмененииВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Графа "Вид расхода".
//
// Описание:
//  Осуществляется управление реквизитов "объект" и "элемент расхода"
//  в зависимости от выбранного вида расхода.
//
Процедура ПриИзмененииВидаРасхода()
	
	ТипЭлементаРасхода = "";
	ВидыОбъекта = "";
	Если ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеТоваров Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеМатериалов Тогда
		ВидыОбъекта = "Материалы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства,Оборудование";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.СтроительствоОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг Тогда
		ВидыОбъекта = "ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеПрав Тогда
		ВидыОбъекта = "Договоры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.НИОКР Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов Тогда
		ВидыОбъекта = "РасходыБудущихПериодов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		ВидыОбъекта = "ВидыНоменклатуры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВнереализационныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ВнереализационныеРасходы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияОсновныхСредств Тогда
		ВидыОбъекта = "ОсновныеСредства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияПрочегоИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОбъектыСтроительства,ЦенныеБумаги";
	КонецЕсли;
	
	НазначитьТип("ЭлементРасхода", ТипЭлементаРасхода);
	Если ПустоеЗначение(ТипЭлементаРасхода) = 1 Тогда
		Форма.ЭлементРасхода.Доступность(0);
		Форма.ПодписьЭлементРасхода.Доступность(0);
		
	Иначе
		Форма.ЭлементРасхода.Доступность(1);
		Форма.ПодписьЭлементРасхода.Доступность(1);
	КонецЕсли;
	
	Если ПустоеЗначение(ВидыОбъекта) = 0 Тогда
		Если Найти("," + ВидыОбъекта + ",", "," + Объект.Вид() + ",") = 0 Тогда
			Объект = "";
		КонецЕсли;
		Объект.ВидыДляВыбора(ВидыОбъекта);
		Форма.Объект.Доступность(1);
		Форма.ПодписьОбъект.Доступность(1);
		
	Иначе
		Объект = "";
		Форма.Объект.Доступность(0);
		Форма.ПодписьОбъект.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииВидаРасхода()

//******************************************************************************
// ПриВыбореСчета()
// 
// Вызывается из формул элементов диалога:
//  Счет.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета()
	
	Если Форма.АктивныйЭлемент() = "СчетЗатрат" Тогда
		Если СчетЗатрат.Забалансовый = 1 Тогда
		    Предупреждение("Счет отнесения затрат должен быть балансовым.");
		КонецЕсли;
	КонецЕсли;
	
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто" + А, СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
	
КонецПроцедуры // ПриВыбореСчета()

//******************************************************************************
// ПриВыбореШифраЕНАОФ()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореШифраЕНАОФ()
	
	Если ШифрПоЕНАОФ.Выбран() = 1 Тогда
	    КоэффициентАмортизации = ШифрПоЕНАОФ.НормаАморт;
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореШифраЕНАОФ()

//******************************************************************************
// ПриВыбореТипаОС()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореТипаОС()
	
	ТипОС = ТипыОС.ПолучитьЗначение(ТипыОС.ТекущаяСтрока());
	Если Собственное <> ТипОС Тогда
		Собственное = ТипОС;
	КонецЕсли;

	Если Собственное = 1 Тогда
		Позиция = Форма.Закладки.НайтиЗначение("Бухгалтерский учет");
		Если Позиция = 0 Тогда
			Форма.Закладки.ДобавитьЗначение("Бухгалтерский учет");
		КонецЕсли;
		
		Позиция = Форма.Закладки.НайтиЗначение("Налоговый учет");
		Если Позиция = 0 Тогда
			Форма.Закладки.ДобавитьЗначение("Налоговый учет");
		КонецЕсли;
		
		Позиция = Форма.Закладки.НайтиЗначение("Модернизация");
		Если Позиция = 0 Тогда
			Форма.Закладки.ДобавитьЗначение("Модернизация");
		КонецЕсли;
		
		Форма.ИспользоватьСлой("Собственное", 1);
		Форма.ИспользоватьСлой("Арендованное", 0);
		ПриВыбореПорядкаНачисленияАмортизации();
		
	ИначеЕсли Собственное = 2 Тогда
		Позиция = Форма.Закладки.НайтиЗначение("Бухгалтерский учет");
		Если Позиция > 0 Тогда
			Форма.Закладки.УдалитьЗначение(Позиция);
		КонецЕсли;

		Позиция = Форма.Закладки.НайтиЗначение("Налоговый учет");
		Если Позиция > 0 Тогда
			Форма.Закладки.УдалитьЗначение(Позиция);
		КонецЕсли;
		
		Позиция = Форма.Закладки.НайтиЗначение("Модернизация");
		Если Позиция > 0 Тогда
			Форма.Закладки.УдалитьЗначение(Позиция);
		КонецЕсли;

		Форма.ИспользоватьСлой("Собственное", 0);
		Форма.ИспользоватьСлой("Арендованное", 1);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореТипаОС()

//******************************************************************************
// ПриУстановкеФлажкаОтраженВСоставеМПЗ()
//
// Управляет доступностью закладки "Модернизация"
//
Процедура ПриУстановкеФлажкаОтраженВСоставеМПЗ()
	Если ОтраженВСоставеМПЗ = 1 Тогда
		Позиция = Форма.Закладки.НайтиЗначение("Модернизация");
		Если (Позиция > 0) Тогда
			Форма.Закладки.УдалитьЗначение(Позиция);
			СтавкаНалогаНаИмущество = 0;
			Форма.СтавкаНалогаНаИмущество.Доступность(0);
		КонецЕсли;
	Иначе
		
		Если ПустоеЗначение(ТекущийЭлемент()) = 0 Тогда
			СтавкаНалогаНаИмущество  = ТекущийЭлемент().СтавкаНалогаНаИмущество.Получить(ИспользоватьДату());
		Иначе
			СтавкаНалогаНаИмущество = глПолучитьСтавкуНалога("Имущество", РабочаяДата());
		КонецЕсли; 
		
		Форма.СтавкаНалогаНаИмущество.Доступность(1);
		ПриВыбореТипаОС()
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// ИнформационнаяСтрока(Учет)
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается функция.
//
Функция ИнформационнаяСтрока(Учет)

	Стр = "";
	Если Учет = "Б" Тогда
		Если ПодлежитАмортизации = 0 Тогда
		    Стр = "Основное средство не подлежит амортизации. Начисление износа производится по установленным нормам амортизационных отчислений.";
		КонецЕсли;
		
	ИначеЕсли Учет = "Н" Тогда
		Если ПодлежитАмортизации = 0 Тогда
		    Стр = "Основное средство не подлежит амортизации.";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции // ИнформационнаяСтрока()

//******************************************************************************
// ПоКнопкеВыбораДаты()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка выбора даты.
//
// Описание:
//  Выбирается дата просмотра и редактирования значений периодических реквизитов 
// выбирается по кнопке, чтобы не менялся признак модифицированности формы.
//
Процедура ПоКнопкеВыбораДаты()
	
	глВвестиДатуПериодическихРеквизитов(Контекст, 1);
	
КонецПроцедуры // ПоКнопкеВыбораДаты()

//******************************************************************************
// ПоКнопкеИстория(ВидимыеРеквизиты)
//
// Параметры:
//  ВидимыеРеквизиты - "строка" - идентификаторы периодических реквизитов,
//                     значения которых надо показать, разделенные запятыми;
//                     если не передана - показываются все реквизиты.
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка "История".
//
// Описание:
//  Вызывается обработка "ЗначенияПериодическихРеквизитов" для просмотра истории 
// значений периодических реквизитов.
//
Процедура ПоКнопкеИстория(ВидимыеРеквизиты="")
	
	Стр = "Подразделение,МОЛ,Состояние,ОбъектМодернизирован,НачислятьАмортизацию," +
		  "НаходитсяВЗалоге,ПервоначальнаяСтоимость, СрокПолезногоИспользования," +
		  "ОбщийОбъемПродукцииРабот,ФактическийОбъемПродукцииРаботЗаМесяц,"+
		  "СчетЗатрат,Субконто1,Субконто2,Субконто3,КоэффициентАмортизации, ОстаточнаяСтоимостьПослеМодернизации"+
		  "СпециальныйКоэффициент,ПервоначальнаяСтоимостьН, СрокПолезногоИспользованияН,"+
		  "БазоваяСтоимость, ВидРасхода, ЭлементРасхода,Объект, СтавкаНалогаНаИмущество";
	
	Если ПустоеЗначение(ВидимыеРеквизиты) = 1 Тогда
	    Меню = СоздатьОбъект("СписокЗначений");
		Меню.Установить("Все реквизиты", Стр);
		Меню.Установить("Состояние ОС",  "Состояние");
		Меню.Установить("Счет затрат",   "СчетЗатрат, Субконто1, Субконто2, Субконто3");
		Меню.Установить("Вид расхода",   "ВидРасхода, ЭлементРасхода, Объект");
		Меню.Установить("Модернизация",  "ОбъектМодернизирован, ПервоначальнаяСтоимость,
									     |ОстаточнаяСтоимостьПослеМодернизации, СрокПолезногоИспользования,
										 |ОбщийОбъемПродукцииРабот, ПервоначальнаяСтоимостьН,
										 |СрокПолезногоИспользованияН");
		
		Если Меню.ВыбратьЗначение(ВидимыеРеквизиты, "", 0, 60, 1) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	глЗначенияПериодическихРеквизитов(Контекст, , , ВидимыеРеквизиты);
	
КонецПроцедуры // ПоКнопкеИстория()

//******************************************************************************
// ПриВыбореОКОФ()   
//
//Устанавливается значение реквизита "Амортизационная группа" в соответствии
//со значением соответствующего реквизита справочника ОКОФ
//
Процедура ПриВыбореОКОФ()
	Если ПустоеЗначение(АмортизационнаяГруппа)=1 Тогда
		АмортизационнаяГруппа=КодПоОКОФ.АмортизационнаяГруппа;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер, Значение)
	
	Если Значение = "Общие сведения" Тогда
		Форма.ИспользоватьСлой("Основной, ОбщиеСведения", 2);
		Если Собственное = 1 Тогда
			Форма.ИспользоватьСлой("Собственное", 1);
			ПриВыбореПорядкаНачисленияАмортизации();
			
		ИначеЕсли Собственное = 2 Тогда
			Форма.ИспользоватьСлой("Арендованное", 1);
		КонецЕсли;

	ИначеЕсли Значение = "Бухгалтерский учет" Тогда
		Если ОтраженВСоставеМПЗ=1 Тогда
			Форма.ИспользоватьСлой("Основной, ОтраженВСоставеМПЗ", 2);
		Иначе
			Форма.ИспользоватьСлой("Основной, БухгалтерскийУчет", 2);
			Если ПодлежитАмортизации = 1 Тогда
				Форма.ИспользоватьСлой("Амортизация", 1);
				ПриВыбореСпособаНачисленияАмортизации();
				
			Иначе
				Форма.ИспользоватьСлой("Износ", 1);
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли Значение = "Налоговый учет" Тогда
		Форма.ИспользоватьСлой("Основной, НалоговыйУчет", 2);
		Если ПодлежитАмортизации = 1 Тогда
			Форма.ИспользоватьСлой("АмортизацияН", 1);
			ПриВыбореМетодаНачисленияАмортизации();
			
			Если ДатаВводаВЭксплуатацию < '01.01.2002' Тогда
			    Форма.ИспользоватьСлой("АмортизацияДо2002", 1);
			Иначе
				Форма.ИспользоватьСлой("АмортизацияДо2002", 0);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Значение = "Модернизация" Тогда
		Форма.ИспользоватьСлой("Основной, Модернизация", 2);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()
    
//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если ЭлементДиалога = "ВидРасхода" Тогда
		Флаг = 0;
		Позиция = СписокВидовРасходов.НайтиЗначение(ВидРасхода);
		ВыбранныйВидРасхода = ВидРасхода;
		Если СписокВидовРасходов.ВыбратьЗначение(ВыбранныйВидРасхода,, Позиция,, 2) = 1 Тогда
			Если ВидРасхода <> ВыбранныйВидРасхода Тогда
				ВидРасхода = ВыбранныйВидРасхода;
			    ПриИзмененииВидаРасхода();
				ПриВыбореВидаРасхода();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ЭлементРасхода" Тогда
		Если ЭлементРасхода.Вид() = "ГруппыВидыРасходов" Тогда
			Флаг = 0; 
			Если ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы Тогда
				Позиция = СписокЭлементовРасхода.НайтиЗначение(ЭлементРасхода);
				СписокЭлементовРасхода.ВыбратьЗначение(ЭлементРасхода,, Позиция,, 2);    
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//****************************************************************************** 
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	
	ИспользоватьДату('01.01.1980');
	НачислятьАмортизацию = 0;
	
	Если Копирование = 1 Тогда	//копирование элемента
	    ОбъектМодернизирован = 0; 
		ОстаточнаяСтоимостьПослеМодернизации = 0;
		Возврат;
	КонецЕсли;

	Собственное = 1;
	СтавкаНалогаНаИмущество = глПолучитьСтавкуНалога("Имущество", РабочаяДата());
	Группа = Перечисление.ГруппыОС.МашиныИОборудование;
	Подразделение = глЗначениеПоУмолчанию("ОсновноеПодразделение");
	ПодлежитАмортизации = 1;
	СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииОС.Линейный;
	МетодНачисленияАмортизации = Перечисление.МетодыНачисленияАмортизации.Линейный;
	СпециальныйКоэффициент = 1;
	КоэффициентУскорения = 1;
	
КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Общие сведения");
	Форма.ИспользоватьСлой("Основной, ОбщиеСведения", 2);

	ТипыОС.ДобавитьЗначение(1, "Собственное основное средство");
	ТипыОС.ДобавитьЗначение(2, "Арендованное основное средство");
	ТипыОС.ТекущаяСтрока(ТипыОС.НайтиЗначение(Собственное));
                                                              
	ПриВыбореТипаОС();
	
	// Форме может быть передана дата просмотра и редактирования значений
	// периодических реквизитов, например, когда форма открыта из обработки
	// "ЗначенияПериодическихРеквизитов".
	глПолучитьДатуПериодическихРеквизитов(Контекст);
	
	// Системно не надо контролировать изменение периодических реквизитов.
	СохранениеПериодическихРеквизитов(2, "*");
	
	ИсторияИзмененияСостояний = СоздатьОбъект("Периодический");
	ИсторияИзмененияСостояний.ИспользоватьОбъект("Состояние", ТекущийЭлемент());
	ИсторияИзмененияСостояний.ВыбратьЗначения();
	ВведеноВЭксплуатациюДокументом = 0;
	Пока (ИсторияИзмененияСостояний.ПолучитьЗначение() = 1) и (ВведеноВЭксплуатациюДокументом = 0) Цикл
		ИстДок = ИсторияИзмененияСостояний.ТекущийДокумент();
		Если ИстДок.Выбран() = 1 Тогда
			Если ИстДок.Вид() = "ВводВЭксплуатациюОС" Тогда
				ВведеноВЭксплуатациюДокументом = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если (ВведеноВЭксплуатациюДокументом = 1) И (ПустоеЗначение(МатериалДляОтраженияВСоставеМПЗ)=1)	Тогда 
	    Форма.ДатаВводавЭксплуатацию.Доступность(0);
	КонецЕсли;
	
	Если (ВведеноВЭксплуатациюДокументом = 1) Тогда 
		Форма.ОтраженВСоставеМПЗ.Доступность(0);
		ОтраженВСоставеМПЗ=1;
		Форма.СтавкаНалогаНаИмущество.Доступность(0);
		Форма.МатериалДляОтраженияВСоставеМПЗ.Доступность(0);
	КонецЕсли;
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		Закладка=Форма.Параметр.Получить("Закладка");
		Если СокрЛП(Закладка) <> "" Тогда 
			Позиция = Форма.Закладки.НайтиЗначение(Закладка);
			Форма.Закладки.ТекущаяСтрока(Позиция);
			ПриВыбореЗакладки(Позиция, Закладка);
		КонецЕсли;
	КонецЕсли;	
	
	СписокВидовРасходов = СоздатьОбъект("СписокЗначений");
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.КосвенныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПрямыеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеТоваров);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеМатериалов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.СтроительствоОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеПрав);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ТранспортныеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПредставительскиеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РасходыНаРекламу);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НИОКР);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ВнереализационныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияПрочегоИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.БезвозмезднаяПередачаИмущества);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НеПринимаемые);
	
	СписокЭлементовРасхода = СоздатьОбъект("СписокЗначений");
	СписокЭлементовРасхода.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.Амортизация);
	
	ПриИзмененииВидаРасхода();

	Если ПустоеЗначение(МатериалДляОтраженияВСоставеМПЗ)=0 Тогда
		ОтраженВСоставеМПЗ=1
	Иначе
		ОтраженВСоставеМПЗ=0
	КонецЕсли;
	ПриУстановкеФлажкаОтраженВСоставеМПЗ();	
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриПовторномОткрытии()
	
	// Форме может быть передана дата просмотра и редактирования значений
	// периодических реквизитов, например, когда форма открыта из обработки
	// "ЗначенияПериодическихРеквизитов".
	глПолучитьДатуПериодическихРеквизитов(Контекст);
	
КонецПроцедуры // ПриПовторномОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	
	Если Собственное = 0 Тогда
		СтавкаНалогаНаИмущество = 0;
	КонецЕсли;                      
	
	Если (ОтраженВСоставеМПЗ=0) И (ПустоеЗначение(МатериалДляОтраженияВСоставеМПЗ)=0) Тогда
	    МатериалДляОтраженияВСоставеМПЗ="";
	КонецЕсли;
	
	Если (ОтраженВСоставеМПЗ=1) и (ПустоеЗначение(МатериалДляОтраженияВСоставеМПЗ)=1) Тогда
		Если Вопрос(	"Для основного средства, отраженного в составе МПЗ,
						|на закладке ""Бухгалтерский учет"" следует заполнить 
						|реквизит ""Материал для отражения в составе МПЗ"".
						|Вернуться к редактированию объекта?","Да+Нет") = "Да" Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;  
	КонецЕсли;

	СтатусВозврата(глБухЗаписьПериодическихРеквизитов(Контекст));

КонецПроцедуры // ПриЗаписи()        