////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем ПодписьСтатьиОтчисленийНаСоцНужды;
Перем ПодписьСтатьиПрочихОтчисленийНаСоцНужды;
Перем Сч97;
Перем СписокВидовРасходов;
Перем СписокКосвенныхРасходов;
Перем СписокПрямыхРасходов;

//******************************************************************************
// МожноВыбиратьСтатьюОтчислений()
//
Функция МожноВыбиратьСтатьюОтчислений()
	
	Если СчетЗатрат.Выбран() = 1 Тогда
		Для А = 1 По 3 Цикл
			Если (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиЗатратНаПроизводство) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиЗатратОбслуживающихПроизводств) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиОбщепроизводственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиОбщехозяйственныхЗатрат) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиИздержекОбращения) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиКоммерческихРасходов) или
				 (СчетЗатрат.ВидСубконто(А) = ВидыСубконто.СтатьиРасходовНаПродажу) Тогда
				Возврат А;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции // МожноВыбиратьСтатьюОтчислений()

//******************************************************************************
// ПриВыбореНазначенияСтатьиРасходов()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПриВыбореНазначенияСтатьиРасходов()
	
	Если (НазначениеСтатьиРасходов = 1) и (Форма.Закладки.ТекущаяСтрока() = 1) Тогда 
	    Форма.Закладки.ДобавитьЗначение("Начисленные налоги с ФОТ");
		
	Иначе
		Позиция = Форма.Закладки.НайтиЗначение("Начисленные налоги с ФОТ");
		Если Позиция > 0 Тогда
		    Форма.Закладки.УдалитьЗначение(Позиция);
		КонецЕсли;
	КонецЕсли; 
	
	Если (НазначениеСтатьиРасходов = 2) И (СпособПризнанияРасходов <> Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням) Тогда
		Ответ = Вопрос("Расходы по добровольному страхованию следует списывать
	             	|пропорционально количеству календарных дней действия договора
				 	|Изменить способ признания расходов?", 4, 60);
			
		Если (Ответ = 6) Или (Ответ = -1) Тогда
			
			СпособПризнанияРасходов = Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням;
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры // ПриВыбореНазначенияСтатьиРасходов()   

Процедура ПриИзмененииСпособаПризнанияРасходов()

	Если (НазначениеСтатьиРасходов = 2) И (СпособПризнанияРасходов <> Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням) Тогда
		Если Вопрос("Расходы по добровольному страхованию следует списывать
	             	|пропорционально количеству календарных дней действия договора
				 	|Продолжить?", 4, 60) <> 6 Тогда
			
			СпособПризнанияРасходов = Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры // ПриИзмененииСпособаПризнанияРасходов()

//******************************************************************************
// ПриВыбореСчета()
// 
// Вызывается из формул элементов диалога:
//  Счет.
//
// Описание:
//  Устанавливает тип объектов аналитического учета по счету затрат.
//
Процедура ПриВыбореСчета()
	
	Если Форма.АктивныйЭлемент() = "СчетЗатрат" Тогда
		Если СчетЗатрат.Забалансовый = 1 Тогда
		    Предупреждение("Счет отнесения затрат должен быть балансовым.");
		КонецЕсли;
	КонецЕсли;
	
	Для А = 1 По 3 Цикл
		НазначитьТип("Субконто" + А, СчетЗатрат.ВидСубконто(А));
	КонецЦикла;
	
	НомерСубконто = МожноВыбиратьСтатьюОтчислений();
	Если (НомерСубконто  > 0) и (НазначениеСтатьиРасходов = 1) Тогда
		ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по начисленному ЕСН";
		ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "Статья затрат по прочим отчисл. с ФОТ";
		Форма.СтатьяОтчисленийНаСоцНужды.Видимость(1);
		Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(1);
		
	Иначе
		ПодписьСтатьиОтчисленийНаСоцНужды = "";
		ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
		Форма.СтатьяОтчисленийНаСоцНужды.Видимость(0);
		Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
	КонецЕсли;
	
	Если НомерСубконто  > 0 Тогда
		НазначитьВид(СтатьяОтчисленийНаСоцНужды, СчетЗатрат.ВидСубконто(НомерСубконто));
		НазначитьВид(СтатьяПрочихОтчисленийНаСоцНужды, СчетЗатрат.ВидСубконто(НомерСубконто));
	КонецЕсли;
	
	Если (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		глПроверкаКорректныхПроводок(СчетЗатрат,Сч97);
	КонецЕсли;

КонецПроцедуры // ПриВыбореСчета()

//******************************************************************************
//
// ПриИзмененииВидаРасхода()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Графа "Вид расхода".
//
// Описание:
//  Осуществляется управление реквизитов "объект" и "элемент расхода"
//  в зависимости от выбранного вида расхода.
//
Процедура ПриИзмененииВидаРасхода()
	
	ТипЭлементаРасхода = "";
	ВидыОбъекта = "";
	Если ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеТоваров Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеМатериалов Тогда
		ВидыОбъекта = "Материалы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства,Оборудование";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.СтроительствоОсновныхСредств Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеНематериальныхАктивов Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг Тогда
		ВидыОбъекта = "ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПриобретениеПрав Тогда
		ВидыОбъекта = "Договоры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание Тогда
		ВидыОбъекта = "Номенклатура";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.НИОКР Тогда
		ВидыОбъекта = "ОбъектыСтроительства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов Тогда
		ВидыОбъекта = "РасходыБудущихПериодов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.КосвенныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ПрямыеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ГруппыВидыРасходов";
		ВидыОбъекта = "ВидыНоменклатуры";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВнереализационныеРасходы Тогда
		ТипЭлементаРасхода = "Перечисление.ВнереализационныеРасходы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияОсновныхСредств Тогда
		ВидыОбъекта = "ОсновныеСредства";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияНематериальныхАктивов Тогда
		ВидыОбъекта = "НематериальныеАктивы";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.РеализацияПрочегоИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОбъектыСтроительства,ЦенныеБумаги";
		
	ИначеЕсли ВидРасхода = Перечисление.ВидыРасходов.ВыбытиеИмущества Тогда
		ВидыОбъекта = "Материалы,Оборудование,ОсновныеСредства,НематериальныеАктивы,ОбъектыСтроительства,ЦенныеБумаги";
	КонецЕсли;
	
	НазначитьТип("ЭлементРасхода", ТипЭлементаРасхода);
	Если ПустоеЗначение(ТипЭлементаРасхода) = 1 Тогда
		Форма.ЭлементРасхода.Доступность(0);
		Форма.ПодписьЭлементаРасхода.Доступность(0);
		
	Иначе
		Форма.ЭлементРасхода.Доступность(1);
		Форма.ПодписьЭлементаРасхода.Доступность(1);
	КонецЕсли;
	
	Если ПустоеЗначение(ВидыОбъекта) = 0 Тогда
		Если Найти("," + ВидыОбъекта + ",", "," + Объект.Вид() + ",") = 0 Тогда
			Объект = "";
		КонецЕсли;
		Объект.ВидыДляВыбора(ВидыОбъекта);
		Форма.Объект.Доступность(1);
		Форма.ПодписьОбъекта.Доступность(1);
		
	Иначе
		Объект = "";
		Форма.Объект.Доступность(0);
		Форма.ПодписьОбъекта.Доступность(0);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииВидаРасхода()

//****************************************************************************** 
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	
	Если Копирование = 1 Тогда
		Возврат;
	КонецЕсли;
	
	НазначениеСтатьиРасходов = 3;
	СпособПризнанияРасходов = Перечисление.СпособыПризнанияРасходов.ПоМесяцам;
КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер, Значение)
	
	Если Значение = "Общие сведения" Тогда
		Форма.ИспользоватьСлой("ОбщиеСведения, Основной", 2);

	ИначеЕсли Значение = "Бухгалтерский учет" Тогда
	    Форма.ИспользоватьСлой("СчетЗатрат, Основной", 2);
		
		Если (МожноВыбиратьСтатьюОтчислений() > 0) и (НазначениеСтатьиРасходов = 1) Тогда
			ПодписьСтатьиОтчисленийНаСоцНужды = "Статья затрат по начисленному ЕСН";
			ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "Статья затрат по прочим отчисл. с ФОТ";
			Форма.СтатьяОтчисленийНаСоцНужды.Видимость(1);
			Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(1);
			
		Иначе
			ПодписьСтатьиОтчисленийНаСоцНужды = "";
			ПодписьСтатьиПрочихОтчисленийНаСоцНужды = "";
			Форма.СтатьяОтчисленийНаСоцНужды.Видимость(0);
			Форма.СтатьяПрочихОтчисленийНаСоцНужды.Видимость(0);
		КонецЕсли;
		
	ИначеЕсли Значение = "Налоговый учет" Тогда
		Если НазначениеСтатьиРасходов = 2 Тогда 
			Форма.ИспользоватьСлой("Информация, Основной", 2);
			
		ИначеЕсли НазначениеСтатьиРасходов = 1 Тогда 
			Форма.ИспользоватьСлой("ВидРасхода, НаименованиеРасхода, Основной", 2);
			
		Иначе
			Форма.ИспользоватьСлой("ВидРасхода, Основной", 2);
		КонецЕсли;
		
	ИначеЕсли Значение = "Начисленные налоги с ФОТ" Тогда
		Форма.ИспользоватьСлой("Налоги, Основной", 2);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореЗакладки()

//*****************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, Флаг)
	
	Если (ЭлементДиалога = "СтатьяОтчисленийНаСоцНужды")
	или (ЭлементДиалога = "СтатьяПрочихОтчисленийНаСоцНужды") Тогда
		ПриВыбореСчета();
		НомерСубконто = МожноВыбиратьСтатьюОтчислений();
	КонецЕсли;	
     	
	Если ЭлементДиалога = "ВидРасхода" Тогда
		Флаг = 0;
		Позиция = СписокВидовРасходов.НайтиЗначение(ВидРасхода);
		ВыбранныйВидРасхода = ВидРасхода;
		Если СписокВидовРасходов.ВыбратьЗначение(ВыбранныйВидРасхода,, Позиция,, 2) = 1 Тогда
			Если ВидРасхода <> ВыбранныйВидРасхода Тогда
				ВидРасхода = ВыбранныйВидРасхода;
			    ПриИзмененииВидаРасхода();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "ЭлементРасхода" Тогда
		Если ЭлементРасхода.Вид() = "ГруппыВидыРасходов" Тогда
			Флаг = 0;
				Позиция = СписокКосвенныхРасходов.НайтиЗначение(ЭлементРасхода);
				СписокКосвенныхРасходов.ВыбратьЗначение(ЭлементРасхода,, Позиция,, 2);
		КонецЕсли;
	
	ИначеЕсли (ЭлементДиалога = "СчетЗатрат") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		СписокКорректныхПроводок.Установить("Счет", Сч97);
		глЗначениеОтбора = СписокКорректныхПроводок;
		
	ИначеЕсли ЭлементДиалога = "СтатьяОтчисленийНаСоцНужды" Тогда
		Если НомерСубконто > 0 Тогда
			ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто(), Перечисление.ГруппыВидыРасходов.ЕСН);
		КонецЕсли;
		Флаг = 0;
		
	ИначеЕсли ЭлементДиалога = "СтатьяПрочихОтчисленийНаСоцНужды" Тогда
		Если НомерСубконто > 0 Тогда 
			Если  ПустоеЗначение(СтатьяПрочихОтчисленийНаСоцНужды) = 1 Тогда
				ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто(), Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
			Иначе
				Если (СтатьяПрочихОтчисленийНаСоцНужды.ВидРасходовДляНалоговогоУчета = Перечисление.ГруппыВидыРасходов.НалогиИСборы) Тогда
					ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто());
				Иначе
					ОткрытьФорму(СчетЗатрат.ВидСубконто(НомерСубконто).ТипСубконто(), Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
				КонецЕсли;					
			КонецЕсли;
		КонецЕсли;
		Флаг = 0;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Сч97 = СчетПоКоду("97");
	
	Форма.СтатьяОтчисленийНаСоцНужды.НеИзменятьВид(1);
	Форма.СтатьяПрочихОтчисленийНаСоцНужды.НеИзменятьВид(1);
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Общие сведения");
	Форма.Закладки.ДобавитьЗначение("Бухгалтерский учет");
	Форма.Закладки.ДобавитьЗначение("Налоговый учет");
	Если НазначениеСтатьиРасходов = 1 Тогда
	    Форма.Закладки.ДобавитьЗначение("Начисленные налоги с ФОТ");
	КонецЕсли;
	ПриВыбореЗакладки(, "Общие сведения");
	
	СписокВидовРасходов = СоздатьОбъект("СписокЗначений");
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.КосвенныеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПрямыеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеТоваров);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеМатериалов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеОсновныхСредств);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.СтроительствоОсновныхСредств);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеНематериальныхАктивов);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеЦенныхБумаг);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПриобретениеПрав);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ТранспортныеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ПредставительскиеРасходы);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РасходыНаРекламу);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ГарантийныйРемонтИОбслуживание);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НИОКР);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ОсвоениеПриродныхРесурсов);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ВнереализационныеРасходы);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияОсновныхСредств);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияНематериальныхАктивов);
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.РеализацияПрочегоИмущества);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.ВыбытиеИмущества);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.БезвозмезднаяПередачаИмущества);	
	СписокВидовРасходов.ДобавитьЗначение(Перечисление.ВидыРасходов.НеПринимаемые);
	
	СписокКосвенныхРасходов = СоздатьОбъект("СписокЗначений");
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ОплатаТруда);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.МатериальныеРасходы);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.Амортизация);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ДобровольноеИОбязательноеСтрахование);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ЕСН);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.НалогиИСборы);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ПользованиеПравамиНаРезультатыИнтеллектуальнойДеятельности);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РасходыНаКомандировки);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РасходыНаРекламуБезНорм);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ИнформационныеУслуги);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ИзучениеКонъюнктурыРынка);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.РемонтОсновныхСредств);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ПодготовкаИПереподготовкаКадров);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ОхранаИмущества);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.УслугиПоУправлению);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.АудиторскиеУслуги);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ПредоставлениеРаботниковСтороннимиОрганизациями);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.НИОКР);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ОсвоениеПриродныхРесурсов);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.СоциальнаяЗащитаИнвалидов);
	СписокКосвенныхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ДругиеРасходы);
	                                                          
	СписокПрямыхРасходов = СоздатьОбъект("СписокЗначений");
	СписокПрямыхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ОплатаТруда);
	СписокПрямыхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.МатериальныеРасходы);
	СписокПрямыхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.Амортизация);
	СписокПрямыхРасходов.ДобавитьЗначение(Перечисление.ГруппыВидыРасходов.ЕСН);
	
	ПриИзмененииВидаРасхода();
	
КонецПроцедуры // ПриОткрытии()

