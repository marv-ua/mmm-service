Перем ИнфСтрока;

//******************************************************************************
// ПоКнопкеВыбораДаты()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка выбора даты.
//
// Описание:
//  Выбирается дата просмотра и редактирования значений периодических реквизитов 
// выбирается по кнопке, чтобы не менялся признак модифицированности формы.
//
Процедура ПоКнопкеВыбораДаты()
	
	глВвестиДатуПериодическихРеквизитов(Контекст, 0);
		
КонецПроцедуры // ПоКнопкеВыбораДаты()


//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Просмотр и редактирование ставок налогов выполняется
					   |в списке налогов и отчислений  по кнопке ""Ставки""
					   |(меню ""Справочники - Налоги - Налоги и отчисления"").");
		СтатусВозврата(0);

	ИначеЕсли (ИспользоватьВладельца().Код <> "ПФР_страх") и (ИспользоватьВладельца().Код <> "ПФР_нак") Тогда
		Форма.Процент2.Видимость(0);
		Форма.Процент3.Видимость(0);
		ИнфСтрока = "";
		
	Иначе
		ИнфСтрока = "Для каждого предела указаны тарифы страховых взносов:
			|- для мужчин 1952 года рождения и старше и женщин 1956 года рождения и старше;
			|- для мужчин с 1953 по 1966 год рождения и женщин с 1957 по 1966 год рождения;
			|- для лиц 1967 года рождения и моложе";
	КонецЕсли;
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		ИспользоватьДату(Форма.Параметр.Получить("Дата"));
		ИспользоватьДату(ИспользоватьДату());
		ИспользоватьВладельца(Форма.Параметр.Получить("Владелец"));    
	Иначе
		ИспользоватьДату(РабочаяДата());
		ИспользоватьДату(ИспользоватьДату());
	КонецЕсли;
	СохранениеПериодическихРеквизитов(2, "*");
	ИерархическийСписок(1);
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	
	СтатусВозврата(глБухЗаписьПериодическихРеквизитов(Контекст));
	
КонецПроцедуры // ПриЗаписи()
