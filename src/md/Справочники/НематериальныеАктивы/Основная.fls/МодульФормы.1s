////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
Перем СписокНедоступныхКолонок;
Перем ИдентификаторФормы;
Перем ПолныйСписокКолонок;

//******************************************************************************
// ИнформационнаяСтрока()
//
Функция ИнформационнаяСтрока()
	
	Перем Стр;

	Стр = "";
	Если ТекущийЭлемент().Выбран() = 0 Тогда
	ИначеЕсли ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
	ИначеЕсли КонМесяца(РабочаяДата()) > КонецРассчитанногоПериодаБИ() Тогда
		Стр = "На " + Формат(РабочаяДата(), "Д (0)ДДММГГГ") + " бухгалтерские итоги не рассчитаны!"+РазделительСтрок+
			"Расчет итогов выполняется в режиме"+РазделительСтрок+
			"""Операции - Управление бухгалтерскими итогами"".";
	Иначе
		СведенияО_НМА = глРасчетАмортизацииНМА(ТекущийЭлемент(), КонМесяца(ИспользоватьДату()));
		БалансоваяСтоимость = СведенияО_НМА.Получить("БалансоваяСтоимостьКон");
		НачисленнаяАмортизация = СведенияО_НМА.Получить("НачисленнаяАмортизацияКон");
		СчетНачисленияАмортизации = СведенияО_НМА.Получить("СчетНачисленияАмортизации");
		ОстаточнаяСтоимость = БалансоваяСтоимость - НачисленнаяАмортизация;
		СчетНачисленияАмортизации = ?(ПустоеЗначение(СчетНачисленияАмортизации)=0, СокрЛП(СчетНачисленияАмортизации.Код), " --- ");
		Если Состояние = Перечисление.СостоянияНМА.Списан Тогда
		    БалансоваяСтоимость = 0;
			НачисленнаяАмортизация = 0;
			ОстаточнаяСтоимость = 0;
		КонецЕсли;

		Стр = "Балансовая стоимость (04) : "  + СокрЛ(Формат(БалансоваяСтоимость,"Ч015.2-,")) + РазделительСтрок +
			  "Начисленная амортизация ("+СчетНачисленияАмортизации+") : " + СокрЛ(Формат(НачисленнаяАмортизация,"Ч015.2-,")) + РазделительСтрок +
			  "Остаточная стоимость: " + СокрЛ(Формат(ОстаточнаяСтоимость,"Ч015.2-,")) + РазделительСтрок +
			  "Данные актуальны на конец дня " + Формат(КонМесяца(ИспользоватьДату()), "Д (0)ДДММГГГГ");
	КонецЕсли;

	Возврат Стр;
КонецФункции //ИнформационнаяСтрока
//_____________________________________________________________________________
Процедура ПостроитьОтчет()
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "ОтчетПоНМА");
    Расшифровка.Установить("ВариантФормирования", 1);
    Расшифровка.Установить("ДатаНач", НачалоПериодаБИ());
    Расшифровка.Установить("ДатаКон", КонецПериодаБИ());
    Расшифровка.Установить("ОбъектНМА", ТекущийЭлемент());

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.ОтчетПоНМА");
	глФлагРасшифровки = 0;
КонецПроцедуры //ПостроитьОтчет
//_____________________________________________________________________________
Процедура Отчет()
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "АнализСубконто");
	Расшифровка.Установить("РазделительУчета", БухИтоги.ИспользоватьРазделительУчета());
	Расшифровка.Установить("Дата1", НачМесяца(РабочаяДата()));
	Расшифровка.Установить("Дата2", КонМесяца(РабочаяДата()));
	Расшифровка.Установить("ВидСубконто1", ВидыСубконто.НематериальныеАктивы);
	Если ТекущийЭлемент().Выбран() = 1 Тогда
		Расшифровка.Установить("Субконто1", ТекущийЭлемент());
		Если ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
			Расшифровка.Установить("ПоГруппам1", 1);
			Расшифровка.Установить("ОтборСубконто1", 1);
		Иначе
			Расшифровка.Установить("ПоГруппам1", 0);
			Расшифровка.Установить("ОтборСубконто1", 2);
		КонецЕсли;
	КонецЕсли;
	Расшифровка.Установить("ДанныеПоСубсчетам", 1);

	глРасшифровка = Расшифровка;
	глОбновить = 2;
	глТаблица = "";
	глФлагРасшифровки = 1;
	ОткрытьФорму("Отчет.АнализСубконто");
	глФлагРасшифровки = 0;
	глОбновить = 0;
КонецПроцедуры //Отчет
//_____________________________________________________________________________
Процедура Печать()
	Если ТекущийЭлемент().Выбран() = 0 Тогда
	    Предупреждение("Нельзя сформировать инвентарную карточку, не указав Нематериальный актив.
						|Введите Нематериальный актив.");
	ИначеЕсли ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
	    Предупреждение("Нельзя сформировать инвентарную карточку для группы Нематериальных активов.
						|Выберите конкретный Нематериальный актив.");
	Иначе
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("НМА-1");
		ПредставлениеГода = Лев(ДатаГод(РабочаяДата()),3);
		
		ИсторияИзмененияСостояний = СоздатьОбъект("Периодический");
		ИсторияИзмененияСостояний.ИспользоватьОбъект("Состояние", ТекущийЭлемент());
		ИсторияИзмененияСостояний.ВыбратьЗначения();
		ДокументПоступления = "";
		ДокументВводаВЭксплуатацию = "";
		ДокументВыбытия = "";
		Пока ИсторияИзмененияСостояний.ПолучитьЗначение() = 1 Цикл
			ИстДок = ИсторияИзмененияСостояний.ТекущийДокумент();
			Если ИстДок.Выбран() = 1 Тогда
				Если ИстДок.Вид() = "ПоступлениеНМА" Тогда
					ДокументПоступления = ИстДок;
				
				ИначеЕсли ИстДок.Вид() = "ПринятиеКУчетуНМА" Тогда
					ДокументПринятияКУчету = ИстДок;
	
				ИначеЕсли (ИстДок.Вид() = "ПередачаНМА") или (ИстДок.Вид() = "СписаниеНМА") Тогда
					ДокументВыбытия = ИстДок;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ТипЗначенияСтр(ДокументПоступления) = "Документ" Тогда
		    ДокументаПоступленияДата = ДокументПоступления.ДатаДок;
			ДокументаПоступленияНомер = ДокументПоступления.НомерДок;
		Иначе
		    ДокументаПоступленияДата = "";
			ДокументаПоступленияНомер = "";
		КонецЕсли;
		Если ТипЗначенияСтр(ДокументПринятияКУчету) = "Документ" Тогда
		    ДокументПринятияКУчетуДата = ДокументПринятияКУчету.ДатаДок;
			ДокументПринятияКУчетуНомер = ДокументПринятияКУчету.НомерДок;
		Иначе
		    ДокументВводаВЭксплуатациюДата = "";
			ДокументВводаВЭксплуатациюНомер = "";
		КонецЕсли;
		Если ТипЗначенияСтр(ДокументВыбытия) = "Документ" Тогда
		    ДокументВыбытияДата = ДокументВыбытия.ДатаДок;
			ДокументВыбытияНомер = ДокументВыбытия.НомерДок;
		Иначе
		    ДокументВыбытияДата = "";
			ДокументВыбытияНомер = "";
		КонецЕсли;
	
		Ит = СоздатьОбъект("БухгалтерскиеИтоги"); 
		Ит.Рассчитать(, РабочаяДата(), "04.1, 05",,,);
		БалансоваяСтоимость = Ит.СКД("04.1", "С",, ТекущийЭлемент());
		Если БалансоваяСтоимость > 0 Тогда
		    СубСчет = "04.1";
		Иначе
			СубСчет = "";
		КонецЕсли;
		НачисленнаяАмортизация = Ит.СКК("05", "С",, ТекущийЭлемент());
		Если ТекущийЭлемент().СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииНМА.Линейный Тогда
		    СрокПолезногоИспользования = ""+ТекущийЭлемент().СрокПолезногоИспользования+" мес";
		Иначе
		    СрокПолезногоИспользования = "";
		КонецЕсли;
	    
		Если ТекущийЭлемент().СчетЗатрат.Получить(РабочаяДата()).Выбран() = 1 Тогда
		    КодСчетаЗатрат = ТекущийЭлемент().СчетЗатрат.Получить(РабочаяДата()).Код;
		Иначе
			КодСчетаЗатрат = "";
		КонецЕсли;
	
		
		Таб.Вывести();
	    Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,0,0,"ОпцииПечатиНМА1","ОкноНМА1");
		Таб.Показать("Инвентарная карточка");
	КонецЕсли;
КонецПроцедуры //Печать

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
		
	ИначеЕсли НомерТекущейФормы = 2  Тогда
		ПостроитьОтчет();
		
	ИначеЕсли НомерТекущейФормы = 3  Тогда
		Отчет();
		
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Контекст, "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Справочник." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//******************************************************************************
// ПоКнопкеВыбораДаты()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка выбора даты.
//
// Описание:
//  Выбирается дата просмотра значений периодических реквизитов.
//
Процедура ПоКнопкеВыбораДаты()
	
	ТекИспользоватьДату = ИспользоватьДату();
	глВвестиДатуПериодическихРеквизитов(Контекст, 0);
	Если ИспользоватьДату() > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		               "Расчет итогов выполняется в режиме"+РазделительСтрок+
					   """Операции - Управление бухгалтерскими итогами"".");
		ИспользоватьДату(ТекИспользоватьДату);
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеВыбораДаты()

//******************************************************************************
// ПоКнопкеИстория()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка "История".
//
// Описание:
//  Вызывается обработка "ЗначенияПериодическихРеквизитов" для просмотра истории 
// значений периодических реквизитов.
//
Процедура ПоКнопкеИстория()
	
    Перем ВидимыеРеквизиты;
	
	Стр = "МОЛ,Состояние,ФактическийОбъемПродукцииРаботЗаМесяц,СпециальныйКоэффициент,"+
		  "СчетЗатрат,Субконто1,Субконто2,Субконто3,"+
		  "ВидРасхода,ЭлементРасхода,Объект";
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.Установить("Все реквизиты", Стр);
	Меню.Установить("Состояние НМА", "Состояние");
	Меню.Установить("Счет затрат",   "СчетЗатрат, Субконто1, Субконто2, Субконто3");
	Меню.Установить("Вид расхода",   "ВидРасхода, ЭлементРасхода, Объект");
	
	Если Меню.ВыбратьЗначение(ВидимыеРеквизиты, "", 0, 60, 1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	глЗначенияПериодическихРеквизитов(Контекст, , , ВидимыеРеквизиты);
	
КонецПроцедуры // ПоКнопкеИстория()

//******************************************************************************
// ПолучитьПорядокНачисленияАмортизацииТекст()
//
// Параметры:
//
// Возвращаемое значение:
//  "Строка" - Порядок начисления амортизации
//
// Вызывается из формул элементов диалога:
//  Колонка "Начислять амортизацию".
//
// Описание:
//
Функция ПолучитьПорядокНачисленияАмортизацииТекст()
	
	Перем Результат;
	
	Результат = "";
	Если ПорядокНачисленияАмортизации = 1 Тогда
		Результат = "Не начислять";	
	ИначеЕсли ПорядокНачисленияАмортизации = 2 Тогда
		Результат = "По кредиту счета 05";	
	ИначеЕсли ПорядокНачисленияАмортизации = 3 Тогда
		Результат = "По кредиту счета 04";	
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции // ПолучитьПорядокНачисленияАмортизацииТекст()	

//******************************************************************************
// УправлениеДиалогом()
//
// Параметры:
//  Нет
//
// Описание:
//  Управляет доступностью колонок
//
Процедура УправлениеДиалогом()
	
	Для Сч = 1 По СписокНедоступныхКолонок.РазмерСписка() Цикл
		Форма.ПолучитьАтрибут(СписокНедоступныхКолонок.ПолучитьЗначение(Сч)).Доступность(0);
	КонецЦикла;
	
КонецПроцедуры // УправлениеДиалогом()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	РедактироватьВДиалоге(1,1);
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Справочник." + Вид(),ТаблицаПечФорм);
	
	// Управление видимостью колонок	
	глУстановитьВидимостьКолонок(Контекст, ИдентификаторФормы, ПолныйСписокКолонок, 1);
	
	СохранениеПериодическихРеквизитов(0);

КонецПроцедуры //ПриОткрытии

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриРедактированииНовойСтроки()
	
	УправлениеДиалогом();
	
	ИспользоватьДату('01.01.1980');
	
	Копирование = ?(ПустоеЗначение(Наименование) = 1, 0, 1);
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;

	ПорядокНачисленияАмортизации = 2;
	СпособНачисленияАмортизации = Перечисление.СпособыНачисленияАмортизацииНМА.Линейный;
	
КонецПроцедуры // ПриРедактированииНовойСтроки()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеРедактированияСтроки()
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
ИдентификаторФормы	=	"Справочник_НематериальныеАктивы_ФормаСписка_Основная";

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Инвентарная карточка НМА-1";
ТаблицаПечФорм.Кнопка       = "НМА-1";

ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Отчет по нематериальным активам";
ТаблицаПечФорм.Кнопка       = "Отчет";

ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Анализ субконто ""Нематериальные активы""";
ТаблицаПечФорм.Кнопка       = "Анализ";

// Список колонок видимостью которых будем управлять
ПолныйСписокКолонок = СоздатьОбъект("СписокЗначений");
ПолныйСписокКолонок.ДобавитьЗначение("Код", "Код");
ПолныйСписокКолонок.ДобавитьЗначение("Наименование", "Наименование");
ПолныйСписокКолонок.ДобавитьЗначение("ВидОбъекта", "Вид объекта учета (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Группа", "Вид (группа) НМА");
ПолныйСписокКолонок.ДобавитьЗначение("ДатаПриобретения", "Дата приобретения");
ПолныйСписокКолонок.ДобавитьЗначение("СпособПоступления", "Способ поступления");
ПолныйСписокКолонок.ДобавитьЗначение("МОЛ", "Ответственное лицо (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Состояние", "Состояние (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("ПервоначальнаяСтоимость", "Первоначальная стоимость");
ПолныйСписокКолонок.ДобавитьЗначение("ДатаПринятияКУчету", "Дата принятия к учету");
ПолныйСписокКолонок.ДобавитьЗначение("ПорядокНачисленияАмортизацииТекст", "Порядок начисления амортизации"); // вычисляемая колонка
ПолныйСписокКолонок.ДобавитьЗначение("СпособНачисленияАмортизации", "Способ начисления амортизации");
ПолныйСписокКолонок.ДобавитьЗначение("СрокПолезногоИспользования", "Срок полезного использования");
ПолныйСписокКолонок.ДобавитьЗначение("СчетЗатрат", "Счет затрат (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Субконто1", "Субконто 1 (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Субконто2", "Субконто 2 (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Субконто3", "Субконто 3 (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("АмортизацияНачисленнаяДо2002", "Сумма амортизации, начисленной до 01.01.2002 г.");
ПолныйСписокКолонок.ДобавитьЗначение("ПервоначальнаяСтоимостьН", "Первоначальная стоимость НУ");
ПолныйСписокКолонок.ДобавитьЗначение("СрокПолезногоИспользованияН", "Срок полезного использования НУ");
ПолныйСписокКолонок.ДобавитьЗначение("АмортизационнаяГруппа", "Амортизационная группа");
ПолныйСписокКолонок.ДобавитьЗначение("МетодНачисленияАмортизации", "Метод начисления амортизации");
ПолныйСписокКолонок.ДобавитьЗначение("СпециальныйКоэффициент", "Специальный коэффициент (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("БазоваяСтоимость", "Базовая cтоимость (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("ВидРасхода", "Вид расхода (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("ЭлементРасхода", "Элемент расхода (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("Объект", "Объект (редактируется в форме элемента)");
ПолныйСписокКолонок.ДобавитьЗначение("ДатаСписания", "Дата списания");
ПолныйСписокКолонок.ДобавитьЗначение("ПричинаСписания", "Причина списания");

//	При первом запуске, пока пользователь не настроил видимость колонок,
//  будут видимы только колонки "Код","Наименование"
ПолныйСписокКолонок.Пометка(1,	1);
ПолныйСписокКолонок.Пометка(2, 	1);

// Список недоступных для редактирования колонок
СписокНедоступныхКолонок = СоздатьОбъект("СписокЗначений");
СписокНедоступныхКолонок.ДобавитьЗначение("МОЛ");
СписокНедоступныхКолонок.ДобавитьЗначение("Состояние");
СписокНедоступныхКолонок.ДобавитьЗначение("СчетЗатрат");
СписокНедоступныхКолонок.ДобавитьЗначение("Субконто1");
СписокНедоступныхКолонок.ДобавитьЗначение("Субконто2");
СписокНедоступныхКолонок.ДобавитьЗначение("Субконто3");
СписокНедоступныхКолонок.ДобавитьЗначение("СпециальныйКоэффициент");
СписокНедоступныхКолонок.ДобавитьЗначение("БазоваяСтоимость");
СписокНедоступныхКолонок.ДобавитьЗначение("ВидРасхода");
СписокНедоступныхКолонок.ДобавитьЗначение("ЭлементРасхода");
СписокНедоступныхКолонок.ДобавитьЗначение("Объект");

