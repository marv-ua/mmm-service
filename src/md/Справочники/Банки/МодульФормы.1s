//******************************************************************************
//	ПроверкаНомераСчета(НомерСчета)
//
//	Параметры:          
//  	Номер проверяемого счета
//
//	Возвращаемое значение:
//  	0 - если все нормально
//  	не 0 - если счет указан неверно.
//
//	Описание:
//		Функция проверяет правильность указания номера расчетного счета
// 		по алгоритму проверки правильности расчета контрольного ключа.

Функция ПроверкаНомераСчета(НомерСчета)
	
	Перем Поз; // счетчик цикла

	// Весовые коэффициенты
	Вес="71371371371371371371371";
	КонтрСумма=0;
	Для Поз=1 По 23 Цикл
		Произв=Число(Сред(НомерСчета, Поз, 1))*Число(Сред(Вес, Поз, 1));
		МладшийРазряд=Число(Прав(Строка(Произв),1));
		КонтрСумма=КонтрСумма+МладшийРазряд;
	КонецЦикла;
	Проверка=КонтрСумма/10-Цел(КонтрСумма/10);
	
	Возврат Проверка;

КонецФункции // ПроверкаНомераСчета()

//******************************************************************************
//	ПроверкаСчета()
//
//	Описание:
//		Процедура предназначена для проверки правильности указания номеров 
//		корреспондентских счетов и БИК, так как вероятность ошибки при вводе 20-разрядного
//		номера велика, и такая проверка будет удобным дополнительным сервисом.
//		Правильность указания банковских реквизитов проверяется по следующим критериям:
//		- длина номера счета должна быть 20 символов;
//		- длина БИК должна быть 9 символов;
//		- БИК должен быть числом (проверять номер счета на число нельзя, так как в случае
//		  использования клиринговой валюты в 6-м разряде номера может стоять символ
//		  (хотя это редкий случай));
//		- номера счетов и БИК совместно проверяются по алгоритму проверки правильности
//		  расчета контрольного ключа.
//		Если какое-либо из этих условий не выполняется, выдается сообщение в окно сообщений,
//		но информация о расчетном счете все равно записывается в справочник.

Процедура ПроверкаСчета()
	
	ПроверятьКлючКоррСчета=1;

	// Длина БИК должна быть равна 9, БИК должен быть числом
	Если (СтрДлина(СокрЛП(Код)) <> 9) ИЛИ (Число(Код) = 0) Тогда
    	Сообщить( "Возможно, БИК указан неверно.", "!" );
    	ПроверятьКлючКоррСчета=0;
	КонецЕсли;

	// Коррсчет может отсутствовать
	Если ПустаяСтрока(КоррСчет) = 1 Тогда
		ПроверятьКлючКоррСчета=0;
	// Иначе длина номера корр. счета должна быть равна 20
	ИначеЕсли СтрДлина(СокрЛП(КоррСчет)) <> 20 Тогда
	    Сообщить( "Возможно, номер корреспондентского счета указан неверно.", "!" );
	    ПроверятьКлючКоррСчета=0;
	КонецЕсли;

	Если ПроверятьКлючКоррСчета=1 Тогда
		// Для проверки к номеру корреспондентского счета слева добавляются 0
		// и 5-й и 6-й разряды БИК
		Если ПроверкаНомераСчета("0"+Сред(Код, 5, 2)+КоррСчет) <> 0 Тогда
		    Сообщить( "Возможно, номер корсчета или БИК указаны неверно.", "!" );
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПроверкаСчета()

//******************************************************************************
// Предопределенная процедура.

Процедура ПриЗаписи()
	
	ПроверкаСчета();
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
//	Предопределенная процедура.

Процедура ПриЗакрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
		ФормаСписка=Форма.Параметр.Получить("Форма списка");
		Если ТипЗначенияСтр(ФормаСписка)="ГрупповойКонтекст" Тогда
			ФормаСписка.АктивизироватьОбъект(ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()
