//******************************************************************************
//	НазначитьТипЗначения()
//
//	Описание:

Процедура НазначитьТипЗначения(СправОтбора,СправОтбораДубл)
	
	МД = Метаданные;
	ВидОбъекта = СтрЗаменить(СтрЗаменить(ТекущийЭлемент().ВидОбъекта,"Регистр.",""),"ПланСчетов.",".");
	Атрибут = СправОтбораДубл.Атрибут;
	
	Если Найти(ТекущийЭлемент().ВидОбъекта,"Регистр.") > 0 Тогда
		Если СокрП(Атрибут) = "ТекущийДокумент" Тогда
			СправОтбора.НазначитьТип("Значение", "Документ");
		ИначеЕсли Найти(Атрибут,".Вид()") > 0 Тогда
			СправОтбора.НазначитьТип("Значение", "Строка", 100);
		Иначе
			Если МД.Регистр(ВидОбъекта).Измерение(СокрП(Атрибут)).Выбран() = 1 Тогда
				МДАтрибут = МД.Регистр(ВидОбъекта).Измерение(СокрП(Атрибут));
			Иначе
				МДАтрибут = МД.Регистр(ВидОбъекта).Реквизит(СокрП(Атрибут));
			КонецЕсли;
			СправОтбора.НазначитьТип("Значение", МДАтрибут.Тип + ?(ПустоеЗначение(МДАтрибут.Вид) = 0, "." + МДАтрибут.Вид,""), МДАтрибут.Длина, МДАтрибут.Точность);
		КонецЕсли;
	ИначеЕсли (СокрП(Атрибут) = "РазделительУчета") Тогда
		СправОтбора.НазначитьТип("Значение", МД.РазделительУчета);
	ИначеЕсли (Сред(Атрибут,1,4) = "Счет") Тогда
		СправОтбора.НазначитьТип("Значение", "Счет"+ВидОбъекта);
	Иначе
		СправОтбора.НазначитьТип("Значение",ВидыСубконто.ЗначениеПоИдентификатору(СокрП(СправОтбораДубл.ДополнительныеУсловия)));
	КонецЕсли;
	
КонецПроцедуры //НазначитьТипЗначения()

//******************************************************************************
//	Дублирование()
//
//	Вызывается из формул элементов диалога:
//	кнопка "Дублирование элемента" ("Shift + F9")
//
//	Описание:
//	Процедура копирует текущий элемент со всеми подчиненными 
//	элементами (Справочник "ФП_ОтборДанных").

Процедура Дублирование()
	
	Если (ТекущийЭлемент().Выбран() = 1) и (ТекущийЭлемент().ЭтоГруппа() = 0) и (ТекущийЭлемент().ПометкаУдаления() = 0) Тогда
		
		МД = Метаданные;
		ДублЭлемент = ТекущийЭлемент();
		СпрВыгрузки = СоздатьОбъект("Справочник.ФП_ВыгрузкаДанных");
		СпрВыгрузки.ИспользоватьРодителя(ДублЭлемент.Родитель);
		СпрВыгрузки.Новый();
		СпрВыгрузки.Наименование = ДублЭлемент.Наименование;
		Для Индекс = 1 По МД.Справочник("ФП_ВыгрузкаДанных").Реквизит() Цикл
			ИДРеквизит = МД.Справочник("ФП_ВыгрузкаДанных").Реквизит(Индекс).Идентификатор;
			СпрВыгрузки.УстановитьАтрибут(ИДРеквизит, ДублЭлемент.ПолучитьАтрибут(ИДРеквизит));
		КонецЦикла;
		СпрВыгрузки.Записать();
		
		СправОтбораДубл = СоздатьОбъект("Справочник.ФП_ОтборДанных");
		СправОтбораДубл.ИспользоватьВладельца(ДублЭлемент);
		СправОтбора = СоздатьОбъект("Справочник.ФП_ОтборДанных");
		СправОтбора.ИспользоватьВладельца(СпрВыгрузки.ТекущийЭлемент());
		
		СправОтбораДубл.ВыбратьЭлементы(1);
		Пока СправОтбораДубл.ПолучитьЭлемент() = 1 Цикл
			
			Если СправОтбораДубл.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			СправОтбора.Новый();
			СправОтбора.Код          = СправОтбораДубл.Код;
			СправОтбора.Наименование = СправОтбораДубл.Наименование;
			
			Для Индекс = 1 По МД.Справочник("ФП_ОтборДанных").Реквизит() Цикл
				ИДРеквизит = МД.Справочник("ФП_ОтборДанных").Реквизит(Индекс).Идентификатор;
				ЗначениеАтрибута = СправОтбораДубл.ПолучитьАтрибут(ИДРеквизит);
				Если МД.Справочник("ФП_ОтборДанных").Реквизит(Индекс).Тип = "Неопределенный" Тогда
					Если ИДРеквизит = "Значение" Тогда
						НазначитьТипЗначения(СправОтбора,СправОтбораДубл);
					Иначе
						ТипРеквизита = ТипЗначенияСтр(ЗначениеАтрибута);
						Если (ТипРеквизита = "Справочник") или (ТипРеквизита = "Документ") или (ТипРеквизита = "Счет") или (ТипРеквизита = "Перечисление") Тогда
							СправОтбора.НазначитьТип(ИДРеквизит, ТипРеквизита + "." + ЗначениеАтрибута.Вид());
						Иначе
							СправОтбора.НазначитьТип(ИДРеквизит, ТипРеквизита);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				СправОтбора.УстановитьАтрибут(ИДРеквизит, ЗначениеАтрибута);
			КонецЦикла;
			
			СправОтбора.Записать();
			
		КонецЦикла;
		
		АктивизироватьОбъект(СпрВыгрузки.ТекущийЭлемент());
		
	КонецЕсли;
	
КонецПроцедуры // Дублирование()

//******************************************************************************
//	ОтборИтогов()
//
//	Параметры:
//
//	Описание:

Процедура ОтборИтогов()
	
	Перем КонтекстФормы;
	
	Если (ТекущийЭлемент().Выбран() = 1) И (ТекущийЭлемент().ЭтоГруппа() = 0) Тогда
		ОткрытьФорму("Справочник.ФП_ОтборДанных", КонтекстФормы);
		
		Если ТипЗначенияСтр(КонтекстФормы) = "ГрупповойКонтекст" Тогда
			КонтекстФормы.ИспользоватьВладельца(ТекущийЭлемент(), 1);
		КонецЕсли;
		
		КонтекстФормы.ИерархическийСписок(1, 1);
	КонецЕсли;
	
КонецПроцедуры // ОтборИтогов()