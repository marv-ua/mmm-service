Перем МД;
Перем СписокЗначенийРеквизитов;

//******************************************************************************
//	ПолучитьБазовуюВалюту()
//
//	Описание:

Функция ПолучитьБазовуюВалюту()
	
	Справ = СоздатьОбъект("Справочник.ФП_Справочники");
	Если Справ.НайтиПоНаименованию("Валюты") = 0 Тогда
		Предупреждение("Не загружены справочники из конфигурации ""Финансовое планирование""!");
		Возврат "";
	КонецЕсли;
	Справ.ИспользоватьРодителя(Справ.ТекущийЭлемент(),0);
	Справ.ВыбратьЭлементы(1);
	Пока Справ.ПолучитьЭлемент(1) = 1 Цикл 
		Если Справ.Валюта.Выбран() = 1 Тогда
			Если (Справ.Валюта.Курс.Получить(РабочаяДата()) = 1) и (Справ.Валюта.Кратность.Получить(РабочаяДата()) = 1) Тогда
				Возврат Справ.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции // ПолучитьБазовуюВалюту()

//******************************************************************************
//	УстановитьНаименование()
//
//	Вызывается из формул элементов диалога:
//	"Статья", "Показатель"
//
//	Описание:

Процедура УстановитьНаименование()
	
	Если ПустаяСтрока(Наименование) = 1 Тогда
		Если ПустоеЗначение(Показатель) = 0 Тогда
			Наименование = Показатель.Наименование;
		ИначеЕсли ПустоеЗначение(Статья) = 0 Тогда
			Наименование = Статья.Наименование;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УстановитьНаименование()

//******************************************************************************
//	ПроверкаВозможностиВалютныхИтогов()

Процедура ПроверкаВозможностиВалютныхИтогов()
	
	Если ТипВалюты=2 тогда
		
		СправОтбора = СоздатьОбъект("Справочник.ФП_ОтборДанных");
		СправОтбора.ИспользоватьВладельца(ТекущийЭлемент());
		Валюта=0;
		СправОтбора.ВыбратьЭлементы(); 
		СправВыгрузки=СоздатьОбъект("Справочник.ФП_ВыгрузкаДанных");
		
		Пока СправОтбора.ПолучитьЭлемент()=1 цикл 
			Если СправОтбора.ПометкаУдаления()=0 тогда
				Если Найти(СправОтбора.Атрибут,"Счет")>0 тогда
					Если (СправОтбора.Значение.Валютный = 0) тогда
						Валюта=1; 
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Валюта=1 тогда 
			
			Предупреждение("В отборе итогов присутствуют счета, по которым учет в валюте не ведется. 
			| Вывод итогов в валюте невозможен!");
			
			ВалютаБазовая=ПолучитьБазовуюВалюту();
			ВалютаРасчетная="";
			СуммаФакт="Сумма";
			ТипВалюты=1; 
			Форма.Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверкаВозможностиВалютныхИтогов()

//******************************************************************************
//	ПриВыбореТипаВалюты()
//
//	Вызывается из формул элементов диалога:
//	"ТипВалюты"
//
//	Описание:

Процедура ПриВыбореТипаВалюты()
	
	Если ТипВалюты = 1 Тогда
		Если ПустоеЗначение(ВалютаРасчетная) = 0 Тогда
			ВалютаРасчетная = "";СуммаФакт = "";
		КонецЕсли;
	Иначе
		Если ПустоеЗначение(ВалютаБазовая) = 0 Тогда
			ВалютаБазовая = "";СуммаФакт = "";
		КонецЕсли;
	КонецЕсли;
	
	Если Найти(ВидОбъекта,"ПланСчетов.") > 0 Тогда
		Форма.ВалютаРасчетная.Редактирование(0);
		Если (ТипВалюты = 1) и (ПустоеЗначение(ВалютаБазовая) = 1) Тогда
			ВалютаБазовая = ПолучитьБазовуюВалюту();
		ИначеЕсли (ТипВалюты = 2) и (ПустоеЗначение(ВалютаРасчетная) = 1) Тогда
			ВалютаРасчетная = "ВалютаИтогов";
		КонецЕсли;
		Если ПустаяСтрока(СуммаФакт) = 1 Тогда
			Если ТипВалюты = 1 Тогда
				СуммаФакт = "Сумма";
			Иначе
				СуммаФакт = "ВалСумма";
			КонецЕсли;
		КонецЕсли;
	Иначе //Если Найти(ВидОбъекта,"Регистр.") > 0 Тогда 
		Форма.ВалютаРасчетная.Редактирование(1);
		Если (ТипВалюты = 1) и (ПустоеЗначение(ВалютаБазовая) = 1) Тогда
			ВалютаБазовая = ПолучитьБазовуюВалюту();
		КонецЕсли;
	КонецЕсли;
	
	ПроверкаВозможностиВалютныхИтогов();
	
	Если ТипВалюты = 2 Тогда
		Форма.ВалютаБазовая.Видимость(0);
		Форма.ВалютаРасчетная.Видимость(1);
	Иначе
		Форма.ВалютаБазовая.Видимость(1);
		Форма.ВалютаРасчетная.Видимость(0);
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореТипаВалюты()

//******************************************************************************
//	ПриВыбореТипаВыгрузки()
//
//	Вызывается из формул элементов диалога:
//	"ТипВыгрузки"
//
//	Описание:

Процедура ПриВыбореТипаВыгрузки()
	
	Форма.Статья.Видимость(2 - ТипВыгрузки);
	Форма.ПодпСтатья.Видимость(2 - ТипВыгрузки);
	Форма.ПоказательДебет.Видимость(2 - ТипВыгрузки);
	Форма.ПодпПоказательДебет.Видимость(2 - ТипВыгрузки);
	Форма.ПоказательКредит.Видимость(2 - ТипВыгрузки);
	Форма.ПодпПоказательКредит.Видимость(2 - ТипВыгрузки);
	Форма.Подразделение.Видимость(2 - ТипВыгрузки);
	Форма.ПодпПодразделение.Видимость(2 - ТипВыгрузки);
	Форма.кнОчиститьПодразделение.Видимость(2 - ТипВыгрузки);
	Форма.Проект.Видимость(2 - ТипВыгрузки);
	Форма.ПодпПроект.Видимость(2 - ТипВыгрузки);
	Форма.кнОчиститьПроект.Видимость(2 - ТипВыгрузки);
	
	Форма.Показатель.Видимость(ТипВыгрузки - 1);
	Форма.ПодпПоказатель.Видимость(ТипВыгрузки - 1);
	
	Если (ТипВыгрузки = 1) и (ПустоеЗначение(Показатель) = 0) Тогда
		Показатель = "";СуммаФакт = "";
	КонецЕсли;
	Если (ТипВыгрузки = 2) и (ПустоеЗначение(Статья) = 0) Тогда
		Статья = "";СуммаФакт = "";
	КонецЕсли;
	Если (ТипВыгрузки = 2) и (ПустоеЗначение(ПоказательДебет) = 0) Тогда
		ПоказательДебет = "";
	КонецЕсли;
	Если (ТипВыгрузки = 2) и (ПустоеЗначение(ПоказательКредит) = 0) Тогда
		ПоказательКредит = "";
	КонецЕсли;
	Если (ТипВыгрузки = 2) и (ПустоеЗначение(Подразделение) = 0) Тогда
		Подразделение = "";
	КонецЕсли;
	Если (ТипВыгрузки = 2) и (ПустоеЗначение(Проект) = 0) Тогда
		Проект = "";
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореТипаВыгрузки()

//******************************************************************************
//	ПриВыбореОбъектаИтогов
//
//	Вызывается из формул элементов диалога:
//	"СписокОбъектов"
//
//	Описание:

Процедура ПриВыбореОбъектаИтогов() 
	
	Если СписокОбъектов.РазмерСписка() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОбъекта <> СписокОбъектов.ПолучитьЗначение(СписокОбъектов.ТекущаяСтрока()) Тогда
		ВидОбъекта = СписокОбъектов.ПолучитьЗначение(СписокОбъектов.ТекущаяСтрока());
		ТипВалюты = 1;СуммаФакт = "";
		
		Если Найти(ВидОбъекта,"Регистр.") > 0 Тогда
			МДРегистр = МД.Регистр(СтрЗаменить(ВидОбъекта,"Регистр.",""));
			Если МДРегистр.ТипРегистра = "Обороты" Тогда
				ТипВыгрузки = 1;
				Форма.ТипВыгрузки.Видимость(0);
				Форма.ТипВыгрузкиОстатки.Видимость(0);
				ПриВыбореТипаВыгрузки();
			Иначе
				Форма.ТипВыгрузки.Видимость(1);
				Форма.ТипВыгрузкиОстатки.Видимость(1);
			КонецЕсли;
		Иначе //Если Найти(ВидОбъекта,"ПланСчетов.") > 0 Тогда
			Форма.ТипВыгрузки.Видимость(1);
			Форма.ТипВыгрузкиОстатки.Видимость(1);
		КонецЕсли;
		
	КонецЕсли;
	ПриВыбореТипаВалюты();
	
КонецПроцедуры // ПриВыбореОбъектаИтогов()

//******************************************************************************
//	ОбработкаПоказателя(Показатель, ПоказательДляВыбора)
//
//	Параметры:
//	Показатель (Справочник.Показатели) - проверяемый показатель.
//		ПоказательДебет или ПоказательКредит.
//	ПоказательДляВыбора (Справочник.Показатели) - допустимое значение или группа.
//		Статья.ПоказательДебет или Статья.ПоказательКредит.
//
//	Вызывается из формул элементов диалога:
//	ПоказательДебет
//	ПоказательКредит
//
//	Описание:
//	Процедура проверяет значения реквизитов ПоказательДебет и ПоказательКредит на 
//	соответствие значениям, указанным в реквизитах реквизита Статья.

Процедура ОбработкаПоказателя(Показатель, ПоказательДляВыбора)
	
	Если ПоказательДляВыбора.ЭтоГруппа() = 0 Тогда
		Показатель = ПоказательДляВыбора;
	ИначеЕсли Показатель.ПринадлежитГруппе(ПоказательДляВыбора) = 0 Тогда
		Показатель = ПолучитьПустоеЗначение();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПоказателя()

//******************************************************************************
//	ОбработкаСтатьи()
//
//	Вызывается из формул элементов диалога:
//	Статья
//
//	Описание:

Процедура ОбработкаСтатьи()
	
	ОбработкаПоказателя(ПоказательДебет, Статья.ПоказательДебет);
	ОбработкаПоказателя(ПоказательКредит, Статья.ПоказательКредит);
	
	Форма.ПоказательДебет.Доступность(Статья.ПоказательДебет.ЭтоГруппа());
	Форма.ПоказательКредит.Доступность(Статья.ПоказательКредит.ЭтоГруппа());
	
КонецПроцедуры // ОбработкаСтатьи()

//******************************************************************************
//	ПолучитьСписокИзмерений()
//
//	Описание:

Функция ПолучитьСписокИзмерений()
	
	СписокАтрибутов = СписокЗначенийРеквизитов.Получить("СписокАтрибутов" + СокрП(СтрЗаменить(ВидОбъекта,"Регистр.","")));
	Если ТипЗначенияСтр(СписокАтрибутов) <> "СписокЗначений" Тогда
		СписокАтрибутов = СоздатьОбъект("СписокЗначений");
		МДРегистр = МД.Регистр(СтрЗаменить(ВидОбъекта,"Регистр.",""));
		// для регистров определим по каким измерениям можно вычислить
		// валюту итогов. 
		Для Номер = 1 По МДРегистр.Измерение() Цикл
			МДИзмерение = МДРегистр.Измерение(Номер);
			
			Если (МДИзмерение.Тип = "Справочник") или (МДИзмерение.Тип = "Документ") Тогда
				Представление = "Измерение """ + МДИзмерение.Представление() + """ (" + НРег(МДИзмерение.Тип);
				
				Если ПустоеЗначение(МДИзмерение.Вид) = 0 Тогда
					МДВидОбъекта = ?(МДИзмерение.Тип = "Справочник", МД.Справочник(МДИзмерение.Вид), МД.Документ(МДИзмерение.Вид)) ;
					Представление = Представление + """" + МДИзмерение.Вид + """)";
					
					Если (МДИзмерение.Тип = "Справочник") и (МДВидОбъекта.Идентификатор = "Валюты") Тогда
						СписокАтрибутов.Установить(Представление, МДИзмерение.Идентификатор);
					Иначе
						Для Индекс = 1 По ?(МДИзмерение.Тип = "Справочник", МДВидОбъекта.Реквизит(), МДВидОбъекта.РеквизитШапки()) Цикл
							МДРеквизит = ?(МДИзмерение.Тип = "Справочник", МДВидОбъекта.Реквизит(Индекс), МДВидОбъекта.РеквизитШапки(Индекс));
							Если МДРеквизит.Вид = "Валюты" Тогда
								СписокАтрибутов.Установить(Представление, МДИзмерение.Идентификатор);
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				Иначе
					СписокАтрибутов.Установить(Представление + ")", МДИзмерение.Идентификатор);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		СписокЗначенийРеквизитов.Установить("СписокАтрибутов" + СокрП(СтрЗаменить(ВидОбъекта,"Регистр.","")), СписокАтрибутов);
	КонецЕсли;
	
	Возврат СписокАтрибутов;
	
КонецФункции // ПолучитьСписокИзмерений()

//******************************************************************************
//	ПолучитьСписокЗначенийИзмерения(ИдИзмерения)
//
//	Пераметры:
//
//	Описание:

Функция ПолучитьСписокЗначенийИзмерения(ИдИзмерения)
	
	Перем СписокАтрибутов;

	Если ПустаяСтрока(ИдИзмерения) = 0 Тогда
		СписокАтрибутов = СписокЗначенийРеквизитов.Получить("СписокАтрибутов" + СокрП(СтрЗаменить(ВидОбъекта,"Регистр.","")) + ИдИзмерения);
		Если ТипЗначенияСтр(СписокАтрибутов) <> "СписокЗначений" Тогда
			// после выбора измерения сформируем список вариантов определения
			// валюты итогов. 
			СписокАтрибутов = СоздатьОбъект("СписокЗначений");
			МДИзмерение = МД.Регистр(СтрЗаменить(ВидОбъекта,"Регистр.","")).Измерение(ИдИзмерения);
			Если ((МДИзмерение.Тип = "Справочник") или (МДИзмерение.Тип = "Документ")) Тогда
				
				Параметр = "";
				ЧислоОбъектов = 1;
				Если ПустоеЗначение(МДИзмерение.Вид) = 1 Тогда
					ЧислоОбъектов = ?(МДИзмерение.Тип = "Справочник", МД.Справочник(), МД.Документ());
				КонецЕсли;
					
				Для Номер = 1 По ЧислоОбъектов Цикл
					
					Если ПустоеЗначение(МДИзмерение.Вид) = 0 Тогда
						МДВидОбъекта = ?(МДИзмерение.Тип = "Справочник", МД.Справочник(МДИзмерение.Вид), МД.Документ(МДИзмерение.Вид)) ;
					Иначе
						МДВидОбъекта = ?(МДИзмерение.Тип = "Справочник", МД.Справочник(Номер), МД.Документ(Номер)) ;
						Параметр = "?(" + МДИзмерение.Идентификатор + ".Вид()=""" + МДВидОбъекта.Идентификатор + """,";
					КонецЕсли;
					
					Если (МДВидОбъекта.Идентификатор = "ФП_Справочники") Тогда
						Продолжить;
					КонецЕсли;
					Если (МДИзмерение.Тип = "Справочник") и (МДВидОбъекта.Идентификатор = "Валюты") Тогда
						СписокАтрибутов.Установить(МДИзмерение.Тип + " """ + МДВидОбъекта + """", Параметр + МДИзмерение.Идентификатор + ?(ПустаяСтрока(Параметр) = 0,",ВалютаВыгрузки)","") );
						Продолжить;
					КонецЕсли;
					
					Для Индекс = 1 По ?(МДИзмерение.Тип = "Справочник", МДВидОбъекта.Реквизит(), МДВидОбъекта.РеквизитШапки()) Цикл
						МДРеквизит = ?(МДИзмерение.Тип = "Справочник", МДВидОбъекта.Реквизит(Индекс), МДВидОбъекта.РеквизитШапки(Индекс));
						Если МДРеквизит.Вид = "Валюты" Тогда
							СписокАтрибутов.Установить(МДИзмерение.Тип + " """ + МДВидОбъекта + """ реквизит """ + МДРеквизит + """", Параметр + МДИзмерение.Идентификатор + "." + МДРеквизит.Идентификатор + ?(ПустаяСтрока(Параметр) = 0,",ВалютаВыгрузки)","") );
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
			КонецЕсли;
			СписокЗначенийРеквизитов.Установить("СписокАтрибутов" + СокрП(СтрЗаменить(ВидОбъекта,"Регистр.","")) + ИдИзмерения, СписокАтрибутов);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокАтрибутов;
	
КонецФункции // ПолучитьСписокЗначенийИзмерения()

//******************************************************************************
//	ПолучитьСписокРесурсов()
//
//	Описание:

Функция ПолучитьСписокРесурсов()
	
	СписокРесурсов = СписокЗначенийРеквизитов.Получить("СписокРесурсов" + СокрП(СтрЗаменить(ВидОбъекта,"Регистр.","")));
	Если ТипЗначенияСтр(СписокРесурсов) <> "СписокЗначений" Тогда
		СписокРесурсов = СоздатьОбъект("СписокЗначений");
		МДРегистр = МД.Регистр(СтрЗаменить(ВидОбъекта,"Регистр.",""));
		
		Для Номер = 1 По МДРегистр.Ресурс() Цикл
			Если МДРегистр.ТипРегистра = "Остатки" Тогда
				Если ТипВыгрузки = 1 Тогда
					СписокРесурсов.ДобавитьЗначение("Приход__" + МДРегистр.Ресурс(Номер).Идентификатор);
					СписокРесурсов.ДобавитьЗначение("Расход__" + МДРегистр.Ресурс(Номер).Идентификатор);
				Иначе
					СписокРесурсов.ДобавитьЗначение("НачОст__" + МДРегистр.Ресурс(Номер).Идентификатор);
				КонецЕсли;
			Иначе
				СписокРесурсов.ДобавитьЗначение("Сумма__" + МДРегистр.Ресурс(Номер).Идентификатор);
			КонецЕсли;
		КонецЦикла;
		
		Для Номер = 1 По МДРегистр.Реквизит() Цикл
			Если МДРегистр.Реквизит(Номер).Тип = "Число" Тогда
				СписокРесурсов.ДобавитьЗначение("Сумма__" + МДРегистр.Реквизит(Номер).Идентификатор);
			КонецЕсли;
		КонецЦикла;
	
		СписокЗначенийРеквизитов.Установить("СписокРесурсов" + СокрП(СтрЗаменить(ВидОбъекта,"Регистр.","")), СписокРесурсов);
	КонецЕсли;
	
	Возврат СписокРесурсов;
	
КонецФункции // ПолучитьСписокРесурсов()

//******************************************************************************
//	ОтборИтогов()
//
//	Параметры:
//
//	Описание:

Процедура ОтборИтогов()
	
	Перем КонтекстФормы;
	
	Спр=СоздатьОбъект("Справочник.ФП_ВыгрузкаДанных");
	Если Спр.НайтиПоКоду(Код)=0 тогда //Новый элемент
		Если Вопрос("Сохранить элемент справочника?",1,10)=1 Тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
			
	Если ТекущийЭлемент().Выбран() = 1 Тогда
		ОткрытьФорму("Справочник.ФП_ОтборДанных", КонтекстФормы);
		
		Если ТипЗначенияСтр(КонтекстФормы) = "ГрупповойКонтекст" Тогда
			КонтекстФормы.ИспользоватьВладельца(ТекущийЭлемент(), 1);
		КонецЕсли;
		
		КонтекстФормы.ИерархическийСписок(1, 1);
	КонецЕсли;
	
КонецПроцедуры // ОтборИтогов()

//******************************************************************************
//	Предопределенная процедура.

Процедура ПриОткрытии()
	
	Если ПустоеЗначение(ВидОбъекта) = 1 Тогда
		Если МД.ПланСчетов() + МД.Регистр() = 0 Тогда
			Предупреждение("В конфигурации нет источников для выгрузки!");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Для Номер = 1 По МД.ПланСчетов() + МД.Регистр() Цикл
		Если Номер <= МД.ПланСчетов() Тогда
			МДОбъект = МД.ПланСчетов(Номер);
			Синоним  = "План счетов ";
		Иначе
			МДОбъект = МД.Регистр(Номер - МД.ПланСчетов());
			Синоним  = "Регистр ";
		КонецЕсли;
		СписокОбъектов.ДобавитьЗначение(МДОбъект.ПолныйИдентификатор(), Синоним + """" + СокрЛП(МДОбъект.Представление()) + """");
	КонецЦикла;
	
	Если ПустоеЗначение(ВидОбъекта) = 1 Тогда
		СписокОбъектов.ТекущаяСтрока(1);
	Иначе
		СписокОбъектов.ТекущаяСтрока(СписокОбъектов.НайтиЗначение(ВидОбъекта));
	КонецЕсли;
	
	Если Выбран() = 1 Тогда
		СправОтбора = СоздатьОбъект("Справочник.ФП_ОтборДанных");
		СправОтбора.ИспользоватьВладельца(ТекущийЭлемент());
		Форма.СписокОбъектов.Доступность(1 - СправОтбора.ВыбратьЭлементы());
		Форма.ПодпСпискаОбъектов.Доступность(1 - СправОтбора.ВыбратьЭлементы());
	КонецЕсли;
	
	ТипВыгрузки = ?(ПустоеЗначение(Показатель) = 0, 2, 1);
	ТипВалюты   = ?(ПустоеЗначение(ВалютаРасчетная) = 0, 2, 1);
	
	Форма.ПоказательДебет.Доступность(Статья.ПоказательДебет.ЭтоГруппа());
	Форма.ПоказательКредит.Доступность(Статья.ПоказательКредит.ЭтоГруппа());
	
	Если ПустоеЗначение(Коэффициент)=1 тогда
		Коэффициент=1;
	КонецЕсли;
	
	ПриВыбореТипаВыгрузки();
	ПриВыбореОбъектаИтогов();
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
//	Предопределенная процедура.

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)
	
	Если ЭлементДиалога = "ВалютаБазовая" Тогда   
		ОткрытьФорму("Справочник.ФП_Справочники.Валюты");
		ФлагПродолжения = 0;
		
	ИначеЕсли ЭлементДиалога = "ВалютаРасчетная" Тогда   
		
		Если Найти(ВидОбъекта,"ПланСчетов.") > 0 Тогда
			СписокАтрибутов = СоздатьОбъект("СписокЗначений");
			СписокАтрибутов.ДобавитьЗначение("ВалютаИтогов");
			
		Иначе // Если Найти(ВидОбъекта,"Регистр.") > 0 Тогда
			СписокАтрибутов = ПолучитьСписокИзмерений();
			ИдИзмерения = "";
			Если СписокАтрибутов.РазмерСписка() > 0 Тогда
				ИдИзмерения = СписокАтрибутов.ПолучитьЗначение(1);
				Если  СписокАтрибутов.РазмерСписка() > 1 Тогда
					СписокАтрибутов.ВыбратьЗначение(ИдИзмерения,,,,2);
				КонецЕсли;
				СписокАтрибутов = ПолучитьСписокЗначенийИзмерения(ИдИзмерения);
			КонецЕсли;
			
		КонецЕсли;
		
		Если СписокАтрибутов.РазмерСписка() > 0 Тогда
			ВалютаРасчетная = СписокАтрибутов.ПолучитьЗначение(1);
			Если  СписокАтрибутов.РазмерСписка() > 1 Тогда
				СписокАтрибутов.ВыбратьЗначение(ВалютаРасчетная,,,,2);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭлементДиалога = "СуммаФакт" Тогда
		
		Если Найти(ВидОбъекта,"ПланСчетов.") > 0 Тогда
			СписокРесурсов = СоздатьОбъект("СписокЗначений");
			Если ТипВалюты = 1 Тогда
				СписокРесурсов.ДобавитьЗначение("Сумма");
			Иначе
				СписокРесурсов.ДобавитьЗначение("ВалСумма");
			КонецЕсли;
			
			Если ТипВыгрузки=1 тогда
				СписокРесурсов.ДобавитьЗначение("Количество");
			КонецЕсли;
			
		Иначе // Если Найти(ВидОбъекта,"Регистр.") > 0 Тогда
			// сформируем список возможных расчетных итогов регистра
			СписокРесурсов = ПолучитьСписокРесурсов();
			
		КонецЕсли;
		
		Если СписокРесурсов.РазмерСписка() > 0 Тогда
			СуммаФакт = СписокРесурсов.ПолучитьЗначение(1);
			Если  СписокРесурсов.РазмерСписка() > 1 Тогда
				СписокРесурсов.ВыбратьЗначение(СуммаФакт,,,,2);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Если (ЭлементДиалога = "ПоказательДебет") Тогда
			ОткрытьФорму("Справочник.ФП_Справочники.Показатели",Статья.ПоказательДебет);
		ИначеЕсли (ЭлементДиалога = "ПоказательКредит") Тогда
			ОткрытьФорму("Справочник.ФП_Справочники.Показатели",Статья.ПоказательКредит);
		ИначеЕсли (ЭлементДиалога = "Показатель") Тогда
			ОткрытьФорму("Справочник.ФП_Справочники.Показатели");
		ИначеЕсли (ЭлементДиалога = "Статья") Тогда
			ОткрытьФорму("Справочник.ФП_Справочники.Статьи");
		ИначеЕсли (ЭлементДиалога = "Проект") Тогда
			ОткрытьФорму("Справочник.ФП_Справочники.Проекты");
		ИначеЕсли (ЭлементДиалога = "Подразделение") Тогда
			ОткрытьФорму("Справочник.ФП_Справочники.Подразделения");
		КонецЕсли;
		ФлагПродолжения = 0;
	
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
//	Предопределенная процедура.

Процедура ПриЗаписи()
	
	Если ТипВыгрузки = 2 Тогда
		Если ПустоеЗначение(Показатель) = 1 Тогда
			Предупреждение("Не выбран показатель!");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
		Статья = "";ПоказательДебет = "";ПоказательКредит = "";
	ИначеЕсли ПустоеЗначение(Статья) = 1 Тогда
		Предупреждение("Не выбрана статья!");
		СтатусВозврата(0);Возврат;
		Показатель = "";
	КонецЕсли;
	
	Если (ПустоеЗначение(ВалютаБазовая) = 1) и (ПустоеЗначение(ВалютаРасчетная) = 1) Тогда
		Предупреждение("Не установлена валюта выгрузки итогов!");
		СтатусВозврата(0);Возврат;
	КонецЕсли;
	
	ПроверкаВозможностиВалютныхИтогов();
	
	Если ПустоеЗначение(Коэффициент)=1 тогда
		Коэффициент=1;
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************

МД = Метаданные;
СписокЗначенийРеквизитов = СоздатьОбъект("СписокЗначений");