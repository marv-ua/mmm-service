#Область ПрограммныйИнтерфейс

Процедура ВыполнитьКодУдаленно(Знач Параметр) Экспорт
	
	Для Сч = 0 По Параметр.ВГраница() Цикл
		Попытка
			ТекПараметр = Параметр[Сч];
			Если ТекПараметр.Статус = ЗатратыКлиентСервер.СтатусОтправки_Успешно() Тогда
				Продолжить;
			КонецЕсли;	
			УстановитьСтатус(ТекПараметр, ЗатратыКлиентСервер.СтатусОтправки_ВПроцессе());		
			ДлительныеОперации.СообщитьПрогресс(100*сч/Параметр.Количество(), ТекПараметр.Организация,);
			
			Расположение = РегистрыСведений.РасположениеФирм.ПолучитьПоследнее(ТекПараметр.Период, Новый Структура("Организация", ТекПараметр.Организация));
			Прокси = мммСервер.ПолучитьПрокси(Расположение.Сервер, Расположение.ИмяБазы, Расположение.Логин, Расположение.Пароль);
			
			Ответ = Неопределено;
			Попытка		
				Ответ = мммСервер.ДеСериализовать(
					Прокси.RunCode(ТекПараметр.Код)
				);			
			Исключение
				УстановитьСтатус(ТекПараметр, ЗатратыКлиентСервер.СтатусОтправки_Ошибка(), ОписаниеОшибки());
				Возврат;
			КонецПопытки;	
			
			Если НЕ Ответ.Ошибка Тогда
				Если ТипЗнч(Ответ.Результат) = Тип("Строка") ИЛИ ТипЗнч(Ответ.Результат) = Тип("Число") Тогда
					УстановитьСтатус(ТекПараметр, ЗатратыКлиентСервер.СтатусОтправки_Успешно(),, Ответ.Результат);
				Иначе
					УстановитьСтатус(ТекПараметр, ЗатратыКлиентСервер.СтатусОтправки_Успешно(),,);	
				КонецЕсли;	
			Иначе
				УстановитьСтатус(ТекПараметр, ЗатратыКлиентСервер.СтатусОтправки_Ошибка(), Ответ.ОписаниеОшибки);	
			КонецЕсли;	
		Исключение
			УстановитьСтатус(ТекПараметр, ЗатратыКлиентСервер.СтатусОтправки_Ошибка(), "ошибка подключения к версервису");
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФУнкции
Процедура УстановитьСтатус(Запись, Статус, ОписаниеОшибки = "", Комментарий = "") 
	
	Набор = РегистрыСведений.ВыполняемыйКодВБазах.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(Запись.Период);
	Набор.Отбор.Организация.Установить(Запись.Организация);
	//Набор.Отбор.Документ.Установить(Запись.Документ);
	//Набор.Отбор.Счет.Установить(Запись.Счет);
	//Набор.Отбор.КорСчет.Установить(Запись.КорСчет);
	//Набор.Отбор.Группа.Установить(Запись.Группа);
	//Набор.Отбор.ВидОперации.Установить(Запись.ВидОперации);
	//Набор.Отбор.ИНН.Установить(Запись.ИНН);
	Набор.Прочитать();
	Для Каждого ЗаписьРегистра Из Набор Цикл
		ЗаписьРегистра.Статус = Статус;
		Если Статус = ЗатратыКлиентСервер.СтатусОтправки_Ошибка() Тогда
			ЗаписьРегистра.Ошибка = ОписаниеОшибки;
		ИначеЕсли Статус = ЗатратыКлиентСервер.СтатусОтправки_Успешно() Тогда
			ЗаписьРегистра.Ошибка = "";				
		КонецЕсли;	
		Если НЕ ПустаяСтрока(Комментарий) Тогда
			ЗаписьРегистра.Результат = Комментарий;
		КонецЕсли;	
	КонецЦикла;	
	Набор.ДополнительныеСвойства.Вставить("НеВыполнятьКонтрольУдаляемых", Истина);
	Набор.Записать();
	
КонецПроцедуры
#КонецОбласти