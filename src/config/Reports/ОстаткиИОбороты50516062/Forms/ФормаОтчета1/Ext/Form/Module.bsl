&НаКлиенте
Процедура ОбновитьДанные(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", //Новый Структура("НачалоПериода, КонецПериода",)
		, ЭтотОбъект, Новый УникальныйИдентификатор,,,,);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Отчет.ПериодРегистрации = ВыбранноеЗначение.НачалоПериода;
	
	ОчиститьСообщения();
	
	//////////////////////////////////////////////////////////////
	//
 	СтруктураФоновогоЗадания = ЗапуститьВыполнениеВФоне(УникальныйИдентификатор);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);		
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	// указываем интервал обновления состояния в секундах, если не указать, 
	// то интервал будет увеличиваться при каждой итерации в 1.4 раза.
	ПараметрыОжидания.Интервал = 3;		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания,
		Новый ОписаниеОповещения("ФоновоеЗаполненияЗавершено", ЭтотОбъект),
		ПараметрыОжидания
	);
	
	
	ПодключитьОбработчикОжидания("ЗагрузкаДанныхС7", 1, Истина);
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьВыполнениеВФоне(ИдентификаторФормы, Многопоточно = Ложь)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	ПараметрыОтчета = ПодготовитьПараметрыОтчета();
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, 
		"ОтчетОСВВызовСервера.ЗаполнитьОСВИз8", 
		ПараметрыОтчета, 
		АдресХранилища
	);	
	
КонецФункции

&НаКлиенте
Процедура ФоновоеЗаполненияЗавершено(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьОповещениеПользователя("Завершено обновление данных из 8",, Результат.ПодробноеПредставлениеОшибки, БиблиотекаКартинок.Ошибка32,);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		ПоказатьОповещениеПользователя("Завершено обновление данных из 8",,, БиблиотекаКартинок.Успешно32);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметрыОтчета()
	
	Набор = РегистрыСведений.Обороты8.СоздатьНаборЗаписей();
	тз = Набор.Выгрузить();
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация"                       , Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение.ВыгрузитьЗначения());
	ПараметрыОтчета.Вставить("НачалоПериода"                     , НачалоДня(Отчет.ПериодРегистрации));
	ПараметрыОтчета.Вставить("КонецПериода"                      , КонецМесяца(Отчет.ПериодРегистрации));
	ПараметрыОтчета.Вставить("тзДанных", тз);
	//ПараметрыОтчета.Вставить("ОтборСчета", Новый Структура("сч50,сч51,сч60,сч62", Истина, Истина, Истина, Истина));

	ПараметрыОтчета.Вставить("ОбновитьДанные" , Истина);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузкаДанныхС7()
	
	//РежимСервер = ВернутьРежимСервер();
	//Если НЕ РежимСервер Тогда
		мммОтчетОстаткиКлиент.ЗагрузитОстаткиИОбороты7(Отчет.ПериодРегистрации, Ложь);
	//Иначе
	//	ЗагрузкаДанныхС7НаСервере();
	//КонецЕсли;

КонецПроцедуры